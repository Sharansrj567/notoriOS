ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"notoriOS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.section	.text.Wakeup_ISR,"ax",%progbits
  44              		.align	2
  45              		.global	Wakeup_ISR
  46              		.thumb
  47              		.thumb_func
  48              		.type	Wakeup_ISR, %function
  49              	Wakeup_ISR:
  50              	.LFB64:
  51              		.file 1 "notoriOS.c"
   1:notoriOS.c    **** /* ========================================
   2:notoriOS.c    ****  *
   3:notoriOS.c    ****  * OPEN-STORM.ORG
   4:notoriOS.c    ****  * notoriOS
   5:notoriOS.c    ****  * A non-premptive operating system for node.
   6:notoriOS.c    ****  *
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 2


   7:notoriOS.c    ****  * "To all the teachers that told me I'd never amount to nothin"
   8:notoriOS.c    ****  *      -Notorious BIG (1994)
   9:notoriOS.c    ****  *
  10:notoriOS.c    ****  * ========================================
  11:notoriOS.c    **** */
  12:notoriOS.c    **** 
  13:notoriOS.c    **** #include "notoriOS.h"
  14:notoriOS.c    **** 
  15:notoriOS.c    **** 
  16:notoriOS.c    **** // This function must always be called (when the Sleep Timer's interrupt
  17:notoriOS.c    **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  18:notoriOS.c    **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  19:notoriOS.c    **** // of the ILO) after CTW event occurred.
  20:notoriOS.c    **** CY_ISR(Wakeup_ISR) {
  52              		.loc 1 20 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 80B5     		push	{r7, lr}
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 00AF     		add	r7, sp, #0
  61              		.cfi_def_cfa_register 7
  21:notoriOS.c    ****     // Returns the state of the Sleep Timer's status register, and clears the pending interrupt sta
  22:notoriOS.c    ****     SleepTimer_GetStatus();
  62              		.loc 1 22 0
  63 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  23:notoriOS.c    **** }
  64              		.loc 1 23 0
  65 0008 00BF     		nop
  66 000a 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE64:
  69              		.size	Wakeup_ISR, .-Wakeup_ISR
  70              		.global	Data_fileName
  71              		.data
  72              		.align	2
  73              		.type	Data_fileName, %object
  74              		.size	Data_fileName, 30
  75              	Data_fileName:
  76 0000 64617461 		.ascii	"data.txt\000"
  76      2E747874 
  76      00
  77 0009 00000000 		.space	21
  77      00000000 
  77      00000000 
  77      00000000 
  77      00000000 
  78              		.comm	try_counter,1,1
  79              		.section	.rodata
  80              		.align	2
  81              	.LC0:
  82 0000 25582D25 		.ascii	"%X-%X\000"
  82      5800
  83 0006 0000     		.align	2
  84              	.LC1:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 3


  85 0008 6563322D 		.ascii	"ec2-13-59-131-167.us-east-2.compute.amazonaws.com\000"
  85      31332D35 
  85      392D3133 
  85      312D3136 
  85      372E7573 
  86 003a 0000     		.align	2
  87              	.LC2:
  88 003c 256400   		.ascii	"%d\000"
  89 003f 00       		.align	2
  90              	.LC3:
  91 0040 7265626F 		.ascii	"reboot\000"
  91      6F7400
  92              		.section	.text.ReadyOrNot,"ax",%progbits
  93              		.align	2
  94              		.global	ReadyOrNot
  95              		.thumb
  96              		.thumb_func
  97              		.type	ReadyOrNot, %function
  98              	ReadyOrNot:
  99              	.LFB65:
  24:notoriOS.c    **** 
  25:notoriOS.c    **** 
  26:notoriOS.c    **** uint8 syncData();               // Syncs data with server 
  27:notoriOS.c    **** uint8 configureRemoteParams();  // Syncs RTC with cell network and obtains meta-DB params
  28:notoriOS.c    **** uint8 makeMeasurements();       // Takes sensor measurements
  29:notoriOS.c    **** char  Data_fileName[30] = "data.txt";
  30:notoriOS.c    **** uint8 try_counter;
  31:notoriOS.c    **** 
  32:notoriOS.c    **** 
  33:notoriOS.c    **** // ==============================================
  34:notoriOS.c    **** // Ready or not, here I come, you can't hide
  35:notoriOS.c    **** // Gonna find you and take it slowly
  36:notoriOS.c    **** //      - The Fugees (1996)
  37:notoriOS.c    **** //
  38:notoriOS.c    **** // Initialize and critical hardware or routines 
  39:notoriOS.c    **** // ==============================================
  40:notoriOS.c    **** void ReadyOrNot()
  41:notoriOS.c    **** {
 100              		.loc 1 41 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 32
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104 0000 B0B5     		push	{r4, r5, r7, lr}
 105              		.cfi_def_cfa_offset 16
 106              		.cfi_offset 4, -16
 107              		.cfi_offset 5, -12
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 8AB0     		sub	sp, sp, #40
 111              		.cfi_def_cfa_offset 56
 112 0004 02AF     		add	r7, sp, #8
 113              		.cfi_def_cfa 7, 48
  42:notoriOS.c    ****     
  43:notoriOS.c    ****     isr_SleepTimer_StartEx(Wakeup_ISR); // Start Sleep ISR
 114              		.loc 1 43 0
 115 0006 3948     		ldr	r0, .L3
 116 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 4


  44:notoriOS.c    ****     SleepTimer_Start();                 // Start SleepTimer Component
 117              		.loc 1 44 0
 118 000c FFF7FEFF 		bl	SleepTimer_Start
  45:notoriOS.c    ****     
  46:notoriOS.c    ****     RTC_WriteIntervalMask(0b11111111);  // Configures what interval handlers will be called from th
 119              		.loc 1 46 0
 120 0010 FF20     		movs	r0, #255
 121 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  47:notoriOS.c    ****     RTC_Start();                        // Enables the RTC component
 122              		.loc 1 47 0
 123 0016 FFF7FEFF 		bl	RTC_Start
  48:notoriOS.c    ****     debug_start();                      // Start UART debug
 124              		.loc 1 48 0
 125 001a FFF7FEFF 		bl	debug_start
  49:notoriOS.c    ****     
  50:notoriOS.c    ****     modem_initialize();                 // Initialize the modem
 126              		.loc 1 50 0
 127 001e FFF7FEFF 		bl	modem_initialize
  51:notoriOS.c    ****     
  52:notoriOS.c    ****     updatable_parameters_initialize();  // Initialize sampling, measurement, and debug frequencies 
 128              		.loc 1 52 0
 129 0022 FFF7FEFF 		bl	updatable_parameters_initialize
  53:notoriOS.c    ****    
  54:notoriOS.c    ****     
  55:notoriOS.c    ****     // Collect system info and store in struct (modem ID, silicon ID, etc)
  56:notoriOS.c    ****       /* An array of char elements for the resulting string to be stored */
  57:notoriOS.c    ****     
  58:notoriOS.c    ****     
  59:notoriOS.c    ****     // Get unique ID of PSOC chip, this can be concatenated with the MODEM IDs to generate a unique
  60:notoriOS.c    ****     uint32 uniqueId[2];
  61:notoriOS.c    ****     // Returns the 64-bit unique ID of the device.
  62:notoriOS.c    ****     CyGetUniqueId(uniqueId); 
 130              		.loc 1 62 0
 131 0026 07F11403 		add	r3, r7, #20
 132 002a 1846     		mov	r0, r3
 133 002c FFF7FEFF 		bl	CyGetUniqueId
  63:notoriOS.c    ****     snprintf(system_info.chip_uniqueId,sizeof(system_info.chip_uniqueId),"%X-%X",(unsigned int)uniq
 134              		.loc 1 63 0
 135 0030 7A69     		ldr	r2, [r7, #20]
 136 0032 BB69     		ldr	r3, [r7, #24]
 137 0034 0093     		str	r3, [sp]
 138 0036 1346     		mov	r3, r2
 139 0038 2D4A     		ldr	r2, .L3+4
 140 003a 1821     		movs	r1, #24
 141 003c 2D48     		ldr	r0, .L3+8
 142 003e FFF7FEFF 		bl	snprintf
  64:notoriOS.c    ****     // The modem will track/popualte it's own IDs, so just point to them for now
  65:notoriOS.c    ****     system_info.modem_info = &modem_info;
 143              		.loc 1 65 0
 144 0042 2D4B     		ldr	r3, .L3+12
 145 0044 2D4A     		ldr	r2, .L3+16
 146 0046 1A60     		str	r2, [r3]
  66:notoriOS.c    ****     
  67:notoriOS.c    ****     // Configure server endpoints -- these should obviosuly be provided  remotely by the meta data-
  68:notoriOS.c    ****     snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","ec2-13-59-131-167.us-eas
 147              		.loc 1 68 0
 148 0048 2D4A     		ldr	r2, .L3+20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 5


 149 004a 2E4B     		ldr	r3, .L3+24
 150 004c 1446     		mov	r4, r2
 151 004e 1D46     		mov	r5, r3
 152 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 153 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 154 0054 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 155 0056 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 156 0058 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 157 005a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 158 005c 2B68     		ldr	r3, [r5]
 159 005e 2380     		strh	r3, [r4]	@ movhi
  69:notoriOS.c    ****    
  70:notoriOS.c    ****     system_settings.ep_port = 5000;
 160              		.loc 1 70 0
 161 0060 274B     		ldr	r3, .L3+20
 162 0062 41F28832 		movw	r2, #5000
 163 0066 5A66     		str	r2, [r3, #100]
  71:notoriOS.c    ****     // Don't need the following for new nodes
  72:notoriOS.c    ****     //snprintf(system_settings.ep_user,sizeof(system_settings.ep_user),"%s","generic_node");
  73:notoriOS.c    ****     //snprintf(system_settings.ep_pswd,sizeof(system_settings.ep_pswd),"%s","MakeFloodsCurrents");
  74:notoriOS.c    ****     //snprintf(system_settings.ep_database,sizeof(system_settings.ep_database),"%s","ARB");
  75:notoriOS.c    ****     //snprintf(system_settings.node_id,sizeof(system_settings.node_id),"%s","GGB000");
  76:notoriOS.c    ****         
  77:notoriOS.c    ****     
  78:notoriOS.c    ****     // Create a continuous alarm called alarmMeasure that triggers every 10 min (default) to take m
  79:notoriOS.c    ****     alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTI
 164              		.loc 1 79 0
 165 0068 274B     		ldr	r3, .L3+28
 166 006a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 167 006c 99B2     		uxth	r1, r3
 168 006e 274C     		ldr	r4, .L3+32
 169 0070 3846     		mov	r0, r7
 170 0072 0723     		movs	r3, #7
 171 0074 0122     		movs	r2, #1
 172 0076 FFF7FEFF 		bl	CreateAlarm
 173 007a 2246     		mov	r2, r4
 174 007c 3B46     		mov	r3, r7
 175 007e 1968     		ldr	r1, [r3]	@ unaligned
 176 0080 1160     		str	r1, [r2]	@ unaligned
 177 0082 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 178 0084 9380     		strh	r3, [r2, #4]	@ unaligned
  80:notoriOS.c    ****     timeToMeasure = 1u;
 179              		.loc 1 80 0
 180 0086 224B     		ldr	r3, .L3+36
 181 0088 0122     		movs	r2, #1
 182 008a 1A70     		strb	r2, [r3]
  81:notoriOS.c    ****     // Create a continuous alarm called alarmSync that triggers every 60 min (default) to sync the 
  82:notoriOS.c    ****     alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINUOUS)
 183              		.loc 1 82 0
 184 008c 1E4B     		ldr	r3, .L3+28
 185 008e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 186 0090 99B2     		uxth	r1, r3
 187 0092 204C     		ldr	r4, .L3+40
 188 0094 3846     		mov	r0, r7
 189 0096 0723     		movs	r3, #7
 190 0098 0122     		movs	r2, #1
 191 009a FFF7FEFF 		bl	CreateAlarm
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 6


 192 009e 2246     		mov	r2, r4
 193 00a0 3B46     		mov	r3, r7
 194 00a2 1968     		ldr	r1, [r3]	@ unaligned
 195 00a4 1160     		str	r1, [r2]	@ unaligned
 196 00a6 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 197 00a8 9380     		strh	r3, [r2, #4]	@ unaligned
  83:notoriOS.c    ****     timeToSync = 1u;
 198              		.loc 1 83 0
 199 00aa 1B4B     		ldr	r3, .L3+44
 200 00ac 0122     		movs	r2, #1
 201 00ae 1A70     		strb	r2, [r3]
  84:notoriOS.c    ****     
  85:notoriOS.c    ****     timeToSycnRemoteParams = 0u;//set to 1 if you want to get modem IDs and time -- no need to do t
 202              		.loc 1 85 0
 203 00b0 1A4B     		ldr	r3, .L3+48
 204 00b2 0022     		movs	r2, #0
 205 00b4 1A70     		strb	r2, [r3]
  86:notoriOS.c    ****     
  87:notoriOS.c    ****     // send hey to server saying the node rebooted
  88:notoriOS.c    ****     hey = 1u;
 206              		.loc 1 88 0
 207 00b6 1A4B     		ldr	r3, .L3+52
 208 00b8 0122     		movs	r2, #1
 209 00ba 1A70     		strb	r2, [r3]
  89:notoriOS.c    ****     char c_hey[10];
  90:notoriOS.c    ****     snprintf(c_hey,sizeof(c_hey),"%d",hey);
 210              		.loc 1 90 0
 211 00bc 184B     		ldr	r3, .L3+52
 212 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 213 00c0 07F10800 		add	r0, r7, #8
 214 00c4 174A     		ldr	r2, .L3+56
 215 00c6 0A21     		movs	r1, #10
 216 00c8 FFF7FEFF 		bl	snprintf
  91:notoriOS.c    ****     pushData("reboot",c_hey,getTimeStamp());
 217              		.loc 1 91 0
 218 00cc FFF7FEFF 		bl	getTimeStamp
 219 00d0 0246     		mov	r2, r0
 220 00d2 07F10803 		add	r3, r7, #8
 221 00d6 1946     		mov	r1, r3
 222 00d8 1348     		ldr	r0, .L3+60
 223 00da FFF7FEFF 		bl	pushData
  92:notoriOS.c    ****     
  93:notoriOS.c    ****     // Initialize the try counter to 0
  94:notoriOS.c    ****     uint8 try_counter = 0;
 224              		.loc 1 94 0
 225 00de 0023     		movs	r3, #0
 226 00e0 FB77     		strb	r3, [r7, #31]
  95:notoriOS.c    **** }
 227              		.loc 1 95 0
 228 00e2 00BF     		nop
 229 00e4 2037     		adds	r7, r7, #32
 230              		.cfi_def_cfa_offset 16
 231 00e6 BD46     		mov	sp, r7
 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
 234 00e8 B0BD     		pop	{r4, r5, r7, pc}
 235              	.L4:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 7


 236 00ea 00BF     		.align	2
 237              	.L3:
 238 00ec 00000000 		.word	Wakeup_ISR
 239 00f0 00000000 		.word	.LC0
 240 00f4 04000000 		.word	system_info+4
 241 00f8 00000000 		.word	system_info
 242 00fc 00000000 		.word	modem_info
 243 0100 00000000 		.word	system_settings
 244 0104 08000000 		.word	.LC1
 245 0108 00000000 		.word	updatable_parameters
 246 010c 00000000 		.word	alarmMeasure
 247 0110 00000000 		.word	timeToMeasure
 248 0114 00000000 		.word	alarmSync
 249 0118 00000000 		.word	timeToSync
 250 011c 00000000 		.word	timeToSycnRemoteParams
 251 0120 00000000 		.word	hey
 252 0124 3C000000 		.word	.LC2
 253 0128 40000000 		.word	.LC3
 254              		.cfi_endproc
 255              	.LFE65:
 256              		.size	ReadyOrNot, .-ReadyOrNot
 257              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 258              		.align	2
 259              		.global	WorkWorkWorkWorkWorkWork
 260              		.thumb
 261              		.thumb_func
 262              		.type	WorkWorkWorkWorkWorkWork, %function
 263              	WorkWorkWorkWorkWorkWork:
 264              	.LFB66:
  96:notoriOS.c    **** 
  97:notoriOS.c    **** 
  98:notoriOS.c    **** // ==============================================
  99:notoriOS.c    **** // You see me I be work, work, work, work, work, work 
 100:notoriOS.c    **** //      - Rhiana, feat Drake (2016)
 101:notoriOS.c    **** //
 102:notoriOS.c    **** // Prorcesses core tasks
 103:notoriOS.c    **** // ==============================================
 104:notoriOS.c    **** int WorkWorkWorkWorkWorkWork()
 105:notoriOS.c    **** {
 265              		.loc 1 105 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 8
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269 0000 80B5     		push	{r7, lr}
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 82B0     		sub	sp, sp, #8
 274              		.cfi_def_cfa_offset 16
 275 0004 00AF     		add	r7, sp, #0
 276              		.cfi_def_cfa_register 7
 106:notoriOS.c    ****     
 107:notoriOS.c    ****     // The priority of these tasks is determined by the if statements
 108:notoriOS.c    ****     // For example, taking measurements should always precede data transmisison, even if both fire
 109:notoriOS.c    ****     // Getting meta-DB info and system configs precedes all
 110:notoriOS.c    ****     // That said, the modem is always qeried to check if it needs anything
 111:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 8


 112:notoriOS.c    ****     // Checks to see if the timetoSyncRemoteParms flag is set
 113:notoriOS.c    ****     if(timeToSycnRemoteParams){
 277              		.loc 1 113 0
 278 0006 144B     		ldr	r3, .L10
 279 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 000a 002B     		cmp	r3, #0
 281 000c 06D0     		beq	.L6
 114:notoriOS.c    ****         timeToSycnRemoteParams = configureRemoteParams(); // Will return 0 when done sending data
 282              		.loc 1 114 0
 283 000e FFF7FEFF 		bl	configureRemoteParams
 284 0012 0346     		mov	r3, r0
 285 0014 1A46     		mov	r2, r3
 286 0016 104B     		ldr	r3, .L10
 287 0018 1A70     		strb	r2, [r3]
 288 001a 14E0     		b	.L7
 289              	.L6:
 115:notoriOS.c    ****     }
 116:notoriOS.c    ****     // Checks to see if the timetoMeasure flag is set
 117:notoriOS.c    ****     else if(timeToMeasure){
 290              		.loc 1 117 0
 291 001c 0F4B     		ldr	r3, .L10+4
 292 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 293 0020 002B     		cmp	r3, #0
 294 0022 06D0     		beq	.L8
 118:notoriOS.c    ****         //(int i=0; i<=30; i++){
 119:notoriOS.c    ****         timeToMeasure = makeMeasurements(); // Will return 0 when done sending data
 295              		.loc 1 119 0
 296 0024 FFF7FEFF 		bl	makeMeasurements
 297 0028 0346     		mov	r3, r0
 298 002a 1A46     		mov	r2, r3
 299 002c 0B4B     		ldr	r3, .L10+4
 300 002e 1A70     		strb	r2, [r3]
 301 0030 09E0     		b	.L7
 302              	.L8:
 120:notoriOS.c    ****         //CyDelay(1000u);
 121:notoriOS.c    ****         //}
 122:notoriOS.c    ****     }else if(timeToSync){
 303              		.loc 1 122 0
 304 0032 0B4B     		ldr	r3, .L10+8
 305 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 306 0036 002B     		cmp	r3, #0
 307 0038 05D0     		beq	.L7
 123:notoriOS.c    ****             timeToSync = syncData();
 308              		.loc 1 123 0
 309 003a FFF7FEFF 		bl	syncData
 310 003e 0346     		mov	r3, r0
 311 0040 1A46     		mov	r2, r3
 312 0042 074B     		ldr	r3, .L10+8
 313 0044 1A70     		strb	r2, [r3]
 314              	.L7:
 124:notoriOS.c    ****     }
 125:notoriOS.c    ****     // Print the countdown to the next alarm
 126:notoriOS.c    ****     //printNotif(NOTIF_TYPE_EVENT,"Measure CNT %d, Sync CNT %d, Data Wheel CNT %d",alarmMeasure.cur
 127:notoriOS.c    ****     
 128:notoriOS.c    ****     
 129:notoriOS.c    ****     // Check modem state machine on every loop
 130:notoriOS.c    ****     uint8 modem_status = modem_process_tasks();
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 9


 315              		.loc 1 130 0
 316 0046 FFF7FEFF 		bl	modem_process_tasks
 317 004a 0346     		mov	r3, r0
 318 004c FB71     		strb	r3, [r7, #7]
 131:notoriOS.c    **** 
 132:notoriOS.c    ****     return 0u +  modem_status;  
 319              		.loc 1 132 0
 320 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 133:notoriOS.c    **** }
 321              		.loc 1 133 0
 322 0050 1846     		mov	r0, r3
 323 0052 0837     		adds	r7, r7, #8
 324              		.cfi_def_cfa_offset 8
 325 0054 BD46     		mov	sp, r7
 326              		.cfi_def_cfa_register 13
 327              		@ sp needed
 328 0056 80BD     		pop	{r7, pc}
 329              	.L11:
 330              		.align	2
 331              	.L10:
 332 0058 00000000 		.word	timeToSycnRemoteParams
 333 005c 00000000 		.word	timeToMeasure
 334 0060 00000000 		.word	timeToSync
 335              		.cfi_endproc
 336              	.LFE66:
 337              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 338              		.section	.text.LayBack,"ax",%progbits
 339              		.align	2
 340              		.global	LayBack
 341              		.thumb
 342              		.thumb_func
 343              		.type	LayBack, %function
 344              	LayBack:
 345              	.LFB67:
 134:notoriOS.c    **** 
 135:notoriOS.c    **** 
 136:notoriOS.c    **** 
 137:notoriOS.c    **** 
 138:notoriOS.c    **** 
 139:notoriOS.c    **** 
 140:notoriOS.c    **** // ==============================================
 141:notoriOS.c    **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
 142:notoriOS.c    **** //      - Snoop Dogg (1993)
 143:notoriOS.c    **** //
 144:notoriOS.c    **** // Put all hardware to sleep and go into low power mode to conserve Amps
 145:notoriOS.c    **** // ==============================================
 146:notoriOS.c    **** void LayBack()
 147:notoriOS.c    **** {
 346              		.loc 1 147 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350 0000 80B5     		push	{r7, lr}
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 7, -8
 353              		.cfi_offset 14, -4
 354 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 10


 355              		.cfi_def_cfa_register 7
 148:notoriOS.c    ****   
 149:notoriOS.c    ****     modem_sleep();  // Prepares system clocks for the Sleep mode
 356              		.loc 1 149 0
 357 0004 FFF7FEFF 		bl	modem_sleep
 150:notoriOS.c    ****     
 151:notoriOS.c    ****     // Important, call this last because we want to sleep uart before shutting down
 152:notoriOS.c    ****     debug_sleep();  // Function to sleep UART debug
 358              		.loc 1 152 0
 359 0008 FFF7FEFF 		bl	debug_sleep
 153:notoriOS.c    ****     
 154:notoriOS.c    ****     CyPmSaveClocks(); // Called to prep system to sleep/hiberanate. Saves all states of clocking sy
 360              		.loc 1 154 0
 361 000c FFF7FEFF 		bl	CyPmSaveClocks
 155:notoriOS.c    ****     
 156:notoriOS.c    ****     // Switch to the Sleep Mode for the other devices:
 157:notoriOS.c    ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 158:notoriOS.c    ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 159:notoriOS.c    ****     //  - If real-time clock is used, it will also wake the device
 160:notoriOS.c    ****     //can also wake up from a pin intterup (PICU). This is useful with the moderm UART
 161:notoriOS.c    ****     //CyPmHibernate();
 162:notoriOS.c    ****     //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_PICU);
 163:notoriOS.c    **** 
 164:notoriOS.c    ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_ONE_PPS); // Puts the part into t
 362              		.loc 1 164 0
 363 0010 4FF40061 		mov	r1, #2048
 364 0014 0020     		movs	r0, #0
 365 0016 FFF7FEFF 		bl	CyPmSleep
 165:notoriOS.c    **** 
 166:notoriOS.c    ****     CyPmRestoreClocks();    // Restore clock configuration.
 366              		.loc 1 166 0
 367 001a FFF7FEFF 		bl	CyPmRestoreClocks
 167:notoriOS.c    **** 
 168:notoriOS.c    ****     debug_wakeup();         // Function to wakeup UART debug.
 368              		.loc 1 168 0
 369 001e FFF7FEFF 		bl	debug_wakeup
 169:notoriOS.c    ****     modem_wakeup();         // Function to wakeup modem.
 370              		.loc 1 169 0
 371 0022 FFF7FEFF 		bl	modem_wakeup
 170:notoriOS.c    **** 
 171:notoriOS.c    **** }
 372              		.loc 1 171 0
 373 0026 00BF     		nop
 374 0028 80BD     		pop	{r7, pc}
 375              		.cfi_endproc
 376              	.LFE67:
 377              		.size	LayBack, .-LayBack
 378 002a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 379              		.align	2
 380              		.global	AyoItsTime
 381              		.thumb
 382              		.thumb_func
 383              		.type	AyoItsTime, %function
 384              	AyoItsTime:
 385              	.LFB68:
 172:notoriOS.c    **** 
 173:notoriOS.c    **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 11


 174:notoriOS.c    **** // ==============================================
 175:notoriOS.c    **** // I never sleep, 'cause sleep is the cousin of death
 176:notoriOS.c    **** //      - NAS (1994)
 177:notoriOS.c    **** //
 178:notoriOS.c    **** // This is the scheduler. It's called from various interrupts and timers,
 179:notoriOS.c    **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 180:notoriOS.c    **** // It will add tasks to the work queue,
 181:notoriOS.c    **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 182:notoriOS.c    **** // ==============================================
 183:notoriOS.c    **** void AyoItsTime(uint8 alarmType)
 184:notoriOS.c    **** {
 386              		.loc 1 184 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 8
 389              		@ frame_needed = 1, uses_anonymous_args = 0
 390 0000 80B5     		push	{r7, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 82B0     		sub	sp, sp, #8
 395              		.cfi_def_cfa_offset 16
 396 0004 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
 398 0006 0346     		mov	r3, r0
 399 0008 FB71     		strb	r3, [r7, #7]
 185:notoriOS.c    ****     // Checks if the alarm is up and if so, sets the flag.
 186:notoriOS.c    ****     if(AlarmReady(&alarmMeasure,alarmType))
 400              		.loc 1 186 0
 401 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 402 000c 1946     		mov	r1, r3
 403 000e 0C48     		ldr	r0, .L17
 404 0010 FFF7FEFF 		bl	AlarmReady
 405 0014 0346     		mov	r3, r0
 406 0016 002B     		cmp	r3, #0
 407 0018 02D0     		beq	.L14
 187:notoriOS.c    ****     {
 188:notoriOS.c    ****          // Flag new task as "ready" and pass off to workworkworkworkwork()
 189:notoriOS.c    ****         timeToMeasure = 1u;
 408              		.loc 1 189 0
 409 001a 0A4B     		ldr	r3, .L17+4
 410 001c 0122     		movs	r2, #1
 411 001e 1A70     		strb	r2, [r3]
 412              	.L14:
 190:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Measure Alarm");
 191:notoriOS.c    ****         
 192:notoriOS.c    ****     }
 193:notoriOS.c    ****     if(AlarmReady(&alarmSync,alarmType))
 413              		.loc 1 193 0
 414 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 415 0022 1946     		mov	r1, r3
 416 0024 0848     		ldr	r0, .L17+8
 417 0026 FFF7FEFF 		bl	AlarmReady
 418 002a 0346     		mov	r3, r0
 419 002c 002B     		cmp	r3, #0
 420 002e 02D0     		beq	.L16
 194:notoriOS.c    ****     {
 195:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 12


 196:notoriOS.c    ****         timeToSync = 1u;
 421              		.loc 1 196 0
 422 0030 064B     		ldr	r3, .L17+12
 423 0032 0122     		movs	r2, #1
 424 0034 1A70     		strb	r2, [r3]
 425              	.L16:
 197:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 198:notoriOS.c    ****     }
 199:notoriOS.c    ****     
 200:notoriOS.c    **** }
 426              		.loc 1 200 0
 427 0036 00BF     		nop
 428 0038 0837     		adds	r7, r7, #8
 429              		.cfi_def_cfa_offset 8
 430 003a BD46     		mov	sp, r7
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 003c 80BD     		pop	{r7, pc}
 434              	.L18:
 435 003e 00BF     		.align	2
 436              	.L17:
 437 0040 00000000 		.word	alarmMeasure
 438 0044 00000000 		.word	timeToMeasure
 439 0048 00000000 		.word	alarmSync
 440 004c 00000000 		.word	timeToSync
 441              		.cfi_endproc
 442              	.LFE68:
 443              		.size	AyoItsTime, .-AyoItsTime
 444              		.section	.text.AlarmReady,"ax",%progbits
 445              		.align	2
 446              		.global	AlarmReady
 447              		.thumb
 448              		.thumb_func
 449              		.type	AlarmReady, %function
 450              	AlarmReady:
 451              	.LFB69:
 201:notoriOS.c    **** 
 202:notoriOS.c    **** 
 203:notoriOS.c    **** // ==============================================
 204:notoriOS.c    **** // Determines when an alarm is ready to trigger, which will be handeled by another cutions
 205:notoriOS.c    **** // ==============================================
 206:notoriOS.c    **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 207:notoriOS.c    **** {
 452              		.loc 1 207 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 8
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456 0000 80B5     		push	{r7, lr}
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 7, -8
 459              		.cfi_offset 14, -4
 460 0002 82B0     		sub	sp, sp, #8
 461              		.cfi_def_cfa_offset 16
 462 0004 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
 464 0006 7860     		str	r0, [r7, #4]
 465 0008 0B46     		mov	r3, r1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 13


 466 000a FB70     		strb	r3, [r7, #3]
 208:notoriOS.c    ****     // if the countDownType matches the alarmType
 209:notoriOS.c    ****     if(alarmToBeUpdated->countDownType == alarmType){
 467              		.loc 1 209 0
 468 000c 7B68     		ldr	r3, [r7, #4]
 469 000e 1B79     		ldrb	r3, [r3, #4]
 470 0010 DBB2     		uxtb	r3, r3
 471 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 472 0014 9A42     		cmp	r2, r3
 473 0016 12D1     		bne	.L20
 210:notoriOS.c    ****        
 211:notoriOS.c    ****         // In the Post-decrement old value is first used in a expression and then old value will be
 212:notoriOS.c    ****         // Decrement the count down value by 1
 213:notoriOS.c    ****         alarmToBeUpdated->currentCountDownValue--;
 474              		.loc 1 213 0
 475 0018 7B68     		ldr	r3, [r7, #4]
 476 001a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 477 001c 1BB2     		sxth	r3, r3
 478 001e 9BB2     		uxth	r3, r3
 479 0020 013B     		subs	r3, r3, #1
 480 0022 9BB2     		uxth	r3, r3
 481 0024 1AB2     		sxth	r2, r3
 482 0026 7B68     		ldr	r3, [r7, #4]
 483 0028 5A80     		strh	r2, [r3, #2]	@ movhi
 214:notoriOS.c    ****         // If the current count is 0, then reset the alarm
 215:notoriOS.c    ****         if(alarmToBeUpdated->currentCountDownValue <= 0){
 484              		.loc 1 215 0
 485 002a 7B68     		ldr	r3, [r7, #4]
 486 002c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 487 002e 1BB2     		sxth	r3, r3
 488 0030 002B     		cmp	r3, #0
 489 0032 04DC     		bgt	.L20
 216:notoriOS.c    ****             ResetAlarm(alarmToBeUpdated);
 490              		.loc 1 216 0
 491 0034 7868     		ldr	r0, [r7, #4]
 492 0036 FFF7FEFF 		bl	ResetAlarm
 217:notoriOS.c    ****             return 1u;
 493              		.loc 1 217 0
 494 003a 0123     		movs	r3, #1
 495 003c 00E0     		b	.L21
 496              	.L20:
 218:notoriOS.c    ****         } 
 219:notoriOS.c    ****     }
 220:notoriOS.c    ****     
 221:notoriOS.c    ****     return 0u; // Otherwise return 0
 497              		.loc 1 221 0
 498 003e 0023     		movs	r3, #0
 499              	.L21:
 222:notoriOS.c    **** }
 500              		.loc 1 222 0
 501 0040 1846     		mov	r0, r3
 502 0042 0837     		adds	r7, r7, #8
 503              		.cfi_def_cfa_offset 8
 504 0044 BD46     		mov	sp, r7
 505              		.cfi_def_cfa_register 13
 506              		@ sp needed
 507 0046 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 14


 508              		.cfi_endproc
 509              	.LFE69:
 510              		.size	AlarmReady, .-AlarmReady
 511              		.section	.text.ResetAlarm,"ax",%progbits
 512              		.align	2
 513              		.global	ResetAlarm
 514              		.thumb
 515              		.thumb_func
 516              		.type	ResetAlarm, %function
 517              	ResetAlarm:
 518              	.LFB70:
 223:notoriOS.c    **** 
 224:notoriOS.c    **** // ==============================================
 225:notoriOS.c    **** // Resets an alarm, which will be handeled by other executions
 226:notoriOS.c    **** // ==============================================
 227:notoriOS.c    **** void ResetAlarm(alarm * alarmToBeReset)
 228:notoriOS.c    **** {
 519              		.loc 1 228 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524 0000 80B4     		push	{r7}
 525              		.cfi_def_cfa_offset 4
 526              		.cfi_offset 7, -4
 527 0002 83B0     		sub	sp, sp, #12
 528              		.cfi_def_cfa_offset 16
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 531 0006 7860     		str	r0, [r7, #4]
 229:notoriOS.c    ****     // resets the alarm when the current count down value equals the set alarm count down value
 230:notoriOS.c    ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 532              		.loc 1 230 0
 533 0008 7B68     		ldr	r3, [r7, #4]
 534 000a 1B88     		ldrh	r3, [r3]	@ movhi
 535 000c 9BB2     		uxth	r3, r3
 536 000e 1AB2     		sxth	r2, r3
 537 0010 7B68     		ldr	r3, [r7, #4]
 538 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 231:notoriOS.c    **** }
 539              		.loc 1 231 0
 540 0014 00BF     		nop
 541 0016 0C37     		adds	r7, r7, #12
 542              		.cfi_def_cfa_offset 4
 543 0018 BD46     		mov	sp, r7
 544              		.cfi_def_cfa_register 13
 545              		@ sp needed
 546 001a 80BC     		pop	{r7}
 547              		.cfi_restore 7
 548              		.cfi_def_cfa_offset 0
 549 001c 7047     		bx	lr
 550              		.cfi_endproc
 551              	.LFE70:
 552              		.size	ResetAlarm, .-ResetAlarm
 553 001e 00BF     		.section	.text.CreateAlarm,"ax",%progbits
 554              		.align	2
 555              		.global	CreateAlarm
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 15


 556              		.thumb
 557              		.thumb_func
 558              		.type	CreateAlarm, %function
 559              	CreateAlarm:
 560              	.LFB71:
 232:notoriOS.c    **** 
 233:notoriOS.c    **** // ==============================================
 234:notoriOS.c    **** // Creates a new alarm, which will be handeled by another cutions
 235:notoriOS.c    **** // ==============================================
 236:notoriOS.c    **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 237:notoriOS.c    **** {
 561              		.loc 1 237 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 16
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566 0000 80B4     		push	{r7}
 567              		.cfi_def_cfa_offset 4
 568              		.cfi_offset 7, -4
 569 0002 85B0     		sub	sp, sp, #20
 570              		.cfi_def_cfa_offset 24
 571 0004 00AF     		add	r7, sp, #0
 572              		.cfi_def_cfa_register 7
 573 0006 7860     		str	r0, [r7, #4]
 574 0008 0846     		mov	r0, r1
 575 000a 1146     		mov	r1, r2
 576 000c 1A46     		mov	r2, r3
 577 000e 0346     		mov	r3, r0	@ movhi
 578 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 579 0012 0B46     		mov	r3, r1
 580 0014 7B70     		strb	r3, [r7, #1]
 581 0016 1346     		mov	r3, r2
 582 0018 3B70     		strb	r3, [r7]
 238:notoriOS.c    ****     // Creates variable newAlarm of the data structure type alarm
 239:notoriOS.c    ****     alarm newAlarm;
 240:notoriOS.c    ****     
 241:notoriOS.c    ****     // Defines the different params of an alarm: # of ticks, alarm type (sec, min, etc.), & continu
 242:notoriOS.c    ****     newAlarm.countDownValue = countDownValue;
 583              		.loc 1 242 0
 584 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 585 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 243:notoriOS.c    ****     newAlarm.countDownType = countDownType;
 586              		.loc 1 243 0
 587 001e 7B78     		ldrb	r3, [r7, #1]
 588 0020 3B73     		strb	r3, [r7, #12]
 244:notoriOS.c    ****     newAlarm.countDownResetCondition = countDownResetCondition;
 589              		.loc 1 244 0
 590 0022 3B78     		ldrb	r3, [r7]
 591 0024 7B73     		strb	r3, [r7, #13]
 245:notoriOS.c    ****     
 246:notoriOS.c    ****     // If you want a reccuring alarm (e.g. resets freshly each hour), then add
 247:notoriOS.c    ****     // Account for already exprired time using the RTC. Otherwise, set to the countDownValue
 248:notoriOS.c    ****     newAlarm.currentCountDownValue = countDownValue;
 592              		.loc 1 248 0
 593 0026 B7F90230 		ldrsh	r3, [r7, #2]
 594 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 249:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 16


 250:notoriOS.c    ****     return newAlarm;
 595              		.loc 1 250 0
 596 002c 7B68     		ldr	r3, [r7, #4]
 597 002e 1A46     		mov	r2, r3
 598 0030 07F10803 		add	r3, r7, #8
 599 0034 1868     		ldr	r0, [r3]	@ unaligned
 600 0036 1060     		str	r0, [r2]	@ unaligned
 601 0038 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 602 003a 9380     		strh	r3, [r2, #4]	@ unaligned
 251:notoriOS.c    ****     
 252:notoriOS.c    **** }
 603              		.loc 1 252 0
 604 003c 7868     		ldr	r0, [r7, #4]
 605 003e 1437     		adds	r7, r7, #20
 606              		.cfi_def_cfa_offset 4
 607 0040 BD46     		mov	sp, r7
 608              		.cfi_def_cfa_register 13
 609              		@ sp needed
 610 0042 80BC     		pop	{r7}
 611              		.cfi_restore 7
 612              		.cfi_def_cfa_offset 0
 613 0044 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE71:
 616              		.size	CreateAlarm, .-CreateAlarm
 617 0046 00BF     		.section	.rodata
 618 0047 00       		.align	2
 619              	.LC4:
 620 0048 2D2D2D2D 		.ascii	"-------------BEGIN TESTS---------------\012\012\000"
 620      2D2D2D2D 
 620      2D2D2D2D 
 620      2D424547 
 620      494E2054 
 621 0072 0000     		.align	2
 622              	.LC5:
 623 0074 4D454944 		.ascii	"MEID=%s, SIMID=%s, DEVICEID=%s\012\000"
 623      3D25732C 
 623      2053494D 
 623      49443D25 
 623      732C2044 
 624              		.align	2
 625              	.LC6:
 626 0094 0A0A2D2D 		.ascii	"\012\012-------------END TESTS---------------\012\012"
 626      2D2D2D2D 
 626      2D2D2D2D 
 626      2D2D2D45 
 626      4E442054 
 627 00bd 00       		.ascii	"\000"
 628              		.section	.text.ChickityCheckYourselfBeforeYouWreckYourself,"ax",%progbits
 629              		.align	2
 630              		.global	ChickityCheckYourselfBeforeYouWreckYourself
 631              		.thumb
 632              		.thumb_func
 633              		.type	ChickityCheckYourselfBeforeYouWreckYourself, %function
 634              	ChickityCheckYourselfBeforeYouWreckYourself:
 635              	.LFB72:
 253:notoriOS.c    **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 17


 254:notoriOS.c    **** // ==============================================
 255:notoriOS.c    **** // Dropping bombs on your moms
 256:notoriOS.c    **** //      - Ice Cube (1992)
 257:notoriOS.c    **** //
 258:notoriOS.c    **** // This is the global testing function, which runs all relevant tests
 259:notoriOS.c    **** // If you make a new components, it could be good to call its tester function here 
 260:notoriOS.c    **** // ==============================================
 261:notoriOS.c    **** void ChickityCheckYourselfBeforeYouWreckYourself(){
 636              		.loc 1 261 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 1560
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 90B5     		push	{r4, r7, lr}
 641              		.cfi_def_cfa_offset 12
 642              		.cfi_offset 4, -12
 643              		.cfi_offset 7, -8
 644              		.cfi_offset 14, -4
 645 0002 ADF2947D 		subw	sp, sp, #1940
 646              		.cfi_def_cfa_offset 1952
 647 0006 5EAF     		add	r7, sp, #376
 648              		.cfi_def_cfa 7, 1576
 262:notoriOS.c    **** 
 263:notoriOS.c    ****     //test_t t_influx = influx_test();
 264:notoriOS.c    ****     //printTestStatus(t_influx);
 265:notoriOS.c    ****     
 266:notoriOS.c    ****     uint8 c = 1;
 649              		.loc 1 266 0
 650 0008 0123     		movs	r3, #1
 651 000a 87F81236 		strb	r3, [r7, #1554]
 267:notoriOS.c    ****     uint8 *count;
 268:notoriOS.c    ****     
 269:notoriOS.c    ****     count = &c;
 652              		.loc 1 269 0
 653 000e 07F21263 		addw	r3, r7, #1554
 654 0012 C7F81436 		str	r3, [r7, #1556]
 270:notoriOS.c    ****     uint8 sample_ok = autosampler_take_sample(count);
 655              		.loc 1 270 0
 656 0016 D7F81406 		ldr	r0, [r7, #1556]
 657 001a FFF7FEFF 		bl	autosampler_take_sample
 658 001e 0346     		mov	r3, r0
 659 0020 87F81336 		strb	r3, [r7, #1555]
 271:notoriOS.c    ****         autosampler_power_off(); 
 660              		.loc 1 271 0
 661 0024 FFF7FEFF 		bl	autosampler_power_off
 272:notoriOS.c    ****         autosampler_stop();
 662              		.loc 1 272 0
 663 0028 FFF7FEFF 		bl	autosampler_stop
 273:notoriOS.c    ****     
 274:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"-------------BEGIN TESTS---------------\n\n");
 664              		.loc 1 274 0
 665 002c 2F49     		ldr	r1, .L26
 666 002e 0320     		movs	r0, #3
 667 0030 FFF7FEFF 		bl	printNotif
 275:notoriOS.c    ****     
 276:notoriOS.c    ****     // Test modem
 277:notoriOS.c    ****     test_t t_modem = modem_test();
 668              		.loc 1 277 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 18


 669 0034 07F59263 		add	r3, r7, #1168
 670 0038 1846     		mov	r0, r3
 671 003a FFF7FEFF 		bl	modem_test
 278:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"MEID=%s, SIMID=%s, DEVICEID=%s\n",modem_info.imei,modem_info.sim
 672              		.loc 1 278 0
 673 003e 2C4B     		ldr	r3, .L26+4
 674 0040 0093     		str	r3, [sp]
 675 0042 2C4B     		ldr	r3, .L26+8
 676 0044 2C4A     		ldr	r2, .L26+12
 677 0046 2D49     		ldr	r1, .L26+16
 678 0048 0320     		movs	r0, #3
 679 004a FFF7FEFF 		bl	printNotif
 279:notoriOS.c    ****     printTestStatus(t_modem);
 680              		.loc 1 279 0
 681 004e 07F59264 		add	r4, r7, #1168
 682 0052 6846     		mov	r0, sp
 683 0054 04F11003 		add	r3, r4, #16
 684 0058 40F27112 		movw	r2, #369
 685 005c 1946     		mov	r1, r3
 686 005e FFF7FEFF 		bl	memcpy
 687 0062 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 688 0066 FFF7FEFF 		bl	printTestStatus
 280:notoriOS.c    ****     
 281:notoriOS.c    ****     // Test level sensor
 282:notoriOS.c    ****     test_t t_level_sensor = level_sensor_test();  
 689              		.loc 1 282 0
 690 006a 07F54373 		add	r3, r7, #780
 691 006e 1846     		mov	r0, r3
 692 0070 FFF7FEFF 		bl	level_sensor_test
 283:notoriOS.c    ****     printTestStatus(t_level_sensor);
 693              		.loc 1 283 0
 694 0074 07F54374 		add	r4, r7, #780
 695 0078 6846     		mov	r0, sp
 696 007a 04F11003 		add	r3, r4, #16
 697 007e 40F27112 		movw	r2, #369
 698 0082 1946     		mov	r1, r3
 699 0084 FFF7FEFF 		bl	memcpy
 700 0088 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 701 008c FFF7FEFF 		bl	printTestStatus
 284:notoriOS.c    ****     
 285:notoriOS.c    ****     // Test voltages
 286:notoriOS.c    ****     test_t t_voltages = voltages_test();
 702              		.loc 1 286 0
 703 0090 07F5C473 		add	r3, r7, #392
 704 0094 1846     		mov	r0, r3
 705 0096 FFF7FEFF 		bl	voltages_test
 287:notoriOS.c    ****     printTestStatus(t_voltages);
 706              		.loc 1 287 0
 707 009a 07F5C474 		add	r4, r7, #392
 708 009e 6846     		mov	r0, sp
 709 00a0 04F11003 		add	r3, r4, #16
 710 00a4 40F27112 		movw	r2, #369
 711 00a8 1946     		mov	r1, r3
 712 00aa FFF7FEFF 		bl	memcpy
 713 00ae 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 714 00b2 FFF7FEFF 		bl	printTestStatus
 288:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 19


 289:notoriOS.c    ****     // Test SD card
 290:notoriOS.c    ****     test_t t_sd_card = SD_card_test();
 715              		.loc 1 290 0
 716 00b6 3B1D     		adds	r3, r7, #4
 717 00b8 1846     		mov	r0, r3
 718 00ba FFF7FEFF 		bl	SD_card_test
 291:notoriOS.c    ****     printTestStatus(t_sd_card);
 719              		.loc 1 291 0
 720 00be 3C1D     		adds	r4, r7, #4
 721 00c0 6846     		mov	r0, sp
 722 00c2 04F11003 		add	r3, r4, #16
 723 00c6 40F27112 		movw	r2, #369
 724 00ca 1946     		mov	r1, r3
 725 00cc FFF7FEFF 		bl	memcpy
 726 00d0 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 727 00d4 FFF7FEFF 		bl	printTestStatus
 292:notoriOS.c    ****     
 293:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"\n\n-------------END TESTS---------------\n\n");
 728              		.loc 1 293 0
 729 00d8 0949     		ldr	r1, .L26+20
 730 00da 0320     		movs	r0, #3
 731 00dc FFF7FEFF 		bl	printNotif
 294:notoriOS.c    **** 
 295:notoriOS.c    **** }
 732              		.loc 1 295 0
 733 00e0 00BF     		nop
 734 00e2 07F21C67 		addw	r7, r7, #1564
 735              		.cfi_def_cfa_offset 12
 736 00e6 BD46     		mov	sp, r7
 737              		.cfi_def_cfa_register 13
 738              		@ sp needed
 739 00e8 90BD     		pop	{r4, r7, pc}
 740              	.L27:
 741 00ea 00BF     		.align	2
 742              	.L26:
 743 00ec 48000000 		.word	.LC4
 744 00f0 04000000 		.word	system_info+4
 745 00f4 00000000 		.word	modem_info
 746 00f8 28000000 		.word	modem_info+40
 747 00fc 74000000 		.word	.LC5
 748 0100 94000000 		.word	.LC6
 749              		.cfi_endproc
 750              	.LFE72:
 751              		.size	ChickityCheckYourselfBeforeYouWreckYourself, .-ChickityCheckYourselfBeforeYouWreckYourself
 752              		.section	.text.main,"ax",%progbits
 753              		.align	2
 754              		.global	main
 755              		.thumb
 756              		.thumb_func
 757              		.type	main, %function
 758              	main:
 759              	.LFB73:
 296:notoriOS.c    **** 
 297:notoriOS.c    **** // ==============================================
 298:notoriOS.c    **** // Processes Core Tasks
 299:notoriOS.c    **** // ==============================================
 300:notoriOS.c    **** int main(void)
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 20


 301:notoriOS.c    **** {
 760              		.loc 1 301 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 1, uses_anonymous_args = 0
 764 0000 80B5     		push	{r7, lr}
 765              		.cfi_def_cfa_offset 8
 766              		.cfi_offset 7, -8
 767              		.cfi_offset 14, -4
 768 0002 00AF     		add	r7, sp, #0
 769              		.cfi_def_cfa_register 7
 302:notoriOS.c    ****     CyGlobalIntEnable; /* Enable global interrupts. */
 770              		.loc 1 302 0
 771              		.syntax unified
 772              	@ 302 "notoriOS.c" 1
 773 0004 62B6     		CPSIE   i
 774              	@ 0 "" 2
 303:notoriOS.c    **** 
 304:notoriOS.c    ****     ReadyOrNot(); // Initialize 
 775              		.loc 1 304 0
 776              		.thumb
 777              		.syntax unified
 778 0006 FFF7FEFF 		bl	ReadyOrNot
 305:notoriOS.c    ****     
 306:notoriOS.c    ****     ChickityCheckYourselfBeforeYouWreckYourself(); // Run tests for all components on bootup
 779              		.loc 1 306 0
 780 000a FFF7FEFF 		bl	ChickityCheckYourselfBeforeYouWreckYourself
 781              	.L30:
 307:notoriOS.c    ****    
 308:notoriOS.c    ****     for(;;) // (;;) means an infinite loop
 309:notoriOS.c    ****     {
 310:notoriOS.c    ****         
 311:notoriOS.c    ****         if( ! WorkWorkWorkWorkWorkWork() ) // Complete the work
 782              		.loc 1 311 0
 783 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 784 0012 0346     		mov	r3, r0
 785 0014 002B     		cmp	r3, #0
 786 0016 FAD1     		bne	.L30
 312:notoriOS.c    ****         {
 313:notoriOS.c    ****            LayBack(); // Lay back (sleep) when there isn't work
 787              		.loc 1 313 0
 788 0018 FFF7FEFF 		bl	LayBack
 314:notoriOS.c    ****         }
 315:notoriOS.c    ****     }
 789              		.loc 1 315 0
 790 001c F7E7     		b	.L30
 791              		.cfi_endproc
 792              	.LFE73:
 793              		.size	main, .-main
 794 001e 00BF     		.section	.rodata
 795 00be 0000     		.align	2
 796              	.LC7:
 797 00c0 4D6F6465 		.ascii	"Modem is ready.\000"
 797      6D206973 
 797      20726561 
 797      64792E00 
 798              		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 21


 799              	.LC8:
 800 00d0 72737270 		.ascii	"rsrp\000"
 800      00
 801 00d5 000000   		.align	2
 802              	.LC9:
 803 00d8 7472795F 		.ascii	"try_counter\000"
 803      636F756E 
 803      74657200 
 804              		.align	2
 805              	.LC10:
 806 00e4 64617461 		.ascii	"data_count_sent\000"
 806      5F636F75 
 806      6E745F73 
 806      656E7400 
 807              		.align	2
 808              	.LC11:
 809 00f4 64617461 		.ascii	"data_count_desired\000"
 809      5F636F75 
 809      6E745F64 
 809      65736972 
 809      656400
 810 0107 00       		.align	2
 811              	.LC12:
 812 0108 42656769 		.ascii	"Begin HTTP post.\000"
 812      6E204854 
 812      54502070 
 812      6F73742E 
 812      00
 813 0119 000000   		.align	2
 814              	.LC13:
 815 011c 37336432 		.ascii	"73d2fee509149148d70e9e803910366cb774edf1\000"
 815      66656535 
 815      30393134 
 815      39313438 
 815      64373065 
 816 0145 000000   		.align	2
 817              	.LC14:
 818 0148 6170692F 		.ascii	"api/v1/write\000"
 818      76312F77 
 818      72697465 
 818      00
 819 0155 000000   		.align	2
 820              	.LC15:
 821 0158 48545450 		.ascii	"HTTP route: %s\000"
 821      20726F75 
 821      74653A20 
 821      257300
 822 0167 00       		.align	2
 823              	.LC16:
 824 0168 312E3100 		.ascii	"1.1\000"
 825              		.align	2
 826              	.LC17:
 827 016c 00       		.ascii	"\000"
 828 016d 000000   		.align	2
 829              	.LC18:
 830 0170 436C6F73 		.ascii	"Close\000"
 830      6500
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 22


 831 0176 0000     		.align	2
 832              	.LC19:
 833 0178 504F5354 		.ascii	"POST\000"
 833      00
 834 017d 000000   		.align	2
 835              	.LC20:
 836 0180 46756C6C 		.ascii	"Full HTTP Request: %s\000"
 836      20485454 
 836      50205265 
 836      71756573 
 836      743A2025 
 837 0196 0000     		.align	2
 838              	.LC21:
 839 0198 41542353 		.ascii	"AT#SD=1,0,%d,\"%s\",0,0,1\015\000"
 839      443D312C 
 839      302C2564 
 839      2C222573 
 839      222C302C 
 840 01b1 000000   		.align	2
 841              	.LC22:
 842 01b4 257300   		.ascii	"%s\000"
 843 01b7 00       		.align	2
 844              	.LC23:
 845 01b8 4F4B00   		.ascii	"OK\000"
 846              		.global	__aeabi_ui2d
 847              		.global	__aeabi_d2iz
 848 01bb 00       		.align	2
 849              	.LC24:
 850 01bc 68747470 		.ascii	"http_request len: %d\000"
 850      5F726571 
 850      75657374 
 850      206C656E 
 850      3A202564 
 851 01d1 000000   		.align	2
 852              	.LC25:
 853 01d4 23206F66 		.ascii	"# of packets: %d\000"
 853      20706163 
 853      6B657473 
 853      3A202564 
 853      00
 854 01e5 000000   		.align	2
 855              	.LC26:
 856 01e8 3E00     		.ascii	">\000"
 857 01ea 0000     		.align	2
 858              	.LC27:
 859 01ec 41542353 		.ascii	"AT#SSEND=1\015\012\000"
 859      53454E44 
 859      3D310D0A 
 859      00
 860 01f9 000000   		.align	2
 861              	.LC28:
 862 01fc 1A00     		.ascii	"\032\000"
 863 01fe 0000     		.align	2
 864              	.LC29:
 865 0200 6368756E 		.ascii	"chunk %d: %s\000"
 865      6B202564 
 865      3A202573 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 23


 865      00
 866 020d 000000   		.align	2
 867              	.LC30:
 868 0210 5352494E 		.ascii	"SRING\000"
 868      4700
 869 0216 0000     		.align	2
 870              	.LC31:
 871 0218 4F532D4F 		.ascii	"OS-OK\000"
 871      4B00
 872 021e 0000     		.align	2
 873              	.LC32:
 874 0220 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 874      52454356 
 874      3D312C31 
 874      3030300D 
 874      00
 875 0231 000000   		.align	2
 876              	.LC33:
 877 0234 6D6F6465 		.ascii	"modem_tx_time\000"
 877      6D5F7478 
 877      5F74696D 
 877      6500
 878 0242 0000     		.align	2
 879              	.LC34:
 880 0244 4F532D4E 		.ascii	"OS-NO: Could not receive data from server.\000"
 880      4F3A2043 
 880      6F756C64 
 880      206E6F74 
 880      20726563 
 881              		.section	.text.syncData,"ax",%progbits
 882              		.align	2
 883              		.global	syncData
 884              		.thumb
 885              		.thumb_func
 886              		.type	syncData, %function
 887              	syncData:
 888              	.LFB74:
 316:notoriOS.c    **** }
 317:notoriOS.c    **** 
 318:notoriOS.c    **** // ==============================================
 319:notoriOS.c    **** // Syncs data with server
 320:notoriOS.c    **** // Returns 0 when done
 321:notoriOS.c    **** // ==============================================
 322:notoriOS.c    **** uint8 syncData(){
 889              		.loc 1 322 0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 1336
 892              		@ frame_needed = 1, uses_anonymous_args = 0
 893 0000 90B5     		push	{r4, r7, lr}
 894              		.cfi_def_cfa_offset 12
 895              		.cfi_offset 4, -12
 896              		.cfi_offset 7, -8
 897              		.cfi_offset 14, -4
 898 0002 ADF2545D 		subw	sp, sp, #1364
 899              		.cfi_def_cfa_offset 1376
 900 0006 06AF     		add	r7, sp, #24
 901              		.cfi_def_cfa 7, 1352
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 24


 323:notoriOS.c    ****     
 324:notoriOS.c    ****     /*
 325:notoriOS.c    ****     //at_write_command("AT#SCFG?\r","OK",1000);
 326:notoriOS.c    ****     uint8 check = 0;
 327:notoriOS.c    ****     //"AT#SD=,0,80,\”www.google.com\”,0,0,0\r"
 328:notoriOS.c    ****     check = at_write_command("AT#SD=1,0,8086,\"data.open-storm.org\",0,0,1\r","OK",10000u);
 329:notoriOS.c    ****     check = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 330:notoriOS.c    ****     check = at_write_command("POST /write?db=ARB&u=generic_node&p=MakeFloodsCurrents HTTP/1.1\r\nHo
 331:notoriOS.c    ****     */
 332:notoriOS.c    **** 
 333:notoriOS.c    ****     // Blink LED so we know it's about to sync data
 334:notoriOS.c    ****     LED_Write(1u);
 902              		.loc 1 334 0
 903 0008 0120     		movs	r0, #1
 904 000a FFF7FEFF 		bl	LED_Write
 335:notoriOS.c    ****     CyDelay(100u);
 905              		.loc 1 335 0
 906 000e 6420     		movs	r0, #100
 907 0010 FFF7FEFF 		bl	CyDelay
 336:notoriOS.c    ****     LED_Write(0u);
 908              		.loc 1 336 0
 909 0014 0020     		movs	r0, #0
 910 0016 FFF7FEFF 		bl	LED_Write
 337:notoriOS.c    **** 
 338:notoriOS.c    ****     
 339:notoriOS.c    ****     // If there's no data, not need to do anything
 340:notoriOS.c    ****     if(sizeOfDataStack() == 0){        
 911              		.loc 1 340 0
 912 001a FFF7FEFF 		bl	sizeOfDataStack
 913 001e 0346     		mov	r3, r0
 914 0020 002B     		cmp	r3, #0
 915 0022 01D1     		bne	.L32
 341:notoriOS.c    ****         return 0u;
 916              		.loc 1 341 0
 917 0024 0023     		movs	r3, #0
 918 0026 F9E1     		b	.L33
 919              	.L32:
 342:notoriOS.c    ****         }
 343:notoriOS.c    ****     
 344:notoriOS.c    ****     // Create request body, in this case influx
 345:notoriOS.c    ****     // Place body into HTTP request header
 346:notoriOS.c    ****     // Fire up modem and get it out
 347:notoriOS.c    ****      
 348:notoriOS.c    ****     
 349:notoriOS.c    ****     // Try up to 2 times to connect to the modem
 350:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 920              		.loc 1 350 0
 921 0028 FFF7FEFF 		bl	modem_get_state
 922 002c 0346     		mov	r3, r0
 923 002e 002B     		cmp	r3, #0
 924 0030 11D1     		bne	.L34
 351:notoriOS.c    **** 
 352:notoriOS.c    ****         try_counter++;
 925              		.loc 1 352 0
 926 0032 C74B     		ldr	r3, .L46
 927 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 928 0036 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 25


 929 0038 DAB2     		uxtb	r2, r3
 930 003a C54B     		ldr	r3, .L46
 931 003c 1A70     		strb	r2, [r3]
 353:notoriOS.c    ****         	
 354:notoriOS.c    ****         if(try_counter <= 2){
 932              		.loc 1 354 0
 933 003e C44B     		ldr	r3, .L46
 934 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 935 0042 022B     		cmp	r3, #2
 936 0044 02D8     		bhi	.L35
 355:notoriOS.c    ****             modem_power_up();
 937              		.loc 1 355 0
 938 0046 FFF7FEFF 		bl	modem_power_up
 939 004a E6E1     		b	.L36
 940              	.L35:
 356:notoriOS.c    ****         }else{
 357:notoriOS.c    ****             try_counter = 0;
 941              		.loc 1 357 0
 942 004c C04B     		ldr	r3, .L46
 943 004e 0022     		movs	r2, #0
 944 0050 1A70     		strb	r2, [r3]
 358:notoriOS.c    ****             return 0u;
 945              		.loc 1 358 0
 946 0052 0023     		movs	r3, #0
 947 0054 E2E1     		b	.L33
 948              	.L34:
 359:notoriOS.c    ****             }
 360:notoriOS.c    ****             
 361:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 949              		.loc 1 361 0
 950 0056 FFF7FEFF 		bl	modem_get_state
 951 005a 0346     		mov	r3, r0
 952 005c 042B     		cmp	r3, #4
 953 005e 40F0DC81 		bne	.L36
 954              	.LBB2:
 362:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Modem is ready.");
 955              		.loc 1 362 0
 956 0062 BC49     		ldr	r1, .L46+4
 957 0064 0020     		movs	r0, #0
 958 0066 FFF7FEFF 		bl	printNotif
 363:notoriOS.c    ****         
 364:notoriOS.c    ****         http_request[0] = '\0';
 959              		.loc 1 364 0
 960 006a BB4B     		ldr	r3, .L46+8
 961 006c 0022     		movs	r2, #0
 962 006e 1A70     		strb	r2, [r3]
 365:notoriOS.c    ****         http_body[0] = '\0';
 963              		.loc 1 365 0
 964 0070 BA4B     		ldr	r3, .L46+12
 965 0072 0022     		movs	r2, #0
 966 0074 1A70     		strb	r2, [r3]
 366:notoriOS.c    ****         http_route[0] = '\0';
 967              		.loc 1 366 0
 968 0076 BA4B     		ldr	r3, .L46+16
 969 0078 0022     		movs	r2, #0
 970 007a 1A70     		strb	r2, [r3]
 367:notoriOS.c    ****         //char *base = "write";
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 26


 368:notoriOS.c    ****         
 369:notoriOS.c    ****         // Push cell strength data (RSRP: reference signal received power)
 370:notoriOS.c    ****         char s_rsrp[DATA_MAX_KEY_LENGTH];
 371:notoriOS.c    ****         snprintf(s_rsrp,sizeof(s_rsrp),"%d",modem_stats.rsrp);
 971              		.loc 1 371 0
 972 007c B94B     		ldr	r3, .L46+20
 973 007e 5B69     		ldr	r3, [r3, #20]
 974 0080 07F5A260 		add	r0, r7, #1296
 975 0084 B84A     		ldr	r2, .L46+24
 976 0086 1421     		movs	r1, #20
 977 0088 FFF7FEFF 		bl	snprintf
 372:notoriOS.c    ****         pushData("rsrp", s_rsrp, getTimeStamp());
 978              		.loc 1 372 0
 979 008c FFF7FEFF 		bl	getTimeStamp
 980 0090 0246     		mov	r2, r0
 981 0092 07F5A263 		add	r3, r7, #1296
 982 0096 1946     		mov	r1, r3
 983 0098 B448     		ldr	r0, .L46+28
 984 009a FFF7FEFF 		bl	pushData
 373:notoriOS.c    ****         
 374:notoriOS.c    ****         // Push syncData try_counter to know how many tries it tried to connect
 375:notoriOS.c    ****         char c_try_counter[20];
 376:notoriOS.c    ****         snprintf(c_try_counter,sizeof(c_try_counter),"%d",try_counter);
 985              		.loc 1 376 0
 986 009e AC4B     		ldr	r3, .L46
 987 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 988 00a2 07F2FC40 		addw	r0, r7, #1276
 989 00a6 B04A     		ldr	r2, .L46+24
 990 00a8 1421     		movs	r1, #20
 991 00aa FFF7FEFF 		bl	snprintf
 377:notoriOS.c    ****         pushData("try_counter",c_try_counter,getTimeStamp());
 992              		.loc 1 377 0
 993 00ae FFF7FEFF 		bl	getTimeStamp
 994 00b2 0246     		mov	r2, r0
 995 00b4 07F2FC43 		addw	r3, r7, #1276
 996 00b8 1946     		mov	r1, r3
 997 00ba AD48     		ldr	r0, .L46+32
 998 00bc FFF7FEFF 		bl	pushData
 378:notoriOS.c    ****         
 379:notoriOS.c    ****         // Get size of the actual data stack count and push it to the stack
 380:notoriOS.c    ****         // If the buffer didn't overflow, then the data_count_sent is dataPointsInStack
 381:notoriOS.c    ****         // Otherwise, if the buffer overflows, then the data_count_sent is DATA_MAX_COUNT
 382:notoriOS.c    ****         if(buffer_overflow == false){
 999              		.loc 1 382 0
 1000 00c0 AC4B     		ldr	r3, .L46+36
 1001 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1002 00c4 83F00103 		eor	r3, r3, #1
 1003 00c8 DBB2     		uxtb	r3, r3
 1004 00ca 002B     		cmp	r3, #0
 1005 00cc 16D0     		beq	.L37
 1006              	.LBB3:
 383:notoriOS.c    ****             uint16 data_count_sent = sizeOfDataStack();
 1007              		.loc 1 383 0
 1008 00ce FFF7FEFF 		bl	sizeOfDataStack
 1009 00d2 0346     		mov	r3, r0
 1010 00d4 A7F83035 		strh	r3, [r7, #1328]	@ movhi
 384:notoriOS.c    ****             char c_data_count_sent[20];
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 27


 385:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",data_count_sent);
 1011              		.loc 1 385 0
 1012 00d8 B7F83035 		ldrh	r3, [r7, #1328]
 1013 00dc 07F2D440 		addw	r0, r7, #1236
 1014 00e0 A14A     		ldr	r2, .L46+24
 1015 00e2 1421     		movs	r1, #20
 1016 00e4 FFF7FEFF 		bl	snprintf
 386:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1017              		.loc 1 386 0
 1018 00e8 FFF7FEFF 		bl	getTimeStamp
 1019 00ec 0246     		mov	r2, r0
 1020 00ee 07F2D443 		addw	r3, r7, #1236
 1021 00f2 1946     		mov	r1, r3
 1022 00f4 A048     		ldr	r0, .L46+40
 1023 00f6 FFF7FEFF 		bl	pushData
 1024              	.LBE3:
 1025 00fa 0FE0     		b	.L38
 1026              	.L37:
 1027              	.LBB4:
 387:notoriOS.c    ****         }else{
 388:notoriOS.c    ****             char c_data_count_sent[20];
 389:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",DATA_MAX_VALUES);
 1028              		.loc 1 389 0
 1029 00fc 07F59860 		add	r0, r7, #1216
 1030 0100 9623     		movs	r3, #150
 1031 0102 994A     		ldr	r2, .L46+24
 1032 0104 1421     		movs	r1, #20
 1033 0106 FFF7FEFF 		bl	snprintf
 390:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1034              		.loc 1 390 0
 1035 010a FFF7FEFF 		bl	getTimeStamp
 1036 010e 0246     		mov	r2, r0
 1037 0110 07F59863 		add	r3, r7, #1216
 1038 0114 1946     		mov	r1, r3
 1039 0116 9848     		ldr	r0, .L46+40
 1040 0118 FFF7FEFF 		bl	pushData
 1041              	.L38:
 1042              	.LBE4:
 391:notoriOS.c    ****         }
 392:notoriOS.c    ****         
 393:notoriOS.c    ****         // Get size of the desired data stack count and push it to the stack
 394:notoriOS.c    ****         uint16 data_count_desired = sizeOfDataStackDesired();
 1043              		.loc 1 394 0
 1044 011c FFF7FEFF 		bl	sizeOfDataStackDesired
 1045 0120 0346     		mov	r3, r0
 1046 0122 A7F82E35 		strh	r3, [r7, #1326]	@ movhi
 395:notoriOS.c    ****         char c_data_count_desired[20];
 396:notoriOS.c    ****         // subtract 1 to disclude data_count_sent so that it focuses only on the actual data
 397:notoriOS.c    ****         snprintf(c_data_count_desired,sizeof(c_data_count_desired),"%d", data_count_desired-1);
 1047              		.loc 1 397 0
 1048 0126 B7F82E35 		ldrh	r3, [r7, #1326]
 1049 012a 013B     		subs	r3, r3, #1
 1050 012c 07F59D60 		add	r0, r7, #1256
 1051 0130 8D4A     		ldr	r2, .L46+24
 1052 0132 1421     		movs	r1, #20
 1053 0134 FFF7FEFF 		bl	snprintf
 398:notoriOS.c    ****         pushData("data_count_desired",c_data_count_desired,getTimeStamp());
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 28


 1054              		.loc 1 398 0
 1055 0138 FFF7FEFF 		bl	getTimeStamp
 1056 013c 0246     		mov	r2, r0
 1057 013e 07F59D63 		add	r3, r7, #1256
 1058 0142 1946     		mov	r1, r3
 1059 0144 8D48     		ldr	r0, .L46+44
 1060 0146 FFF7FEFF 		bl	pushData
 399:notoriOS.c    ****         
 400:notoriOS.c    ****         // Construct HTPP request
 401:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Begin HTTP post.");
 1061              		.loc 1 401 0
 1062 014a 8D49     		ldr	r1, .L46+48
 1063 014c 0020     		movs	r0, #0
 1064 014e FFF7FEFF 		bl	printNotif
 402:notoriOS.c    ****         
 403:notoriOS.c    ****         // Old influx API
 404:notoriOS.c    ****         // Construct_influx_route(http_route,base,system_settings.ep_user,system_settings.ep_pswd,s
 405:notoriOS.c    ****         construct_malcom_route(http_route,"api/v1/write",modem_info.imei,CURRENT_COMMIT);
 1065              		.loc 1 405 0
 1066 0152 8C4B     		ldr	r3, .L46+52
 1067 0154 8C4A     		ldr	r2, .L46+56
 1068 0156 8D49     		ldr	r1, .L46+60
 1069 0158 8148     		ldr	r0, .L46+16
 1070 015a FFF7FEFF 		bl	construct_malcom_route
 406:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"HTTP route: %s", http_route);
 1071              		.loc 1 406 0
 1072 015e 804A     		ldr	r2, .L46+16
 1073 0160 8B49     		ldr	r1, .L46+64
 1074 0162 0020     		movs	r0, #0
 1075 0164 FFF7FEFF 		bl	printNotif
 407:notoriOS.c    ****         
 408:notoriOS.c    ****         //OLD INFLUX API
 409:notoriOS.c    ****         //construct_influx_write_body(http_body,system_settings.node_id);
 410:notoriOS.c    ****         construct_malcom_body(http_body);
 1076              		.loc 1 410 0
 1077 0168 7C48     		ldr	r0, .L46+12
 1078 016a FFF7FEFF 		bl	construct_malcom_body
 411:notoriOS.c    ****         construct_generic_HTTP_request(http_request,http_body,system_settings.ep_host,http_route,sy
 1079              		.loc 1 411 0
 1080 016e 894B     		ldr	r3, .L46+68
 1081 0170 5B6E     		ldr	r3, [r3, #100]
 1082 0172 894A     		ldr	r2, .L46+72
 1083 0174 0592     		str	r2, [sp, #20]
 1084 0176 0022     		movs	r2, #0
 1085 0178 0492     		str	r2, [sp, #16]
 1086 017a 884A     		ldr	r2, .L46+76
 1087 017c 0392     		str	r2, [sp, #12]
 1088 017e 884A     		ldr	r2, .L46+80
 1089 0180 0292     		str	r2, [sp, #8]
 1090 0182 884A     		ldr	r2, .L46+84
 1091 0184 0192     		str	r2, [sp, #4]
 1092 0186 0093     		str	r3, [sp]
 1093 0188 754B     		ldr	r3, .L46+16
 1094 018a 824A     		ldr	r2, .L46+68
 1095 018c 7349     		ldr	r1, .L46+12
 1096 018e 7248     		ldr	r0, .L46+8
 1097 0190 FFF7FEFF 		bl	construct_generic_HTTP_request
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 29


 412:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1098              		.loc 1 412 0
 1099 0194 704A     		ldr	r2, .L46+8
 1100 0196 8449     		ldr	r1, .L46+88
 1101 0198 0020     		movs	r0, #0
 1102 019a FFF7FEFF 		bl	printNotif
 413:notoriOS.c    ****         
 414:notoriOS.c    ****         // Push request to modem and escape with <ctrl+z> escape sequence
 415:notoriOS.c    ****         // Open port and begin command line sequence
 416:notoriOS.c    ****         char portConfig[200];
 417:notoriOS.c    ****         uint8 status = 0u;
 1103              		.loc 1 417 0
 1104 019e 0023     		movs	r3, #0
 1105 01a0 87F82D35 		strb	r3, [r7, #1325]
 418:notoriOS.c    ****         
 419:notoriOS.c    ****         snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",system_settings.ep_por
 1106              		.loc 1 419 0
 1107 01a4 7B4B     		ldr	r3, .L46+68
 1108 01a6 5A6E     		ldr	r2, [r3, #100]
 1109 01a8 3846     		mov	r0, r7
 1110 01aa 7A4B     		ldr	r3, .L46+68
 1111 01ac 0093     		str	r3, [sp]
 1112 01ae 1346     		mov	r3, r2
 1113 01b0 7E4A     		ldr	r2, .L46+92
 1114 01b2 C821     		movs	r1, #200
 1115 01b4 FFF7FEFF 		bl	snprintf
 420:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1116              		.loc 1 420 0
 1117 01b8 3B46     		mov	r3, r7
 1118 01ba 1A46     		mov	r2, r3
 1119 01bc 7C49     		ldr	r1, .L46+96
 1120 01be 0020     		movs	r0, #0
 1121 01c0 FFF7FEFF 		bl	printNotif
 421:notoriOS.c    ****         status = at_write_command(portConfig,"OK",10000u);
 1122              		.loc 1 421 0
 1123 01c4 3B46     		mov	r3, r7
 1124 01c6 42F21072 		movw	r2, #10000
 1125 01ca 7A49     		ldr	r1, .L46+100
 1126 01cc 1846     		mov	r0, r3
 1127 01ce FFF7FEFF 		bl	at_write_command
 1128 01d2 0346     		mov	r3, r0
 1129 01d4 87F82D35 		strb	r3, [r7, #1325]
 422:notoriOS.c    ****         
 423:notoriOS.c    ****         // create character pointer to chunk through the http_request
 424:notoriOS.c    ****         char *chunk;
 425:notoriOS.c    ****         // Set chunk to start where http_request starts
 426:notoriOS.c    ****         chunk = http_request;
 1130              		.loc 1 426 0
 1131 01d8 5F4B     		ldr	r3, .L46+8
 1132 01da C7F83435 		str	r3, [r7, #1332]
 427:notoriOS.c    ****         // variable for the number of packets to send
 428:notoriOS.c    ****         int8 packets;
 429:notoriOS.c    ****         packets = ceil(nextafter((strlen(http_request)/MAX_BYTES_SENT),MAX_BYTES_SENT));
 1133              		.loc 1 429 0
 1134 01de 5E48     		ldr	r0, .L46+8
 1135 01e0 FFF7FEFF 		bl	strlen
 1136 01e4 0246     		mov	r2, r0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 30


 1137 01e6 744B     		ldr	r3, .L46+104
 1138 01e8 A3FB0223 		umull	r2, r3, r3, r2
 1139 01ec 5B09     		lsrs	r3, r3, #5
 1140 01ee 1846     		mov	r0, r3
 1141 01f0 FFF7FEFF 		bl	__aeabi_ui2d
 1142 01f4 4FF00002 		mov	r2, #0
 1143 01f8 704B     		ldr	r3, .L46+108
 1144 01fa FFF7FEFF 		bl	nextafter
 1145 01fe 0346     		mov	r3, r0
 1146 0200 0C46     		mov	r4, r1
 1147 0202 1846     		mov	r0, r3
 1148 0204 2146     		mov	r1, r4
 1149 0206 FFF7FEFF 		bl	ceil
 1150 020a 0346     		mov	r3, r0
 1151 020c 0C46     		mov	r4, r1
 1152 020e 1846     		mov	r0, r3
 1153 0210 2146     		mov	r1, r4
 1154 0212 FFF7FEFF 		bl	__aeabi_d2iz
 1155 0216 0346     		mov	r3, r0
 1156 0218 87F82C35 		strb	r3, [r7, #1324]
 430:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "http_request len: %d", strlen(http_request));
 1157              		.loc 1 430 0
 1158 021c 4E48     		ldr	r0, .L46+8
 1159 021e FFF7FEFF 		bl	strlen
 1160 0222 0346     		mov	r3, r0
 1161 0224 1A46     		mov	r2, r3
 1162 0226 6649     		ldr	r1, .L46+112
 1163 0228 0020     		movs	r0, #0
 1164 022a FFF7FEFF 		bl	printNotif
 431:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "# of packets: %d", packets);
 1165              		.loc 1 431 0
 1166 022e 97F92C35 		ldrsb	r3, [r7, #1324]
 1167 0232 1A46     		mov	r2, r3
 1168 0234 6349     		ldr	r1, .L46+116
 1169 0236 0020     		movs	r0, #0
 1170 0238 FFF7FEFF 		bl	printNotif
 1171              	.LBB5:
 432:notoriOS.c    ****         // while the size of the chunk of the data we are sending to the server is smaller than the
 433:notoriOS.c    ****         for(int8 packet = 0; packet < packets; packet++){
 1172              		.loc 1 433 0
 1173 023c 0023     		movs	r3, #0
 1174 023e 87F83335 		strb	r3, [r7, #1331]
 1175 0242 53E0     		b	.L39
 1176              	.L42:
 1177              	.LBB6:
 434:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 435:notoriOS.c    ****             char http_chunk[1001];
 436:notoriOS.c    ****             // AT command #SSEND= is an execution command that permits, while the module is in comm
 437:notoriOS.c    ****             // To complete the operation, send Ctrl-Z char to exit
 438:notoriOS.c    ****             status = at_write_command("AT#SSEND=1\r\n", ">", 1000u);
 1178              		.loc 1 438 0
 1179 0244 4FF47A72 		mov	r2, #1000
 1180 0248 5F49     		ldr	r1, .L46+120
 1181 024a 6048     		ldr	r0, .L46+124
 1182 024c FFF7FEFF 		bl	at_write_command
 1183 0250 0346     		mov	r3, r0
 1184 0252 87F82D35 		strb	r3, [r7, #1325]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 31


 439:notoriOS.c    ****             // Print the first 1000 characters of http_request into http_chunk
 440:notoriOS.c    ****             snprintf(http_chunk, MAX_BYTES_SENT, "%s",chunk);
 1185              		.loc 1 440 0
 1186 0256 07F1C800 		add	r0, r7, #200
 1187 025a D7F83435 		ldr	r3, [r7, #1332]
 1188 025e 544A     		ldr	r2, .L46+96
 1189 0260 4FF4FA71 		mov	r1, #500
 1190 0264 FFF7FEFF 		bl	snprintf
 441:notoriOS.c    ****             // Append 1 character "<ctrl+z> escape sequence" to http_request to exit modem command 
 442:notoriOS.c    ****             strncat(http_chunk, "\032", 1); 
 1191              		.loc 1 442 0
 1192 0268 07F1C803 		add	r3, r7, #200
 1193 026c 1846     		mov	r0, r3
 1194 026e FFF7FEFF 		bl	strlen
 1195 0272 0346     		mov	r3, r0
 1196 0274 1A46     		mov	r2, r3
 1197 0276 07F1C803 		add	r3, r7, #200
 1198 027a 1344     		add	r3, r3, r2
 1199 027c 5449     		ldr	r1, .L46+128
 1200 027e 1A46     		mov	r2, r3
 1201 0280 0B46     		mov	r3, r1
 1202 0282 1B88     		ldrh	r3, [r3]	@ unaligned
 1203 0284 1380     		strh	r3, [r2]	@ unaligned
 443:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"chunk %d: %s", packet, http_chunk);
 1204              		.loc 1 443 0
 1205 0286 97F93325 		ldrsb	r2, [r7, #1331]
 1206 028a 07F1C803 		add	r3, r7, #200
 1207 028e 5149     		ldr	r1, .L46+132
 1208 0290 0020     		movs	r0, #0
 1209 0292 FFF7FEFF 		bl	printNotif
 444:notoriOS.c    ****             // Send data to server
 445:notoriOS.c    ****             if ((packet+1) != packets){
 1210              		.loc 1 445 0
 1211 0296 97F93335 		ldrsb	r3, [r7, #1331]
 1212 029a 5A1C     		adds	r2, r3, #1
 1213 029c 97F92C35 		ldrsb	r3, [r7, #1324]
 1214 02a0 9A42     		cmp	r2, r3
 1215 02a2 11D0     		beq	.L40
 446:notoriOS.c    ****                 status = at_write_command(http_chunk, "OK", 5000u);
 1216              		.loc 1 446 0
 1217 02a4 07F1C803 		add	r3, r7, #200
 1218 02a8 41F28832 		movw	r2, #5000
 1219 02ac 4149     		ldr	r1, .L46+100
 1220 02ae 1846     		mov	r0, r3
 1221 02b0 FFF7FEFF 		bl	at_write_command
 1222 02b4 0346     		mov	r3, r0
 1223 02b6 87F82D35 		strb	r3, [r7, #1325]
 447:notoriOS.c    ****                 // Move the pointer forward 
 448:notoriOS.c    ****                 chunk = chunk + MAX_BYTES_SENT - 1;
 1224              		.loc 1 448 0
 1225 02ba D7F83435 		ldr	r3, [r7, #1332]
 1226 02be 03F2F313 		addw	r3, r3, #499
 1227 02c2 C7F83435 		str	r3, [r7, #1332]
 1228 02c6 0AE0     		b	.L41
 1229              	.L40:
 449:notoriOS.c    ****             }else{
 450:notoriOS.c    ****                 status = at_write_command(http_chunk, "SRING", 5000u);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 32


 1230              		.loc 1 450 0
 1231 02c8 07F1C803 		add	r3, r7, #200
 1232 02cc 41F28832 		movw	r2, #5000
 1233 02d0 4149     		ldr	r1, .L46+136
 1234 02d2 1846     		mov	r0, r3
 1235 02d4 FFF7FEFF 		bl	at_write_command
 1236 02d8 0346     		mov	r3, r0
 1237 02da 87F82D35 		strb	r3, [r7, #1325]
 1238              	.L41:
 1239              	.LBE6:
 433:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1240              		.loc 1 433 0 discriminator 2
 1241 02de 97F93335 		ldrsb	r3, [r7, #1331]
 1242 02e2 DBB2     		uxtb	r3, r3
 1243 02e4 0133     		adds	r3, r3, #1
 1244 02e6 DBB2     		uxtb	r3, r3
 1245 02e8 87F83335 		strb	r3, [r7, #1331]
 1246              	.L39:
 433:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1247              		.loc 1 433 0 is_stmt 0 discriminator 1
 1248 02ec 97F93325 		ldrsb	r2, [r7, #1331]
 1249 02f0 97F92C35 		ldrsb	r3, [r7, #1324]
 1250 02f4 9A42     		cmp	r2, r3
 1251 02f6 A5DB     		blt	.L42
 1252              	.LBE5:
 451:notoriOS.c    ****             }
 452:notoriOS.c    ****             
 453:notoriOS.c    ****         }
 454:notoriOS.c    ****         
 455:notoriOS.c    ****         // Read received buffer
 456:notoriOS.c    ****         // A good write will return code "OS-OK"
 457:notoriOS.c    ****         // AT command #SRECV= is an execution command that permits users to read data arrived throu
 458:notoriOS.c    ****         // = 1 means the UPD information is enabled: data are read just until the end of the UDP da
 459:notoriOS.c    ****         status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 1253              		.loc 1 459 0 is_stmt 1
 1254 02f8 41F28832 		movw	r2, #5000
 1255 02fc 3749     		ldr	r1, .L46+140
 1256 02fe 3848     		ldr	r0, .L46+144
 1257 0300 FFF7FEFF 		bl	at_write_command
 1258 0304 0346     		mov	r3, r0
 1259 0306 87F82D35 		strb	r3, [r7, #1325]
 460:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Received SRECV: %s",uart_received_string);
 461:notoriOS.c    ****     
 462:notoriOS.c    ****   
 463:notoriOS.c    ****         // If it worked, clear the queue and clock how long the end-to-end tx took
 464:notoriOS.c    ****         if(status == 1u){
 1260              		.loc 1 464 0
 1261 030a 97F82D35 		ldrb	r3, [r7, #1325]	@ zero_extendqisi2
 1262 030e 012B     		cmp	r3, #1
 1263 0310 6CD1     		bne	.L43
 1264              	.LBB7:
 465:notoriOS.c    ****             get_updated_parameters_from_malcom();
 1265              		.loc 1 465 0
 1266 0312 FFF7FEFF 		bl	get_updated_parameters_from_malcom
 466:notoriOS.c    ****             Clear_Data_Stack();
 1267              		.loc 1 466 0
 1268 0316 FFF7FEFF 		bl	Clear_Data_Stack
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 33


 467:notoriOS.c    ****             int send_time = (int)(getTimeStamp()-(int32)modem_start_time_stamp);
 1269              		.loc 1 467 0
 1270 031a FFF7FEFF 		bl	getTimeStamp
 1271 031e 0246     		mov	r2, r0
 1272 0320 304B     		ldr	r3, .L46+148
 1273 0322 1B68     		ldr	r3, [r3]
 1274 0324 D31A     		subs	r3, r2, r3
 1275 0326 C7F82835 		str	r3, [r7, #1320]
 468:notoriOS.c    ****             char s_send_time[10];
 469:notoriOS.c    ****             snprintf(s_send_time,sizeof(s_send_time),"%d",send_time);
 1276              		.loc 1 469 0
 1277 032a 07F2B440 		addw	r0, r7, #1204
 1278 032e D7F82835 		ldr	r3, [r7, #1320]
 1279 0332 0D4A     		ldr	r2, .L46+24
 1280 0334 0A21     		movs	r1, #10
 1281 0336 FFF7FEFF 		bl	snprintf
 470:notoriOS.c    ****             pushData("modem_tx_time",s_send_time,getTimeStamp());
 1282              		.loc 1 470 0
 1283 033a FFF7FEFF 		bl	getTimeStamp
 1284 033e 0246     		mov	r2, r0
 1285 0340 07F2B443 		addw	r3, r7, #1204
 1286 0344 1946     		mov	r1, r3
 1287 0346 2848     		ldr	r0, .L46+152
 1288 0348 FFF7FEFF 		bl	pushData
 1289              	.LBE7:
 1290 034c 52E0     		b	.L44
 1291              	.L47:
 1292 034e 00BF     		.align	2
 1293              	.L46:
 1294 0350 00000000 		.word	try_counter
 1295 0354 C0000000 		.word	.LC7
 1296 0358 00000000 		.word	http_request
 1297 035c 00000000 		.word	http_body
 1298 0360 00000000 		.word	http_route
 1299 0364 00000000 		.word	modem_stats
 1300 0368 3C000000 		.word	.LC2
 1301 036c D0000000 		.word	.LC8
 1302 0370 D8000000 		.word	.LC9
 1303 0374 00000000 		.word	buffer_overflow
 1304 0378 E4000000 		.word	.LC10
 1305 037c F4000000 		.word	.LC11
 1306 0380 08010000 		.word	.LC12
 1307 0384 1C010000 		.word	.LC13
 1308 0388 28000000 		.word	modem_info+40
 1309 038c 48010000 		.word	.LC14
 1310 0390 58010000 		.word	.LC15
 1311 0394 00000000 		.word	system_settings
 1312 0398 68010000 		.word	.LC16
 1313 039c 6C010000 		.word	.LC17
 1314 03a0 70010000 		.word	.LC18
 1315 03a4 78010000 		.word	.LC19
 1316 03a8 80010000 		.word	.LC20
 1317 03ac 98010000 		.word	.LC21
 1318 03b0 B4010000 		.word	.LC22
 1319 03b4 B8010000 		.word	.LC23
 1320 03b8 D34D6210 		.word	274877907
 1321 03bc 00407F40 		.word	1082081280
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 34


 1322 03c0 BC010000 		.word	.LC24
 1323 03c4 D4010000 		.word	.LC25
 1324 03c8 E8010000 		.word	.LC26
 1325 03cc EC010000 		.word	.LC27
 1326 03d0 FC010000 		.word	.LC28
 1327 03d4 00020000 		.word	.LC29
 1328 03d8 10020000 		.word	.LC30
 1329 03dc 18020000 		.word	.LC31
 1330 03e0 20020000 		.word	.LC32
 1331 03e4 00000000 		.word	modem_start_time_stamp
 1332 03e8 34020000 		.word	.LC33
 1333              	.L43:
 471:notoriOS.c    ****         }else{
 472:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR, "OS-NO: Could not receive data from server.");
 1334              		.loc 1 472 0
 1335 03ec 0E49     		ldr	r1, .L48
 1336 03ee 0220     		movs	r0, #2
 1337 03f0 FFF7FEFF 		bl	printNotif
 1338              	.L44:
 473:notoriOS.c    ****         }
 474:notoriOS.c    ****          
 475:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 476:notoriOS.c    ****         long network_time = modem_get_network_time();
 1339              		.loc 1 476 0
 1340 03f4 FFF7FEFF 		bl	modem_get_network_time
 1341 03f8 C7F82405 		str	r0, [r7, #1316]
 477:notoriOS.c    ****         if(network_time != 0){
 1342              		.loc 1 477 0
 1343 03fc D7F82435 		ldr	r3, [r7, #1316]
 1344 0400 002B     		cmp	r3, #0
 1345 0402 03D0     		beq	.L45
 478:notoriOS.c    ****            setTime(network_time);
 1346              		.loc 1 478 0
 1347 0404 D7F82405 		ldr	r0, [r7, #1316]
 1348 0408 FFF7FEFF 		bl	setTime
 1349              	.L45:
 479:notoriOS.c    ****         }
 480:notoriOS.c    ****         
 481:notoriOS.c    ****         // If transmitted, flush the data stack and shut down modem
 482:notoriOS.c    ****         // If not -- keep the statck and try next time
 483:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 484:notoriOS.c    ****         modem_power_down();
 1350              		.loc 1 484 0
 1351 040c FFF7FEFF 		bl	modem_power_down
 485:notoriOS.c    ****         
 486:notoriOS.c    ****         try_counter = 0u;
 1352              		.loc 1 486 0
 1353 0410 064B     		ldr	r3, .L48+4
 1354 0412 0022     		movs	r2, #0
 1355 0414 1A70     		strb	r2, [r3]
 487:notoriOS.c    ****         return 0u;
 1356              		.loc 1 487 0
 1357 0416 0023     		movs	r3, #0
 1358 0418 00E0     		b	.L33
 1359              	.L36:
 1360              	.LBE2:
 488:notoriOS.c    ****     }
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 35


 489:notoriOS.c    ****       
 490:notoriOS.c    ****       return 1u; // Not done yet
 1361              		.loc 1 490 0
 1362 041a 0123     		movs	r3, #1
 1363              	.L33:
 491:notoriOS.c    **** }
 1364              		.loc 1 491 0 discriminator 1
 1365 041c 1846     		mov	r0, r3
 1366 041e 07F23C57 		addw	r7, r7, #1340
 1367              		.cfi_def_cfa_offset 12
 1368 0422 BD46     		mov	sp, r7
 1369              		.cfi_def_cfa_register 13
 1370              		@ sp needed
 1371 0424 90BD     		pop	{r4, r7, pc}
 1372              	.L49:
 1373 0426 00BF     		.align	2
 1374              	.L48:
 1375 0428 44020000 		.word	.LC34
 1376 042c 00000000 		.word	try_counter
 1377              		.cfi_endproc
 1378              	.LFE74:
 1379              		.size	syncData, .-syncData
 1380              		.section	.text.configureRemoteParams,"ax",%progbits
 1381              		.align	2
 1382              		.global	configureRemoteParams
 1383              		.thumb
 1384              		.thumb_func
 1385              		.type	configureRemoteParams, %function
 1386              	configureRemoteParams:
 1387              	.LFB75:
 492:notoriOS.c    **** 
 493:notoriOS.c    **** // ==============================================
 494:notoriOS.c    **** // Syncs with cell-tower clock and check meta-DB
 495:notoriOS.c    **** // Returns 0 when done
 496:notoriOS.c    **** // ==============================================
 497:notoriOS.c    **** uint8 configureRemoteParams(){
 1388              		.loc 1 497 0
 1389              		.cfi_startproc
 1390              		@ args = 0, pretend = 0, frame = 8
 1391              		@ frame_needed = 1, uses_anonymous_args = 0
 1392 0000 80B5     		push	{r7, lr}
 1393              		.cfi_def_cfa_offset 8
 1394              		.cfi_offset 7, -8
 1395              		.cfi_offset 14, -4
 1396 0002 82B0     		sub	sp, sp, #8
 1397              		.cfi_def_cfa_offset 16
 1398 0004 00AF     		add	r7, sp, #0
 1399              		.cfi_def_cfa_register 7
 498:notoriOS.c    ****     
 499:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1400              		.loc 1 499 0
 1401 0006 FFF7FEFF 		bl	modem_get_state
 1402 000a 0346     		mov	r3, r0
 1403 000c 002B     		cmp	r3, #0
 1404 000e 02D1     		bne	.L51
 500:notoriOS.c    ****         // This puts all the modem points into a state that won't leak power    
 501:notoriOS.c    ****         modem_power_up();
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 36


 1405              		.loc 1 501 0
 1406 0010 FFF7FEFF 		bl	modem_power_up
 1407 0014 11E0     		b	.L52
 1408              	.L51:
 502:notoriOS.c    ****             
 503:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1409              		.loc 1 503 0
 1410 0016 FFF7FEFF 		bl	modem_get_state
 1411 001a 0346     		mov	r3, r0
 1412 001c 042B     		cmp	r3, #4
 1413 001e 0CD1     		bne	.L52
 1414              	.LBB8:
 504:notoriOS.c    ****         
 505:notoriOS.c    ****         // This is where we will interfasce with some sort of broker that assings node IDs
 506:notoriOS.c    ****         
 507:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 508:notoriOS.c    ****         long network_time = modem_get_network_time();
 1415              		.loc 1 508 0
 1416 0020 FFF7FEFF 		bl	modem_get_network_time
 1417 0024 7860     		str	r0, [r7, #4]
 509:notoriOS.c    ****         if(network_time != 0){
 1418              		.loc 1 509 0
 1419 0026 7B68     		ldr	r3, [r7, #4]
 1420 0028 002B     		cmp	r3, #0
 1421 002a 02D0     		beq	.L53
 510:notoriOS.c    ****             setTime(network_time);
 1422              		.loc 1 510 0
 1423 002c 7868     		ldr	r0, [r7, #4]
 1424 002e FFF7FEFF 		bl	setTime
 1425              	.L53:
 511:notoriOS.c    ****         }
 512:notoriOS.c    ****         
 513:notoriOS.c    ****         // Get GPS coordinates
 514:notoriOS.c    ****         //gps_t gps = modem_get_gps_coordinates();
 515:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 516:notoriOS.c    ****         modem_power_down();
 1426              		.loc 1 516 0
 1427 0032 FFF7FEFF 		bl	modem_power_down
 517:notoriOS.c    ****         return 0u;
 1428              		.loc 1 517 0
 1429 0036 0023     		movs	r3, #0
 1430 0038 00E0     		b	.L54
 1431              	.L52:
 1432              	.LBE8:
 518:notoriOS.c    ****         
 519:notoriOS.c    ****     }
 520:notoriOS.c    ****     
 521:notoriOS.c    ****     return 1u;
 1433              		.loc 1 521 0
 1434 003a 0123     		movs	r3, #1
 1435              	.L54:
 522:notoriOS.c    **** }
 1436              		.loc 1 522 0
 1437 003c 1846     		mov	r0, r3
 1438 003e 0837     		adds	r7, r7, #8
 1439              		.cfi_def_cfa_offset 8
 1440 0040 BD46     		mov	sp, r7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 37


 1441              		.cfi_def_cfa_register 13
 1442              		@ sp needed
 1443 0042 80BD     		pop	{r7, pc}
 1444              		.cfi_endproc
 1445              	.LFE75:
 1446              		.size	configureRemoteParams, .-configureRemoteParams
 1447              		.section	.rodata
 1448 026f 00       		.align	2
 1449              	.LC35:
 1450 0270 256C6400 		.ascii	"%ld\000"
 1451              		.align	2
 1452              	.LC36:
 1453 0274 6D617862 		.ascii	"maxbotix_depth=%s\000"
 1453      6F746978 
 1453      5F646570 
 1453      74683D25 
 1453      7300
 1454 0286 0000     		.align	2
 1455              	.LC37:
 1456 0288 6D617862 		.ascii	"maxbotix_depth\000"
 1456      6F746978 
 1456      5F646570 
 1456      746800
 1457 0297 00       		.align	2
 1458              	.LC38:
 1459 0298 612B00   		.ascii	"a+\000"
 1460 029b 00       		.align	2
 1461              	.LC39:
 1462 029c 206D6178 		.ascii	" maxbotix_depth: \000"
 1462      626F7469 
 1462      785F6465 
 1462      7074683A 
 1462      2000
 1463 02ae 0000     		.align	2
 1464              	.LC40:
 1465 02b0 2000     		.ascii	" \000"
 1466 02b2 0000     		.align	2
 1467              	.LC41:
 1468 02b4 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 1468      64206E6F 
 1468      74206765 
 1468      74207661 
 1468      6C696420 
 1469              		.global	__aeabi_f2d
 1470              		.align	2
 1471              	.LC42:
 1472 02e0 252E3266 		.ascii	"%.2f\000"
 1472      00
 1473 02e5 000000   		.align	2
 1474              	.LC43:
 1475 02e8 765F6261 		.ascii	"v_bat=%s\000"
 1475      743D2573 
 1475      00
 1476 02f1 000000   		.align	2
 1477              	.LC44:
 1478 02f4 765F6261 		.ascii	"v_bat\000"
 1478      7400
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 38


 1479 02fa 0000     		.align	2
 1480              	.LC45:
 1481 02fc 20766261 		.ascii	" vbat: \000"
 1481      743A2000 
 1482              		.align	2
 1483              	.LC46:
 1484 0304 70726573 		.ascii	"pressure_current=%s\000"
 1484      73757265 
 1484      5F637572 
 1484      72656E74 
 1484      3D257300 
 1485              		.align	2
 1486              	.LC47:
 1487 0318 70726573 		.ascii	"pressure_current\000"
 1487      73757265 
 1487      5F637572 
 1487      72656E74 
 1487      00
 1488 0329 000000   		.align	2
 1489              	.LC48:
 1490 032c 20707265 		.ascii	" pressure_current: \000"
 1490      73737572 
 1490      655F6375 
 1490      7272656E 
 1490      743A2000 
 1491              		.align	2
 1492              	.LC49:
 1493 0340 70726573 		.ascii	"pressure_depth=%s\000"
 1493      73757265 
 1493      5F646570 
 1493      74683D25 
 1493      7300
 1494 0352 0000     		.align	2
 1495              	.LC50:
 1496 0354 70726573 		.ascii	"pressure_depth\000"
 1496      73757265 
 1496      5F646570 
 1496      746800
 1497 0363 00       		.align	2
 1498              	.LC51:
 1499 0364 20707265 		.ascii	" pressure_depth: \000"
 1499      73737572 
 1499      655F6465 
 1499      7074683A 
 1499      2000
 1500 0376 0000     		.align	2
 1501              	.LC52:
 1502 0378 436F756C 		.ascii	"Could not get valid readings from ADC.\000"
 1502      64206E6F 
 1502      74206765 
 1502      74207661 
 1502      6C696420 
 1503              		.section	.text.makeMeasurements,"ax",%progbits
 1504              		.align	2
 1505              		.global	makeMeasurements
 1506              		.thumb
 1507              		.thumb_func
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 39


 1508              		.type	makeMeasurements, %function
 1509              	makeMeasurements:
 1510              	.LFB76:
 523:notoriOS.c    **** 
 524:notoriOS.c    **** 
 525:notoriOS.c    **** // ==============================================
 526:notoriOS.c    **** // Make sensor measurements, which will be handeled by another cutions
 527:notoriOS.c    **** // Returns 0 when finished
 528:notoriOS.c    **** // ==============================================
 529:notoriOS.c    **** uint8 makeMeasurements(){
 1511              		.loc 1 529 0
 1512              		.cfi_startproc
 1513              		@ args = 0, pretend = 0, frame = 112
 1514              		@ frame_needed = 1, uses_anonymous_args = 0
 1515 0000 90B5     		push	{r4, r7, lr}
 1516              		.cfi_def_cfa_offset 12
 1517              		.cfi_offset 4, -12
 1518              		.cfi_offset 7, -8
 1519              		.cfi_offset 14, -4
 1520 0002 9FB0     		sub	sp, sp, #124
 1521              		.cfi_def_cfa_offset 136
 1522 0004 02AF     		add	r7, sp, #8
 1523              		.cfi_def_cfa 7, 128
 530:notoriOS.c    ****     
 531:notoriOS.c    ****     // Get clock time and save to timeStamp
 532:notoriOS.c    ****     long timeStamp = getTimeStamp();
 1524              		.loc 1 532 0
 1525 0006 FFF7FEFF 		bl	getTimeStamp
 1526 000a F866     		str	r0, [r7, #108]
 533:notoriOS.c    ****     char c_timeStamp[32];
 534:notoriOS.c    ****     snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 1527              		.loc 1 534 0
 1528 000c 07F14C00 		add	r0, r7, #76
 1529 0010 FB6E     		ldr	r3, [r7, #108]
 1530 0012 834A     		ldr	r2, .L63
 1531 0014 2021     		movs	r1, #32
 1532 0016 FFF7FEFF 		bl	snprintf
 535:notoriOS.c    ****     
 536:notoriOS.c    ****     // Holds string for value that will be written 
 537:notoriOS.c    ****     char value[DATA_MAX_KEY_LENGTH];
 538:notoriOS.c    ****     
 539:notoriOS.c    ****     // If node type is depth node, take level sensor measurements
 540:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_DEPTH){
 1533              		.loc 1 540 0
 1534 001a 824B     		ldr	r3, .L63+4
 1535 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1536 001e 002B     		cmp	r3, #0
 1537 0020 3BD1     		bne	.L56
 1538              	.LBB9:
 541:notoriOS.c    ****         
 542:notoriOS.c    ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
 543:notoriOS.c    ****         level_sensor_t m_level_sensor;
 544:notoriOS.c    ****         
 545:notoriOS.c    ****         // Take level sensor readings and save them to m_level_sensor
 546:notoriOS.c    ****         m_level_sensor = level_sensor_take_reading();
 1539              		.loc 1 546 0
 1540 0022 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 40


 1541 0026 1846     		mov	r0, r3
 1542 0028 FFF7FEFF 		bl	level_sensor_take_reading
 547:notoriOS.c    ****     
 548:notoriOS.c    ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
 549:notoriOS.c    ****         if(m_level_sensor.num_valid_readings > 0){
 1543              		.loc 1 549 0
 1544 002c 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 1545 0030 002B     		cmp	r3, #0
 1546 0032 2ED0     		beq	.L57
 550:notoriOS.c    ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 1547              		.loc 1 550 0
 1548 0034 B7F91E30 		ldrsh	r3, [r7, #30]
 1549 0038 07F13800 		add	r0, r7, #56
 1550 003c 7A4A     		ldr	r2, .L63+8
 1551 003e 1421     		movs	r1, #20
 1552 0040 FFF7FEFF 		bl	snprintf
 551:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 1553              		.loc 1 551 0
 1554 0044 07F13803 		add	r3, r7, #56
 1555 0048 1A46     		mov	r2, r3
 1556 004a 7849     		ldr	r1, .L63+12
 1557 004c 0020     		movs	r0, #0
 1558 004e FFF7FEFF 		bl	printNotif
 552:notoriOS.c    ****             pushData("maxbotix_depth",value,timeStamp);
 1559              		.loc 1 552 0
 1560 0052 07F13803 		add	r3, r7, #56
 1561 0056 FA6E     		ldr	r2, [r7, #108]
 1562 0058 1946     		mov	r1, r3
 1563 005a 7548     		ldr	r0, .L63+16
 1564 005c FFF7FEFF 		bl	pushData
 553:notoriOS.c    ****             
 554:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 555:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1565              		.loc 1 555 0
 1566 0060 07F14C03 		add	r3, r7, #76
 1567 0064 1A46     		mov	r2, r3
 1568 0066 7349     		ldr	r1, .L63+20
 1569 0068 7348     		ldr	r0, .L63+24
 1570 006a FFF7FEFF 		bl	SD_write
 556:notoriOS.c    ****             SD_write(Data_fileName, "a+", " maxbotix_depth: ");
 1571              		.loc 1 556 0
 1572 006e 734A     		ldr	r2, .L63+28
 1573 0070 7049     		ldr	r1, .L63+20
 1574 0072 7148     		ldr	r0, .L63+24
 1575 0074 FFF7FEFF 		bl	SD_write
 557:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1576              		.loc 1 557 0
 1577 0078 07F13803 		add	r3, r7, #56
 1578 007c 1A46     		mov	r2, r3
 1579 007e 6D49     		ldr	r1, .L63+20
 1580 0080 6D48     		ldr	r0, .L63+24
 1581 0082 FFF7FEFF 		bl	SD_write
 558:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1582              		.loc 1 558 0
 1583 0086 6E4A     		ldr	r2, .L63+32
 1584 0088 6A49     		ldr	r1, .L63+20
 1585 008a 6B48     		ldr	r0, .L63+24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 41


 1586 008c FFF7FEFF 		bl	SD_write
 1587 0090 03E0     		b	.L56
 1588              	.L57:
 559:notoriOS.c    ****         }else{
 560:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 1589              		.loc 1 560 0
 1590 0092 6C49     		ldr	r1, .L63+36
 1591 0094 0220     		movs	r0, #2
 1592 0096 FFF7FEFF 		bl	printNotif
 1593              	.L56:
 1594              	.LBE9:
 561:notoriOS.c    ****             //pushData("maxbotix_depth","error",timeStamp);
 562:notoriOS.c    ****         }
 563:notoriOS.c    ****     }
 564:notoriOS.c    ****     
 565:notoriOS.c    ****     
 566:notoriOS.c    ****     // voltage_t is a new data type we defined in voltages.h. We then use that data type to define 
 567:notoriOS.c    ****     voltage_t m_voltage;
 568:notoriOS.c    ****     
 569:notoriOS.c    ****     // Take voltage readings and save them to m_voltage
 570:notoriOS.c    ****     m_voltage = voltage_take_readings();
 1595              		.loc 1 570 0
 1596 009a 07F12403 		add	r3, r7, #36
 1597 009e 1846     		mov	r0, r3
 1598 00a0 FFF7FEFF 		bl	voltage_take_readings
 571:notoriOS.c    ****     
 572:notoriOS.c    ****     // If the reading is valid, print the voltage battery and pressure transducer reading and push 
 573:notoriOS.c    ****     if(m_voltage.valid){
 1599              		.loc 1 573 0
 1600 00a4 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1601 00a8 002B     		cmp	r3, #0
 1602 00aa 00F0AF80 		beq	.L59
 574:notoriOS.c    ****         // battery voltage data
 575:notoriOS.c    ****         snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_battery);
 1603              		.loc 1 575 0
 1604 00ae 7B6A     		ldr	r3, [r7, #36]	@ float
 1605 00b0 1846     		mov	r0, r3
 1606 00b2 FFF7FEFF 		bl	__aeabi_f2d
 1607 00b6 0346     		mov	r3, r0
 1608 00b8 0C46     		mov	r4, r1
 1609 00ba 07F13800 		add	r0, r7, #56
 1610 00be CDE90034 		strd	r3, [sp]
 1611 00c2 614A     		ldr	r2, .L63+40
 1612 00c4 1421     		movs	r1, #20
 1613 00c6 FFF7FEFF 		bl	snprintf
 576:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"v_bat=%s",value);
 1614              		.loc 1 576 0
 1615 00ca 07F13803 		add	r3, r7, #56
 1616 00ce 1A46     		mov	r2, r3
 1617 00d0 5E49     		ldr	r1, .L63+44
 1618 00d2 0020     		movs	r0, #0
 1619 00d4 FFF7FEFF 		bl	printNotif
 577:notoriOS.c    ****         pushData("v_bat",value,timeStamp);
 1620              		.loc 1 577 0
 1621 00d8 07F13803 		add	r3, r7, #56
 1622 00dc FA6E     		ldr	r2, [r7, #108]
 1623 00de 1946     		mov	r1, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 42


 1624 00e0 5B48     		ldr	r0, .L63+48
 1625 00e2 FFF7FEFF 		bl	pushData
 578:notoriOS.c    ****         
 579:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 580:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 1626              		.loc 1 580 0
 1627 00e6 564A     		ldr	r2, .L63+32
 1628 00e8 5249     		ldr	r1, .L63+20
 1629 00ea 5348     		ldr	r0, .L63+24
 1630 00ec FFF7FEFF 		bl	SD_write
 581:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
 1631              		.loc 1 581 0
 1632 00f0 07F14C03 		add	r3, r7, #76
 1633 00f4 1A46     		mov	r2, r3
 1634 00f6 4F49     		ldr	r1, .L63+20
 1635 00f8 4F48     		ldr	r0, .L63+24
 1636 00fa FFF7FEFF 		bl	SD_write
 582:notoriOS.c    ****         SD_write(Data_fileName, "a+", " vbat: ");
 1637              		.loc 1 582 0
 1638 00fe 554A     		ldr	r2, .L63+52
 1639 0100 4C49     		ldr	r1, .L63+20
 1640 0102 4D48     		ldr	r0, .L63+24
 1641 0104 FFF7FEFF 		bl	SD_write
 583:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 1642              		.loc 1 583 0
 1643 0108 07F13803 		add	r3, r7, #56
 1644 010c 1A46     		mov	r2, r3
 1645 010e 4949     		ldr	r1, .L63+20
 1646 0110 4948     		ldr	r0, .L63+24
 1647 0112 FFF7FEFF 		bl	SD_write
 584:notoriOS.c    ****         
 585:notoriOS.c    ****         // If node type is green infrastructure node, take pressure transducer measurements
 586:notoriOS.c    ****         if(updatable_parameters.node_type == NODE_TYPE_GREENINFRASTRUCTURE){
 1648              		.loc 1 586 0
 1649 0116 434B     		ldr	r3, .L63+4
 1650 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1651 011a 012B     		cmp	r3, #1
 1652 011c 7AD1     		bne	.L61
 1653              	.LBB10:
 587:notoriOS.c    ****             
 588:notoriOS.c    ****             // pressure transducer voltage (V) data
 589:notoriOS.c    ****             //snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_pressure);
 590:notoriOS.c    ****             //printNotif(NOTIF_TYPE_EVENT,"pressure_voltage=%s",value);
 591:notoriOS.c    ****             //pushData("pressure_voltage",value,timeStamp);
 592:notoriOS.c    ****             
 593:notoriOS.c    ****             // pressure_t is a new data type we defined in voltages.h. We then use that data type t
 594:notoriOS.c    ****             pressure_t m_pressure;
 595:notoriOS.c    ****             
 596:notoriOS.c    ****             // Make pressure transducer calculators for current and depth
 597:notoriOS.c    ****             m_pressure = pressure_calculations(m_voltage);
 1654              		.loc 1 597 0
 1655 011e 3C46     		mov	r4, r7
 1656 0120 6A46     		mov	r2, sp
 1657 0122 07F13003 		add	r3, r7, #48
 1658 0126 93E80300 		ldmia	r3, {r0, r1}
 1659 012a 82E80300 		stmia	r2, {r0, r1}
 1660 012e 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 43


 1661 0132 0ECB     		ldmia	r3, {r1, r2, r3}
 1662 0134 2046     		mov	r0, r4
 1663 0136 FFF7FEFF 		bl	pressure_calculations
 598:notoriOS.c    ****             
 599:notoriOS.c    ****             // pressure transducer current (mA) data
 600:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_current);
 1664              		.loc 1 600 0
 1665 013a 3B68     		ldr	r3, [r7]	@ float
 1666 013c 1846     		mov	r0, r3
 1667 013e FFF7FEFF 		bl	__aeabi_f2d
 1668 0142 0346     		mov	r3, r0
 1669 0144 0C46     		mov	r4, r1
 1670 0146 07F13800 		add	r0, r7, #56
 1671 014a CDE90034 		strd	r3, [sp]
 1672 014e 3E4A     		ldr	r2, .L63+40
 1673 0150 1421     		movs	r1, #20
 1674 0152 FFF7FEFF 		bl	snprintf
 601:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_current=%s",value);
 1675              		.loc 1 601 0
 1676 0156 07F13803 		add	r3, r7, #56
 1677 015a 1A46     		mov	r2, r3
 1678 015c 3E49     		ldr	r1, .L63+56
 1679 015e 0020     		movs	r0, #0
 1680 0160 FFF7FEFF 		bl	printNotif
 602:notoriOS.c    ****             pushData("pressure_current",value,timeStamp);
 1681              		.loc 1 602 0
 1682 0164 07F13803 		add	r3, r7, #56
 1683 0168 FA6E     		ldr	r2, [r7, #108]
 1684 016a 1946     		mov	r1, r3
 1685 016c 3B48     		ldr	r0, .L63+60
 1686 016e FFF7FEFF 		bl	pushData
 603:notoriOS.c    ****             
 604:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 605:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1687              		.loc 1 605 0
 1688 0172 334A     		ldr	r2, .L63+32
 1689 0174 2F49     		ldr	r1, .L63+20
 1690 0176 3048     		ldr	r0, .L63+24
 1691 0178 FFF7FEFF 		bl	SD_write
 606:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1692              		.loc 1 606 0
 1693 017c 07F14C03 		add	r3, r7, #76
 1694 0180 1A46     		mov	r2, r3
 1695 0182 2C49     		ldr	r1, .L63+20
 1696 0184 2C48     		ldr	r0, .L63+24
 1697 0186 FFF7FEFF 		bl	SD_write
 607:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_current: ");
 1698              		.loc 1 607 0
 1699 018a 354A     		ldr	r2, .L63+64
 1700 018c 2949     		ldr	r1, .L63+20
 1701 018e 2A48     		ldr	r0, .L63+24
 1702 0190 FFF7FEFF 		bl	SD_write
 608:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1703              		.loc 1 608 0
 1704 0194 07F13803 		add	r3, r7, #56
 1705 0198 1A46     		mov	r2, r3
 1706 019a 2649     		ldr	r1, .L63+20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 44


 1707 019c 2648     		ldr	r0, .L63+24
 1708 019e FFF7FEFF 		bl	SD_write
 609:notoriOS.c    ****             
 610:notoriOS.c    ****             // pressure transducer depth (ft) data
 611:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_depth);
 1709              		.loc 1 611 0
 1710 01a2 7B68     		ldr	r3, [r7, #4]	@ float
 1711 01a4 1846     		mov	r0, r3
 1712 01a6 FFF7FEFF 		bl	__aeabi_f2d
 1713 01aa 0346     		mov	r3, r0
 1714 01ac 0C46     		mov	r4, r1
 1715 01ae 07F13800 		add	r0, r7, #56
 1716 01b2 CDE90034 		strd	r3, [sp]
 1717 01b6 244A     		ldr	r2, .L63+40
 1718 01b8 1421     		movs	r1, #20
 1719 01ba FFF7FEFF 		bl	snprintf
 612:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_depth=%s",value);
 1720              		.loc 1 612 0
 1721 01be 07F13803 		add	r3, r7, #56
 1722 01c2 1A46     		mov	r2, r3
 1723 01c4 2749     		ldr	r1, .L63+68
 1724 01c6 0020     		movs	r0, #0
 1725 01c8 FFF7FEFF 		bl	printNotif
 613:notoriOS.c    ****             pushData("pressure_depth",value,timeStamp);
 1726              		.loc 1 613 0
 1727 01cc 07F13803 		add	r3, r7, #56
 1728 01d0 FA6E     		ldr	r2, [r7, #108]
 1729 01d2 1946     		mov	r1, r3
 1730 01d4 2448     		ldr	r0, .L63+72
 1731 01d6 FFF7FEFF 		bl	pushData
 614:notoriOS.c    ****             
 615:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 616:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1732              		.loc 1 616 0
 1733 01da 194A     		ldr	r2, .L63+32
 1734 01dc 1549     		ldr	r1, .L63+20
 1735 01de 1648     		ldr	r0, .L63+24
 1736 01e0 FFF7FEFF 		bl	SD_write
 617:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1737              		.loc 1 617 0
 1738 01e4 07F14C03 		add	r3, r7, #76
 1739 01e8 1A46     		mov	r2, r3
 1740 01ea 1249     		ldr	r1, .L63+20
 1741 01ec 1248     		ldr	r0, .L63+24
 1742 01ee FFF7FEFF 		bl	SD_write
 618:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_depth: ");
 1743              		.loc 1 618 0
 1744 01f2 1E4A     		ldr	r2, .L63+76
 1745 01f4 0F49     		ldr	r1, .L63+20
 1746 01f6 1048     		ldr	r0, .L63+24
 1747 01f8 FFF7FEFF 		bl	SD_write
 619:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1748              		.loc 1 619 0
 1749 01fc 07F13803 		add	r3, r7, #56
 1750 0200 1A46     		mov	r2, r3
 1751 0202 0C49     		ldr	r1, .L63+20
 1752 0204 0C48     		ldr	r0, .L63+24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 45


 1753 0206 FFF7FEFF 		bl	SD_write
 1754 020a 03E0     		b	.L61
 1755              	.L59:
 1756              	.LBE10:
 620:notoriOS.c    ****         }    
 621:notoriOS.c    ****     }else{
 622:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from ADC.");
 1757              		.loc 1 622 0
 1758 020c 1849     		ldr	r1, .L63+80
 1759 020e 0220     		movs	r0, #2
 1760 0210 FFF7FEFF 		bl	printNotif
 1761              	.L61:
 623:notoriOS.c    ****     }
 624:notoriOS.c    ****     
 625:notoriOS.c    ****     return 0u;
 1762              		.loc 1 625 0
 1763 0214 0023     		movs	r3, #0
 626:notoriOS.c    **** }
 1764              		.loc 1 626 0
 1765 0216 1846     		mov	r0, r3
 1766 0218 7437     		adds	r7, r7, #116
 1767              		.cfi_def_cfa_offset 12
 1768 021a BD46     		mov	sp, r7
 1769              		.cfi_def_cfa_register 13
 1770              		@ sp needed
 1771 021c 90BD     		pop	{r4, r7, pc}
 1772              	.L64:
 1773 021e 00BF     		.align	2
 1774              	.L63:
 1775 0220 70020000 		.word	.LC35
 1776 0224 00000000 		.word	updatable_parameters
 1777 0228 3C000000 		.word	.LC2
 1778 022c 74020000 		.word	.LC36
 1779 0230 88020000 		.word	.LC37
 1780 0234 98020000 		.word	.LC38
 1781 0238 00000000 		.word	Data_fileName
 1782 023c 9C020000 		.word	.LC39
 1783 0240 B0020000 		.word	.LC40
 1784 0244 B4020000 		.word	.LC41
 1785 0248 E0020000 		.word	.LC42
 1786 024c E8020000 		.word	.LC43
 1787 0250 F4020000 		.word	.LC44
 1788 0254 FC020000 		.word	.LC45
 1789 0258 04030000 		.word	.LC46
 1790 025c 18030000 		.word	.LC47
 1791 0260 2C030000 		.word	.LC48
 1792 0264 40030000 		.word	.LC49
 1793 0268 54030000 		.word	.LC50
 1794 026c 64030000 		.word	.LC51
 1795 0270 78030000 		.word	.LC52
 1796              		.cfi_endproc
 1797              	.LFE76:
 1798              		.size	makeMeasurements, .-makeMeasurements
 1799              		.section	.rodata
 1800 039f 00       		.align	2
 1801              	.LC53:
 1802 03a0 4572726F 		.ascii	"Error setting system time.\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 46


 1802      72207365 
 1802      7474696E 
 1802      67207379 
 1802      7374656D 
 1803              		.section	.text.setTime,"ax",%progbits
 1804              		.align	2
 1805              		.global	setTime
 1806              		.thumb
 1807              		.thumb_func
 1808              		.type	setTime, %function
 1809              	setTime:
 1810              	.LFB77:
 627:notoriOS.c    **** 
 628:notoriOS.c    **** // ==============================================
 629:notoriOS.c    **** // Set the system time
 630:notoriOS.c    **** // Returns 0 if there is an error, returns 1 if successful
 631:notoriOS.c    **** // ==============================================
 632:notoriOS.c    **** uint8 setTime(long timeStamp){
 1811              		.loc 1 632 0
 1812              		.cfi_startproc
 1813              		@ args = 0, pretend = 0, frame = 24
 1814              		@ frame_needed = 1, uses_anonymous_args = 0
 1815 0000 80B5     		push	{r7, lr}
 1816              		.cfi_def_cfa_offset 8
 1817              		.cfi_offset 7, -8
 1818              		.cfi_offset 14, -4
 1819 0002 86B0     		sub	sp, sp, #24
 1820              		.cfi_def_cfa_offset 32
 1821 0004 00AF     		add	r7, sp, #0
 1822              		.cfi_def_cfa_register 7
 1823 0006 7860     		str	r0, [r7, #4]
 633:notoriOS.c    ****     // If timestamp is <= 0 print error statement and return 0
 634:notoriOS.c    ****     if(timeStamp <=0){
 1824              		.loc 1 634 0
 1825 0008 7B68     		ldr	r3, [r7, #4]
 1826 000a 002B     		cmp	r3, #0
 1827 000c 05DC     		bgt	.L66
 635:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Error setting system time.");
 1828              		.loc 1 635 0
 1829 000e 1849     		ldr	r1, .L68
 1830 0010 0220     		movs	r0, #2
 1831 0012 FFF7FEFF 		bl	printNotif
 636:notoriOS.c    ****         return 0;  
 1832              		.loc 1 636 0
 1833 0016 0023     		movs	r3, #0
 1834 0018 25E0     		b	.L67
 1835              	.L66:
 637:notoriOS.c    ****     }
 638:notoriOS.c    ****     // Create a new pointer t of data structure tm
 639:notoriOS.c    ****     struct tm * t;
 640:notoriOS.c    ****     // Converts a calendar time (pointed to by timer) and returns a pointer to a structure containi
 641:notoriOS.c    ****     t = gmtime(&timeStamp);
 1836              		.loc 1 641 0
 1837 001a 3B1D     		adds	r3, r7, #4
 1838 001c 1846     		mov	r0, r3
 1839 001e FFF7FEFF 		bl	gmtime
 1840 0022 7861     		str	r0, [r7, #20]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 47


 642:notoriOS.c    ****     
 643:notoriOS.c    ****     // Create variable localTime of data structure RTC_TIME_DATE
 644:notoriOS.c    ****     RTC_TIME_DATE localTime;
 645:notoriOS.c    ****     localTime.Sec = t->tm_sec;
 1841              		.loc 1 645 0
 1842 0024 7B69     		ldr	r3, [r7, #20]
 1843 0026 1B68     		ldr	r3, [r3]
 1844 0028 DBB2     		uxtb	r3, r3
 1845 002a 3B72     		strb	r3, [r7, #8]
 646:notoriOS.c    ****     localTime.Min = t->tm_min;
 1846              		.loc 1 646 0
 1847 002c 7B69     		ldr	r3, [r7, #20]
 1848 002e 5B68     		ldr	r3, [r3, #4]
 1849 0030 DBB2     		uxtb	r3, r3
 1850 0032 7B72     		strb	r3, [r7, #9]
 647:notoriOS.c    ****     localTime.Hour = t->tm_hour;
 1851              		.loc 1 647 0
 1852 0034 7B69     		ldr	r3, [r7, #20]
 1853 0036 9B68     		ldr	r3, [r3, #8]
 1854 0038 DBB2     		uxtb	r3, r3
 1855 003a BB72     		strb	r3, [r7, #10]
 648:notoriOS.c    ****     localTime.Year = t->tm_year + 1900;
 1856              		.loc 1 648 0
 1857 003c 7B69     		ldr	r3, [r7, #20]
 1858 003e 5B69     		ldr	r3, [r3, #20]
 1859 0040 9BB2     		uxth	r3, r3
 1860 0042 03F26C73 		addw	r3, r3, #1900
 1861 0046 9BB2     		uxth	r3, r3
 1862 0048 7B82     		strh	r3, [r7, #18]	@ movhi
 649:notoriOS.c    ****     localTime.Month = t->tm_mon;
 1863              		.loc 1 649 0
 1864 004a 7B69     		ldr	r3, [r7, #20]
 1865 004c 1B69     		ldr	r3, [r3, #16]
 1866 004e DBB2     		uxtb	r3, r3
 1867 0050 3B74     		strb	r3, [r7, #16]
 650:notoriOS.c    ****     localTime.DayOfMonth = t->tm_mday;
 1868              		.loc 1 650 0
 1869 0052 7B69     		ldr	r3, [r7, #20]
 1870 0054 DB68     		ldr	r3, [r3, #12]
 1871 0056 DBB2     		uxtb	r3, r3
 1872 0058 3B73     		strb	r3, [r7, #12]
 651:notoriOS.c    **** 
 652:notoriOS.c    ****     // Writes time and date values as current time and date.
 653:notoriOS.c    ****     RTC_WriteTime(&localTime);
 1873              		.loc 1 653 0
 1874 005a 07F10803 		add	r3, r7, #8
 1875 005e 1846     		mov	r0, r3
 1876 0060 FFF7FEFF 		bl	RTC_WriteTime
 654:notoriOS.c    ****     
 655:notoriOS.c    ****     // Return 1 when the system time was set properly.
 656:notoriOS.c    ****     return 1;
 1877              		.loc 1 656 0
 1878 0064 0123     		movs	r3, #1
 1879              	.L67:
 657:notoriOS.c    **** }
 1880              		.loc 1 657 0
 1881 0066 1846     		mov	r0, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 48


 1882 0068 1837     		adds	r7, r7, #24
 1883              		.cfi_def_cfa_offset 8
 1884 006a BD46     		mov	sp, r7
 1885              		.cfi_def_cfa_register 13
 1886              		@ sp needed
 1887 006c 80BD     		pop	{r7, pc}
 1888              	.L69:
 1889 006e 00BF     		.align	2
 1890              	.L68:
 1891 0070 A0030000 		.word	.LC53
 1892              		.cfi_endproc
 1893              	.LFE77:
 1894              		.size	setTime, .-setTime
 1895              		.section	.rodata
 1896 03bb 00       		.align	2
 1897              	.LC54:
 1898 03bc 75706772 		.ascii	"upgrade.hex\000"
 1898      6164652E 
 1898      68657800 
 1899              		.section	.text.upgraded,"ax",%progbits
 1900              		.align	2
 1901              		.global	upgraded
 1902              		.thumb
 1903              		.thumb_func
 1904              		.type	upgraded, %function
 1905              	upgraded:
 1906              	.LFB78:
 658:notoriOS.c    **** 
 659:notoriOS.c    **** //downloads and stores files on SD card
 660:notoriOS.c    **** 
 661:notoriOS.c    **** 
 662:notoriOS.c    **** 
 663:notoriOS.c    **** // ==============================================
 664:notoriOS.c    **** // Will they love it, will they hate it
 665:notoriOS.c    **** // Never fade it, I evade it
 666:notoriOS.c    **** // Cause I never really want to complicate it
 667:notoriOS.c    **** //      - Logic, Upgraded (2015)
 668:notoriOS.c    **** //
 669:notoriOS.c    **** // downloads new firmware, stores it on SD card, and reboots the system to allow bootloader 
 670:notoriOS.c    **** // returns 0 if modem is connected, 1 if the file downlaod failed, and does not return otherwise (b
 671:notoriOS.c    **** // ==============================================
 672:notoriOS.c    **** 
 673:notoriOS.c    **** uint8 upgraded(char *host, int port,  char *route){
 1907              		.loc 1 673 0
 1908              		.cfi_startproc
 1909              		@ args = 0, pretend = 0, frame = 232
 1910              		@ frame_needed = 1, uses_anonymous_args = 0
 1911 0000 80B5     		push	{r7, lr}
 1912              		.cfi_def_cfa_offset 8
 1913              		.cfi_offset 7, -8
 1914              		.cfi_offset 14, -4
 1915 0002 C0B0     		sub	sp, sp, #256
 1916              		.cfi_def_cfa_offset 264
 1917 0004 06AF     		add	r7, sp, #24
 1918              		.cfi_def_cfa 7, 240
 1919 0006 F860     		str	r0, [r7, #12]
 1920 0008 B960     		str	r1, [r7, #8]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 49


 1921 000a 7A60     		str	r2, [r7, #4]
 674:notoriOS.c    ****     
 675:notoriOS.c    ****     uint8 upgrade_status = 0;
 1922              		.loc 1 675 0
 1923 000c 0023     		movs	r3, #0
 1924 000e 87F8E730 		strb	r3, [r7, #231]
 676:notoriOS.c    ****     
 677:notoriOS.c    ****    //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 678:notoriOS.c    ****     if(modem_state != MODEM_STATE_READY){
 1925              		.loc 1 678 0
 1926 0012 384B     		ldr	r3, .L74
 1927 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1928 0016 042B     		cmp	r3, #4
 1929 0018 02D0     		beq	.L71
 679:notoriOS.c    ****         return upgrade_status;//where valid = 0
 1930              		.loc 1 679 0
 1931 001a 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 1932 001e 65E0     		b	.L73
 1933              	.L71:
 680:notoriOS.c    ****     }
 681:notoriOS.c    ****     
 682:notoriOS.c    ****     char fileName[] = "upgrade.hex";
 1934              		.loc 1 682 0
 1935 0020 354A     		ldr	r2, .L74+4
 1936 0022 07F1D803 		add	r3, r7, #216
 1937 0026 07CA     		ldmia	r2, {r0, r1, r2}
 1938 0028 83E80700 		stmia	r3, {r0, r1, r2}
 683:notoriOS.c    ****     //delete file, if one exisits already
 684:notoriOS.c    ****     SD_rmfile(fileName);
 1939              		.loc 1 684 0
 1940 002c 07F1D803 		add	r3, r7, #216
 1941 0030 1846     		mov	r0, r3
 1942 0032 FFF7FEFF 		bl	SD_rmfile
 685:notoriOS.c    ****     
 686:notoriOS.c    ****     // Create http request
 687:notoriOS.c    ****     construct_generic_HTTP_request(http_request,http_body,host,route,port,"POST","Close","",0,"1.1"
 1943              		.loc 1 687 0
 1944 0036 314B     		ldr	r3, .L74+8
 1945 0038 0593     		str	r3, [sp, #20]
 1946 003a 0023     		movs	r3, #0
 1947 003c 0493     		str	r3, [sp, #16]
 1948 003e 304B     		ldr	r3, .L74+12
 1949 0040 0393     		str	r3, [sp, #12]
 1950 0042 304B     		ldr	r3, .L74+16
 1951 0044 0293     		str	r3, [sp, #8]
 1952 0046 304B     		ldr	r3, .L74+20
 1953 0048 0193     		str	r3, [sp, #4]
 1954 004a BB68     		ldr	r3, [r7, #8]
 1955 004c 0093     		str	r3, [sp]
 1956 004e 7B68     		ldr	r3, [r7, #4]
 1957 0050 FA68     		ldr	r2, [r7, #12]
 1958 0052 2E49     		ldr	r1, .L74+24
 1959 0054 2E48     		ldr	r0, .L74+28
 1960 0056 FFF7FEFF 		bl	construct_generic_HTTP_request
 688:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1961              		.loc 1 688 0
 1962 005a 2D4A     		ldr	r2, .L74+28
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 50


 1963 005c 2D49     		ldr	r1, .L74+32
 1964 005e 0020     		movs	r0, #0
 1965 0060 FFF7FEFF 		bl	printNotif
 689:notoriOS.c    ****     // Create array portConfig of size 200 characters
 690:notoriOS.c    ****     char portConfig[200];
 691:notoriOS.c    ****     // Print port configurations
 692:notoriOS.c    ****     snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",port,host);
 1966              		.loc 1 692 0
 1967 0064 07F11000 		add	r0, r7, #16
 1968 0068 FB68     		ldr	r3, [r7, #12]
 1969 006a 0093     		str	r3, [sp]
 1970 006c BB68     		ldr	r3, [r7, #8]
 1971 006e 2A4A     		ldr	r2, .L74+36
 1972 0070 C821     		movs	r1, #200
 1973 0072 FFF7FEFF 		bl	snprintf
 693:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1974              		.loc 1 693 0
 1975 0076 07F11003 		add	r3, r7, #16
 1976 007a 1A46     		mov	r2, r3
 1977 007c 2749     		ldr	r1, .L74+40
 1978 007e 0020     		movs	r0, #0
 1979 0080 FFF7FEFF 		bl	printNotif
 694:notoriOS.c    ****     // AT command to configure the port
 695:notoriOS.c    ****     upgrade_status = at_write_command(portConfig,"OK",10000u);
 1980              		.loc 1 695 0
 1981 0084 07F11003 		add	r3, r7, #16
 1982 0088 42F21072 		movw	r2, #10000
 1983 008c 2449     		ldr	r1, .L74+44
 1984 008e 1846     		mov	r0, r3
 1985 0090 FFF7FEFF 		bl	at_write_command
 1986 0094 0346     		mov	r3, r0
 1987 0096 87F8E730 		strb	r3, [r7, #231]
 696:notoriOS.c    ****     // AT command #SSEND= is an execution command that permits, while the modul eis in command mode
 697:notoriOS.c    ****     // To complete the operation, send Ctrl-Z char to exit
 698:notoriOS.c    ****     upgrade_status = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 1988              		.loc 1 698 0
 1989 009a 4FF47A72 		mov	r2, #1000
 1990 009e 2149     		ldr	r1, .L74+48
 1991 00a0 2148     		ldr	r0, .L74+52
 1992 00a2 FFF7FEFF 		bl	at_write_command
 1993 00a6 0346     		mov	r3, r0
 1994 00a8 87F8E730 		strb	r3, [r7, #231]
 699:notoriOS.c    ****     // Append <ctrl+z> escape sequence to http_request to exit modem command line
 700:notoriOS.c    ****     strncat(http_request, "\032", 1); 
 1995              		.loc 1 700 0
 1996 00ac 1848     		ldr	r0, .L74+28
 1997 00ae FFF7FEFF 		bl	strlen
 1998 00b2 0346     		mov	r3, r0
 1999 00b4 1A46     		mov	r2, r3
 2000 00b6 164B     		ldr	r3, .L74+28
 2001 00b8 1344     		add	r3, r3, r2
 2002 00ba 1C49     		ldr	r1, .L74+56
 2003 00bc 1A46     		mov	r2, r3
 2004 00be 0B46     		mov	r3, r1
 2005 00c0 1B88     		ldrh	r3, [r3]	@ unaligned
 2006 00c2 1380     		strh	r3, [r2]	@ unaligned
 701:notoriOS.c    ****     // AT command to send http request
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 51


 702:notoriOS.c    ****     upgrade_status = at_write_command(http_request, "OK", 5000u);
 2007              		.loc 1 702 0
 2008 00c4 41F28832 		movw	r2, #5000
 2009 00c8 1549     		ldr	r1, .L74+44
 2010 00ca 1148     		ldr	r0, .L74+28
 2011 00cc FFF7FEFF 		bl	at_write_command
 2012 00d0 0346     		mov	r3, r0
 2013 00d2 87F8E730 		strb	r3, [r7, #231]
 703:notoriOS.c    ****     // AT command #SRECV= is an execution command that permits users to read data arrived through a
 704:notoriOS.c    ****     // = 1 means the UPD information is enabled: data are read just until the end of the UDP datagr
 705:notoriOS.c    ****     upgrade_status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 2014              		.loc 1 705 0
 2015 00d6 41F28832 		movw	r2, #5000
 2016 00da 1549     		ldr	r1, .L74+60
 2017 00dc 1548     		ldr	r0, .L74+64
 2018 00de FFF7FEFF 		bl	at_write_command
 2019 00e2 0346     		mov	r3, r0
 2020 00e4 87F8E730 		strb	r3, [r7, #231]
 706:notoriOS.c    ****     //SD_write(fileName,"w+",uart_received_string);
 707:notoriOS.c    ****     
 708:notoriOS.c    ****     
 709:notoriOS.c    ****     return upgrade_status;
 2021              		.loc 1 709 0
 2022 00e8 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2023              	.L73:
 710:notoriOS.c    ****     
 711:notoriOS.c    **** }
 2024              		.loc 1 711 0 discriminator 1
 2025 00ec 1846     		mov	r0, r3
 2026 00ee E837     		adds	r7, r7, #232
 2027              		.cfi_def_cfa_offset 8
 2028 00f0 BD46     		mov	sp, r7
 2029              		.cfi_def_cfa_register 13
 2030              		@ sp needed
 2031 00f2 80BD     		pop	{r7, pc}
 2032              	.L75:
 2033              		.align	2
 2034              	.L74:
 2035 00f4 00000000 		.word	modem_state
 2036 00f8 BC030000 		.word	.LC54
 2037 00fc 68010000 		.word	.LC16
 2038 0100 6C010000 		.word	.LC17
 2039 0104 70010000 		.word	.LC18
 2040 0108 78010000 		.word	.LC19
 2041 010c 00000000 		.word	http_body
 2042 0110 00000000 		.word	http_request
 2043 0114 80010000 		.word	.LC20
 2044 0118 98010000 		.word	.LC21
 2045 011c B4010000 		.word	.LC22
 2046 0120 B8010000 		.word	.LC23
 2047 0124 E8010000 		.word	.LC26
 2048 0128 EC010000 		.word	.LC27
 2049 012c FC010000 		.word	.LC28
 2050 0130 18020000 		.word	.LC31
 2051 0134 20020000 		.word	.LC32
 2052              		.cfi_endproc
 2053              	.LFE78:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 52


 2054              		.size	upgraded, .-upgraded
 2055              		.text
 2056              	.Letext0:
 2057              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2058              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2059              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2060              		.file 5 "Generated_Source\\PSoC5/RTC.h"
 2061              		.file 6 "testing.h"
 2062              		.file 7 "level_sensor.h"
 2063              		.file 8 "voltages.h"
 2064              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2065              		.file 10 "data.h"
 2066              		.file 11 "modem.h"
 2067              		.file 12 "notoriOS.h"
 2068              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
 2069              		.section	.debug_info,"",%progbits
 2070              	.Ldebug_info0:
 2071 0000 160C0000 		.4byte	0xc16
 2072 0004 0400     		.2byte	0x4
 2073 0006 00000000 		.4byte	.Ldebug_abbrev0
 2074 000a 04       		.byte	0x4
 2075 000b 01       		.uleb128 0x1
 2076 000c 72000000 		.4byte	.LASF159
 2077 0010 0C       		.byte	0xc
 2078 0011 7F070000 		.4byte	.LASF160
 2079 0015 BF020000 		.4byte	.LASF161
 2080 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2081 001d 00000000 		.4byte	0
 2082 0021 00000000 		.4byte	.Ldebug_line0
 2083 0025 02       		.uleb128 0x2
 2084 0026 01       		.byte	0x1
 2085 0027 06       		.byte	0x6
 2086 0028 43000000 		.4byte	.LASF0
 2087 002c 02       		.uleb128 0x2
 2088 002d 01       		.byte	0x1
 2089 002e 08       		.byte	0x8
 2090 002f 9C050000 		.4byte	.LASF1
 2091 0033 02       		.uleb128 0x2
 2092 0034 02       		.byte	0x2
 2093 0035 05       		.byte	0x5
 2094 0036 16040000 		.4byte	.LASF2
 2095 003a 02       		.uleb128 0x2
 2096 003b 02       		.byte	0x2
 2097 003c 07       		.byte	0x7
 2098 003d 17070000 		.4byte	.LASF3
 2099 0041 03       		.uleb128 0x3
 2100 0042 DF060000 		.4byte	.LASF9
 2101 0046 02       		.byte	0x2
 2102 0047 3F       		.byte	0x3f
 2103 0048 4C000000 		.4byte	0x4c
 2104 004c 02       		.uleb128 0x2
 2105 004d 04       		.byte	0x4
 2106 004e 05       		.byte	0x5
 2107 004f FC010000 		.4byte	.LASF4
 2108 0053 02       		.uleb128 0x2
 2109 0054 04       		.byte	0x4
 2110 0055 07       		.byte	0x7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 53


 2111 0056 4B030000 		.4byte	.LASF5
 2112 005a 02       		.uleb128 0x2
 2113 005b 08       		.byte	0x8
 2114 005c 05       		.byte	0x5
 2115 005d 57010000 		.4byte	.LASF6
 2116 0061 02       		.uleb128 0x2
 2117 0062 08       		.byte	0x8
 2118 0063 07       		.byte	0x7
 2119 0064 06010000 		.4byte	.LASF7
 2120 0068 04       		.uleb128 0x4
 2121 0069 04       		.byte	0x4
 2122 006a 05       		.byte	0x5
 2123 006b 696E7400 		.ascii	"int\000"
 2124 006f 02       		.uleb128 0x2
 2125 0070 04       		.byte	0x4
 2126 0071 07       		.byte	0x7
 2127 0072 F7020000 		.4byte	.LASF8
 2128 0076 03       		.uleb128 0x3
 2129 0077 94050000 		.4byte	.LASF10
 2130 007b 03       		.byte	0x3
 2131 007c 2C       		.byte	0x2c
 2132 007d 41000000 		.4byte	0x41
 2133 0081 05       		.uleb128 0x5
 2134 0082 28020000 		.4byte	.LASF11
 2135 0086 04       		.byte	0x4
 2136 0087 9201     		.2byte	0x192
 2137 0089 2C000000 		.4byte	0x2c
 2138 008d 05       		.uleb128 0x5
 2139 008e 06000000 		.4byte	.LASF12
 2140 0092 04       		.byte	0x4
 2141 0093 9301     		.2byte	0x193
 2142 0095 3A000000 		.4byte	0x3a
 2143 0099 05       		.uleb128 0x5
 2144 009a 6C020000 		.4byte	.LASF13
 2145 009e 04       		.byte	0x4
 2146 009f 9401     		.2byte	0x194
 2147 00a1 53000000 		.4byte	0x53
 2148 00a5 05       		.uleb128 0x5
 2149 00a6 D1030000 		.4byte	.LASF14
 2150 00aa 04       		.byte	0x4
 2151 00ab 9501     		.2byte	0x195
 2152 00ad 25000000 		.4byte	0x25
 2153 00b1 05       		.uleb128 0x5
 2154 00b2 94070000 		.4byte	.LASF15
 2155 00b6 04       		.byte	0x4
 2156 00b7 9601     		.2byte	0x196
 2157 00b9 33000000 		.4byte	0x33
 2158 00bd 05       		.uleb128 0x5
 2159 00be 46020000 		.4byte	.LASF16
 2160 00c2 04       		.byte	0x4
 2161 00c3 9701     		.2byte	0x197
 2162 00c5 4C000000 		.4byte	0x4c
 2163 00c9 02       		.uleb128 0x2
 2164 00ca 04       		.byte	0x4
 2165 00cb 04       		.byte	0x4
 2166 00cc 39050000 		.4byte	.LASF17
 2167 00d0 02       		.uleb128 0x2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 54


 2168 00d1 08       		.byte	0x8
 2169 00d2 04       		.byte	0x4
 2170 00d3 18080000 		.4byte	.LASF18
 2171 00d7 02       		.uleb128 0x2
 2172 00d8 01       		.byte	0x1
 2173 00d9 08       		.byte	0x8
 2174 00da B8060000 		.4byte	.LASF19
 2175 00de 02       		.uleb128 0x2
 2176 00df 08       		.byte	0x8
 2177 00e0 04       		.byte	0x4
 2178 00e1 9A060000 		.4byte	.LASF20
 2179 00e5 02       		.uleb128 0x2
 2180 00e6 04       		.byte	0x4
 2181 00e7 07       		.byte	0x7
 2182 00e8 93040000 		.4byte	.LASF21
 2183 00ec 06       		.uleb128 0x6
 2184 00ed 04       		.byte	0x4
 2185 00ee D7000000 		.4byte	0xd7
 2186 00f2 07       		.uleb128 0x7
 2187 00f3 D7000000 		.4byte	0xd7
 2188 00f7 02010000 		.4byte	0x102
 2189 00fb 08       		.uleb128 0x8
 2190 00fc E5000000 		.4byte	0xe5
 2191 0100 17       		.byte	0x17
 2192 0101 00       		.byte	0
 2193 0102 09       		.uleb128 0x9
 2194 0103 0C       		.byte	0xc
 2195 0104 05       		.byte	0x5
 2196 0105 30       		.byte	0x30
 2197 0106 6B010000 		.4byte	0x16b
 2198 010a 0A       		.uleb128 0xa
 2199 010b 53656300 		.ascii	"Sec\000"
 2200 010f 05       		.byte	0x5
 2201 0110 32       		.byte	0x32
 2202 0111 81000000 		.4byte	0x81
 2203 0115 00       		.byte	0
 2204 0116 0A       		.uleb128 0xa
 2205 0117 4D696E00 		.ascii	"Min\000"
 2206 011b 05       		.byte	0x5
 2207 011c 33       		.byte	0x33
 2208 011d 81000000 		.4byte	0x81
 2209 0121 01       		.byte	0x1
 2210 0122 0B       		.uleb128 0xb
 2211 0123 1D010000 		.4byte	.LASF22
 2212 0127 05       		.byte	0x5
 2213 0128 34       		.byte	0x34
 2214 0129 81000000 		.4byte	0x81
 2215 012d 02       		.byte	0x2
 2216 012e 0B       		.uleb128 0xb
 2217 012f F9050000 		.4byte	.LASF23
 2218 0133 05       		.byte	0x5
 2219 0134 35       		.byte	0x35
 2220 0135 81000000 		.4byte	0x81
 2221 0139 03       		.byte	0x3
 2222 013a 0B       		.uleb128 0xb
 2223 013b 8C030000 		.4byte	.LASF24
 2224 013f 05       		.byte	0x5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 55


 2225 0140 36       		.byte	0x36
 2226 0141 81000000 		.4byte	0x81
 2227 0145 04       		.byte	0x4
 2228 0146 0B       		.uleb128 0xb
 2229 0147 CD070000 		.4byte	.LASF25
 2230 014b 05       		.byte	0x5
 2231 014c 37       		.byte	0x37
 2232 014d 8D000000 		.4byte	0x8d
 2233 0151 06       		.byte	0x6
 2234 0152 0B       		.uleb128 0xb
 2235 0153 00010000 		.4byte	.LASF26
 2236 0157 05       		.byte	0x5
 2237 0158 38       		.byte	0x38
 2238 0159 81000000 		.4byte	0x81
 2239 015d 08       		.byte	0x8
 2240 015e 0B       		.uleb128 0xb
 2241 015f 89050000 		.4byte	.LASF27
 2242 0163 05       		.byte	0x5
 2243 0164 39       		.byte	0x39
 2244 0165 8D000000 		.4byte	0x8d
 2245 0169 0A       		.byte	0xa
 2246 016a 00       		.byte	0
 2247 016b 03       		.uleb128 0x3
 2248 016c DE040000 		.4byte	.LASF28
 2249 0170 05       		.byte	0x5
 2250 0171 3A       		.byte	0x3a
 2251 0172 76010000 		.4byte	0x176
 2252 0176 0C       		.uleb128 0xc
 2253 0177 02010000 		.4byte	0x102
 2254 017b 0D       		.uleb128 0xd
 2255 017c 8101     		.2byte	0x181
 2256 017e 06       		.byte	0x6
 2257 017f 0A       		.byte	0xa
 2258 0180 A9010000 		.4byte	0x1a9
 2259 0184 0B       		.uleb128 0xb
 2260 0185 7F050000 		.4byte	.LASF29
 2261 0189 06       		.byte	0x6
 2262 018a 0C       		.byte	0xc
 2263 018b A9010000 		.4byte	0x1a9
 2264 018f 00       		.byte	0
 2265 0190 0B       		.uleb128 0xb
 2266 0191 54070000 		.4byte	.LASF30
 2267 0195 06       		.byte	0x6
 2268 0196 0D       		.byte	0xd
 2269 0197 81000000 		.4byte	0x81
 2270 019b 80       		.byte	0x80
 2271 019c 0B       		.uleb128 0xb
 2272 019d 1B060000 		.4byte	.LASF31
 2273 01a1 06       		.byte	0x6
 2274 01a2 0F       		.byte	0xf
 2275 01a3 B9010000 		.4byte	0x1b9
 2276 01a7 81       		.byte	0x81
 2277 01a8 00       		.byte	0
 2278 01a9 07       		.uleb128 0x7
 2279 01aa D7000000 		.4byte	0xd7
 2280 01ae B9010000 		.4byte	0x1b9
 2281 01b2 08       		.uleb128 0x8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 56


 2282 01b3 E5000000 		.4byte	0xe5
 2283 01b7 7F       		.byte	0x7f
 2284 01b8 00       		.byte	0
 2285 01b9 07       		.uleb128 0x7
 2286 01ba D7000000 		.4byte	0xd7
 2287 01be C9010000 		.4byte	0x1c9
 2288 01c2 08       		.uleb128 0x8
 2289 01c3 E5000000 		.4byte	0xe5
 2290 01c7 FF       		.byte	0xff
 2291 01c8 00       		.byte	0
 2292 01c9 03       		.uleb128 0x3
 2293 01ca 03060000 		.4byte	.LASF32
 2294 01ce 06       		.byte	0x6
 2295 01cf 10       		.byte	0x10
 2296 01d0 7B010000 		.4byte	0x17b
 2297 01d4 09       		.uleb128 0x9
 2298 01d5 1A       		.byte	0x1a
 2299 01d6 07       		.byte	0x7
 2300 01d7 10       		.byte	0x10
 2301 01d8 0D020000 		.4byte	0x20d
 2302 01dc 0B       		.uleb128 0xb
 2303 01dd 7C020000 		.4byte	.LASF33
 2304 01e1 07       		.byte	0x7
 2305 01e2 11       		.byte	0x11
 2306 01e3 0D020000 		.4byte	0x20d
 2307 01e7 00       		.byte	0
 2308 01e8 0B       		.uleb128 0xb
 2309 01e9 01070000 		.4byte	.LASF34
 2310 01ed 07       		.byte	0x7
 2311 01ee 12       		.byte	0x12
 2312 01ef B1000000 		.4byte	0xb1
 2313 01f3 16       		.byte	0x16
 2314 01f4 0B       		.uleb128 0xb
 2315 01f5 23030000 		.4byte	.LASF35
 2316 01f9 07       		.byte	0x7
 2317 01fa 13       		.byte	0x13
 2318 01fb 81000000 		.4byte	0x81
 2319 01ff 18       		.byte	0x18
 2320 0200 0B       		.uleb128 0xb
 2321 0201 15000000 		.4byte	.LASF36
 2322 0205 07       		.byte	0x7
 2323 0206 14       		.byte	0x14
 2324 0207 81000000 		.4byte	0x81
 2325 020b 19       		.byte	0x19
 2326 020c 00       		.byte	0
 2327 020d 07       		.uleb128 0x7
 2328 020e B1000000 		.4byte	0xb1
 2329 0212 1D020000 		.4byte	0x21d
 2330 0216 08       		.uleb128 0x8
 2331 0217 E5000000 		.4byte	0xe5
 2332 021b 0A       		.byte	0xa
 2333 021c 00       		.byte	0
 2334 021d 03       		.uleb128 0x3
 2335 021e 3F050000 		.4byte	.LASF37
 2336 0222 07       		.byte	0x7
 2337 0223 15       		.byte	0x15
 2338 0224 D4010000 		.4byte	0x1d4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 57


 2339 0228 09       		.uleb128 0x9
 2340 0229 14       		.byte	0x14
 2341 022a 08       		.byte	0x8
 2342 022b 11       		.byte	0x11
 2343 022c 6D020000 		.4byte	0x26d
 2344 0230 0B       		.uleb128 0xb
 2345 0231 7C030000 		.4byte	.LASF38
 2346 0235 08       		.byte	0x8
 2347 0236 12       		.byte	0x12
 2348 0237 C9000000 		.4byte	0xc9
 2349 023b 00       		.byte	0
 2350 023c 0B       		.uleb128 0xb
 2351 023d A3010000 		.4byte	.LASF39
 2352 0241 08       		.byte	0x8
 2353 0242 13       		.byte	0x13
 2354 0243 C9000000 		.4byte	0xc9
 2355 0247 04       		.byte	0x4
 2356 0248 0B       		.uleb128 0xb
 2357 0249 B1010000 		.4byte	.LASF40
 2358 024d 08       		.byte	0x8
 2359 024e 14       		.byte	0x14
 2360 024f C9000000 		.4byte	0xc9
 2361 0253 08       		.byte	0x8
 2362 0254 0B       		.uleb128 0xb
 2363 0255 1B050000 		.4byte	.LASF41
 2364 0259 08       		.byte	0x8
 2365 025a 15       		.byte	0x15
 2366 025b C9000000 		.4byte	0xc9
 2367 025f 0C       		.byte	0xc
 2368 0260 0B       		.uleb128 0xb
 2369 0261 8C060000 		.4byte	.LASF42
 2370 0265 08       		.byte	0x8
 2371 0266 16       		.byte	0x16
 2372 0267 81000000 		.4byte	0x81
 2373 026b 10       		.byte	0x10
 2374 026c 00       		.byte	0
 2375 026d 03       		.uleb128 0x3
 2376 026e 1F080000 		.4byte	.LASF43
 2377 0272 08       		.byte	0x8
 2378 0273 17       		.byte	0x17
 2379 0274 28020000 		.4byte	0x228
 2380 0278 09       		.uleb128 0x9
 2381 0279 08       		.byte	0x8
 2382 027a 08       		.byte	0x8
 2383 027b 19       		.byte	0x19
 2384 027c 99020000 		.4byte	0x299
 2385 0280 0B       		.uleb128 0xb
 2386 0281 7B060000 		.4byte	.LASF44
 2387 0285 08       		.byte	0x8
 2388 0286 1A       		.byte	0x1a
 2389 0287 C9000000 		.4byte	0xc9
 2390 028b 00       		.byte	0
 2391 028c 0B       		.uleb128 0xb
 2392 028d E5050000 		.4byte	.LASF45
 2393 0291 08       		.byte	0x8
 2394 0292 1B       		.byte	0x1b
 2395 0293 C9000000 		.4byte	0xc9
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 58


 2396 0297 04       		.byte	0x4
 2397 0298 00       		.byte	0
 2398 0299 03       		.uleb128 0x3
 2399 029a D7070000 		.4byte	.LASF46
 2400 029e 08       		.byte	0x8
 2401 029f 1C       		.byte	0x1c
 2402 02a0 78020000 		.4byte	0x278
 2403 02a4 0E       		.uleb128 0xe
 2404 02a5 746D00   		.ascii	"tm\000"
 2405 02a8 24       		.byte	0x24
 2406 02a9 09       		.byte	0x9
 2407 02aa 21       		.byte	0x21
 2408 02ab 1C030000 		.4byte	0x31c
 2409 02af 0B       		.uleb128 0xb
 2410 02b0 42070000 		.4byte	.LASF47
 2411 02b4 09       		.byte	0x9
 2412 02b5 23       		.byte	0x23
 2413 02b6 68000000 		.4byte	0x68
 2414 02ba 00       		.byte	0
 2415 02bb 0B       		.uleb128 0xb
 2416 02bc 75040000 		.4byte	.LASF48
 2417 02c0 09       		.byte	0x9
 2418 02c1 24       		.byte	0x24
 2419 02c2 68000000 		.4byte	0x68
 2420 02c6 04       		.byte	0x4
 2421 02c7 0B       		.uleb128 0xb
 2422 02c8 0D000000 		.4byte	.LASF49
 2423 02cc 09       		.byte	0x9
 2424 02cd 25       		.byte	0x25
 2425 02ce 68000000 		.4byte	0x68
 2426 02d2 08       		.byte	0x8
 2427 02d3 0B       		.uleb128 0xb
 2428 02d4 31070000 		.4byte	.LASF50
 2429 02d8 09       		.byte	0x9
 2430 02d9 26       		.byte	0x26
 2431 02da 68000000 		.4byte	0x68
 2432 02de 0C       		.byte	0xc
 2433 02df 0B       		.uleb128 0xb
 2434 02e0 A7020000 		.4byte	.LASF51
 2435 02e4 09       		.byte	0x9
 2436 02e5 27       		.byte	0x27
 2437 02e6 68000000 		.4byte	0x68
 2438 02ea 10       		.byte	0x10
 2439 02eb 0B       		.uleb128 0xb
 2440 02ec E5020000 		.4byte	.LASF52
 2441 02f0 09       		.byte	0x9
 2442 02f1 28       		.byte	0x28
 2443 02f2 68000000 		.4byte	0x68
 2444 02f6 14       		.byte	0x14
 2445 02f7 0B       		.uleb128 0xb
 2446 02f8 92060000 		.4byte	.LASF53
 2447 02fc 09       		.byte	0x9
 2448 02fd 29       		.byte	0x29
 2449 02fe 68000000 		.4byte	0x68
 2450 0302 18       		.byte	0x18
 2451 0303 0B       		.uleb128 0xb
 2452 0304 9C040000 		.4byte	.LASF54
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 59


 2453 0308 09       		.byte	0x9
 2454 0309 2A       		.byte	0x2a
 2455 030a 68000000 		.4byte	0x68
 2456 030e 1C       		.byte	0x1c
 2457 030f 0B       		.uleb128 0xb
 2458 0310 B5030000 		.4byte	.LASF55
 2459 0314 09       		.byte	0x9
 2460 0315 2B       		.byte	0x2b
 2461 0316 68000000 		.4byte	0x68
 2462 031a 20       		.byte	0x20
 2463 031b 00       		.byte	0
 2464 031c 09       		.uleb128 0x9
 2465 031d 2C       		.byte	0x2c
 2466 031e 0A       		.byte	0xa
 2467 031f 14       		.byte	0x14
 2468 0320 49030000 		.4byte	0x349
 2469 0324 0A       		.uleb128 0xa
 2470 0325 6B657900 		.ascii	"key\000"
 2471 0329 0A       		.byte	0xa
 2472 032a 15       		.byte	0x15
 2473 032b 49030000 		.4byte	0x349
 2474 032f 00       		.byte	0
 2475 0330 0B       		.uleb128 0xb
 2476 0331 DA020000 		.4byte	.LASF56
 2477 0335 0A       		.byte	0xa
 2478 0336 16       		.byte	0x16
 2479 0337 49030000 		.4byte	0x349
 2480 033b 14       		.byte	0x14
 2481 033c 0B       		.uleb128 0xb
 2482 033d D4040000 		.4byte	.LASF57
 2483 0341 0A       		.byte	0xa
 2484 0342 17       		.byte	0x17
 2485 0343 BD000000 		.4byte	0xbd
 2486 0347 28       		.byte	0x28
 2487 0348 00       		.byte	0
 2488 0349 07       		.uleb128 0x7
 2489 034a D7000000 		.4byte	0xd7
 2490 034e 59030000 		.4byte	0x359
 2491 0352 08       		.uleb128 0x8
 2492 0353 E5000000 		.4byte	0xe5
 2493 0357 13       		.byte	0x13
 2494 0358 00       		.byte	0
 2495 0359 03       		.uleb128 0x3
 2496 035a 0C030000 		.4byte	.LASF58
 2497 035e 0A       		.byte	0xa
 2498 035f 19       		.byte	0x19
 2499 0360 1C030000 		.4byte	0x31c
 2500 0364 09       		.uleb128 0x9
 2501 0365 3C       		.byte	0x3c
 2502 0366 0B       		.byte	0xb
 2503 0367 35       		.byte	0x35
 2504 0368 91030000 		.4byte	0x391
 2505 036c 0B       		.uleb128 0xb
 2506 036d 2A070000 		.4byte	.LASF59
 2507 0371 0B       		.byte	0xb
 2508 0372 36       		.byte	0x36
 2509 0373 49030000 		.4byte	0x349
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 60


 2510 0377 00       		.byte	0
 2511 0378 0B       		.uleb128 0xb
 2512 0379 73020000 		.4byte	.LASF60
 2513 037d 0B       		.byte	0xb
 2514 037e 37       		.byte	0x37
 2515 037f 49030000 		.4byte	0x349
 2516 0383 14       		.byte	0x14
 2517 0384 0B       		.uleb128 0xb
 2518 0385 16060000 		.4byte	.LASF61
 2519 0389 0B       		.byte	0xb
 2520 038a 38       		.byte	0x38
 2521 038b 49030000 		.4byte	0x349
 2522 038f 28       		.byte	0x28
 2523 0390 00       		.byte	0
 2524 0391 03       		.uleb128 0x3
 2525 0392 E9010000 		.4byte	.LASF62
 2526 0396 0B       		.byte	0xb
 2527 0397 3A       		.byte	0x3a
 2528 0398 64030000 		.4byte	0x364
 2529 039c 09       		.uleb128 0x9
 2530 039d 20       		.byte	0x20
 2531 039e 0B       		.byte	0xb
 2532 039f 3C       		.byte	0x3c
 2533 03a0 05040000 		.4byte	0x405
 2534 03a4 0B       		.uleb128 0xb
 2535 03a5 F6010000 		.4byte	.LASF63
 2536 03a9 0B       		.byte	0xb
 2537 03aa 3D       		.byte	0x3d
 2538 03ab 68000000 		.4byte	0x68
 2539 03af 00       		.byte	0
 2540 03b0 0A       		.uleb128 0xa
 2541 03b1 62657200 		.ascii	"ber\000"
 2542 03b5 0B       		.byte	0xb
 2543 03b6 3E       		.byte	0x3e
 2544 03b7 68000000 		.4byte	0x68
 2545 03bb 04       		.byte	0x4
 2546 03bc 0B       		.uleb128 0xb
 2547 03bd F4050000 		.4byte	.LASF64
 2548 03c1 0B       		.byte	0xb
 2549 03c2 3F       		.byte	0x3f
 2550 03c3 68000000 		.4byte	0x68
 2551 03c7 08       		.byte	0x8
 2552 03c8 0B       		.uleb128 0xb
 2553 03c9 6D010000 		.4byte	.LASF65
 2554 03cd 0B       		.byte	0xb
 2555 03ce 40       		.byte	0x40
 2556 03cf 68000000 		.4byte	0x68
 2557 03d3 0C       		.byte	0xc
 2558 03d4 0B       		.uleb128 0xb
 2559 03d5 BF050000 		.4byte	.LASF66
 2560 03d9 0B       		.byte	0xb
 2561 03da 41       		.byte	0x41
 2562 03db 68000000 		.4byte	0x68
 2563 03df 10       		.byte	0x10
 2564 03e0 0B       		.uleb128 0xb
 2565 03e1 BA050000 		.4byte	.LASF67
 2566 03e5 0B       		.byte	0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 61


 2567 03e6 42       		.byte	0x42
 2568 03e7 68000000 		.4byte	0x68
 2569 03eb 14       		.byte	0x14
 2570 03ec 0B       		.uleb128 0xb
 2571 03ed 80010000 		.4byte	.LASF68
 2572 03f1 0B       		.byte	0xb
 2573 03f2 43       		.byte	0x43
 2574 03f3 68000000 		.4byte	0x68
 2575 03f7 18       		.byte	0x18
 2576 03f8 0B       		.uleb128 0xb
 2577 03f9 05020000 		.4byte	.LASF69
 2578 03fd 0B       		.byte	0xb
 2579 03fe 44       		.byte	0x44
 2580 03ff 68000000 		.4byte	0x68
 2581 0403 1C       		.byte	0x1c
 2582 0404 00       		.byte	0
 2583 0405 03       		.uleb128 0x3
 2584 0406 6D060000 		.4byte	.LASF70
 2585 040a 0B       		.byte	0xb
 2586 040b 46       		.byte	0x46
 2587 040c 9C030000 		.4byte	0x39c
 2588 0410 09       		.uleb128 0x9
 2589 0411 05       		.byte	0x5
 2590 0412 0B       		.byte	0xb
 2591 0413 52       		.byte	0x52
 2592 0414 55040000 		.4byte	0x455
 2593 0418 0B       		.uleb128 0xb
 2594 0419 4C020000 		.4byte	.LASF71
 2595 041d 0B       		.byte	0xb
 2596 041e 54       		.byte	0x54
 2597 041f 81000000 		.4byte	0x81
 2598 0423 00       		.byte	0
 2599 0424 0B       		.uleb128 0xb
 2600 0425 BE070000 		.4byte	.LASF72
 2601 0429 0B       		.byte	0xb
 2602 042a 56       		.byte	0x56
 2603 042b 55040000 		.4byte	0x455
 2604 042f 01       		.byte	0x1
 2605 0430 0B       		.uleb128 0xb
 2606 0431 0B080000 		.4byte	.LASF73
 2607 0435 0B       		.byte	0xb
 2608 0436 58       		.byte	0x58
 2609 0437 81000000 		.4byte	0x81
 2610 043b 02       		.byte	0x2
 2611 043c 0B       		.uleb128 0xb
 2612 043d DB050000 		.4byte	.LASF74
 2613 0441 0B       		.byte	0xb
 2614 0442 5A       		.byte	0x5a
 2615 0443 81000000 		.4byte	0x81
 2616 0447 03       		.byte	0x3
 2617 0448 0B       		.uleb128 0xb
 2618 0449 AE020000 		.4byte	.LASF75
 2619 044d 0B       		.byte	0xb
 2620 044e 5D       		.byte	0x5d
 2621 044f 81000000 		.4byte	0x81
 2622 0453 04       		.byte	0x4
 2623 0454 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 62


 2624 0455 02       		.uleb128 0x2
 2625 0456 01       		.byte	0x1
 2626 0457 02       		.byte	0x2
 2627 0458 8E050000 		.4byte	.LASF76
 2628 045c 03       		.uleb128 0x3
 2629 045d 42040000 		.4byte	.LASF77
 2630 0461 0B       		.byte	0xb
 2631 0462 5F       		.byte	0x5f
 2632 0463 10040000 		.4byte	0x410
 2633 0467 09       		.uleb128 0x9
 2634 0468 06       		.byte	0x6
 2635 0469 0C       		.byte	0xc
 2636 046a 2E       		.byte	0x2e
 2637 046b A0040000 		.4byte	0x4a0
 2638 046f 0B       		.uleb128 0xb
 2639 0470 8F020000 		.4byte	.LASF78
 2640 0474 0C       		.byte	0xc
 2641 0475 30       		.byte	0x30
 2642 0476 8D000000 		.4byte	0x8d
 2643 047a 00       		.byte	0
 2644 047b 0B       		.uleb128 0xb
 2645 047c A8070000 		.4byte	.LASF79
 2646 0480 0C       		.byte	0xc
 2647 0481 31       		.byte	0x31
 2648 0482 B1000000 		.4byte	0xb1
 2649 0486 02       		.byte	0x2
 2650 0487 0B       		.uleb128 0xb
 2651 0488 9A070000 		.4byte	.LASF80
 2652 048c 0C       		.byte	0xc
 2653 048d 32       		.byte	0x32
 2654 048e 81000000 		.4byte	0x81
 2655 0492 04       		.byte	0x4
 2656 0493 0B       		.uleb128 0xb
 2657 0494 4F000000 		.4byte	.LASF81
 2658 0498 0C       		.byte	0xc
 2659 0499 33       		.byte	0x33
 2660 049a 81000000 		.4byte	0x81
 2661 049e 05       		.byte	0x5
 2662 049f 00       		.byte	0
 2663 04a0 03       		.uleb128 0x3
 2664 04a1 18020000 		.4byte	.LASF82
 2665 04a5 0C       		.byte	0xc
 2666 04a6 36       		.byte	0x36
 2667 04a7 AB040000 		.4byte	0x4ab
 2668 04ab 0C       		.uleb128 0xc
 2669 04ac 67040000 		.4byte	0x467
 2670 04b0 09       		.uleb128 0x9
 2671 04b1 1C       		.byte	0x1c
 2672 04b2 0C       		.byte	0xc
 2673 04b3 39       		.byte	0x39
 2674 04b4 D1040000 		.4byte	0x4d1
 2675 04b8 0B       		.uleb128 0xb
 2676 04b9 BE030000 		.4byte	.LASF83
 2677 04bd 0C       		.byte	0xc
 2678 04be 3B       		.byte	0x3b
 2679 04bf D1040000 		.4byte	0x4d1
 2680 04c3 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 63


 2681 04c4 0B       		.uleb128 0xb
 2682 04c5 FD070000 		.4byte	.LASF84
 2683 04c9 0C       		.byte	0xc
 2684 04ca 3C       		.byte	0x3c
 2685 04cb F2000000 		.4byte	0xf2
 2686 04cf 04       		.byte	0x4
 2687 04d0 00       		.byte	0
 2688 04d1 06       		.uleb128 0x6
 2689 04d2 04       		.byte	0x4
 2690 04d3 91030000 		.4byte	0x391
 2691 04d7 03       		.uleb128 0x3
 2692 04d8 37040000 		.4byte	.LASF85
 2693 04dc 0C       		.byte	0xc
 2694 04dd 3E       		.byte	0x3e
 2695 04de B0040000 		.4byte	0x4b0
 2696 04e2 09       		.uleb128 0x9
 2697 04e3 68       		.byte	0x68
 2698 04e4 0C       		.byte	0xc
 2699 04e5 44       		.byte	0x44
 2700 04e6 03050000 		.4byte	0x503
 2701 04ea 0B       		.uleb128 0xb
 2702 04eb C9030000 		.4byte	.LASF86
 2703 04ef 0C       		.byte	0xc
 2704 04f0 49       		.byte	0x49
 2705 04f1 03050000 		.4byte	0x503
 2706 04f5 00       		.byte	0
 2707 04f6 0B       		.uleb128 0xb
 2708 04f7 AD030000 		.4byte	.LASF87
 2709 04fb 0C       		.byte	0xc
 2710 04fc 4A       		.byte	0x4a
 2711 04fd 68000000 		.4byte	0x68
 2712 0501 64       		.byte	0x64
 2713 0502 00       		.byte	0
 2714 0503 07       		.uleb128 0x7
 2715 0504 D7000000 		.4byte	0xd7
 2716 0508 13050000 		.4byte	0x513
 2717 050c 08       		.uleb128 0x8
 2718 050d E5000000 		.4byte	0xe5
 2719 0511 63       		.byte	0x63
 2720 0512 00       		.byte	0
 2721 0513 03       		.uleb128 0x3
 2722 0514 A4040000 		.4byte	.LASF88
 2723 0518 0C       		.byte	0xc
 2724 0519 50       		.byte	0x50
 2725 051a E2040000 		.4byte	0x4e2
 2726 051e 0F       		.uleb128 0xf
 2727 051f 67000000 		.4byte	.LASF162
 2728 0523 01       		.byte	0x1
 2729 0524 14       		.byte	0x14
 2730 0525 00000000 		.4byte	.LFB64
 2731 0529 0C000000 		.4byte	.LFE64-.LFB64
 2732 052d 01       		.uleb128 0x1
 2733 052e 9C       		.byte	0x9c
 2734 052f 10       		.uleb128 0x10
 2735 0530 ED070000 		.4byte	.LASF102
 2736 0534 01       		.byte	0x1
 2737 0535 28       		.byte	0x28
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 64


 2738 0536 00000000 		.4byte	.LFB65
 2739 053a 2C010000 		.4byte	.LFE65-.LFB65
 2740 053e 01       		.uleb128 0x1
 2741 053f 9C       		.byte	0x9c
 2742 0540 6F050000 		.4byte	0x56f
 2743 0544 11       		.uleb128 0x11
 2744 0545 E9060000 		.4byte	.LASF89
 2745 0549 01       		.byte	0x1
 2746 054a 3C       		.byte	0x3c
 2747 054b 6F050000 		.4byte	0x56f
 2748 054f 02       		.uleb128 0x2
 2749 0550 91       		.byte	0x91
 2750 0551 64       		.sleb128 -28
 2751 0552 11       		.uleb128 0x11
 2752 0553 C7070000 		.4byte	.LASF90
 2753 0557 01       		.byte	0x1
 2754 0558 59       		.byte	0x59
 2755 0559 7F050000 		.4byte	0x57f
 2756 055d 02       		.uleb128 0x2
 2757 055e 91       		.byte	0x91
 2758 055f 58       		.sleb128 -40
 2759 0560 11       		.uleb128 0x11
 2760 0561 5D030000 		.4byte	.LASF91
 2761 0565 01       		.byte	0x1
 2762 0566 5E       		.byte	0x5e
 2763 0567 81000000 		.4byte	0x81
 2764 056b 02       		.uleb128 0x2
 2765 056c 91       		.byte	0x91
 2766 056d 6F       		.sleb128 -17
 2767 056e 00       		.byte	0
 2768 056f 07       		.uleb128 0x7
 2769 0570 99000000 		.4byte	0x99
 2770 0574 7F050000 		.4byte	0x57f
 2771 0578 08       		.uleb128 0x8
 2772 0579 E5000000 		.4byte	0xe5
 2773 057d 01       		.byte	0x1
 2774 057e 00       		.byte	0
 2775 057f 07       		.uleb128 0x7
 2776 0580 D7000000 		.4byte	0xd7
 2777 0584 8F050000 		.4byte	0x58f
 2778 0588 08       		.uleb128 0x8
 2779 0589 E5000000 		.4byte	0xe5
 2780 058d 09       		.byte	0x9
 2781 058e 00       		.byte	0
 2782 058f 12       		.uleb128 0x12
 2783 0590 D6030000 		.4byte	.LASF93
 2784 0594 01       		.byte	0x1
 2785 0595 68       		.byte	0x68
 2786 0596 68000000 		.4byte	0x68
 2787 059a 00000000 		.4byte	.LFB66
 2788 059e 64000000 		.4byte	.LFE66-.LFB66
 2789 05a2 01       		.uleb128 0x1
 2790 05a3 9C       		.byte	0x9c
 2791 05a4 B7050000 		.4byte	0x5b7
 2792 05a8 11       		.uleb128 0x11
 2793 05a9 72050000 		.4byte	.LASF92
 2794 05ad 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 65


 2795 05ae 82       		.byte	0x82
 2796 05af 81000000 		.4byte	0x81
 2797 05b3 02       		.uleb128 0x2
 2798 05b4 91       		.byte	0x91
 2799 05b5 77       		.sleb128 -9
 2800 05b6 00       		.byte	0
 2801 05b7 13       		.uleb128 0x13
 2802 05b8 0F070000 		.4byte	.LASF163
 2803 05bc 01       		.byte	0x1
 2804 05bd 92       		.byte	0x92
 2805 05be 00000000 		.4byte	.LFB67
 2806 05c2 2A000000 		.4byte	.LFE67-.LFB67
 2807 05c6 01       		.uleb128 0x1
 2808 05c7 9C       		.byte	0x9c
 2809 05c8 14       		.uleb128 0x14
 2810 05c9 18030000 		.4byte	.LASF94
 2811 05cd 01       		.byte	0x1
 2812 05ce B7       		.byte	0xb7
 2813 05cf 00000000 		.4byte	.LFB68
 2814 05d3 50000000 		.4byte	.LFE68-.LFB68
 2815 05d7 01       		.uleb128 0x1
 2816 05d8 9C       		.byte	0x9c
 2817 05d9 EC050000 		.4byte	0x5ec
 2818 05dd 15       		.uleb128 0x15
 2819 05de 59040000 		.4byte	.LASF95
 2820 05e2 01       		.byte	0x1
 2821 05e3 B7       		.byte	0xb7
 2822 05e4 81000000 		.4byte	0x81
 2823 05e8 02       		.uleb128 0x2
 2824 05e9 91       		.byte	0x91
 2825 05ea 77       		.sleb128 -9
 2826 05eb 00       		.byte	0
 2827 05ec 16       		.uleb128 0x16
 2828 05ed E2070000 		.4byte	.LASF99
 2829 05f1 01       		.byte	0x1
 2830 05f2 CE       		.byte	0xce
 2831 05f3 81000000 		.4byte	0x81
 2832 05f7 00000000 		.4byte	.LFB69
 2833 05fb 48000000 		.4byte	.LFE69-.LFB69
 2834 05ff 01       		.uleb128 0x1
 2835 0600 9C       		.byte	0x9c
 2836 0601 22060000 		.4byte	0x622
 2837 0605 15       		.uleb128 0x15
 2838 0606 82040000 		.4byte	.LASF96
 2839 060a 01       		.byte	0x1
 2840 060b CE       		.byte	0xce
 2841 060c 22060000 		.4byte	0x622
 2842 0610 02       		.uleb128 0x2
 2843 0611 91       		.byte	0x91
 2844 0612 74       		.sleb128 -12
 2845 0613 15       		.uleb128 0x15
 2846 0614 59040000 		.4byte	.LASF95
 2847 0618 01       		.byte	0x1
 2848 0619 CE       		.byte	0xce
 2849 061a 81000000 		.4byte	0x81
 2850 061e 02       		.uleb128 0x2
 2851 061f 91       		.byte	0x91
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 66


 2852 0620 73       		.sleb128 -13
 2853 0621 00       		.byte	0
 2854 0622 06       		.uleb128 0x6
 2855 0623 04       		.byte	0x4
 2856 0624 A0040000 		.4byte	0x4a0
 2857 0628 17       		.uleb128 0x17
 2858 0629 C4050000 		.4byte	.LASF97
 2859 062d 01       		.byte	0x1
 2860 062e E3       		.byte	0xe3
 2861 062f 00000000 		.4byte	.LFB70
 2862 0633 1E000000 		.4byte	.LFE70-.LFB70
 2863 0637 01       		.uleb128 0x1
 2864 0638 9C       		.byte	0x9c
 2865 0639 4C060000 		.4byte	0x64c
 2866 063d 15       		.uleb128 0x15
 2867 063e 22060000 		.4byte	.LASF98
 2868 0642 01       		.byte	0x1
 2869 0643 E3       		.byte	0xe3
 2870 0644 22060000 		.4byte	0x622
 2871 0648 02       		.uleb128 0x2
 2872 0649 91       		.byte	0x91
 2873 064a 74       		.sleb128 -12
 2874 064b 00       		.byte	0
 2875 064c 18       		.uleb128 0x18
 2876 064d 01050000 		.4byte	.LASF100
 2877 0651 01       		.byte	0x1
 2878 0652 EC       		.byte	0xec
 2879 0653 A0040000 		.4byte	0x4a0
 2880 0657 00000000 		.4byte	.LFB71
 2881 065b 46000000 		.4byte	.LFE71-.LFB71
 2882 065f 01       		.uleb128 0x1
 2883 0660 9C       		.byte	0x9c
 2884 0661 9E060000 		.4byte	0x69e
 2885 0665 15       		.uleb128 0x15
 2886 0666 8F020000 		.4byte	.LASF78
 2887 066a 01       		.byte	0x1
 2888 066b EC       		.byte	0xec
 2889 066c 8D000000 		.4byte	0x8d
 2890 0670 02       		.uleb128 0x2
 2891 0671 91       		.byte	0x91
 2892 0672 6A       		.sleb128 -22
 2893 0673 15       		.uleb128 0x15
 2894 0674 9A070000 		.4byte	.LASF80
 2895 0678 01       		.byte	0x1
 2896 0679 EC       		.byte	0xec
 2897 067a 81000000 		.4byte	0x81
 2898 067e 02       		.uleb128 0x2
 2899 067f 91       		.byte	0x91
 2900 0680 69       		.sleb128 -23
 2901 0681 15       		.uleb128 0x15
 2902 0682 4F000000 		.4byte	.LASF81
 2903 0686 01       		.byte	0x1
 2904 0687 EC       		.byte	0xec
 2905 0688 81000000 		.4byte	0x81
 2906 068c 02       		.uleb128 0x2
 2907 068d 91       		.byte	0x91
 2908 068e 68       		.sleb128 -24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 67


 2909 068f 11       		.uleb128 0x11
 2910 0690 39070000 		.4byte	.LASF101
 2911 0694 01       		.byte	0x1
 2912 0695 EF       		.byte	0xef
 2913 0696 A0040000 		.4byte	0x4a0
 2914 069a 02       		.uleb128 0x2
 2915 069b 91       		.byte	0x91
 2916 069c 70       		.sleb128 -16
 2917 069d 00       		.byte	0
 2918 069e 19       		.uleb128 0x19
 2919 069f 31060000 		.4byte	.LASF103
 2920 06a3 01       		.byte	0x1
 2921 06a4 0501     		.2byte	0x105
 2922 06a6 00000000 		.4byte	.LFB72
 2923 06aa 04010000 		.4byte	.LFE72-.LFB72
 2924 06ae 01       		.uleb128 0x1
 2925 06af 9C       		.byte	0x9c
 2926 06b0 20070000 		.4byte	0x720
 2927 06b4 1A       		.uleb128 0x1a
 2928 06b5 6300     		.ascii	"c\000"
 2929 06b7 01       		.byte	0x1
 2930 06b8 0A01     		.2byte	0x10a
 2931 06ba 81000000 		.4byte	0x81
 2932 06be 02       		.uleb128 0x2
 2933 06bf 91       		.byte	0x91
 2934 06c0 6A       		.sleb128 -22
 2935 06c1 1B       		.uleb128 0x1b
 2936 06c2 00000000 		.4byte	.LASF104
 2937 06c6 01       		.byte	0x1
 2938 06c7 0B01     		.2byte	0x10b
 2939 06c9 20070000 		.4byte	0x720
 2940 06cd 02       		.uleb128 0x2
 2941 06ce 91       		.byte	0x91
 2942 06cf 6C       		.sleb128 -20
 2943 06d0 1B       		.uleb128 0x1b
 2944 06d1 1E020000 		.4byte	.LASF105
 2945 06d5 01       		.byte	0x1
 2946 06d6 0E01     		.2byte	0x10e
 2947 06d8 81000000 		.4byte	0x81
 2948 06dc 02       		.uleb128 0x2
 2949 06dd 91       		.byte	0x91
 2950 06de 6B       		.sleb128 -21
 2951 06df 1B       		.uleb128 0x1b
 2952 06e0 EF030000 		.4byte	.LASF106
 2953 06e4 01       		.byte	0x1
 2954 06e5 1501     		.2byte	0x115
 2955 06e7 C9010000 		.4byte	0x1c9
 2956 06eb 03       		.uleb128 0x3
 2957 06ec 91       		.byte	0x91
 2958 06ed E87C     		.sleb128 -408
 2959 06ef 1B       		.uleb128 0x1b
 2960 06f0 48010000 		.4byte	.LASF107
 2961 06f4 01       		.byte	0x1
 2962 06f5 1A01     		.2byte	0x11a
 2963 06f7 C9010000 		.4byte	0x1c9
 2964 06fb 03       		.uleb128 0x3
 2965 06fc 91       		.byte	0x91
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 68


 2966 06fd E479     		.sleb128 -796
 2967 06ff 1B       		.uleb128 0x1b
 2968 0700 74070000 		.4byte	.LASF108
 2969 0704 01       		.byte	0x1
 2970 0705 1E01     		.2byte	0x11e
 2971 0707 C9010000 		.4byte	0x1c9
 2972 070b 03       		.uleb128 0x3
 2973 070c 91       		.byte	0x91
 2974 070d E076     		.sleb128 -1184
 2975 070f 1B       		.uleb128 0x1b
 2976 0710 0C040000 		.4byte	.LASF109
 2977 0714 01       		.byte	0x1
 2978 0715 2201     		.2byte	0x122
 2979 0717 C9010000 		.4byte	0x1c9
 2980 071b 03       		.uleb128 0x3
 2981 071c 91       		.byte	0x91
 2982 071d DC73     		.sleb128 -1572
 2983 071f 00       		.byte	0
 2984 0720 06       		.uleb128 0x6
 2985 0721 04       		.byte	0x4
 2986 0722 81000000 		.4byte	0x81
 2987 0726 1C       		.uleb128 0x1c
 2988 0727 F8070000 		.4byte	.LASF164
 2989 072b 01       		.byte	0x1
 2990 072c 2C01     		.2byte	0x12c
 2991 072e 68000000 		.4byte	0x68
 2992 0732 00000000 		.4byte	.LFB73
 2993 0736 1E000000 		.4byte	.LFE73-.LFB73
 2994 073a 01       		.uleb128 0x1
 2995 073b 9C       		.byte	0x9c
 2996 073c 1D       		.uleb128 0x1d
 2997 073d 56020000 		.4byte	.LASF110
 2998 0741 01       		.byte	0x1
 2999 0742 4201     		.2byte	0x142
 3000 0744 81000000 		.4byte	0x81
 3001 0748 00000000 		.4byte	.LFB74
 3002 074c 30040000 		.4byte	.LFE74-.LFB74
 3003 0750 01       		.uleb128 0x1
 3004 0751 9C       		.byte	0x9c
 3005 0752 96080000 		.4byte	0x896
 3006 0756 1E       		.uleb128 0x1e
 3007 0757 62000000 		.4byte	.LBB2
 3008 075b B8030000 		.4byte	.LBE2-.LBB2
 3009 075f 1B       		.uleb128 0x1b
 3010 0760 14050000 		.4byte	.LASF111
 3011 0764 01       		.byte	0x1
 3012 0765 7201     		.2byte	0x172
 3013 0767 49030000 		.4byte	0x349
 3014 076b 02       		.uleb128 0x2
 3015 076c 91       		.byte	0x91
 3016 076d 48       		.sleb128 -56
 3017 076e 1B       		.uleb128 0x1b
 3018 076f 2E020000 		.4byte	.LASF112
 3019 0773 01       		.byte	0x1
 3020 0774 7701     		.2byte	0x177
 3021 0776 49030000 		.4byte	0x349
 3022 077a 03       		.uleb128 0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 69


 3023 077b 91       		.byte	0x91
 3024 077c B47F     		.sleb128 -76
 3025 077e 1B       		.uleb128 0x1b
 3026 077f 69030000 		.4byte	.LASF113
 3027 0783 01       		.byte	0x1
 3028 0784 8A01     		.2byte	0x18a
 3029 0786 8D000000 		.4byte	0x8d
 3030 078a 02       		.uleb128 0x2
 3031 078b 91       		.byte	0x91
 3032 078c 66       		.sleb128 -26
 3033 078d 1B       		.uleb128 0x1b
 3034 078e F7030000 		.4byte	.LASF114
 3035 0792 01       		.byte	0x1
 3036 0793 8B01     		.2byte	0x18b
 3037 0795 49030000 		.4byte	0x349
 3038 0799 03       		.uleb128 0x3
 3039 079a 91       		.byte	0x91
 3040 079b A07F     		.sleb128 -96
 3041 079d 1B       		.uleb128 0x1b
 3042 079e D4060000 		.4byte	.LASF115
 3043 07a2 01       		.byte	0x1
 3044 07a3 A001     		.2byte	0x1a0
 3045 07a5 96080000 		.4byte	0x896
 3046 07a9 03       		.uleb128 0x3
 3047 07aa 91       		.byte	0x91
 3048 07ab B875     		.sleb128 -1352
 3049 07ad 1B       		.uleb128 0x1b
 3050 07ae 54070000 		.4byte	.LASF30
 3051 07b2 01       		.byte	0x1
 3052 07b3 A101     		.2byte	0x1a1
 3053 07b5 81000000 		.4byte	0x81
 3054 07b9 02       		.uleb128 0x2
 3055 07ba 91       		.byte	0x91
 3056 07bb 65       		.sleb128 -27
 3057 07bc 1B       		.uleb128 0x1b
 3058 07bd A6060000 		.4byte	.LASF116
 3059 07c1 01       		.byte	0x1
 3060 07c2 A801     		.2byte	0x1a8
 3061 07c4 EC000000 		.4byte	0xec
 3062 07c8 02       		.uleb128 0x2
 3063 07c9 91       		.byte	0x91
 3064 07ca 6C       		.sleb128 -20
 3065 07cb 1B       		.uleb128 0x1b
 3066 07cc 65010000 		.4byte	.LASF117
 3067 07d0 01       		.byte	0x1
 3068 07d1 AC01     		.2byte	0x1ac
 3069 07d3 A5000000 		.4byte	0xa5
 3070 07d7 02       		.uleb128 0x2
 3071 07d8 91       		.byte	0x91
 3072 07d9 64       		.sleb128 -28
 3073 07da 1B       		.uleb128 0x1b
 3074 07db 5F020000 		.4byte	.LASF118
 3075 07df 01       		.byte	0x1
 3076 07e0 DC01     		.2byte	0x1dc
 3077 07e2 4C000000 		.4byte	0x4c
 3078 07e6 02       		.uleb128 0x2
 3079 07e7 91       		.byte	0x91
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 70


 3080 07e8 5C       		.sleb128 -36
 3081 07e9 1F       		.uleb128 0x1f
 3082 07ea CE000000 		.4byte	.LBB3
 3083 07ee 2C000000 		.4byte	.LBE3-.LBB3
 3084 07f2 16080000 		.4byte	0x816
 3085 07f6 1B       		.uleb128 0x1b
 3086 07f7 5D060000 		.4byte	.LASF119
 3087 07fb 01       		.byte	0x1
 3088 07fc 7F01     		.2byte	0x17f
 3089 07fe 8D000000 		.4byte	0x8d
 3090 0802 02       		.uleb128 0x2
 3091 0803 91       		.byte	0x91
 3092 0804 68       		.sleb128 -24
 3093 0805 1B       		.uleb128 0x1b
 3094 0806 D7010000 		.4byte	.LASF120
 3095 080a 01       		.byte	0x1
 3096 080b 8001     		.2byte	0x180
 3097 080d 49030000 		.4byte	0x349
 3098 0811 03       		.uleb128 0x3
 3099 0812 91       		.byte	0x91
 3100 0813 8C7F     		.sleb128 -116
 3101 0815 00       		.byte	0
 3102 0816 1F       		.uleb128 0x1f
 3103 0817 FC000000 		.4byte	.LBB4
 3104 081b 20000000 		.4byte	.LBE4-.LBB4
 3105 081f 34080000 		.4byte	0x834
 3106 0823 1B       		.uleb128 0x1b
 3107 0824 D7010000 		.4byte	.LASF120
 3108 0828 01       		.byte	0x1
 3109 0829 8401     		.2byte	0x184
 3110 082b 49030000 		.4byte	0x349
 3111 082f 03       		.uleb128 0x3
 3112 0830 91       		.byte	0x91
 3113 0831 F87E     		.sleb128 -136
 3114 0833 00       		.byte	0
 3115 0834 1F       		.uleb128 0x1f
 3116 0835 3C020000 		.4byte	.LBB5
 3117 0839 BC000000 		.4byte	.LBE5-.LBB5
 3118 083d 6B080000 		.4byte	0x86b
 3119 0841 1B       		.uleb128 0x1b
 3120 0842 0D050000 		.4byte	.LASF121
 3121 0846 01       		.byte	0x1
 3122 0847 B101     		.2byte	0x1b1
 3123 0849 A5000000 		.4byte	0xa5
 3124 084d 02       		.uleb128 0x2
 3125 084e 91       		.byte	0x91
 3126 084f 6B       		.sleb128 -21
 3127 0850 1E       		.uleb128 0x1e
 3128 0851 44020000 		.4byte	.LBB6
 3129 0855 9A000000 		.4byte	.LBE6-.LBB6
 3130 0859 1B       		.uleb128 0x1b
 3131 085a 36030000 		.4byte	.LASF122
 3132 085e 01       		.byte	0x1
 3133 085f B301     		.2byte	0x1b3
 3134 0861 A6080000 		.4byte	0x8a6
 3135 0865 03       		.uleb128 0x3
 3136 0866 91       		.byte	0x91
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 71


 3137 0867 8077     		.sleb128 -1152
 3138 0869 00       		.byte	0
 3139 086a 00       		.byte	0
 3140 086b 1E       		.uleb128 0x1e
 3141 086c 12030000 		.4byte	.LBB7
 3142 0870 3A000000 		.4byte	.LBE7-.LBB7
 3143 0874 1B       		.uleb128 0x1b
 3144 0875 3C020000 		.4byte	.LASF123
 3145 0879 01       		.byte	0x1
 3146 087a D301     		.2byte	0x1d3
 3147 087c 68000000 		.4byte	0x68
 3148 0880 02       		.uleb128 0x2
 3149 0881 91       		.byte	0x91
 3150 0882 60       		.sleb128 -32
 3151 0883 1B       		.uleb128 0x1b
 3152 0884 CF050000 		.4byte	.LASF124
 3153 0888 01       		.byte	0x1
 3154 0889 D401     		.2byte	0x1d4
 3155 088b 7F050000 		.4byte	0x57f
 3156 088f 03       		.uleb128 0x3
 3157 0890 91       		.byte	0x91
 3158 0891 EC7E     		.sleb128 -148
 3159 0893 00       		.byte	0
 3160 0894 00       		.byte	0
 3161 0895 00       		.byte	0
 3162 0896 07       		.uleb128 0x7
 3163 0897 D7000000 		.4byte	0xd7
 3164 089b A6080000 		.4byte	0x8a6
 3165 089f 08       		.uleb128 0x8
 3166 08a0 E5000000 		.4byte	0xe5
 3167 08a4 C7       		.byte	0xc7
 3168 08a5 00       		.byte	0
 3169 08a6 07       		.uleb128 0x7
 3170 08a7 D7000000 		.4byte	0xd7
 3171 08ab B7080000 		.4byte	0x8b7
 3172 08af 20       		.uleb128 0x20
 3173 08b0 E5000000 		.4byte	0xe5
 3174 08b4 E803     		.2byte	0x3e8
 3175 08b6 00       		.byte	0
 3176 08b7 1D       		.uleb128 0x1d
 3177 08b8 4E050000 		.4byte	.LASF125
 3178 08bc 01       		.byte	0x1
 3179 08bd F101     		.2byte	0x1f1
 3180 08bf 81000000 		.4byte	0x81
 3181 08c3 00000000 		.4byte	.LFB75
 3182 08c7 44000000 		.4byte	.LFE75-.LFB75
 3183 08cb 01       		.uleb128 0x1
 3184 08cc 9C       		.byte	0x9c
 3185 08cd EB080000 		.4byte	0x8eb
 3186 08d1 1E       		.uleb128 0x1e
 3187 08d2 20000000 		.4byte	.LBB8
 3188 08d6 1A000000 		.4byte	.LBE8-.LBB8
 3189 08da 1B       		.uleb128 0x1b
 3190 08db 5F020000 		.4byte	.LASF118
 3191 08df 01       		.byte	0x1
 3192 08e0 FC01     		.2byte	0x1fc
 3193 08e2 4C000000 		.4byte	0x4c
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 72


 3194 08e6 02       		.uleb128 0x2
 3195 08e7 91       		.byte	0x91
 3196 08e8 74       		.sleb128 -12
 3197 08e9 00       		.byte	0
 3198 08ea 00       		.byte	0
 3199 08eb 1D       		.uleb128 0x1d
 3200 08ec 97030000 		.4byte	.LASF126
 3201 08f0 01       		.byte	0x1
 3202 08f1 1102     		.2byte	0x211
 3203 08f3 81000000 		.4byte	0x81
 3204 08f7 00000000 		.4byte	.LFB76
 3205 08fb 74020000 		.4byte	.LFE76-.LFB76
 3206 08ff 01       		.uleb128 0x1
 3207 0900 9C       		.byte	0x9c
 3208 0901 7C090000 		.4byte	0x97c
 3209 0905 1B       		.uleb128 0x1b
 3210 0906 D4040000 		.4byte	.LASF57
 3211 090a 01       		.byte	0x1
 3212 090b 1402     		.2byte	0x214
 3213 090d 4C000000 		.4byte	0x4c
 3214 0911 02       		.uleb128 0x2
 3215 0912 91       		.byte	0x91
 3216 0913 6C       		.sleb128 -20
 3217 0914 1B       		.uleb128 0x1b
 3218 0915 AC060000 		.4byte	.LASF127
 3219 0919 01       		.byte	0x1
 3220 091a 1502     		.2byte	0x215
 3221 091c 7C090000 		.4byte	0x97c
 3222 0920 02       		.uleb128 0x2
 3223 0921 91       		.byte	0x91
 3224 0922 4C       		.sleb128 -52
 3225 0923 1B       		.uleb128 0x1b
 3226 0924 DA020000 		.4byte	.LASF56
 3227 0928 01       		.byte	0x1
 3228 0929 1902     		.2byte	0x219
 3229 092b 49030000 		.4byte	0x349
 3230 092f 03       		.uleb128 0x3
 3231 0930 91       		.byte	0x91
 3232 0931 B87F     		.sleb128 -72
 3233 0933 1B       		.uleb128 0x1b
 3234 0934 41030000 		.4byte	.LASF128
 3235 0938 01       		.byte	0x1
 3236 0939 3702     		.2byte	0x237
 3237 093b 6D020000 		.4byte	0x26d
 3238 093f 03       		.uleb128 0x3
 3239 0940 91       		.byte	0x91
 3240 0941 A47F     		.sleb128 -92
 3241 0943 1F       		.uleb128 0x1f
 3242 0944 22000000 		.4byte	.LBB9
 3243 0948 78000000 		.4byte	.LBE9-.LBB9
 3244 094c 61090000 		.4byte	0x961
 3245 0950 1B       		.uleb128 0x1b
 3246 0951 F2060000 		.4byte	.LASF129
 3247 0955 01       		.byte	0x1
 3248 0956 1F02     		.2byte	0x21f
 3249 0958 1D020000 		.4byte	0x21d
 3250 095c 03       		.uleb128 0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 73


 3251 095d 91       		.byte	0x91
 3252 095e 887F     		.sleb128 -120
 3253 0960 00       		.byte	0
 3254 0961 1E       		.uleb128 0x1e
 3255 0962 1E010000 		.4byte	.LBB10
 3256 0966 EE000000 		.4byte	.LBE10-.LBB10
 3257 096a 1B       		.uleb128 0x1b
 3258 096b 49070000 		.4byte	.LASF130
 3259 096f 01       		.byte	0x1
 3260 0970 5202     		.2byte	0x252
 3261 0972 99020000 		.4byte	0x299
 3262 0976 03       		.uleb128 0x3
 3263 0977 91       		.byte	0x91
 3264 0978 807F     		.sleb128 -128
 3265 097a 00       		.byte	0
 3266 097b 00       		.byte	0
 3267 097c 07       		.uleb128 0x7
 3268 097d D7000000 		.4byte	0xd7
 3269 0981 8C090000 		.4byte	0x98c
 3270 0985 08       		.uleb128 0x8
 3271 0986 E5000000 		.4byte	0xe5
 3272 098a 1F       		.byte	0x1f
 3273 098b 00       		.byte	0
 3274 098c 21       		.uleb128 0x21
 3275 098d 04030000 		.4byte	.LASF131
 3276 0991 01       		.byte	0x1
 3277 0992 7802     		.2byte	0x278
 3278 0994 81000000 		.4byte	0x81
 3279 0998 00000000 		.4byte	.LFB77
 3280 099c 74000000 		.4byte	.LFE77-.LFB77
 3281 09a0 01       		.uleb128 0x1
 3282 09a1 9C       		.byte	0x9c
 3283 09a2 D2090000 		.4byte	0x9d2
 3284 09a6 22       		.uleb128 0x22
 3285 09a7 D4040000 		.4byte	.LASF57
 3286 09ab 01       		.byte	0x1
 3287 09ac 7802     		.2byte	0x278
 3288 09ae 4C000000 		.4byte	0x4c
 3289 09b2 02       		.uleb128 0x2
 3290 09b3 91       		.byte	0x91
 3291 09b4 64       		.sleb128 -28
 3292 09b5 1A       		.uleb128 0x1a
 3293 09b6 7400     		.ascii	"t\000"
 3294 09b8 01       		.byte	0x1
 3295 09b9 7F02     		.2byte	0x27f
 3296 09bb D2090000 		.4byte	0x9d2
 3297 09bf 02       		.uleb128 0x2
 3298 09c0 91       		.byte	0x91
 3299 09c1 74       		.sleb128 -12
 3300 09c2 1B       		.uleb128 0x1b
 3301 09c3 B3040000 		.4byte	.LASF132
 3302 09c7 01       		.byte	0x1
 3303 09c8 8402     		.2byte	0x284
 3304 09ca 6B010000 		.4byte	0x16b
 3305 09ce 02       		.uleb128 0x2
 3306 09cf 91       		.byte	0x91
 3307 09d0 68       		.sleb128 -24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 74


 3308 09d1 00       		.byte	0
 3309 09d2 06       		.uleb128 0x6
 3310 09d3 04       		.byte	0x4
 3311 09d4 A4020000 		.4byte	0x2a4
 3312 09d8 21       		.uleb128 0x21
 3313 09d9 9E020000 		.4byte	.LASF133
 3314 09dd 01       		.byte	0x1
 3315 09de A102     		.2byte	0x2a1
 3316 09e0 81000000 		.4byte	0x81
 3317 09e4 00000000 		.4byte	.LFB78
 3318 09e8 38010000 		.4byte	.LFE78-.LFB78
 3319 09ec 01       		.uleb128 0x1
 3320 09ed 9C       		.byte	0x9c
 3321 09ee 510A0000 		.4byte	0xa51
 3322 09f2 22       		.uleb128 0x22
 3323 09f3 E0020000 		.4byte	.LASF134
 3324 09f7 01       		.byte	0x1
 3325 09f8 A102     		.2byte	0x2a1
 3326 09fa EC000000 		.4byte	0xec
 3327 09fe 03       		.uleb128 0x3
 3328 09ff 91       		.byte	0x91
 3329 0a00 9C7E     		.sleb128 -228
 3330 0a02 22       		.uleb128 0x22
 3331 0a03 BA020000 		.4byte	.LASF135
 3332 0a07 01       		.byte	0x1
 3333 0a08 A102     		.2byte	0x2a1
 3334 0a0a 68000000 		.4byte	0x68
 3335 0a0e 03       		.uleb128 0x3
 3336 0a0f 91       		.byte	0x91
 3337 0a10 987E     		.sleb128 -232
 3338 0a12 22       		.uleb128 0x22
 3339 0a13 7C040000 		.4byte	.LASF136
 3340 0a17 01       		.byte	0x1
 3341 0a18 A102     		.2byte	0x2a1
 3342 0a1a EC000000 		.4byte	0xec
 3343 0a1e 03       		.uleb128 0x3
 3344 0a1f 91       		.byte	0x91
 3345 0a20 947E     		.sleb128 -236
 3346 0a22 1B       		.uleb128 0x1b
 3347 0a23 C8010000 		.4byte	.LASF137
 3348 0a27 01       		.byte	0x1
 3349 0a28 A302     		.2byte	0x2a3
 3350 0a2a 81000000 		.4byte	0x81
 3351 0a2e 02       		.uleb128 0x2
 3352 0a2f 91       		.byte	0x91
 3353 0a30 77       		.sleb128 -9
 3354 0a31 1B       		.uleb128 0x1b
 3355 0a32 3A000000 		.4byte	.LASF138
 3356 0a36 01       		.byte	0x1
 3357 0a37 AA02     		.2byte	0x2aa
 3358 0a39 510A0000 		.4byte	0xa51
 3359 0a3d 02       		.uleb128 0x2
 3360 0a3e 91       		.byte	0x91
 3361 0a3f 68       		.sleb128 -24
 3362 0a40 1B       		.uleb128 0x1b
 3363 0a41 D4060000 		.4byte	.LASF115
 3364 0a45 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 75


 3365 0a46 B202     		.2byte	0x2b2
 3366 0a48 96080000 		.4byte	0x896
 3367 0a4c 03       		.uleb128 0x3
 3368 0a4d 91       		.byte	0x91
 3369 0a4e A07E     		.sleb128 -224
 3370 0a50 00       		.byte	0
 3371 0a51 07       		.uleb128 0x7
 3372 0a52 D7000000 		.4byte	0xd7
 3373 0a56 610A0000 		.4byte	0xa61
 3374 0a5a 08       		.uleb128 0x8
 3375 0a5b E5000000 		.4byte	0xe5
 3376 0a5f 0B       		.byte	0xb
 3377 0a60 00       		.byte	0
 3378 0a61 23       		.uleb128 0x23
 3379 0a62 3B010000 		.4byte	.LASF139
 3380 0a66 0D       		.byte	0xd
 3381 0a67 1207     		.2byte	0x712
 3382 0a69 6D0A0000 		.4byte	0xa6d
 3383 0a6d 0C       		.uleb128 0xc
 3384 0a6e 76000000 		.4byte	0x76
 3385 0a72 24       		.uleb128 0x24
 3386 0a73 2A000000 		.4byte	.LASF140
 3387 0a77 0A       		.byte	0xa
 3388 0a78 11       		.byte	0x11
 3389 0a79 55040000 		.4byte	0x455
 3390 0a7d 05       		.uleb128 0x5
 3391 0a7e 03       		.byte	0x3
 3392 0a7f 00000000 		.4byte	buffer_overflow
 3393 0a83 24       		.uleb128 0x24
 3394 0a84 63040000 		.4byte	.LASF141
 3395 0a88 0A       		.byte	0xa
 3396 0a89 22       		.byte	0x22
 3397 0a8a 8D000000 		.4byte	0x8d
 3398 0a8e 05       		.uleb128 0x5
 3399 0a8f 03       		.byte	0x3
 3400 0a90 00000000 		.4byte	dataPointsInStack
 3401 0a94 24       		.uleb128 0x24
 3402 0a95 5B070000 		.4byte	.LASF142
 3403 0a99 0A       		.byte	0xa
 3404 0a9a 23       		.byte	0x23
 3405 0a9b 8D000000 		.4byte	0x8d
 3406 0a9f 05       		.uleb128 0x5
 3407 0aa0 03       		.byte	0x3
 3408 0aa1 00000000 		.4byte	dataPointsInStackDesired
 3409 0aa5 07       		.uleb128 0x7
 3410 0aa6 59030000 		.4byte	0x359
 3411 0aaa B50A0000 		.4byte	0xab5
 3412 0aae 08       		.uleb128 0x8
 3413 0aaf E5000000 		.4byte	0xe5
 3414 0ab3 95       		.byte	0x95
 3415 0ab4 00       		.byte	0
 3416 0ab5 24       		.uleb128 0x24
 3417 0ab6 A8030000 		.4byte	.LASF143
 3418 0aba 0A       		.byte	0xa
 3419 0abb 24       		.byte	0x24
 3420 0abc A50A0000 		.4byte	0xaa5
 3421 0ac0 05       		.uleb128 0x5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 76


 3422 0ac1 03       		.byte	0x3
 3423 0ac2 00000000 		.4byte	data
 3424 0ac6 24       		.uleb128 0x24
 3425 0ac7 22010000 		.4byte	.LASF144
 3426 0acb 0B       		.byte	0xb
 3427 0acc 1F       		.byte	0x1f
 3428 0acd 81000000 		.4byte	0x81
 3429 0ad1 05       		.uleb128 0x5
 3430 0ad2 03       		.byte	0x3
 3431 0ad3 00000000 		.4byte	modem_state
 3432 0ad7 24       		.uleb128 0x24
 3433 0ad8 20040000 		.4byte	.LASF145
 3434 0adc 0B       		.byte	0xb
 3435 0add 62       		.byte	0x62
 3436 0ade BD000000 		.4byte	0xbd
 3437 0ae2 05       		.uleb128 0x5
 3438 0ae3 03       		.byte	0x3
 3439 0ae4 00000000 		.4byte	modem_start_time_stamp
 3440 0ae8 24       		.uleb128 0x24
 3441 0ae9 BE030000 		.4byte	.LASF83
 3442 0aed 0B       		.byte	0xb
 3443 0aee 63       		.byte	0x63
 3444 0aef 91030000 		.4byte	0x391
 3445 0af3 05       		.uleb128 0x5
 3446 0af4 03       		.byte	0x3
 3447 0af5 00000000 		.4byte	modem_info
 3448 0af9 24       		.uleb128 0x24
 3449 0afa BD060000 		.4byte	.LASF146
 3450 0afe 0B       		.byte	0xb
 3451 0aff 64       		.byte	0x64
 3452 0b00 05040000 		.4byte	0x405
 3453 0b04 05       		.uleb128 0x5
 3454 0b05 03       		.byte	0x3
 3455 0b06 00000000 		.4byte	modem_stats
 3456 0b0a 24       		.uleb128 0x24
 3457 0b0b EC040000 		.4byte	.LASF147
 3458 0b0f 0B       		.byte	0xb
 3459 0b10 65       		.byte	0x65
 3460 0b11 5C040000 		.4byte	0x45c
 3461 0b15 05       		.uleb128 0x5
 3462 0b16 03       		.byte	0x3
 3463 0b17 00000000 		.4byte	updatable_parameters
 3464 0b1b 07       		.uleb128 0x7
 3465 0b1c D7000000 		.4byte	0xd7
 3466 0b20 2C0B0000 		.4byte	0xb2c
 3467 0b24 20       		.uleb128 0x20
 3468 0b25 E5000000 		.4byte	0xe5
 3469 0b29 0F27     		.2byte	0x270f
 3470 0b2b 00       		.byte	0
 3471 0b2c 24       		.uleb128 0x24
 3472 0b2d 2C050000 		.4byte	.LASF148
 3473 0b31 0C       		.byte	0xc
 3474 0b32 18       		.byte	0x18
 3475 0b33 1B0B0000 		.4byte	0xb1b
 3476 0b37 05       		.uleb128 0x5
 3477 0b38 03       		.byte	0x3
 3478 0b39 00000000 		.4byte	http_request
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 77


 3479 0b3d 24       		.uleb128 0x24
 3480 0b3e 8A070000 		.4byte	.LASF149
 3481 0b42 0C       		.byte	0xc
 3482 0b43 19       		.byte	0x19
 3483 0b44 1B0B0000 		.4byte	0xb1b
 3484 0b48 05       		.uleb128 0x5
 3485 0b49 03       		.byte	0x3
 3486 0b4a 00000000 		.4byte	http_body
 3487 0b4e 24       		.uleb128 0x24
 3488 0b4f C9060000 		.4byte	.LASF150
 3489 0b53 0C       		.byte	0xc
 3490 0b54 1A       		.byte	0x1a
 3491 0b55 96080000 		.4byte	0x896
 3492 0b59 05       		.uleb128 0x5
 3493 0b5a 03       		.byte	0x3
 3494 0b5b 00000000 		.4byte	http_route
 3495 0b5f 24       		.uleb128 0x24
 3496 0b60 0A060000 		.4byte	.LASF151
 3497 0b64 0C       		.byte	0xc
 3498 0b65 41       		.byte	0x41
 3499 0b66 D7040000 		.4byte	0x4d7
 3500 0b6a 05       		.uleb128 0x5
 3501 0b6b 03       		.byte	0x3
 3502 0b6c 00000000 		.4byte	system_info
 3503 0b70 24       		.uleb128 0x24
 3504 0b71 AA050000 		.4byte	.LASF152
 3505 0b75 0C       		.byte	0xc
 3506 0b76 53       		.byte	0x53
 3507 0b77 13050000 		.4byte	0x513
 3508 0b7b 05       		.uleb128 0x5
 3509 0b7c 03       		.byte	0x3
 3510 0b7d 00000000 		.4byte	system_settings
 3511 0b81 24       		.uleb128 0x24
 3512 0b82 2E010000 		.4byte	.LASF153
 3513 0b86 0C       		.byte	0xc
 3514 0b87 6F       		.byte	0x6f
 3515 0b88 A0040000 		.4byte	0x4a0
 3516 0b8c 05       		.uleb128 0x5
 3517 0b8d 03       		.byte	0x3
 3518 0b8e 00000000 		.4byte	alarmMeasure
 3519 0b92 24       		.uleb128 0x24
 3520 0b93 72010000 		.4byte	.LASF154
 3521 0b97 0C       		.byte	0xc
 3522 0b98 70       		.byte	0x70
 3523 0b99 81000000 		.4byte	0x81
 3524 0b9d 05       		.uleb128 0x5
 3525 0b9e 03       		.byte	0x3
 3526 0b9f 00000000 		.4byte	timeToMeasure
 3527 0ba3 24       		.uleb128 0x24
 3528 0ba4 ED020000 		.4byte	.LASF155
 3529 0ba8 0C       		.byte	0xc
 3530 0ba9 71       		.byte	0x71
 3531 0baa A0040000 		.4byte	0x4a0
 3532 0bae 05       		.uleb128 0x5
 3533 0baf 03       		.byte	0x3
 3534 0bb0 00000000 		.4byte	alarmSync
 3535 0bb4 24       		.uleb128 0x24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 78


 3536 0bb5 98010000 		.4byte	.LASF156
 3537 0bb9 0C       		.byte	0xc
 3538 0bba 72       		.byte	0x72
 3539 0bbb 81000000 		.4byte	0x81
 3540 0bbf 05       		.uleb128 0x5
 3541 0bc0 03       		.byte	0x3
 3542 0bc1 00000000 		.4byte	timeToSync
 3543 0bc5 24       		.uleb128 0x24
 3544 0bc6 BD040000 		.4byte	.LASF157
 3545 0bca 0C       		.byte	0xc
 3546 0bcb 73       		.byte	0x73
 3547 0bcc 81000000 		.4byte	0x81
 3548 0bd0 05       		.uleb128 0x5
 3549 0bd1 03       		.byte	0x3
 3550 0bd2 00000000 		.4byte	timeToSycnRemoteParams
 3551 0bd6 25       		.uleb128 0x25
 3552 0bd7 68657900 		.ascii	"hey\000"
 3553 0bdb 0C       		.byte	0xc
 3554 0bdc 74       		.byte	0x74
 3555 0bdd 81000000 		.4byte	0x81
 3556 0be1 05       		.uleb128 0x5
 3557 0be2 03       		.byte	0x3
 3558 0be3 00000000 		.4byte	hey
 3559 0be7 07       		.uleb128 0x7
 3560 0be8 D7000000 		.4byte	0xd7
 3561 0bec F70B0000 		.4byte	0xbf7
 3562 0bf0 08       		.uleb128 0x8
 3563 0bf1 E5000000 		.4byte	0xe5
 3564 0bf5 1D       		.byte	0x1d
 3565 0bf6 00       		.byte	0
 3566 0bf7 24       		.uleb128 0x24
 3567 0bf8 64050000 		.4byte	.LASF158
 3568 0bfc 01       		.byte	0x1
 3569 0bfd 1D       		.byte	0x1d
 3570 0bfe E70B0000 		.4byte	0xbe7
 3571 0c02 05       		.uleb128 0x5
 3572 0c03 03       		.byte	0x3
 3573 0c04 00000000 		.4byte	Data_fileName
 3574 0c08 24       		.uleb128 0x24
 3575 0c09 5D030000 		.4byte	.LASF91
 3576 0c0d 01       		.byte	0x1
 3577 0c0e 1E       		.byte	0x1e
 3578 0c0f 81000000 		.4byte	0x81
 3579 0c13 05       		.uleb128 0x5
 3580 0c14 03       		.byte	0x3
 3581 0c15 00000000 		.4byte	try_counter
 3582 0c19 00       		.byte	0
 3583              		.section	.debug_abbrev,"",%progbits
 3584              	.Ldebug_abbrev0:
 3585 0000 01       		.uleb128 0x1
 3586 0001 11       		.uleb128 0x11
 3587 0002 01       		.byte	0x1
 3588 0003 25       		.uleb128 0x25
 3589 0004 0E       		.uleb128 0xe
 3590 0005 13       		.uleb128 0x13
 3591 0006 0B       		.uleb128 0xb
 3592 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 79


 3593 0008 0E       		.uleb128 0xe
 3594 0009 1B       		.uleb128 0x1b
 3595 000a 0E       		.uleb128 0xe
 3596 000b 55       		.uleb128 0x55
 3597 000c 17       		.uleb128 0x17
 3598 000d 11       		.uleb128 0x11
 3599 000e 01       		.uleb128 0x1
 3600 000f 10       		.uleb128 0x10
 3601 0010 17       		.uleb128 0x17
 3602 0011 00       		.byte	0
 3603 0012 00       		.byte	0
 3604 0013 02       		.uleb128 0x2
 3605 0014 24       		.uleb128 0x24
 3606 0015 00       		.byte	0
 3607 0016 0B       		.uleb128 0xb
 3608 0017 0B       		.uleb128 0xb
 3609 0018 3E       		.uleb128 0x3e
 3610 0019 0B       		.uleb128 0xb
 3611 001a 03       		.uleb128 0x3
 3612 001b 0E       		.uleb128 0xe
 3613 001c 00       		.byte	0
 3614 001d 00       		.byte	0
 3615 001e 03       		.uleb128 0x3
 3616 001f 16       		.uleb128 0x16
 3617 0020 00       		.byte	0
 3618 0021 03       		.uleb128 0x3
 3619 0022 0E       		.uleb128 0xe
 3620 0023 3A       		.uleb128 0x3a
 3621 0024 0B       		.uleb128 0xb
 3622 0025 3B       		.uleb128 0x3b
 3623 0026 0B       		.uleb128 0xb
 3624 0027 49       		.uleb128 0x49
 3625 0028 13       		.uleb128 0x13
 3626 0029 00       		.byte	0
 3627 002a 00       		.byte	0
 3628 002b 04       		.uleb128 0x4
 3629 002c 24       		.uleb128 0x24
 3630 002d 00       		.byte	0
 3631 002e 0B       		.uleb128 0xb
 3632 002f 0B       		.uleb128 0xb
 3633 0030 3E       		.uleb128 0x3e
 3634 0031 0B       		.uleb128 0xb
 3635 0032 03       		.uleb128 0x3
 3636 0033 08       		.uleb128 0x8
 3637 0034 00       		.byte	0
 3638 0035 00       		.byte	0
 3639 0036 05       		.uleb128 0x5
 3640 0037 16       		.uleb128 0x16
 3641 0038 00       		.byte	0
 3642 0039 03       		.uleb128 0x3
 3643 003a 0E       		.uleb128 0xe
 3644 003b 3A       		.uleb128 0x3a
 3645 003c 0B       		.uleb128 0xb
 3646 003d 3B       		.uleb128 0x3b
 3647 003e 05       		.uleb128 0x5
 3648 003f 49       		.uleb128 0x49
 3649 0040 13       		.uleb128 0x13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 80


 3650 0041 00       		.byte	0
 3651 0042 00       		.byte	0
 3652 0043 06       		.uleb128 0x6
 3653 0044 0F       		.uleb128 0xf
 3654 0045 00       		.byte	0
 3655 0046 0B       		.uleb128 0xb
 3656 0047 0B       		.uleb128 0xb
 3657 0048 49       		.uleb128 0x49
 3658 0049 13       		.uleb128 0x13
 3659 004a 00       		.byte	0
 3660 004b 00       		.byte	0
 3661 004c 07       		.uleb128 0x7
 3662 004d 01       		.uleb128 0x1
 3663 004e 01       		.byte	0x1
 3664 004f 49       		.uleb128 0x49
 3665 0050 13       		.uleb128 0x13
 3666 0051 01       		.uleb128 0x1
 3667 0052 13       		.uleb128 0x13
 3668 0053 00       		.byte	0
 3669 0054 00       		.byte	0
 3670 0055 08       		.uleb128 0x8
 3671 0056 21       		.uleb128 0x21
 3672 0057 00       		.byte	0
 3673 0058 49       		.uleb128 0x49
 3674 0059 13       		.uleb128 0x13
 3675 005a 2F       		.uleb128 0x2f
 3676 005b 0B       		.uleb128 0xb
 3677 005c 00       		.byte	0
 3678 005d 00       		.byte	0
 3679 005e 09       		.uleb128 0x9
 3680 005f 13       		.uleb128 0x13
 3681 0060 01       		.byte	0x1
 3682 0061 0B       		.uleb128 0xb
 3683 0062 0B       		.uleb128 0xb
 3684 0063 3A       		.uleb128 0x3a
 3685 0064 0B       		.uleb128 0xb
 3686 0065 3B       		.uleb128 0x3b
 3687 0066 0B       		.uleb128 0xb
 3688 0067 01       		.uleb128 0x1
 3689 0068 13       		.uleb128 0x13
 3690 0069 00       		.byte	0
 3691 006a 00       		.byte	0
 3692 006b 0A       		.uleb128 0xa
 3693 006c 0D       		.uleb128 0xd
 3694 006d 00       		.byte	0
 3695 006e 03       		.uleb128 0x3
 3696 006f 08       		.uleb128 0x8
 3697 0070 3A       		.uleb128 0x3a
 3698 0071 0B       		.uleb128 0xb
 3699 0072 3B       		.uleb128 0x3b
 3700 0073 0B       		.uleb128 0xb
 3701 0074 49       		.uleb128 0x49
 3702 0075 13       		.uleb128 0x13
 3703 0076 38       		.uleb128 0x38
 3704 0077 0B       		.uleb128 0xb
 3705 0078 00       		.byte	0
 3706 0079 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 81


 3707 007a 0B       		.uleb128 0xb
 3708 007b 0D       		.uleb128 0xd
 3709 007c 00       		.byte	0
 3710 007d 03       		.uleb128 0x3
 3711 007e 0E       		.uleb128 0xe
 3712 007f 3A       		.uleb128 0x3a
 3713 0080 0B       		.uleb128 0xb
 3714 0081 3B       		.uleb128 0x3b
 3715 0082 0B       		.uleb128 0xb
 3716 0083 49       		.uleb128 0x49
 3717 0084 13       		.uleb128 0x13
 3718 0085 38       		.uleb128 0x38
 3719 0086 0B       		.uleb128 0xb
 3720 0087 00       		.byte	0
 3721 0088 00       		.byte	0
 3722 0089 0C       		.uleb128 0xc
 3723 008a 35       		.uleb128 0x35
 3724 008b 00       		.byte	0
 3725 008c 49       		.uleb128 0x49
 3726 008d 13       		.uleb128 0x13
 3727 008e 00       		.byte	0
 3728 008f 00       		.byte	0
 3729 0090 0D       		.uleb128 0xd
 3730 0091 13       		.uleb128 0x13
 3731 0092 01       		.byte	0x1
 3732 0093 0B       		.uleb128 0xb
 3733 0094 05       		.uleb128 0x5
 3734 0095 3A       		.uleb128 0x3a
 3735 0096 0B       		.uleb128 0xb
 3736 0097 3B       		.uleb128 0x3b
 3737 0098 0B       		.uleb128 0xb
 3738 0099 01       		.uleb128 0x1
 3739 009a 13       		.uleb128 0x13
 3740 009b 00       		.byte	0
 3741 009c 00       		.byte	0
 3742 009d 0E       		.uleb128 0xe
 3743 009e 13       		.uleb128 0x13
 3744 009f 01       		.byte	0x1
 3745 00a0 03       		.uleb128 0x3
 3746 00a1 08       		.uleb128 0x8
 3747 00a2 0B       		.uleb128 0xb
 3748 00a3 0B       		.uleb128 0xb
 3749 00a4 3A       		.uleb128 0x3a
 3750 00a5 0B       		.uleb128 0xb
 3751 00a6 3B       		.uleb128 0x3b
 3752 00a7 0B       		.uleb128 0xb
 3753 00a8 01       		.uleb128 0x1
 3754 00a9 13       		.uleb128 0x13
 3755 00aa 00       		.byte	0
 3756 00ab 00       		.byte	0
 3757 00ac 0F       		.uleb128 0xf
 3758 00ad 2E       		.uleb128 0x2e
 3759 00ae 00       		.byte	0
 3760 00af 3F       		.uleb128 0x3f
 3761 00b0 19       		.uleb128 0x19
 3762 00b1 03       		.uleb128 0x3
 3763 00b2 0E       		.uleb128 0xe
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 82


 3764 00b3 3A       		.uleb128 0x3a
 3765 00b4 0B       		.uleb128 0xb
 3766 00b5 3B       		.uleb128 0x3b
 3767 00b6 0B       		.uleb128 0xb
 3768 00b7 27       		.uleb128 0x27
 3769 00b8 19       		.uleb128 0x19
 3770 00b9 11       		.uleb128 0x11
 3771 00ba 01       		.uleb128 0x1
 3772 00bb 12       		.uleb128 0x12
 3773 00bc 06       		.uleb128 0x6
 3774 00bd 40       		.uleb128 0x40
 3775 00be 18       		.uleb128 0x18
 3776 00bf 9642     		.uleb128 0x2116
 3777 00c1 19       		.uleb128 0x19
 3778 00c2 00       		.byte	0
 3779 00c3 00       		.byte	0
 3780 00c4 10       		.uleb128 0x10
 3781 00c5 2E       		.uleb128 0x2e
 3782 00c6 01       		.byte	0x1
 3783 00c7 3F       		.uleb128 0x3f
 3784 00c8 19       		.uleb128 0x19
 3785 00c9 03       		.uleb128 0x3
 3786 00ca 0E       		.uleb128 0xe
 3787 00cb 3A       		.uleb128 0x3a
 3788 00cc 0B       		.uleb128 0xb
 3789 00cd 3B       		.uleb128 0x3b
 3790 00ce 0B       		.uleb128 0xb
 3791 00cf 11       		.uleb128 0x11
 3792 00d0 01       		.uleb128 0x1
 3793 00d1 12       		.uleb128 0x12
 3794 00d2 06       		.uleb128 0x6
 3795 00d3 40       		.uleb128 0x40
 3796 00d4 18       		.uleb128 0x18
 3797 00d5 9642     		.uleb128 0x2116
 3798 00d7 19       		.uleb128 0x19
 3799 00d8 01       		.uleb128 0x1
 3800 00d9 13       		.uleb128 0x13
 3801 00da 00       		.byte	0
 3802 00db 00       		.byte	0
 3803 00dc 11       		.uleb128 0x11
 3804 00dd 34       		.uleb128 0x34
 3805 00de 00       		.byte	0
 3806 00df 03       		.uleb128 0x3
 3807 00e0 0E       		.uleb128 0xe
 3808 00e1 3A       		.uleb128 0x3a
 3809 00e2 0B       		.uleb128 0xb
 3810 00e3 3B       		.uleb128 0x3b
 3811 00e4 0B       		.uleb128 0xb
 3812 00e5 49       		.uleb128 0x49
 3813 00e6 13       		.uleb128 0x13
 3814 00e7 02       		.uleb128 0x2
 3815 00e8 18       		.uleb128 0x18
 3816 00e9 00       		.byte	0
 3817 00ea 00       		.byte	0
 3818 00eb 12       		.uleb128 0x12
 3819 00ec 2E       		.uleb128 0x2e
 3820 00ed 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 83


 3821 00ee 3F       		.uleb128 0x3f
 3822 00ef 19       		.uleb128 0x19
 3823 00f0 03       		.uleb128 0x3
 3824 00f1 0E       		.uleb128 0xe
 3825 00f2 3A       		.uleb128 0x3a
 3826 00f3 0B       		.uleb128 0xb
 3827 00f4 3B       		.uleb128 0x3b
 3828 00f5 0B       		.uleb128 0xb
 3829 00f6 49       		.uleb128 0x49
 3830 00f7 13       		.uleb128 0x13
 3831 00f8 11       		.uleb128 0x11
 3832 00f9 01       		.uleb128 0x1
 3833 00fa 12       		.uleb128 0x12
 3834 00fb 06       		.uleb128 0x6
 3835 00fc 40       		.uleb128 0x40
 3836 00fd 18       		.uleb128 0x18
 3837 00fe 9642     		.uleb128 0x2116
 3838 0100 19       		.uleb128 0x19
 3839 0101 01       		.uleb128 0x1
 3840 0102 13       		.uleb128 0x13
 3841 0103 00       		.byte	0
 3842 0104 00       		.byte	0
 3843 0105 13       		.uleb128 0x13
 3844 0106 2E       		.uleb128 0x2e
 3845 0107 00       		.byte	0
 3846 0108 3F       		.uleb128 0x3f
 3847 0109 19       		.uleb128 0x19
 3848 010a 03       		.uleb128 0x3
 3849 010b 0E       		.uleb128 0xe
 3850 010c 3A       		.uleb128 0x3a
 3851 010d 0B       		.uleb128 0xb
 3852 010e 3B       		.uleb128 0x3b
 3853 010f 0B       		.uleb128 0xb
 3854 0110 11       		.uleb128 0x11
 3855 0111 01       		.uleb128 0x1
 3856 0112 12       		.uleb128 0x12
 3857 0113 06       		.uleb128 0x6
 3858 0114 40       		.uleb128 0x40
 3859 0115 18       		.uleb128 0x18
 3860 0116 9642     		.uleb128 0x2116
 3861 0118 19       		.uleb128 0x19
 3862 0119 00       		.byte	0
 3863 011a 00       		.byte	0
 3864 011b 14       		.uleb128 0x14
 3865 011c 2E       		.uleb128 0x2e
 3866 011d 01       		.byte	0x1
 3867 011e 3F       		.uleb128 0x3f
 3868 011f 19       		.uleb128 0x19
 3869 0120 03       		.uleb128 0x3
 3870 0121 0E       		.uleb128 0xe
 3871 0122 3A       		.uleb128 0x3a
 3872 0123 0B       		.uleb128 0xb
 3873 0124 3B       		.uleb128 0x3b
 3874 0125 0B       		.uleb128 0xb
 3875 0126 27       		.uleb128 0x27
 3876 0127 19       		.uleb128 0x19
 3877 0128 11       		.uleb128 0x11
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 84


 3878 0129 01       		.uleb128 0x1
 3879 012a 12       		.uleb128 0x12
 3880 012b 06       		.uleb128 0x6
 3881 012c 40       		.uleb128 0x40
 3882 012d 18       		.uleb128 0x18
 3883 012e 9642     		.uleb128 0x2116
 3884 0130 19       		.uleb128 0x19
 3885 0131 01       		.uleb128 0x1
 3886 0132 13       		.uleb128 0x13
 3887 0133 00       		.byte	0
 3888 0134 00       		.byte	0
 3889 0135 15       		.uleb128 0x15
 3890 0136 05       		.uleb128 0x5
 3891 0137 00       		.byte	0
 3892 0138 03       		.uleb128 0x3
 3893 0139 0E       		.uleb128 0xe
 3894 013a 3A       		.uleb128 0x3a
 3895 013b 0B       		.uleb128 0xb
 3896 013c 3B       		.uleb128 0x3b
 3897 013d 0B       		.uleb128 0xb
 3898 013e 49       		.uleb128 0x49
 3899 013f 13       		.uleb128 0x13
 3900 0140 02       		.uleb128 0x2
 3901 0141 18       		.uleb128 0x18
 3902 0142 00       		.byte	0
 3903 0143 00       		.byte	0
 3904 0144 16       		.uleb128 0x16
 3905 0145 2E       		.uleb128 0x2e
 3906 0146 01       		.byte	0x1
 3907 0147 3F       		.uleb128 0x3f
 3908 0148 19       		.uleb128 0x19
 3909 0149 03       		.uleb128 0x3
 3910 014a 0E       		.uleb128 0xe
 3911 014b 3A       		.uleb128 0x3a
 3912 014c 0B       		.uleb128 0xb
 3913 014d 3B       		.uleb128 0x3b
 3914 014e 0B       		.uleb128 0xb
 3915 014f 27       		.uleb128 0x27
 3916 0150 19       		.uleb128 0x19
 3917 0151 49       		.uleb128 0x49
 3918 0152 13       		.uleb128 0x13
 3919 0153 11       		.uleb128 0x11
 3920 0154 01       		.uleb128 0x1
 3921 0155 12       		.uleb128 0x12
 3922 0156 06       		.uleb128 0x6
 3923 0157 40       		.uleb128 0x40
 3924 0158 18       		.uleb128 0x18
 3925 0159 9642     		.uleb128 0x2116
 3926 015b 19       		.uleb128 0x19
 3927 015c 01       		.uleb128 0x1
 3928 015d 13       		.uleb128 0x13
 3929 015e 00       		.byte	0
 3930 015f 00       		.byte	0
 3931 0160 17       		.uleb128 0x17
 3932 0161 2E       		.uleb128 0x2e
 3933 0162 01       		.byte	0x1
 3934 0163 3F       		.uleb128 0x3f
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 85


 3935 0164 19       		.uleb128 0x19
 3936 0165 03       		.uleb128 0x3
 3937 0166 0E       		.uleb128 0xe
 3938 0167 3A       		.uleb128 0x3a
 3939 0168 0B       		.uleb128 0xb
 3940 0169 3B       		.uleb128 0x3b
 3941 016a 0B       		.uleb128 0xb
 3942 016b 27       		.uleb128 0x27
 3943 016c 19       		.uleb128 0x19
 3944 016d 11       		.uleb128 0x11
 3945 016e 01       		.uleb128 0x1
 3946 016f 12       		.uleb128 0x12
 3947 0170 06       		.uleb128 0x6
 3948 0171 40       		.uleb128 0x40
 3949 0172 18       		.uleb128 0x18
 3950 0173 9742     		.uleb128 0x2117
 3951 0175 19       		.uleb128 0x19
 3952 0176 01       		.uleb128 0x1
 3953 0177 13       		.uleb128 0x13
 3954 0178 00       		.byte	0
 3955 0179 00       		.byte	0
 3956 017a 18       		.uleb128 0x18
 3957 017b 2E       		.uleb128 0x2e
 3958 017c 01       		.byte	0x1
 3959 017d 3F       		.uleb128 0x3f
 3960 017e 19       		.uleb128 0x19
 3961 017f 03       		.uleb128 0x3
 3962 0180 0E       		.uleb128 0xe
 3963 0181 3A       		.uleb128 0x3a
 3964 0182 0B       		.uleb128 0xb
 3965 0183 3B       		.uleb128 0x3b
 3966 0184 0B       		.uleb128 0xb
 3967 0185 27       		.uleb128 0x27
 3968 0186 19       		.uleb128 0x19
 3969 0187 49       		.uleb128 0x49
 3970 0188 13       		.uleb128 0x13
 3971 0189 11       		.uleb128 0x11
 3972 018a 01       		.uleb128 0x1
 3973 018b 12       		.uleb128 0x12
 3974 018c 06       		.uleb128 0x6
 3975 018d 40       		.uleb128 0x40
 3976 018e 18       		.uleb128 0x18
 3977 018f 9742     		.uleb128 0x2117
 3978 0191 19       		.uleb128 0x19
 3979 0192 01       		.uleb128 0x1
 3980 0193 13       		.uleb128 0x13
 3981 0194 00       		.byte	0
 3982 0195 00       		.byte	0
 3983 0196 19       		.uleb128 0x19
 3984 0197 2E       		.uleb128 0x2e
 3985 0198 01       		.byte	0x1
 3986 0199 3F       		.uleb128 0x3f
 3987 019a 19       		.uleb128 0x19
 3988 019b 03       		.uleb128 0x3
 3989 019c 0E       		.uleb128 0xe
 3990 019d 3A       		.uleb128 0x3a
 3991 019e 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 86


 3992 019f 3B       		.uleb128 0x3b
 3993 01a0 05       		.uleb128 0x5
 3994 01a1 11       		.uleb128 0x11
 3995 01a2 01       		.uleb128 0x1
 3996 01a3 12       		.uleb128 0x12
 3997 01a4 06       		.uleb128 0x6
 3998 01a5 40       		.uleb128 0x40
 3999 01a6 18       		.uleb128 0x18
 4000 01a7 9642     		.uleb128 0x2116
 4001 01a9 19       		.uleb128 0x19
 4002 01aa 01       		.uleb128 0x1
 4003 01ab 13       		.uleb128 0x13
 4004 01ac 00       		.byte	0
 4005 01ad 00       		.byte	0
 4006 01ae 1A       		.uleb128 0x1a
 4007 01af 34       		.uleb128 0x34
 4008 01b0 00       		.byte	0
 4009 01b1 03       		.uleb128 0x3
 4010 01b2 08       		.uleb128 0x8
 4011 01b3 3A       		.uleb128 0x3a
 4012 01b4 0B       		.uleb128 0xb
 4013 01b5 3B       		.uleb128 0x3b
 4014 01b6 05       		.uleb128 0x5
 4015 01b7 49       		.uleb128 0x49
 4016 01b8 13       		.uleb128 0x13
 4017 01b9 02       		.uleb128 0x2
 4018 01ba 18       		.uleb128 0x18
 4019 01bb 00       		.byte	0
 4020 01bc 00       		.byte	0
 4021 01bd 1B       		.uleb128 0x1b
 4022 01be 34       		.uleb128 0x34
 4023 01bf 00       		.byte	0
 4024 01c0 03       		.uleb128 0x3
 4025 01c1 0E       		.uleb128 0xe
 4026 01c2 3A       		.uleb128 0x3a
 4027 01c3 0B       		.uleb128 0xb
 4028 01c4 3B       		.uleb128 0x3b
 4029 01c5 05       		.uleb128 0x5
 4030 01c6 49       		.uleb128 0x49
 4031 01c7 13       		.uleb128 0x13
 4032 01c8 02       		.uleb128 0x2
 4033 01c9 18       		.uleb128 0x18
 4034 01ca 00       		.byte	0
 4035 01cb 00       		.byte	0
 4036 01cc 1C       		.uleb128 0x1c
 4037 01cd 2E       		.uleb128 0x2e
 4038 01ce 00       		.byte	0
 4039 01cf 3F       		.uleb128 0x3f
 4040 01d0 19       		.uleb128 0x19
 4041 01d1 03       		.uleb128 0x3
 4042 01d2 0E       		.uleb128 0xe
 4043 01d3 3A       		.uleb128 0x3a
 4044 01d4 0B       		.uleb128 0xb
 4045 01d5 3B       		.uleb128 0x3b
 4046 01d6 05       		.uleb128 0x5
 4047 01d7 27       		.uleb128 0x27
 4048 01d8 19       		.uleb128 0x19
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 87


 4049 01d9 49       		.uleb128 0x49
 4050 01da 13       		.uleb128 0x13
 4051 01db 11       		.uleb128 0x11
 4052 01dc 01       		.uleb128 0x1
 4053 01dd 12       		.uleb128 0x12
 4054 01de 06       		.uleb128 0x6
 4055 01df 40       		.uleb128 0x40
 4056 01e0 18       		.uleb128 0x18
 4057 01e1 9642     		.uleb128 0x2116
 4058 01e3 19       		.uleb128 0x19
 4059 01e4 00       		.byte	0
 4060 01e5 00       		.byte	0
 4061 01e6 1D       		.uleb128 0x1d
 4062 01e7 2E       		.uleb128 0x2e
 4063 01e8 01       		.byte	0x1
 4064 01e9 3F       		.uleb128 0x3f
 4065 01ea 19       		.uleb128 0x19
 4066 01eb 03       		.uleb128 0x3
 4067 01ec 0E       		.uleb128 0xe
 4068 01ed 3A       		.uleb128 0x3a
 4069 01ee 0B       		.uleb128 0xb
 4070 01ef 3B       		.uleb128 0x3b
 4071 01f0 05       		.uleb128 0x5
 4072 01f1 49       		.uleb128 0x49
 4073 01f2 13       		.uleb128 0x13
 4074 01f3 11       		.uleb128 0x11
 4075 01f4 01       		.uleb128 0x1
 4076 01f5 12       		.uleb128 0x12
 4077 01f6 06       		.uleb128 0x6
 4078 01f7 40       		.uleb128 0x40
 4079 01f8 18       		.uleb128 0x18
 4080 01f9 9642     		.uleb128 0x2116
 4081 01fb 19       		.uleb128 0x19
 4082 01fc 01       		.uleb128 0x1
 4083 01fd 13       		.uleb128 0x13
 4084 01fe 00       		.byte	0
 4085 01ff 00       		.byte	0
 4086 0200 1E       		.uleb128 0x1e
 4087 0201 0B       		.uleb128 0xb
 4088 0202 01       		.byte	0x1
 4089 0203 11       		.uleb128 0x11
 4090 0204 01       		.uleb128 0x1
 4091 0205 12       		.uleb128 0x12
 4092 0206 06       		.uleb128 0x6
 4093 0207 00       		.byte	0
 4094 0208 00       		.byte	0
 4095 0209 1F       		.uleb128 0x1f
 4096 020a 0B       		.uleb128 0xb
 4097 020b 01       		.byte	0x1
 4098 020c 11       		.uleb128 0x11
 4099 020d 01       		.uleb128 0x1
 4100 020e 12       		.uleb128 0x12
 4101 020f 06       		.uleb128 0x6
 4102 0210 01       		.uleb128 0x1
 4103 0211 13       		.uleb128 0x13
 4104 0212 00       		.byte	0
 4105 0213 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 88


 4106 0214 20       		.uleb128 0x20
 4107 0215 21       		.uleb128 0x21
 4108 0216 00       		.byte	0
 4109 0217 49       		.uleb128 0x49
 4110 0218 13       		.uleb128 0x13
 4111 0219 2F       		.uleb128 0x2f
 4112 021a 05       		.uleb128 0x5
 4113 021b 00       		.byte	0
 4114 021c 00       		.byte	0
 4115 021d 21       		.uleb128 0x21
 4116 021e 2E       		.uleb128 0x2e
 4117 021f 01       		.byte	0x1
 4118 0220 3F       		.uleb128 0x3f
 4119 0221 19       		.uleb128 0x19
 4120 0222 03       		.uleb128 0x3
 4121 0223 0E       		.uleb128 0xe
 4122 0224 3A       		.uleb128 0x3a
 4123 0225 0B       		.uleb128 0xb
 4124 0226 3B       		.uleb128 0x3b
 4125 0227 05       		.uleb128 0x5
 4126 0228 27       		.uleb128 0x27
 4127 0229 19       		.uleb128 0x19
 4128 022a 49       		.uleb128 0x49
 4129 022b 13       		.uleb128 0x13
 4130 022c 11       		.uleb128 0x11
 4131 022d 01       		.uleb128 0x1
 4132 022e 12       		.uleb128 0x12
 4133 022f 06       		.uleb128 0x6
 4134 0230 40       		.uleb128 0x40
 4135 0231 18       		.uleb128 0x18
 4136 0232 9642     		.uleb128 0x2116
 4137 0234 19       		.uleb128 0x19
 4138 0235 01       		.uleb128 0x1
 4139 0236 13       		.uleb128 0x13
 4140 0237 00       		.byte	0
 4141 0238 00       		.byte	0
 4142 0239 22       		.uleb128 0x22
 4143 023a 05       		.uleb128 0x5
 4144 023b 00       		.byte	0
 4145 023c 03       		.uleb128 0x3
 4146 023d 0E       		.uleb128 0xe
 4147 023e 3A       		.uleb128 0x3a
 4148 023f 0B       		.uleb128 0xb
 4149 0240 3B       		.uleb128 0x3b
 4150 0241 05       		.uleb128 0x5
 4151 0242 49       		.uleb128 0x49
 4152 0243 13       		.uleb128 0x13
 4153 0244 02       		.uleb128 0x2
 4154 0245 18       		.uleb128 0x18
 4155 0246 00       		.byte	0
 4156 0247 00       		.byte	0
 4157 0248 23       		.uleb128 0x23
 4158 0249 34       		.uleb128 0x34
 4159 024a 00       		.byte	0
 4160 024b 03       		.uleb128 0x3
 4161 024c 0E       		.uleb128 0xe
 4162 024d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 89


 4163 024e 0B       		.uleb128 0xb
 4164 024f 3B       		.uleb128 0x3b
 4165 0250 05       		.uleb128 0x5
 4166 0251 49       		.uleb128 0x49
 4167 0252 13       		.uleb128 0x13
 4168 0253 3F       		.uleb128 0x3f
 4169 0254 19       		.uleb128 0x19
 4170 0255 3C       		.uleb128 0x3c
 4171 0256 19       		.uleb128 0x19
 4172 0257 00       		.byte	0
 4173 0258 00       		.byte	0
 4174 0259 24       		.uleb128 0x24
 4175 025a 34       		.uleb128 0x34
 4176 025b 00       		.byte	0
 4177 025c 03       		.uleb128 0x3
 4178 025d 0E       		.uleb128 0xe
 4179 025e 3A       		.uleb128 0x3a
 4180 025f 0B       		.uleb128 0xb
 4181 0260 3B       		.uleb128 0x3b
 4182 0261 0B       		.uleb128 0xb
 4183 0262 49       		.uleb128 0x49
 4184 0263 13       		.uleb128 0x13
 4185 0264 3F       		.uleb128 0x3f
 4186 0265 19       		.uleb128 0x19
 4187 0266 02       		.uleb128 0x2
 4188 0267 18       		.uleb128 0x18
 4189 0268 00       		.byte	0
 4190 0269 00       		.byte	0
 4191 026a 25       		.uleb128 0x25
 4192 026b 34       		.uleb128 0x34
 4193 026c 00       		.byte	0
 4194 026d 03       		.uleb128 0x3
 4195 026e 08       		.uleb128 0x8
 4196 026f 3A       		.uleb128 0x3a
 4197 0270 0B       		.uleb128 0xb
 4198 0271 3B       		.uleb128 0x3b
 4199 0272 0B       		.uleb128 0xb
 4200 0273 49       		.uleb128 0x49
 4201 0274 13       		.uleb128 0x13
 4202 0275 3F       		.uleb128 0x3f
 4203 0276 19       		.uleb128 0x19
 4204 0277 02       		.uleb128 0x2
 4205 0278 18       		.uleb128 0x18
 4206 0279 00       		.byte	0
 4207 027a 00       		.byte	0
 4208 027b 00       		.byte	0
 4209              		.section	.debug_aranges,"",%progbits
 4210 0000 8C000000 		.4byte	0x8c
 4211 0004 0200     		.2byte	0x2
 4212 0006 00000000 		.4byte	.Ldebug_info0
 4213 000a 04       		.byte	0x4
 4214 000b 00       		.byte	0
 4215 000c 0000     		.2byte	0
 4216 000e 0000     		.2byte	0
 4217 0010 00000000 		.4byte	.LFB64
 4218 0014 0C000000 		.4byte	.LFE64-.LFB64
 4219 0018 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 90


 4220 001c 2C010000 		.4byte	.LFE65-.LFB65
 4221 0020 00000000 		.4byte	.LFB66
 4222 0024 64000000 		.4byte	.LFE66-.LFB66
 4223 0028 00000000 		.4byte	.LFB67
 4224 002c 2A000000 		.4byte	.LFE67-.LFB67
 4225 0030 00000000 		.4byte	.LFB68
 4226 0034 50000000 		.4byte	.LFE68-.LFB68
 4227 0038 00000000 		.4byte	.LFB69
 4228 003c 48000000 		.4byte	.LFE69-.LFB69
 4229 0040 00000000 		.4byte	.LFB70
 4230 0044 1E000000 		.4byte	.LFE70-.LFB70
 4231 0048 00000000 		.4byte	.LFB71
 4232 004c 46000000 		.4byte	.LFE71-.LFB71
 4233 0050 00000000 		.4byte	.LFB72
 4234 0054 04010000 		.4byte	.LFE72-.LFB72
 4235 0058 00000000 		.4byte	.LFB73
 4236 005c 1E000000 		.4byte	.LFE73-.LFB73
 4237 0060 00000000 		.4byte	.LFB74
 4238 0064 30040000 		.4byte	.LFE74-.LFB74
 4239 0068 00000000 		.4byte	.LFB75
 4240 006c 44000000 		.4byte	.LFE75-.LFB75
 4241 0070 00000000 		.4byte	.LFB76
 4242 0074 74020000 		.4byte	.LFE76-.LFB76
 4243 0078 00000000 		.4byte	.LFB77
 4244 007c 74000000 		.4byte	.LFE77-.LFB77
 4245 0080 00000000 		.4byte	.LFB78
 4246 0084 38010000 		.4byte	.LFE78-.LFB78
 4247 0088 00000000 		.4byte	0
 4248 008c 00000000 		.4byte	0
 4249              		.section	.debug_ranges,"",%progbits
 4250              	.Ldebug_ranges0:
 4251 0000 00000000 		.4byte	.LFB64
 4252 0004 0C000000 		.4byte	.LFE64
 4253 0008 00000000 		.4byte	.LFB65
 4254 000c 2C010000 		.4byte	.LFE65
 4255 0010 00000000 		.4byte	.LFB66
 4256 0014 64000000 		.4byte	.LFE66
 4257 0018 00000000 		.4byte	.LFB67
 4258 001c 2A000000 		.4byte	.LFE67
 4259 0020 00000000 		.4byte	.LFB68
 4260 0024 50000000 		.4byte	.LFE68
 4261 0028 00000000 		.4byte	.LFB69
 4262 002c 48000000 		.4byte	.LFE69
 4263 0030 00000000 		.4byte	.LFB70
 4264 0034 1E000000 		.4byte	.LFE70
 4265 0038 00000000 		.4byte	.LFB71
 4266 003c 46000000 		.4byte	.LFE71
 4267 0040 00000000 		.4byte	.LFB72
 4268 0044 04010000 		.4byte	.LFE72
 4269 0048 00000000 		.4byte	.LFB73
 4270 004c 1E000000 		.4byte	.LFE73
 4271 0050 00000000 		.4byte	.LFB74
 4272 0054 30040000 		.4byte	.LFE74
 4273 0058 00000000 		.4byte	.LFB75
 4274 005c 44000000 		.4byte	.LFE75
 4275 0060 00000000 		.4byte	.LFB76
 4276 0064 74020000 		.4byte	.LFE76
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 91


 4277 0068 00000000 		.4byte	.LFB77
 4278 006c 74000000 		.4byte	.LFE77
 4279 0070 00000000 		.4byte	.LFB78
 4280 0074 38010000 		.4byte	.LFE78
 4281 0078 00000000 		.4byte	0
 4282 007c 00000000 		.4byte	0
 4283              		.section	.debug_line,"",%progbits
 4284              	.Ldebug_line0:
 4285 0000 22040000 		.section	.debug_str,"MS",%progbits,1
 4285      02001B02 
 4285      00000201 
 4285      FB0E0D00 
 4285      01010101 
 4286              	.LASF104:
 4287 0000 636F756E 		.ascii	"count\000"
 4287      7400
 4288              	.LASF12:
 4289 0006 75696E74 		.ascii	"uint16\000"
 4289      313600
 4290              	.LASF49:
 4291 000d 746D5F68 		.ascii	"tm_hour\000"
 4291      6F757200 
 4292              	.LASF36:
 4293 0015 6E756D5F 		.ascii	"num_invalid_readings\000"
 4293      696E7661 
 4293      6C69645F 
 4293      72656164 
 4293      696E6773 
 4294              	.LASF140:
 4295 002a 62756666 		.ascii	"buffer_overflow\000"
 4295      65725F6F 
 4295      76657266 
 4295      6C6F7700 
 4296              	.LASF138:
 4297 003a 66696C65 		.ascii	"fileName\000"
 4297      4E616D65 
 4297      00
 4298              	.LASF0:
 4299 0043 7369676E 		.ascii	"signed char\000"
 4299      65642063 
 4299      68617200 
 4300              	.LASF81:
 4301 004f 636F756E 		.ascii	"countDownResetCondition\000"
 4301      74446F77 
 4301      6E526573 
 4301      6574436F 
 4301      6E646974 
 4302              	.LASF162:
 4303 0067 57616B65 		.ascii	"Wakeup_ISR\000"
 4303      75705F49 
 4303      535200
 4304              	.LASF159:
 4305 0072 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4305      43313120 
 4305      352E342E 
 4305      31203230 
 4305      31363036 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 92


 4306 00a5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4306      20726576 
 4306      6973696F 
 4306      6E203233 
 4306      37373135 
 4307 00d8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4307      66756E63 
 4307      74696F6E 
 4307      2D736563 
 4307      74696F6E 
 4308              	.LASF26:
 4309 0100 4D6F6E74 		.ascii	"Month\000"
 4309      6800
 4310              	.LASF7:
 4311 0106 6C6F6E67 		.ascii	"long long unsigned int\000"
 4311      206C6F6E 
 4311      6720756E 
 4311      7369676E 
 4311      65642069 
 4312              	.LASF22:
 4313 011d 486F7572 		.ascii	"Hour\000"
 4313      00
 4314              	.LASF144:
 4315 0122 6D6F6465 		.ascii	"modem_state\000"
 4315      6D5F7374 
 4315      61746500 
 4316              	.LASF153:
 4317 012e 616C6172 		.ascii	"alarmMeasure\000"
 4317      6D4D6561 
 4317      73757265 
 4317      00
 4318              	.LASF139:
 4319 013b 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4319      52784275 
 4319      66666572 
 4319      00
 4320              	.LASF107:
 4321 0148 745F6C65 		.ascii	"t_level_sensor\000"
 4321      76656C5F 
 4321      73656E73 
 4321      6F7200
 4322              	.LASF6:
 4323 0157 6C6F6E67 		.ascii	"long long int\000"
 4323      206C6F6E 
 4323      6720696E 
 4323      7400
 4324              	.LASF117:
 4325 0165 7061636B 		.ascii	"packets\000"
 4325      65747300 
 4326              	.LASF65:
 4327 016d 65636E6F 		.ascii	"ecno\000"
 4327      00
 4328              	.LASF154:
 4329 0172 74696D65 		.ascii	"timeToMeasure\000"
 4329      546F4D65 
 4329      61737572 
 4329      6500
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 93


 4330              	.LASF68:
 4331 0180 74696D65 		.ascii	"time_to_network_connect\000"
 4331      5F746F5F 
 4331      6E657477 
 4331      6F726B5F 
 4331      636F6E6E 
 4332              	.LASF156:
 4333 0198 74696D65 		.ascii	"timeToSync\000"
 4333      546F5379 
 4333      6E6300
 4334              	.LASF39:
 4335 01a3 766F6C74 		.ascii	"voltage_solar\000"
 4335      6167655F 
 4335      736F6C61 
 4335      7200
 4336              	.LASF40:
 4337 01b1 766F6C74 		.ascii	"voltage_charge_current\000"
 4337      6167655F 
 4337      63686172 
 4337      67655F63 
 4337      75727265 
 4338              	.LASF137:
 4339 01c8 75706772 		.ascii	"upgrade_status\000"
 4339      6164655F 
 4339      73746174 
 4339      757300
 4340              	.LASF120:
 4341 01d7 635F6461 		.ascii	"c_data_count_sent\000"
 4341      74615F63 
 4341      6F756E74 
 4341      5F73656E 
 4341      7400
 4342              	.LASF62:
 4343 01e9 6D6F6465 		.ascii	"modem_info_t\000"
 4343      6D5F696E 
 4343      666F5F74 
 4343      00
 4344              	.LASF63:
 4345 01f6 72786C65 		.ascii	"rxlev\000"
 4345      7600
 4346              	.LASF4:
 4347 01fc 6C6F6E67 		.ascii	"long int\000"
 4347      20696E74 
 4347      00
 4348              	.LASF69:
 4349 0205 74696D65 		.ascii	"time_to_acquire_ip\000"
 4349      5F746F5F 
 4349      61637175 
 4349      6972655F 
 4349      697000
 4350              	.LASF82:
 4351 0218 616C6172 		.ascii	"alarm\000"
 4351      6D00
 4352              	.LASF105:
 4353 021e 73616D70 		.ascii	"sample_ok\000"
 4353      6C655F6F 
 4353      6B00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 94


 4354              	.LASF11:
 4355 0228 75696E74 		.ascii	"uint8\000"
 4355      3800
 4356              	.LASF112:
 4357 022e 635F7472 		.ascii	"c_try_counter\000"
 4357      795F636F 
 4357      756E7465 
 4357      7200
 4358              	.LASF123:
 4359 023c 73656E64 		.ascii	"send_time\000"
 4359      5F74696D 
 4359      6500
 4360              	.LASF16:
 4361 0246 696E7433 		.ascii	"int32\000"
 4361      3200
 4362              	.LASF71:
 4363 024c 6E6F6465 		.ascii	"node_type\000"
 4363      5F747970 
 4363      6500
 4364              	.LASF110:
 4365 0256 73796E63 		.ascii	"syncData\000"
 4365      44617461 
 4365      00
 4366              	.LASF118:
 4367 025f 6E657477 		.ascii	"network_time\000"
 4367      6F726B5F 
 4367      74696D65 
 4367      00
 4368              	.LASF13:
 4369 026c 75696E74 		.ascii	"uint32\000"
 4369      333200
 4370              	.LASF60:
 4371 0273 6D6F6465 		.ascii	"model_id\000"
 4371      6C5F6964 
 4371      00
 4372              	.LASF33:
 4373 027c 616C6C5F 		.ascii	"all_level_readings\000"
 4373      6C657665 
 4373      6C5F7265 
 4373      6164696E 
 4373      677300
 4374              	.LASF78:
 4375 028f 636F756E 		.ascii	"countDownValue\000"
 4375      74446F77 
 4375      6E56616C 
 4375      756500
 4376              	.LASF133:
 4377 029e 75706772 		.ascii	"upgraded\000"
 4377      61646564 
 4377      00
 4378              	.LASF51:
 4379 02a7 746D5F6D 		.ascii	"tm_mon\000"
 4379      6F6E00
 4380              	.LASF75:
 4381 02ae 64656275 		.ascii	"debug_level\000"
 4381      675F6C65 
 4381      76656C00 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 95


 4382              	.LASF135:
 4383 02ba 706F7274 		.ascii	"port\000"
 4383      00
 4384              	.LASF161:
 4385 02bf 433A5C6E 		.ascii	"C:\\notoriOS\\notoriOS.cydsn\000"
 4385      6F746F72 
 4385      694F535C 
 4385      6E6F746F 
 4385      72694F53 
 4386              	.LASF56:
 4387 02da 76616C75 		.ascii	"value\000"
 4387      6500
 4388              	.LASF134:
 4389 02e0 686F7374 		.ascii	"host\000"
 4389      00
 4390              	.LASF52:
 4391 02e5 746D5F79 		.ascii	"tm_year\000"
 4391      65617200 
 4392              	.LASF155:
 4393 02ed 616C6172 		.ascii	"alarmSync\000"
 4393      6D53796E 
 4393      6300
 4394              	.LASF8:
 4395 02f7 756E7369 		.ascii	"unsigned int\000"
 4395      676E6564 
 4395      20696E74 
 4395      00
 4396              	.LASF131:
 4397 0304 73657454 		.ascii	"setTime\000"
 4397      696D6500 
 4398              	.LASF58:
 4399 030c 6B65795F 		.ascii	"key_value_t\000"
 4399      76616C75 
 4399      655F7400 
 4400              	.LASF94:
 4401 0318 41796F49 		.ascii	"AyoItsTime\000"
 4401      74735469 
 4401      6D6500
 4402              	.LASF35:
 4403 0323 6E756D5F 		.ascii	"num_valid_readings\000"
 4403      76616C69 
 4403      645F7265 
 4403      6164696E 
 4403      677300
 4404              	.LASF122:
 4405 0336 68747470 		.ascii	"http_chunk\000"
 4405      5F636875 
 4405      6E6B00
 4406              	.LASF128:
 4407 0341 6D5F766F 		.ascii	"m_voltage\000"
 4407      6C746167 
 4407      6500
 4408              	.LASF5:
 4409 034b 6C6F6E67 		.ascii	"long unsigned int\000"
 4409      20756E73 
 4409      69676E65 
 4409      6420696E 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 96


 4409      7400
 4410              	.LASF91:
 4411 035d 7472795F 		.ascii	"try_counter\000"
 4411      636F756E 
 4411      74657200 
 4412              	.LASF113:
 4413 0369 64617461 		.ascii	"data_count_desired\000"
 4413      5F636F75 
 4413      6E745F64 
 4413      65736972 
 4413      656400
 4414              	.LASF38:
 4415 037c 766F6C74 		.ascii	"voltage_battery\000"
 4415      6167655F 
 4415      62617474 
 4415      65727900 
 4416              	.LASF24:
 4417 038c 4461794F 		.ascii	"DayOfMonth\000"
 4417      664D6F6E 
 4417      746800
 4418              	.LASF126:
 4419 0397 6D616B65 		.ascii	"makeMeasurements\000"
 4419      4D656173 
 4419      7572656D 
 4419      656E7473 
 4419      00
 4420              	.LASF143:
 4421 03a8 64617461 		.ascii	"data\000"
 4421      00
 4422              	.LASF87:
 4423 03ad 65705F70 		.ascii	"ep_port\000"
 4423      6F727400 
 4424              	.LASF55:
 4425 03b5 746D5F69 		.ascii	"tm_isdst\000"
 4425      73647374 
 4425      00
 4426              	.LASF83:
 4427 03be 6D6F6465 		.ascii	"modem_info\000"
 4427      6D5F696E 
 4427      666F00
 4428              	.LASF86:
 4429 03c9 65705F68 		.ascii	"ep_host\000"
 4429      6F737400 
 4430              	.LASF14:
 4431 03d1 696E7438 		.ascii	"int8\000"
 4431      00
 4432              	.LASF93:
 4433 03d6 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 4433      576F726B 
 4433      576F726B 
 4433      576F726B 
 4433      576F726B 
 4434              	.LASF106:
 4435 03ef 745F6D6F 		.ascii	"t_modem\000"
 4435      64656D00 
 4436              	.LASF114:
 4437 03f7 635F6461 		.ascii	"c_data_count_desired\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 97


 4437      74615F63 
 4437      6F756E74 
 4437      5F646573 
 4437      69726564 
 4438              	.LASF109:
 4439 040c 745F7364 		.ascii	"t_sd_card\000"
 4439      5F636172 
 4439      6400
 4440              	.LASF2:
 4441 0416 73686F72 		.ascii	"short int\000"
 4441      7420696E 
 4441      7400
 4442              	.LASF145:
 4443 0420 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 4443      6D5F7374 
 4443      6172745F 
 4443      74696D65 
 4443      5F737461 
 4444              	.LASF85:
 4445 0437 7379735F 		.ascii	"sys_info_t\000"
 4445      696E666F 
 4445      5F7400
 4446              	.LASF77:
 4447 0442 75706461 		.ascii	"updatable_parameters_t\000"
 4447      7461626C 
 4447      655F7061 
 4447      72616D65 
 4447      74657273 
 4448              	.LASF95:
 4449 0459 616C6172 		.ascii	"alarmType\000"
 4449      6D547970 
 4449      6500
 4450              	.LASF141:
 4451 0463 64617461 		.ascii	"dataPointsInStack\000"
 4451      506F696E 
 4451      7473496E 
 4451      53746163 
 4451      6B00
 4452              	.LASF48:
 4453 0475 746D5F6D 		.ascii	"tm_min\000"
 4453      696E00
 4454              	.LASF136:
 4455 047c 726F7574 		.ascii	"route\000"
 4455      6500
 4456              	.LASF96:
 4457 0482 616C6172 		.ascii	"alarmToBeUpdated\000"
 4457      6D546F42 
 4457      65557064 
 4457      61746564 
 4457      00
 4458              	.LASF21:
 4459 0493 73697A65 		.ascii	"sizetype\000"
 4459      74797065 
 4459      00
 4460              	.LASF54:
 4461 049c 746D5F79 		.ascii	"tm_yday\000"
 4461      64617900 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 98


 4462              	.LASF88:
 4463 04a4 7379735F 		.ascii	"sys_settings_t\000"
 4463      73657474 
 4463      696E6773 
 4463      5F7400
 4464              	.LASF132:
 4465 04b3 6C6F6361 		.ascii	"localTime\000"
 4465      6C54696D 
 4465      6500
 4466              	.LASF157:
 4467 04bd 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 4467      546F5379 
 4467      636E5265 
 4467      6D6F7465 
 4467      50617261 
 4468              	.LASF57:
 4469 04d4 74696D65 		.ascii	"timeStamp\000"
 4469      5374616D 
 4469      7000
 4470              	.LASF28:
 4471 04de 5254435F 		.ascii	"RTC_TIME_DATE\000"
 4471      54494D45 
 4471      5F444154 
 4471      4500
 4472              	.LASF147:
 4473 04ec 75706461 		.ascii	"updatable_parameters\000"
 4473      7461626C 
 4473      655F7061 
 4473      72616D65 
 4473      74657273 
 4474              	.LASF100:
 4475 0501 43726561 		.ascii	"CreateAlarm\000"
 4475      7465416C 
 4475      61726D00 
 4476              	.LASF121:
 4477 050d 7061636B 		.ascii	"packet\000"
 4477      657400
 4478              	.LASF111:
 4479 0514 735F7273 		.ascii	"s_rsrp\000"
 4479      727000
 4480              	.LASF41:
 4481 051b 766F6C74 		.ascii	"voltage_pressure\000"
 4481      6167655F 
 4481      70726573 
 4481      73757265 
 4481      00
 4482              	.LASF148:
 4483 052c 68747470 		.ascii	"http_request\000"
 4483      5F726571 
 4483      75657374 
 4483      00
 4484              	.LASF17:
 4485 0539 666C6F61 		.ascii	"float\000"
 4485      7400
 4486              	.LASF37:
 4487 053f 6C657665 		.ascii	"level_sensor_t\000"
 4487      6C5F7365 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 99


 4487      6E736F72 
 4487      5F7400
 4488              	.LASF125:
 4489 054e 636F6E66 		.ascii	"configureRemoteParams\000"
 4489      69677572 
 4489      6552656D 
 4489      6F746550 
 4489      6172616D 
 4490              	.LASF158:
 4491 0564 44617461 		.ascii	"Data_fileName\000"
 4491      5F66696C 
 4491      654E616D 
 4491      6500
 4492              	.LASF92:
 4493 0572 6D6F6465 		.ascii	"modem_status\000"
 4493      6D5F7374 
 4493      61747573 
 4493      00
 4494              	.LASF29:
 4495 057f 74657374 		.ascii	"test_name\000"
 4495      5F6E616D 
 4495      6500
 4496              	.LASF27:
 4497 0589 59656172 		.ascii	"Year\000"
 4497      00
 4498              	.LASF76:
 4499 058e 5F426F6F 		.ascii	"_Bool\000"
 4499      6C00
 4500              	.LASF10:
 4501 0594 696E7433 		.ascii	"int32_t\000"
 4501      325F7400 
 4502              	.LASF1:
 4503 059c 756E7369 		.ascii	"unsigned char\000"
 4503      676E6564 
 4503      20636861 
 4503      7200
 4504              	.LASF152:
 4505 05aa 73797374 		.ascii	"system_settings\000"
 4505      656D5F73 
 4505      65747469 
 4505      6E677300 
 4506              	.LASF67:
 4507 05ba 72737270 		.ascii	"rsrp\000"
 4507      00
 4508              	.LASF66:
 4509 05bf 72737271 		.ascii	"rsrq\000"
 4509      00
 4510              	.LASF97:
 4511 05c4 52657365 		.ascii	"ResetAlarm\000"
 4511      74416C61 
 4511      726D00
 4512              	.LASF124:
 4513 05cf 735F7365 		.ascii	"s_send_time\000"
 4513      6E645F74 
 4513      696D6500 
 4514              	.LASF74:
 4515 05db 73796E63 		.ascii	"sync_time\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 100


 4515      5F74696D 
 4515      6500
 4516              	.LASF45:
 4517 05e5 70726573 		.ascii	"pressure_depth\000"
 4517      73757265 
 4517      5F646570 
 4517      746800
 4518              	.LASF64:
 4519 05f4 72736370 		.ascii	"rscp\000"
 4519      00
 4520              	.LASF23:
 4521 05f9 4461794F 		.ascii	"DayOfWeek\000"
 4521      66576565 
 4521      6B00
 4522              	.LASF32:
 4523 0603 74657374 		.ascii	"test_t\000"
 4523      5F7400
 4524              	.LASF151:
 4525 060a 73797374 		.ascii	"system_info\000"
 4525      656D5F69 
 4525      6E666F00 
 4526              	.LASF61:
 4527 0616 696D6569 		.ascii	"imei\000"
 4527      00
 4528              	.LASF31:
 4529 061b 72656173 		.ascii	"reason\000"
 4529      6F6E00
 4530              	.LASF98:
 4531 0622 616C6172 		.ascii	"alarmToBeReset\000"
 4531      6D546F42 
 4531      65526573 
 4531      657400
 4532              	.LASF103:
 4533 0631 43686963 		.ascii	"ChickityCheckYourselfBeforeYouWreckYourself\000"
 4533      6B697479 
 4533      43686563 
 4533      6B596F75 
 4533      7273656C 
 4534              	.LASF119:
 4535 065d 64617461 		.ascii	"data_count_sent\000"
 4535      5F636F75 
 4535      6E745F73 
 4535      656E7400 
 4536              	.LASF70:
 4537 066d 6D6F6465 		.ascii	"modem_stats_t\000"
 4537      6D5F7374 
 4537      6174735F 
 4537      7400
 4538              	.LASF44:
 4539 067b 70726573 		.ascii	"pressure_current\000"
 4539      73757265 
 4539      5F637572 
 4539      72656E74 
 4539      00
 4540              	.LASF42:
 4541 068c 76616C69 		.ascii	"valid\000"
 4541      6400
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 101


 4542              	.LASF53:
 4543 0692 746D5F77 		.ascii	"tm_wday\000"
 4543      64617900 
 4544              	.LASF20:
 4545 069a 6C6F6E67 		.ascii	"long double\000"
 4545      20646F75 
 4545      626C6500 
 4546              	.LASF116:
 4547 06a6 6368756E 		.ascii	"chunk\000"
 4547      6B00
 4548              	.LASF127:
 4549 06ac 635F7469 		.ascii	"c_timeStamp\000"
 4549      6D655374 
 4549      616D7000 
 4550              	.LASF19:
 4551 06b8 63686172 		.ascii	"char\000"
 4551      00
 4552              	.LASF146:
 4553 06bd 6D6F6465 		.ascii	"modem_stats\000"
 4553      6D5F7374 
 4553      61747300 
 4554              	.LASF150:
 4555 06c9 68747470 		.ascii	"http_route\000"
 4555      5F726F75 
 4555      746500
 4556              	.LASF115:
 4557 06d4 706F7274 		.ascii	"portConfig\000"
 4557      436F6E66 
 4557      696700
 4558              	.LASF9:
 4559 06df 5F5F696E 		.ascii	"__int32_t\000"
 4559      7433325F 
 4559      7400
 4560              	.LASF89:
 4561 06e9 756E6971 		.ascii	"uniqueId\000"
 4561      75654964 
 4561      00
 4562              	.LASF129:
 4563 06f2 6D5F6C65 		.ascii	"m_level_sensor\000"
 4563      76656C5F 
 4563      73656E73 
 4563      6F7200
 4564              	.LASF34:
 4565 0701 6C657665 		.ascii	"level_reading\000"
 4565      6C5F7265 
 4565      6164696E 
 4565      6700
 4566              	.LASF163:
 4567 070f 4C617942 		.ascii	"LayBack\000"
 4567      61636B00 
 4568              	.LASF3:
 4569 0717 73686F72 		.ascii	"short unsigned int\000"
 4569      7420756E 
 4569      7369676E 
 4569      65642069 
 4569      6E7400
 4570              	.LASF59:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 102


 4571 072a 73696D5F 		.ascii	"sim_id\000"
 4571      696400
 4572              	.LASF50:
 4573 0731 746D5F6D 		.ascii	"tm_mday\000"
 4573      64617900 
 4574              	.LASF101:
 4575 0739 6E657741 		.ascii	"newAlarm\000"
 4575      6C61726D 
 4575      00
 4576              	.LASF47:
 4577 0742 746D5F73 		.ascii	"tm_sec\000"
 4577      656300
 4578              	.LASF130:
 4579 0749 6D5F7072 		.ascii	"m_pressure\000"
 4579      65737375 
 4579      726500
 4580              	.LASF30:
 4581 0754 73746174 		.ascii	"status\000"
 4581      757300
 4582              	.LASF142:
 4583 075b 64617461 		.ascii	"dataPointsInStackDesired\000"
 4583      506F696E 
 4583      7473496E 
 4583      53746163 
 4583      6B446573 
 4584              	.LASF108:
 4585 0774 745F766F 		.ascii	"t_voltages\000"
 4585      6C746167 
 4585      657300
 4586              	.LASF160:
 4587 077f 6E6F746F 		.ascii	"notoriOS.c\000"
 4587      72694F53 
 4587      2E6300
 4588              	.LASF149:
 4589 078a 68747470 		.ascii	"http_body\000"
 4589      5F626F64 
 4589      7900
 4590              	.LASF15:
 4591 0794 696E7431 		.ascii	"int16\000"
 4591      3600
 4592              	.LASF80:
 4593 079a 636F756E 		.ascii	"countDownType\000"
 4593      74446F77 
 4593      6E547970 
 4593      6500
 4594              	.LASF79:
 4595 07a8 63757272 		.ascii	"currentCountDownValue\000"
 4595      656E7443 
 4595      6F756E74 
 4595      446F776E 
 4595      56616C75 
 4596              	.LASF72:
 4597 07be 73696D5F 		.ascii	"sim_type\000"
 4597      74797065 
 4597      00
 4598              	.LASF90:
 4599 07c7 635F6865 		.ascii	"c_hey\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccN1Xt9r.s 			page 103


 4599      7900
 4600              	.LASF25:
 4601 07cd 4461794F 		.ascii	"DayOfYear\000"
 4601      66596561 
 4601      7200
 4602              	.LASF46:
 4603 07d7 70726573 		.ascii	"pressure_t\000"
 4603      73757265 
 4603      5F7400
 4604              	.LASF99:
 4605 07e2 416C6172 		.ascii	"AlarmReady\000"
 4605      6D526561 
 4605      647900
 4606              	.LASF102:
 4607 07ed 52656164 		.ascii	"ReadyOrNot\000"
 4607      794F724E 
 4607      6F7400
 4608              	.LASF164:
 4609 07f8 6D61696E 		.ascii	"main\000"
 4609      00
 4610              	.LASF84:
 4611 07fd 63686970 		.ascii	"chip_uniqueId\000"
 4611      5F756E69 
 4611      71756549 
 4611      6400
 4612              	.LASF73:
 4613 080b 6D656173 		.ascii	"measure_time\000"
 4613      7572655F 
 4613      74696D65 
 4613      00
 4614              	.LASF18:
 4615 0818 646F7562 		.ascii	"double\000"
 4615      6C6500
 4616              	.LASF43:
 4617 081f 766F6C74 		.ascii	"voltage_t\000"
 4617      6167655F 
 4617      7400
 4618              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
