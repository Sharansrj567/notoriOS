ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"notoriOS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.section	.text.Wakeup_ISR,"ax",%progbits
  44              		.align	2
  45              		.global	Wakeup_ISR
  46              		.thumb
  47              		.thumb_func
  48              		.type	Wakeup_ISR, %function
  49              	Wakeup_ISR:
  50              	.LFB64:
  51              		.file 1 "notoriOS.c"
   1:notoriOS.c    **** /* ========================================
   2:notoriOS.c    ****  *
   3:notoriOS.c    ****  * OPEN-STORM.ORG
   4:notoriOS.c    ****  * notoriOS
   5:notoriOS.c    ****  * A non-premptive operating system for node.
   6:notoriOS.c    ****  *
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 2


   7:notoriOS.c    ****  * "To all the teachers that told me I'd never amount to nothin"
   8:notoriOS.c    ****  *      -Notorious BIG (1994)
   9:notoriOS.c    ****  *
  10:notoriOS.c    ****  * ========================================
  11:notoriOS.c    **** */
  12:notoriOS.c    **** 
  13:notoriOS.c    **** #include "notoriOS.h"
  14:notoriOS.c    **** 
  15:notoriOS.c    **** 
  16:notoriOS.c    **** // This function must always be called (when the Sleep Timer's interrupt
  17:notoriOS.c    **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  18:notoriOS.c    **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  19:notoriOS.c    **** // of the ILO) after CTW event occurred.
  20:notoriOS.c    **** CY_ISR(Wakeup_ISR) {
  52              		.loc 1 20 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 80B5     		push	{r7, lr}
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 00AF     		add	r7, sp, #0
  61              		.cfi_def_cfa_register 7
  21:notoriOS.c    ****     // Returns the state of the Sleep Timer's status register, and clears the pending interrupt sta
  22:notoriOS.c    ****     SleepTimer_GetStatus();
  62              		.loc 1 22 0
  63 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  23:notoriOS.c    **** }
  64              		.loc 1 23 0
  65 0008 00BF     		nop
  66 000a 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE64:
  69              		.size	Wakeup_ISR, .-Wakeup_ISR
  70              		.global	Data_fileName
  71              		.data
  72              		.align	2
  73              		.type	Data_fileName, %object
  74              		.size	Data_fileName, 30
  75              	Data_fileName:
  76 0000 64617461 		.ascii	"data.txt\000"
  76      2E747874 
  76      00
  77 0009 00000000 		.space	21
  77      00000000 
  77      00000000 
  77      00000000 
  77      00000000 
  78              		.comm	try_counter,1,1
  79              		.section	.rodata
  80              		.align	2
  81              	.LC0:
  82 0000 25582D25 		.ascii	"%X-%X\000"
  82      5800
  83 0006 0000     		.align	2
  84              	.LC1:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 3


  85 0008 6563322D 		.ascii	"ec2-13-59-131-167.us-east-2.compute.amazonaws.com\000"
  85      31332D35 
  85      392D3133 
  85      312D3136 
  85      372E7573 
  86 003a 0000     		.align	2
  87              	.LC2:
  88 003c 256400   		.ascii	"%d\000"
  89 003f 00       		.align	2
  90              	.LC3:
  91 0040 7265626F 		.ascii	"reboot\000"
  91      6F7400
  92              		.section	.text.ReadyOrNot,"ax",%progbits
  93              		.align	2
  94              		.global	ReadyOrNot
  95              		.thumb
  96              		.thumb_func
  97              		.type	ReadyOrNot, %function
  98              	ReadyOrNot:
  99              	.LFB65:
  24:notoriOS.c    **** 
  25:notoriOS.c    **** 
  26:notoriOS.c    **** uint8 syncData();               // Syncs data with server 
  27:notoriOS.c    **** uint8 configureRemoteParams();  // Syncs RTC with cell network and obtains meta-DB params
  28:notoriOS.c    **** uint8 makeMeasurements();       // Takes sensor measurements
  29:notoriOS.c    **** char  Data_fileName[30] = "data.txt";
  30:notoriOS.c    **** uint8 try_counter;
  31:notoriOS.c    **** 
  32:notoriOS.c    **** 
  33:notoriOS.c    **** // ==============================================
  34:notoriOS.c    **** // Ready or not, here I come, you can't hide
  35:notoriOS.c    **** // Gonna find you and take it slowly
  36:notoriOS.c    **** //      - The Fugees (1996)
  37:notoriOS.c    **** //
  38:notoriOS.c    **** // Initialize and critical hardware or routines 
  39:notoriOS.c    **** // ==============================================
  40:notoriOS.c    **** void ReadyOrNot()
  41:notoriOS.c    **** {
 100              		.loc 1 41 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 32
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104 0000 B0B5     		push	{r4, r5, r7, lr}
 105              		.cfi_def_cfa_offset 16
 106              		.cfi_offset 4, -16
 107              		.cfi_offset 5, -12
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 8AB0     		sub	sp, sp, #40
 111              		.cfi_def_cfa_offset 56
 112 0004 02AF     		add	r7, sp, #8
 113              		.cfi_def_cfa 7, 48
  42:notoriOS.c    ****     
  43:notoriOS.c    ****     isr_SleepTimer_StartEx(Wakeup_ISR); // Start Sleep ISR
 114              		.loc 1 43 0
 115 0006 3948     		ldr	r0, .L3
 116 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 4


  44:notoriOS.c    ****     SleepTimer_Start();                 // Start SleepTimer Component
 117              		.loc 1 44 0
 118 000c FFF7FEFF 		bl	SleepTimer_Start
  45:notoriOS.c    ****     
  46:notoriOS.c    ****     RTC_WriteIntervalMask(0b11111111);  // Configures what interval handlers will be called from th
 119              		.loc 1 46 0
 120 0010 FF20     		movs	r0, #255
 121 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  47:notoriOS.c    ****     RTC_Start();                        // Enables the RTC component
 122              		.loc 1 47 0
 123 0016 FFF7FEFF 		bl	RTC_Start
  48:notoriOS.c    ****     debug_start();                      // Start UART debug
 124              		.loc 1 48 0
 125 001a FFF7FEFF 		bl	debug_start
  49:notoriOS.c    ****     
  50:notoriOS.c    ****     
  51:notoriOS.c    ****     
  52:notoriOS.c    ****     modem_initialize();                 // Initialize the modem
 126              		.loc 1 52 0
 127 001e FFF7FEFF 		bl	modem_initialize
  53:notoriOS.c    ****     
  54:notoriOS.c    ****     updatable_parameters_initialize();  // Initialize sampling, measurement, and debug frequencies 
 128              		.loc 1 54 0
 129 0022 FFF7FEFF 		bl	updatable_parameters_initialize
  55:notoriOS.c    ****    
  56:notoriOS.c    ****     
  57:notoriOS.c    ****     // Collect system info and store in struct (modem ID, silicon ID, etc)
  58:notoriOS.c    ****       /* An array of char elements for the resulting string to be stored */
  59:notoriOS.c    ****     
  60:notoriOS.c    ****     
  61:notoriOS.c    ****     // Get unique ID of PSOC chip, this can be concatenated with the MODEM IDs to generate a unique
  62:notoriOS.c    ****     uint32 uniqueId[2];
  63:notoriOS.c    ****     // Returns the 64-bit unique ID of the device.
  64:notoriOS.c    ****     CyGetUniqueId(uniqueId); 
 130              		.loc 1 64 0
 131 0026 07F11403 		add	r3, r7, #20
 132 002a 1846     		mov	r0, r3
 133 002c FFF7FEFF 		bl	CyGetUniqueId
  65:notoriOS.c    ****     snprintf(system_info.chip_uniqueId,sizeof(system_info.chip_uniqueId),"%X-%X",(unsigned int)uniq
 134              		.loc 1 65 0
 135 0030 7A69     		ldr	r2, [r7, #20]
 136 0032 BB69     		ldr	r3, [r7, #24]
 137 0034 0093     		str	r3, [sp]
 138 0036 1346     		mov	r3, r2
 139 0038 2D4A     		ldr	r2, .L3+4
 140 003a 1821     		movs	r1, #24
 141 003c 2D48     		ldr	r0, .L3+8
 142 003e FFF7FEFF 		bl	snprintf
  66:notoriOS.c    ****     // The modem will track/popualte it's own IDs, so just point to them for now
  67:notoriOS.c    ****     system_info.modem_info = &modem_info;
 143              		.loc 1 67 0
 144 0042 2D4B     		ldr	r3, .L3+12
 145 0044 2D4A     		ldr	r2, .L3+16
 146 0046 1A60     		str	r2, [r3]
  68:notoriOS.c    ****     
  69:notoriOS.c    ****     // Configure server endpoints -- these should obviosuly be provided  remotely by the meta data-
  70:notoriOS.c    ****     snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","ec2-13-59-131-167.us-eas
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 5


 147              		.loc 1 70 0
 148 0048 2D4A     		ldr	r2, .L3+20
 149 004a 2E4B     		ldr	r3, .L3+24
 150 004c 1446     		mov	r4, r2
 151 004e 1D46     		mov	r5, r3
 152 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 153 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 154 0054 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 155 0056 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 156 0058 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 157 005a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 158 005c 2B68     		ldr	r3, [r5]
 159 005e 2380     		strh	r3, [r4]	@ movhi
  71:notoriOS.c    ****    
  72:notoriOS.c    ****     system_settings.ep_port = 5000;
 160              		.loc 1 72 0
 161 0060 274B     		ldr	r3, .L3+20
 162 0062 41F28832 		movw	r2, #5000
 163 0066 5A66     		str	r2, [r3, #100]
  73:notoriOS.c    ****     // Don't need the following for new nodes
  74:notoriOS.c    ****     //snprintf(system_settings.ep_user,sizeof(system_settings.ep_user),"%s","generic_node");
  75:notoriOS.c    ****     //snprintf(system_settings.ep_pswd,sizeof(system_settings.ep_pswd),"%s","MakeFloodsCurrents");
  76:notoriOS.c    ****     //snprintf(system_settings.ep_database,sizeof(system_settings.ep_database),"%s","ARB");
  77:notoriOS.c    ****     //snprintf(system_settings.node_id,sizeof(system_settings.node_id),"%s","GGB000");
  78:notoriOS.c    ****         
  79:notoriOS.c    ****     
  80:notoriOS.c    ****     // Create a continuous alarm called alarmMeasure that triggers every 10 min (default) to take m
  81:notoriOS.c    ****     alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTI
 164              		.loc 1 81 0
 165 0068 274B     		ldr	r3, .L3+28
 166 006a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 167 006c 99B2     		uxth	r1, r3
 168 006e 274C     		ldr	r4, .L3+32
 169 0070 3846     		mov	r0, r7
 170 0072 0723     		movs	r3, #7
 171 0074 0122     		movs	r2, #1
 172 0076 FFF7FEFF 		bl	CreateAlarm
 173 007a 2246     		mov	r2, r4
 174 007c 3B46     		mov	r3, r7
 175 007e 1968     		ldr	r1, [r3]	@ unaligned
 176 0080 1160     		str	r1, [r2]	@ unaligned
 177 0082 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 178 0084 9380     		strh	r3, [r2, #4]	@ unaligned
  82:notoriOS.c    ****     timeToMeasure = 1u;
 179              		.loc 1 82 0
 180 0086 224B     		ldr	r3, .L3+36
 181 0088 0122     		movs	r2, #1
 182 008a 1A70     		strb	r2, [r3]
  83:notoriOS.c    ****     // Create a continuous alarm called alarmSync that triggers every 60 min (default) to sync the 
  84:notoriOS.c    ****     alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINUOUS)
 183              		.loc 1 84 0
 184 008c 1E4B     		ldr	r3, .L3+28
 185 008e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 186 0090 99B2     		uxth	r1, r3
 187 0092 204C     		ldr	r4, .L3+40
 188 0094 3846     		mov	r0, r7
 189 0096 0723     		movs	r3, #7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 6


 190 0098 0122     		movs	r2, #1
 191 009a FFF7FEFF 		bl	CreateAlarm
 192 009e 2246     		mov	r2, r4
 193 00a0 3B46     		mov	r3, r7
 194 00a2 1968     		ldr	r1, [r3]	@ unaligned
 195 00a4 1160     		str	r1, [r2]	@ unaligned
 196 00a6 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 197 00a8 9380     		strh	r3, [r2, #4]	@ unaligned
  85:notoriOS.c    ****     timeToSync = 1u;
 198              		.loc 1 85 0
 199 00aa 1B4B     		ldr	r3, .L3+44
 200 00ac 0122     		movs	r2, #1
 201 00ae 1A70     		strb	r2, [r3]
  86:notoriOS.c    ****     
  87:notoriOS.c    ****     timeToSycnRemoteParams = 0u;//set to 1 if you want to get modem IDs and time -- no need to do t
 202              		.loc 1 87 0
 203 00b0 1A4B     		ldr	r3, .L3+48
 204 00b2 0022     		movs	r2, #0
 205 00b4 1A70     		strb	r2, [r3]
  88:notoriOS.c    ****     
  89:notoriOS.c    ****     // send hey to server saying the node rebooted
  90:notoriOS.c    ****     hey = 1u;
 206              		.loc 1 90 0
 207 00b6 1A4B     		ldr	r3, .L3+52
 208 00b8 0122     		movs	r2, #1
 209 00ba 1A70     		strb	r2, [r3]
  91:notoriOS.c    ****     char c_hey[10];
  92:notoriOS.c    ****     snprintf(c_hey,sizeof(c_hey),"%d",hey);
 210              		.loc 1 92 0
 211 00bc 184B     		ldr	r3, .L3+52
 212 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 213 00c0 07F10800 		add	r0, r7, #8
 214 00c4 174A     		ldr	r2, .L3+56
 215 00c6 0A21     		movs	r1, #10
 216 00c8 FFF7FEFF 		bl	snprintf
  93:notoriOS.c    ****     pushData("reboot",c_hey,getTimeStamp());
 217              		.loc 1 93 0
 218 00cc FFF7FEFF 		bl	getTimeStamp
 219 00d0 0246     		mov	r2, r0
 220 00d2 07F10803 		add	r3, r7, #8
 221 00d6 1946     		mov	r1, r3
 222 00d8 1348     		ldr	r0, .L3+60
 223 00da FFF7FEFF 		bl	pushData
  94:notoriOS.c    ****     
  95:notoriOS.c    ****     // Initialize the try counter to 0
  96:notoriOS.c    ****     uint8 try_counter = 0;
 224              		.loc 1 96 0
 225 00de 0023     		movs	r3, #0
 226 00e0 FB77     		strb	r3, [r7, #31]
  97:notoriOS.c    **** }
 227              		.loc 1 97 0
 228 00e2 00BF     		nop
 229 00e4 2037     		adds	r7, r7, #32
 230              		.cfi_def_cfa_offset 16
 231 00e6 BD46     		mov	sp, r7
 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 7


 234 00e8 B0BD     		pop	{r4, r5, r7, pc}
 235              	.L4:
 236 00ea 00BF     		.align	2
 237              	.L3:
 238 00ec 00000000 		.word	Wakeup_ISR
 239 00f0 00000000 		.word	.LC0
 240 00f4 04000000 		.word	system_info+4
 241 00f8 00000000 		.word	system_info
 242 00fc 00000000 		.word	modem_info
 243 0100 00000000 		.word	system_settings
 244 0104 08000000 		.word	.LC1
 245 0108 00000000 		.word	updatable_parameters
 246 010c 00000000 		.word	alarmMeasure
 247 0110 00000000 		.word	timeToMeasure
 248 0114 00000000 		.word	alarmSync
 249 0118 00000000 		.word	timeToSync
 250 011c 00000000 		.word	timeToSycnRemoteParams
 251 0120 00000000 		.word	hey
 252 0124 3C000000 		.word	.LC2
 253 0128 40000000 		.word	.LC3
 254              		.cfi_endproc
 255              	.LFE65:
 256              		.size	ReadyOrNot, .-ReadyOrNot
 257              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 258              		.align	2
 259              		.global	WorkWorkWorkWorkWorkWork
 260              		.thumb
 261              		.thumb_func
 262              		.type	WorkWorkWorkWorkWorkWork, %function
 263              	WorkWorkWorkWorkWorkWork:
 264              	.LFB66:
  98:notoriOS.c    **** 
  99:notoriOS.c    **** 
 100:notoriOS.c    **** // ==============================================
 101:notoriOS.c    **** // You see me I be work, work, work, work, work, work 
 102:notoriOS.c    **** //      - Rhiana, feat Drake (2016)
 103:notoriOS.c    **** //
 104:notoriOS.c    **** // Prorcesses core tasks
 105:notoriOS.c    **** // ==============================================
 106:notoriOS.c    **** int WorkWorkWorkWorkWorkWork()
 107:notoriOS.c    **** {
 265              		.loc 1 107 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 8
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269 0000 80B5     		push	{r7, lr}
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 82B0     		sub	sp, sp, #8
 274              		.cfi_def_cfa_offset 16
 275 0004 00AF     		add	r7, sp, #0
 276              		.cfi_def_cfa_register 7
 108:notoriOS.c    ****     
 109:notoriOS.c    ****     // The priority of these tasks is determined by the if statements
 110:notoriOS.c    ****     // For example, taking measurements should always precede data transmisison, even if both fire
 111:notoriOS.c    ****     // Getting meta-DB info and system configs precedes all
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 8


 112:notoriOS.c    ****     // That said, the modem is always qeried to check if it needs anything
 113:notoriOS.c    ****     
 114:notoriOS.c    ****     // Checks to see if the timetoSyncRemoteParms flag is set
 115:notoriOS.c    ****     if(timeToSycnRemoteParams){
 277              		.loc 1 115 0
 278 0006 144B     		ldr	r3, .L10
 279 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 000a 002B     		cmp	r3, #0
 281 000c 06D0     		beq	.L6
 116:notoriOS.c    ****         timeToSycnRemoteParams = configureRemoteParams(); // Will return 0 when done sending data
 282              		.loc 1 116 0
 283 000e FFF7FEFF 		bl	configureRemoteParams
 284 0012 0346     		mov	r3, r0
 285 0014 1A46     		mov	r2, r3
 286 0016 104B     		ldr	r3, .L10
 287 0018 1A70     		strb	r2, [r3]
 288 001a 14E0     		b	.L7
 289              	.L6:
 117:notoriOS.c    ****     }
 118:notoriOS.c    ****     // Checks to see if the timetoMeasure flag is set
 119:notoriOS.c    ****     else if(timeToMeasure){
 290              		.loc 1 119 0
 291 001c 0F4B     		ldr	r3, .L10+4
 292 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 293 0020 002B     		cmp	r3, #0
 294 0022 06D0     		beq	.L8
 120:notoriOS.c    ****         //(int i=0; i<=30; i++){
 121:notoriOS.c    ****         timeToMeasure = makeMeasurements(); // Will return 0 when done sending data
 295              		.loc 1 121 0
 296 0024 FFF7FEFF 		bl	makeMeasurements
 297 0028 0346     		mov	r3, r0
 298 002a 1A46     		mov	r2, r3
 299 002c 0B4B     		ldr	r3, .L10+4
 300 002e 1A70     		strb	r2, [r3]
 301 0030 09E0     		b	.L7
 302              	.L8:
 122:notoriOS.c    ****         //CyDelay(1000u);
 123:notoriOS.c    ****         //}
 124:notoriOS.c    ****     }else if(timeToSync){
 303              		.loc 1 124 0
 304 0032 0B4B     		ldr	r3, .L10+8
 305 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 306 0036 002B     		cmp	r3, #0
 307 0038 05D0     		beq	.L7
 125:notoriOS.c    ****             timeToSync = syncData();
 308              		.loc 1 125 0
 309 003a FFF7FEFF 		bl	syncData
 310 003e 0346     		mov	r3, r0
 311 0040 1A46     		mov	r2, r3
 312 0042 074B     		ldr	r3, .L10+8
 313 0044 1A70     		strb	r2, [r3]
 314              	.L7:
 126:notoriOS.c    ****     }
 127:notoriOS.c    ****     // Print the countdown to the next alarm
 128:notoriOS.c    ****     //printNotif(NOTIF_TYPE_EVENT,"Measure CNT %d, Sync CNT %d, Data Wheel CNT %d",alarmMeasure.cur
 129:notoriOS.c    ****     
 130:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 9


 131:notoriOS.c    ****     // Check modem state machine on every loop
 132:notoriOS.c    ****     uint8 modem_status = modem_process_tasks();
 315              		.loc 1 132 0
 316 0046 FFF7FEFF 		bl	modem_process_tasks
 317 004a 0346     		mov	r3, r0
 318 004c FB71     		strb	r3, [r7, #7]
 133:notoriOS.c    **** 
 134:notoriOS.c    ****     return 0u +  modem_status;  
 319              		.loc 1 134 0
 320 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 135:notoriOS.c    **** }
 321              		.loc 1 135 0
 322 0050 1846     		mov	r0, r3
 323 0052 0837     		adds	r7, r7, #8
 324              		.cfi_def_cfa_offset 8
 325 0054 BD46     		mov	sp, r7
 326              		.cfi_def_cfa_register 13
 327              		@ sp needed
 328 0056 80BD     		pop	{r7, pc}
 329              	.L11:
 330              		.align	2
 331              	.L10:
 332 0058 00000000 		.word	timeToSycnRemoteParams
 333 005c 00000000 		.word	timeToMeasure
 334 0060 00000000 		.word	timeToSync
 335              		.cfi_endproc
 336              	.LFE66:
 337              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 338              		.section	.text.LayBack,"ax",%progbits
 339              		.align	2
 340              		.global	LayBack
 341              		.thumb
 342              		.thumb_func
 343              		.type	LayBack, %function
 344              	LayBack:
 345              	.LFB67:
 136:notoriOS.c    **** 
 137:notoriOS.c    **** 
 138:notoriOS.c    **** 
 139:notoriOS.c    **** 
 140:notoriOS.c    **** 
 141:notoriOS.c    **** 
 142:notoriOS.c    **** // ==============================================
 143:notoriOS.c    **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
 144:notoriOS.c    **** //      - Snoop Dogg (1993)
 145:notoriOS.c    **** //
 146:notoriOS.c    **** // Put all hardware to sleep and go into low power mode to conserve Amps
 147:notoriOS.c    **** // ==============================================
 148:notoriOS.c    **** void LayBack()
 149:notoriOS.c    **** {
 346              		.loc 1 149 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350 0000 80B5     		push	{r7, lr}
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 7, -8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 10


 353              		.cfi_offset 14, -4
 354 0002 00AF     		add	r7, sp, #0
 355              		.cfi_def_cfa_register 7
 150:notoriOS.c    ****   
 151:notoriOS.c    ****     modem_sleep();  // Prepares system clocks for the Sleep mode
 356              		.loc 1 151 0
 357 0004 FFF7FEFF 		bl	modem_sleep
 152:notoriOS.c    ****     
 153:notoriOS.c    ****     // Important, call this last because we want to sleep uart before shutting down
 154:notoriOS.c    ****     debug_sleep();  // Function to sleep UART debug
 358              		.loc 1 154 0
 359 0008 FFF7FEFF 		bl	debug_sleep
 155:notoriOS.c    ****     
 156:notoriOS.c    ****     CyPmSaveClocks(); // Called to prep system to sleep/hiberanate. Saves all states of clocking sy
 360              		.loc 1 156 0
 361 000c FFF7FEFF 		bl	CyPmSaveClocks
 157:notoriOS.c    ****     
 158:notoriOS.c    ****     // Switch to the Sleep Mode for the other devices:
 159:notoriOS.c    ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 160:notoriOS.c    ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 161:notoriOS.c    ****     //  - If real-time clock is used, it will also wake the device
 162:notoriOS.c    ****     //can also wake up from a pin intterup (PICU). This is useful with the moderm UART
 163:notoriOS.c    ****     //CyPmHibernate();
 164:notoriOS.c    ****     //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_PICU);
 165:notoriOS.c    **** 
 166:notoriOS.c    ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_ONE_PPS); // Puts the part into t
 362              		.loc 1 166 0
 363 0010 4FF40061 		mov	r1, #2048
 364 0014 0020     		movs	r0, #0
 365 0016 FFF7FEFF 		bl	CyPmSleep
 167:notoriOS.c    **** 
 168:notoriOS.c    ****     CyPmRestoreClocks();    // Restore clock configuration.
 366              		.loc 1 168 0
 367 001a FFF7FEFF 		bl	CyPmRestoreClocks
 169:notoriOS.c    **** 
 170:notoriOS.c    ****     debug_wakeup();         // Function to wakeup UART debug.
 368              		.loc 1 170 0
 369 001e FFF7FEFF 		bl	debug_wakeup
 171:notoriOS.c    ****     modem_wakeup();         // Function to wakeup modem.
 370              		.loc 1 171 0
 371 0022 FFF7FEFF 		bl	modem_wakeup
 172:notoriOS.c    **** 
 173:notoriOS.c    **** }
 372              		.loc 1 173 0
 373 0026 00BF     		nop
 374 0028 80BD     		pop	{r7, pc}
 375              		.cfi_endproc
 376              	.LFE67:
 377              		.size	LayBack, .-LayBack
 378 002a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 379              		.align	2
 380              		.global	AyoItsTime
 381              		.thumb
 382              		.thumb_func
 383              		.type	AyoItsTime, %function
 384              	AyoItsTime:
 385              	.LFB68:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 11


 174:notoriOS.c    **** 
 175:notoriOS.c    **** 
 176:notoriOS.c    **** // ==============================================
 177:notoriOS.c    **** // I never sleep, 'cause sleep is the cousin of death
 178:notoriOS.c    **** //      - NAS (1994)
 179:notoriOS.c    **** //
 180:notoriOS.c    **** // This is the scheduler. It's called from various interrupts and timers,
 181:notoriOS.c    **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 182:notoriOS.c    **** // It will add tasks to the work queue,
 183:notoriOS.c    **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 184:notoriOS.c    **** // ==============================================
 185:notoriOS.c    **** void AyoItsTime(uint8 alarmType)
 186:notoriOS.c    **** {
 386              		.loc 1 186 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 8
 389              		@ frame_needed = 1, uses_anonymous_args = 0
 390 0000 80B5     		push	{r7, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 82B0     		sub	sp, sp, #8
 395              		.cfi_def_cfa_offset 16
 396 0004 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
 398 0006 0346     		mov	r3, r0
 399 0008 FB71     		strb	r3, [r7, #7]
 187:notoriOS.c    ****     // Checks if the alarm is up and if so, sets the flag.
 188:notoriOS.c    ****     if(AlarmReady(&alarmMeasure,alarmType))
 400              		.loc 1 188 0
 401 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 402 000c 1946     		mov	r1, r3
 403 000e 0C48     		ldr	r0, .L17
 404 0010 FFF7FEFF 		bl	AlarmReady
 405 0014 0346     		mov	r3, r0
 406 0016 002B     		cmp	r3, #0
 407 0018 02D0     		beq	.L14
 189:notoriOS.c    ****     {
 190:notoriOS.c    ****          // Flag new task as "ready" and pass off to workworkworkworkwork()
 191:notoriOS.c    ****         timeToMeasure = 1u;
 408              		.loc 1 191 0
 409 001a 0A4B     		ldr	r3, .L17+4
 410 001c 0122     		movs	r2, #1
 411 001e 1A70     		strb	r2, [r3]
 412              	.L14:
 192:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Measure Alarm");
 193:notoriOS.c    ****         
 194:notoriOS.c    ****     }
 195:notoriOS.c    ****     if(AlarmReady(&alarmSync,alarmType))
 413              		.loc 1 195 0
 414 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 415 0022 1946     		mov	r1, r3
 416 0024 0848     		ldr	r0, .L17+8
 417 0026 FFF7FEFF 		bl	AlarmReady
 418 002a 0346     		mov	r3, r0
 419 002c 002B     		cmp	r3, #0
 420 002e 02D0     		beq	.L16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 12


 196:notoriOS.c    ****     {
 197:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
 198:notoriOS.c    ****         timeToSync = 1u;
 421              		.loc 1 198 0
 422 0030 064B     		ldr	r3, .L17+12
 423 0032 0122     		movs	r2, #1
 424 0034 1A70     		strb	r2, [r3]
 425              	.L16:
 199:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 200:notoriOS.c    ****     }
 201:notoriOS.c    ****     
 202:notoriOS.c    **** }
 426              		.loc 1 202 0
 427 0036 00BF     		nop
 428 0038 0837     		adds	r7, r7, #8
 429              		.cfi_def_cfa_offset 8
 430 003a BD46     		mov	sp, r7
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 003c 80BD     		pop	{r7, pc}
 434              	.L18:
 435 003e 00BF     		.align	2
 436              	.L17:
 437 0040 00000000 		.word	alarmMeasure
 438 0044 00000000 		.word	timeToMeasure
 439 0048 00000000 		.word	alarmSync
 440 004c 00000000 		.word	timeToSync
 441              		.cfi_endproc
 442              	.LFE68:
 443              		.size	AyoItsTime, .-AyoItsTime
 444              		.section	.text.AlarmReady,"ax",%progbits
 445              		.align	2
 446              		.global	AlarmReady
 447              		.thumb
 448              		.thumb_func
 449              		.type	AlarmReady, %function
 450              	AlarmReady:
 451              	.LFB69:
 203:notoriOS.c    **** 
 204:notoriOS.c    **** 
 205:notoriOS.c    **** // ==============================================
 206:notoriOS.c    **** // Determines when an alarm is ready to trigger, which will be handeled by another cutions
 207:notoriOS.c    **** // ==============================================
 208:notoriOS.c    **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 209:notoriOS.c    **** {
 452              		.loc 1 209 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 8
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456 0000 80B5     		push	{r7, lr}
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 7, -8
 459              		.cfi_offset 14, -4
 460 0002 82B0     		sub	sp, sp, #8
 461              		.cfi_def_cfa_offset 16
 462 0004 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 13


 464 0006 7860     		str	r0, [r7, #4]
 465 0008 0B46     		mov	r3, r1
 466 000a FB70     		strb	r3, [r7, #3]
 210:notoriOS.c    ****     // if the countDownType matches the alarmType
 211:notoriOS.c    ****     if(alarmToBeUpdated->countDownType == alarmType){
 467              		.loc 1 211 0
 468 000c 7B68     		ldr	r3, [r7, #4]
 469 000e 1B79     		ldrb	r3, [r3, #4]
 470 0010 DBB2     		uxtb	r3, r3
 471 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 472 0014 9A42     		cmp	r2, r3
 473 0016 12D1     		bne	.L20
 212:notoriOS.c    ****        
 213:notoriOS.c    ****         // In the Post-decrement old value is first used in a expression and then old value will be
 214:notoriOS.c    ****         // Decrement the count down value by 1
 215:notoriOS.c    ****         alarmToBeUpdated->currentCountDownValue--;
 474              		.loc 1 215 0
 475 0018 7B68     		ldr	r3, [r7, #4]
 476 001a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 477 001c 1BB2     		sxth	r3, r3
 478 001e 9BB2     		uxth	r3, r3
 479 0020 013B     		subs	r3, r3, #1
 480 0022 9BB2     		uxth	r3, r3
 481 0024 1AB2     		sxth	r2, r3
 482 0026 7B68     		ldr	r3, [r7, #4]
 483 0028 5A80     		strh	r2, [r3, #2]	@ movhi
 216:notoriOS.c    ****         // If the current count is 0, then reset the alarm
 217:notoriOS.c    ****         if(alarmToBeUpdated->currentCountDownValue <= 0){
 484              		.loc 1 217 0
 485 002a 7B68     		ldr	r3, [r7, #4]
 486 002c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 487 002e 1BB2     		sxth	r3, r3
 488 0030 002B     		cmp	r3, #0
 489 0032 04DC     		bgt	.L20
 218:notoriOS.c    ****             ResetAlarm(alarmToBeUpdated);
 490              		.loc 1 218 0
 491 0034 7868     		ldr	r0, [r7, #4]
 492 0036 FFF7FEFF 		bl	ResetAlarm
 219:notoriOS.c    ****             return 1u;
 493              		.loc 1 219 0
 494 003a 0123     		movs	r3, #1
 495 003c 00E0     		b	.L21
 496              	.L20:
 220:notoriOS.c    ****         } 
 221:notoriOS.c    ****     }
 222:notoriOS.c    ****     
 223:notoriOS.c    ****     return 0u; // Otherwise return 0
 497              		.loc 1 223 0
 498 003e 0023     		movs	r3, #0
 499              	.L21:
 224:notoriOS.c    **** }
 500              		.loc 1 224 0
 501 0040 1846     		mov	r0, r3
 502 0042 0837     		adds	r7, r7, #8
 503              		.cfi_def_cfa_offset 8
 504 0044 BD46     		mov	sp, r7
 505              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 14


 506              		@ sp needed
 507 0046 80BD     		pop	{r7, pc}
 508              		.cfi_endproc
 509              	.LFE69:
 510              		.size	AlarmReady, .-AlarmReady
 511              		.section	.text.ResetAlarm,"ax",%progbits
 512              		.align	2
 513              		.global	ResetAlarm
 514              		.thumb
 515              		.thumb_func
 516              		.type	ResetAlarm, %function
 517              	ResetAlarm:
 518              	.LFB70:
 225:notoriOS.c    **** 
 226:notoriOS.c    **** // ==============================================
 227:notoriOS.c    **** // Resets an alarm, which will be handeled by other executions
 228:notoriOS.c    **** // ==============================================
 229:notoriOS.c    **** void ResetAlarm(alarm * alarmToBeReset)
 230:notoriOS.c    **** {
 519              		.loc 1 230 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524 0000 80B4     		push	{r7}
 525              		.cfi_def_cfa_offset 4
 526              		.cfi_offset 7, -4
 527 0002 83B0     		sub	sp, sp, #12
 528              		.cfi_def_cfa_offset 16
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 531 0006 7860     		str	r0, [r7, #4]
 231:notoriOS.c    ****     // resets the alarm when the current count down value equals the set alarm count down value
 232:notoriOS.c    ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 532              		.loc 1 232 0
 533 0008 7B68     		ldr	r3, [r7, #4]
 534 000a 1B88     		ldrh	r3, [r3]	@ movhi
 535 000c 9BB2     		uxth	r3, r3
 536 000e 1AB2     		sxth	r2, r3
 537 0010 7B68     		ldr	r3, [r7, #4]
 538 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 233:notoriOS.c    **** }
 539              		.loc 1 233 0
 540 0014 00BF     		nop
 541 0016 0C37     		adds	r7, r7, #12
 542              		.cfi_def_cfa_offset 4
 543 0018 BD46     		mov	sp, r7
 544              		.cfi_def_cfa_register 13
 545              		@ sp needed
 546 001a 80BC     		pop	{r7}
 547              		.cfi_restore 7
 548              		.cfi_def_cfa_offset 0
 549 001c 7047     		bx	lr
 550              		.cfi_endproc
 551              	.LFE70:
 552              		.size	ResetAlarm, .-ResetAlarm
 553 001e 00BF     		.section	.text.CreateAlarm,"ax",%progbits
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 15


 554              		.align	2
 555              		.global	CreateAlarm
 556              		.thumb
 557              		.thumb_func
 558              		.type	CreateAlarm, %function
 559              	CreateAlarm:
 560              	.LFB71:
 234:notoriOS.c    **** 
 235:notoriOS.c    **** // ==============================================
 236:notoriOS.c    **** // Creates a new alarm, which will be handeled by another cutions
 237:notoriOS.c    **** // ==============================================
 238:notoriOS.c    **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 239:notoriOS.c    **** {
 561              		.loc 1 239 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 16
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566 0000 80B4     		push	{r7}
 567              		.cfi_def_cfa_offset 4
 568              		.cfi_offset 7, -4
 569 0002 85B0     		sub	sp, sp, #20
 570              		.cfi_def_cfa_offset 24
 571 0004 00AF     		add	r7, sp, #0
 572              		.cfi_def_cfa_register 7
 573 0006 7860     		str	r0, [r7, #4]
 574 0008 0846     		mov	r0, r1
 575 000a 1146     		mov	r1, r2
 576 000c 1A46     		mov	r2, r3
 577 000e 0346     		mov	r3, r0	@ movhi
 578 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 579 0012 0B46     		mov	r3, r1
 580 0014 7B70     		strb	r3, [r7, #1]
 581 0016 1346     		mov	r3, r2
 582 0018 3B70     		strb	r3, [r7]
 240:notoriOS.c    ****     // Creates variable newAlarm of the data structure type alarm
 241:notoriOS.c    ****     alarm newAlarm;
 242:notoriOS.c    ****     
 243:notoriOS.c    ****     // Defines the different params of an alarm: # of ticks, alarm type (sec, min, etc.), & continu
 244:notoriOS.c    ****     newAlarm.countDownValue = countDownValue;
 583              		.loc 1 244 0
 584 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 585 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 245:notoriOS.c    ****     newAlarm.countDownType = countDownType;
 586              		.loc 1 245 0
 587 001e 7B78     		ldrb	r3, [r7, #1]
 588 0020 3B73     		strb	r3, [r7, #12]
 246:notoriOS.c    ****     newAlarm.countDownResetCondition = countDownResetCondition;
 589              		.loc 1 246 0
 590 0022 3B78     		ldrb	r3, [r7]
 591 0024 7B73     		strb	r3, [r7, #13]
 247:notoriOS.c    ****     
 248:notoriOS.c    ****     // If you want a reccuring alarm (e.g. resets freshly each hour), then add
 249:notoriOS.c    ****     // Account for already exprired time using the RTC. Otherwise, set to the countDownValue
 250:notoriOS.c    ****     newAlarm.currentCountDownValue = countDownValue;
 592              		.loc 1 250 0
 593 0026 B7F90230 		ldrsh	r3, [r7, #2]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 16


 594 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 251:notoriOS.c    ****     
 252:notoriOS.c    ****     return newAlarm;
 595              		.loc 1 252 0
 596 002c 7B68     		ldr	r3, [r7, #4]
 597 002e 1A46     		mov	r2, r3
 598 0030 07F10803 		add	r3, r7, #8
 599 0034 1868     		ldr	r0, [r3]	@ unaligned
 600 0036 1060     		str	r0, [r2]	@ unaligned
 601 0038 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 602 003a 9380     		strh	r3, [r2, #4]	@ unaligned
 253:notoriOS.c    ****     
 254:notoriOS.c    **** }
 603              		.loc 1 254 0
 604 003c 7868     		ldr	r0, [r7, #4]
 605 003e 1437     		adds	r7, r7, #20
 606              		.cfi_def_cfa_offset 4
 607 0040 BD46     		mov	sp, r7
 608              		.cfi_def_cfa_register 13
 609              		@ sp needed
 610 0042 80BC     		pop	{r7}
 611              		.cfi_restore 7
 612              		.cfi_def_cfa_offset 0
 613 0044 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE71:
 616              		.size	CreateAlarm, .-CreateAlarm
 617 0046 00BF     		.section	.rodata
 618 0047 00       		.align	2
 619              	.LC4:
 620 0048 2D2D2D2D 		.ascii	"-------------BEGIN TESTS---------------\012\012\000"
 620      2D2D2D2D 
 620      2D2D2D2D 
 620      2D424547 
 620      494E2054 
 621 0072 0000     		.align	2
 622              	.LC5:
 623 0074 4D454944 		.ascii	"MEID=%s, SIMID=%s, DEVICEID=%s\012\000"
 623      3D25732C 
 623      2053494D 
 623      49443D25 
 623      732C2044 
 624              		.align	2
 625              	.LC6:
 626 0094 0A0A2D2D 		.ascii	"\012\012-------------END TESTS---------------\012\012"
 626      2D2D2D2D 
 626      2D2D2D2D 
 626      2D2D2D45 
 626      4E442054 
 627 00bd 00       		.ascii	"\000"
 628              		.section	.text.ChickityCheckYourselfBeforeYouWreckYourself,"ax",%progbits
 629              		.align	2
 630              		.global	ChickityCheckYourselfBeforeYouWreckYourself
 631              		.thumb
 632              		.thumb_func
 633              		.type	ChickityCheckYourselfBeforeYouWreckYourself, %function
 634              	ChickityCheckYourselfBeforeYouWreckYourself:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 17


 635              	.LFB72:
 255:notoriOS.c    **** 
 256:notoriOS.c    **** // ==============================================
 257:notoriOS.c    **** // Dropping bombs on your moms
 258:notoriOS.c    **** //      - Ice Cube (1992)
 259:notoriOS.c    **** //
 260:notoriOS.c    **** // This is the global testing function, which runs all relevant tests
 261:notoriOS.c    **** // If you make a new components, it could be good to call its tester function here 
 262:notoriOS.c    **** // ==============================================
 263:notoriOS.c    **** void ChickityCheckYourselfBeforeYouWreckYourself(){
 636              		.loc 1 263 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 1552
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 90B5     		push	{r4, r7, lr}
 641              		.cfi_def_cfa_offset 12
 642              		.cfi_offset 4, -12
 643              		.cfi_offset 7, -8
 644              		.cfi_offset 14, -4
 645 0002 ADF28C7D 		subw	sp, sp, #1932
 646              		.cfi_def_cfa_offset 1944
 647 0006 5EAF     		add	r7, sp, #376
 648              		.cfi_def_cfa 7, 1568
 264:notoriOS.c    **** 
 265:notoriOS.c    ****     //test_t t_influx = influx_test();
 266:notoriOS.c    ****     //printTestStatus(t_influx);
 267:notoriOS.c    ****     
 268:notoriOS.c    ****     
 269:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"-------------BEGIN TESTS---------------\n\n");
 649              		.loc 1 269 0
 650 0008 2F49     		ldr	r1, .L26
 651 000a 0320     		movs	r0, #3
 652 000c FFF7FEFF 		bl	printNotif
 270:notoriOS.c    ****     
 271:notoriOS.c    ****     // Test modem
 272:notoriOS.c    ****     test_t t_modem = modem_test();
 653              		.loc 1 272 0
 654 0010 07F28C43 		addw	r3, r7, #1164
 655 0014 1846     		mov	r0, r3
 656 0016 FFF7FEFF 		bl	modem_test
 273:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"MEID=%s, SIMID=%s, DEVICEID=%s\n",modem_info.imei,modem_info.sim
 657              		.loc 1 273 0
 658 001a 2C4B     		ldr	r3, .L26+4
 659 001c 0093     		str	r3, [sp]
 660 001e 2C4B     		ldr	r3, .L26+8
 661 0020 2C4A     		ldr	r2, .L26+12
 662 0022 2D49     		ldr	r1, .L26+16
 663 0024 0320     		movs	r0, #3
 664 0026 FFF7FEFF 		bl	printNotif
 274:notoriOS.c    ****     printTestStatus(t_modem);
 665              		.loc 1 274 0
 666 002a 07F28C44 		addw	r4, r7, #1164
 667 002e 6846     		mov	r0, sp
 668 0030 04F11003 		add	r3, r4, #16
 669 0034 40F27112 		movw	r2, #369
 670 0038 1946     		mov	r1, r3
 671 003a FFF7FEFF 		bl	memcpy
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 18


 672 003e 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 673 0042 FFF7FEFF 		bl	printTestStatus
 275:notoriOS.c    ****     
 276:notoriOS.c    ****     // Test level sensor
 277:notoriOS.c    ****     test_t t_level_sensor = level_sensor_test();  
 674              		.loc 1 277 0
 675 0046 07F54273 		add	r3, r7, #776
 676 004a 1846     		mov	r0, r3
 677 004c FFF7FEFF 		bl	level_sensor_test
 278:notoriOS.c    ****     printTestStatus(t_level_sensor);
 678              		.loc 1 278 0
 679 0050 07F54274 		add	r4, r7, #776
 680 0054 6846     		mov	r0, sp
 681 0056 04F11003 		add	r3, r4, #16
 682 005a 40F27112 		movw	r2, #369
 683 005e 1946     		mov	r1, r3
 684 0060 FFF7FEFF 		bl	memcpy
 685 0064 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 686 0068 FFF7FEFF 		bl	printTestStatus
 279:notoriOS.c    ****     
 280:notoriOS.c    ****     // Test voltages
 281:notoriOS.c    ****     test_t t_voltages = voltages_test();
 687              		.loc 1 281 0
 688 006c 07F5C273 		add	r3, r7, #388
 689 0070 1846     		mov	r0, r3
 690 0072 FFF7FEFF 		bl	voltages_test
 282:notoriOS.c    ****     printTestStatus(t_voltages);
 691              		.loc 1 282 0
 692 0076 07F5C274 		add	r4, r7, #388
 693 007a 6846     		mov	r0, sp
 694 007c 04F11003 		add	r3, r4, #16
 695 0080 40F27112 		movw	r2, #369
 696 0084 1946     		mov	r1, r3
 697 0086 FFF7FEFF 		bl	memcpy
 698 008a 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 699 008e FFF7FEFF 		bl	printTestStatus
 283:notoriOS.c    ****     
 284:notoriOS.c    ****     // Test SD card
 285:notoriOS.c    ****     test_t t_sd_card = SD_card_test();
 700              		.loc 1 285 0
 701 0092 3B46     		mov	r3, r7
 702 0094 1846     		mov	r0, r3
 703 0096 FFF7FEFF 		bl	SD_card_test
 286:notoriOS.c    ****     printTestStatus(t_sd_card);
 704              		.loc 1 286 0
 705 009a 3C46     		mov	r4, r7
 706 009c 6846     		mov	r0, sp
 707 009e 04F11003 		add	r3, r4, #16
 708 00a2 40F27112 		movw	r2, #369
 709 00a6 1946     		mov	r1, r3
 710 00a8 FFF7FEFF 		bl	memcpy
 711 00ac 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 712 00b0 FFF7FEFF 		bl	printTestStatus
 287:notoriOS.c    ****     
 288:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"\n\n-------------END TESTS---------------\n\n");
 713              		.loc 1 288 0
 714 00b4 0949     		ldr	r1, .L26+20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 19


 715 00b6 0320     		movs	r0, #3
 716 00b8 FFF7FEFF 		bl	printNotif
 289:notoriOS.c    **** 
 290:notoriOS.c    **** }
 717              		.loc 1 290 0
 718 00bc 00BF     		nop
 719 00be 07F21467 		addw	r7, r7, #1556
 720              		.cfi_def_cfa_offset 12
 721 00c2 BD46     		mov	sp, r7
 722              		.cfi_def_cfa_register 13
 723              		@ sp needed
 724 00c4 90BD     		pop	{r4, r7, pc}
 725              	.L27:
 726 00c6 00BF     		.align	2
 727              	.L26:
 728 00c8 48000000 		.word	.LC4
 729 00cc 04000000 		.word	system_info+4
 730 00d0 00000000 		.word	modem_info
 731 00d4 28000000 		.word	modem_info+40
 732 00d8 74000000 		.word	.LC5
 733 00dc 94000000 		.word	.LC6
 734              		.cfi_endproc
 735              	.LFE72:
 736              		.size	ChickityCheckYourselfBeforeYouWreckYourself, .-ChickityCheckYourselfBeforeYouWreckYourself
 737              		.section	.text.main,"ax",%progbits
 738              		.align	2
 739              		.global	main
 740              		.thumb
 741              		.thumb_func
 742              		.type	main, %function
 743              	main:
 744              	.LFB73:
 291:notoriOS.c    **** 
 292:notoriOS.c    **** // ==============================================
 293:notoriOS.c    **** // Processes Core Tasks
 294:notoriOS.c    **** // ==============================================
 295:notoriOS.c    **** int main(void)
 296:notoriOS.c    **** {
 745              		.loc 1 296 0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 0
 748              		@ frame_needed = 1, uses_anonymous_args = 0
 749 0000 80B5     		push	{r7, lr}
 750              		.cfi_def_cfa_offset 8
 751              		.cfi_offset 7, -8
 752              		.cfi_offset 14, -4
 753 0002 00AF     		add	r7, sp, #0
 754              		.cfi_def_cfa_register 7
 297:notoriOS.c    ****     CyGlobalIntEnable; /* Enable global interrupts. */
 755              		.loc 1 297 0
 756              		.syntax unified
 757              	@ 297 "notoriOS.c" 1
 758 0004 62B6     		CPSIE   i
 759              	@ 0 "" 2
 298:notoriOS.c    **** 
 299:notoriOS.c    ****     ReadyOrNot(); // Initialize 
 760              		.loc 1 299 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 20


 761              		.thumb
 762              		.syntax unified
 763 0006 FFF7FEFF 		bl	ReadyOrNot
 300:notoriOS.c    ****     
 301:notoriOS.c    ****     ChickityCheckYourselfBeforeYouWreckYourself(); // Run tests for all components on bootup
 764              		.loc 1 301 0
 765 000a FFF7FEFF 		bl	ChickityCheckYourselfBeforeYouWreckYourself
 766              	.L30:
 302:notoriOS.c    ****    
 303:notoriOS.c    ****     for(;;) // (;;) means an infinite loop
 304:notoriOS.c    ****     {
 305:notoriOS.c    ****         
 306:notoriOS.c    ****         if( ! WorkWorkWorkWorkWorkWork() ) // Complete the work
 767              		.loc 1 306 0
 768 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 769 0012 0346     		mov	r3, r0
 770 0014 002B     		cmp	r3, #0
 771 0016 FAD1     		bne	.L30
 307:notoriOS.c    ****         {
 308:notoriOS.c    ****            LayBack(); // Lay back (sleep) when there isn't work
 772              		.loc 1 308 0
 773 0018 FFF7FEFF 		bl	LayBack
 309:notoriOS.c    ****         }
 310:notoriOS.c    ****     }
 774              		.loc 1 310 0
 775 001c F7E7     		b	.L30
 776              		.cfi_endproc
 777              	.LFE73:
 778              		.size	main, .-main
 779 001e 00BF     		.section	.rodata
 780 00be 0000     		.align	2
 781              	.LC7:
 782 00c0 4D6F6465 		.ascii	"Modem is ready.\000"
 782      6D206973 
 782      20726561 
 782      64792E00 
 783              		.align	2
 784              	.LC8:
 785 00d0 72737270 		.ascii	"rsrp\000"
 785      00
 786 00d5 000000   		.align	2
 787              	.LC9:
 788 00d8 7472795F 		.ascii	"try_counter\000"
 788      636F756E 
 788      74657200 
 789              		.align	2
 790              	.LC10:
 791 00e4 64617461 		.ascii	"data_count_sent\000"
 791      5F636F75 
 791      6E745F73 
 791      656E7400 
 792              		.align	2
 793              	.LC11:
 794 00f4 64617461 		.ascii	"data_count_desired\000"
 794      5F636F75 
 794      6E745F64 
 794      65736972 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 21


 794      656400
 795 0107 00       		.align	2
 796              	.LC12:
 797 0108 42656769 		.ascii	"Begin HTTP post.\000"
 797      6E204854 
 797      54502070 
 797      6F73742E 
 797      00
 798 0119 000000   		.align	2
 799              	.LC13:
 800 011c 39323633 		.ascii	"92633393ba637671a6f3c5316a0e01ecd2587883\000"
 800      33333933 
 800      62613633 
 800      37363731 
 800      61366633 
 801 0145 000000   		.align	2
 802              	.LC14:
 803 0148 6170692F 		.ascii	"api/v1/write\000"
 803      76312F77 
 803      72697465 
 803      00
 804 0155 000000   		.align	2
 805              	.LC15:
 806 0158 48545450 		.ascii	"HTTP route: %s\000"
 806      20726F75 
 806      74653A20 
 806      257300
 807 0167 00       		.align	2
 808              	.LC16:
 809 0168 312E3100 		.ascii	"1.1\000"
 810              		.align	2
 811              	.LC17:
 812 016c 00       		.ascii	"\000"
 813 016d 000000   		.align	2
 814              	.LC18:
 815 0170 436C6F73 		.ascii	"Close\000"
 815      6500
 816 0176 0000     		.align	2
 817              	.LC19:
 818 0178 504F5354 		.ascii	"POST\000"
 818      00
 819 017d 000000   		.align	2
 820              	.LC20:
 821 0180 46756C6C 		.ascii	"Full HTTP Request: %s\000"
 821      20485454 
 821      50205265 
 821      71756573 
 821      743A2025 
 822 0196 0000     		.align	2
 823              	.LC21:
 824 0198 41542353 		.ascii	"AT#SD=1,0,%d,\"%s\",0,0,1\015\000"
 824      443D312C 
 824      302C2564 
 824      2C222573 
 824      222C302C 
 825 01b1 000000   		.align	2
 826              	.LC22:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 22


 827 01b4 257300   		.ascii	"%s\000"
 828 01b7 00       		.align	2
 829              	.LC23:
 830 01b8 4F4B00   		.ascii	"OK\000"
 831              		.global	__aeabi_ui2d
 832              		.global	__aeabi_d2iz
 833 01bb 00       		.align	2
 834              	.LC24:
 835 01bc 68747470 		.ascii	"http_request len: %d\000"
 835      5F726571 
 835      75657374 
 835      206C656E 
 835      3A202564 
 836 01d1 000000   		.align	2
 837              	.LC25:
 838 01d4 23206F66 		.ascii	"# of packets: %d\000"
 838      20706163 
 838      6B657473 
 838      3A202564 
 838      00
 839 01e5 000000   		.align	2
 840              	.LC26:
 841 01e8 3E00     		.ascii	">\000"
 842 01ea 0000     		.align	2
 843              	.LC27:
 844 01ec 41542353 		.ascii	"AT#SSEND=1\015\012\000"
 844      53454E44 
 844      3D310D0A 
 844      00
 845 01f9 000000   		.align	2
 846              	.LC28:
 847 01fc 1A00     		.ascii	"\032\000"
 848 01fe 0000     		.align	2
 849              	.LC29:
 850 0200 6368756E 		.ascii	"chunk %d: %s\000"
 850      6B202564 
 850      3A202573 
 850      00
 851 020d 000000   		.align	2
 852              	.LC30:
 853 0210 5352494E 		.ascii	"SRING\000"
 853      4700
 854 0216 0000     		.align	2
 855              	.LC31:
 856 0218 4F532D4F 		.ascii	"OS-OK\000"
 856      4B00
 857 021e 0000     		.align	2
 858              	.LC32:
 859 0220 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 859      52454356 
 859      3D312C31 
 859      3030300D 
 859      00
 860 0231 000000   		.align	2
 861              	.LC33:
 862 0234 6D6F6465 		.ascii	"modem_tx_time\000"
 862      6D5F7478 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 23


 862      5F74696D 
 862      6500
 863 0242 0000     		.align	2
 864              	.LC34:
 865 0244 4F532D4E 		.ascii	"OS-NO: Could not receive data from server.\000"
 865      4F3A2043 
 865      6F756C64 
 865      206E6F74 
 865      20726563 
 866              		.section	.text.syncData,"ax",%progbits
 867              		.align	2
 868              		.global	syncData
 869              		.thumb
 870              		.thumb_func
 871              		.type	syncData, %function
 872              	syncData:
 873              	.LFB74:
 311:notoriOS.c    **** }
 312:notoriOS.c    **** 
 313:notoriOS.c    **** // ==============================================
 314:notoriOS.c    **** // Syncs data with server
 315:notoriOS.c    **** // Returns 0 when done
 316:notoriOS.c    **** // ==============================================
 317:notoriOS.c    **** uint8 syncData(){
 874              		.loc 1 317 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 1336
 877              		@ frame_needed = 1, uses_anonymous_args = 0
 878 0000 90B5     		push	{r4, r7, lr}
 879              		.cfi_def_cfa_offset 12
 880              		.cfi_offset 4, -12
 881              		.cfi_offset 7, -8
 882              		.cfi_offset 14, -4
 883 0002 ADF2545D 		subw	sp, sp, #1364
 884              		.cfi_def_cfa_offset 1376
 885 0006 06AF     		add	r7, sp, #24
 886              		.cfi_def_cfa 7, 1352
 318:notoriOS.c    ****     
 319:notoriOS.c    ****     /*
 320:notoriOS.c    ****     //at_write_command("AT#SCFG?\r","OK",1000);
 321:notoriOS.c    ****     uint8 check = 0;
 322:notoriOS.c    ****     //"AT#SD=,0,80,\”www.google.com\”,0,0,0\r"
 323:notoriOS.c    ****     check = at_write_command("AT#SD=1,0,8086,\"data.open-storm.org\",0,0,1\r","OK",10000u);
 324:notoriOS.c    ****     check = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 325:notoriOS.c    ****     check = at_write_command("POST /write?db=ARB&u=generic_node&p=MakeFloodsCurrents HTTP/1.1\r\nHo
 326:notoriOS.c    ****     */
 327:notoriOS.c    **** 
 328:notoriOS.c    ****     // Blink LED so we know it's about to sync data
 329:notoriOS.c    ****     LED_Write(1u);
 887              		.loc 1 329 0
 888 0008 0120     		movs	r0, #1
 889 000a FFF7FEFF 		bl	LED_Write
 330:notoriOS.c    ****     CyDelay(100u);
 890              		.loc 1 330 0
 891 000e 6420     		movs	r0, #100
 892 0010 FFF7FEFF 		bl	CyDelay
 331:notoriOS.c    ****     LED_Write(0u);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 24


 893              		.loc 1 331 0
 894 0014 0020     		movs	r0, #0
 895 0016 FFF7FEFF 		bl	LED_Write
 332:notoriOS.c    **** 
 333:notoriOS.c    ****     
 334:notoriOS.c    ****     // If there's no data, not need to do anything
 335:notoriOS.c    ****     if(sizeOfDataStack() == 0){        
 896              		.loc 1 335 0
 897 001a FFF7FEFF 		bl	sizeOfDataStack
 898 001e 0346     		mov	r3, r0
 899 0020 002B     		cmp	r3, #0
 900 0022 01D1     		bne	.L32
 336:notoriOS.c    ****         return 0u;
 901              		.loc 1 336 0
 902 0024 0023     		movs	r3, #0
 903 0026 F9E1     		b	.L33
 904              	.L32:
 337:notoriOS.c    ****         }
 338:notoriOS.c    ****     
 339:notoriOS.c    ****     // Create request body, in this case influx
 340:notoriOS.c    ****     // Place body into HTTP request header
 341:notoriOS.c    ****     // Fire up modem and get it out
 342:notoriOS.c    ****      
 343:notoriOS.c    ****     
 344:notoriOS.c    ****     // Try up to 2 times to connect to the modem
 345:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 905              		.loc 1 345 0
 906 0028 FFF7FEFF 		bl	modem_get_state
 907 002c 0346     		mov	r3, r0
 908 002e 002B     		cmp	r3, #0
 909 0030 11D1     		bne	.L34
 346:notoriOS.c    **** 
 347:notoriOS.c    ****         try_counter++;
 910              		.loc 1 347 0
 911 0032 C74B     		ldr	r3, .L46
 912 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 913 0036 0133     		adds	r3, r3, #1
 914 0038 DAB2     		uxtb	r2, r3
 915 003a C54B     		ldr	r3, .L46
 916 003c 1A70     		strb	r2, [r3]
 348:notoriOS.c    ****         	
 349:notoriOS.c    ****         if(try_counter <= 2){
 917              		.loc 1 349 0
 918 003e C44B     		ldr	r3, .L46
 919 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 920 0042 022B     		cmp	r3, #2
 921 0044 02D8     		bhi	.L35
 350:notoriOS.c    ****             modem_power_up();
 922              		.loc 1 350 0
 923 0046 FFF7FEFF 		bl	modem_power_up
 924 004a E6E1     		b	.L36
 925              	.L35:
 351:notoriOS.c    ****         }else{
 352:notoriOS.c    ****             try_counter = 0;
 926              		.loc 1 352 0
 927 004c C04B     		ldr	r3, .L46
 928 004e 0022     		movs	r2, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 25


 929 0050 1A70     		strb	r2, [r3]
 353:notoriOS.c    ****             return 0u;
 930              		.loc 1 353 0
 931 0052 0023     		movs	r3, #0
 932 0054 E2E1     		b	.L33
 933              	.L34:
 354:notoriOS.c    ****             }
 355:notoriOS.c    ****             
 356:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 934              		.loc 1 356 0
 935 0056 FFF7FEFF 		bl	modem_get_state
 936 005a 0346     		mov	r3, r0
 937 005c 042B     		cmp	r3, #4
 938 005e 40F0DC81 		bne	.L36
 939              	.LBB2:
 357:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Modem is ready.");
 940              		.loc 1 357 0
 941 0062 BC49     		ldr	r1, .L46+4
 942 0064 0020     		movs	r0, #0
 943 0066 FFF7FEFF 		bl	printNotif
 358:notoriOS.c    ****         
 359:notoriOS.c    ****         http_request[0] = '\0';
 944              		.loc 1 359 0
 945 006a BB4B     		ldr	r3, .L46+8
 946 006c 0022     		movs	r2, #0
 947 006e 1A70     		strb	r2, [r3]
 360:notoriOS.c    ****         http_body[0] = '\0';
 948              		.loc 1 360 0
 949 0070 BA4B     		ldr	r3, .L46+12
 950 0072 0022     		movs	r2, #0
 951 0074 1A70     		strb	r2, [r3]
 361:notoriOS.c    ****         http_route[0] = '\0';
 952              		.loc 1 361 0
 953 0076 BA4B     		ldr	r3, .L46+16
 954 0078 0022     		movs	r2, #0
 955 007a 1A70     		strb	r2, [r3]
 362:notoriOS.c    ****         //char *base = "write";
 363:notoriOS.c    ****         
 364:notoriOS.c    ****         // Push cell strength data (RSRP: reference signal received power)
 365:notoriOS.c    ****         char s_rsrp[DATA_MAX_KEY_LENGTH];
 366:notoriOS.c    ****         snprintf(s_rsrp,sizeof(s_rsrp),"%d",modem_stats.rsrp);
 956              		.loc 1 366 0
 957 007c B94B     		ldr	r3, .L46+20
 958 007e 5B69     		ldr	r3, [r3, #20]
 959 0080 07F5A260 		add	r0, r7, #1296
 960 0084 B84A     		ldr	r2, .L46+24
 961 0086 1421     		movs	r1, #20
 962 0088 FFF7FEFF 		bl	snprintf
 367:notoriOS.c    ****         pushData("rsrp", s_rsrp, getTimeStamp());
 963              		.loc 1 367 0
 964 008c FFF7FEFF 		bl	getTimeStamp
 965 0090 0246     		mov	r2, r0
 966 0092 07F5A263 		add	r3, r7, #1296
 967 0096 1946     		mov	r1, r3
 968 0098 B448     		ldr	r0, .L46+28
 969 009a FFF7FEFF 		bl	pushData
 368:notoriOS.c    ****         
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 26


 369:notoriOS.c    ****         // Push syncData try_counter to know how many tries it tried to connect
 370:notoriOS.c    ****         char c_try_counter[20];
 371:notoriOS.c    ****         snprintf(c_try_counter,sizeof(c_try_counter),"%d",try_counter);
 970              		.loc 1 371 0
 971 009e AC4B     		ldr	r3, .L46
 972 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 973 00a2 07F2FC40 		addw	r0, r7, #1276
 974 00a6 B04A     		ldr	r2, .L46+24
 975 00a8 1421     		movs	r1, #20
 976 00aa FFF7FEFF 		bl	snprintf
 372:notoriOS.c    ****         pushData("try_counter",c_try_counter,getTimeStamp());
 977              		.loc 1 372 0
 978 00ae FFF7FEFF 		bl	getTimeStamp
 979 00b2 0246     		mov	r2, r0
 980 00b4 07F2FC43 		addw	r3, r7, #1276
 981 00b8 1946     		mov	r1, r3
 982 00ba AD48     		ldr	r0, .L46+32
 983 00bc FFF7FEFF 		bl	pushData
 373:notoriOS.c    ****         
 374:notoriOS.c    ****         // Get size of the actual data stack count and push it to the stack
 375:notoriOS.c    ****         // If the buffer didn't overflow, then the data_count_sent is dataPointsInStack
 376:notoriOS.c    ****         // Otherwise, if the buffer overflows, then the data_count_sent is DATA_MAX_COUNT
 377:notoriOS.c    ****         if(buffer_overflow == false){
 984              		.loc 1 377 0
 985 00c0 AC4B     		ldr	r3, .L46+36
 986 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 987 00c4 83F00103 		eor	r3, r3, #1
 988 00c8 DBB2     		uxtb	r3, r3
 989 00ca 002B     		cmp	r3, #0
 990 00cc 16D0     		beq	.L37
 991              	.LBB3:
 378:notoriOS.c    ****             uint16 data_count_sent = sizeOfDataStack();
 992              		.loc 1 378 0
 993 00ce FFF7FEFF 		bl	sizeOfDataStack
 994 00d2 0346     		mov	r3, r0
 995 00d4 A7F83035 		strh	r3, [r7, #1328]	@ movhi
 379:notoriOS.c    ****             char c_data_count_sent[20];
 380:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",data_count_sent);
 996              		.loc 1 380 0
 997 00d8 B7F83035 		ldrh	r3, [r7, #1328]
 998 00dc 07F2D440 		addw	r0, r7, #1236
 999 00e0 A14A     		ldr	r2, .L46+24
 1000 00e2 1421     		movs	r1, #20
 1001 00e4 FFF7FEFF 		bl	snprintf
 381:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1002              		.loc 1 381 0
 1003 00e8 FFF7FEFF 		bl	getTimeStamp
 1004 00ec 0246     		mov	r2, r0
 1005 00ee 07F2D443 		addw	r3, r7, #1236
 1006 00f2 1946     		mov	r1, r3
 1007 00f4 A048     		ldr	r0, .L46+40
 1008 00f6 FFF7FEFF 		bl	pushData
 1009              	.LBE3:
 1010 00fa 0FE0     		b	.L38
 1011              	.L37:
 1012              	.LBB4:
 382:notoriOS.c    ****         }else{
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 27


 383:notoriOS.c    ****             char c_data_count_sent[20];
 384:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",DATA_MAX_VALUES);
 1013              		.loc 1 384 0
 1014 00fc 07F59860 		add	r0, r7, #1216
 1015 0100 9623     		movs	r3, #150
 1016 0102 994A     		ldr	r2, .L46+24
 1017 0104 1421     		movs	r1, #20
 1018 0106 FFF7FEFF 		bl	snprintf
 385:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1019              		.loc 1 385 0
 1020 010a FFF7FEFF 		bl	getTimeStamp
 1021 010e 0246     		mov	r2, r0
 1022 0110 07F59863 		add	r3, r7, #1216
 1023 0114 1946     		mov	r1, r3
 1024 0116 9848     		ldr	r0, .L46+40
 1025 0118 FFF7FEFF 		bl	pushData
 1026              	.L38:
 1027              	.LBE4:
 386:notoriOS.c    ****         }
 387:notoriOS.c    ****         
 388:notoriOS.c    ****         // Get size of the desired data stack count and push it to the stack
 389:notoriOS.c    ****         uint16 data_count_desired = sizeOfDataStackDesired();
 1028              		.loc 1 389 0
 1029 011c FFF7FEFF 		bl	sizeOfDataStackDesired
 1030 0120 0346     		mov	r3, r0
 1031 0122 A7F82E35 		strh	r3, [r7, #1326]	@ movhi
 390:notoriOS.c    ****         char c_data_count_desired[20];
 391:notoriOS.c    ****         // subtract 1 to disclude data_count_sent so that it focuses only on the actual data
 392:notoriOS.c    ****         snprintf(c_data_count_desired,sizeof(c_data_count_desired),"%d", data_count_desired-1);
 1032              		.loc 1 392 0
 1033 0126 B7F82E35 		ldrh	r3, [r7, #1326]
 1034 012a 013B     		subs	r3, r3, #1
 1035 012c 07F59D60 		add	r0, r7, #1256
 1036 0130 8D4A     		ldr	r2, .L46+24
 1037 0132 1421     		movs	r1, #20
 1038 0134 FFF7FEFF 		bl	snprintf
 393:notoriOS.c    ****         pushData("data_count_desired",c_data_count_desired,getTimeStamp());
 1039              		.loc 1 393 0
 1040 0138 FFF7FEFF 		bl	getTimeStamp
 1041 013c 0246     		mov	r2, r0
 1042 013e 07F59D63 		add	r3, r7, #1256
 1043 0142 1946     		mov	r1, r3
 1044 0144 8D48     		ldr	r0, .L46+44
 1045 0146 FFF7FEFF 		bl	pushData
 394:notoriOS.c    ****         
 395:notoriOS.c    ****         // Construct HTPP request
 396:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Begin HTTP post.");
 1046              		.loc 1 396 0
 1047 014a 8D49     		ldr	r1, .L46+48
 1048 014c 0020     		movs	r0, #0
 1049 014e FFF7FEFF 		bl	printNotif
 397:notoriOS.c    ****         
 398:notoriOS.c    ****         // Old influx API
 399:notoriOS.c    ****         // Construct_influx_route(http_route,base,system_settings.ep_user,system_settings.ep_pswd,s
 400:notoriOS.c    ****         construct_malcom_route(http_route,"api/v1/write",modem_info.imei,CURRENT_COMMIT);
 1050              		.loc 1 400 0
 1051 0152 8C4B     		ldr	r3, .L46+52
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 28


 1052 0154 8C4A     		ldr	r2, .L46+56
 1053 0156 8D49     		ldr	r1, .L46+60
 1054 0158 8148     		ldr	r0, .L46+16
 1055 015a FFF7FEFF 		bl	construct_malcom_route
 401:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"HTTP route: %s", http_route);
 1056              		.loc 1 401 0
 1057 015e 804A     		ldr	r2, .L46+16
 1058 0160 8B49     		ldr	r1, .L46+64
 1059 0162 0020     		movs	r0, #0
 1060 0164 FFF7FEFF 		bl	printNotif
 402:notoriOS.c    ****         
 403:notoriOS.c    ****         //OLD INFLUX API
 404:notoriOS.c    ****         //construct_influx_write_body(http_body,system_settings.node_id);
 405:notoriOS.c    ****         construct_malcom_body(http_body);
 1061              		.loc 1 405 0
 1062 0168 7C48     		ldr	r0, .L46+12
 1063 016a FFF7FEFF 		bl	construct_malcom_body
 406:notoriOS.c    ****         construct_generic_HTTP_request(http_request,http_body,system_settings.ep_host,http_route,sy
 1064              		.loc 1 406 0
 1065 016e 894B     		ldr	r3, .L46+68
 1066 0170 5B6E     		ldr	r3, [r3, #100]
 1067 0172 894A     		ldr	r2, .L46+72
 1068 0174 0592     		str	r2, [sp, #20]
 1069 0176 0022     		movs	r2, #0
 1070 0178 0492     		str	r2, [sp, #16]
 1071 017a 884A     		ldr	r2, .L46+76
 1072 017c 0392     		str	r2, [sp, #12]
 1073 017e 884A     		ldr	r2, .L46+80
 1074 0180 0292     		str	r2, [sp, #8]
 1075 0182 884A     		ldr	r2, .L46+84
 1076 0184 0192     		str	r2, [sp, #4]
 1077 0186 0093     		str	r3, [sp]
 1078 0188 754B     		ldr	r3, .L46+16
 1079 018a 824A     		ldr	r2, .L46+68
 1080 018c 7349     		ldr	r1, .L46+12
 1081 018e 7248     		ldr	r0, .L46+8
 1082 0190 FFF7FEFF 		bl	construct_generic_HTTP_request
 407:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1083              		.loc 1 407 0
 1084 0194 704A     		ldr	r2, .L46+8
 1085 0196 8449     		ldr	r1, .L46+88
 1086 0198 0020     		movs	r0, #0
 1087 019a FFF7FEFF 		bl	printNotif
 408:notoriOS.c    ****         
 409:notoriOS.c    ****         // Push request to modem and escape with <ctrl+z> escape sequence
 410:notoriOS.c    ****         // Open port and begin command line sequence
 411:notoriOS.c    ****         char portConfig[200];
 412:notoriOS.c    ****         uint8 status = 0u;
 1088              		.loc 1 412 0
 1089 019e 0023     		movs	r3, #0
 1090 01a0 87F82D35 		strb	r3, [r7, #1325]
 413:notoriOS.c    ****         
 414:notoriOS.c    ****         snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",system_settings.ep_por
 1091              		.loc 1 414 0
 1092 01a4 7B4B     		ldr	r3, .L46+68
 1093 01a6 5A6E     		ldr	r2, [r3, #100]
 1094 01a8 3846     		mov	r0, r7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 29


 1095 01aa 7A4B     		ldr	r3, .L46+68
 1096 01ac 0093     		str	r3, [sp]
 1097 01ae 1346     		mov	r3, r2
 1098 01b0 7E4A     		ldr	r2, .L46+92
 1099 01b2 C821     		movs	r1, #200
 1100 01b4 FFF7FEFF 		bl	snprintf
 415:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1101              		.loc 1 415 0
 1102 01b8 3B46     		mov	r3, r7
 1103 01ba 1A46     		mov	r2, r3
 1104 01bc 7C49     		ldr	r1, .L46+96
 1105 01be 0020     		movs	r0, #0
 1106 01c0 FFF7FEFF 		bl	printNotif
 416:notoriOS.c    ****         status = at_write_command(portConfig,"OK",10000u);
 1107              		.loc 1 416 0
 1108 01c4 3B46     		mov	r3, r7
 1109 01c6 42F21072 		movw	r2, #10000
 1110 01ca 7A49     		ldr	r1, .L46+100
 1111 01cc 1846     		mov	r0, r3
 1112 01ce FFF7FEFF 		bl	at_write_command
 1113 01d2 0346     		mov	r3, r0
 1114 01d4 87F82D35 		strb	r3, [r7, #1325]
 417:notoriOS.c    ****         
 418:notoriOS.c    ****         // create character pointer to chunk through the http_request
 419:notoriOS.c    ****         char *chunk;
 420:notoriOS.c    ****         // Set chunk to start where http_request starts
 421:notoriOS.c    ****         chunk = http_request;
 1115              		.loc 1 421 0
 1116 01d8 5F4B     		ldr	r3, .L46+8
 1117 01da C7F83435 		str	r3, [r7, #1332]
 422:notoriOS.c    ****         // variable for the number of packets to send
 423:notoriOS.c    ****         int8 packets;
 424:notoriOS.c    ****         packets = ceil(nextafter((strlen(http_request)/MAX_BYTES_SENT),MAX_BYTES_SENT));
 1118              		.loc 1 424 0
 1119 01de 5E48     		ldr	r0, .L46+8
 1120 01e0 FFF7FEFF 		bl	strlen
 1121 01e4 0246     		mov	r2, r0
 1122 01e6 744B     		ldr	r3, .L46+104
 1123 01e8 A3FB0223 		umull	r2, r3, r3, r2
 1124 01ec 5B09     		lsrs	r3, r3, #5
 1125 01ee 1846     		mov	r0, r3
 1126 01f0 FFF7FEFF 		bl	__aeabi_ui2d
 1127 01f4 4FF00002 		mov	r2, #0
 1128 01f8 704B     		ldr	r3, .L46+108
 1129 01fa FFF7FEFF 		bl	nextafter
 1130 01fe 0346     		mov	r3, r0
 1131 0200 0C46     		mov	r4, r1
 1132 0202 1846     		mov	r0, r3
 1133 0204 2146     		mov	r1, r4
 1134 0206 FFF7FEFF 		bl	ceil
 1135 020a 0346     		mov	r3, r0
 1136 020c 0C46     		mov	r4, r1
 1137 020e 1846     		mov	r0, r3
 1138 0210 2146     		mov	r1, r4
 1139 0212 FFF7FEFF 		bl	__aeabi_d2iz
 1140 0216 0346     		mov	r3, r0
 1141 0218 87F82C35 		strb	r3, [r7, #1324]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 30


 425:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "http_request len: %d", strlen(http_request));
 1142              		.loc 1 425 0
 1143 021c 4E48     		ldr	r0, .L46+8
 1144 021e FFF7FEFF 		bl	strlen
 1145 0222 0346     		mov	r3, r0
 1146 0224 1A46     		mov	r2, r3
 1147 0226 6649     		ldr	r1, .L46+112
 1148 0228 0020     		movs	r0, #0
 1149 022a FFF7FEFF 		bl	printNotif
 426:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "# of packets: %d", packets);
 1150              		.loc 1 426 0
 1151 022e 97F92C35 		ldrsb	r3, [r7, #1324]
 1152 0232 1A46     		mov	r2, r3
 1153 0234 6349     		ldr	r1, .L46+116
 1154 0236 0020     		movs	r0, #0
 1155 0238 FFF7FEFF 		bl	printNotif
 1156              	.LBB5:
 427:notoriOS.c    ****         // while the size of the chunk of the data we are sending to the server is smaller than the
 428:notoriOS.c    ****         for(int8 packet = 0; packet < packets; packet++){
 1157              		.loc 1 428 0
 1158 023c 0023     		movs	r3, #0
 1159 023e 87F83335 		strb	r3, [r7, #1331]
 1160 0242 53E0     		b	.L39
 1161              	.L42:
 1162              	.LBB6:
 429:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 430:notoriOS.c    ****             char http_chunk[1001];
 431:notoriOS.c    ****             // AT command #SSEND= is an execution command that permits, while the module is in comm
 432:notoriOS.c    ****             // To complete the operation, send Ctrl-Z char to exit
 433:notoriOS.c    ****             status = at_write_command("AT#SSEND=1\r\n", ">", 1000u);
 1163              		.loc 1 433 0
 1164 0244 4FF47A72 		mov	r2, #1000
 1165 0248 5F49     		ldr	r1, .L46+120
 1166 024a 6048     		ldr	r0, .L46+124
 1167 024c FFF7FEFF 		bl	at_write_command
 1168 0250 0346     		mov	r3, r0
 1169 0252 87F82D35 		strb	r3, [r7, #1325]
 434:notoriOS.c    ****             // Print the first 1000 characters of http_request into http_chunk
 435:notoriOS.c    ****             snprintf(http_chunk, MAX_BYTES_SENT, "%s",chunk);
 1170              		.loc 1 435 0
 1171 0256 07F1C800 		add	r0, r7, #200
 1172 025a D7F83435 		ldr	r3, [r7, #1332]
 1173 025e 544A     		ldr	r2, .L46+96
 1174 0260 4FF4FA71 		mov	r1, #500
 1175 0264 FFF7FEFF 		bl	snprintf
 436:notoriOS.c    ****             // Append 1 character "<ctrl+z> escape sequence" to http_request to exit modem command 
 437:notoriOS.c    ****             strncat(http_chunk, "\032", 1); 
 1176              		.loc 1 437 0
 1177 0268 07F1C803 		add	r3, r7, #200
 1178 026c 1846     		mov	r0, r3
 1179 026e FFF7FEFF 		bl	strlen
 1180 0272 0346     		mov	r3, r0
 1181 0274 1A46     		mov	r2, r3
 1182 0276 07F1C803 		add	r3, r7, #200
 1183 027a 1344     		add	r3, r3, r2
 1184 027c 5449     		ldr	r1, .L46+128
 1185 027e 1A46     		mov	r2, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 31


 1186 0280 0B46     		mov	r3, r1
 1187 0282 1B88     		ldrh	r3, [r3]	@ unaligned
 1188 0284 1380     		strh	r3, [r2]	@ unaligned
 438:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"chunk %d: %s", packet, http_chunk);
 1189              		.loc 1 438 0
 1190 0286 97F93325 		ldrsb	r2, [r7, #1331]
 1191 028a 07F1C803 		add	r3, r7, #200
 1192 028e 5149     		ldr	r1, .L46+132
 1193 0290 0020     		movs	r0, #0
 1194 0292 FFF7FEFF 		bl	printNotif
 439:notoriOS.c    ****             // Send data to server
 440:notoriOS.c    ****             if ((packet+1) != packets){
 1195              		.loc 1 440 0
 1196 0296 97F93335 		ldrsb	r3, [r7, #1331]
 1197 029a 5A1C     		adds	r2, r3, #1
 1198 029c 97F92C35 		ldrsb	r3, [r7, #1324]
 1199 02a0 9A42     		cmp	r2, r3
 1200 02a2 11D0     		beq	.L40
 441:notoriOS.c    ****                 status = at_write_command(http_chunk, "OK", 5000u);
 1201              		.loc 1 441 0
 1202 02a4 07F1C803 		add	r3, r7, #200
 1203 02a8 41F28832 		movw	r2, #5000
 1204 02ac 4149     		ldr	r1, .L46+100
 1205 02ae 1846     		mov	r0, r3
 1206 02b0 FFF7FEFF 		bl	at_write_command
 1207 02b4 0346     		mov	r3, r0
 1208 02b6 87F82D35 		strb	r3, [r7, #1325]
 442:notoriOS.c    ****                 // Move the pointer forward 
 443:notoriOS.c    ****                 chunk = chunk + MAX_BYTES_SENT - 1;
 1209              		.loc 1 443 0
 1210 02ba D7F83435 		ldr	r3, [r7, #1332]
 1211 02be 03F2F313 		addw	r3, r3, #499
 1212 02c2 C7F83435 		str	r3, [r7, #1332]
 1213 02c6 0AE0     		b	.L41
 1214              	.L40:
 444:notoriOS.c    ****             }else{
 445:notoriOS.c    ****                 status = at_write_command(http_chunk, "SRING", 5000u);
 1215              		.loc 1 445 0
 1216 02c8 07F1C803 		add	r3, r7, #200
 1217 02cc 41F28832 		movw	r2, #5000
 1218 02d0 4149     		ldr	r1, .L46+136
 1219 02d2 1846     		mov	r0, r3
 1220 02d4 FFF7FEFF 		bl	at_write_command
 1221 02d8 0346     		mov	r3, r0
 1222 02da 87F82D35 		strb	r3, [r7, #1325]
 1223              	.L41:
 1224              	.LBE6:
 428:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1225              		.loc 1 428 0 discriminator 2
 1226 02de 97F93335 		ldrsb	r3, [r7, #1331]
 1227 02e2 DBB2     		uxtb	r3, r3
 1228 02e4 0133     		adds	r3, r3, #1
 1229 02e6 DBB2     		uxtb	r3, r3
 1230 02e8 87F83335 		strb	r3, [r7, #1331]
 1231              	.L39:
 428:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1232              		.loc 1 428 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 32


 1233 02ec 97F93325 		ldrsb	r2, [r7, #1331]
 1234 02f0 97F92C35 		ldrsb	r3, [r7, #1324]
 1235 02f4 9A42     		cmp	r2, r3
 1236 02f6 A5DB     		blt	.L42
 1237              	.LBE5:
 446:notoriOS.c    ****             }
 447:notoriOS.c    ****             
 448:notoriOS.c    ****         }
 449:notoriOS.c    ****         
 450:notoriOS.c    ****         // Read received buffer
 451:notoriOS.c    ****         // A good write will return code "OS-OK"
 452:notoriOS.c    ****         // AT command #SRECV= is an execution command that permits users to read data arrived throu
 453:notoriOS.c    ****         // = 1 means the UPD information is enabled: data are read just until the end of the UDP da
 454:notoriOS.c    ****         status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 1238              		.loc 1 454 0 is_stmt 1
 1239 02f8 41F28832 		movw	r2, #5000
 1240 02fc 3749     		ldr	r1, .L46+140
 1241 02fe 3848     		ldr	r0, .L46+144
 1242 0300 FFF7FEFF 		bl	at_write_command
 1243 0304 0346     		mov	r3, r0
 1244 0306 87F82D35 		strb	r3, [r7, #1325]
 455:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Received SRECV: %s",uart_received_string);
 456:notoriOS.c    ****     
 457:notoriOS.c    ****   
 458:notoriOS.c    ****         // If it worked, clear the queue and clock how long the end-to-end tx took
 459:notoriOS.c    ****         if(status == 1u){
 1245              		.loc 1 459 0
 1246 030a 97F82D35 		ldrb	r3, [r7, #1325]	@ zero_extendqisi2
 1247 030e 012B     		cmp	r3, #1
 1248 0310 6CD1     		bne	.L43
 1249              	.LBB7:
 460:notoriOS.c    ****             get_updated_parameters_from_malcom();
 1250              		.loc 1 460 0
 1251 0312 FFF7FEFF 		bl	get_updated_parameters_from_malcom
 461:notoriOS.c    ****             Clear_Data_Stack();
 1252              		.loc 1 461 0
 1253 0316 FFF7FEFF 		bl	Clear_Data_Stack
 462:notoriOS.c    ****             int send_time = (int)(getTimeStamp()-(int32)modem_start_time_stamp);
 1254              		.loc 1 462 0
 1255 031a FFF7FEFF 		bl	getTimeStamp
 1256 031e 0246     		mov	r2, r0
 1257 0320 304B     		ldr	r3, .L46+148
 1258 0322 1B68     		ldr	r3, [r3]
 1259 0324 D31A     		subs	r3, r2, r3
 1260 0326 C7F82835 		str	r3, [r7, #1320]
 463:notoriOS.c    ****             char s_send_time[10];
 464:notoriOS.c    ****             snprintf(s_send_time,sizeof(s_send_time),"%d",send_time);
 1261              		.loc 1 464 0
 1262 032a 07F2B440 		addw	r0, r7, #1204
 1263 032e D7F82835 		ldr	r3, [r7, #1320]
 1264 0332 0D4A     		ldr	r2, .L46+24
 1265 0334 0A21     		movs	r1, #10
 1266 0336 FFF7FEFF 		bl	snprintf
 465:notoriOS.c    ****             pushData("modem_tx_time",s_send_time,getTimeStamp());
 1267              		.loc 1 465 0
 1268 033a FFF7FEFF 		bl	getTimeStamp
 1269 033e 0246     		mov	r2, r0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 33


 1270 0340 07F2B443 		addw	r3, r7, #1204
 1271 0344 1946     		mov	r1, r3
 1272 0346 2848     		ldr	r0, .L46+152
 1273 0348 FFF7FEFF 		bl	pushData
 1274              	.LBE7:
 1275 034c 52E0     		b	.L44
 1276              	.L47:
 1277 034e 00BF     		.align	2
 1278              	.L46:
 1279 0350 00000000 		.word	try_counter
 1280 0354 C0000000 		.word	.LC7
 1281 0358 00000000 		.word	http_request
 1282 035c 00000000 		.word	http_body
 1283 0360 00000000 		.word	http_route
 1284 0364 00000000 		.word	modem_stats
 1285 0368 3C000000 		.word	.LC2
 1286 036c D0000000 		.word	.LC8
 1287 0370 D8000000 		.word	.LC9
 1288 0374 00000000 		.word	buffer_overflow
 1289 0378 E4000000 		.word	.LC10
 1290 037c F4000000 		.word	.LC11
 1291 0380 08010000 		.word	.LC12
 1292 0384 1C010000 		.word	.LC13
 1293 0388 28000000 		.word	modem_info+40
 1294 038c 48010000 		.word	.LC14
 1295 0390 58010000 		.word	.LC15
 1296 0394 00000000 		.word	system_settings
 1297 0398 68010000 		.word	.LC16
 1298 039c 6C010000 		.word	.LC17
 1299 03a0 70010000 		.word	.LC18
 1300 03a4 78010000 		.word	.LC19
 1301 03a8 80010000 		.word	.LC20
 1302 03ac 98010000 		.word	.LC21
 1303 03b0 B4010000 		.word	.LC22
 1304 03b4 B8010000 		.word	.LC23
 1305 03b8 D34D6210 		.word	274877907
 1306 03bc 00407F40 		.word	1082081280
 1307 03c0 BC010000 		.word	.LC24
 1308 03c4 D4010000 		.word	.LC25
 1309 03c8 E8010000 		.word	.LC26
 1310 03cc EC010000 		.word	.LC27
 1311 03d0 FC010000 		.word	.LC28
 1312 03d4 00020000 		.word	.LC29
 1313 03d8 10020000 		.word	.LC30
 1314 03dc 18020000 		.word	.LC31
 1315 03e0 20020000 		.word	.LC32
 1316 03e4 00000000 		.word	modem_start_time_stamp
 1317 03e8 34020000 		.word	.LC33
 1318              	.L43:
 466:notoriOS.c    ****         }else{
 467:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR, "OS-NO: Could not receive data from server.");
 1319              		.loc 1 467 0
 1320 03ec 0E49     		ldr	r1, .L48
 1321 03ee 0220     		movs	r0, #2
 1322 03f0 FFF7FEFF 		bl	printNotif
 1323              	.L44:
 468:notoriOS.c    ****         }
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 34


 469:notoriOS.c    ****          
 470:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 471:notoriOS.c    ****         long network_time = modem_get_network_time();
 1324              		.loc 1 471 0
 1325 03f4 FFF7FEFF 		bl	modem_get_network_time
 1326 03f8 C7F82405 		str	r0, [r7, #1316]
 472:notoriOS.c    ****         if(network_time != 0){
 1327              		.loc 1 472 0
 1328 03fc D7F82435 		ldr	r3, [r7, #1316]
 1329 0400 002B     		cmp	r3, #0
 1330 0402 03D0     		beq	.L45
 473:notoriOS.c    ****            setTime(network_time);
 1331              		.loc 1 473 0
 1332 0404 D7F82405 		ldr	r0, [r7, #1316]
 1333 0408 FFF7FEFF 		bl	setTime
 1334              	.L45:
 474:notoriOS.c    ****         }
 475:notoriOS.c    ****         
 476:notoriOS.c    ****         // If transmitted, flush the data stack and shut down modem
 477:notoriOS.c    ****         // If not -- keep the statck and try next time
 478:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 479:notoriOS.c    ****         modem_power_down();
 1335              		.loc 1 479 0
 1336 040c FFF7FEFF 		bl	modem_power_down
 480:notoriOS.c    ****         
 481:notoriOS.c    ****         try_counter = 0u;
 1337              		.loc 1 481 0
 1338 0410 064B     		ldr	r3, .L48+4
 1339 0412 0022     		movs	r2, #0
 1340 0414 1A70     		strb	r2, [r3]
 482:notoriOS.c    ****         return 0u;
 1341              		.loc 1 482 0
 1342 0416 0023     		movs	r3, #0
 1343 0418 00E0     		b	.L33
 1344              	.L36:
 1345              	.LBE2:
 483:notoriOS.c    ****     }
 484:notoriOS.c    ****       
 485:notoriOS.c    ****       return 1u; // Not done yet
 1346              		.loc 1 485 0
 1347 041a 0123     		movs	r3, #1
 1348              	.L33:
 486:notoriOS.c    **** }
 1349              		.loc 1 486 0 discriminator 1
 1350 041c 1846     		mov	r0, r3
 1351 041e 07F23C57 		addw	r7, r7, #1340
 1352              		.cfi_def_cfa_offset 12
 1353 0422 BD46     		mov	sp, r7
 1354              		.cfi_def_cfa_register 13
 1355              		@ sp needed
 1356 0424 90BD     		pop	{r4, r7, pc}
 1357              	.L49:
 1358 0426 00BF     		.align	2
 1359              	.L48:
 1360 0428 44020000 		.word	.LC34
 1361 042c 00000000 		.word	try_counter
 1362              		.cfi_endproc
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 35


 1363              	.LFE74:
 1364              		.size	syncData, .-syncData
 1365              		.section	.text.configureRemoteParams,"ax",%progbits
 1366              		.align	2
 1367              		.global	configureRemoteParams
 1368              		.thumb
 1369              		.thumb_func
 1370              		.type	configureRemoteParams, %function
 1371              	configureRemoteParams:
 1372              	.LFB75:
 487:notoriOS.c    **** 
 488:notoriOS.c    **** // ==============================================
 489:notoriOS.c    **** // Syncs with cell-tower clock and check meta-DB
 490:notoriOS.c    **** // Returns 0 when done
 491:notoriOS.c    **** // ==============================================
 492:notoriOS.c    **** uint8 configureRemoteParams(){
 1373              		.loc 1 492 0
 1374              		.cfi_startproc
 1375              		@ args = 0, pretend = 0, frame = 8
 1376              		@ frame_needed = 1, uses_anonymous_args = 0
 1377 0000 80B5     		push	{r7, lr}
 1378              		.cfi_def_cfa_offset 8
 1379              		.cfi_offset 7, -8
 1380              		.cfi_offset 14, -4
 1381 0002 82B0     		sub	sp, sp, #8
 1382              		.cfi_def_cfa_offset 16
 1383 0004 00AF     		add	r7, sp, #0
 1384              		.cfi_def_cfa_register 7
 493:notoriOS.c    ****     
 494:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1385              		.loc 1 494 0
 1386 0006 FFF7FEFF 		bl	modem_get_state
 1387 000a 0346     		mov	r3, r0
 1388 000c 002B     		cmp	r3, #0
 1389 000e 02D1     		bne	.L51
 495:notoriOS.c    ****         // This puts all the modem points into a state that won't leak power    
 496:notoriOS.c    ****         modem_power_up();
 1390              		.loc 1 496 0
 1391 0010 FFF7FEFF 		bl	modem_power_up
 1392 0014 11E0     		b	.L52
 1393              	.L51:
 497:notoriOS.c    ****             
 498:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1394              		.loc 1 498 0
 1395 0016 FFF7FEFF 		bl	modem_get_state
 1396 001a 0346     		mov	r3, r0
 1397 001c 042B     		cmp	r3, #4
 1398 001e 0CD1     		bne	.L52
 1399              	.LBB8:
 499:notoriOS.c    ****         
 500:notoriOS.c    ****         // This is where we will interfasce with some sort of broker that assings node IDs
 501:notoriOS.c    ****         
 502:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 503:notoriOS.c    ****         long network_time = modem_get_network_time();
 1400              		.loc 1 503 0
 1401 0020 FFF7FEFF 		bl	modem_get_network_time
 1402 0024 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 36


 504:notoriOS.c    ****         if(network_time != 0){
 1403              		.loc 1 504 0
 1404 0026 7B68     		ldr	r3, [r7, #4]
 1405 0028 002B     		cmp	r3, #0
 1406 002a 02D0     		beq	.L53
 505:notoriOS.c    ****             setTime(network_time);
 1407              		.loc 1 505 0
 1408 002c 7868     		ldr	r0, [r7, #4]
 1409 002e FFF7FEFF 		bl	setTime
 1410              	.L53:
 506:notoriOS.c    ****         }
 507:notoriOS.c    ****         
 508:notoriOS.c    ****         // Get GPS coordinates
 509:notoriOS.c    ****         //gps_t gps = modem_get_gps_coordinates();
 510:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 511:notoriOS.c    ****         modem_power_down();
 1411              		.loc 1 511 0
 1412 0032 FFF7FEFF 		bl	modem_power_down
 512:notoriOS.c    ****         return 0u;
 1413              		.loc 1 512 0
 1414 0036 0023     		movs	r3, #0
 1415 0038 00E0     		b	.L54
 1416              	.L52:
 1417              	.LBE8:
 513:notoriOS.c    ****         
 514:notoriOS.c    ****     }
 515:notoriOS.c    ****     
 516:notoriOS.c    ****     return 1u;
 1418              		.loc 1 516 0
 1419 003a 0123     		movs	r3, #1
 1420              	.L54:
 517:notoriOS.c    **** }
 1421              		.loc 1 517 0
 1422 003c 1846     		mov	r0, r3
 1423 003e 0837     		adds	r7, r7, #8
 1424              		.cfi_def_cfa_offset 8
 1425 0040 BD46     		mov	sp, r7
 1426              		.cfi_def_cfa_register 13
 1427              		@ sp needed
 1428 0042 80BD     		pop	{r7, pc}
 1429              		.cfi_endproc
 1430              	.LFE75:
 1431              		.size	configureRemoteParams, .-configureRemoteParams
 1432              		.section	.rodata
 1433 026f 00       		.align	2
 1434              	.LC35:
 1435 0270 256C6400 		.ascii	"%ld\000"
 1436              		.align	2
 1437              	.LC36:
 1438 0274 6D617862 		.ascii	"maxbotix_depth=%s\000"
 1438      6F746978 
 1438      5F646570 
 1438      74683D25 
 1438      7300
 1439 0286 0000     		.align	2
 1440              	.LC37:
 1441 0288 6D617862 		.ascii	"maxbotix_depth\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 37


 1441      6F746978 
 1441      5F646570 
 1441      746800
 1442 0297 00       		.align	2
 1443              	.LC38:
 1444 0298 612B00   		.ascii	"a+\000"
 1445 029b 00       		.align	2
 1446              	.LC39:
 1447 029c 206D6178 		.ascii	" maxbotix_depth: \000"
 1447      626F7469 
 1447      785F6465 
 1447      7074683A 
 1447      2000
 1448 02ae 0000     		.align	2
 1449              	.LC40:
 1450 02b0 2000     		.ascii	" \000"
 1451 02b2 0000     		.align	2
 1452              	.LC41:
 1453 02b4 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 1453      64206E6F 
 1453      74206765 
 1453      74207661 
 1453      6C696420 
 1454              		.global	__aeabi_f2d
 1455              		.align	2
 1456              	.LC42:
 1457 02e0 256600   		.ascii	"%f\000"
 1458 02e3 00       		.align	2
 1459              	.LC43:
 1460 02e4 736F6E74 		.ascii	"sontek_depth=%s\000"
 1460      656B5F64 
 1460      65707468 
 1460      3D257300 
 1461              		.align	2
 1462              	.LC44:
 1463 02f4 736F6E74 		.ascii	"sontek_depth\000"
 1463      656B5F64 
 1463      65707468 
 1463      00
 1464 0301 000000   		.align	2
 1465              	.LC45:
 1466 0304 20736F6E 		.ascii	" sontek_depth: \000"
 1466      74656B5F 
 1466      64657074 
 1466      683A2000 
 1467              		.align	2
 1468              	.LC46:
 1469 0314 436F756C 		.ascii	"Could not get valid readings from Sontek.\000"
 1469      64206E6F 
 1469      74206765 
 1469      74207661 
 1469      6C696420 
 1470 033e 0000     		.align	2
 1471              	.LC47:
 1472 0340 252E3266 		.ascii	"%.2f\000"
 1472      00
 1473 0345 000000   		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 38


 1474              	.LC48:
 1475 0348 765F6261 		.ascii	"v_bat=%s\000"
 1475      743D2573 
 1475      00
 1476 0351 000000   		.align	2
 1477              	.LC49:
 1478 0354 765F6261 		.ascii	"v_bat\000"
 1478      7400
 1479 035a 0000     		.align	2
 1480              	.LC50:
 1481 035c 20766261 		.ascii	" vbat: \000"
 1481      743A2000 
 1482              		.align	2
 1483              	.LC51:
 1484 0364 70726573 		.ascii	"pressure_current=%s\000"
 1484      73757265 
 1484      5F637572 
 1484      72656E74 
 1484      3D257300 
 1485              		.align	2
 1486              	.LC52:
 1487 0378 70726573 		.ascii	"pressure_current\000"
 1487      73757265 
 1487      5F637572 
 1487      72656E74 
 1487      00
 1488 0389 000000   		.align	2
 1489              	.LC53:
 1490 038c 20707265 		.ascii	" pressure_current: \000"
 1490      73737572 
 1490      655F6375 
 1490      7272656E 
 1490      743A2000 
 1491              		.align	2
 1492              	.LC54:
 1493 03a0 70726573 		.ascii	"pressure_depth=%s\000"
 1493      73757265 
 1493      5F646570 
 1493      74683D25 
 1493      7300
 1494 03b2 0000     		.align	2
 1495              	.LC55:
 1496 03b4 70726573 		.ascii	"pressure_depth\000"
 1496      73757265 
 1496      5F646570 
 1496      746800
 1497 03c3 00       		.align	2
 1498              	.LC56:
 1499 03c4 20707265 		.ascii	" pressure_depth: \000"
 1499      73737572 
 1499      655F6465 
 1499      7074683A 
 1499      2000
 1500 03d6 0000     		.align	2
 1501              	.LC57:
 1502 03d8 436F756C 		.ascii	"Could not get valid readings from ADC.\000"
 1502      64206E6F 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 39


 1502      74206765 
 1502      74207661 
 1502      6C696420 
 1503              		.section	.text.makeMeasurements,"ax",%progbits
 1504              		.align	2
 1505              		.global	makeMeasurements
 1506              		.thumb
 1507              		.thumb_func
 1508              		.type	makeMeasurements, %function
 1509              	makeMeasurements:
 1510              	.LFB76:
 518:notoriOS.c    **** 
 519:notoriOS.c    **** 
 520:notoriOS.c    **** // ==============================================
 521:notoriOS.c    **** // Make sensor measurements, which will be handeled by another cutions
 522:notoriOS.c    **** // Returns 0 when finished
 523:notoriOS.c    **** // ==============================================
 524:notoriOS.c    **** uint8 makeMeasurements(){
 1511              		.loc 1 524 0
 1512              		.cfi_startproc
 1513              		@ args = 0, pretend = 0, frame = 128
 1514              		@ frame_needed = 1, uses_anonymous_args = 0
 1515 0000 90B5     		push	{r4, r7, lr}
 1516              		.cfi_def_cfa_offset 12
 1517              		.cfi_offset 4, -12
 1518              		.cfi_offset 7, -8
 1519              		.cfi_offset 14, -4
 1520 0002 A3B0     		sub	sp, sp, #140
 1521              		.cfi_def_cfa_offset 152
 1522 0004 02AF     		add	r7, sp, #8
 1523              		.cfi_def_cfa 7, 144
 525:notoriOS.c    ****     
 526:notoriOS.c    ****     // Get clock time and save to timeStamp
 527:notoriOS.c    ****     long timeStamp = getTimeStamp();
 1524              		.loc 1 527 0
 1525 0006 FFF7FEFF 		bl	getTimeStamp
 1526 000a F867     		str	r0, [r7, #124]
 528:notoriOS.c    ****     char c_timeStamp[32];
 529:notoriOS.c    ****     snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 1527              		.loc 1 529 0
 1528 000c 07F15C00 		add	r0, r7, #92
 1529 0010 FB6F     		ldr	r3, [r7, #124]
 1530 0012 A64A     		ldr	r2, .L66
 1531 0014 2021     		movs	r1, #32
 1532 0016 FFF7FEFF 		bl	snprintf
 530:notoriOS.c    ****     
 531:notoriOS.c    ****     // Holds string for value that will be written 
 532:notoriOS.c    ****     char value[DATA_MAX_KEY_LENGTH];
 533:notoriOS.c    ****     
 534:notoriOS.c    ****     // If node type is depth node, take level sensor measurements
 535:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_DEPTH){
 1533              		.loc 1 535 0
 1534 001a A54B     		ldr	r3, .L66+4
 1535 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1536 001e 002B     		cmp	r3, #0
 1537 0020 3CD1     		bne	.L56
 1538              	.LBB9:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 40


 536:notoriOS.c    ****         
 537:notoriOS.c    ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
 538:notoriOS.c    ****         level_sensor_t m_level_sensor;
 539:notoriOS.c    ****         
 540:notoriOS.c    ****         // Take level sensor readings and save them to m_level_sensor
 541:notoriOS.c    ****         m_level_sensor = level_sensor_take_reading();
 1539              		.loc 1 541 0
 1540 0022 07F11803 		add	r3, r7, #24
 1541 0026 1846     		mov	r0, r3
 1542 0028 FFF7FEFF 		bl	level_sensor_take_reading
 542:notoriOS.c    ****     
 543:notoriOS.c    ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
 544:notoriOS.c    ****         if(m_level_sensor.num_valid_readings > 0){
 1543              		.loc 1 544 0
 1544 002c 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 1545 0030 002B     		cmp	r3, #0
 1546 0032 2ED0     		beq	.L57
 545:notoriOS.c    ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 1547              		.loc 1 545 0
 1548 0034 B7F92E30 		ldrsh	r3, [r7, #46]
 1549 0038 07F14800 		add	r0, r7, #72
 1550 003c 9D4A     		ldr	r2, .L66+8
 1551 003e 1421     		movs	r1, #20
 1552 0040 FFF7FEFF 		bl	snprintf
 546:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 1553              		.loc 1 546 0
 1554 0044 07F14803 		add	r3, r7, #72
 1555 0048 1A46     		mov	r2, r3
 1556 004a 9B49     		ldr	r1, .L66+12
 1557 004c 0020     		movs	r0, #0
 1558 004e FFF7FEFF 		bl	printNotif
 547:notoriOS.c    ****             pushData("maxbotix_depth",value,timeStamp);
 1559              		.loc 1 547 0
 1560 0052 07F14803 		add	r3, r7, #72
 1561 0056 FA6F     		ldr	r2, [r7, #124]
 1562 0058 1946     		mov	r1, r3
 1563 005a 9848     		ldr	r0, .L66+16
 1564 005c FFF7FEFF 		bl	pushData
 548:notoriOS.c    ****             
 549:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 550:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1565              		.loc 1 550 0
 1566 0060 07F15C03 		add	r3, r7, #92
 1567 0064 1A46     		mov	r2, r3
 1568 0066 9649     		ldr	r1, .L66+20
 1569 0068 9648     		ldr	r0, .L66+24
 1570 006a FFF7FEFF 		bl	SD_write
 551:notoriOS.c    ****             SD_write(Data_fileName, "a+", " maxbotix_depth: ");
 1571              		.loc 1 551 0
 1572 006e 964A     		ldr	r2, .L66+28
 1573 0070 9349     		ldr	r1, .L66+20
 1574 0072 9448     		ldr	r0, .L66+24
 1575 0074 FFF7FEFF 		bl	SD_write
 552:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1576              		.loc 1 552 0
 1577 0078 07F14803 		add	r3, r7, #72
 1578 007c 1A46     		mov	r2, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 41


 1579 007e 9049     		ldr	r1, .L66+20
 1580 0080 9048     		ldr	r0, .L66+24
 1581 0082 FFF7FEFF 		bl	SD_write
 553:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1582              		.loc 1 553 0
 1583 0086 914A     		ldr	r2, .L66+32
 1584 0088 8D49     		ldr	r1, .L66+20
 1585 008a 8E48     		ldr	r0, .L66+24
 1586 008c FFF7FEFF 		bl	SD_write
 1587 0090 49E0     		b	.L59
 1588              	.L57:
 554:notoriOS.c    ****         }else{
 555:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 1589              		.loc 1 555 0
 1590 0092 8F49     		ldr	r1, .L66+36
 1591 0094 0220     		movs	r0, #2
 1592 0096 FFF7FEFF 		bl	printNotif
 1593 009a 44E0     		b	.L59
 1594              	.L56:
 1595              	.LBE9:
 556:notoriOS.c    ****             //pushData("maxbotix_depth","error",timeStamp);
 557:notoriOS.c    ****         }
 558:notoriOS.c    ****     }else if(updatable_parameters.node_type == NODE_TYPE_SONTEK_FLOW){
 1596              		.loc 1 558 0
 1597 009c 844B     		ldr	r3, .L66+4
 1598 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1599 00a0 022B     		cmp	r3, #2
 1600 00a2 40D1     		bne	.L59
 1601              	.LBB10:
 559:notoriOS.c    ****         
 560:notoriOS.c    ****         // sontek_t is a new data type we defined in sontek.h. We then use that data type to define
 561:notoriOS.c    ****         sontek_t m_sontek;
 562:notoriOS.c    ****         
 563:notoriOS.c    ****         // Take sontek readings and save them to m_sontek
 564:notoriOS.c    ****         m_sontek = sontek_take_reading();
 1602              		.loc 1 564 0
 1603 00a4 07F10C03 		add	r3, r7, #12
 1604 00a8 1846     		mov	r0, r3
 1605 00aa FFF7FEFF 		bl	sontek_take_reading
 565:notoriOS.c    ****         
 566:notoriOS.c    ****         // If valid flag is 1, then print the sontek readings and push the data to the data wheel
 567:notoriOS.c    ****         if(m_sontek.valid == 1){
 1606              		.loc 1 567 0
 1607 00ae 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1608 00b0 012B     		cmp	r3, #1
 1609 00b2 34D1     		bne	.L60
 568:notoriOS.c    ****             snprintf(value,sizeof(value),"%f",m_sontek.depth);
 1610              		.loc 1 568 0
 1611 00b4 3B69     		ldr	r3, [r7, #16]	@ float
 1612 00b6 1846     		mov	r0, r3
 1613 00b8 FFF7FEFF 		bl	__aeabi_f2d
 1614 00bc 0346     		mov	r3, r0
 1615 00be 0C46     		mov	r4, r1
 1616 00c0 07F14800 		add	r0, r7, #72
 1617 00c4 CDE90034 		strd	r3, [sp]
 1618 00c8 824A     		ldr	r2, .L66+40
 1619 00ca 1421     		movs	r1, #20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 42


 1620 00cc FFF7FEFF 		bl	snprintf
 569:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"sontek_depth=%s",value);
 1621              		.loc 1 569 0
 1622 00d0 07F14803 		add	r3, r7, #72
 1623 00d4 1A46     		mov	r2, r3
 1624 00d6 8049     		ldr	r1, .L66+44
 1625 00d8 0020     		movs	r0, #0
 1626 00da FFF7FEFF 		bl	printNotif
 570:notoriOS.c    ****             pushData("sontek_depth",value,timeStamp);
 1627              		.loc 1 570 0
 1628 00de 07F14803 		add	r3, r7, #72
 1629 00e2 FA6F     		ldr	r2, [r7, #124]
 1630 00e4 1946     		mov	r1, r3
 1631 00e6 7D48     		ldr	r0, .L66+48
 1632 00e8 FFF7FEFF 		bl	pushData
 571:notoriOS.c    ****             
 572:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 573:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1633              		.loc 1 573 0
 1634 00ec 07F15C03 		add	r3, r7, #92
 1635 00f0 1A46     		mov	r2, r3
 1636 00f2 7349     		ldr	r1, .L66+20
 1637 00f4 7348     		ldr	r0, .L66+24
 1638 00f6 FFF7FEFF 		bl	SD_write
 574:notoriOS.c    ****             SD_write(Data_fileName, "a+", " sontek_depth: ");
 1639              		.loc 1 574 0
 1640 00fa 794A     		ldr	r2, .L66+52
 1641 00fc 7049     		ldr	r1, .L66+20
 1642 00fe 7148     		ldr	r0, .L66+24
 1643 0100 FFF7FEFF 		bl	SD_write
 575:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1644              		.loc 1 575 0
 1645 0104 07F14803 		add	r3, r7, #72
 1646 0108 1A46     		mov	r2, r3
 1647 010a 6D49     		ldr	r1, .L66+20
 1648 010c 6D48     		ldr	r0, .L66+24
 1649 010e FFF7FEFF 		bl	SD_write
 576:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1650              		.loc 1 576 0
 1651 0112 6E4A     		ldr	r2, .L66+32
 1652 0114 6A49     		ldr	r1, .L66+20
 1653 0116 6B48     		ldr	r0, .L66+24
 1654 0118 FFF7FEFF 		bl	SD_write
 1655 011c 03E0     		b	.L59
 1656              	.L60:
 577:notoriOS.c    ****         }else{
 578:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Sontek.");
 1657              		.loc 1 578 0
 1658 011e 7149     		ldr	r1, .L66+56
 1659 0120 0220     		movs	r0, #2
 1660 0122 FFF7FEFF 		bl	printNotif
 1661              	.L59:
 1662              	.LBE10:
 579:notoriOS.c    ****             //pushData("maxbotix_depth","error",timeStamp);
 580:notoriOS.c    ****         }
 581:notoriOS.c    ****     }
 582:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 43


 583:notoriOS.c    ****     // voltage_t is a new data type we defined in voltages.h. We then use that data type to define 
 584:notoriOS.c    ****     voltage_t m_voltage;
 585:notoriOS.c    ****     
 586:notoriOS.c    ****     // Take voltage readings and save them to m_voltage
 587:notoriOS.c    ****     m_voltage = voltage_take_readings();
 1663              		.loc 1 587 0
 1664 0126 07F13403 		add	r3, r7, #52
 1665 012a 1846     		mov	r0, r3
 1666 012c FFF7FEFF 		bl	voltage_take_readings
 588:notoriOS.c    ****     
 589:notoriOS.c    ****     // If the reading is valid, print the voltage battery and pressure transducer reading and push 
 590:notoriOS.c    ****     if(m_voltage.valid){
 1667              		.loc 1 590 0
 1668 0130 97F84430 		ldrb	r3, [r7, #68]	@ zero_extendqisi2
 1669 0134 002B     		cmp	r3, #0
 1670 0136 00F0AF80 		beq	.L62
 591:notoriOS.c    ****         // battery voltage data
 592:notoriOS.c    ****         snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_battery);
 1671              		.loc 1 592 0
 1672 013a 7B6B     		ldr	r3, [r7, #52]	@ float
 1673 013c 1846     		mov	r0, r3
 1674 013e FFF7FEFF 		bl	__aeabi_f2d
 1675 0142 0346     		mov	r3, r0
 1676 0144 0C46     		mov	r4, r1
 1677 0146 07F14800 		add	r0, r7, #72
 1678 014a CDE90034 		strd	r3, [sp]
 1679 014e 664A     		ldr	r2, .L66+60
 1680 0150 1421     		movs	r1, #20
 1681 0152 FFF7FEFF 		bl	snprintf
 593:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"v_bat=%s",value);
 1682              		.loc 1 593 0
 1683 0156 07F14803 		add	r3, r7, #72
 1684 015a 1A46     		mov	r2, r3
 1685 015c 6349     		ldr	r1, .L66+64
 1686 015e 0020     		movs	r0, #0
 1687 0160 FFF7FEFF 		bl	printNotif
 594:notoriOS.c    ****         pushData("v_bat",value,timeStamp);
 1688              		.loc 1 594 0
 1689 0164 07F14803 		add	r3, r7, #72
 1690 0168 FA6F     		ldr	r2, [r7, #124]
 1691 016a 1946     		mov	r1, r3
 1692 016c 6048     		ldr	r0, .L66+68
 1693 016e FFF7FEFF 		bl	pushData
 595:notoriOS.c    ****         
 596:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 597:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 1694              		.loc 1 597 0
 1695 0172 564A     		ldr	r2, .L66+32
 1696 0174 5249     		ldr	r1, .L66+20
 1697 0176 5348     		ldr	r0, .L66+24
 1698 0178 FFF7FEFF 		bl	SD_write
 598:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
 1699              		.loc 1 598 0
 1700 017c 07F15C03 		add	r3, r7, #92
 1701 0180 1A46     		mov	r2, r3
 1702 0182 4F49     		ldr	r1, .L66+20
 1703 0184 4F48     		ldr	r0, .L66+24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 44


 1704 0186 FFF7FEFF 		bl	SD_write
 599:notoriOS.c    ****         SD_write(Data_fileName, "a+", " vbat: ");
 1705              		.loc 1 599 0
 1706 018a 5A4A     		ldr	r2, .L66+72
 1707 018c 4C49     		ldr	r1, .L66+20
 1708 018e 4D48     		ldr	r0, .L66+24
 1709 0190 FFF7FEFF 		bl	SD_write
 600:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 1710              		.loc 1 600 0
 1711 0194 07F14803 		add	r3, r7, #72
 1712 0198 1A46     		mov	r2, r3
 1713 019a 4949     		ldr	r1, .L66+20
 1714 019c 4948     		ldr	r0, .L66+24
 1715 019e FFF7FEFF 		bl	SD_write
 601:notoriOS.c    ****         
 602:notoriOS.c    ****         // If node type is green infrastructure node, take pressure transducer measurements
 603:notoriOS.c    ****         if(updatable_parameters.node_type == NODE_TYPE_GREENINFRASTRUCTURE){
 1716              		.loc 1 603 0
 1717 01a2 434B     		ldr	r3, .L66+4
 1718 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1719 01a6 012B     		cmp	r3, #1
 1720 01a8 7AD1     		bne	.L64
 1721              	.LBB11:
 604:notoriOS.c    ****             
 605:notoriOS.c    ****             // pressure transducer voltage (V) data
 606:notoriOS.c    ****             //snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_pressure);
 607:notoriOS.c    ****             //printNotif(NOTIF_TYPE_EVENT,"pressure_voltage=%s",value);
 608:notoriOS.c    ****             //pushData("pressure_voltage",value,timeStamp);
 609:notoriOS.c    ****             
 610:notoriOS.c    ****             // pressure_t is a new data type we defined in voltages.h. We then use that data type t
 611:notoriOS.c    ****             pressure_t m_pressure;
 612:notoriOS.c    ****             
 613:notoriOS.c    ****             // Make pressure transducer calculators for current (mA) and depth
 614:notoriOS.c    ****             m_pressure = pressure_calculations(m_voltage);
 1722              		.loc 1 614 0
 1723 01aa 3C1D     		adds	r4, r7, #4
 1724 01ac 6A46     		mov	r2, sp
 1725 01ae 07F14003 		add	r3, r7, #64
 1726 01b2 93E80300 		ldmia	r3, {r0, r1}
 1727 01b6 82E80300 		stmia	r2, {r0, r1}
 1728 01ba 07F13403 		add	r3, r7, #52
 1729 01be 0ECB     		ldmia	r3, {r1, r2, r3}
 1730 01c0 2046     		mov	r0, r4
 1731 01c2 FFF7FEFF 		bl	pressure_calculations
 615:notoriOS.c    ****             
 616:notoriOS.c    ****             // pressure transducer current (mA) data
 617:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_current);
 1732              		.loc 1 617 0
 1733 01c6 7B68     		ldr	r3, [r7, #4]	@ float
 1734 01c8 1846     		mov	r0, r3
 1735 01ca FFF7FEFF 		bl	__aeabi_f2d
 1736 01ce 0346     		mov	r3, r0
 1737 01d0 0C46     		mov	r4, r1
 1738 01d2 07F14800 		add	r0, r7, #72
 1739 01d6 CDE90034 		strd	r3, [sp]
 1740 01da 434A     		ldr	r2, .L66+60
 1741 01dc 1421     		movs	r1, #20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 45


 1742 01de FFF7FEFF 		bl	snprintf
 618:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_current=%s",value);
 1743              		.loc 1 618 0
 1744 01e2 07F14803 		add	r3, r7, #72
 1745 01e6 1A46     		mov	r2, r3
 1746 01e8 4349     		ldr	r1, .L66+76
 1747 01ea 0020     		movs	r0, #0
 1748 01ec FFF7FEFF 		bl	printNotif
 619:notoriOS.c    ****             pushData("pressure_current",value,timeStamp);
 1749              		.loc 1 619 0
 1750 01f0 07F14803 		add	r3, r7, #72
 1751 01f4 FA6F     		ldr	r2, [r7, #124]
 1752 01f6 1946     		mov	r1, r3
 1753 01f8 4048     		ldr	r0, .L66+80
 1754 01fa FFF7FEFF 		bl	pushData
 620:notoriOS.c    ****             
 621:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 622:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1755              		.loc 1 622 0
 1756 01fe 334A     		ldr	r2, .L66+32
 1757 0200 2F49     		ldr	r1, .L66+20
 1758 0202 3048     		ldr	r0, .L66+24
 1759 0204 FFF7FEFF 		bl	SD_write
 623:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1760              		.loc 1 623 0
 1761 0208 07F15C03 		add	r3, r7, #92
 1762 020c 1A46     		mov	r2, r3
 1763 020e 2C49     		ldr	r1, .L66+20
 1764 0210 2C48     		ldr	r0, .L66+24
 1765 0212 FFF7FEFF 		bl	SD_write
 624:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_current: ");
 1766              		.loc 1 624 0
 1767 0216 3A4A     		ldr	r2, .L66+84
 1768 0218 2949     		ldr	r1, .L66+20
 1769 021a 2A48     		ldr	r0, .L66+24
 1770 021c FFF7FEFF 		bl	SD_write
 625:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1771              		.loc 1 625 0
 1772 0220 07F14803 		add	r3, r7, #72
 1773 0224 1A46     		mov	r2, r3
 1774 0226 2649     		ldr	r1, .L66+20
 1775 0228 2648     		ldr	r0, .L66+24
 1776 022a FFF7FEFF 		bl	SD_write
 626:notoriOS.c    ****             
 627:notoriOS.c    ****             // pressure transducer depth (ft) data
 628:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_depth);
 1777              		.loc 1 628 0
 1778 022e BB68     		ldr	r3, [r7, #8]	@ float
 1779 0230 1846     		mov	r0, r3
 1780 0232 FFF7FEFF 		bl	__aeabi_f2d
 1781 0236 0346     		mov	r3, r0
 1782 0238 0C46     		mov	r4, r1
 1783 023a 07F14800 		add	r0, r7, #72
 1784 023e CDE90034 		strd	r3, [sp]
 1785 0242 294A     		ldr	r2, .L66+60
 1786 0244 1421     		movs	r1, #20
 1787 0246 FFF7FEFF 		bl	snprintf
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 46


 629:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_depth=%s",value);
 1788              		.loc 1 629 0
 1789 024a 07F14803 		add	r3, r7, #72
 1790 024e 1A46     		mov	r2, r3
 1791 0250 2C49     		ldr	r1, .L66+88
 1792 0252 0020     		movs	r0, #0
 1793 0254 FFF7FEFF 		bl	printNotif
 630:notoriOS.c    ****             pushData("pressure_depth",value,timeStamp);
 1794              		.loc 1 630 0
 1795 0258 07F14803 		add	r3, r7, #72
 1796 025c FA6F     		ldr	r2, [r7, #124]
 1797 025e 1946     		mov	r1, r3
 1798 0260 2948     		ldr	r0, .L66+92
 1799 0262 FFF7FEFF 		bl	pushData
 631:notoriOS.c    ****             
 632:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 633:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1800              		.loc 1 633 0
 1801 0266 194A     		ldr	r2, .L66+32
 1802 0268 1549     		ldr	r1, .L66+20
 1803 026a 1648     		ldr	r0, .L66+24
 1804 026c FFF7FEFF 		bl	SD_write
 634:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1805              		.loc 1 634 0
 1806 0270 07F15C03 		add	r3, r7, #92
 1807 0274 1A46     		mov	r2, r3
 1808 0276 1249     		ldr	r1, .L66+20
 1809 0278 1248     		ldr	r0, .L66+24
 1810 027a FFF7FEFF 		bl	SD_write
 635:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_depth: ");
 1811              		.loc 1 635 0
 1812 027e 234A     		ldr	r2, .L66+96
 1813 0280 0F49     		ldr	r1, .L66+20
 1814 0282 1048     		ldr	r0, .L66+24
 1815 0284 FFF7FEFF 		bl	SD_write
 636:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1816              		.loc 1 636 0
 1817 0288 07F14803 		add	r3, r7, #72
 1818 028c 1A46     		mov	r2, r3
 1819 028e 0C49     		ldr	r1, .L66+20
 1820 0290 0C48     		ldr	r0, .L66+24
 1821 0292 FFF7FEFF 		bl	SD_write
 1822 0296 03E0     		b	.L64
 1823              	.L62:
 1824              	.LBE11:
 637:notoriOS.c    ****         }    
 638:notoriOS.c    ****     }else{
 639:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from ADC.");
 1825              		.loc 1 639 0
 1826 0298 1D49     		ldr	r1, .L66+100
 1827 029a 0220     		movs	r0, #2
 1828 029c FFF7FEFF 		bl	printNotif
 1829              	.L64:
 640:notoriOS.c    ****     }
 641:notoriOS.c    ****     
 642:notoriOS.c    ****     return 0u;
 1830              		.loc 1 642 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 47


 1831 02a0 0023     		movs	r3, #0
 643:notoriOS.c    **** }
 1832              		.loc 1 643 0
 1833 02a2 1846     		mov	r0, r3
 1834 02a4 8437     		adds	r7, r7, #132
 1835              		.cfi_def_cfa_offset 12
 1836 02a6 BD46     		mov	sp, r7
 1837              		.cfi_def_cfa_register 13
 1838              		@ sp needed
 1839 02a8 90BD     		pop	{r4, r7, pc}
 1840              	.L67:
 1841 02aa 00BF     		.align	2
 1842              	.L66:
 1843 02ac 70020000 		.word	.LC35
 1844 02b0 00000000 		.word	updatable_parameters
 1845 02b4 3C000000 		.word	.LC2
 1846 02b8 74020000 		.word	.LC36
 1847 02bc 88020000 		.word	.LC37
 1848 02c0 98020000 		.word	.LC38
 1849 02c4 00000000 		.word	Data_fileName
 1850 02c8 9C020000 		.word	.LC39
 1851 02cc B0020000 		.word	.LC40
 1852 02d0 B4020000 		.word	.LC41
 1853 02d4 E0020000 		.word	.LC42
 1854 02d8 E4020000 		.word	.LC43
 1855 02dc F4020000 		.word	.LC44
 1856 02e0 04030000 		.word	.LC45
 1857 02e4 14030000 		.word	.LC46
 1858 02e8 40030000 		.word	.LC47
 1859 02ec 48030000 		.word	.LC48
 1860 02f0 54030000 		.word	.LC49
 1861 02f4 5C030000 		.word	.LC50
 1862 02f8 64030000 		.word	.LC51
 1863 02fc 78030000 		.word	.LC52
 1864 0300 8C030000 		.word	.LC53
 1865 0304 A0030000 		.word	.LC54
 1866 0308 B4030000 		.word	.LC55
 1867 030c C4030000 		.word	.LC56
 1868 0310 D8030000 		.word	.LC57
 1869              		.cfi_endproc
 1870              	.LFE76:
 1871              		.size	makeMeasurements, .-makeMeasurements
 1872              		.section	.rodata
 1873 03ff 00       		.align	2
 1874              	.LC58:
 1875 0400 4572726F 		.ascii	"Error setting system time.\000"
 1875      72207365 
 1875      7474696E 
 1875      67207379 
 1875      7374656D 
 1876              		.section	.text.setTime,"ax",%progbits
 1877              		.align	2
 1878              		.global	setTime
 1879              		.thumb
 1880              		.thumb_func
 1881              		.type	setTime, %function
 1882              	setTime:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 48


 1883              	.LFB77:
 644:notoriOS.c    **** 
 645:notoriOS.c    **** // ==============================================
 646:notoriOS.c    **** // Set the system time
 647:notoriOS.c    **** // Returns 0 if there is an error, returns 1 if successful
 648:notoriOS.c    **** // ==============================================
 649:notoriOS.c    **** uint8 setTime(long timeStamp){
 1884              		.loc 1 649 0
 1885              		.cfi_startproc
 1886              		@ args = 0, pretend = 0, frame = 24
 1887              		@ frame_needed = 1, uses_anonymous_args = 0
 1888 0000 80B5     		push	{r7, lr}
 1889              		.cfi_def_cfa_offset 8
 1890              		.cfi_offset 7, -8
 1891              		.cfi_offset 14, -4
 1892 0002 86B0     		sub	sp, sp, #24
 1893              		.cfi_def_cfa_offset 32
 1894 0004 00AF     		add	r7, sp, #0
 1895              		.cfi_def_cfa_register 7
 1896 0006 7860     		str	r0, [r7, #4]
 650:notoriOS.c    ****     // If timestamp is <= 0 print error statement and return 0
 651:notoriOS.c    ****     if(timeStamp <=0){
 1897              		.loc 1 651 0
 1898 0008 7B68     		ldr	r3, [r7, #4]
 1899 000a 002B     		cmp	r3, #0
 1900 000c 05DC     		bgt	.L69
 652:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Error setting system time.");
 1901              		.loc 1 652 0
 1902 000e 1849     		ldr	r1, .L71
 1903 0010 0220     		movs	r0, #2
 1904 0012 FFF7FEFF 		bl	printNotif
 653:notoriOS.c    ****         return 0;  
 1905              		.loc 1 653 0
 1906 0016 0023     		movs	r3, #0
 1907 0018 25E0     		b	.L70
 1908              	.L69:
 654:notoriOS.c    ****     }
 655:notoriOS.c    ****     // Create a new pointer t of data structure tm
 656:notoriOS.c    ****     struct tm * t;
 657:notoriOS.c    ****     // Converts a calendar time (pointed to by timer) and returns a pointer to a structure containi
 658:notoriOS.c    ****     t = gmtime(&timeStamp);
 1909              		.loc 1 658 0
 1910 001a 3B1D     		adds	r3, r7, #4
 1911 001c 1846     		mov	r0, r3
 1912 001e FFF7FEFF 		bl	gmtime
 1913 0022 7861     		str	r0, [r7, #20]
 659:notoriOS.c    ****     
 660:notoriOS.c    ****     // Create variable localTime of data structure RTC_TIME_DATE
 661:notoriOS.c    ****     RTC_TIME_DATE localTime;
 662:notoriOS.c    ****     localTime.Sec = t->tm_sec;
 1914              		.loc 1 662 0
 1915 0024 7B69     		ldr	r3, [r7, #20]
 1916 0026 1B68     		ldr	r3, [r3]
 1917 0028 DBB2     		uxtb	r3, r3
 1918 002a 3B72     		strb	r3, [r7, #8]
 663:notoriOS.c    ****     localTime.Min = t->tm_min;
 1919              		.loc 1 663 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 49


 1920 002c 7B69     		ldr	r3, [r7, #20]
 1921 002e 5B68     		ldr	r3, [r3, #4]
 1922 0030 DBB2     		uxtb	r3, r3
 1923 0032 7B72     		strb	r3, [r7, #9]
 664:notoriOS.c    ****     localTime.Hour = t->tm_hour;
 1924              		.loc 1 664 0
 1925 0034 7B69     		ldr	r3, [r7, #20]
 1926 0036 9B68     		ldr	r3, [r3, #8]
 1927 0038 DBB2     		uxtb	r3, r3
 1928 003a BB72     		strb	r3, [r7, #10]
 665:notoriOS.c    ****     localTime.Year = t->tm_year + 1900;
 1929              		.loc 1 665 0
 1930 003c 7B69     		ldr	r3, [r7, #20]
 1931 003e 5B69     		ldr	r3, [r3, #20]
 1932 0040 9BB2     		uxth	r3, r3
 1933 0042 03F26C73 		addw	r3, r3, #1900
 1934 0046 9BB2     		uxth	r3, r3
 1935 0048 7B82     		strh	r3, [r7, #18]	@ movhi
 666:notoriOS.c    ****     localTime.Month = t->tm_mon;
 1936              		.loc 1 666 0
 1937 004a 7B69     		ldr	r3, [r7, #20]
 1938 004c 1B69     		ldr	r3, [r3, #16]
 1939 004e DBB2     		uxtb	r3, r3
 1940 0050 3B74     		strb	r3, [r7, #16]
 667:notoriOS.c    ****     localTime.DayOfMonth = t->tm_mday;
 1941              		.loc 1 667 0
 1942 0052 7B69     		ldr	r3, [r7, #20]
 1943 0054 DB68     		ldr	r3, [r3, #12]
 1944 0056 DBB2     		uxtb	r3, r3
 1945 0058 3B73     		strb	r3, [r7, #12]
 668:notoriOS.c    **** 
 669:notoriOS.c    ****     // Writes time and date values as current time and date.
 670:notoriOS.c    ****     RTC_WriteTime(&localTime);
 1946              		.loc 1 670 0
 1947 005a 07F10803 		add	r3, r7, #8
 1948 005e 1846     		mov	r0, r3
 1949 0060 FFF7FEFF 		bl	RTC_WriteTime
 671:notoriOS.c    ****     
 672:notoriOS.c    ****     // Return 1 when the system time was set properly.
 673:notoriOS.c    ****     return 1;
 1950              		.loc 1 673 0
 1951 0064 0123     		movs	r3, #1
 1952              	.L70:
 674:notoriOS.c    **** }
 1953              		.loc 1 674 0
 1954 0066 1846     		mov	r0, r3
 1955 0068 1837     		adds	r7, r7, #24
 1956              		.cfi_def_cfa_offset 8
 1957 006a BD46     		mov	sp, r7
 1958              		.cfi_def_cfa_register 13
 1959              		@ sp needed
 1960 006c 80BD     		pop	{r7, pc}
 1961              	.L72:
 1962 006e 00BF     		.align	2
 1963              	.L71:
 1964 0070 00040000 		.word	.LC58
 1965              		.cfi_endproc
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 50


 1966              	.LFE77:
 1967              		.size	setTime, .-setTime
 1968              		.section	.rodata
 1969 041b 00       		.align	2
 1970              	.LC59:
 1971 041c 75706772 		.ascii	"upgrade.hex\000"
 1971      6164652E 
 1971      68657800 
 1972              		.section	.text.upgraded,"ax",%progbits
 1973              		.align	2
 1974              		.global	upgraded
 1975              		.thumb
 1976              		.thumb_func
 1977              		.type	upgraded, %function
 1978              	upgraded:
 1979              	.LFB78:
 675:notoriOS.c    **** 
 676:notoriOS.c    **** //downloads and stores files on SD card
 677:notoriOS.c    **** 
 678:notoriOS.c    **** 
 679:notoriOS.c    **** 
 680:notoriOS.c    **** // ==============================================
 681:notoriOS.c    **** // Will they love it, will they hate it
 682:notoriOS.c    **** // Never fade it, I evade it
 683:notoriOS.c    **** // Cause I never really want to complicate it
 684:notoriOS.c    **** //      - Logic, Upgraded (2015)
 685:notoriOS.c    **** //
 686:notoriOS.c    **** // downloads new firmware, stores it on SD card, and reboots the system to allow bootloader 
 687:notoriOS.c    **** // returns 0 if modem is connected, 1 if the file downlaod failed, and does not return otherwise (b
 688:notoriOS.c    **** // ==============================================
 689:notoriOS.c    **** 
 690:notoriOS.c    **** uint8 upgraded(char *host, int port,  char *route){
 1980              		.loc 1 690 0
 1981              		.cfi_startproc
 1982              		@ args = 0, pretend = 0, frame = 232
 1983              		@ frame_needed = 1, uses_anonymous_args = 0
 1984 0000 80B5     		push	{r7, lr}
 1985              		.cfi_def_cfa_offset 8
 1986              		.cfi_offset 7, -8
 1987              		.cfi_offset 14, -4
 1988 0002 C0B0     		sub	sp, sp, #256
 1989              		.cfi_def_cfa_offset 264
 1990 0004 06AF     		add	r7, sp, #24
 1991              		.cfi_def_cfa 7, 240
 1992 0006 F860     		str	r0, [r7, #12]
 1993 0008 B960     		str	r1, [r7, #8]
 1994 000a 7A60     		str	r2, [r7, #4]
 691:notoriOS.c    ****     
 692:notoriOS.c    ****     uint8 upgrade_status = 0;
 1995              		.loc 1 692 0
 1996 000c 0023     		movs	r3, #0
 1997 000e 87F8E730 		strb	r3, [r7, #231]
 693:notoriOS.c    ****     
 694:notoriOS.c    ****    //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 695:notoriOS.c    ****     if(modem_state != MODEM_STATE_READY){
 1998              		.loc 1 695 0
 1999 0012 384B     		ldr	r3, .L77
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 51


 2000 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2001 0016 042B     		cmp	r3, #4
 2002 0018 02D0     		beq	.L74
 696:notoriOS.c    ****         return upgrade_status;//where valid = 0
 2003              		.loc 1 696 0
 2004 001a 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2005 001e 65E0     		b	.L76
 2006              	.L74:
 697:notoriOS.c    ****     }
 698:notoriOS.c    ****     
 699:notoriOS.c    ****     char fileName[] = "upgrade.hex";
 2007              		.loc 1 699 0
 2008 0020 354A     		ldr	r2, .L77+4
 2009 0022 07F1D803 		add	r3, r7, #216
 2010 0026 07CA     		ldmia	r2, {r0, r1, r2}
 2011 0028 83E80700 		stmia	r3, {r0, r1, r2}
 700:notoriOS.c    ****     //delete file, if one exisits already
 701:notoriOS.c    ****     SD_rmfile(fileName);
 2012              		.loc 1 701 0
 2013 002c 07F1D803 		add	r3, r7, #216
 2014 0030 1846     		mov	r0, r3
 2015 0032 FFF7FEFF 		bl	SD_rmfile
 702:notoriOS.c    ****     
 703:notoriOS.c    ****     // Create http request
 704:notoriOS.c    ****     construct_generic_HTTP_request(http_request,http_body,host,route,port,"POST","Close","",0,"1.1"
 2016              		.loc 1 704 0
 2017 0036 314B     		ldr	r3, .L77+8
 2018 0038 0593     		str	r3, [sp, #20]
 2019 003a 0023     		movs	r3, #0
 2020 003c 0493     		str	r3, [sp, #16]
 2021 003e 304B     		ldr	r3, .L77+12
 2022 0040 0393     		str	r3, [sp, #12]
 2023 0042 304B     		ldr	r3, .L77+16
 2024 0044 0293     		str	r3, [sp, #8]
 2025 0046 304B     		ldr	r3, .L77+20
 2026 0048 0193     		str	r3, [sp, #4]
 2027 004a BB68     		ldr	r3, [r7, #8]
 2028 004c 0093     		str	r3, [sp]
 2029 004e 7B68     		ldr	r3, [r7, #4]
 2030 0050 FA68     		ldr	r2, [r7, #12]
 2031 0052 2E49     		ldr	r1, .L77+24
 2032 0054 2E48     		ldr	r0, .L77+28
 2033 0056 FFF7FEFF 		bl	construct_generic_HTTP_request
 705:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 2034              		.loc 1 705 0
 2035 005a 2D4A     		ldr	r2, .L77+28
 2036 005c 2D49     		ldr	r1, .L77+32
 2037 005e 0020     		movs	r0, #0
 2038 0060 FFF7FEFF 		bl	printNotif
 706:notoriOS.c    ****     // Create array portConfig of size 200 characters
 707:notoriOS.c    ****     char portConfig[200];
 708:notoriOS.c    ****     // Print port configurations
 709:notoriOS.c    ****     snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",port,host);
 2039              		.loc 1 709 0
 2040 0064 07F11000 		add	r0, r7, #16
 2041 0068 FB68     		ldr	r3, [r7, #12]
 2042 006a 0093     		str	r3, [sp]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 52


 2043 006c BB68     		ldr	r3, [r7, #8]
 2044 006e 2A4A     		ldr	r2, .L77+36
 2045 0070 C821     		movs	r1, #200
 2046 0072 FFF7FEFF 		bl	snprintf
 710:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 2047              		.loc 1 710 0
 2048 0076 07F11003 		add	r3, r7, #16
 2049 007a 1A46     		mov	r2, r3
 2050 007c 2749     		ldr	r1, .L77+40
 2051 007e 0020     		movs	r0, #0
 2052 0080 FFF7FEFF 		bl	printNotif
 711:notoriOS.c    ****     // AT command to configure the port
 712:notoriOS.c    ****     upgrade_status = at_write_command(portConfig,"OK",10000u);
 2053              		.loc 1 712 0
 2054 0084 07F11003 		add	r3, r7, #16
 2055 0088 42F21072 		movw	r2, #10000
 2056 008c 2449     		ldr	r1, .L77+44
 2057 008e 1846     		mov	r0, r3
 2058 0090 FFF7FEFF 		bl	at_write_command
 2059 0094 0346     		mov	r3, r0
 2060 0096 87F8E730 		strb	r3, [r7, #231]
 713:notoriOS.c    ****     // AT command #SSEND= is an execution command that permits, while the modul eis in command mode
 714:notoriOS.c    ****     // To complete the operation, send Ctrl-Z char to exit
 715:notoriOS.c    ****     upgrade_status = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 2061              		.loc 1 715 0
 2062 009a 4FF47A72 		mov	r2, #1000
 2063 009e 2149     		ldr	r1, .L77+48
 2064 00a0 2148     		ldr	r0, .L77+52
 2065 00a2 FFF7FEFF 		bl	at_write_command
 2066 00a6 0346     		mov	r3, r0
 2067 00a8 87F8E730 		strb	r3, [r7, #231]
 716:notoriOS.c    ****     // Append <ctrl+z> escape sequence to http_request to exit modem command line
 717:notoriOS.c    ****     strncat(http_request, "\032", 1); 
 2068              		.loc 1 717 0
 2069 00ac 1848     		ldr	r0, .L77+28
 2070 00ae FFF7FEFF 		bl	strlen
 2071 00b2 0346     		mov	r3, r0
 2072 00b4 1A46     		mov	r2, r3
 2073 00b6 164B     		ldr	r3, .L77+28
 2074 00b8 1344     		add	r3, r3, r2
 2075 00ba 1C49     		ldr	r1, .L77+56
 2076 00bc 1A46     		mov	r2, r3
 2077 00be 0B46     		mov	r3, r1
 2078 00c0 1B88     		ldrh	r3, [r3]	@ unaligned
 2079 00c2 1380     		strh	r3, [r2]	@ unaligned
 718:notoriOS.c    ****     // AT command to send http request
 719:notoriOS.c    ****     upgrade_status = at_write_command(http_request, "OK", 5000u);
 2080              		.loc 1 719 0
 2081 00c4 41F28832 		movw	r2, #5000
 2082 00c8 1549     		ldr	r1, .L77+44
 2083 00ca 1148     		ldr	r0, .L77+28
 2084 00cc FFF7FEFF 		bl	at_write_command
 2085 00d0 0346     		mov	r3, r0
 2086 00d2 87F8E730 		strb	r3, [r7, #231]
 720:notoriOS.c    ****     // AT command #SRECV= is an execution command that permits users to read data arrived through a
 721:notoriOS.c    ****     // = 1 means the UPD information is enabled: data are read just until the end of the UDP datagr
 722:notoriOS.c    ****     upgrade_status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 53


 2087              		.loc 1 722 0
 2088 00d6 41F28832 		movw	r2, #5000
 2089 00da 1549     		ldr	r1, .L77+60
 2090 00dc 1548     		ldr	r0, .L77+64
 2091 00de FFF7FEFF 		bl	at_write_command
 2092 00e2 0346     		mov	r3, r0
 2093 00e4 87F8E730 		strb	r3, [r7, #231]
 723:notoriOS.c    ****     //SD_write(fileName,"w+",uart_received_string);
 724:notoriOS.c    ****     
 725:notoriOS.c    ****     
 726:notoriOS.c    ****     return upgrade_status;
 2094              		.loc 1 726 0
 2095 00e8 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2096              	.L76:
 727:notoriOS.c    ****     
 728:notoriOS.c    **** }
 2097              		.loc 1 728 0 discriminator 1
 2098 00ec 1846     		mov	r0, r3
 2099 00ee E837     		adds	r7, r7, #232
 2100              		.cfi_def_cfa_offset 8
 2101 00f0 BD46     		mov	sp, r7
 2102              		.cfi_def_cfa_register 13
 2103              		@ sp needed
 2104 00f2 80BD     		pop	{r7, pc}
 2105              	.L78:
 2106              		.align	2
 2107              	.L77:
 2108 00f4 00000000 		.word	modem_state
 2109 00f8 1C040000 		.word	.LC59
 2110 00fc 68010000 		.word	.LC16
 2111 0100 6C010000 		.word	.LC17
 2112 0104 70010000 		.word	.LC18
 2113 0108 78010000 		.word	.LC19
 2114 010c 00000000 		.word	http_body
 2115 0110 00000000 		.word	http_request
 2116 0114 80010000 		.word	.LC20
 2117 0118 98010000 		.word	.LC21
 2118 011c B4010000 		.word	.LC22
 2119 0120 B8010000 		.word	.LC23
 2120 0124 E8010000 		.word	.LC26
 2121 0128 EC010000 		.word	.LC27
 2122 012c FC010000 		.word	.LC28
 2123 0130 18020000 		.word	.LC31
 2124 0134 20020000 		.word	.LC32
 2125              		.cfi_endproc
 2126              	.LFE78:
 2127              		.size	upgraded, .-upgraded
 2128              		.text
 2129              	.Letext0:
 2130              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2131              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2132              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2133              		.file 5 "Generated_Source\\PSoC5/RTC.h"
 2134              		.file 6 "testing.h"
 2135              		.file 7 "level_sensor.h"
 2136              		.file 8 "sontek.h"
 2137              		.file 9 "voltages.h"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 54


 2138              		.file 10 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 2139              		.file 11 "data.h"
 2140              		.file 12 "modem.h"
 2141              		.file 13 "notoriOS.h"
 2142              		.file 14 "Generated_Source\\PSoC5/core_cm3.h"
 2143              		.section	.debug_info,"",%progbits
 2144              	.Ldebug_info0:
 2145 0000 3B0C0000 		.4byte	0xc3b
 2146 0004 0400     		.2byte	0x4
 2147 0006 00000000 		.4byte	.Ldebug_abbrev0
 2148 000a 04       		.byte	0x4
 2149 000b 01       		.uleb128 0x1
 2150 000c 74000000 		.4byte	.LASF160
 2151 0010 0C       		.byte	0xc
 2152 0011 87070000 		.4byte	.LASF161
 2153 0015 D0020000 		.4byte	.LASF162
 2154 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2155 001d 00000000 		.4byte	0
 2156 0021 00000000 		.4byte	.Ldebug_line0
 2157 0025 02       		.uleb128 0x2
 2158 0026 01       		.byte	0x1
 2159 0027 06       		.byte	0x6
 2160 0028 45000000 		.4byte	.LASF0
 2161 002c 02       		.uleb128 0x2
 2162 002d 01       		.byte	0x1
 2163 002e 08       		.byte	0x8
 2164 002f A5050000 		.4byte	.LASF1
 2165 0033 02       		.uleb128 0x2
 2166 0034 02       		.byte	0x2
 2167 0035 05       		.byte	0x5
 2168 0036 1F040000 		.4byte	.LASF2
 2169 003a 02       		.uleb128 0x2
 2170 003b 02       		.byte	0x2
 2171 003c 07       		.byte	0x7
 2172 003d 6A020000 		.4byte	.LASF3
 2173 0041 03       		.uleb128 0x3
 2174 0042 F1060000 		.4byte	.LASF9
 2175 0046 02       		.byte	0x2
 2176 0047 3F       		.byte	0x3f
 2177 0048 4C000000 		.4byte	0x4c
 2178 004c 02       		.uleb128 0x2
 2179 004d 04       		.byte	0x4
 2180 004e 05       		.byte	0x5
 2181 004f 04020000 		.4byte	.LASF4
 2182 0053 02       		.uleb128 0x2
 2183 0054 04       		.byte	0x4
 2184 0055 07       		.byte	0x7
 2185 0056 5C030000 		.4byte	.LASF5
 2186 005a 02       		.uleb128 0x2
 2187 005b 08       		.byte	0x8
 2188 005c 05       		.byte	0x5
 2189 005d 5F010000 		.4byte	.LASF6
 2190 0061 02       		.uleb128 0x2
 2191 0062 08       		.byte	0x8
 2192 0063 07       		.byte	0x7
 2193 0064 08010000 		.4byte	.LASF7
 2194 0068 04       		.uleb128 0x4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 55


 2195 0069 04       		.byte	0x4
 2196 006a 05       		.byte	0x5
 2197 006b 696E7400 		.ascii	"int\000"
 2198 006f 02       		.uleb128 0x2
 2199 0070 04       		.byte	0x4
 2200 0071 07       		.byte	0x7
 2201 0072 08030000 		.4byte	.LASF8
 2202 0076 03       		.uleb128 0x3
 2203 0077 9D050000 		.4byte	.LASF10
 2204 007b 03       		.byte	0x3
 2205 007c 2C       		.byte	0x2c
 2206 007d 41000000 		.4byte	0x41
 2207 0081 05       		.uleb128 0x5
 2208 0082 26020000 		.4byte	.LASF11
 2209 0086 04       		.byte	0x4
 2210 0087 9201     		.2byte	0x192
 2211 0089 2C000000 		.4byte	0x2c
 2212 008d 05       		.uleb128 0x5
 2213 008e 08000000 		.4byte	.LASF12
 2214 0092 04       		.byte	0x4
 2215 0093 9301     		.2byte	0x193
 2216 0095 3A000000 		.4byte	0x3a
 2217 0099 05       		.uleb128 0x5
 2218 009a 7D020000 		.4byte	.LASF13
 2219 009e 04       		.byte	0x4
 2220 009f 9401     		.2byte	0x194
 2221 00a1 53000000 		.4byte	0x53
 2222 00a5 05       		.uleb128 0x5
 2223 00a6 E2030000 		.4byte	.LASF14
 2224 00aa 04       		.byte	0x4
 2225 00ab 9501     		.2byte	0x195
 2226 00ad 25000000 		.4byte	0x25
 2227 00b1 05       		.uleb128 0x5
 2228 00b2 9C070000 		.4byte	.LASF15
 2229 00b6 04       		.byte	0x4
 2230 00b7 9601     		.2byte	0x196
 2231 00b9 33000000 		.4byte	0x33
 2232 00bd 05       		.uleb128 0x5
 2233 00be 44020000 		.4byte	.LASF16
 2234 00c2 04       		.byte	0x4
 2235 00c3 9701     		.2byte	0x197
 2236 00c5 4C000000 		.4byte	0x4c
 2237 00c9 02       		.uleb128 0x2
 2238 00ca 04       		.byte	0x4
 2239 00cb 04       		.byte	0x4
 2240 00cc 42050000 		.4byte	.LASF17
 2241 00d0 02       		.uleb128 0x2
 2242 00d1 08       		.byte	0x8
 2243 00d2 04       		.byte	0x4
 2244 00d3 20080000 		.4byte	.LASF18
 2245 00d7 02       		.uleb128 0x2
 2246 00d8 01       		.byte	0x1
 2247 00d9 08       		.byte	0x8
 2248 00da C1060000 		.4byte	.LASF19
 2249 00de 02       		.uleb128 0x2
 2250 00df 08       		.byte	0x8
 2251 00e0 04       		.byte	0x4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 56


 2252 00e1 A3060000 		.4byte	.LASF20
 2253 00e5 02       		.uleb128 0x2
 2254 00e6 04       		.byte	0x4
 2255 00e7 07       		.byte	0x7
 2256 00e8 9C040000 		.4byte	.LASF21
 2257 00ec 06       		.uleb128 0x6
 2258 00ed 04       		.byte	0x4
 2259 00ee D7000000 		.4byte	0xd7
 2260 00f2 07       		.uleb128 0x7
 2261 00f3 D7000000 		.4byte	0xd7
 2262 00f7 02010000 		.4byte	0x102
 2263 00fb 08       		.uleb128 0x8
 2264 00fc E5000000 		.4byte	0xe5
 2265 0100 17       		.byte	0x17
 2266 0101 00       		.byte	0
 2267 0102 09       		.uleb128 0x9
 2268 0103 0C       		.byte	0xc
 2269 0104 05       		.byte	0x5
 2270 0105 30       		.byte	0x30
 2271 0106 6B010000 		.4byte	0x16b
 2272 010a 0A       		.uleb128 0xa
 2273 010b 53656300 		.ascii	"Sec\000"
 2274 010f 05       		.byte	0x5
 2275 0110 32       		.byte	0x32
 2276 0111 81000000 		.4byte	0x81
 2277 0115 00       		.byte	0
 2278 0116 0A       		.uleb128 0xa
 2279 0117 4D696E00 		.ascii	"Min\000"
 2280 011b 05       		.byte	0x5
 2281 011c 33       		.byte	0x33
 2282 011d 81000000 		.4byte	0x81
 2283 0121 01       		.byte	0x1
 2284 0122 0B       		.uleb128 0xb
 2285 0123 1F010000 		.4byte	.LASF22
 2286 0127 05       		.byte	0x5
 2287 0128 34       		.byte	0x34
 2288 0129 81000000 		.4byte	0x81
 2289 012d 02       		.byte	0x2
 2290 012e 0B       		.uleb128 0xb
 2291 012f 02060000 		.4byte	.LASF23
 2292 0133 05       		.byte	0x5
 2293 0134 35       		.byte	0x35
 2294 0135 81000000 		.4byte	0x81
 2295 0139 03       		.byte	0x3
 2296 013a 0B       		.uleb128 0xb
 2297 013b 9D030000 		.4byte	.LASF24
 2298 013f 05       		.byte	0x5
 2299 0140 36       		.byte	0x36
 2300 0141 81000000 		.4byte	0x81
 2301 0145 04       		.byte	0x4
 2302 0146 0B       		.uleb128 0xb
 2303 0147 D5070000 		.4byte	.LASF25
 2304 014b 05       		.byte	0x5
 2305 014c 37       		.byte	0x37
 2306 014d 8D000000 		.4byte	0x8d
 2307 0151 06       		.byte	0x6
 2308 0152 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 57


 2309 0153 02010000 		.4byte	.LASF26
 2310 0157 05       		.byte	0x5
 2311 0158 38       		.byte	0x38
 2312 0159 81000000 		.4byte	0x81
 2313 015d 08       		.byte	0x8
 2314 015e 0B       		.uleb128 0xb
 2315 015f 92050000 		.4byte	.LASF27
 2316 0163 05       		.byte	0x5
 2317 0164 39       		.byte	0x39
 2318 0165 8D000000 		.4byte	0x8d
 2319 0169 0A       		.byte	0xa
 2320 016a 00       		.byte	0
 2321 016b 03       		.uleb128 0x3
 2322 016c E7040000 		.4byte	.LASF28
 2323 0170 05       		.byte	0x5
 2324 0171 3A       		.byte	0x3a
 2325 0172 76010000 		.4byte	0x176
 2326 0176 0C       		.uleb128 0xc
 2327 0177 02010000 		.4byte	0x102
 2328 017b 0D       		.uleb128 0xd
 2329 017c 8101     		.2byte	0x181
 2330 017e 06       		.byte	0x6
 2331 017f 0A       		.byte	0xa
 2332 0180 A9010000 		.4byte	0x1a9
 2333 0184 0B       		.uleb128 0xb
 2334 0185 88050000 		.4byte	.LASF29
 2335 0189 06       		.byte	0x6
 2336 018a 0C       		.byte	0xc
 2337 018b A9010000 		.4byte	0x1a9
 2338 018f 00       		.byte	0
 2339 0190 0B       		.uleb128 0xb
 2340 0191 5C070000 		.4byte	.LASF30
 2341 0195 06       		.byte	0x6
 2342 0196 0D       		.byte	0xd
 2343 0197 81000000 		.4byte	0x81
 2344 019b 80       		.byte	0x80
 2345 019c 0B       		.uleb128 0xb
 2346 019d 24060000 		.4byte	.LASF31
 2347 01a1 06       		.byte	0x6
 2348 01a2 0F       		.byte	0xf
 2349 01a3 B9010000 		.4byte	0x1b9
 2350 01a7 81       		.byte	0x81
 2351 01a8 00       		.byte	0
 2352 01a9 07       		.uleb128 0x7
 2353 01aa D7000000 		.4byte	0xd7
 2354 01ae B9010000 		.4byte	0x1b9
 2355 01b2 08       		.uleb128 0x8
 2356 01b3 E5000000 		.4byte	0xe5
 2357 01b7 7F       		.byte	0x7f
 2358 01b8 00       		.byte	0
 2359 01b9 07       		.uleb128 0x7
 2360 01ba D7000000 		.4byte	0xd7
 2361 01be C9010000 		.4byte	0x1c9
 2362 01c2 08       		.uleb128 0x8
 2363 01c3 E5000000 		.4byte	0xe5
 2364 01c7 FF       		.byte	0xff
 2365 01c8 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 58


 2366 01c9 03       		.uleb128 0x3
 2367 01ca 0C060000 		.4byte	.LASF32
 2368 01ce 06       		.byte	0x6
 2369 01cf 10       		.byte	0x10
 2370 01d0 7B010000 		.4byte	0x17b
 2371 01d4 09       		.uleb128 0x9
 2372 01d5 1A       		.byte	0x1a
 2373 01d6 07       		.byte	0x7
 2374 01d7 10       		.byte	0x10
 2375 01d8 0D020000 		.4byte	0x20d
 2376 01dc 0B       		.uleb128 0xb
 2377 01dd 8D020000 		.4byte	.LASF33
 2378 01e1 07       		.byte	0x7
 2379 01e2 11       		.byte	0x11
 2380 01e3 0D020000 		.4byte	0x20d
 2381 01e7 00       		.byte	0
 2382 01e8 0B       		.uleb128 0xb
 2383 01e9 13070000 		.4byte	.LASF34
 2384 01ed 07       		.byte	0x7
 2385 01ee 12       		.byte	0x12
 2386 01ef B1000000 		.4byte	0xb1
 2387 01f3 16       		.byte	0x16
 2388 01f4 0B       		.uleb128 0xb
 2389 01f5 34030000 		.4byte	.LASF35
 2390 01f9 07       		.byte	0x7
 2391 01fa 13       		.byte	0x13
 2392 01fb 81000000 		.4byte	0x81
 2393 01ff 18       		.byte	0x18
 2394 0200 0B       		.uleb128 0xb
 2395 0201 17000000 		.4byte	.LASF36
 2396 0205 07       		.byte	0x7
 2397 0206 14       		.byte	0x14
 2398 0207 81000000 		.4byte	0x81
 2399 020b 19       		.byte	0x19
 2400 020c 00       		.byte	0
 2401 020d 07       		.uleb128 0x7
 2402 020e B1000000 		.4byte	0xb1
 2403 0212 1D020000 		.4byte	0x21d
 2404 0216 08       		.uleb128 0x8
 2405 0217 E5000000 		.4byte	0xe5
 2406 021b 0A       		.byte	0xa
 2407 021c 00       		.byte	0
 2408 021d 03       		.uleb128 0x3
 2409 021e 48050000 		.4byte	.LASF37
 2410 0222 07       		.byte	0x7
 2411 0223 15       		.byte	0x15
 2412 0224 D4010000 		.4byte	0x1d4
 2413 0228 09       		.uleb128 0x9
 2414 0229 0C       		.byte	0xc
 2415 022a 08       		.byte	0x8
 2416 022b 17       		.byte	0x17
 2417 022c 55020000 		.4byte	0x255
 2418 0230 0B       		.uleb128 0xb
 2419 0231 95060000 		.4byte	.LASF38
 2420 0235 08       		.byte	0x8
 2421 0236 18       		.byte	0x18
 2422 0237 81000000 		.4byte	0x81
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 59


 2423 023b 00       		.byte	0
 2424 023c 0B       		.uleb128 0xb
 2425 023d 30010000 		.4byte	.LASF39
 2426 0241 08       		.byte	0x8
 2427 0242 19       		.byte	0x19
 2428 0243 C9000000 		.4byte	0xc9
 2429 0247 04       		.byte	0x4
 2430 0248 0A       		.uleb128 0xa
 2431 0249 534E5200 		.ascii	"SNR\000"
 2432 024d 08       		.byte	0x8
 2433 024e 1A       		.byte	0x1a
 2434 024f C9000000 		.4byte	0xc9
 2435 0253 08       		.byte	0x8
 2436 0254 00       		.byte	0
 2437 0255 03       		.uleb128 0x3
 2438 0256 C6060000 		.4byte	.LASF40
 2439 025a 08       		.byte	0x8
 2440 025b 1B       		.byte	0x1b
 2441 025c 28020000 		.4byte	0x228
 2442 0260 09       		.uleb128 0x9
 2443 0261 14       		.byte	0x14
 2444 0262 09       		.byte	0x9
 2445 0263 11       		.byte	0x11
 2446 0264 A5020000 		.4byte	0x2a5
 2447 0268 0B       		.uleb128 0xb
 2448 0269 8D030000 		.4byte	.LASF41
 2449 026d 09       		.byte	0x9
 2450 026e 12       		.byte	0x12
 2451 026f C9000000 		.4byte	0xc9
 2452 0273 00       		.byte	0
 2453 0274 0B       		.uleb128 0xb
 2454 0275 AB010000 		.4byte	.LASF42
 2455 0279 09       		.byte	0x9
 2456 027a 13       		.byte	0x13
 2457 027b C9000000 		.4byte	0xc9
 2458 027f 04       		.byte	0x4
 2459 0280 0B       		.uleb128 0xb
 2460 0281 B9010000 		.4byte	.LASF43
 2461 0285 09       		.byte	0x9
 2462 0286 14       		.byte	0x14
 2463 0287 C9000000 		.4byte	0xc9
 2464 028b 08       		.byte	0x8
 2465 028c 0B       		.uleb128 0xb
 2466 028d 24050000 		.4byte	.LASF44
 2467 0291 09       		.byte	0x9
 2468 0292 15       		.byte	0x15
 2469 0293 C9000000 		.4byte	0xc9
 2470 0297 0C       		.byte	0xc
 2471 0298 0B       		.uleb128 0xb
 2472 0299 95060000 		.4byte	.LASF38
 2473 029d 09       		.byte	0x9
 2474 029e 16       		.byte	0x16
 2475 029f 81000000 		.4byte	0x81
 2476 02a3 10       		.byte	0x10
 2477 02a4 00       		.byte	0
 2478 02a5 03       		.uleb128 0x3
 2479 02a6 27080000 		.4byte	.LASF45
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 60


 2480 02aa 09       		.byte	0x9
 2481 02ab 17       		.byte	0x17
 2482 02ac 60020000 		.4byte	0x260
 2483 02b0 09       		.uleb128 0x9
 2484 02b1 08       		.byte	0x8
 2485 02b2 09       		.byte	0x9
 2486 02b3 19       		.byte	0x19
 2487 02b4 D1020000 		.4byte	0x2d1
 2488 02b8 0B       		.uleb128 0xb
 2489 02b9 84060000 		.4byte	.LASF46
 2490 02bd 09       		.byte	0x9
 2491 02be 1A       		.byte	0x1a
 2492 02bf C9000000 		.4byte	0xc9
 2493 02c3 00       		.byte	0
 2494 02c4 0B       		.uleb128 0xb
 2495 02c5 EE050000 		.4byte	.LASF47
 2496 02c9 09       		.byte	0x9
 2497 02ca 1B       		.byte	0x1b
 2498 02cb C9000000 		.4byte	0xc9
 2499 02cf 04       		.byte	0x4
 2500 02d0 00       		.byte	0
 2501 02d1 03       		.uleb128 0x3
 2502 02d2 DF070000 		.4byte	.LASF48
 2503 02d6 09       		.byte	0x9
 2504 02d7 1C       		.byte	0x1c
 2505 02d8 B0020000 		.4byte	0x2b0
 2506 02dc 0E       		.uleb128 0xe
 2507 02dd 746D00   		.ascii	"tm\000"
 2508 02e0 24       		.byte	0x24
 2509 02e1 0A       		.byte	0xa
 2510 02e2 21       		.byte	0x21
 2511 02e3 54030000 		.4byte	0x354
 2512 02e7 0B       		.uleb128 0xb
 2513 02e8 4A070000 		.4byte	.LASF49
 2514 02ec 0A       		.byte	0xa
 2515 02ed 23       		.byte	0x23
 2516 02ee 68000000 		.4byte	0x68
 2517 02f2 00       		.byte	0
 2518 02f3 0B       		.uleb128 0xb
 2519 02f4 7E040000 		.4byte	.LASF50
 2520 02f8 0A       		.byte	0xa
 2521 02f9 24       		.byte	0x24
 2522 02fa 68000000 		.4byte	0x68
 2523 02fe 04       		.byte	0x4
 2524 02ff 0B       		.uleb128 0xb
 2525 0300 0F000000 		.4byte	.LASF51
 2526 0304 0A       		.byte	0xa
 2527 0305 25       		.byte	0x25
 2528 0306 68000000 		.4byte	0x68
 2529 030a 08       		.byte	0x8
 2530 030b 0B       		.uleb128 0xb
 2531 030c 39070000 		.4byte	.LASF52
 2532 0310 0A       		.byte	0xa
 2533 0311 26       		.byte	0x26
 2534 0312 68000000 		.4byte	0x68
 2535 0316 0C       		.byte	0xc
 2536 0317 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 61


 2537 0318 B8020000 		.4byte	.LASF53
 2538 031c 0A       		.byte	0xa
 2539 031d 27       		.byte	0x27
 2540 031e 68000000 		.4byte	0x68
 2541 0322 10       		.byte	0x10
 2542 0323 0B       		.uleb128 0xb
 2543 0324 F6020000 		.4byte	.LASF54
 2544 0328 0A       		.byte	0xa
 2545 0329 28       		.byte	0x28
 2546 032a 68000000 		.4byte	0x68
 2547 032e 14       		.byte	0x14
 2548 032f 0B       		.uleb128 0xb
 2549 0330 9B060000 		.4byte	.LASF55
 2550 0334 0A       		.byte	0xa
 2551 0335 29       		.byte	0x29
 2552 0336 68000000 		.4byte	0x68
 2553 033a 18       		.byte	0x18
 2554 033b 0B       		.uleb128 0xb
 2555 033c A5040000 		.4byte	.LASF56
 2556 0340 0A       		.byte	0xa
 2557 0341 2A       		.byte	0x2a
 2558 0342 68000000 		.4byte	0x68
 2559 0346 1C       		.byte	0x1c
 2560 0347 0B       		.uleb128 0xb
 2561 0348 C6030000 		.4byte	.LASF57
 2562 034c 0A       		.byte	0xa
 2563 034d 2B       		.byte	0x2b
 2564 034e 68000000 		.4byte	0x68
 2565 0352 20       		.byte	0x20
 2566 0353 00       		.byte	0
 2567 0354 09       		.uleb128 0x9
 2568 0355 2C       		.byte	0x2c
 2569 0356 0B       		.byte	0xb
 2570 0357 14       		.byte	0x14
 2571 0358 81030000 		.4byte	0x381
 2572 035c 0A       		.uleb128 0xa
 2573 035d 6B657900 		.ascii	"key\000"
 2574 0361 0B       		.byte	0xb
 2575 0362 15       		.byte	0x15
 2576 0363 81030000 		.4byte	0x381
 2577 0367 00       		.byte	0
 2578 0368 0B       		.uleb128 0xb
 2579 0369 EB020000 		.4byte	.LASF58
 2580 036d 0B       		.byte	0xb
 2581 036e 16       		.byte	0x16
 2582 036f 81030000 		.4byte	0x381
 2583 0373 14       		.byte	0x14
 2584 0374 0B       		.uleb128 0xb
 2585 0375 DD040000 		.4byte	.LASF59
 2586 0379 0B       		.byte	0xb
 2587 037a 17       		.byte	0x17
 2588 037b BD000000 		.4byte	0xbd
 2589 037f 28       		.byte	0x28
 2590 0380 00       		.byte	0
 2591 0381 07       		.uleb128 0x7
 2592 0382 D7000000 		.4byte	0xd7
 2593 0386 91030000 		.4byte	0x391
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 62


 2594 038a 08       		.uleb128 0x8
 2595 038b E5000000 		.4byte	0xe5
 2596 038f 13       		.byte	0x13
 2597 0390 00       		.byte	0
 2598 0391 03       		.uleb128 0x3
 2599 0392 1D030000 		.4byte	.LASF60
 2600 0396 0B       		.byte	0xb
 2601 0397 19       		.byte	0x19
 2602 0398 54030000 		.4byte	0x354
 2603 039c 09       		.uleb128 0x9
 2604 039d 3C       		.byte	0x3c
 2605 039e 0C       		.byte	0xc
 2606 039f 36       		.byte	0x36
 2607 03a0 C9030000 		.4byte	0x3c9
 2608 03a4 0B       		.uleb128 0xb
 2609 03a5 32070000 		.4byte	.LASF61
 2610 03a9 0C       		.byte	0xc
 2611 03aa 37       		.byte	0x37
 2612 03ab 81030000 		.4byte	0x381
 2613 03af 00       		.byte	0
 2614 03b0 0B       		.uleb128 0xb
 2615 03b1 84020000 		.4byte	.LASF62
 2616 03b5 0C       		.byte	0xc
 2617 03b6 38       		.byte	0x38
 2618 03b7 81030000 		.4byte	0x381
 2619 03bb 14       		.byte	0x14
 2620 03bc 0B       		.uleb128 0xb
 2621 03bd 1F060000 		.4byte	.LASF63
 2622 03c1 0C       		.byte	0xc
 2623 03c2 39       		.byte	0x39
 2624 03c3 81030000 		.4byte	0x381
 2625 03c7 28       		.byte	0x28
 2626 03c8 00       		.byte	0
 2627 03c9 03       		.uleb128 0x3
 2628 03ca F1010000 		.4byte	.LASF64
 2629 03ce 0C       		.byte	0xc
 2630 03cf 3B       		.byte	0x3b
 2631 03d0 9C030000 		.4byte	0x39c
 2632 03d4 09       		.uleb128 0x9
 2633 03d5 20       		.byte	0x20
 2634 03d6 0C       		.byte	0xc
 2635 03d7 3D       		.byte	0x3d
 2636 03d8 3D040000 		.4byte	0x43d
 2637 03dc 0B       		.uleb128 0xb
 2638 03dd FE010000 		.4byte	.LASF65
 2639 03e1 0C       		.byte	0xc
 2640 03e2 3E       		.byte	0x3e
 2641 03e3 68000000 		.4byte	0x68
 2642 03e7 00       		.byte	0
 2643 03e8 0A       		.uleb128 0xa
 2644 03e9 62657200 		.ascii	"ber\000"
 2645 03ed 0C       		.byte	0xc
 2646 03ee 3F       		.byte	0x3f
 2647 03ef 68000000 		.4byte	0x68
 2648 03f3 04       		.byte	0x4
 2649 03f4 0B       		.uleb128 0xb
 2650 03f5 FD050000 		.4byte	.LASF66
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 63


 2651 03f9 0C       		.byte	0xc
 2652 03fa 40       		.byte	0x40
 2653 03fb 68000000 		.4byte	0x68
 2654 03ff 08       		.byte	0x8
 2655 0400 0B       		.uleb128 0xb
 2656 0401 75010000 		.4byte	.LASF67
 2657 0405 0C       		.byte	0xc
 2658 0406 41       		.byte	0x41
 2659 0407 68000000 		.4byte	0x68
 2660 040b 0C       		.byte	0xc
 2661 040c 0B       		.uleb128 0xb
 2662 040d C8050000 		.4byte	.LASF68
 2663 0411 0C       		.byte	0xc
 2664 0412 42       		.byte	0x42
 2665 0413 68000000 		.4byte	0x68
 2666 0417 10       		.byte	0x10
 2667 0418 0B       		.uleb128 0xb
 2668 0419 C3050000 		.4byte	.LASF69
 2669 041d 0C       		.byte	0xc
 2670 041e 43       		.byte	0x43
 2671 041f 68000000 		.4byte	0x68
 2672 0423 14       		.byte	0x14
 2673 0424 0B       		.uleb128 0xb
 2674 0425 88010000 		.4byte	.LASF70
 2675 0429 0C       		.byte	0xc
 2676 042a 44       		.byte	0x44
 2677 042b 68000000 		.4byte	0x68
 2678 042f 18       		.byte	0x18
 2679 0430 0B       		.uleb128 0xb
 2680 0431 0D020000 		.4byte	.LASF71
 2681 0435 0C       		.byte	0xc
 2682 0436 45       		.byte	0x45
 2683 0437 68000000 		.4byte	0x68
 2684 043b 1C       		.byte	0x1c
 2685 043c 00       		.byte	0
 2686 043d 03       		.uleb128 0x3
 2687 043e 76060000 		.4byte	.LASF72
 2688 0442 0C       		.byte	0xc
 2689 0443 47       		.byte	0x47
 2690 0444 D4030000 		.4byte	0x3d4
 2691 0448 09       		.uleb128 0x9
 2692 0449 05       		.byte	0x5
 2693 044a 0C       		.byte	0xc
 2694 044b 53       		.byte	0x53
 2695 044c 8D040000 		.4byte	0x48d
 2696 0450 0B       		.uleb128 0xb
 2697 0451 4A020000 		.4byte	.LASF73
 2698 0455 0C       		.byte	0xc
 2699 0456 55       		.byte	0x55
 2700 0457 81000000 		.4byte	0x81
 2701 045b 00       		.byte	0
 2702 045c 0B       		.uleb128 0xb
 2703 045d C6070000 		.4byte	.LASF74
 2704 0461 0C       		.byte	0xc
 2705 0462 57       		.byte	0x57
 2706 0463 8D040000 		.4byte	0x48d
 2707 0467 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 64


 2708 0468 0B       		.uleb128 0xb
 2709 0469 13080000 		.4byte	.LASF75
 2710 046d 0C       		.byte	0xc
 2711 046e 59       		.byte	0x59
 2712 046f 81000000 		.4byte	0x81
 2713 0473 02       		.byte	0x2
 2714 0474 0B       		.uleb128 0xb
 2715 0475 E4050000 		.4byte	.LASF76
 2716 0479 0C       		.byte	0xc
 2717 047a 5B       		.byte	0x5b
 2718 047b 81000000 		.4byte	0x81
 2719 047f 03       		.byte	0x3
 2720 0480 0B       		.uleb128 0xb
 2721 0481 BF020000 		.4byte	.LASF77
 2722 0485 0C       		.byte	0xc
 2723 0486 5E       		.byte	0x5e
 2724 0487 81000000 		.4byte	0x81
 2725 048b 04       		.byte	0x4
 2726 048c 00       		.byte	0
 2727 048d 02       		.uleb128 0x2
 2728 048e 01       		.byte	0x1
 2729 048f 02       		.byte	0x2
 2730 0490 97050000 		.4byte	.LASF78
 2731 0494 03       		.uleb128 0x3
 2732 0495 4B040000 		.4byte	.LASF79
 2733 0499 0C       		.byte	0xc
 2734 049a 60       		.byte	0x60
 2735 049b 48040000 		.4byte	0x448
 2736 049f 09       		.uleb128 0x9
 2737 04a0 06       		.byte	0x6
 2738 04a1 0D       		.byte	0xd
 2739 04a2 2E       		.byte	0x2e
 2740 04a3 D8040000 		.4byte	0x4d8
 2741 04a7 0B       		.uleb128 0xb
 2742 04a8 A0020000 		.4byte	.LASF80
 2743 04ac 0D       		.byte	0xd
 2744 04ad 30       		.byte	0x30
 2745 04ae 8D000000 		.4byte	0x8d
 2746 04b2 00       		.byte	0
 2747 04b3 0B       		.uleb128 0xb
 2748 04b4 B0070000 		.4byte	.LASF81
 2749 04b8 0D       		.byte	0xd
 2750 04b9 31       		.byte	0x31
 2751 04ba B1000000 		.4byte	0xb1
 2752 04be 02       		.byte	0x2
 2753 04bf 0B       		.uleb128 0xb
 2754 04c0 A2070000 		.4byte	.LASF82
 2755 04c4 0D       		.byte	0xd
 2756 04c5 32       		.byte	0x32
 2757 04c6 81000000 		.4byte	0x81
 2758 04ca 04       		.byte	0x4
 2759 04cb 0B       		.uleb128 0xb
 2760 04cc 51000000 		.4byte	.LASF83
 2761 04d0 0D       		.byte	0xd
 2762 04d1 33       		.byte	0x33
 2763 04d2 81000000 		.4byte	0x81
 2764 04d6 05       		.byte	0x5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 65


 2765 04d7 00       		.byte	0
 2766 04d8 03       		.uleb128 0x3
 2767 04d9 20020000 		.4byte	.LASF84
 2768 04dd 0D       		.byte	0xd
 2769 04de 36       		.byte	0x36
 2770 04df E3040000 		.4byte	0x4e3
 2771 04e3 0C       		.uleb128 0xc
 2772 04e4 9F040000 		.4byte	0x49f
 2773 04e8 09       		.uleb128 0x9
 2774 04e9 1C       		.byte	0x1c
 2775 04ea 0D       		.byte	0xd
 2776 04eb 39       		.byte	0x39
 2777 04ec 09050000 		.4byte	0x509
 2778 04f0 0B       		.uleb128 0xb
 2779 04f1 CF030000 		.4byte	.LASF85
 2780 04f5 0D       		.byte	0xd
 2781 04f6 3B       		.byte	0x3b
 2782 04f7 09050000 		.4byte	0x509
 2783 04fb 00       		.byte	0
 2784 04fc 0B       		.uleb128 0xb
 2785 04fd 05080000 		.4byte	.LASF86
 2786 0501 0D       		.byte	0xd
 2787 0502 3C       		.byte	0x3c
 2788 0503 F2000000 		.4byte	0xf2
 2789 0507 04       		.byte	0x4
 2790 0508 00       		.byte	0
 2791 0509 06       		.uleb128 0x6
 2792 050a 04       		.byte	0x4
 2793 050b C9030000 		.4byte	0x3c9
 2794 050f 03       		.uleb128 0x3
 2795 0510 40040000 		.4byte	.LASF87
 2796 0514 0D       		.byte	0xd
 2797 0515 3E       		.byte	0x3e
 2798 0516 E8040000 		.4byte	0x4e8
 2799 051a 09       		.uleb128 0x9
 2800 051b 68       		.byte	0x68
 2801 051c 0D       		.byte	0xd
 2802 051d 44       		.byte	0x44
 2803 051e 3B050000 		.4byte	0x53b
 2804 0522 0B       		.uleb128 0xb
 2805 0523 DA030000 		.4byte	.LASF88
 2806 0527 0D       		.byte	0xd
 2807 0528 49       		.byte	0x49
 2808 0529 3B050000 		.4byte	0x53b
 2809 052d 00       		.byte	0
 2810 052e 0B       		.uleb128 0xb
 2811 052f BE030000 		.4byte	.LASF89
 2812 0533 0D       		.byte	0xd
 2813 0534 4A       		.byte	0x4a
 2814 0535 68000000 		.4byte	0x68
 2815 0539 64       		.byte	0x64
 2816 053a 00       		.byte	0
 2817 053b 07       		.uleb128 0x7
 2818 053c D7000000 		.4byte	0xd7
 2819 0540 4B050000 		.4byte	0x54b
 2820 0544 08       		.uleb128 0x8
 2821 0545 E5000000 		.4byte	0xe5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 66


 2822 0549 63       		.byte	0x63
 2823 054a 00       		.byte	0
 2824 054b 03       		.uleb128 0x3
 2825 054c AD040000 		.4byte	.LASF90
 2826 0550 0D       		.byte	0xd
 2827 0551 50       		.byte	0x50
 2828 0552 1A050000 		.4byte	0x51a
 2829 0556 0F       		.uleb128 0xf
 2830 0557 69000000 		.4byte	.LASF163
 2831 055b 01       		.byte	0x1
 2832 055c 14       		.byte	0x14
 2833 055d 00000000 		.4byte	.LFB64
 2834 0561 0C000000 		.4byte	.LFE64-.LFB64
 2835 0565 01       		.uleb128 0x1
 2836 0566 9C       		.byte	0x9c
 2837 0567 10       		.uleb128 0x10
 2838 0568 F5070000 		.4byte	.LASF104
 2839 056c 01       		.byte	0x1
 2840 056d 28       		.byte	0x28
 2841 056e 00000000 		.4byte	.LFB65
 2842 0572 2C010000 		.4byte	.LFE65-.LFB65
 2843 0576 01       		.uleb128 0x1
 2844 0577 9C       		.byte	0x9c
 2845 0578 A7050000 		.4byte	0x5a7
 2846 057c 11       		.uleb128 0x11
 2847 057d FB060000 		.4byte	.LASF91
 2848 0581 01       		.byte	0x1
 2849 0582 3E       		.byte	0x3e
 2850 0583 A7050000 		.4byte	0x5a7
 2851 0587 02       		.uleb128 0x2
 2852 0588 91       		.byte	0x91
 2853 0589 64       		.sleb128 -28
 2854 058a 11       		.uleb128 0x11
 2855 058b CF070000 		.4byte	.LASF92
 2856 058f 01       		.byte	0x1
 2857 0590 5B       		.byte	0x5b
 2858 0591 B7050000 		.4byte	0x5b7
 2859 0595 02       		.uleb128 0x2
 2860 0596 91       		.byte	0x91
 2861 0597 58       		.sleb128 -40
 2862 0598 11       		.uleb128 0x11
 2863 0599 6E030000 		.4byte	.LASF93
 2864 059d 01       		.byte	0x1
 2865 059e 60       		.byte	0x60
 2866 059f 81000000 		.4byte	0x81
 2867 05a3 02       		.uleb128 0x2
 2868 05a4 91       		.byte	0x91
 2869 05a5 6F       		.sleb128 -17
 2870 05a6 00       		.byte	0
 2871 05a7 07       		.uleb128 0x7
 2872 05a8 99000000 		.4byte	0x99
 2873 05ac B7050000 		.4byte	0x5b7
 2874 05b0 08       		.uleb128 0x8
 2875 05b1 E5000000 		.4byte	0xe5
 2876 05b5 01       		.byte	0x1
 2877 05b6 00       		.byte	0
 2878 05b7 07       		.uleb128 0x7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 67


 2879 05b8 D7000000 		.4byte	0xd7
 2880 05bc C7050000 		.4byte	0x5c7
 2881 05c0 08       		.uleb128 0x8
 2882 05c1 E5000000 		.4byte	0xe5
 2883 05c5 09       		.byte	0x9
 2884 05c6 00       		.byte	0
 2885 05c7 12       		.uleb128 0x12
 2886 05c8 E7030000 		.4byte	.LASF95
 2887 05cc 01       		.byte	0x1
 2888 05cd 6A       		.byte	0x6a
 2889 05ce 68000000 		.4byte	0x68
 2890 05d2 00000000 		.4byte	.LFB66
 2891 05d6 64000000 		.4byte	.LFE66-.LFB66
 2892 05da 01       		.uleb128 0x1
 2893 05db 9C       		.byte	0x9c
 2894 05dc EF050000 		.4byte	0x5ef
 2895 05e0 11       		.uleb128 0x11
 2896 05e1 7B050000 		.4byte	.LASF94
 2897 05e5 01       		.byte	0x1
 2898 05e6 84       		.byte	0x84
 2899 05e7 81000000 		.4byte	0x81
 2900 05eb 02       		.uleb128 0x2
 2901 05ec 91       		.byte	0x91
 2902 05ed 77       		.sleb128 -9
 2903 05ee 00       		.byte	0
 2904 05ef 13       		.uleb128 0x13
 2905 05f0 21070000 		.4byte	.LASF164
 2906 05f4 01       		.byte	0x1
 2907 05f5 94       		.byte	0x94
 2908 05f6 00000000 		.4byte	.LFB67
 2909 05fa 2A000000 		.4byte	.LFE67-.LFB67
 2910 05fe 01       		.uleb128 0x1
 2911 05ff 9C       		.byte	0x9c
 2912 0600 14       		.uleb128 0x14
 2913 0601 29030000 		.4byte	.LASF96
 2914 0605 01       		.byte	0x1
 2915 0606 B9       		.byte	0xb9
 2916 0607 00000000 		.4byte	.LFB68
 2917 060b 50000000 		.4byte	.LFE68-.LFB68
 2918 060f 01       		.uleb128 0x1
 2919 0610 9C       		.byte	0x9c
 2920 0611 24060000 		.4byte	0x624
 2921 0615 15       		.uleb128 0x15
 2922 0616 62040000 		.4byte	.LASF97
 2923 061a 01       		.byte	0x1
 2924 061b B9       		.byte	0xb9
 2925 061c 81000000 		.4byte	0x81
 2926 0620 02       		.uleb128 0x2
 2927 0621 91       		.byte	0x91
 2928 0622 77       		.sleb128 -9
 2929 0623 00       		.byte	0
 2930 0624 16       		.uleb128 0x16
 2931 0625 EA070000 		.4byte	.LASF101
 2932 0629 01       		.byte	0x1
 2933 062a D0       		.byte	0xd0
 2934 062b 81000000 		.4byte	0x81
 2935 062f 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 68


 2936 0633 48000000 		.4byte	.LFE69-.LFB69
 2937 0637 01       		.uleb128 0x1
 2938 0638 9C       		.byte	0x9c
 2939 0639 5A060000 		.4byte	0x65a
 2940 063d 15       		.uleb128 0x15
 2941 063e 8B040000 		.4byte	.LASF98
 2942 0642 01       		.byte	0x1
 2943 0643 D0       		.byte	0xd0
 2944 0644 5A060000 		.4byte	0x65a
 2945 0648 02       		.uleb128 0x2
 2946 0649 91       		.byte	0x91
 2947 064a 74       		.sleb128 -12
 2948 064b 15       		.uleb128 0x15
 2949 064c 62040000 		.4byte	.LASF97
 2950 0650 01       		.byte	0x1
 2951 0651 D0       		.byte	0xd0
 2952 0652 81000000 		.4byte	0x81
 2953 0656 02       		.uleb128 0x2
 2954 0657 91       		.byte	0x91
 2955 0658 73       		.sleb128 -13
 2956 0659 00       		.byte	0
 2957 065a 06       		.uleb128 0x6
 2958 065b 04       		.byte	0x4
 2959 065c D8040000 		.4byte	0x4d8
 2960 0660 17       		.uleb128 0x17
 2961 0661 CD050000 		.4byte	.LASF99
 2962 0665 01       		.byte	0x1
 2963 0666 E5       		.byte	0xe5
 2964 0667 00000000 		.4byte	.LFB70
 2965 066b 1E000000 		.4byte	.LFE70-.LFB70
 2966 066f 01       		.uleb128 0x1
 2967 0670 9C       		.byte	0x9c
 2968 0671 84060000 		.4byte	0x684
 2969 0675 15       		.uleb128 0x15
 2970 0676 2B060000 		.4byte	.LASF100
 2971 067a 01       		.byte	0x1
 2972 067b E5       		.byte	0xe5
 2973 067c 5A060000 		.4byte	0x65a
 2974 0680 02       		.uleb128 0x2
 2975 0681 91       		.byte	0x91
 2976 0682 74       		.sleb128 -12
 2977 0683 00       		.byte	0
 2978 0684 18       		.uleb128 0x18
 2979 0685 0A050000 		.4byte	.LASF102
 2980 0689 01       		.byte	0x1
 2981 068a EE       		.byte	0xee
 2982 068b D8040000 		.4byte	0x4d8
 2983 068f 00000000 		.4byte	.LFB71
 2984 0693 46000000 		.4byte	.LFE71-.LFB71
 2985 0697 01       		.uleb128 0x1
 2986 0698 9C       		.byte	0x9c
 2987 0699 D6060000 		.4byte	0x6d6
 2988 069d 15       		.uleb128 0x15
 2989 069e A0020000 		.4byte	.LASF80
 2990 06a2 01       		.byte	0x1
 2991 06a3 EE       		.byte	0xee
 2992 06a4 8D000000 		.4byte	0x8d
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 69


 2993 06a8 02       		.uleb128 0x2
 2994 06a9 91       		.byte	0x91
 2995 06aa 6A       		.sleb128 -22
 2996 06ab 15       		.uleb128 0x15
 2997 06ac A2070000 		.4byte	.LASF82
 2998 06b0 01       		.byte	0x1
 2999 06b1 EE       		.byte	0xee
 3000 06b2 81000000 		.4byte	0x81
 3001 06b6 02       		.uleb128 0x2
 3002 06b7 91       		.byte	0x91
 3003 06b8 69       		.sleb128 -23
 3004 06b9 15       		.uleb128 0x15
 3005 06ba 51000000 		.4byte	.LASF83
 3006 06be 01       		.byte	0x1
 3007 06bf EE       		.byte	0xee
 3008 06c0 81000000 		.4byte	0x81
 3009 06c4 02       		.uleb128 0x2
 3010 06c5 91       		.byte	0x91
 3011 06c6 68       		.sleb128 -24
 3012 06c7 11       		.uleb128 0x11
 3013 06c8 41070000 		.4byte	.LASF103
 3014 06cc 01       		.byte	0x1
 3015 06cd F1       		.byte	0xf1
 3016 06ce D8040000 		.4byte	0x4d8
 3017 06d2 02       		.uleb128 0x2
 3018 06d3 91       		.byte	0x91
 3019 06d4 70       		.sleb128 -16
 3020 06d5 00       		.byte	0
 3021 06d6 19       		.uleb128 0x19
 3022 06d7 3A060000 		.4byte	.LASF105
 3023 06db 01       		.byte	0x1
 3024 06dc 0701     		.2byte	0x107
 3025 06de 00000000 		.4byte	.LFB72
 3026 06e2 E0000000 		.4byte	.LFE72-.LFB72
 3027 06e6 01       		.uleb128 0x1
 3028 06e7 9C       		.byte	0x9c
 3029 06e8 2D070000 		.4byte	0x72d
 3030 06ec 1A       		.uleb128 0x1a
 3031 06ed 00000000 		.4byte	.LASF106
 3032 06f1 01       		.byte	0x1
 3033 06f2 1001     		.2byte	0x110
 3034 06f4 C9010000 		.4byte	0x1c9
 3035 06f8 03       		.uleb128 0x3
 3036 06f9 91       		.byte	0x91
 3037 06fa EC7C     		.sleb128 -404
 3038 06fc 1A       		.uleb128 0x1a
 3039 06fd 50010000 		.4byte	.LASF107
 3040 0701 01       		.byte	0x1
 3041 0702 1501     		.2byte	0x115
 3042 0704 C9010000 		.4byte	0x1c9
 3043 0708 03       		.uleb128 0x3
 3044 0709 91       		.byte	0x91
 3045 070a E879     		.sleb128 -792
 3046 070c 1A       		.uleb128 0x1a
 3047 070d 7C070000 		.4byte	.LASF108
 3048 0711 01       		.byte	0x1
 3049 0712 1901     		.2byte	0x119
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 70


 3050 0714 C9010000 		.4byte	0x1c9
 3051 0718 03       		.uleb128 0x3
 3052 0719 91       		.byte	0x91
 3053 071a E476     		.sleb128 -1180
 3054 071c 1A       		.uleb128 0x1a
 3055 071d 15040000 		.4byte	.LASF109
 3056 0721 01       		.byte	0x1
 3057 0722 1D01     		.2byte	0x11d
 3058 0724 C9010000 		.4byte	0x1c9
 3059 0728 03       		.uleb128 0x3
 3060 0729 91       		.byte	0x91
 3061 072a E073     		.sleb128 -1568
 3062 072c 00       		.byte	0
 3063 072d 1B       		.uleb128 0x1b
 3064 072e 00080000 		.4byte	.LASF165
 3065 0732 01       		.byte	0x1
 3066 0733 2701     		.2byte	0x127
 3067 0735 68000000 		.4byte	0x68
 3068 0739 00000000 		.4byte	.LFB73
 3069 073d 1E000000 		.4byte	.LFE73-.LFB73
 3070 0741 01       		.uleb128 0x1
 3071 0742 9C       		.byte	0x9c
 3072 0743 1C       		.uleb128 0x1c
 3073 0744 54020000 		.4byte	.LASF110
 3074 0748 01       		.byte	0x1
 3075 0749 3D01     		.2byte	0x13d
 3076 074b 81000000 		.4byte	0x81
 3077 074f 00000000 		.4byte	.LFB74
 3078 0753 30040000 		.4byte	.LFE74-.LFB74
 3079 0757 01       		.uleb128 0x1
 3080 0758 9C       		.byte	0x9c
 3081 0759 9D080000 		.4byte	0x89d
 3082 075d 1D       		.uleb128 0x1d
 3083 075e 62000000 		.4byte	.LBB2
 3084 0762 B8030000 		.4byte	.LBE2-.LBB2
 3085 0766 1A       		.uleb128 0x1a
 3086 0767 1D050000 		.4byte	.LASF111
 3087 076b 01       		.byte	0x1
 3088 076c 6D01     		.2byte	0x16d
 3089 076e 81030000 		.4byte	0x381
 3090 0772 02       		.uleb128 0x2
 3091 0773 91       		.byte	0x91
 3092 0774 48       		.sleb128 -56
 3093 0775 1A       		.uleb128 0x1a
 3094 0776 2C020000 		.4byte	.LASF112
 3095 077a 01       		.byte	0x1
 3096 077b 7201     		.2byte	0x172
 3097 077d 81030000 		.4byte	0x381
 3098 0781 03       		.uleb128 0x3
 3099 0782 91       		.byte	0x91
 3100 0783 B47F     		.sleb128 -76
 3101 0785 1A       		.uleb128 0x1a
 3102 0786 7A030000 		.4byte	.LASF113
 3103 078a 01       		.byte	0x1
 3104 078b 8501     		.2byte	0x185
 3105 078d 8D000000 		.4byte	0x8d
 3106 0791 02       		.uleb128 0x2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 71


 3107 0792 91       		.byte	0x91
 3108 0793 66       		.sleb128 -26
 3109 0794 1A       		.uleb128 0x1a
 3110 0795 00040000 		.4byte	.LASF114
 3111 0799 01       		.byte	0x1
 3112 079a 8601     		.2byte	0x186
 3113 079c 81030000 		.4byte	0x381
 3114 07a0 03       		.uleb128 0x3
 3115 07a1 91       		.byte	0x91
 3116 07a2 A07F     		.sleb128 -96
 3117 07a4 1A       		.uleb128 0x1a
 3118 07a5 E6060000 		.4byte	.LASF115
 3119 07a9 01       		.byte	0x1
 3120 07aa 9B01     		.2byte	0x19b
 3121 07ac 9D080000 		.4byte	0x89d
 3122 07b0 03       		.uleb128 0x3
 3123 07b1 91       		.byte	0x91
 3124 07b2 B875     		.sleb128 -1352
 3125 07b4 1A       		.uleb128 0x1a
 3126 07b5 5C070000 		.4byte	.LASF30
 3127 07b9 01       		.byte	0x1
 3128 07ba 9C01     		.2byte	0x19c
 3129 07bc 81000000 		.4byte	0x81
 3130 07c0 02       		.uleb128 0x2
 3131 07c1 91       		.byte	0x91
 3132 07c2 65       		.sleb128 -27
 3133 07c3 1A       		.uleb128 0x1a
 3134 07c4 AF060000 		.4byte	.LASF116
 3135 07c8 01       		.byte	0x1
 3136 07c9 A301     		.2byte	0x1a3
 3137 07cb EC000000 		.4byte	0xec
 3138 07cf 02       		.uleb128 0x2
 3139 07d0 91       		.byte	0x91
 3140 07d1 6C       		.sleb128 -20
 3141 07d2 1A       		.uleb128 0x1a
 3142 07d3 6D010000 		.4byte	.LASF117
 3143 07d7 01       		.byte	0x1
 3144 07d8 A701     		.2byte	0x1a7
 3145 07da A5000000 		.4byte	0xa5
 3146 07de 02       		.uleb128 0x2
 3147 07df 91       		.byte	0x91
 3148 07e0 64       		.sleb128 -28
 3149 07e1 1A       		.uleb128 0x1a
 3150 07e2 5D020000 		.4byte	.LASF118
 3151 07e6 01       		.byte	0x1
 3152 07e7 D701     		.2byte	0x1d7
 3153 07e9 4C000000 		.4byte	0x4c
 3154 07ed 02       		.uleb128 0x2
 3155 07ee 91       		.byte	0x91
 3156 07ef 5C       		.sleb128 -36
 3157 07f0 1E       		.uleb128 0x1e
 3158 07f1 CE000000 		.4byte	.LBB3
 3159 07f5 2C000000 		.4byte	.LBE3-.LBB3
 3160 07f9 1D080000 		.4byte	0x81d
 3161 07fd 1A       		.uleb128 0x1a
 3162 07fe 66060000 		.4byte	.LASF119
 3163 0802 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 72


 3164 0803 7A01     		.2byte	0x17a
 3165 0805 8D000000 		.4byte	0x8d
 3166 0809 02       		.uleb128 0x2
 3167 080a 91       		.byte	0x91
 3168 080b 68       		.sleb128 -24
 3169 080c 1A       		.uleb128 0x1a
 3170 080d DF010000 		.4byte	.LASF120
 3171 0811 01       		.byte	0x1
 3172 0812 7B01     		.2byte	0x17b
 3173 0814 81030000 		.4byte	0x381
 3174 0818 03       		.uleb128 0x3
 3175 0819 91       		.byte	0x91
 3176 081a 8C7F     		.sleb128 -116
 3177 081c 00       		.byte	0
 3178 081d 1E       		.uleb128 0x1e
 3179 081e FC000000 		.4byte	.LBB4
 3180 0822 20000000 		.4byte	.LBE4-.LBB4
 3181 0826 3B080000 		.4byte	0x83b
 3182 082a 1A       		.uleb128 0x1a
 3183 082b DF010000 		.4byte	.LASF120
 3184 082f 01       		.byte	0x1
 3185 0830 7F01     		.2byte	0x17f
 3186 0832 81030000 		.4byte	0x381
 3187 0836 03       		.uleb128 0x3
 3188 0837 91       		.byte	0x91
 3189 0838 F87E     		.sleb128 -136
 3190 083a 00       		.byte	0
 3191 083b 1E       		.uleb128 0x1e
 3192 083c 3C020000 		.4byte	.LBB5
 3193 0840 BC000000 		.4byte	.LBE5-.LBB5
 3194 0844 72080000 		.4byte	0x872
 3195 0848 1A       		.uleb128 0x1a
 3196 0849 16050000 		.4byte	.LASF121
 3197 084d 01       		.byte	0x1
 3198 084e AC01     		.2byte	0x1ac
 3199 0850 A5000000 		.4byte	0xa5
 3200 0854 02       		.uleb128 0x2
 3201 0855 91       		.byte	0x91
 3202 0856 6B       		.sleb128 -21
 3203 0857 1D       		.uleb128 0x1d
 3204 0858 44020000 		.4byte	.LBB6
 3205 085c 9A000000 		.4byte	.LBE6-.LBB6
 3206 0860 1A       		.uleb128 0x1a
 3207 0861 47030000 		.4byte	.LASF122
 3208 0865 01       		.byte	0x1
 3209 0866 AE01     		.2byte	0x1ae
 3210 0868 AD080000 		.4byte	0x8ad
 3211 086c 03       		.uleb128 0x3
 3212 086d 91       		.byte	0x91
 3213 086e 8077     		.sleb128 -1152
 3214 0870 00       		.byte	0
 3215 0871 00       		.byte	0
 3216 0872 1D       		.uleb128 0x1d
 3217 0873 12030000 		.4byte	.LBB7
 3218 0877 3A000000 		.4byte	.LBE7-.LBB7
 3219 087b 1A       		.uleb128 0x1a
 3220 087c 3A020000 		.4byte	.LASF123
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 73


 3221 0880 01       		.byte	0x1
 3222 0881 CE01     		.2byte	0x1ce
 3223 0883 68000000 		.4byte	0x68
 3224 0887 02       		.uleb128 0x2
 3225 0888 91       		.byte	0x91
 3226 0889 60       		.sleb128 -32
 3227 088a 1A       		.uleb128 0x1a
 3228 088b D8050000 		.4byte	.LASF124
 3229 088f 01       		.byte	0x1
 3230 0890 CF01     		.2byte	0x1cf
 3231 0892 B7050000 		.4byte	0x5b7
 3232 0896 03       		.uleb128 0x3
 3233 0897 91       		.byte	0x91
 3234 0898 EC7E     		.sleb128 -148
 3235 089a 00       		.byte	0
 3236 089b 00       		.byte	0
 3237 089c 00       		.byte	0
 3238 089d 07       		.uleb128 0x7
 3239 089e D7000000 		.4byte	0xd7
 3240 08a2 AD080000 		.4byte	0x8ad
 3241 08a6 08       		.uleb128 0x8
 3242 08a7 E5000000 		.4byte	0xe5
 3243 08ab C7       		.byte	0xc7
 3244 08ac 00       		.byte	0
 3245 08ad 07       		.uleb128 0x7
 3246 08ae D7000000 		.4byte	0xd7
 3247 08b2 BE080000 		.4byte	0x8be
 3248 08b6 1F       		.uleb128 0x1f
 3249 08b7 E5000000 		.4byte	0xe5
 3250 08bb E803     		.2byte	0x3e8
 3251 08bd 00       		.byte	0
 3252 08be 1C       		.uleb128 0x1c
 3253 08bf 57050000 		.4byte	.LASF125
 3254 08c3 01       		.byte	0x1
 3255 08c4 EC01     		.2byte	0x1ec
 3256 08c6 81000000 		.4byte	0x81
 3257 08ca 00000000 		.4byte	.LFB75
 3258 08ce 44000000 		.4byte	.LFE75-.LFB75
 3259 08d2 01       		.uleb128 0x1
 3260 08d3 9C       		.byte	0x9c
 3261 08d4 F2080000 		.4byte	0x8f2
 3262 08d8 1D       		.uleb128 0x1d
 3263 08d9 20000000 		.4byte	.LBB8
 3264 08dd 1A000000 		.4byte	.LBE8-.LBB8
 3265 08e1 1A       		.uleb128 0x1a
 3266 08e2 5D020000 		.4byte	.LASF118
 3267 08e6 01       		.byte	0x1
 3268 08e7 F701     		.2byte	0x1f7
 3269 08e9 4C000000 		.4byte	0x4c
 3270 08ed 02       		.uleb128 0x2
 3271 08ee 91       		.byte	0x91
 3272 08ef 74       		.sleb128 -12
 3273 08f0 00       		.byte	0
 3274 08f1 00       		.byte	0
 3275 08f2 1C       		.uleb128 0x1c
 3276 08f3 A8030000 		.4byte	.LASF126
 3277 08f7 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 74


 3278 08f8 0C02     		.2byte	0x20c
 3279 08fa 81000000 		.4byte	0x81
 3280 08fe 00000000 		.4byte	.LFB76
 3281 0902 14030000 		.4byte	.LFE76-.LFB76
 3282 0906 01       		.uleb128 0x1
 3283 0907 9C       		.byte	0x9c
 3284 0908 A1090000 		.4byte	0x9a1
 3285 090c 1A       		.uleb128 0x1a
 3286 090d DD040000 		.4byte	.LASF59
 3287 0911 01       		.byte	0x1
 3288 0912 0F02     		.2byte	0x20f
 3289 0914 4C000000 		.4byte	0x4c
 3290 0918 02       		.uleb128 0x2
 3291 0919 91       		.byte	0x91
 3292 091a 6C       		.sleb128 -20
 3293 091b 1A       		.uleb128 0x1a
 3294 091c B5060000 		.4byte	.LASF127
 3295 0920 01       		.byte	0x1
 3296 0921 1002     		.2byte	0x210
 3297 0923 A1090000 		.4byte	0x9a1
 3298 0927 02       		.uleb128 0x2
 3299 0928 91       		.byte	0x91
 3300 0929 4C       		.sleb128 -52
 3301 092a 1A       		.uleb128 0x1a
 3302 092b EB020000 		.4byte	.LASF58
 3303 092f 01       		.byte	0x1
 3304 0930 1402     		.2byte	0x214
 3305 0932 81030000 		.4byte	0x381
 3306 0936 03       		.uleb128 0x3
 3307 0937 91       		.byte	0x91
 3308 0938 B87F     		.sleb128 -72
 3309 093a 1A       		.uleb128 0x1a
 3310 093b 52030000 		.4byte	.LASF128
 3311 093f 01       		.byte	0x1
 3312 0940 4802     		.2byte	0x248
 3313 0942 A5020000 		.4byte	0x2a5
 3314 0946 03       		.uleb128 0x3
 3315 0947 91       		.byte	0x91
 3316 0948 A47F     		.sleb128 -92
 3317 094a 1E       		.uleb128 0x1e
 3318 094b 22000000 		.4byte	.LBB9
 3319 094f 7A000000 		.4byte	.LBE9-.LBB9
 3320 0953 68090000 		.4byte	0x968
 3321 0957 1A       		.uleb128 0x1a
 3322 0958 04070000 		.4byte	.LASF129
 3323 095c 01       		.byte	0x1
 3324 095d 1A02     		.2byte	0x21a
 3325 095f 1D020000 		.4byte	0x21d
 3326 0963 03       		.uleb128 0x3
 3327 0964 91       		.byte	0x91
 3328 0965 887F     		.sleb128 -120
 3329 0967 00       		.byte	0
 3330 0968 1E       		.uleb128 0x1e
 3331 0969 A4000000 		.4byte	.LBB10
 3332 096d 82000000 		.4byte	.LBE10-.LBB10
 3333 0971 86090000 		.4byte	0x986
 3334 0975 1A       		.uleb128 0x1a
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 75


 3335 0976 29070000 		.4byte	.LASF130
 3336 097a 01       		.byte	0x1
 3337 097b 3102     		.2byte	0x231
 3338 097d 55020000 		.4byte	0x255
 3339 0981 03       		.uleb128 0x3
 3340 0982 91       		.byte	0x91
 3341 0983 FC7E     		.sleb128 -132
 3342 0985 00       		.byte	0
 3343 0986 1D       		.uleb128 0x1d
 3344 0987 AA010000 		.4byte	.LBB11
 3345 098b EE000000 		.4byte	.LBE11-.LBB11
 3346 098f 1A       		.uleb128 0x1a
 3347 0990 51070000 		.4byte	.LASF131
 3348 0994 01       		.byte	0x1
 3349 0995 6302     		.2byte	0x263
 3350 0997 D1020000 		.4byte	0x2d1
 3351 099b 03       		.uleb128 0x3
 3352 099c 91       		.byte	0x91
 3353 099d F47E     		.sleb128 -140
 3354 099f 00       		.byte	0
 3355 09a0 00       		.byte	0
 3356 09a1 07       		.uleb128 0x7
 3357 09a2 D7000000 		.4byte	0xd7
 3358 09a6 B1090000 		.4byte	0x9b1
 3359 09aa 08       		.uleb128 0x8
 3360 09ab E5000000 		.4byte	0xe5
 3361 09af 1F       		.byte	0x1f
 3362 09b0 00       		.byte	0
 3363 09b1 20       		.uleb128 0x20
 3364 09b2 15030000 		.4byte	.LASF132
 3365 09b6 01       		.byte	0x1
 3366 09b7 8902     		.2byte	0x289
 3367 09b9 81000000 		.4byte	0x81
 3368 09bd 00000000 		.4byte	.LFB77
 3369 09c1 74000000 		.4byte	.LFE77-.LFB77
 3370 09c5 01       		.uleb128 0x1
 3371 09c6 9C       		.byte	0x9c
 3372 09c7 F7090000 		.4byte	0x9f7
 3373 09cb 21       		.uleb128 0x21
 3374 09cc DD040000 		.4byte	.LASF59
 3375 09d0 01       		.byte	0x1
 3376 09d1 8902     		.2byte	0x289
 3377 09d3 4C000000 		.4byte	0x4c
 3378 09d7 02       		.uleb128 0x2
 3379 09d8 91       		.byte	0x91
 3380 09d9 64       		.sleb128 -28
 3381 09da 22       		.uleb128 0x22
 3382 09db 7400     		.ascii	"t\000"
 3383 09dd 01       		.byte	0x1
 3384 09de 9002     		.2byte	0x290
 3385 09e0 F7090000 		.4byte	0x9f7
 3386 09e4 02       		.uleb128 0x2
 3387 09e5 91       		.byte	0x91
 3388 09e6 74       		.sleb128 -12
 3389 09e7 1A       		.uleb128 0x1a
 3390 09e8 BC040000 		.4byte	.LASF133
 3391 09ec 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 76


 3392 09ed 9502     		.2byte	0x295
 3393 09ef 6B010000 		.4byte	0x16b
 3394 09f3 02       		.uleb128 0x2
 3395 09f4 91       		.byte	0x91
 3396 09f5 68       		.sleb128 -24
 3397 09f6 00       		.byte	0
 3398 09f7 06       		.uleb128 0x6
 3399 09f8 04       		.byte	0x4
 3400 09f9 DC020000 		.4byte	0x2dc
 3401 09fd 20       		.uleb128 0x20
 3402 09fe AF020000 		.4byte	.LASF134
 3403 0a02 01       		.byte	0x1
 3404 0a03 B202     		.2byte	0x2b2
 3405 0a05 81000000 		.4byte	0x81
 3406 0a09 00000000 		.4byte	.LFB78
 3407 0a0d 38010000 		.4byte	.LFE78-.LFB78
 3408 0a11 01       		.uleb128 0x1
 3409 0a12 9C       		.byte	0x9c
 3410 0a13 760A0000 		.4byte	0xa76
 3411 0a17 21       		.uleb128 0x21
 3412 0a18 F1020000 		.4byte	.LASF135
 3413 0a1c 01       		.byte	0x1
 3414 0a1d B202     		.2byte	0x2b2
 3415 0a1f EC000000 		.4byte	0xec
 3416 0a23 03       		.uleb128 0x3
 3417 0a24 91       		.byte	0x91
 3418 0a25 9C7E     		.sleb128 -228
 3419 0a27 21       		.uleb128 0x21
 3420 0a28 CB020000 		.4byte	.LASF136
 3421 0a2c 01       		.byte	0x1
 3422 0a2d B202     		.2byte	0x2b2
 3423 0a2f 68000000 		.4byte	0x68
 3424 0a33 03       		.uleb128 0x3
 3425 0a34 91       		.byte	0x91
 3426 0a35 987E     		.sleb128 -232
 3427 0a37 21       		.uleb128 0x21
 3428 0a38 85040000 		.4byte	.LASF137
 3429 0a3c 01       		.byte	0x1
 3430 0a3d B202     		.2byte	0x2b2
 3431 0a3f EC000000 		.4byte	0xec
 3432 0a43 03       		.uleb128 0x3
 3433 0a44 91       		.byte	0x91
 3434 0a45 947E     		.sleb128 -236
 3435 0a47 1A       		.uleb128 0x1a
 3436 0a48 D0010000 		.4byte	.LASF138
 3437 0a4c 01       		.byte	0x1
 3438 0a4d B402     		.2byte	0x2b4
 3439 0a4f 81000000 		.4byte	0x81
 3440 0a53 02       		.uleb128 0x2
 3441 0a54 91       		.byte	0x91
 3442 0a55 77       		.sleb128 -9
 3443 0a56 1A       		.uleb128 0x1a
 3444 0a57 3C000000 		.4byte	.LASF139
 3445 0a5b 01       		.byte	0x1
 3446 0a5c BB02     		.2byte	0x2bb
 3447 0a5e 760A0000 		.4byte	0xa76
 3448 0a62 02       		.uleb128 0x2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 77


 3449 0a63 91       		.byte	0x91
 3450 0a64 68       		.sleb128 -24
 3451 0a65 1A       		.uleb128 0x1a
 3452 0a66 E6060000 		.4byte	.LASF115
 3453 0a6a 01       		.byte	0x1
 3454 0a6b C302     		.2byte	0x2c3
 3455 0a6d 9D080000 		.4byte	0x89d
 3456 0a71 03       		.uleb128 0x3
 3457 0a72 91       		.byte	0x91
 3458 0a73 A07E     		.sleb128 -224
 3459 0a75 00       		.byte	0
 3460 0a76 07       		.uleb128 0x7
 3461 0a77 D7000000 		.4byte	0xd7
 3462 0a7b 860A0000 		.4byte	0xa86
 3463 0a7f 08       		.uleb128 0x8
 3464 0a80 E5000000 		.4byte	0xe5
 3465 0a84 0B       		.byte	0xb
 3466 0a85 00       		.byte	0
 3467 0a86 23       		.uleb128 0x23
 3468 0a87 43010000 		.4byte	.LASF140
 3469 0a8b 0E       		.byte	0xe
 3470 0a8c 1207     		.2byte	0x712
 3471 0a8e 920A0000 		.4byte	0xa92
 3472 0a92 0C       		.uleb128 0xc
 3473 0a93 76000000 		.4byte	0x76
 3474 0a97 24       		.uleb128 0x24
 3475 0a98 2C000000 		.4byte	.LASF141
 3476 0a9c 0B       		.byte	0xb
 3477 0a9d 11       		.byte	0x11
 3478 0a9e 8D040000 		.4byte	0x48d
 3479 0aa2 05       		.uleb128 0x5
 3480 0aa3 03       		.byte	0x3
 3481 0aa4 00000000 		.4byte	buffer_overflow
 3482 0aa8 24       		.uleb128 0x24
 3483 0aa9 6C040000 		.4byte	.LASF142
 3484 0aad 0B       		.byte	0xb
 3485 0aae 22       		.byte	0x22
 3486 0aaf 8D000000 		.4byte	0x8d
 3487 0ab3 05       		.uleb128 0x5
 3488 0ab4 03       		.byte	0x3
 3489 0ab5 00000000 		.4byte	dataPointsInStack
 3490 0ab9 24       		.uleb128 0x24
 3491 0aba 63070000 		.4byte	.LASF143
 3492 0abe 0B       		.byte	0xb
 3493 0abf 23       		.byte	0x23
 3494 0ac0 8D000000 		.4byte	0x8d
 3495 0ac4 05       		.uleb128 0x5
 3496 0ac5 03       		.byte	0x3
 3497 0ac6 00000000 		.4byte	dataPointsInStackDesired
 3498 0aca 07       		.uleb128 0x7
 3499 0acb 91030000 		.4byte	0x391
 3500 0acf DA0A0000 		.4byte	0xada
 3501 0ad3 08       		.uleb128 0x8
 3502 0ad4 E5000000 		.4byte	0xe5
 3503 0ad8 95       		.byte	0x95
 3504 0ad9 00       		.byte	0
 3505 0ada 24       		.uleb128 0x24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 78


 3506 0adb B9030000 		.4byte	.LASF144
 3507 0adf 0B       		.byte	0xb
 3508 0ae0 24       		.byte	0x24
 3509 0ae1 CA0A0000 		.4byte	0xaca
 3510 0ae5 05       		.uleb128 0x5
 3511 0ae6 03       		.byte	0x3
 3512 0ae7 00000000 		.4byte	data
 3513 0aeb 24       		.uleb128 0x24
 3514 0aec 24010000 		.4byte	.LASF145
 3515 0af0 0C       		.byte	0xc
 3516 0af1 20       		.byte	0x20
 3517 0af2 81000000 		.4byte	0x81
 3518 0af6 05       		.uleb128 0x5
 3519 0af7 03       		.byte	0x3
 3520 0af8 00000000 		.4byte	modem_state
 3521 0afc 24       		.uleb128 0x24
 3522 0afd 29040000 		.4byte	.LASF146
 3523 0b01 0C       		.byte	0xc
 3524 0b02 63       		.byte	0x63
 3525 0b03 BD000000 		.4byte	0xbd
 3526 0b07 05       		.uleb128 0x5
 3527 0b08 03       		.byte	0x3
 3528 0b09 00000000 		.4byte	modem_start_time_stamp
 3529 0b0d 24       		.uleb128 0x24
 3530 0b0e CF030000 		.4byte	.LASF85
 3531 0b12 0C       		.byte	0xc
 3532 0b13 64       		.byte	0x64
 3533 0b14 C9030000 		.4byte	0x3c9
 3534 0b18 05       		.uleb128 0x5
 3535 0b19 03       		.byte	0x3
 3536 0b1a 00000000 		.4byte	modem_info
 3537 0b1e 24       		.uleb128 0x24
 3538 0b1f CF060000 		.4byte	.LASF147
 3539 0b23 0C       		.byte	0xc
 3540 0b24 65       		.byte	0x65
 3541 0b25 3D040000 		.4byte	0x43d
 3542 0b29 05       		.uleb128 0x5
 3543 0b2a 03       		.byte	0x3
 3544 0b2b 00000000 		.4byte	modem_stats
 3545 0b2f 24       		.uleb128 0x24
 3546 0b30 F5040000 		.4byte	.LASF148
 3547 0b34 0C       		.byte	0xc
 3548 0b35 66       		.byte	0x66
 3549 0b36 94040000 		.4byte	0x494
 3550 0b3a 05       		.uleb128 0x5
 3551 0b3b 03       		.byte	0x3
 3552 0b3c 00000000 		.4byte	updatable_parameters
 3553 0b40 07       		.uleb128 0x7
 3554 0b41 D7000000 		.4byte	0xd7
 3555 0b45 510B0000 		.4byte	0xb51
 3556 0b49 1F       		.uleb128 0x1f
 3557 0b4a E5000000 		.4byte	0xe5
 3558 0b4e 0F27     		.2byte	0x270f
 3559 0b50 00       		.byte	0
 3560 0b51 24       		.uleb128 0x24
 3561 0b52 35050000 		.4byte	.LASF149
 3562 0b56 0D       		.byte	0xd
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 79


 3563 0b57 18       		.byte	0x18
 3564 0b58 400B0000 		.4byte	0xb40
 3565 0b5c 05       		.uleb128 0x5
 3566 0b5d 03       		.byte	0x3
 3567 0b5e 00000000 		.4byte	http_request
 3568 0b62 24       		.uleb128 0x24
 3569 0b63 92070000 		.4byte	.LASF150
 3570 0b67 0D       		.byte	0xd
 3571 0b68 19       		.byte	0x19
 3572 0b69 400B0000 		.4byte	0xb40
 3573 0b6d 05       		.uleb128 0x5
 3574 0b6e 03       		.byte	0x3
 3575 0b6f 00000000 		.4byte	http_body
 3576 0b73 24       		.uleb128 0x24
 3577 0b74 DB060000 		.4byte	.LASF151
 3578 0b78 0D       		.byte	0xd
 3579 0b79 1A       		.byte	0x1a
 3580 0b7a 9D080000 		.4byte	0x89d
 3581 0b7e 05       		.uleb128 0x5
 3582 0b7f 03       		.byte	0x3
 3583 0b80 00000000 		.4byte	http_route
 3584 0b84 24       		.uleb128 0x24
 3585 0b85 13060000 		.4byte	.LASF152
 3586 0b89 0D       		.byte	0xd
 3587 0b8a 41       		.byte	0x41
 3588 0b8b 0F050000 		.4byte	0x50f
 3589 0b8f 05       		.uleb128 0x5
 3590 0b90 03       		.byte	0x3
 3591 0b91 00000000 		.4byte	system_info
 3592 0b95 24       		.uleb128 0x24
 3593 0b96 B3050000 		.4byte	.LASF153
 3594 0b9a 0D       		.byte	0xd
 3595 0b9b 53       		.byte	0x53
 3596 0b9c 4B050000 		.4byte	0x54b
 3597 0ba0 05       		.uleb128 0x5
 3598 0ba1 03       		.byte	0x3
 3599 0ba2 00000000 		.4byte	system_settings
 3600 0ba6 24       		.uleb128 0x24
 3601 0ba7 36010000 		.4byte	.LASF154
 3602 0bab 0D       		.byte	0xd
 3603 0bac 6F       		.byte	0x6f
 3604 0bad D8040000 		.4byte	0x4d8
 3605 0bb1 05       		.uleb128 0x5
 3606 0bb2 03       		.byte	0x3
 3607 0bb3 00000000 		.4byte	alarmMeasure
 3608 0bb7 24       		.uleb128 0x24
 3609 0bb8 7A010000 		.4byte	.LASF155
 3610 0bbc 0D       		.byte	0xd
 3611 0bbd 70       		.byte	0x70
 3612 0bbe 81000000 		.4byte	0x81
 3613 0bc2 05       		.uleb128 0x5
 3614 0bc3 03       		.byte	0x3
 3615 0bc4 00000000 		.4byte	timeToMeasure
 3616 0bc8 24       		.uleb128 0x24
 3617 0bc9 FE020000 		.4byte	.LASF156
 3618 0bcd 0D       		.byte	0xd
 3619 0bce 71       		.byte	0x71
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 80


 3620 0bcf D8040000 		.4byte	0x4d8
 3621 0bd3 05       		.uleb128 0x5
 3622 0bd4 03       		.byte	0x3
 3623 0bd5 00000000 		.4byte	alarmSync
 3624 0bd9 24       		.uleb128 0x24
 3625 0bda A0010000 		.4byte	.LASF157
 3626 0bde 0D       		.byte	0xd
 3627 0bdf 72       		.byte	0x72
 3628 0be0 81000000 		.4byte	0x81
 3629 0be4 05       		.uleb128 0x5
 3630 0be5 03       		.byte	0x3
 3631 0be6 00000000 		.4byte	timeToSync
 3632 0bea 24       		.uleb128 0x24
 3633 0beb C6040000 		.4byte	.LASF158
 3634 0bef 0D       		.byte	0xd
 3635 0bf0 73       		.byte	0x73
 3636 0bf1 81000000 		.4byte	0x81
 3637 0bf5 05       		.uleb128 0x5
 3638 0bf6 03       		.byte	0x3
 3639 0bf7 00000000 		.4byte	timeToSycnRemoteParams
 3640 0bfb 25       		.uleb128 0x25
 3641 0bfc 68657900 		.ascii	"hey\000"
 3642 0c00 0D       		.byte	0xd
 3643 0c01 74       		.byte	0x74
 3644 0c02 81000000 		.4byte	0x81
 3645 0c06 05       		.uleb128 0x5
 3646 0c07 03       		.byte	0x3
 3647 0c08 00000000 		.4byte	hey
 3648 0c0c 07       		.uleb128 0x7
 3649 0c0d D7000000 		.4byte	0xd7
 3650 0c11 1C0C0000 		.4byte	0xc1c
 3651 0c15 08       		.uleb128 0x8
 3652 0c16 E5000000 		.4byte	0xe5
 3653 0c1a 1D       		.byte	0x1d
 3654 0c1b 00       		.byte	0
 3655 0c1c 24       		.uleb128 0x24
 3656 0c1d 6D050000 		.4byte	.LASF159
 3657 0c21 01       		.byte	0x1
 3658 0c22 1D       		.byte	0x1d
 3659 0c23 0C0C0000 		.4byte	0xc0c
 3660 0c27 05       		.uleb128 0x5
 3661 0c28 03       		.byte	0x3
 3662 0c29 00000000 		.4byte	Data_fileName
 3663 0c2d 24       		.uleb128 0x24
 3664 0c2e 6E030000 		.4byte	.LASF93
 3665 0c32 01       		.byte	0x1
 3666 0c33 1E       		.byte	0x1e
 3667 0c34 81000000 		.4byte	0x81
 3668 0c38 05       		.uleb128 0x5
 3669 0c39 03       		.byte	0x3
 3670 0c3a 00000000 		.4byte	try_counter
 3671 0c3e 00       		.byte	0
 3672              		.section	.debug_abbrev,"",%progbits
 3673              	.Ldebug_abbrev0:
 3674 0000 01       		.uleb128 0x1
 3675 0001 11       		.uleb128 0x11
 3676 0002 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 81


 3677 0003 25       		.uleb128 0x25
 3678 0004 0E       		.uleb128 0xe
 3679 0005 13       		.uleb128 0x13
 3680 0006 0B       		.uleb128 0xb
 3681 0007 03       		.uleb128 0x3
 3682 0008 0E       		.uleb128 0xe
 3683 0009 1B       		.uleb128 0x1b
 3684 000a 0E       		.uleb128 0xe
 3685 000b 55       		.uleb128 0x55
 3686 000c 17       		.uleb128 0x17
 3687 000d 11       		.uleb128 0x11
 3688 000e 01       		.uleb128 0x1
 3689 000f 10       		.uleb128 0x10
 3690 0010 17       		.uleb128 0x17
 3691 0011 00       		.byte	0
 3692 0012 00       		.byte	0
 3693 0013 02       		.uleb128 0x2
 3694 0014 24       		.uleb128 0x24
 3695 0015 00       		.byte	0
 3696 0016 0B       		.uleb128 0xb
 3697 0017 0B       		.uleb128 0xb
 3698 0018 3E       		.uleb128 0x3e
 3699 0019 0B       		.uleb128 0xb
 3700 001a 03       		.uleb128 0x3
 3701 001b 0E       		.uleb128 0xe
 3702 001c 00       		.byte	0
 3703 001d 00       		.byte	0
 3704 001e 03       		.uleb128 0x3
 3705 001f 16       		.uleb128 0x16
 3706 0020 00       		.byte	0
 3707 0021 03       		.uleb128 0x3
 3708 0022 0E       		.uleb128 0xe
 3709 0023 3A       		.uleb128 0x3a
 3710 0024 0B       		.uleb128 0xb
 3711 0025 3B       		.uleb128 0x3b
 3712 0026 0B       		.uleb128 0xb
 3713 0027 49       		.uleb128 0x49
 3714 0028 13       		.uleb128 0x13
 3715 0029 00       		.byte	0
 3716 002a 00       		.byte	0
 3717 002b 04       		.uleb128 0x4
 3718 002c 24       		.uleb128 0x24
 3719 002d 00       		.byte	0
 3720 002e 0B       		.uleb128 0xb
 3721 002f 0B       		.uleb128 0xb
 3722 0030 3E       		.uleb128 0x3e
 3723 0031 0B       		.uleb128 0xb
 3724 0032 03       		.uleb128 0x3
 3725 0033 08       		.uleb128 0x8
 3726 0034 00       		.byte	0
 3727 0035 00       		.byte	0
 3728 0036 05       		.uleb128 0x5
 3729 0037 16       		.uleb128 0x16
 3730 0038 00       		.byte	0
 3731 0039 03       		.uleb128 0x3
 3732 003a 0E       		.uleb128 0xe
 3733 003b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 82


 3734 003c 0B       		.uleb128 0xb
 3735 003d 3B       		.uleb128 0x3b
 3736 003e 05       		.uleb128 0x5
 3737 003f 49       		.uleb128 0x49
 3738 0040 13       		.uleb128 0x13
 3739 0041 00       		.byte	0
 3740 0042 00       		.byte	0
 3741 0043 06       		.uleb128 0x6
 3742 0044 0F       		.uleb128 0xf
 3743 0045 00       		.byte	0
 3744 0046 0B       		.uleb128 0xb
 3745 0047 0B       		.uleb128 0xb
 3746 0048 49       		.uleb128 0x49
 3747 0049 13       		.uleb128 0x13
 3748 004a 00       		.byte	0
 3749 004b 00       		.byte	0
 3750 004c 07       		.uleb128 0x7
 3751 004d 01       		.uleb128 0x1
 3752 004e 01       		.byte	0x1
 3753 004f 49       		.uleb128 0x49
 3754 0050 13       		.uleb128 0x13
 3755 0051 01       		.uleb128 0x1
 3756 0052 13       		.uleb128 0x13
 3757 0053 00       		.byte	0
 3758 0054 00       		.byte	0
 3759 0055 08       		.uleb128 0x8
 3760 0056 21       		.uleb128 0x21
 3761 0057 00       		.byte	0
 3762 0058 49       		.uleb128 0x49
 3763 0059 13       		.uleb128 0x13
 3764 005a 2F       		.uleb128 0x2f
 3765 005b 0B       		.uleb128 0xb
 3766 005c 00       		.byte	0
 3767 005d 00       		.byte	0
 3768 005e 09       		.uleb128 0x9
 3769 005f 13       		.uleb128 0x13
 3770 0060 01       		.byte	0x1
 3771 0061 0B       		.uleb128 0xb
 3772 0062 0B       		.uleb128 0xb
 3773 0063 3A       		.uleb128 0x3a
 3774 0064 0B       		.uleb128 0xb
 3775 0065 3B       		.uleb128 0x3b
 3776 0066 0B       		.uleb128 0xb
 3777 0067 01       		.uleb128 0x1
 3778 0068 13       		.uleb128 0x13
 3779 0069 00       		.byte	0
 3780 006a 00       		.byte	0
 3781 006b 0A       		.uleb128 0xa
 3782 006c 0D       		.uleb128 0xd
 3783 006d 00       		.byte	0
 3784 006e 03       		.uleb128 0x3
 3785 006f 08       		.uleb128 0x8
 3786 0070 3A       		.uleb128 0x3a
 3787 0071 0B       		.uleb128 0xb
 3788 0072 3B       		.uleb128 0x3b
 3789 0073 0B       		.uleb128 0xb
 3790 0074 49       		.uleb128 0x49
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 83


 3791 0075 13       		.uleb128 0x13
 3792 0076 38       		.uleb128 0x38
 3793 0077 0B       		.uleb128 0xb
 3794 0078 00       		.byte	0
 3795 0079 00       		.byte	0
 3796 007a 0B       		.uleb128 0xb
 3797 007b 0D       		.uleb128 0xd
 3798 007c 00       		.byte	0
 3799 007d 03       		.uleb128 0x3
 3800 007e 0E       		.uleb128 0xe
 3801 007f 3A       		.uleb128 0x3a
 3802 0080 0B       		.uleb128 0xb
 3803 0081 3B       		.uleb128 0x3b
 3804 0082 0B       		.uleb128 0xb
 3805 0083 49       		.uleb128 0x49
 3806 0084 13       		.uleb128 0x13
 3807 0085 38       		.uleb128 0x38
 3808 0086 0B       		.uleb128 0xb
 3809 0087 00       		.byte	0
 3810 0088 00       		.byte	0
 3811 0089 0C       		.uleb128 0xc
 3812 008a 35       		.uleb128 0x35
 3813 008b 00       		.byte	0
 3814 008c 49       		.uleb128 0x49
 3815 008d 13       		.uleb128 0x13
 3816 008e 00       		.byte	0
 3817 008f 00       		.byte	0
 3818 0090 0D       		.uleb128 0xd
 3819 0091 13       		.uleb128 0x13
 3820 0092 01       		.byte	0x1
 3821 0093 0B       		.uleb128 0xb
 3822 0094 05       		.uleb128 0x5
 3823 0095 3A       		.uleb128 0x3a
 3824 0096 0B       		.uleb128 0xb
 3825 0097 3B       		.uleb128 0x3b
 3826 0098 0B       		.uleb128 0xb
 3827 0099 01       		.uleb128 0x1
 3828 009a 13       		.uleb128 0x13
 3829 009b 00       		.byte	0
 3830 009c 00       		.byte	0
 3831 009d 0E       		.uleb128 0xe
 3832 009e 13       		.uleb128 0x13
 3833 009f 01       		.byte	0x1
 3834 00a0 03       		.uleb128 0x3
 3835 00a1 08       		.uleb128 0x8
 3836 00a2 0B       		.uleb128 0xb
 3837 00a3 0B       		.uleb128 0xb
 3838 00a4 3A       		.uleb128 0x3a
 3839 00a5 0B       		.uleb128 0xb
 3840 00a6 3B       		.uleb128 0x3b
 3841 00a7 0B       		.uleb128 0xb
 3842 00a8 01       		.uleb128 0x1
 3843 00a9 13       		.uleb128 0x13
 3844 00aa 00       		.byte	0
 3845 00ab 00       		.byte	0
 3846 00ac 0F       		.uleb128 0xf
 3847 00ad 2E       		.uleb128 0x2e
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 84


 3848 00ae 00       		.byte	0
 3849 00af 3F       		.uleb128 0x3f
 3850 00b0 19       		.uleb128 0x19
 3851 00b1 03       		.uleb128 0x3
 3852 00b2 0E       		.uleb128 0xe
 3853 00b3 3A       		.uleb128 0x3a
 3854 00b4 0B       		.uleb128 0xb
 3855 00b5 3B       		.uleb128 0x3b
 3856 00b6 0B       		.uleb128 0xb
 3857 00b7 27       		.uleb128 0x27
 3858 00b8 19       		.uleb128 0x19
 3859 00b9 11       		.uleb128 0x11
 3860 00ba 01       		.uleb128 0x1
 3861 00bb 12       		.uleb128 0x12
 3862 00bc 06       		.uleb128 0x6
 3863 00bd 40       		.uleb128 0x40
 3864 00be 18       		.uleb128 0x18
 3865 00bf 9642     		.uleb128 0x2116
 3866 00c1 19       		.uleb128 0x19
 3867 00c2 00       		.byte	0
 3868 00c3 00       		.byte	0
 3869 00c4 10       		.uleb128 0x10
 3870 00c5 2E       		.uleb128 0x2e
 3871 00c6 01       		.byte	0x1
 3872 00c7 3F       		.uleb128 0x3f
 3873 00c8 19       		.uleb128 0x19
 3874 00c9 03       		.uleb128 0x3
 3875 00ca 0E       		.uleb128 0xe
 3876 00cb 3A       		.uleb128 0x3a
 3877 00cc 0B       		.uleb128 0xb
 3878 00cd 3B       		.uleb128 0x3b
 3879 00ce 0B       		.uleb128 0xb
 3880 00cf 11       		.uleb128 0x11
 3881 00d0 01       		.uleb128 0x1
 3882 00d1 12       		.uleb128 0x12
 3883 00d2 06       		.uleb128 0x6
 3884 00d3 40       		.uleb128 0x40
 3885 00d4 18       		.uleb128 0x18
 3886 00d5 9642     		.uleb128 0x2116
 3887 00d7 19       		.uleb128 0x19
 3888 00d8 01       		.uleb128 0x1
 3889 00d9 13       		.uleb128 0x13
 3890 00da 00       		.byte	0
 3891 00db 00       		.byte	0
 3892 00dc 11       		.uleb128 0x11
 3893 00dd 34       		.uleb128 0x34
 3894 00de 00       		.byte	0
 3895 00df 03       		.uleb128 0x3
 3896 00e0 0E       		.uleb128 0xe
 3897 00e1 3A       		.uleb128 0x3a
 3898 00e2 0B       		.uleb128 0xb
 3899 00e3 3B       		.uleb128 0x3b
 3900 00e4 0B       		.uleb128 0xb
 3901 00e5 49       		.uleb128 0x49
 3902 00e6 13       		.uleb128 0x13
 3903 00e7 02       		.uleb128 0x2
 3904 00e8 18       		.uleb128 0x18
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 85


 3905 00e9 00       		.byte	0
 3906 00ea 00       		.byte	0
 3907 00eb 12       		.uleb128 0x12
 3908 00ec 2E       		.uleb128 0x2e
 3909 00ed 01       		.byte	0x1
 3910 00ee 3F       		.uleb128 0x3f
 3911 00ef 19       		.uleb128 0x19
 3912 00f0 03       		.uleb128 0x3
 3913 00f1 0E       		.uleb128 0xe
 3914 00f2 3A       		.uleb128 0x3a
 3915 00f3 0B       		.uleb128 0xb
 3916 00f4 3B       		.uleb128 0x3b
 3917 00f5 0B       		.uleb128 0xb
 3918 00f6 49       		.uleb128 0x49
 3919 00f7 13       		.uleb128 0x13
 3920 00f8 11       		.uleb128 0x11
 3921 00f9 01       		.uleb128 0x1
 3922 00fa 12       		.uleb128 0x12
 3923 00fb 06       		.uleb128 0x6
 3924 00fc 40       		.uleb128 0x40
 3925 00fd 18       		.uleb128 0x18
 3926 00fe 9642     		.uleb128 0x2116
 3927 0100 19       		.uleb128 0x19
 3928 0101 01       		.uleb128 0x1
 3929 0102 13       		.uleb128 0x13
 3930 0103 00       		.byte	0
 3931 0104 00       		.byte	0
 3932 0105 13       		.uleb128 0x13
 3933 0106 2E       		.uleb128 0x2e
 3934 0107 00       		.byte	0
 3935 0108 3F       		.uleb128 0x3f
 3936 0109 19       		.uleb128 0x19
 3937 010a 03       		.uleb128 0x3
 3938 010b 0E       		.uleb128 0xe
 3939 010c 3A       		.uleb128 0x3a
 3940 010d 0B       		.uleb128 0xb
 3941 010e 3B       		.uleb128 0x3b
 3942 010f 0B       		.uleb128 0xb
 3943 0110 11       		.uleb128 0x11
 3944 0111 01       		.uleb128 0x1
 3945 0112 12       		.uleb128 0x12
 3946 0113 06       		.uleb128 0x6
 3947 0114 40       		.uleb128 0x40
 3948 0115 18       		.uleb128 0x18
 3949 0116 9642     		.uleb128 0x2116
 3950 0118 19       		.uleb128 0x19
 3951 0119 00       		.byte	0
 3952 011a 00       		.byte	0
 3953 011b 14       		.uleb128 0x14
 3954 011c 2E       		.uleb128 0x2e
 3955 011d 01       		.byte	0x1
 3956 011e 3F       		.uleb128 0x3f
 3957 011f 19       		.uleb128 0x19
 3958 0120 03       		.uleb128 0x3
 3959 0121 0E       		.uleb128 0xe
 3960 0122 3A       		.uleb128 0x3a
 3961 0123 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 86


 3962 0124 3B       		.uleb128 0x3b
 3963 0125 0B       		.uleb128 0xb
 3964 0126 27       		.uleb128 0x27
 3965 0127 19       		.uleb128 0x19
 3966 0128 11       		.uleb128 0x11
 3967 0129 01       		.uleb128 0x1
 3968 012a 12       		.uleb128 0x12
 3969 012b 06       		.uleb128 0x6
 3970 012c 40       		.uleb128 0x40
 3971 012d 18       		.uleb128 0x18
 3972 012e 9642     		.uleb128 0x2116
 3973 0130 19       		.uleb128 0x19
 3974 0131 01       		.uleb128 0x1
 3975 0132 13       		.uleb128 0x13
 3976 0133 00       		.byte	0
 3977 0134 00       		.byte	0
 3978 0135 15       		.uleb128 0x15
 3979 0136 05       		.uleb128 0x5
 3980 0137 00       		.byte	0
 3981 0138 03       		.uleb128 0x3
 3982 0139 0E       		.uleb128 0xe
 3983 013a 3A       		.uleb128 0x3a
 3984 013b 0B       		.uleb128 0xb
 3985 013c 3B       		.uleb128 0x3b
 3986 013d 0B       		.uleb128 0xb
 3987 013e 49       		.uleb128 0x49
 3988 013f 13       		.uleb128 0x13
 3989 0140 02       		.uleb128 0x2
 3990 0141 18       		.uleb128 0x18
 3991 0142 00       		.byte	0
 3992 0143 00       		.byte	0
 3993 0144 16       		.uleb128 0x16
 3994 0145 2E       		.uleb128 0x2e
 3995 0146 01       		.byte	0x1
 3996 0147 3F       		.uleb128 0x3f
 3997 0148 19       		.uleb128 0x19
 3998 0149 03       		.uleb128 0x3
 3999 014a 0E       		.uleb128 0xe
 4000 014b 3A       		.uleb128 0x3a
 4001 014c 0B       		.uleb128 0xb
 4002 014d 3B       		.uleb128 0x3b
 4003 014e 0B       		.uleb128 0xb
 4004 014f 27       		.uleb128 0x27
 4005 0150 19       		.uleb128 0x19
 4006 0151 49       		.uleb128 0x49
 4007 0152 13       		.uleb128 0x13
 4008 0153 11       		.uleb128 0x11
 4009 0154 01       		.uleb128 0x1
 4010 0155 12       		.uleb128 0x12
 4011 0156 06       		.uleb128 0x6
 4012 0157 40       		.uleb128 0x40
 4013 0158 18       		.uleb128 0x18
 4014 0159 9642     		.uleb128 0x2116
 4015 015b 19       		.uleb128 0x19
 4016 015c 01       		.uleb128 0x1
 4017 015d 13       		.uleb128 0x13
 4018 015e 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 87


 4019 015f 00       		.byte	0
 4020 0160 17       		.uleb128 0x17
 4021 0161 2E       		.uleb128 0x2e
 4022 0162 01       		.byte	0x1
 4023 0163 3F       		.uleb128 0x3f
 4024 0164 19       		.uleb128 0x19
 4025 0165 03       		.uleb128 0x3
 4026 0166 0E       		.uleb128 0xe
 4027 0167 3A       		.uleb128 0x3a
 4028 0168 0B       		.uleb128 0xb
 4029 0169 3B       		.uleb128 0x3b
 4030 016a 0B       		.uleb128 0xb
 4031 016b 27       		.uleb128 0x27
 4032 016c 19       		.uleb128 0x19
 4033 016d 11       		.uleb128 0x11
 4034 016e 01       		.uleb128 0x1
 4035 016f 12       		.uleb128 0x12
 4036 0170 06       		.uleb128 0x6
 4037 0171 40       		.uleb128 0x40
 4038 0172 18       		.uleb128 0x18
 4039 0173 9742     		.uleb128 0x2117
 4040 0175 19       		.uleb128 0x19
 4041 0176 01       		.uleb128 0x1
 4042 0177 13       		.uleb128 0x13
 4043 0178 00       		.byte	0
 4044 0179 00       		.byte	0
 4045 017a 18       		.uleb128 0x18
 4046 017b 2E       		.uleb128 0x2e
 4047 017c 01       		.byte	0x1
 4048 017d 3F       		.uleb128 0x3f
 4049 017e 19       		.uleb128 0x19
 4050 017f 03       		.uleb128 0x3
 4051 0180 0E       		.uleb128 0xe
 4052 0181 3A       		.uleb128 0x3a
 4053 0182 0B       		.uleb128 0xb
 4054 0183 3B       		.uleb128 0x3b
 4055 0184 0B       		.uleb128 0xb
 4056 0185 27       		.uleb128 0x27
 4057 0186 19       		.uleb128 0x19
 4058 0187 49       		.uleb128 0x49
 4059 0188 13       		.uleb128 0x13
 4060 0189 11       		.uleb128 0x11
 4061 018a 01       		.uleb128 0x1
 4062 018b 12       		.uleb128 0x12
 4063 018c 06       		.uleb128 0x6
 4064 018d 40       		.uleb128 0x40
 4065 018e 18       		.uleb128 0x18
 4066 018f 9742     		.uleb128 0x2117
 4067 0191 19       		.uleb128 0x19
 4068 0192 01       		.uleb128 0x1
 4069 0193 13       		.uleb128 0x13
 4070 0194 00       		.byte	0
 4071 0195 00       		.byte	0
 4072 0196 19       		.uleb128 0x19
 4073 0197 2E       		.uleb128 0x2e
 4074 0198 01       		.byte	0x1
 4075 0199 3F       		.uleb128 0x3f
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 88


 4076 019a 19       		.uleb128 0x19
 4077 019b 03       		.uleb128 0x3
 4078 019c 0E       		.uleb128 0xe
 4079 019d 3A       		.uleb128 0x3a
 4080 019e 0B       		.uleb128 0xb
 4081 019f 3B       		.uleb128 0x3b
 4082 01a0 05       		.uleb128 0x5
 4083 01a1 11       		.uleb128 0x11
 4084 01a2 01       		.uleb128 0x1
 4085 01a3 12       		.uleb128 0x12
 4086 01a4 06       		.uleb128 0x6
 4087 01a5 40       		.uleb128 0x40
 4088 01a6 18       		.uleb128 0x18
 4089 01a7 9642     		.uleb128 0x2116
 4090 01a9 19       		.uleb128 0x19
 4091 01aa 01       		.uleb128 0x1
 4092 01ab 13       		.uleb128 0x13
 4093 01ac 00       		.byte	0
 4094 01ad 00       		.byte	0
 4095 01ae 1A       		.uleb128 0x1a
 4096 01af 34       		.uleb128 0x34
 4097 01b0 00       		.byte	0
 4098 01b1 03       		.uleb128 0x3
 4099 01b2 0E       		.uleb128 0xe
 4100 01b3 3A       		.uleb128 0x3a
 4101 01b4 0B       		.uleb128 0xb
 4102 01b5 3B       		.uleb128 0x3b
 4103 01b6 05       		.uleb128 0x5
 4104 01b7 49       		.uleb128 0x49
 4105 01b8 13       		.uleb128 0x13
 4106 01b9 02       		.uleb128 0x2
 4107 01ba 18       		.uleb128 0x18
 4108 01bb 00       		.byte	0
 4109 01bc 00       		.byte	0
 4110 01bd 1B       		.uleb128 0x1b
 4111 01be 2E       		.uleb128 0x2e
 4112 01bf 00       		.byte	0
 4113 01c0 3F       		.uleb128 0x3f
 4114 01c1 19       		.uleb128 0x19
 4115 01c2 03       		.uleb128 0x3
 4116 01c3 0E       		.uleb128 0xe
 4117 01c4 3A       		.uleb128 0x3a
 4118 01c5 0B       		.uleb128 0xb
 4119 01c6 3B       		.uleb128 0x3b
 4120 01c7 05       		.uleb128 0x5
 4121 01c8 27       		.uleb128 0x27
 4122 01c9 19       		.uleb128 0x19
 4123 01ca 49       		.uleb128 0x49
 4124 01cb 13       		.uleb128 0x13
 4125 01cc 11       		.uleb128 0x11
 4126 01cd 01       		.uleb128 0x1
 4127 01ce 12       		.uleb128 0x12
 4128 01cf 06       		.uleb128 0x6
 4129 01d0 40       		.uleb128 0x40
 4130 01d1 18       		.uleb128 0x18
 4131 01d2 9642     		.uleb128 0x2116
 4132 01d4 19       		.uleb128 0x19
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 89


 4133 01d5 00       		.byte	0
 4134 01d6 00       		.byte	0
 4135 01d7 1C       		.uleb128 0x1c
 4136 01d8 2E       		.uleb128 0x2e
 4137 01d9 01       		.byte	0x1
 4138 01da 3F       		.uleb128 0x3f
 4139 01db 19       		.uleb128 0x19
 4140 01dc 03       		.uleb128 0x3
 4141 01dd 0E       		.uleb128 0xe
 4142 01de 3A       		.uleb128 0x3a
 4143 01df 0B       		.uleb128 0xb
 4144 01e0 3B       		.uleb128 0x3b
 4145 01e1 05       		.uleb128 0x5
 4146 01e2 49       		.uleb128 0x49
 4147 01e3 13       		.uleb128 0x13
 4148 01e4 11       		.uleb128 0x11
 4149 01e5 01       		.uleb128 0x1
 4150 01e6 12       		.uleb128 0x12
 4151 01e7 06       		.uleb128 0x6
 4152 01e8 40       		.uleb128 0x40
 4153 01e9 18       		.uleb128 0x18
 4154 01ea 9642     		.uleb128 0x2116
 4155 01ec 19       		.uleb128 0x19
 4156 01ed 01       		.uleb128 0x1
 4157 01ee 13       		.uleb128 0x13
 4158 01ef 00       		.byte	0
 4159 01f0 00       		.byte	0
 4160 01f1 1D       		.uleb128 0x1d
 4161 01f2 0B       		.uleb128 0xb
 4162 01f3 01       		.byte	0x1
 4163 01f4 11       		.uleb128 0x11
 4164 01f5 01       		.uleb128 0x1
 4165 01f6 12       		.uleb128 0x12
 4166 01f7 06       		.uleb128 0x6
 4167 01f8 00       		.byte	0
 4168 01f9 00       		.byte	0
 4169 01fa 1E       		.uleb128 0x1e
 4170 01fb 0B       		.uleb128 0xb
 4171 01fc 01       		.byte	0x1
 4172 01fd 11       		.uleb128 0x11
 4173 01fe 01       		.uleb128 0x1
 4174 01ff 12       		.uleb128 0x12
 4175 0200 06       		.uleb128 0x6
 4176 0201 01       		.uleb128 0x1
 4177 0202 13       		.uleb128 0x13
 4178 0203 00       		.byte	0
 4179 0204 00       		.byte	0
 4180 0205 1F       		.uleb128 0x1f
 4181 0206 21       		.uleb128 0x21
 4182 0207 00       		.byte	0
 4183 0208 49       		.uleb128 0x49
 4184 0209 13       		.uleb128 0x13
 4185 020a 2F       		.uleb128 0x2f
 4186 020b 05       		.uleb128 0x5
 4187 020c 00       		.byte	0
 4188 020d 00       		.byte	0
 4189 020e 20       		.uleb128 0x20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 90


 4190 020f 2E       		.uleb128 0x2e
 4191 0210 01       		.byte	0x1
 4192 0211 3F       		.uleb128 0x3f
 4193 0212 19       		.uleb128 0x19
 4194 0213 03       		.uleb128 0x3
 4195 0214 0E       		.uleb128 0xe
 4196 0215 3A       		.uleb128 0x3a
 4197 0216 0B       		.uleb128 0xb
 4198 0217 3B       		.uleb128 0x3b
 4199 0218 05       		.uleb128 0x5
 4200 0219 27       		.uleb128 0x27
 4201 021a 19       		.uleb128 0x19
 4202 021b 49       		.uleb128 0x49
 4203 021c 13       		.uleb128 0x13
 4204 021d 11       		.uleb128 0x11
 4205 021e 01       		.uleb128 0x1
 4206 021f 12       		.uleb128 0x12
 4207 0220 06       		.uleb128 0x6
 4208 0221 40       		.uleb128 0x40
 4209 0222 18       		.uleb128 0x18
 4210 0223 9642     		.uleb128 0x2116
 4211 0225 19       		.uleb128 0x19
 4212 0226 01       		.uleb128 0x1
 4213 0227 13       		.uleb128 0x13
 4214 0228 00       		.byte	0
 4215 0229 00       		.byte	0
 4216 022a 21       		.uleb128 0x21
 4217 022b 05       		.uleb128 0x5
 4218 022c 00       		.byte	0
 4219 022d 03       		.uleb128 0x3
 4220 022e 0E       		.uleb128 0xe
 4221 022f 3A       		.uleb128 0x3a
 4222 0230 0B       		.uleb128 0xb
 4223 0231 3B       		.uleb128 0x3b
 4224 0232 05       		.uleb128 0x5
 4225 0233 49       		.uleb128 0x49
 4226 0234 13       		.uleb128 0x13
 4227 0235 02       		.uleb128 0x2
 4228 0236 18       		.uleb128 0x18
 4229 0237 00       		.byte	0
 4230 0238 00       		.byte	0
 4231 0239 22       		.uleb128 0x22
 4232 023a 34       		.uleb128 0x34
 4233 023b 00       		.byte	0
 4234 023c 03       		.uleb128 0x3
 4235 023d 08       		.uleb128 0x8
 4236 023e 3A       		.uleb128 0x3a
 4237 023f 0B       		.uleb128 0xb
 4238 0240 3B       		.uleb128 0x3b
 4239 0241 05       		.uleb128 0x5
 4240 0242 49       		.uleb128 0x49
 4241 0243 13       		.uleb128 0x13
 4242 0244 02       		.uleb128 0x2
 4243 0245 18       		.uleb128 0x18
 4244 0246 00       		.byte	0
 4245 0247 00       		.byte	0
 4246 0248 23       		.uleb128 0x23
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 91


 4247 0249 34       		.uleb128 0x34
 4248 024a 00       		.byte	0
 4249 024b 03       		.uleb128 0x3
 4250 024c 0E       		.uleb128 0xe
 4251 024d 3A       		.uleb128 0x3a
 4252 024e 0B       		.uleb128 0xb
 4253 024f 3B       		.uleb128 0x3b
 4254 0250 05       		.uleb128 0x5
 4255 0251 49       		.uleb128 0x49
 4256 0252 13       		.uleb128 0x13
 4257 0253 3F       		.uleb128 0x3f
 4258 0254 19       		.uleb128 0x19
 4259 0255 3C       		.uleb128 0x3c
 4260 0256 19       		.uleb128 0x19
 4261 0257 00       		.byte	0
 4262 0258 00       		.byte	0
 4263 0259 24       		.uleb128 0x24
 4264 025a 34       		.uleb128 0x34
 4265 025b 00       		.byte	0
 4266 025c 03       		.uleb128 0x3
 4267 025d 0E       		.uleb128 0xe
 4268 025e 3A       		.uleb128 0x3a
 4269 025f 0B       		.uleb128 0xb
 4270 0260 3B       		.uleb128 0x3b
 4271 0261 0B       		.uleb128 0xb
 4272 0262 49       		.uleb128 0x49
 4273 0263 13       		.uleb128 0x13
 4274 0264 3F       		.uleb128 0x3f
 4275 0265 19       		.uleb128 0x19
 4276 0266 02       		.uleb128 0x2
 4277 0267 18       		.uleb128 0x18
 4278 0268 00       		.byte	0
 4279 0269 00       		.byte	0
 4280 026a 25       		.uleb128 0x25
 4281 026b 34       		.uleb128 0x34
 4282 026c 00       		.byte	0
 4283 026d 03       		.uleb128 0x3
 4284 026e 08       		.uleb128 0x8
 4285 026f 3A       		.uleb128 0x3a
 4286 0270 0B       		.uleb128 0xb
 4287 0271 3B       		.uleb128 0x3b
 4288 0272 0B       		.uleb128 0xb
 4289 0273 49       		.uleb128 0x49
 4290 0274 13       		.uleb128 0x13
 4291 0275 3F       		.uleb128 0x3f
 4292 0276 19       		.uleb128 0x19
 4293 0277 02       		.uleb128 0x2
 4294 0278 18       		.uleb128 0x18
 4295 0279 00       		.byte	0
 4296 027a 00       		.byte	0
 4297 027b 00       		.byte	0
 4298              		.section	.debug_aranges,"",%progbits
 4299 0000 8C000000 		.4byte	0x8c
 4300 0004 0200     		.2byte	0x2
 4301 0006 00000000 		.4byte	.Ldebug_info0
 4302 000a 04       		.byte	0x4
 4303 000b 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 92


 4304 000c 0000     		.2byte	0
 4305 000e 0000     		.2byte	0
 4306 0010 00000000 		.4byte	.LFB64
 4307 0014 0C000000 		.4byte	.LFE64-.LFB64
 4308 0018 00000000 		.4byte	.LFB65
 4309 001c 2C010000 		.4byte	.LFE65-.LFB65
 4310 0020 00000000 		.4byte	.LFB66
 4311 0024 64000000 		.4byte	.LFE66-.LFB66
 4312 0028 00000000 		.4byte	.LFB67
 4313 002c 2A000000 		.4byte	.LFE67-.LFB67
 4314 0030 00000000 		.4byte	.LFB68
 4315 0034 50000000 		.4byte	.LFE68-.LFB68
 4316 0038 00000000 		.4byte	.LFB69
 4317 003c 48000000 		.4byte	.LFE69-.LFB69
 4318 0040 00000000 		.4byte	.LFB70
 4319 0044 1E000000 		.4byte	.LFE70-.LFB70
 4320 0048 00000000 		.4byte	.LFB71
 4321 004c 46000000 		.4byte	.LFE71-.LFB71
 4322 0050 00000000 		.4byte	.LFB72
 4323 0054 E0000000 		.4byte	.LFE72-.LFB72
 4324 0058 00000000 		.4byte	.LFB73
 4325 005c 1E000000 		.4byte	.LFE73-.LFB73
 4326 0060 00000000 		.4byte	.LFB74
 4327 0064 30040000 		.4byte	.LFE74-.LFB74
 4328 0068 00000000 		.4byte	.LFB75
 4329 006c 44000000 		.4byte	.LFE75-.LFB75
 4330 0070 00000000 		.4byte	.LFB76
 4331 0074 14030000 		.4byte	.LFE76-.LFB76
 4332 0078 00000000 		.4byte	.LFB77
 4333 007c 74000000 		.4byte	.LFE77-.LFB77
 4334 0080 00000000 		.4byte	.LFB78
 4335 0084 38010000 		.4byte	.LFE78-.LFB78
 4336 0088 00000000 		.4byte	0
 4337 008c 00000000 		.4byte	0
 4338              		.section	.debug_ranges,"",%progbits
 4339              	.Ldebug_ranges0:
 4340 0000 00000000 		.4byte	.LFB64
 4341 0004 0C000000 		.4byte	.LFE64
 4342 0008 00000000 		.4byte	.LFB65
 4343 000c 2C010000 		.4byte	.LFE65
 4344 0010 00000000 		.4byte	.LFB66
 4345 0014 64000000 		.4byte	.LFE66
 4346 0018 00000000 		.4byte	.LFB67
 4347 001c 2A000000 		.4byte	.LFE67
 4348 0020 00000000 		.4byte	.LFB68
 4349 0024 50000000 		.4byte	.LFE68
 4350 0028 00000000 		.4byte	.LFB69
 4351 002c 48000000 		.4byte	.LFE69
 4352 0030 00000000 		.4byte	.LFB70
 4353 0034 1E000000 		.4byte	.LFE70
 4354 0038 00000000 		.4byte	.LFB71
 4355 003c 46000000 		.4byte	.LFE71
 4356 0040 00000000 		.4byte	.LFB72
 4357 0044 E0000000 		.4byte	.LFE72
 4358 0048 00000000 		.4byte	.LFB73
 4359 004c 1E000000 		.4byte	.LFE73
 4360 0050 00000000 		.4byte	.LFB74
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 93


 4361 0054 30040000 		.4byte	.LFE74
 4362 0058 00000000 		.4byte	.LFB75
 4363 005c 44000000 		.4byte	.LFE75
 4364 0060 00000000 		.4byte	.LFB76
 4365 0064 14030000 		.4byte	.LFE76
 4366 0068 00000000 		.4byte	.LFB77
 4367 006c 74000000 		.4byte	.LFE77
 4368 0070 00000000 		.4byte	.LFB78
 4369 0074 38010000 		.4byte	.LFE78
 4370 0078 00000000 		.4byte	0
 4371 007c 00000000 		.4byte	0
 4372              		.section	.debug_line,"",%progbits
 4373              	.Ldebug_line0:
 4374 0000 34040000 		.section	.debug_str,"MS",%progbits,1
 4374      02002702 
 4374      00000201 
 4374      FB0E0D00 
 4374      01010101 
 4375              	.LASF106:
 4376 0000 745F6D6F 		.ascii	"t_modem\000"
 4376      64656D00 
 4377              	.LASF12:
 4378 0008 75696E74 		.ascii	"uint16\000"
 4378      313600
 4379              	.LASF51:
 4380 000f 746D5F68 		.ascii	"tm_hour\000"
 4380      6F757200 
 4381              	.LASF36:
 4382 0017 6E756D5F 		.ascii	"num_invalid_readings\000"
 4382      696E7661 
 4382      6C69645F 
 4382      72656164 
 4382      696E6773 
 4383              	.LASF141:
 4384 002c 62756666 		.ascii	"buffer_overflow\000"
 4384      65725F6F 
 4384      76657266 
 4384      6C6F7700 
 4385              	.LASF139:
 4386 003c 66696C65 		.ascii	"fileName\000"
 4386      4E616D65 
 4386      00
 4387              	.LASF0:
 4388 0045 7369676E 		.ascii	"signed char\000"
 4388      65642063 
 4388      68617200 
 4389              	.LASF83:
 4390 0051 636F756E 		.ascii	"countDownResetCondition\000"
 4390      74446F77 
 4390      6E526573 
 4390      6574436F 
 4390      6E646974 
 4391              	.LASF163:
 4392 0069 57616B65 		.ascii	"Wakeup_ISR\000"
 4392      75705F49 
 4392      535200
 4393              	.LASF160:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 94


 4394 0074 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4394      43313120 
 4394      352E342E 
 4394      31203230 
 4394      31363036 
 4395 00a7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4395      20726576 
 4395      6973696F 
 4395      6E203233 
 4395      37373135 
 4396 00da 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4396      66756E63 
 4396      74696F6E 
 4396      2D736563 
 4396      74696F6E 
 4397              	.LASF26:
 4398 0102 4D6F6E74 		.ascii	"Month\000"
 4398      6800
 4399              	.LASF7:
 4400 0108 6C6F6E67 		.ascii	"long long unsigned int\000"
 4400      206C6F6E 
 4400      6720756E 
 4400      7369676E 
 4400      65642069 
 4401              	.LASF22:
 4402 011f 486F7572 		.ascii	"Hour\000"
 4402      00
 4403              	.LASF145:
 4404 0124 6D6F6465 		.ascii	"modem_state\000"
 4404      6D5F7374 
 4404      61746500 
 4405              	.LASF39:
 4406 0130 64657074 		.ascii	"depth\000"
 4406      6800
 4407              	.LASF154:
 4408 0136 616C6172 		.ascii	"alarmMeasure\000"
 4408      6D4D6561 
 4408      73757265 
 4408      00
 4409              	.LASF140:
 4410 0143 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4410      52784275 
 4410      66666572 
 4410      00
 4411              	.LASF107:
 4412 0150 745F6C65 		.ascii	"t_level_sensor\000"
 4412      76656C5F 
 4412      73656E73 
 4412      6F7200
 4413              	.LASF6:
 4414 015f 6C6F6E67 		.ascii	"long long int\000"
 4414      206C6F6E 
 4414      6720696E 
 4414      7400
 4415              	.LASF117:
 4416 016d 7061636B 		.ascii	"packets\000"
 4416      65747300 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 95


 4417              	.LASF67:
 4418 0175 65636E6F 		.ascii	"ecno\000"
 4418      00
 4419              	.LASF155:
 4420 017a 74696D65 		.ascii	"timeToMeasure\000"
 4420      546F4D65 
 4420      61737572 
 4420      6500
 4421              	.LASF70:
 4422 0188 74696D65 		.ascii	"time_to_network_connect\000"
 4422      5F746F5F 
 4422      6E657477 
 4422      6F726B5F 
 4422      636F6E6E 
 4423              	.LASF157:
 4424 01a0 74696D65 		.ascii	"timeToSync\000"
 4424      546F5379 
 4424      6E6300
 4425              	.LASF42:
 4426 01ab 766F6C74 		.ascii	"voltage_solar\000"
 4426      6167655F 
 4426      736F6C61 
 4426      7200
 4427              	.LASF43:
 4428 01b9 766F6C74 		.ascii	"voltage_charge_current\000"
 4428      6167655F 
 4428      63686172 
 4428      67655F63 
 4428      75727265 
 4429              	.LASF138:
 4430 01d0 75706772 		.ascii	"upgrade_status\000"
 4430      6164655F 
 4430      73746174 
 4430      757300
 4431              	.LASF120:
 4432 01df 635F6461 		.ascii	"c_data_count_sent\000"
 4432      74615F63 
 4432      6F756E74 
 4432      5F73656E 
 4432      7400
 4433              	.LASF64:
 4434 01f1 6D6F6465 		.ascii	"modem_info_t\000"
 4434      6D5F696E 
 4434      666F5F74 
 4434      00
 4435              	.LASF65:
 4436 01fe 72786C65 		.ascii	"rxlev\000"
 4436      7600
 4437              	.LASF4:
 4438 0204 6C6F6E67 		.ascii	"long int\000"
 4438      20696E74 
 4438      00
 4439              	.LASF71:
 4440 020d 74696D65 		.ascii	"time_to_acquire_ip\000"
 4440      5F746F5F 
 4440      61637175 
 4440      6972655F 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 96


 4440      697000
 4441              	.LASF84:
 4442 0220 616C6172 		.ascii	"alarm\000"
 4442      6D00
 4443              	.LASF11:
 4444 0226 75696E74 		.ascii	"uint8\000"
 4444      3800
 4445              	.LASF112:
 4446 022c 635F7472 		.ascii	"c_try_counter\000"
 4446      795F636F 
 4446      756E7465 
 4446      7200
 4447              	.LASF123:
 4448 023a 73656E64 		.ascii	"send_time\000"
 4448      5F74696D 
 4448      6500
 4449              	.LASF16:
 4450 0244 696E7433 		.ascii	"int32\000"
 4450      3200
 4451              	.LASF73:
 4452 024a 6E6F6465 		.ascii	"node_type\000"
 4452      5F747970 
 4452      6500
 4453              	.LASF110:
 4454 0254 73796E63 		.ascii	"syncData\000"
 4454      44617461 
 4454      00
 4455              	.LASF118:
 4456 025d 6E657477 		.ascii	"network_time\000"
 4456      6F726B5F 
 4456      74696D65 
 4456      00
 4457              	.LASF3:
 4458 026a 73686F72 		.ascii	"short unsigned int\000"
 4458      7420756E 
 4458      7369676E 
 4458      65642069 
 4458      6E7400
 4459              	.LASF13:
 4460 027d 75696E74 		.ascii	"uint32\000"
 4460      333200
 4461              	.LASF62:
 4462 0284 6D6F6465 		.ascii	"model_id\000"
 4462      6C5F6964 
 4462      00
 4463              	.LASF33:
 4464 028d 616C6C5F 		.ascii	"all_level_readings\000"
 4464      6C657665 
 4464      6C5F7265 
 4464      6164696E 
 4464      677300
 4465              	.LASF80:
 4466 02a0 636F756E 		.ascii	"countDownValue\000"
 4466      74446F77 
 4466      6E56616C 
 4466      756500
 4467              	.LASF134:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 97


 4468 02af 75706772 		.ascii	"upgraded\000"
 4468      61646564 
 4468      00
 4469              	.LASF53:
 4470 02b8 746D5F6D 		.ascii	"tm_mon\000"
 4470      6F6E00
 4471              	.LASF77:
 4472 02bf 64656275 		.ascii	"debug_level\000"
 4472      675F6C65 
 4472      76656C00 
 4473              	.LASF136:
 4474 02cb 706F7274 		.ascii	"port\000"
 4474      00
 4475              	.LASF162:
 4476 02d0 433A5C6E 		.ascii	"C:\\notoriOS\\notoriOS.cydsn\000"
 4476      6F746F72 
 4476      694F535C 
 4476      6E6F746F 
 4476      72694F53 
 4477              	.LASF58:
 4478 02eb 76616C75 		.ascii	"value\000"
 4478      6500
 4479              	.LASF135:
 4480 02f1 686F7374 		.ascii	"host\000"
 4480      00
 4481              	.LASF54:
 4482 02f6 746D5F79 		.ascii	"tm_year\000"
 4482      65617200 
 4483              	.LASF156:
 4484 02fe 616C6172 		.ascii	"alarmSync\000"
 4484      6D53796E 
 4484      6300
 4485              	.LASF8:
 4486 0308 756E7369 		.ascii	"unsigned int\000"
 4486      676E6564 
 4486      20696E74 
 4486      00
 4487              	.LASF132:
 4488 0315 73657454 		.ascii	"setTime\000"
 4488      696D6500 
 4489              	.LASF60:
 4490 031d 6B65795F 		.ascii	"key_value_t\000"
 4490      76616C75 
 4490      655F7400 
 4491              	.LASF96:
 4492 0329 41796F49 		.ascii	"AyoItsTime\000"
 4492      74735469 
 4492      6D6500
 4493              	.LASF35:
 4494 0334 6E756D5F 		.ascii	"num_valid_readings\000"
 4494      76616C69 
 4494      645F7265 
 4494      6164696E 
 4494      677300
 4495              	.LASF122:
 4496 0347 68747470 		.ascii	"http_chunk\000"
 4496      5F636875 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 98


 4496      6E6B00
 4497              	.LASF128:
 4498 0352 6D5F766F 		.ascii	"m_voltage\000"
 4498      6C746167 
 4498      6500
 4499              	.LASF5:
 4500 035c 6C6F6E67 		.ascii	"long unsigned int\000"
 4500      20756E73 
 4500      69676E65 
 4500      6420696E 
 4500      7400
 4501              	.LASF93:
 4502 036e 7472795F 		.ascii	"try_counter\000"
 4502      636F756E 
 4502      74657200 
 4503              	.LASF113:
 4504 037a 64617461 		.ascii	"data_count_desired\000"
 4504      5F636F75 
 4504      6E745F64 
 4504      65736972 
 4504      656400
 4505              	.LASF41:
 4506 038d 766F6C74 		.ascii	"voltage_battery\000"
 4506      6167655F 
 4506      62617474 
 4506      65727900 
 4507              	.LASF24:
 4508 039d 4461794F 		.ascii	"DayOfMonth\000"
 4508      664D6F6E 
 4508      746800
 4509              	.LASF126:
 4510 03a8 6D616B65 		.ascii	"makeMeasurements\000"
 4510      4D656173 
 4510      7572656D 
 4510      656E7473 
 4510      00
 4511              	.LASF144:
 4512 03b9 64617461 		.ascii	"data\000"
 4512      00
 4513              	.LASF89:
 4514 03be 65705F70 		.ascii	"ep_port\000"
 4514      6F727400 
 4515              	.LASF57:
 4516 03c6 746D5F69 		.ascii	"tm_isdst\000"
 4516      73647374 
 4516      00
 4517              	.LASF85:
 4518 03cf 6D6F6465 		.ascii	"modem_info\000"
 4518      6D5F696E 
 4518      666F00
 4519              	.LASF88:
 4520 03da 65705F68 		.ascii	"ep_host\000"
 4520      6F737400 
 4521              	.LASF14:
 4522 03e2 696E7438 		.ascii	"int8\000"
 4522      00
 4523              	.LASF95:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 99


 4524 03e7 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 4524      576F726B 
 4524      576F726B 
 4524      576F726B 
 4524      576F726B 
 4525              	.LASF114:
 4526 0400 635F6461 		.ascii	"c_data_count_desired\000"
 4526      74615F63 
 4526      6F756E74 
 4526      5F646573 
 4526      69726564 
 4527              	.LASF109:
 4528 0415 745F7364 		.ascii	"t_sd_card\000"
 4528      5F636172 
 4528      6400
 4529              	.LASF2:
 4530 041f 73686F72 		.ascii	"short int\000"
 4530      7420696E 
 4530      7400
 4531              	.LASF146:
 4532 0429 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 4532      6D5F7374 
 4532      6172745F 
 4532      74696D65 
 4532      5F737461 
 4533              	.LASF87:
 4534 0440 7379735F 		.ascii	"sys_info_t\000"
 4534      696E666F 
 4534      5F7400
 4535              	.LASF79:
 4536 044b 75706461 		.ascii	"updatable_parameters_t\000"
 4536      7461626C 
 4536      655F7061 
 4536      72616D65 
 4536      74657273 
 4537              	.LASF97:
 4538 0462 616C6172 		.ascii	"alarmType\000"
 4538      6D547970 
 4538      6500
 4539              	.LASF142:
 4540 046c 64617461 		.ascii	"dataPointsInStack\000"
 4540      506F696E 
 4540      7473496E 
 4540      53746163 
 4540      6B00
 4541              	.LASF50:
 4542 047e 746D5F6D 		.ascii	"tm_min\000"
 4542      696E00
 4543              	.LASF137:
 4544 0485 726F7574 		.ascii	"route\000"
 4544      6500
 4545              	.LASF98:
 4546 048b 616C6172 		.ascii	"alarmToBeUpdated\000"
 4546      6D546F42 
 4546      65557064 
 4546      61746564 
 4546      00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 100


 4547              	.LASF21:
 4548 049c 73697A65 		.ascii	"sizetype\000"
 4548      74797065 
 4548      00
 4549              	.LASF56:
 4550 04a5 746D5F79 		.ascii	"tm_yday\000"
 4550      64617900 
 4551              	.LASF90:
 4552 04ad 7379735F 		.ascii	"sys_settings_t\000"
 4552      73657474 
 4552      696E6773 
 4552      5F7400
 4553              	.LASF133:
 4554 04bc 6C6F6361 		.ascii	"localTime\000"
 4554      6C54696D 
 4554      6500
 4555              	.LASF158:
 4556 04c6 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 4556      546F5379 
 4556      636E5265 
 4556      6D6F7465 
 4556      50617261 
 4557              	.LASF59:
 4558 04dd 74696D65 		.ascii	"timeStamp\000"
 4558      5374616D 
 4558      7000
 4559              	.LASF28:
 4560 04e7 5254435F 		.ascii	"RTC_TIME_DATE\000"
 4560      54494D45 
 4560      5F444154 
 4560      4500
 4561              	.LASF148:
 4562 04f5 75706461 		.ascii	"updatable_parameters\000"
 4562      7461626C 
 4562      655F7061 
 4562      72616D65 
 4562      74657273 
 4563              	.LASF102:
 4564 050a 43726561 		.ascii	"CreateAlarm\000"
 4564      7465416C 
 4564      61726D00 
 4565              	.LASF121:
 4566 0516 7061636B 		.ascii	"packet\000"
 4566      657400
 4567              	.LASF111:
 4568 051d 735F7273 		.ascii	"s_rsrp\000"
 4568      727000
 4569              	.LASF44:
 4570 0524 766F6C74 		.ascii	"voltage_pressure\000"
 4570      6167655F 
 4570      70726573 
 4570      73757265 
 4570      00
 4571              	.LASF149:
 4572 0535 68747470 		.ascii	"http_request\000"
 4572      5F726571 
 4572      75657374 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 101


 4572      00
 4573              	.LASF17:
 4574 0542 666C6F61 		.ascii	"float\000"
 4574      7400
 4575              	.LASF37:
 4576 0548 6C657665 		.ascii	"level_sensor_t\000"
 4576      6C5F7365 
 4576      6E736F72 
 4576      5F7400
 4577              	.LASF125:
 4578 0557 636F6E66 		.ascii	"configureRemoteParams\000"
 4578      69677572 
 4578      6552656D 
 4578      6F746550 
 4578      6172616D 
 4579              	.LASF159:
 4580 056d 44617461 		.ascii	"Data_fileName\000"
 4580      5F66696C 
 4580      654E616D 
 4580      6500
 4581              	.LASF94:
 4582 057b 6D6F6465 		.ascii	"modem_status\000"
 4582      6D5F7374 
 4582      61747573 
 4582      00
 4583              	.LASF29:
 4584 0588 74657374 		.ascii	"test_name\000"
 4584      5F6E616D 
 4584      6500
 4585              	.LASF27:
 4586 0592 59656172 		.ascii	"Year\000"
 4586      00
 4587              	.LASF78:
 4588 0597 5F426F6F 		.ascii	"_Bool\000"
 4588      6C00
 4589              	.LASF10:
 4590 059d 696E7433 		.ascii	"int32_t\000"
 4590      325F7400 
 4591              	.LASF1:
 4592 05a5 756E7369 		.ascii	"unsigned char\000"
 4592      676E6564 
 4592      20636861 
 4592      7200
 4593              	.LASF153:
 4594 05b3 73797374 		.ascii	"system_settings\000"
 4594      656D5F73 
 4594      65747469 
 4594      6E677300 
 4595              	.LASF69:
 4596 05c3 72737270 		.ascii	"rsrp\000"
 4596      00
 4597              	.LASF68:
 4598 05c8 72737271 		.ascii	"rsrq\000"
 4598      00
 4599              	.LASF99:
 4600 05cd 52657365 		.ascii	"ResetAlarm\000"
 4600      74416C61 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 102


 4600      726D00
 4601              	.LASF124:
 4602 05d8 735F7365 		.ascii	"s_send_time\000"
 4602      6E645F74 
 4602      696D6500 
 4603              	.LASF76:
 4604 05e4 73796E63 		.ascii	"sync_time\000"
 4604      5F74696D 
 4604      6500
 4605              	.LASF47:
 4606 05ee 70726573 		.ascii	"pressure_depth\000"
 4606      73757265 
 4606      5F646570 
 4606      746800
 4607              	.LASF66:
 4608 05fd 72736370 		.ascii	"rscp\000"
 4608      00
 4609              	.LASF23:
 4610 0602 4461794F 		.ascii	"DayOfWeek\000"
 4610      66576565 
 4610      6B00
 4611              	.LASF32:
 4612 060c 74657374 		.ascii	"test_t\000"
 4612      5F7400
 4613              	.LASF152:
 4614 0613 73797374 		.ascii	"system_info\000"
 4614      656D5F69 
 4614      6E666F00 
 4615              	.LASF63:
 4616 061f 696D6569 		.ascii	"imei\000"
 4616      00
 4617              	.LASF31:
 4618 0624 72656173 		.ascii	"reason\000"
 4618      6F6E00
 4619              	.LASF100:
 4620 062b 616C6172 		.ascii	"alarmToBeReset\000"
 4620      6D546F42 
 4620      65526573 
 4620      657400
 4621              	.LASF105:
 4622 063a 43686963 		.ascii	"ChickityCheckYourselfBeforeYouWreckYourself\000"
 4622      6B697479 
 4622      43686563 
 4622      6B596F75 
 4622      7273656C 
 4623              	.LASF119:
 4624 0666 64617461 		.ascii	"data_count_sent\000"
 4624      5F636F75 
 4624      6E745F73 
 4624      656E7400 
 4625              	.LASF72:
 4626 0676 6D6F6465 		.ascii	"modem_stats_t\000"
 4626      6D5F7374 
 4626      6174735F 
 4626      7400
 4627              	.LASF46:
 4628 0684 70726573 		.ascii	"pressure_current\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 103


 4628      73757265 
 4628      5F637572 
 4628      72656E74 
 4628      00
 4629              	.LASF38:
 4630 0695 76616C69 		.ascii	"valid\000"
 4630      6400
 4631              	.LASF55:
 4632 069b 746D5F77 		.ascii	"tm_wday\000"
 4632      64617900 
 4633              	.LASF20:
 4634 06a3 6C6F6E67 		.ascii	"long double\000"
 4634      20646F75 
 4634      626C6500 
 4635              	.LASF116:
 4636 06af 6368756E 		.ascii	"chunk\000"
 4636      6B00
 4637              	.LASF127:
 4638 06b5 635F7469 		.ascii	"c_timeStamp\000"
 4638      6D655374 
 4638      616D7000 
 4639              	.LASF19:
 4640 06c1 63686172 		.ascii	"char\000"
 4640      00
 4641              	.LASF40:
 4642 06c6 736F6E74 		.ascii	"sontek_t\000"
 4642      656B5F74 
 4642      00
 4643              	.LASF147:
 4644 06cf 6D6F6465 		.ascii	"modem_stats\000"
 4644      6D5F7374 
 4644      61747300 
 4645              	.LASF151:
 4646 06db 68747470 		.ascii	"http_route\000"
 4646      5F726F75 
 4646      746500
 4647              	.LASF115:
 4648 06e6 706F7274 		.ascii	"portConfig\000"
 4648      436F6E66 
 4648      696700
 4649              	.LASF9:
 4650 06f1 5F5F696E 		.ascii	"__int32_t\000"
 4650      7433325F 
 4650      7400
 4651              	.LASF91:
 4652 06fb 756E6971 		.ascii	"uniqueId\000"
 4652      75654964 
 4652      00
 4653              	.LASF129:
 4654 0704 6D5F6C65 		.ascii	"m_level_sensor\000"
 4654      76656C5F 
 4654      73656E73 
 4654      6F7200
 4655              	.LASF34:
 4656 0713 6C657665 		.ascii	"level_reading\000"
 4656      6C5F7265 
 4656      6164696E 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 104


 4656      6700
 4657              	.LASF164:
 4658 0721 4C617942 		.ascii	"LayBack\000"
 4658      61636B00 
 4659              	.LASF130:
 4660 0729 6D5F736F 		.ascii	"m_sontek\000"
 4660      6E74656B 
 4660      00
 4661              	.LASF61:
 4662 0732 73696D5F 		.ascii	"sim_id\000"
 4662      696400
 4663              	.LASF52:
 4664 0739 746D5F6D 		.ascii	"tm_mday\000"
 4664      64617900 
 4665              	.LASF103:
 4666 0741 6E657741 		.ascii	"newAlarm\000"
 4666      6C61726D 
 4666      00
 4667              	.LASF49:
 4668 074a 746D5F73 		.ascii	"tm_sec\000"
 4668      656300
 4669              	.LASF131:
 4670 0751 6D5F7072 		.ascii	"m_pressure\000"
 4670      65737375 
 4670      726500
 4671              	.LASF30:
 4672 075c 73746174 		.ascii	"status\000"
 4672      757300
 4673              	.LASF143:
 4674 0763 64617461 		.ascii	"dataPointsInStackDesired\000"
 4674      506F696E 
 4674      7473496E 
 4674      53746163 
 4674      6B446573 
 4675              	.LASF108:
 4676 077c 745F766F 		.ascii	"t_voltages\000"
 4676      6C746167 
 4676      657300
 4677              	.LASF161:
 4678 0787 6E6F746F 		.ascii	"notoriOS.c\000"
 4678      72694F53 
 4678      2E6300
 4679              	.LASF150:
 4680 0792 68747470 		.ascii	"http_body\000"
 4680      5F626F64 
 4680      7900
 4681              	.LASF15:
 4682 079c 696E7431 		.ascii	"int16\000"
 4682      3600
 4683              	.LASF82:
 4684 07a2 636F756E 		.ascii	"countDownType\000"
 4684      74446F77 
 4684      6E547970 
 4684      6500
 4685              	.LASF81:
 4686 07b0 63757272 		.ascii	"currentCountDownValue\000"
 4686      656E7443 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4tEsIP.s 			page 105


 4686      6F756E74 
 4686      446F776E 
 4686      56616C75 
 4687              	.LASF74:
 4688 07c6 73696D5F 		.ascii	"sim_type\000"
 4688      74797065 
 4688      00
 4689              	.LASF92:
 4690 07cf 635F6865 		.ascii	"c_hey\000"
 4690      7900
 4691              	.LASF25:
 4692 07d5 4461794F 		.ascii	"DayOfYear\000"
 4692      66596561 
 4692      7200
 4693              	.LASF48:
 4694 07df 70726573 		.ascii	"pressure_t\000"
 4694      73757265 
 4694      5F7400
 4695              	.LASF101:
 4696 07ea 416C6172 		.ascii	"AlarmReady\000"
 4696      6D526561 
 4696      647900
 4697              	.LASF104:
 4698 07f5 52656164 		.ascii	"ReadyOrNot\000"
 4698      794F724E 
 4698      6F7400
 4699              	.LASF165:
 4700 0800 6D61696E 		.ascii	"main\000"
 4700      00
 4701              	.LASF86:
 4702 0805 63686970 		.ascii	"chip_uniqueId\000"
 4702      5F756E69 
 4702      71756549 
 4702      6400
 4703              	.LASF75:
 4704 0813 6D656173 		.ascii	"measure_time\000"
 4704      7572655F 
 4704      74696D65 
 4704      00
 4705              	.LASF18:
 4706 0820 646F7562 		.ascii	"double\000"
 4706      6C6500
 4707              	.LASF45:
 4708 0827 766F6C74 		.ascii	"voltage_t\000"
 4708      6167655F 
 4708      7400
 4709              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
