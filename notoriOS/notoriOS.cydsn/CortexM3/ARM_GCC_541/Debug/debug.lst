ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"debug.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.syntax unified
  20              		.global _printf_float
  21              		.thumb
  22              		.syntax unified
  23              		.global	BB_fileName
  24              		.data
  25              		.align	2
  26              		.type	BB_fileName, %object
  27              		.size	BB_fileName, 30
  28              	BB_fileName:
  29 0000 626C6163 		.ascii	"blackbox.txt\000"
  29      6B626F78 
  29      2E747874 
  29      00
  30 000d 00000000 		.space	17
  30      00000000 
  30      00000000 
  30      00000000 
  30      00
  31              		.global	debug_level
  32              		.type	debug_level, %object
  33              		.size	debug_level, 1
  34              	debug_level:
  35 001e 01       		.byte	1
  36              		.section	.text.debug_start,"ax",%progbits
  37              		.align	2
  38              		.global	debug_start
  39              		.thumb
  40              		.thumb_func
  41              		.type	debug_start, %function
  42              	debug_start:
  43              	.LFB64:
  44              		.file 1 "debug.c"
   1:debug.c       **** //drivers for UART debug 
   2:debug.c       **** 
   3:debug.c       **** #include "debug.h"
   4:debug.c       **** #include <stdarg.h> // handles variable argument list
   5:debug.c       **** 
   6:debug.c       **** char    BB_fileName[30] = "blackbox.txt";
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 2


   7:debug.c       **** 
   8:debug.c       **** // Set debug level based on what you want printed/ written to SD card
   9:debug.c       **** // 0u = none ; 1u = warnings and errors; 2u = all
  10:debug.c       **** uint8   debug_level = 1u;
  11:debug.c       **** 
  12:debug.c       **** // function to start UART debug
  13:debug.c       **** void debug_start(){
  45              		.loc 1 13 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 1, uses_anonymous_args = 0
  49 0000 80B5     		push	{r7, lr}
  50              		.cfi_def_cfa_offset 8
  51              		.cfi_offset 7, -8
  52              		.cfi_offset 14, -4
  53 0002 00AF     		add	r7, sp, #0
  54              		.cfi_def_cfa_register 7
  14:debug.c       ****     // if debug flag = 1 then start UART
  15:debug.c       ****     #if USE_DEBUG
  16:debug.c       ****        Debug_UART_Start();
  55              		.loc 1 16 0
  56 0004 FFF7FEFF 		bl	Debug_UART_Start
  17:debug.c       ****        //setvbuf(stdout, NULL, _IOFBF, Debug_UART_TX_BUFFER_SIZE);//this sets the printf() bufefr t
  18:debug.c       ****        //setbuf(stdout, NULL);
  19:debug.c       ****     #endif
  20:debug.c       **** }
  57              		.loc 1 20 0
  58 0008 00BF     		nop
  59 000a 80BD     		pop	{r7, pc}
  60              		.cfi_endproc
  61              	.LFE64:
  62              		.size	debug_start, .-debug_start
  63              		.section	.text.debug_stop,"ax",%progbits
  64              		.align	2
  65              		.global	debug_stop
  66              		.thumb
  67              		.thumb_func
  68              		.type	debug_stop, %function
  69              	debug_stop:
  70              	.LFB65:
  21:debug.c       **** 
  22:debug.c       **** // function to stop UART debug
  23:debug.c       **** void debug_stop(){
  71              		.loc 1 23 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 1, uses_anonymous_args = 0
  75 0000 80B5     		push	{r7, lr}
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 7, -8
  78              		.cfi_offset 14, -4
  79 0002 00AF     		add	r7, sp, #0
  80              		.cfi_def_cfa_register 7
  24:debug.c       ****     // if debug flag = 1 then stop UART
  25:debug.c       ****     #if USE_DEBUG
  26:debug.c       ****         Debug_UART_Stop();
  81              		.loc 1 26 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 3


  82 0004 FFF7FEFF 		bl	Debug_UART_Stop
  27:debug.c       ****     #endif
  28:debug.c       **** }
  83              		.loc 1 28 0
  84 0008 00BF     		nop
  85 000a 80BD     		pop	{r7, pc}
  86              		.cfi_endproc
  87              	.LFE65:
  88              		.size	debug_stop, .-debug_stop
  89              		.section	.text.debug_sleep,"ax",%progbits
  90              		.align	2
  91              		.global	debug_sleep
  92              		.thumb
  93              		.thumb_func
  94              		.type	debug_sleep, %function
  95              	debug_sleep:
  96              	.LFB66:
  29:debug.c       **** 
  30:debug.c       **** // function to sleep UART debug
  31:debug.c       **** void debug_sleep(){
  97              		.loc 1 31 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 1, uses_anonymous_args = 0
 101 0000 80B5     		push	{r7, lr}
 102              		.cfi_def_cfa_offset 8
 103              		.cfi_offset 7, -8
 104              		.cfi_offset 14, -4
 105 0002 00AF     		add	r7, sp, #0
 106              		.cfi_def_cfa_register 7
  32:debug.c       ****     // if debug flag = 1 and printf still writing, sleep UART
  33:debug.c       ****     #if USE_DEBUG
  34:debug.c       **** 
  35:debug.c       ****         // Check if UART is busy writing and waiit, if needed
  36:debug.c       ****         // Debug_UART_ReadTxStatus() reads the status register for the TX portion of the UART.
  37:debug.c       ****         if(!(Debug_UART_ReadTxStatus() & Debug_UART_TX_STS_FIFO_EMPTY)){
 107              		.loc 1 37 0
 108 0004 FFF7FEFF 		bl	Debug_UART_ReadTxStatus
 109 0008 0346     		mov	r3, r0
 110 000a 03F00203 		and	r3, r3, #2
 111 000e 002B     		cmp	r3, #0
 112 0010 02D1     		bne	.L4
  38:debug.c       ****             CyDelay(1u);
 113              		.loc 1 38 0
 114 0012 0120     		movs	r0, #1
 115 0014 FFF7FEFF 		bl	CyDelay
 116              	.L4:
  39:debug.c       ****         }
  40:debug.c       ****     // This is the preferred API to prepare the component for sleep. 
  41:debug.c       ****     // The Debug_UART_Sleep() API saves the current component state. Then it calls the Debug_UART_S
  42:debug.c       ****     Debug_UART_Sleep(); 
 117              		.loc 1 42 0
 118 0018 FFF7FEFF 		bl	Debug_UART_Sleep
  43:debug.c       ****    #endif
  44:debug.c       ****    
  45:debug.c       **** }
 119              		.loc 1 45 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 4


 120 001c 00BF     		nop
 121 001e 80BD     		pop	{r7, pc}
 122              		.cfi_endproc
 123              	.LFE66:
 124              		.size	debug_sleep, .-debug_sleep
 125              		.section	.text.debug_wakeup,"ax",%progbits
 126              		.align	2
 127              		.global	debug_wakeup
 128              		.thumb
 129              		.thumb_func
 130              		.type	debug_wakeup, %function
 131              	debug_wakeup:
 132              	.LFB67:
  46:debug.c       **** 
  47:debug.c       **** // function to wakeup UART debug
  48:debug.c       **** void debug_wakeup(){
 133              		.loc 1 48 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 1, uses_anonymous_args = 0
 137 0000 80B5     		push	{r7, lr}
 138              		.cfi_def_cfa_offset 8
 139              		.cfi_offset 7, -8
 140              		.cfi_offset 14, -4
 141 0002 00AF     		add	r7, sp, #0
 142              		.cfi_def_cfa_register 7
  49:debug.c       ****     // if debug flag = 1, wakeup UART debug and turn off stillWriting flag
  50:debug.c       ****     #if USE_DEBUG
  51:debug.c       ****         Debug_UART_Wakeup();
 143              		.loc 1 51 0
 144 0004 FFF7FEFF 		bl	Debug_UART_Wakeup
  52:debug.c       ****     #endif
  53:debug.c       **** }
 145              		.loc 1 53 0
 146 0008 00BF     		nop
 147 000a 80BD     		pop	{r7, pc}
 148              		.cfi_endproc
 149              	.LFE67:
 150              		.size	debug_wakeup, .-debug_wakeup
 151              		.section	.text._write,"ax",%progbits
 152              		.align	2
 153              		.global	_write
 154              		.thumb
 155              		.thumb_func
 156              		.type	_write, %function
 157              	_write:
 158              	.LFB68:
  54:debug.c       **** 
  55:debug.c       **** // if debug flag = 1, and using the GCC compiler, revise the _write() function so that when we call
  56:debug.c       **** // NOTE: For this to work HEAP size in "System" must be set to 0x300 or more
  57:debug.c       **** // Stack and heap are both a part of memory. Stack holds functions, variables, etc. Heap sits on to
  58:debug.c       **** // If heap is too small, then you get a stack overflow. FOr printing, need to have a bigger heap. B
  59:debug.c       **** // If have memory problems, play around with heap size.
  60:debug.c       **** #if USE_DEBUG
  61:debug.c       ****     
  62:debug.c       ****     
  63:debug.c       **** // This will allow you to use printf(), as you would in regulart c programs
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 5


  64:debug.c       **** // careful though, printf() is sometimes not safe in embedded sytems
  65:debug.c       **** // may want to use printd() function below
  66:debug.c       **** int _write(int file, char *ptr, int len)
  67:debug.c       **** {
 159              		.loc 1 67 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 24
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 86B0     		sub	sp, sp, #24
 168              		.cfi_def_cfa_offset 32
 169 0004 00AF     		add	r7, sp, #0
 170              		.cfi_def_cfa_register 7
 171 0006 F860     		str	r0, [r7, #12]
 172 0008 B960     		str	r1, [r7, #8]
 173 000a 7A60     		str	r2, [r7, #4]
  68:debug.c       ****     int i;
  69:debug.c       ****     file = file;
  70:debug.c       ****     for (i = 0; i < len; i++)
 174              		.loc 1 70 0
 175 000c 0023     		movs	r3, #0
 176 000e 7B61     		str	r3, [r7, #20]
 177 0010 09E0     		b	.L7
 178              	.L8:
  71:debug.c       ****     {   
  72:debug.c       ****         // Puts a byte of data into the transmit buffer to be sent when the bus is available.
  73:debug.c       ****         Debug_UART_PutChar(*ptr++);
 179              		.loc 1 73 0 discriminator 3
 180 0012 BB68     		ldr	r3, [r7, #8]
 181 0014 5A1C     		adds	r2, r3, #1
 182 0016 BA60     		str	r2, [r7, #8]
 183 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 184 001a 1846     		mov	r0, r3
 185 001c FFF7FEFF 		bl	Debug_UART_PutChar
  70:debug.c       ****     {   
 186              		.loc 1 70 0 discriminator 3
 187 0020 7B69     		ldr	r3, [r7, #20]
 188 0022 0133     		adds	r3, r3, #1
 189 0024 7B61     		str	r3, [r7, #20]
 190              	.L7:
  70:debug.c       ****     {   
 191              		.loc 1 70 0 is_stmt 0 discriminator 1
 192 0026 7A69     		ldr	r2, [r7, #20]
 193 0028 7B68     		ldr	r3, [r7, #4]
 194 002a 9A42     		cmp	r2, r3
 195 002c F1DB     		blt	.L8
  74:debug.c       ****     }
  75:debug.c       ****     
  76:debug.c       ****     return (len);
 196              		.loc 1 76 0 is_stmt 1
 197 002e 7B68     		ldr	r3, [r7, #4]
  77:debug.c       **** }
 198              		.loc 1 77 0
 199 0030 1846     		mov	r0, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 6


 200 0032 1837     		adds	r7, r7, #24
 201              		.cfi_def_cfa_offset 8
 202 0034 BD46     		mov	sp, r7
 203              		.cfi_def_cfa_register 13
 204              		@ sp needed
 205 0036 80BD     		pop	{r7, pc}
 206              		.cfi_endproc
 207              	.LFE68:
 208              		.size	_write, .-_write
 209              		.section	.rodata
 210              		.align	2
 211              	.LC0:
 212 0000 7B2000   		.ascii	"{ \000"
 213 0003 00       		.align	2
 214              	.LC1:
 215 0004 22657665 		.ascii	"\"event\":\"warning\" \"value\":\"\000"
 215      6E74223A 
 215      22776172 
 215      6E696E67 
 215      22202276 
 216              		.align	2
 217              	.LC2:
 218 0020 22657665 		.ascii	"\"event\":\"error\" \"value\":\"\000"
 218      6E74223A 
 218      22657272 
 218      6F722220 
 218      2276616C 
 219 003a 0000     		.align	2
 220              	.LC3:
 221 003c 227D0D0A 		.ascii	"\"}\015\012\000"
 221      00
 222 0041 000000   		.align	2
 223              	.LC4:
 224 0044 612B00   		.ascii	"a+\000"
 225 0047 00       		.align	2
 226              	.LC5:
 227 0048 2274696D 		.ascii	"\"time\":\"%ld\" \000"
 227      65223A22 
 227      256C6422 
 227      2000
 228 0056 0000     		.align	2
 229              	.LC6:
 230 0058 22657665 		.ascii	"\"event\":\"notif\" \"value\":\"\000"
 230      6E74223A 
 230      226E6F74 
 230      69662220 
 230      2276616C 
 231 0072 0000     		.align	2
 232              	.LC7:
 233 0074 22657665 		.ascii	"\"event\":\"undefined\" \"value\":\"\000"
 233      6E74223A 
 233      22756E64 
 233      6566696E 
 233      65642220 
 234              		.section	.text.printNotif,"ax",%progbits
 235              		.align	2
 236              		.global	printNotif
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 7


 237              		.thumb
 238              		.thumb_func
 239              		.type	printNotif, %function
 240              	printNotif:
 241              	.LFB69:
  78:debug.c       **** 
  79:debug.c       **** #endif
  80:debug.c       **** 
  81:debug.c       **** // Create function to hijack printf to add an epoch timestamp to print output
  82:debug.c       **** // Whenever a function is declared to have an indeterminate number of arguments, in place of the la
  83:debug.c       **** // to tell the compiler the function should accept however many arguments that the programmer uses,
  84:debug.c       **** // to at least the number of variables declared. 
  85:debug.c       **** void printNotif(uint8 type, char* format, ...){
 242              		.loc 1 85 0
 243              		.cfi_startproc
 244              		@ args = 4, pretend = 12, frame = 2064
 245              		@ frame_needed = 1, uses_anonymous_args = 1
 246 0000 0EB4     		push	{r1, r2, r3}
 247              		.cfi_def_cfa_offset 12
 248              		.cfi_offset 1, -12
 249              		.cfi_offset 2, -8
 250              		.cfi_offset 3, -4
 251 0002 80B5     		push	{r7, lr}
 252              		.cfi_def_cfa_offset 20
 253              		.cfi_offset 7, -20
 254              		.cfi_offset 14, -16
 255 0004 ADF6140D 		subw	sp, sp, #2068
 256              		.cfi_def_cfa_offset 2088
 257 0008 00AF     		add	r7, sp, #0
 258              		.cfi_def_cfa_register 7
 259 000a 0246     		mov	r2, r0
 260 000c FB1D     		adds	r3, r7, #7
 261 000e 1A70     		strb	r2, [r3]
  86:debug.c       ****     
  87:debug.c       ****     // if debug flag = 1
  88:debug.c       ****     #if USE_DEBUG
  89:debug.c       **** 
  90:debug.c       ****         // if debug level = 0 -- so don't print anything
  91:debug.c       ****         if (debug_level == 0u){
 262              		.loc 1 91 0
 263 0010 434B     		ldr	r3, .L21
 264 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 265 0014 002B     		cmp	r3, #0
 266 0016 7AD0     		beq	.L20
  92:debug.c       ****             return;
  93:debug.c       **** 
  94:debug.c       ****         // if debug level =  1 -- only print warnings and errors
  95:debug.c       ****         }else if (debug_level == 1u){
 267              		.loc 1 95 0
 268 0018 414B     		ldr	r3, .L21
 269 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270 001c 012B     		cmp	r3, #1
 271 001e 2FD1     		bne	.L13
 272              	.LBB2:
  96:debug.c       ****         
  97:debug.c       ****             printd("{ ");
 273              		.loc 1 97 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 8


 274 0020 4048     		ldr	r0, .L21+4
 275 0022 FFF7FEFF 		bl	printd
  98:debug.c       ****             if(type == NOTIF_TYPE_WARNING){
 276              		.loc 1 98 0
 277 0026 FB1D     		adds	r3, r7, #7
 278 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 279 002a 012B     		cmp	r3, #1
 280 002c 03D1     		bne	.L14
  99:debug.c       ****                 printd("\"event\":\"warning\" \"value\":\"");
 281              		.loc 1 99 0
 282 002e 3E48     		ldr	r0, .L21+8
 283 0030 FFF7FEFF 		bl	printd
 284 0034 06E0     		b	.L15
 285              	.L14:
 100:debug.c       ****             }else if(type == NOTIF_TYPE_ERROR){
 286              		.loc 1 100 0
 287 0036 FB1D     		adds	r3, r7, #7
 288 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 289 003a 022B     		cmp	r3, #2
 290 003c 02D1     		bne	.L15
 101:debug.c       ****                 printd("\"event\":\"error\" \"value\":\"");
 291              		.loc 1 101 0
 292 003e 3B48     		ldr	r0, .L21+12
 293 0040 FFF7FEFF 		bl	printd
 294              	.L15:
 102:debug.c       ****             }
 103:debug.c       ****                 
 104:debug.c       ****             va_list argptr; // create variable argprt of the type va_list from stdarg.h
 105:debug.c       ****             va_start(argptr, format); // from stdarg.h: the va_start() macro is invoked to initiali
 295              		.loc 1 105 0 discriminator 2
 296 0044 07F50263 		add	r3, r7, #2080
 297 0048 C7F80C38 		str	r3, [r7, #2060]
 106:debug.c       ****             char debug_string[MAX_DEBUG_STRING_LENGTH];
 107:debug.c       ****             vsnprintf(debug_string,MAX_DEBUG_STRING_LENGTH,format, argptr);
 298              		.loc 1 107 0 discriminator 2
 299 004c 07F10800 		add	r0, r7, #8
 300 0050 D7F80C38 		ldr	r3, [r7, #2060]
 301 0054 D7F81C28 		ldr	r2, [r7, #2076]
 302 0058 4FF40061 		mov	r1, #2048
 303 005c FFF7FEFF 		bl	vsnprintf
 108:debug.c       ****             // Sends a NULL terminated string to the TX buffer for transmission
 109:debug.c       ****             Debug_UART_PutString(debug_string);
 304              		.loc 1 109 0 discriminator 2
 305 0060 07F10803 		add	r3, r7, #8
 306 0064 1846     		mov	r0, r3
 307 0066 FFF7FEFF 		bl	Debug_UART_PutString
 110:debug.c       ****             va_end(argptr); // the va_end() macro is used to clean up; it invalidates ap for use (u
 111:debug.c       **** 
 112:debug.c       ****             printd("\"}\r\n");
 308              		.loc 1 112 0 discriminator 2
 309 006a 3148     		ldr	r0, .L21+16
 310 006c FFF7FEFF 		bl	printd
 113:debug.c       ****     
 114:debug.c       ****             SD_write(BB_fileName,"a+",debug_string); // Write data to SD Card
 311              		.loc 1 114 0 discriminator 2
 312 0070 07F10803 		add	r3, r7, #8
 313 0074 1A46     		mov	r2, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 9


 314 0076 2F49     		ldr	r1, .L21+20
 315 0078 2F48     		ldr	r0, .L21+24
 316 007a FFF7FEFF 		bl	SD_write
 317              	.LBE2:
 318 007e 47E0     		b	.L10
 319              	.L13:
 115:debug.c       ****             
 116:debug.c       ****         // if debug level = 2 -- print everything
 117:debug.c       ****         } else if (debug_level == 2u){
 320              		.loc 1 117 0
 321 0080 274B     		ldr	r3, .L21
 322 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 323 0084 022B     		cmp	r3, #2
 324 0086 43D1     		bne	.L10
 325              	.LBB3:
 118:debug.c       ****             //basically, just hijack printf and inject the timestamp infront
 119:debug.c       ****             printd("{ ");
 326              		.loc 1 119 0
 327 0088 2648     		ldr	r0, .L21+4
 328 008a FFF7FEFF 		bl	printd
 120:debug.c       ****             printd("\"time\":\"%ld\" " , getTimeStamp());
 329              		.loc 1 120 0
 330 008e FFF7FEFF 		bl	getTimeStamp
 331 0092 0346     		mov	r3, r0
 332 0094 1946     		mov	r1, r3
 333 0096 2948     		ldr	r0, .L21+28
 334 0098 FFF7FEFF 		bl	printd
 121:debug.c       ****             if(type == NOTIF_TYPE_EVENT){
 335              		.loc 1 121 0
 336 009c FB1D     		adds	r3, r7, #7
 337 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 338 00a0 002B     		cmp	r3, #0
 339 00a2 03D1     		bne	.L16
 122:debug.c       ****                 printd("\"event\":\"notif\" \"value\":\"");
 340              		.loc 1 122 0
 341 00a4 2648     		ldr	r0, .L21+32
 342 00a6 FFF7FEFF 		bl	printd
 343 00aa 12E0     		b	.L17
 344              	.L16:
 123:debug.c       ****             }else if(type == NOTIF_TYPE_WARNING){
 345              		.loc 1 123 0
 346 00ac FB1D     		adds	r3, r7, #7
 347 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 348 00b0 012B     		cmp	r3, #1
 349 00b2 03D1     		bne	.L18
 124:debug.c       ****                 printd("\"event\":\"warning\" \"value\":\"");
 350              		.loc 1 124 0
 351 00b4 1C48     		ldr	r0, .L21+8
 352 00b6 FFF7FEFF 		bl	printd
 353 00ba 0AE0     		b	.L17
 354              	.L18:
 125:debug.c       ****             }else if(type == NOTIF_TYPE_ERROR){
 355              		.loc 1 125 0
 356 00bc FB1D     		adds	r3, r7, #7
 357 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 358 00c0 022B     		cmp	r3, #2
 359 00c2 03D1     		bne	.L19
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 10


 126:debug.c       ****                 printd("\"event\":\"error\" \"value\":\"");
 360              		.loc 1 126 0
 361 00c4 1948     		ldr	r0, .L21+12
 362 00c6 FFF7FEFF 		bl	printd
 363 00ca 02E0     		b	.L17
 364              	.L19:
 127:debug.c       ****             }else{
 128:debug.c       ****                printd("\"event\":\"undefined\" \"value\":\""); 
 365              		.loc 1 128 0
 366 00cc 1D48     		ldr	r0, .L21+36
 367 00ce FFF7FEFF 		bl	printd
 368              	.L17:
 129:debug.c       ****             }
 130:debug.c       ****             
 131:debug.c       ****             va_list argptr; // create variable argprt of the type va_list from stdarg.h which can s
 132:debug.c       ****             va_start(argptr, format); // from stdarg.h: the va_start() macro is invoked to initiali
 369              		.loc 1 132 0 discriminator 3
 370 00d2 07F50263 		add	r3, r7, #2080
 371 00d6 C7F80838 		str	r3, [r7, #2056]
 133:debug.c       ****             char debug_string[MAX_DEBUG_STRING_LENGTH];
 134:debug.c       ****             vsnprintf(debug_string, MAX_DEBUG_STRING_LENGTH, format, argptr);
 372              		.loc 1 134 0 discriminator 3
 373 00da 07F10800 		add	r0, r7, #8
 374 00de D7F80838 		ldr	r3, [r7, #2056]
 375 00e2 D7F81C28 		ldr	r2, [r7, #2076]
 376 00e6 4FF40061 		mov	r1, #2048
 377 00ea FFF7FEFF 		bl	vsnprintf
 135:debug.c       ****             // Sends a NULL terminated string to the TX buffer for transmission
 136:debug.c       ****             Debug_UART_PutString(debug_string);
 378              		.loc 1 136 0 discriminator 3
 379 00ee 07F10803 		add	r3, r7, #8
 380 00f2 1846     		mov	r0, r3
 381 00f4 FFF7FEFF 		bl	Debug_UART_PutString
 137:debug.c       ****             va_end(argptr); // the va_end() macro is used to clean up; it invalidates ap for use (u
 138:debug.c       **** 
 139:debug.c       ****             printd("\"}\r\n");
 382              		.loc 1 139 0 discriminator 3
 383 00f8 0D48     		ldr	r0, .L21+16
 384 00fa FFF7FEFF 		bl	printd
 140:debug.c       ****             
 141:debug.c       ****             SD_write(BB_fileName,"a+",debug_string); // Write data to SD Card
 385              		.loc 1 141 0 discriminator 3
 386 00fe 07F10803 		add	r3, r7, #8
 387 0102 1A46     		mov	r2, r3
 388 0104 0B49     		ldr	r1, .L21+20
 389 0106 0C48     		ldr	r0, .L21+24
 390 0108 FFF7FEFF 		bl	SD_write
 391 010c 00E0     		b	.L10
 392              	.L20:
 393              	.LBE3:
  92:debug.c       **** 
 394              		.loc 1 92 0
 395 010e 00BF     		nop
 396              	.L10:
 142:debug.c       ****         
 143:debug.c       ****         }
 144:debug.c       ****                
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 11


 145:debug.c       ****     //va_list argptr; // create variable argprt of the type va_list from stdarg.h
 146:debug.c       ****     //va_start(argptr, format); // from stdarg.h: the va_start() macro is invoked to initialize ap 
 147:debug.c       ****     //char debug_string[MAX_DEBUG_STRING_LENGTH];
 148:debug.c       ****     //vsnprintf(debug_string,MAX_DEBUG_STRING_LENGTH,format, argptr);
 149:debug.c       ****     // Sends a NULL terminated string to the TX buffer for transmission
 150:debug.c       ****     //Debug_UART_PutString(debug_string);
 151:debug.c       ****     //va_end(argptr); // the va_end() macro is used to clean up; it invalidates ap for use (unless 
 152:debug.c       **** 
 153:debug.c       ****     //printd("\"}\r\n");
 154:debug.c       ****     
 155:debug.c       ****     //SD_write(BB_fileName,"a+",debug_string); // Write data to SD Card
 156:debug.c       ****     
 157:debug.c       ****     #endif
 158:debug.c       ****     
 159:debug.c       **** }
 397              		.loc 1 159 0
 398 0110 07F61407 		addw	r7, r7, #2068
 399              		.cfi_def_cfa_offset 20
 400 0114 BD46     		mov	sp, r7
 401              		.cfi_def_cfa_register 13
 402              		@ sp needed
 403 0116 BDE88040 		pop	{r7, lr}
 404              		.cfi_restore 14
 405              		.cfi_restore 7
 406              		.cfi_def_cfa_offset 12
 407 011a 03B0     		add	sp, sp, #12
 408              		.cfi_restore 3
 409              		.cfi_restore 2
 410              		.cfi_restore 1
 411              		.cfi_def_cfa_offset 0
 412 011c 7047     		bx	lr
 413              	.L22:
 414 011e 00BF     		.align	2
 415              	.L21:
 416 0120 00000000 		.word	debug_level
 417 0124 00000000 		.word	.LC0
 418 0128 04000000 		.word	.LC1
 419 012c 20000000 		.word	.LC2
 420 0130 3C000000 		.word	.LC3
 421 0134 44000000 		.word	.LC4
 422 0138 00000000 		.word	BB_fileName
 423 013c 48000000 		.word	.LC5
 424 0140 58000000 		.word	.LC6
 425 0144 74000000 		.word	.LC7
 426              		.cfi_endproc
 427              	.LFE69:
 428              		.size	printNotif, .-printNotif
 429              		.section	.rodata
 430 0092 0000     		.align	2
 431              	.LC8:
 432 0094 22657665 		.ascii	"\"event\":\"test\" \000"
 432      6E74223A 
 432      22746573 
 432      74222000 
 433              		.align	2
 434              	.LC9:
 435 00a4 226E616D 		.ascii	"\"name\":\"%s\" \000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 12


 435      65223A22 
 435      25732220 
 435      00
 436 00b1 000000   		.align	2
 437              	.LC10:
 438 00b4 22737461 		.ascii	"\"status\":\"%d\" \000"
 438      74757322 
 438      3A222564 
 438      222000
 439 00c3 00       		.align	2
 440              	.LC11:
 441 00c4 22726561 		.ascii	"\"reason\":\"%s\" \000"
 441      736F6E22 
 441      3A222573 
 441      222000
 442 00d3 00       		.align	2
 443              	.LC12:
 444 00d4 7D0D0A00 		.ascii	"}\015\012\000"
 445              		.section	.text.printTestStatus,"ax",%progbits
 446              		.align	2
 447              		.global	printTestStatus
 448              		.thumb
 449              		.thumb_func
 450              		.type	printTestStatus, %function
 451              	printTestStatus:
 452              	.LFB70:
 160:debug.c       **** 
 161:debug.c       **** // Print debug test status
 162:debug.c       **** void printTestStatus(test_t test){
 453              		.loc 1 162 0
 454              		.cfi_startproc
 455              		@ args = 388, pretend = 16, frame = 0
 456              		@ frame_needed = 1, uses_anonymous_args = 0
 457 0000 84B0     		sub	sp, sp, #16
 458              		.cfi_def_cfa_offset 16
 459 0002 80B5     		push	{r7, lr}
 460              		.cfi_def_cfa_offset 24
 461              		.cfi_offset 7, -24
 462              		.cfi_offset 14, -20
 463 0004 00AF     		add	r7, sp, #0
 464              		.cfi_def_cfa_register 7
 465 0006 07F1080E 		add	lr, r7, #8
 466 000a 8EE80F00 		stmia	lr, {r0, r1, r2, r3}
 163:debug.c       ****     // if debug flag = 1
 164:debug.c       ****     #if USE_DEBUG
 165:debug.c       ****         printd("{ ");
 467              		.loc 1 165 0
 468 000e 1348     		ldr	r0, .L24
 469 0010 FFF7FEFF 		bl	printd
 166:debug.c       ****         printd("\"time\":\"%ld\" " , getTimeStamp());
 470              		.loc 1 166 0
 471 0014 FFF7FEFF 		bl	getTimeStamp
 472 0018 0346     		mov	r3, r0
 473 001a 1946     		mov	r1, r3
 474 001c 1048     		ldr	r0, .L24+4
 475 001e FFF7FEFF 		bl	printd
 167:debug.c       ****         
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 13


 168:debug.c       ****         printd("\"event\":\"test\" ");
 476              		.loc 1 168 0
 477 0022 1048     		ldr	r0, .L24+8
 478 0024 FFF7FEFF 		bl	printd
 169:debug.c       ****         printd("\"name\":\"%s\" ", test.test_name);
 479              		.loc 1 169 0
 480 0028 07F10801 		add	r1, r7, #8
 481 002c 0E48     		ldr	r0, .L24+12
 482 002e FFF7FEFF 		bl	printd
 170:debug.c       ****         printd("\"status\":\"%d\" ", test.status);
 483              		.loc 1 170 0
 484 0032 97F88830 		ldrb	r3, [r7, #136]	@ zero_extendqisi2
 485 0036 1946     		mov	r1, r3
 486 0038 0C48     		ldr	r0, .L24+16
 487 003a FFF7FEFF 		bl	printd
 171:debug.c       ****         printd("\"reason\":\"%s\" ", test.reason);
 488              		.loc 1 171 0
 489 003e 07F18903 		add	r3, r7, #137
 490 0042 1946     		mov	r1, r3
 491 0044 0A48     		ldr	r0, .L24+20
 492 0046 FFF7FEFF 		bl	printd
 172:debug.c       **** 
 173:debug.c       ****         printd("}\r\n");
 493              		.loc 1 173 0
 494 004a 0A48     		ldr	r0, .L24+24
 495 004c FFF7FEFF 		bl	printd
 174:debug.c       ****     #endif
 175:debug.c       ****    
 176:debug.c       **** }
 496              		.loc 1 176 0
 497 0050 00BF     		nop
 498 0052 BD46     		mov	sp, r7
 499              		.cfi_def_cfa_register 13
 500              		@ sp needed
 501 0054 BDE88040 		pop	{r7, lr}
 502              		.cfi_restore 14
 503              		.cfi_restore 7
 504              		.cfi_def_cfa_offset 16
 505 0058 04B0     		add	sp, sp, #16
 506              		.cfi_def_cfa_offset 0
 507 005a 7047     		bx	lr
 508              	.L25:
 509              		.align	2
 510              	.L24:
 511 005c 00000000 		.word	.LC0
 512 0060 48000000 		.word	.LC5
 513 0064 94000000 		.word	.LC8
 514 0068 A4000000 		.word	.LC9
 515 006c B4000000 		.word	.LC10
 516 0070 C4000000 		.word	.LC11
 517 0074 D4000000 		.word	.LC12
 518              		.cfi_endproc
 519              	.LFE70:
 520              		.size	printTestStatus, .-printTestStatus
 521              		.section	.text.getTimeStamp,"ax",%progbits
 522              		.align	2
 523              		.global	getTimeStamp
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 14


 524              		.thumb
 525              		.thumb_func
 526              		.type	getTimeStamp, %function
 527              	getTimeStamp:
 528              	.LFB71:
 177:debug.c       **** 
 178:debug.c       **** 
 179:debug.c       **** // Returns local times in epoch seconds (seconds since Jan 1, 1970)
 180:debug.c       **** // Can also cast this to a t_of_day struct
 181:debug.c       **** long getTimeStamp(){
 529              		.loc 1 181 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 48
 532              		@ frame_needed = 1, uses_anonymous_args = 0
 533 0000 80B5     		push	{r7, lr}
 534              		.cfi_def_cfa_offset 8
 535              		.cfi_offset 7, -8
 536              		.cfi_offset 14, -4
 537 0002 8CB0     		sub	sp, sp, #48
 538              		.cfi_def_cfa_offset 56
 539 0004 00AF     		add	r7, sp, #0
 540              		.cfi_def_cfa_register 7
 182:debug.c       ****     // RTC_TIME_DATE * RTC_ReadTime(void) Description: Reads the current time and date. Parameters:
 183:debug.c       ****     // Creates a variable named localTime that is a pointer to RTC_TIME_DATE. It saves the time and
 184:debug.c       ****     RTC_TIME_DATE *localTime = RTC_ReadTime();
 541              		.loc 1 184 0
 542 0006 FFF7FEFF 		bl	RTC_ReadTime
 543 000a F862     		str	r0, [r7, #44]
 185:debug.c       ****    
 186:debug.c       ****     struct tm t; // creates variable t of struct tm
 187:debug.c       ****     time_t t_of_day;
 188:debug.c       **** 
 189:debug.c       ****     // sets each variable to the correct time 
 190:debug.c       ****     t.tm_sec = localTime->Sec;
 544              		.loc 1 190 0
 545 000c FB6A     		ldr	r3, [r7, #44]
 546 000e 1B78     		ldrb	r3, [r3]
 547 0010 DBB2     		uxtb	r3, r3
 548 0012 7B60     		str	r3, [r7, #4]
 191:debug.c       ****     t.tm_min = localTime->Min;
 549              		.loc 1 191 0
 550 0014 FB6A     		ldr	r3, [r7, #44]
 551 0016 5B78     		ldrb	r3, [r3, #1]
 552 0018 DBB2     		uxtb	r3, r3
 553 001a BB60     		str	r3, [r7, #8]
 192:debug.c       ****     t.tm_hour = localTime->Hour;
 554              		.loc 1 192 0
 555 001c FB6A     		ldr	r3, [r7, #44]
 556 001e 9B78     		ldrb	r3, [r3, #2]
 557 0020 DBB2     		uxtb	r3, r3
 558 0022 FB60     		str	r3, [r7, #12]
 193:debug.c       ****     t.tm_year = localTime->Year - 1900;  // Year - 1900
 559              		.loc 1 193 0
 560 0024 FB6A     		ldr	r3, [r7, #44]
 561 0026 5B89     		ldrh	r3, [r3, #10]	@ movhi
 562 0028 9BB2     		uxth	r3, r3
 563 002a A3F26C73 		subw	r3, r3, #1900
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 15


 564 002e BB61     		str	r3, [r7, #24]
 194:debug.c       ****     t.tm_mon = localTime->Month;           // Month, where 0 = jan
 565              		.loc 1 194 0
 566 0030 FB6A     		ldr	r3, [r7, #44]
 567 0032 1B7A     		ldrb	r3, [r3, #8]
 568 0034 DBB2     		uxtb	r3, r3
 569 0036 7B61     		str	r3, [r7, #20]
 195:debug.c       ****     t.tm_mday = localTime->DayOfMonth;          // Day of the month
 570              		.loc 1 195 0
 571 0038 FB6A     		ldr	r3, [r7, #44]
 572 003a 1B79     		ldrb	r3, [r3, #4]
 573 003c DBB2     		uxtb	r3, r3
 574 003e 3B61     		str	r3, [r7, #16]
 196:debug.c       ****     t.tm_isdst = 0;        // Is Daylight Savings on? 1 = yes, 0 = no, -1 = unknown
 575              		.loc 1 196 0
 576 0040 0023     		movs	r3, #0
 577 0042 7B62     		str	r3, [r7, #36]
 197:debug.c       ****     
 198:debug.c       ****     // the mktime() function converts a broken-down local time (pointed to by timeptr) and returns 
 199:debug.c       ****     // the syntax for the mktime function in the C Language is: time_t mktime(struct tm *timeptr);
 200:debug.c       ****     // creates variable t_of_day of type time_t
 201:debug.c       ****     t_of_day = mktime(&t); // determines a calendar time
 578              		.loc 1 201 0
 579 0044 3B1D     		adds	r3, r7, #4
 580 0046 1846     		mov	r0, r3
 581 0048 FFF7FEFF 		bl	mktime
 582 004c B862     		str	r0, [r7, #40]
 202:debug.c       **** 
 203:debug.c       ****     return (long) t_of_day;
 583              		.loc 1 203 0
 584 004e BB6A     		ldr	r3, [r7, #40]
 204:debug.c       **** }
 585              		.loc 1 204 0
 586 0050 1846     		mov	r0, r3
 587 0052 3037     		adds	r7, r7, #48
 588              		.cfi_def_cfa_offset 8
 589 0054 BD46     		mov	sp, r7
 590              		.cfi_def_cfa_register 13
 591              		@ sp needed
 592 0056 80BD     		pop	{r7, pc}
 593              		.cfi_endproc
 594              	.LFE71:
 595              		.size	getTimeStamp, .-getTimeStamp
 596              		.section	.text.stripEscapeCharacters,"ax",%progbits
 597              		.align	2
 598              		.global	stripEscapeCharacters
 599              		.thumb
 600              		.thumb_func
 601              		.type	stripEscapeCharacters, %function
 602              	stripEscapeCharacters:
 603              	.LFB72:
 205:debug.c       **** 
 206:debug.c       **** // The C library function char *strchr(const char *str, int c) searches for the first occurrence of
 207:debug.c       **** // Format for strchr() function: char *strchr(const char *str, int c).
 208:debug.c       **** void stripEscapeCharacters(char *string){
 604              		.loc 1 208 0
 605              		.cfi_startproc
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 16


 606              		@ args = 0, pretend = 0, frame = 16
 607              		@ frame_needed = 1, uses_anonymous_args = 0
 608 0000 80B5     		push	{r7, lr}
 609              		.cfi_def_cfa_offset 8
 610              		.cfi_offset 7, -8
 611              		.cfi_offset 14, -4
 612 0002 84B0     		sub	sp, sp, #16
 613              		.cfi_def_cfa_offset 24
 614 0004 00AF     		add	r7, sp, #0
 615              		.cfi_def_cfa_register 7
 616 0006 7860     		str	r0, [r7, #4]
 209:debug.c       **** 
 210:debug.c       ****   char * pch;
 211:debug.c       ****   pch=strchr(string,'\n');
 617              		.loc 1 211 0
 618 0008 0A21     		movs	r1, #10
 619 000a 7868     		ldr	r0, [r7, #4]
 620 000c FFF7FEFF 		bl	strchr
 621 0010 F860     		str	r0, [r7, #12]
 212:debug.c       ****   while (pch!=NULL)
 622              		.loc 1 212 0
 623 0012 0EE0     		b	.L29
 624              	.L30:
 213:debug.c       ****   {
 214:debug.c       ****     string[pch-string+1] = 0;
 625              		.loc 1 214 0
 626 0014 FA68     		ldr	r2, [r7, #12]
 627 0016 7B68     		ldr	r3, [r7, #4]
 628 0018 D31A     		subs	r3, r2, r3
 629 001a 0133     		adds	r3, r3, #1
 630 001c 7A68     		ldr	r2, [r7, #4]
 631 001e 1344     		add	r3, r3, r2
 632 0020 0022     		movs	r2, #0
 633 0022 1A70     		strb	r2, [r3]
 215:debug.c       ****     pch=strchr(pch+1,'s');
 634              		.loc 1 215 0
 635 0024 FB68     		ldr	r3, [r7, #12]
 636 0026 0133     		adds	r3, r3, #1
 637 0028 7321     		movs	r1, #115
 638 002a 1846     		mov	r0, r3
 639 002c FFF7FEFF 		bl	strchr
 640 0030 F860     		str	r0, [r7, #12]
 641              	.L29:
 212:debug.c       ****   while (pch!=NULL)
 642              		.loc 1 212 0
 643 0032 FB68     		ldr	r3, [r7, #12]
 644 0034 002B     		cmp	r3, #0
 645 0036 EDD1     		bne	.L30
 216:debug.c       ****   }
 217:debug.c       **** }
 646              		.loc 1 217 0
 647 0038 00BF     		nop
 648 003a 1037     		adds	r7, r7, #16
 649              		.cfi_def_cfa_offset 8
 650 003c BD46     		mov	sp, r7
 651              		.cfi_def_cfa_register 13
 652              		@ sp needed
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 17


 653 003e 80BD     		pop	{r7, pc}
 654              		.cfi_endproc
 655              	.LFE72:
 656              		.size	stripEscapeCharacters, .-stripEscapeCharacters
 657              		.section	.text.strextract,"ax",%progbits
 658              		.align	2
 659              		.global	strextract
 660              		.thumb
 661              		.thumb_func
 662              		.type	strextract, %function
 663              	strextract:
 664              	.LFB73:
 218:debug.c       **** 
 219:debug.c       **** // Extract
 220:debug.c       **** char *strextract(const char input_str[], char output_str[],
 221:debug.c       ****                  const char search_start[], const char search_end[]) {
 665              		.loc 1 221 0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 24
 668              		@ frame_needed = 1, uses_anonymous_args = 0
 669 0000 80B5     		push	{r7, lr}
 670              		.cfi_def_cfa_offset 8
 671              		.cfi_offset 7, -8
 672              		.cfi_offset 14, -4
 673 0002 86B0     		sub	sp, sp, #24
 674              		.cfi_def_cfa_offset 32
 675 0004 00AF     		add	r7, sp, #0
 676              		.cfi_def_cfa_register 7
 677 0006 F860     		str	r0, [r7, #12]
 678 0008 B960     		str	r1, [r7, #8]
 679 000a 7A60     		str	r2, [r7, #4]
 680 000c 3B60     		str	r3, [r7]
 222:debug.c       ****     if (input_str == NULL) return NULL;
 681              		.loc 1 222 0
 682 000e FB68     		ldr	r3, [r7, #12]
 683 0010 002B     		cmp	r3, #0
 684 0012 01D1     		bne	.L32
 685              		.loc 1 222 0 is_stmt 0 discriminator 1
 686 0014 0023     		movs	r3, #0
 687 0016 29E0     		b	.L33
 688              	.L32:
 223:debug.c       ****     char *begin, *end = NULL;
 689              		.loc 1 223 0 is_stmt 1
 690 0018 0023     		movs	r3, #0
 691 001a 7B61     		str	r3, [r7, #20]
 224:debug.c       **** 
 225:debug.c       ****     // strstr(): char *strstr(const char *haystack, const char *needle). haystack - main C string t
 226:debug.c       ****     if ((begin = strstr(input_str, search_start))) {
 692              		.loc 1 226 0
 693 001c 7968     		ldr	r1, [r7, #4]
 694 001e F868     		ldr	r0, [r7, #12]
 695 0020 FFF7FEFF 		bl	strstr
 696 0024 3861     		str	r0, [r7, #16]
 697 0026 3B69     		ldr	r3, [r7, #16]
 698 0028 002B     		cmp	r3, #0
 699 002a 1ED0     		beq	.L34
 227:debug.c       ****         // The strlen() function calculates the length of a given string. The strlen() function tak
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 18


 228:debug.c       ****         begin += strlen(search_start);
 700              		.loc 1 228 0
 701 002c 7868     		ldr	r0, [r7, #4]
 702 002e FFF7FEFF 		bl	strlen
 703 0032 0246     		mov	r2, r0
 704 0034 3B69     		ldr	r3, [r7, #16]
 705 0036 1344     		add	r3, r3, r2
 706 0038 3B61     		str	r3, [r7, #16]
 229:debug.c       ****         if ((end = strstr(begin, search_end))) {
 707              		.loc 1 229 0
 708 003a 3968     		ldr	r1, [r7]
 709 003c 3869     		ldr	r0, [r7, #16]
 710 003e FFF7FEFF 		bl	strstr
 711 0042 7861     		str	r0, [r7, #20]
 712 0044 7B69     		ldr	r3, [r7, #20]
 713 0046 002B     		cmp	r3, #0
 714 0048 0FD0     		beq	.L34
 230:debug.c       ****             // strncpy(: char *strncpy(char *dest, const char *src, size_t n). dest -  pointer to t
 231:debug.c       ****             strncpy(output_str, begin, end - begin);
 715              		.loc 1 231 0
 716 004a 7A69     		ldr	r2, [r7, #20]
 717 004c 3B69     		ldr	r3, [r7, #16]
 718 004e D31A     		subs	r3, r2, r3
 719 0050 1A46     		mov	r2, r3
 720 0052 3969     		ldr	r1, [r7, #16]
 721 0054 B868     		ldr	r0, [r7, #8]
 722 0056 FFF7FEFF 		bl	strncpy
 232:debug.c       ****             output_str[end - begin] = '\0';
 723              		.loc 1 232 0
 724 005a 7A69     		ldr	r2, [r7, #20]
 725 005c 3B69     		ldr	r3, [r7, #16]
 726 005e D31A     		subs	r3, r2, r3
 727 0060 1A46     		mov	r2, r3
 728 0062 BB68     		ldr	r3, [r7, #8]
 729 0064 1344     		add	r3, r3, r2
 730 0066 0022     		movs	r2, #0
 731 0068 1A70     		strb	r2, [r3]
 732              	.L34:
 233:debug.c       ****         }
 234:debug.c       ****     }
 235:debug.c       **** 
 236:debug.c       ****     return end;
 733              		.loc 1 236 0
 734 006a 7B69     		ldr	r3, [r7, #20]
 735              	.L33:
 237:debug.c       **** }
 736              		.loc 1 237 0
 737 006c 1846     		mov	r0, r3
 738 006e 1837     		adds	r7, r7, #24
 739              		.cfi_def_cfa_offset 8
 740 0070 BD46     		mov	sp, r7
 741              		.cfi_def_cfa_register 13
 742              		@ sp needed
 743 0072 80BD     		pop	{r7, pc}
 744              		.cfi_endproc
 745              	.LFE73:
 746              		.size	strextract, .-strextract
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 19


 747              		.section	.text.printd,"ax",%progbits
 748              		.align	2
 749              		.global	printd
 750              		.thumb
 751              		.thumb_func
 752              		.type	printd, %function
 753              	printd:
 754              	.LFB74:
 238:debug.c       **** 
 239:debug.c       **** //out attmpt at a safe (from buffer overflow) version of printf     
 240:debug.c       **** void printd(char* format, ...){
 755              		.loc 1 240 0
 756              		.cfi_startproc
 757              		@ args = 4, pretend = 16, frame = 2056
 758              		@ frame_needed = 1, uses_anonymous_args = 1
 759 0000 0FB4     		push	{r0, r1, r2, r3}
 760              		.cfi_def_cfa_offset 16
 761              		.cfi_offset 0, -16
 762              		.cfi_offset 1, -12
 763              		.cfi_offset 2, -8
 764              		.cfi_offset 3, -4
 765 0002 80B5     		push	{r7, lr}
 766              		.cfi_def_cfa_offset 24
 767              		.cfi_offset 7, -24
 768              		.cfi_offset 14, -20
 769 0004 ADF6080D 		subw	sp, sp, #2056
 770              		.cfi_def_cfa_offset 2080
 771 0008 00AF     		add	r7, sp, #0
 772              		.cfi_def_cfa_register 7
 241:debug.c       ****     
 242:debug.c       ****     va_list argptr; // Create variable argptr of data structure va_list
 243:debug.c       ****     va_start(argptr, format); // void va_start(va_list ap, last_arg) initializes ap variable to be 
 773              		.loc 1 243 0
 774 000a 07F61403 		addw	r3, r7, #2068
 775 000e C7F80438 		str	r3, [r7, #2052]
 244:debug.c       ****     
 245:debug.c       ****     // Create character array debug_string of size MAX_DEBUG_STRING_LENGTH
 246:debug.c       ****     char debug_string[MAX_DEBUG_STRING_LENGTH];
 247:debug.c       ****     // The vsnprintf() used to write a formatted string to a string buffer.vsnprintf(debug_string,M
 248:debug.c       ****     vsnprintf(debug_string,MAX_DEBUG_STRING_LENGTH,format, argptr);
 776              		.loc 1 248 0
 777 0012 381D     		adds	r0, r7, #4
 778 0014 D7F80438 		ldr	r3, [r7, #2052]
 779 0018 D7F81028 		ldr	r2, [r7, #2064]
 780 001c 4FF40061 		mov	r1, #2048
 781 0020 FFF7FEFF 		bl	vsnprintf
 249:debug.c       ****     // Sends a NULL terminated string to the TX buffer for transmission.
 250:debug.c       ****     Debug_UART_PutString(debug_string);
 782              		.loc 1 250 0
 783 0024 3B1D     		adds	r3, r7, #4
 784 0026 1846     		mov	r0, r3
 785 0028 FFF7FEFF 		bl	Debug_UART_PutString
 251:debug.c       ****     
 252:debug.c       ****     va_end(argptr); // macro void va_end(va_list ap) allows a function with variable arguments whic
 253:debug.c       ****     
 254:debug.c       **** }
 786              		.loc 1 254 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 20


 787 002c 00BF     		nop
 788 002e 07F60807 		addw	r7, r7, #2056
 789              		.cfi_def_cfa_offset 24
 790 0032 BD46     		mov	sp, r7
 791              		.cfi_def_cfa_register 13
 792              		@ sp needed
 793 0034 BDE88040 		pop	{r7, lr}
 794              		.cfi_restore 14
 795              		.cfi_restore 7
 796              		.cfi_def_cfa_offset 16
 797 0038 04B0     		add	sp, sp, #16
 798              		.cfi_restore 3
 799              		.cfi_restore 2
 800              		.cfi_restore 1
 801              		.cfi_restore 0
 802              		.cfi_def_cfa_offset 0
 803 003a 7047     		bx	lr
 804              		.cfi_endproc
 805              	.LFE74:
 806              		.size	printd, .-printd
 807              		.text
 808              	.Letext0:
 809              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 810              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 811              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 812              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 813              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 814              		.file 7 "Generated_Source\\PSoC5/cytypes.h"
 815              		.file 8 "Generated_Source\\PSoC5/RTC.h"
 816              		.file 9 "testing.h"
 817              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 818              		.file 11 "<built-in>"
 819              		.section	.debug_info,"",%progbits
 820              	.Ldebug_info0:
 821 0000 0A050000 		.4byte	0x50a
 822 0004 0400     		.2byte	0x4
 823 0006 00000000 		.4byte	.Ldebug_abbrev0
 824 000a 04       		.byte	0x4
 825 000b 01       		.uleb128 0x1
 826 000c 66000000 		.4byte	.LASF70
 827 0010 0C       		.byte	0xc
 828 0011 42010000 		.4byte	.LASF71
 829 0015 27020000 		.4byte	.LASF72
 830 0019 00000000 		.4byte	.Ldebug_ranges0+0
 831 001d 00000000 		.4byte	0
 832 0021 00000000 		.4byte	.Ldebug_line0
 833 0025 02       		.uleb128 0x2
 834 0026 01       		.byte	0x1
 835 0027 06       		.byte	0x6
 836 0028 DD010000 		.4byte	.LASF0
 837 002c 02       		.uleb128 0x2
 838 002d 01       		.byte	0x1
 839 002e 08       		.byte	0x8
 840 002f C5010000 		.4byte	.LASF1
 841 0033 02       		.uleb128 0x2
 842 0034 02       		.byte	0x2
 843 0035 05       		.byte	0x5
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 21


 844 0036 3D000000 		.4byte	.LASF2
 845 003a 02       		.uleb128 0x2
 846 003b 02       		.byte	0x2
 847 003c 07       		.byte	0x7
 848 003d 77020000 		.4byte	.LASF3
 849 0041 03       		.uleb128 0x3
 850 0042 34030000 		.4byte	.LASF10
 851 0046 02       		.byte	0x2
 852 0047 3F       		.byte	0x3f
 853 0048 4C000000 		.4byte	0x4c
 854 004c 02       		.uleb128 0x2
 855 004d 04       		.byte	0x4
 856 004e 05       		.byte	0x5
 857 004f A4020000 		.4byte	.LASF4
 858 0053 02       		.uleb128 0x2
 859 0054 04       		.byte	0x4
 860 0055 07       		.byte	0x7
 861 0056 08030000 		.4byte	.LASF5
 862 005a 02       		.uleb128 0x2
 863 005b 08       		.byte	0x8
 864 005c 05       		.byte	0x5
 865 005d FC000000 		.4byte	.LASF6
 866 0061 02       		.uleb128 0x2
 867 0062 08       		.byte	0x8
 868 0063 07       		.byte	0x7
 869 0064 F1010000 		.4byte	.LASF7
 870 0068 04       		.uleb128 0x4
 871 0069 04       		.byte	0x4
 872 006a 05       		.byte	0x5
 873 006b 696E7400 		.ascii	"int\000"
 874 006f 02       		.uleb128 0x2
 875 0070 04       		.byte	0x4
 876 0071 07       		.byte	0x7
 877 0072 0D020000 		.4byte	.LASF8
 878 0076 02       		.uleb128 0x2
 879 0077 08       		.byte	0x8
 880 0078 04       		.byte	0x4
 881 0079 B9010000 		.4byte	.LASF9
 882 007d 03       		.uleb128 0x3
 883 007e 47030000 		.4byte	.LASF11
 884 0082 03       		.byte	0x3
 885 0083 28       		.byte	0x28
 886 0084 88000000 		.4byte	0x88
 887 0088 05       		.uleb128 0x5
 888 0089 7D010000 		.4byte	.LASF16
 889 008d 04       		.byte	0x4
 890 008e 0B       		.byte	0xb
 891 008f 00       		.byte	0
 892 0090 9F000000 		.4byte	0x9f
 893 0094 06       		.uleb128 0x6
 894 0095 1A020000 		.4byte	.LASF73
 895 0099 9F000000 		.4byte	0x9f
 896 009d 00       		.byte	0
 897 009e 00       		.byte	0
 898 009f 07       		.uleb128 0x7
 899 00a0 04       		.byte	0x4
 900 00a1 02       		.uleb128 0x2
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 22


 901 00a2 04       		.byte	0x4
 902 00a3 07       		.byte	0x7
 903 00a4 3E030000 		.4byte	.LASF12
 904 00a8 08       		.uleb128 0x8
 905 00a9 04       		.byte	0x4
 906 00aa AE000000 		.4byte	0xae
 907 00ae 02       		.uleb128 0x2
 908 00af 01       		.byte	0x1
 909 00b0 08       		.byte	0x8
 910 00b1 98020000 		.4byte	.LASF13
 911 00b5 08       		.uleb128 0x8
 912 00b6 04       		.byte	0x4
 913 00b7 BB000000 		.4byte	0xbb
 914 00bb 09       		.uleb128 0x9
 915 00bc AE000000 		.4byte	0xae
 916 00c0 03       		.uleb128 0x3
 917 00c1 BD020000 		.4byte	.LASF14
 918 00c5 04       		.byte	0x4
 919 00c6 2C       		.byte	0x2c
 920 00c7 41000000 		.4byte	0x41
 921 00cb 03       		.uleb128 0x3
 922 00cc 76010000 		.4byte	.LASF15
 923 00d0 05       		.byte	0x5
 924 00d1 28       		.byte	0x28
 925 00d2 4C000000 		.4byte	0x4c
 926 00d6 0A       		.uleb128 0xa
 927 00d7 746D00   		.ascii	"tm\000"
 928 00da 24       		.byte	0x24
 929 00db 06       		.byte	0x6
 930 00dc 21       		.byte	0x21
 931 00dd 4E010000 		.4byte	0x14e
 932 00e1 0B       		.uleb128 0xb
 933 00e2 6E030000 		.4byte	.LASF17
 934 00e6 06       		.byte	0x6
 935 00e7 23       		.byte	0x23
 936 00e8 68000000 		.4byte	0x68
 937 00ec 00       		.byte	0
 938 00ed 0B       		.uleb128 0xb
 939 00ee 5B010000 		.4byte	.LASF18
 940 00f2 06       		.byte	0x6
 941 00f3 24       		.byte	0x24
 942 00f4 68000000 		.4byte	0x68
 943 00f8 04       		.byte	0x4
 944 00f9 0B       		.uleb128 0xb
 945 00fa 09000000 		.4byte	.LASF19
 946 00fe 06       		.byte	0x6
 947 00ff 25       		.byte	0x25
 948 0100 68000000 		.4byte	0x68
 949 0104 08       		.byte	0x8
 950 0105 0B       		.uleb128 0xb
 951 0106 1F020000 		.4byte	.LASF20
 952 010a 06       		.byte	0x6
 953 010b 26       		.byte	0x26
 954 010c 68000000 		.4byte	0x68
 955 0110 0C       		.byte	0xc
 956 0111 0B       		.uleb128 0xb
 957 0112 68010000 		.4byte	.LASF21
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 23


 958 0116 06       		.byte	0x6
 959 0117 27       		.byte	0x27
 960 0118 68000000 		.4byte	0x68
 961 011c 10       		.byte	0x10
 962 011d 0B       		.uleb128 0xb
 963 011e E9010000 		.4byte	.LASF22
 964 0122 06       		.byte	0x6
 965 0123 28       		.byte	0x28
 966 0124 68000000 		.4byte	0x68
 967 0128 14       		.byte	0x14
 968 0129 0B       		.uleb128 0xb
 969 012a F4000000 		.4byte	.LASF23
 970 012e 06       		.byte	0x6
 971 012f 29       		.byte	0x29
 972 0130 68000000 		.4byte	0x68
 973 0134 18       		.byte	0x18
 974 0135 0B       		.uleb128 0xb
 975 0136 D2020000 		.4byte	.LASF24
 976 013a 06       		.byte	0x6
 977 013b 2A       		.byte	0x2a
 978 013c 68000000 		.4byte	0x68
 979 0140 1C       		.byte	0x1c
 980 0141 0B       		.uleb128 0xb
 981 0142 F4020000 		.4byte	.LASF25
 982 0146 06       		.byte	0x6
 983 0147 2B       		.byte	0x2b
 984 0148 68000000 		.4byte	0x68
 985 014c 20       		.byte	0x20
 986 014d 00       		.byte	0
 987 014e 0C       		.uleb128 0xc
 988 014f 4A010000 		.4byte	.LASF26
 989 0153 07       		.byte	0x7
 990 0154 9201     		.2byte	0x192
 991 0156 2C000000 		.4byte	0x2c
 992 015a 0C       		.uleb128 0xc
 993 015b 33010000 		.4byte	.LASF27
 994 015f 07       		.byte	0x7
 995 0160 9301     		.2byte	0x193
 996 0162 3A000000 		.4byte	0x3a
 997 0166 02       		.uleb128 0x2
 998 0167 04       		.byte	0x4
 999 0168 04       		.byte	0x4
 1000 0169 62010000 		.4byte	.LASF28
 1001 016d 02       		.uleb128 0x2
 1002 016e 08       		.byte	0x8
 1003 016f 04       		.byte	0x4
 1004 0170 1A030000 		.4byte	.LASF29
 1005 0174 0D       		.uleb128 0xd
 1006 0175 0C       		.byte	0xc
 1007 0176 08       		.byte	0x8
 1008 0177 30       		.byte	0x30
 1009 0178 DD010000 		.4byte	0x1dd
 1010 017c 0E       		.uleb128 0xe
 1011 017d 53656300 		.ascii	"Sec\000"
 1012 0181 08       		.byte	0x8
 1013 0182 32       		.byte	0x32
 1014 0183 4E010000 		.4byte	0x14e
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 24


 1015 0187 00       		.byte	0
 1016 0188 0E       		.uleb128 0xe
 1017 0189 4D696E00 		.ascii	"Min\000"
 1018 018d 08       		.byte	0x8
 1019 018e 33       		.byte	0x33
 1020 018f 4E010000 		.4byte	0x14e
 1021 0193 01       		.byte	0x1
 1022 0194 0B       		.uleb128 0xb
 1023 0195 1E010000 		.4byte	.LASF30
 1024 0199 08       		.byte	0x8
 1025 019a 34       		.byte	0x34
 1026 019b 4E010000 		.4byte	0x14e
 1027 019f 02       		.byte	0x2
 1028 01a0 0B       		.uleb128 0xb
 1029 01a1 D3010000 		.4byte	.LASF31
 1030 01a5 08       		.byte	0x8
 1031 01a6 35       		.byte	0x35
 1032 01a7 4E010000 		.4byte	0x14e
 1033 01ab 03       		.byte	0x3
 1034 01ac 0B       		.uleb128 0xb
 1035 01ad 28010000 		.4byte	.LASF32
 1036 01b1 08       		.byte	0x8
 1037 01b2 36       		.byte	0x36
 1038 01b3 4E010000 		.4byte	0x14e
 1039 01b7 04       		.byte	0x4
 1040 01b8 0B       		.uleb128 0xb
 1041 01b9 98030000 		.4byte	.LASF33
 1042 01bd 08       		.byte	0x8
 1043 01be 37       		.byte	0x37
 1044 01bf 5A010000 		.4byte	0x15a
 1045 01c3 06       		.byte	0x6
 1046 01c4 0B       		.uleb128 0xb
 1047 01c5 B3010000 		.4byte	.LASF34
 1048 01c9 08       		.byte	0x8
 1049 01ca 38       		.byte	0x38
 1050 01cb 4E010000 		.4byte	0x14e
 1051 01cf 08       		.byte	0x8
 1052 01d0 0B       		.uleb128 0xb
 1053 01d1 AE010000 		.4byte	.LASF35
 1054 01d5 08       		.byte	0x8
 1055 01d6 39       		.byte	0x39
 1056 01d7 5A010000 		.4byte	0x15a
 1057 01db 0A       		.byte	0xa
 1058 01dc 00       		.byte	0
 1059 01dd 03       		.uleb128 0x3
 1060 01de 47000000 		.4byte	.LASF36
 1061 01e2 08       		.byte	0x8
 1062 01e3 3A       		.byte	0x3a
 1063 01e4 E8010000 		.4byte	0x1e8
 1064 01e8 0F       		.uleb128 0xf
 1065 01e9 74010000 		.4byte	0x174
 1066 01ed 10       		.uleb128 0x10
 1067 01ee 8101     		.2byte	0x181
 1068 01f0 09       		.byte	0x9
 1069 01f1 0A       		.byte	0xa
 1070 01f2 1B020000 		.4byte	0x21b
 1071 01f6 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 25


 1072 01f7 1D000000 		.4byte	.LASF37
 1073 01fb 09       		.byte	0x9
 1074 01fc 0C       		.byte	0xc
 1075 01fd 1B020000 		.4byte	0x21b
 1076 0201 00       		.byte	0
 1077 0202 0B       		.uleb128 0xb
 1078 0203 8A020000 		.4byte	.LASF38
 1079 0207 09       		.byte	0x9
 1080 0208 0D       		.byte	0xd
 1081 0209 4E010000 		.4byte	0x14e
 1082 020d 80       		.byte	0x80
 1083 020e 0B       		.uleb128 0xb
 1084 020f 87010000 		.4byte	.LASF39
 1085 0213 09       		.byte	0x9
 1086 0214 0F       		.byte	0xf
 1087 0215 2B020000 		.4byte	0x22b
 1088 0219 81       		.byte	0x81
 1089 021a 00       		.byte	0
 1090 021b 11       		.uleb128 0x11
 1091 021c AE000000 		.4byte	0xae
 1092 0220 2B020000 		.4byte	0x22b
 1093 0224 12       		.uleb128 0x12
 1094 0225 A1000000 		.4byte	0xa1
 1095 0229 7F       		.byte	0x7f
 1096 022a 00       		.byte	0
 1097 022b 11       		.uleb128 0x11
 1098 022c AE000000 		.4byte	0xae
 1099 0230 3B020000 		.4byte	0x23b
 1100 0234 12       		.uleb128 0x12
 1101 0235 A1000000 		.4byte	0xa1
 1102 0239 FF       		.byte	0xff
 1103 023a 00       		.byte	0
 1104 023b 03       		.uleb128 0x3
 1105 023c 9D020000 		.4byte	.LASF40
 1106 0240 09       		.byte	0x9
 1107 0241 10       		.byte	0x10
 1108 0242 ED010000 		.4byte	0x1ed
 1109 0246 03       		.uleb128 0x3
 1110 0247 3A010000 		.4byte	.LASF41
 1111 024b 03       		.byte	0x3
 1112 024c 62       		.byte	0x62
 1113 024d 7D000000 		.4byte	0x7d
 1114 0251 13       		.uleb128 0x13
 1115 0252 31000000 		.4byte	.LASF42
 1116 0256 01       		.byte	0x1
 1117 0257 0D       		.byte	0xd
 1118 0258 00000000 		.4byte	.LFB64
 1119 025c 0C000000 		.4byte	.LFE64-.LFB64
 1120 0260 01       		.uleb128 0x1
 1121 0261 9C       		.byte	0x9c
 1122 0262 13       		.uleb128 0x13
 1123 0263 FD020000 		.4byte	.LASF43
 1124 0267 01       		.byte	0x1
 1125 0268 17       		.byte	0x17
 1126 0269 00000000 		.4byte	.LFB65
 1127 026d 0C000000 		.4byte	.LFE65-.LFB65
 1128 0271 01       		.uleb128 0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 26


 1129 0272 9C       		.byte	0x9c
 1130 0273 13       		.uleb128 0x13
 1131 0274 11000000 		.4byte	.LASF44
 1132 0278 01       		.byte	0x1
 1133 0279 1F       		.byte	0x1f
 1134 027a 00000000 		.4byte	.LFB66
 1135 027e 20000000 		.4byte	.LFE66-.LFB66
 1136 0282 01       		.uleb128 0x1
 1137 0283 9C       		.byte	0x9c
 1138 0284 13       		.uleb128 0x13
 1139 0285 56030000 		.4byte	.LASF45
 1140 0289 01       		.byte	0x1
 1141 028a 30       		.byte	0x30
 1142 028b 00000000 		.4byte	.LFB67
 1143 028f 0C000000 		.4byte	.LFE67-.LFB67
 1144 0293 01       		.uleb128 0x1
 1145 0294 9C       		.byte	0x9c
 1146 0295 14       		.uleb128 0x14
 1147 0296 0A010000 		.4byte	.LASF59
 1148 029a 01       		.byte	0x1
 1149 029b 42       		.byte	0x42
 1150 029c 68000000 		.4byte	0x68
 1151 02a0 00000000 		.4byte	.LFB68
 1152 02a4 38000000 		.4byte	.LFE68-.LFB68
 1153 02a8 01       		.uleb128 0x1
 1154 02a9 9C       		.byte	0x9c
 1155 02aa E5020000 		.4byte	0x2e5
 1156 02ae 15       		.uleb128 0x15
 1157 02af 23010000 		.4byte	.LASF46
 1158 02b3 01       		.byte	0x1
 1159 02b4 42       		.byte	0x42
 1160 02b5 68000000 		.4byte	0x68
 1161 02b9 02       		.uleb128 0x2
 1162 02ba 91       		.byte	0x91
 1163 02bb 6C       		.sleb128 -20
 1164 02bc 16       		.uleb128 0x16
 1165 02bd 70747200 		.ascii	"ptr\000"
 1166 02c1 01       		.byte	0x1
 1167 02c2 42       		.byte	0x42
 1168 02c3 A8000000 		.4byte	0xa8
 1169 02c7 02       		.uleb128 0x2
 1170 02c8 91       		.byte	0x91
 1171 02c9 68       		.sleb128 -24
 1172 02ca 16       		.uleb128 0x16
 1173 02cb 6C656E00 		.ascii	"len\000"
 1174 02cf 01       		.byte	0x1
 1175 02d0 42       		.byte	0x42
 1176 02d1 68000000 		.4byte	0x68
 1177 02d5 02       		.uleb128 0x2
 1178 02d6 91       		.byte	0x91
 1179 02d7 64       		.sleb128 -28
 1180 02d8 17       		.uleb128 0x17
 1181 02d9 6900     		.ascii	"i\000"
 1182 02db 01       		.byte	0x1
 1183 02dc 44       		.byte	0x44
 1184 02dd 68000000 		.4byte	0x68
 1185 02e1 02       		.uleb128 0x2
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 27


 1186 02e2 91       		.byte	0x91
 1187 02e3 74       		.sleb128 -12
 1188 02e4 00       		.byte	0
 1189 02e5 18       		.uleb128 0x18
 1190 02e6 63030000 		.4byte	.LASF51
 1191 02ea 01       		.byte	0x1
 1192 02eb 55       		.byte	0x55
 1193 02ec 00000000 		.4byte	.LFB69
 1194 02f0 48010000 		.4byte	.LFE69-.LFB69
 1195 02f4 01       		.uleb128 0x1
 1196 02f5 9C       		.byte	0x9c
 1197 02f6 6B030000 		.4byte	0x36b
 1198 02fa 15       		.uleb128 0x15
 1199 02fb 08020000 		.4byte	.LASF47
 1200 02ff 01       		.byte	0x1
 1201 0300 55       		.byte	0x55
 1202 0301 4E010000 		.4byte	0x14e
 1203 0305 03       		.uleb128 0x3
 1204 0306 91       		.byte	0x91
 1205 0307 DF6F     		.sleb128 -2081
 1206 0309 15       		.uleb128 0x15
 1207 030a 6F010000 		.4byte	.LASF48
 1208 030e 01       		.byte	0x1
 1209 030f 55       		.byte	0x55
 1210 0310 A8000000 		.4byte	0xa8
 1211 0314 02       		.uleb128 0x2
 1212 0315 91       		.byte	0x91
 1213 0316 74       		.sleb128 -12
 1214 0317 19       		.uleb128 0x19
 1215 0318 1A       		.uleb128 0x1a
 1216 0319 20000000 		.4byte	.LBB2
 1217 031d 5E000000 		.4byte	.LBE2-.LBB2
 1218 0321 43030000 		.4byte	0x343
 1219 0325 1B       		.uleb128 0x1b
 1220 0326 21030000 		.4byte	.LASF49
 1221 032a 01       		.byte	0x1
 1222 032b 68       		.byte	0x68
 1223 032c 46020000 		.4byte	0x246
 1224 0330 02       		.uleb128 0x2
 1225 0331 91       		.byte	0x91
 1226 0332 64       		.sleb128 -28
 1227 0333 1B       		.uleb128 0x1b
 1228 0334 C5020000 		.4byte	.LASF50
 1229 0338 01       		.byte	0x1
 1230 0339 6A       		.byte	0x6a
 1231 033a 6B030000 		.4byte	0x36b
 1232 033e 03       		.uleb128 0x3
 1233 033f 91       		.byte	0x91
 1234 0340 E06F     		.sleb128 -2080
 1235 0342 00       		.byte	0
 1236 0343 1C       		.uleb128 0x1c
 1237 0344 88000000 		.4byte	.LBB3
 1238 0348 86000000 		.4byte	.LBE3-.LBB3
 1239 034c 1B       		.uleb128 0x1b
 1240 034d 21030000 		.4byte	.LASF49
 1241 0351 01       		.byte	0x1
 1242 0352 83       		.byte	0x83
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 28


 1243 0353 46020000 		.4byte	0x246
 1244 0357 02       		.uleb128 0x2
 1245 0358 91       		.byte	0x91
 1246 0359 60       		.sleb128 -32
 1247 035a 1B       		.uleb128 0x1b
 1248 035b C5020000 		.4byte	.LASF50
 1249 035f 01       		.byte	0x1
 1250 0360 85       		.byte	0x85
 1251 0361 6B030000 		.4byte	0x36b
 1252 0365 03       		.uleb128 0x3
 1253 0366 91       		.byte	0x91
 1254 0367 E06F     		.sleb128 -2080
 1255 0369 00       		.byte	0
 1256 036a 00       		.byte	0
 1257 036b 11       		.uleb128 0x11
 1258 036c AE000000 		.4byte	0xae
 1259 0370 7C030000 		.4byte	0x37c
 1260 0374 1D       		.uleb128 0x1d
 1261 0375 A1000000 		.4byte	0xa1
 1262 0379 FF07     		.2byte	0x7ff
 1263 037b 00       		.byte	0
 1264 037c 18       		.uleb128 0x18
 1265 037d AD020000 		.4byte	.LASF52
 1266 0381 01       		.byte	0x1
 1267 0382 A2       		.byte	0xa2
 1268 0383 00000000 		.4byte	.LFB70
 1269 0387 78000000 		.4byte	.LFE70-.LFB70
 1270 038b 01       		.uleb128 0x1
 1271 038c 9C       		.byte	0x9c
 1272 038d A0030000 		.4byte	0x3a0
 1273 0391 15       		.uleb128 0x15
 1274 0392 E4020000 		.4byte	.LASF53
 1275 0396 01       		.byte	0x1
 1276 0397 A2       		.byte	0xa2
 1277 0398 3B020000 		.4byte	0x23b
 1278 039c 02       		.uleb128 0x2
 1279 039d 91       		.byte	0x91
 1280 039e 70       		.sleb128 -16
 1281 039f 00       		.byte	0
 1282 03a0 1E       		.uleb128 0x1e
 1283 03a1 11010000 		.4byte	.LASF54
 1284 03a5 01       		.byte	0x1
 1285 03a6 B5       		.byte	0xb5
 1286 03a7 4C000000 		.4byte	0x4c
 1287 03ab 00000000 		.4byte	.LFB71
 1288 03af 58000000 		.4byte	.LFE71-.LFB71
 1289 03b3 01       		.uleb128 0x1
 1290 03b4 9C       		.byte	0x9c
 1291 03b5 E2030000 		.4byte	0x3e2
 1292 03b9 1B       		.uleb128 0x1b
 1293 03ba DA020000 		.4byte	.LASF55
 1294 03be 01       		.byte	0x1
 1295 03bf B8       		.byte	0xb8
 1296 03c0 E2030000 		.4byte	0x3e2
 1297 03c4 02       		.uleb128 0x2
 1298 03c5 91       		.byte	0x91
 1299 03c6 74       		.sleb128 -12
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 29


 1300 03c7 17       		.uleb128 0x17
 1301 03c8 7400     		.ascii	"t\000"
 1302 03ca 01       		.byte	0x1
 1303 03cb BA       		.byte	0xba
 1304 03cc D6000000 		.4byte	0xd6
 1305 03d0 02       		.uleb128 0x2
 1306 03d1 91       		.byte	0x91
 1307 03d2 4C       		.sleb128 -52
 1308 03d3 1B       		.uleb128 0x1b
 1309 03d4 00000000 		.4byte	.LASF56
 1310 03d8 01       		.byte	0x1
 1311 03d9 BB       		.byte	0xbb
 1312 03da CB000000 		.4byte	0xcb
 1313 03de 02       		.uleb128 0x2
 1314 03df 91       		.byte	0x91
 1315 03e0 70       		.sleb128 -16
 1316 03e1 00       		.byte	0
 1317 03e2 08       		.uleb128 0x8
 1318 03e3 04       		.byte	0x4
 1319 03e4 DD010000 		.4byte	0x1dd
 1320 03e8 18       		.uleb128 0x18
 1321 03e9 82030000 		.4byte	.LASF57
 1322 03ed 01       		.byte	0x1
 1323 03ee D0       		.byte	0xd0
 1324 03ef 00000000 		.4byte	.LFB72
 1325 03f3 40000000 		.4byte	.LFE72-.LFB72
 1326 03f7 01       		.uleb128 0x1
 1327 03f8 9C       		.byte	0x9c
 1328 03f9 1A040000 		.4byte	0x41a
 1329 03fd 15       		.uleb128 0x15
 1330 03fe 9B010000 		.4byte	.LASF58
 1331 0402 01       		.byte	0x1
 1332 0403 D0       		.byte	0xd0
 1333 0404 A8000000 		.4byte	0xa8
 1334 0408 02       		.uleb128 0x2
 1335 0409 91       		.byte	0x91
 1336 040a 6C       		.sleb128 -20
 1337 040b 17       		.uleb128 0x17
 1338 040c 70636800 		.ascii	"pch\000"
 1339 0410 01       		.byte	0x1
 1340 0411 D2       		.byte	0xd2
 1341 0412 A8000000 		.4byte	0xa8
 1342 0416 02       		.uleb128 0x2
 1343 0417 91       		.byte	0x91
 1344 0418 74       		.sleb128 -12
 1345 0419 00       		.byte	0
 1346 041a 14       		.uleb128 0x14
 1347 041b 55000000 		.4byte	.LASF60
 1348 041f 01       		.byte	0x1
 1349 0420 DC       		.byte	0xdc
 1350 0421 A8000000 		.4byte	0xa8
 1351 0425 00000000 		.4byte	.LFB73
 1352 0429 74000000 		.4byte	.LFE73-.LFB73
 1353 042d 01       		.uleb128 0x1
 1354 042e 9C       		.byte	0x9c
 1355 042f 88040000 		.4byte	0x488
 1356 0433 15       		.uleb128 0x15
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 30


 1357 0434 27000000 		.4byte	.LASF61
 1358 0438 01       		.byte	0x1
 1359 0439 DC       		.byte	0xdc
 1360 043a B5000000 		.4byte	0xb5
 1361 043e 02       		.uleb128 0x2
 1362 043f 91       		.byte	0x91
 1363 0440 6C       		.sleb128 -20
 1364 0441 15       		.uleb128 0x15
 1365 0442 50010000 		.4byte	.LASF62
 1366 0446 01       		.byte	0x1
 1367 0447 DC       		.byte	0xdc
 1368 0448 A8000000 		.4byte	0xa8
 1369 044c 02       		.uleb128 0x2
 1370 044d 91       		.byte	0x91
 1371 044e 68       		.sleb128 -24
 1372 044f 15       		.uleb128 0x15
 1373 0450 8E010000 		.4byte	.LASF63
 1374 0454 01       		.byte	0x1
 1375 0455 DD       		.byte	0xdd
 1376 0456 B5000000 		.4byte	0xb5
 1377 045a 02       		.uleb128 0x2
 1378 045b 91       		.byte	0x91
 1379 045c 64       		.sleb128 -28
 1380 045d 15       		.uleb128 0x15
 1381 045e E9020000 		.4byte	.LASF64
 1382 0462 01       		.byte	0x1
 1383 0463 DD       		.byte	0xdd
 1384 0464 B5000000 		.4byte	0xb5
 1385 0468 02       		.uleb128 0x2
 1386 0469 91       		.byte	0x91
 1387 046a 60       		.sleb128 -32
 1388 046b 1B       		.uleb128 0x1b
 1389 046c 60000000 		.4byte	.LASF65
 1390 0470 01       		.byte	0x1
 1391 0471 DF       		.byte	0xdf
 1392 0472 A8000000 		.4byte	0xa8
 1393 0476 02       		.uleb128 0x2
 1394 0477 91       		.byte	0x91
 1395 0478 70       		.sleb128 -16
 1396 0479 17       		.uleb128 0x17
 1397 047a 656E6400 		.ascii	"end\000"
 1398 047e 01       		.byte	0x1
 1399 047f DF       		.byte	0xdf
 1400 0480 A8000000 		.4byte	0xa8
 1401 0484 02       		.uleb128 0x2
 1402 0485 91       		.byte	0x91
 1403 0486 74       		.sleb128 -12
 1404 0487 00       		.byte	0
 1405 0488 18       		.uleb128 0x18
 1406 0489 91020000 		.4byte	.LASF66
 1407 048d 01       		.byte	0x1
 1408 048e F0       		.byte	0xf0
 1409 048f 00000000 		.4byte	.LFB74
 1410 0493 3C000000 		.4byte	.LFE74-.LFB74
 1411 0497 01       		.uleb128 0x1
 1412 0498 9C       		.byte	0x9c
 1413 0499 CA040000 		.4byte	0x4ca
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 31


 1414 049d 15       		.uleb128 0x15
 1415 049e 6F010000 		.4byte	.LASF48
 1416 04a2 01       		.byte	0x1
 1417 04a3 F0       		.byte	0xf0
 1418 04a4 A8000000 		.4byte	0xa8
 1419 04a8 02       		.uleb128 0x2
 1420 04a9 91       		.byte	0x91
 1421 04aa 70       		.sleb128 -16
 1422 04ab 19       		.uleb128 0x19
 1423 04ac 1B       		.uleb128 0x1b
 1424 04ad 21030000 		.4byte	.LASF49
 1425 04b1 01       		.byte	0x1
 1426 04b2 F2       		.byte	0xf2
 1427 04b3 46020000 		.4byte	0x246
 1428 04b7 02       		.uleb128 0x2
 1429 04b8 91       		.byte	0x91
 1430 04b9 64       		.sleb128 -28
 1431 04ba 1B       		.uleb128 0x1b
 1432 04bb C5020000 		.4byte	.LASF50
 1433 04bf 01       		.byte	0x1
 1434 04c0 F6       		.byte	0xf6
 1435 04c1 6B030000 		.4byte	0x36b
 1436 04c5 03       		.uleb128 0x3
 1437 04c6 91       		.byte	0x91
 1438 04c7 E46F     		.sleb128 -2076
 1439 04c9 00       		.byte	0
 1440 04ca 1F       		.uleb128 0x1f
 1441 04cb 75030000 		.4byte	.LASF67
 1442 04cf 0A       		.byte	0xa
 1443 04d0 1207     		.2byte	0x712
 1444 04d2 D6040000 		.4byte	0x4d6
 1445 04d6 0F       		.uleb128 0xf
 1446 04d7 C0000000 		.4byte	0xc0
 1447 04db 11       		.uleb128 0x11
 1448 04dc AE000000 		.4byte	0xae
 1449 04e0 EB040000 		.4byte	0x4eb
 1450 04e4 12       		.uleb128 0x12
 1451 04e5 A1000000 		.4byte	0xa1
 1452 04e9 1D       		.byte	0x1d
 1453 04ea 00       		.byte	0
 1454 04eb 20       		.uleb128 0x20
 1455 04ec A2010000 		.4byte	.LASF68
 1456 04f0 01       		.byte	0x1
 1457 04f1 06       		.byte	0x6
 1458 04f2 DB040000 		.4byte	0x4db
 1459 04f6 05       		.uleb128 0x5
 1460 04f7 03       		.byte	0x3
 1461 04f8 00000000 		.4byte	BB_fileName
 1462 04fc 20       		.uleb128 0x20
 1463 04fd 28030000 		.4byte	.LASF69
 1464 0501 01       		.byte	0x1
 1465 0502 0A       		.byte	0xa
 1466 0503 4E010000 		.4byte	0x14e
 1467 0507 05       		.uleb128 0x5
 1468 0508 03       		.byte	0x3
 1469 0509 00000000 		.4byte	debug_level
 1470 050d 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 32


 1471              		.section	.debug_abbrev,"",%progbits
 1472              	.Ldebug_abbrev0:
 1473 0000 01       		.uleb128 0x1
 1474 0001 11       		.uleb128 0x11
 1475 0002 01       		.byte	0x1
 1476 0003 25       		.uleb128 0x25
 1477 0004 0E       		.uleb128 0xe
 1478 0005 13       		.uleb128 0x13
 1479 0006 0B       		.uleb128 0xb
 1480 0007 03       		.uleb128 0x3
 1481 0008 0E       		.uleb128 0xe
 1482 0009 1B       		.uleb128 0x1b
 1483 000a 0E       		.uleb128 0xe
 1484 000b 55       		.uleb128 0x55
 1485 000c 17       		.uleb128 0x17
 1486 000d 11       		.uleb128 0x11
 1487 000e 01       		.uleb128 0x1
 1488 000f 10       		.uleb128 0x10
 1489 0010 17       		.uleb128 0x17
 1490 0011 00       		.byte	0
 1491 0012 00       		.byte	0
 1492 0013 02       		.uleb128 0x2
 1493 0014 24       		.uleb128 0x24
 1494 0015 00       		.byte	0
 1495 0016 0B       		.uleb128 0xb
 1496 0017 0B       		.uleb128 0xb
 1497 0018 3E       		.uleb128 0x3e
 1498 0019 0B       		.uleb128 0xb
 1499 001a 03       		.uleb128 0x3
 1500 001b 0E       		.uleb128 0xe
 1501 001c 00       		.byte	0
 1502 001d 00       		.byte	0
 1503 001e 03       		.uleb128 0x3
 1504 001f 16       		.uleb128 0x16
 1505 0020 00       		.byte	0
 1506 0021 03       		.uleb128 0x3
 1507 0022 0E       		.uleb128 0xe
 1508 0023 3A       		.uleb128 0x3a
 1509 0024 0B       		.uleb128 0xb
 1510 0025 3B       		.uleb128 0x3b
 1511 0026 0B       		.uleb128 0xb
 1512 0027 49       		.uleb128 0x49
 1513 0028 13       		.uleb128 0x13
 1514 0029 00       		.byte	0
 1515 002a 00       		.byte	0
 1516 002b 04       		.uleb128 0x4
 1517 002c 24       		.uleb128 0x24
 1518 002d 00       		.byte	0
 1519 002e 0B       		.uleb128 0xb
 1520 002f 0B       		.uleb128 0xb
 1521 0030 3E       		.uleb128 0x3e
 1522 0031 0B       		.uleb128 0xb
 1523 0032 03       		.uleb128 0x3
 1524 0033 08       		.uleb128 0x8
 1525 0034 00       		.byte	0
 1526 0035 00       		.byte	0
 1527 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 33


 1528 0037 13       		.uleb128 0x13
 1529 0038 01       		.byte	0x1
 1530 0039 03       		.uleb128 0x3
 1531 003a 0E       		.uleb128 0xe
 1532 003b 0B       		.uleb128 0xb
 1533 003c 0B       		.uleb128 0xb
 1534 003d 3A       		.uleb128 0x3a
 1535 003e 0B       		.uleb128 0xb
 1536 003f 3B       		.uleb128 0x3b
 1537 0040 0B       		.uleb128 0xb
 1538 0041 01       		.uleb128 0x1
 1539 0042 13       		.uleb128 0x13
 1540 0043 00       		.byte	0
 1541 0044 00       		.byte	0
 1542 0045 06       		.uleb128 0x6
 1543 0046 0D       		.uleb128 0xd
 1544 0047 00       		.byte	0
 1545 0048 03       		.uleb128 0x3
 1546 0049 0E       		.uleb128 0xe
 1547 004a 49       		.uleb128 0x49
 1548 004b 13       		.uleb128 0x13
 1549 004c 38       		.uleb128 0x38
 1550 004d 0B       		.uleb128 0xb
 1551 004e 34       		.uleb128 0x34
 1552 004f 19       		.uleb128 0x19
 1553 0050 00       		.byte	0
 1554 0051 00       		.byte	0
 1555 0052 07       		.uleb128 0x7
 1556 0053 0F       		.uleb128 0xf
 1557 0054 00       		.byte	0
 1558 0055 0B       		.uleb128 0xb
 1559 0056 0B       		.uleb128 0xb
 1560 0057 00       		.byte	0
 1561 0058 00       		.byte	0
 1562 0059 08       		.uleb128 0x8
 1563 005a 0F       		.uleb128 0xf
 1564 005b 00       		.byte	0
 1565 005c 0B       		.uleb128 0xb
 1566 005d 0B       		.uleb128 0xb
 1567 005e 49       		.uleb128 0x49
 1568 005f 13       		.uleb128 0x13
 1569 0060 00       		.byte	0
 1570 0061 00       		.byte	0
 1571 0062 09       		.uleb128 0x9
 1572 0063 26       		.uleb128 0x26
 1573 0064 00       		.byte	0
 1574 0065 49       		.uleb128 0x49
 1575 0066 13       		.uleb128 0x13
 1576 0067 00       		.byte	0
 1577 0068 00       		.byte	0
 1578 0069 0A       		.uleb128 0xa
 1579 006a 13       		.uleb128 0x13
 1580 006b 01       		.byte	0x1
 1581 006c 03       		.uleb128 0x3
 1582 006d 08       		.uleb128 0x8
 1583 006e 0B       		.uleb128 0xb
 1584 006f 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 34


 1585 0070 3A       		.uleb128 0x3a
 1586 0071 0B       		.uleb128 0xb
 1587 0072 3B       		.uleb128 0x3b
 1588 0073 0B       		.uleb128 0xb
 1589 0074 01       		.uleb128 0x1
 1590 0075 13       		.uleb128 0x13
 1591 0076 00       		.byte	0
 1592 0077 00       		.byte	0
 1593 0078 0B       		.uleb128 0xb
 1594 0079 0D       		.uleb128 0xd
 1595 007a 00       		.byte	0
 1596 007b 03       		.uleb128 0x3
 1597 007c 0E       		.uleb128 0xe
 1598 007d 3A       		.uleb128 0x3a
 1599 007e 0B       		.uleb128 0xb
 1600 007f 3B       		.uleb128 0x3b
 1601 0080 0B       		.uleb128 0xb
 1602 0081 49       		.uleb128 0x49
 1603 0082 13       		.uleb128 0x13
 1604 0083 38       		.uleb128 0x38
 1605 0084 0B       		.uleb128 0xb
 1606 0085 00       		.byte	0
 1607 0086 00       		.byte	0
 1608 0087 0C       		.uleb128 0xc
 1609 0088 16       		.uleb128 0x16
 1610 0089 00       		.byte	0
 1611 008a 03       		.uleb128 0x3
 1612 008b 0E       		.uleb128 0xe
 1613 008c 3A       		.uleb128 0x3a
 1614 008d 0B       		.uleb128 0xb
 1615 008e 3B       		.uleb128 0x3b
 1616 008f 05       		.uleb128 0x5
 1617 0090 49       		.uleb128 0x49
 1618 0091 13       		.uleb128 0x13
 1619 0092 00       		.byte	0
 1620 0093 00       		.byte	0
 1621 0094 0D       		.uleb128 0xd
 1622 0095 13       		.uleb128 0x13
 1623 0096 01       		.byte	0x1
 1624 0097 0B       		.uleb128 0xb
 1625 0098 0B       		.uleb128 0xb
 1626 0099 3A       		.uleb128 0x3a
 1627 009a 0B       		.uleb128 0xb
 1628 009b 3B       		.uleb128 0x3b
 1629 009c 0B       		.uleb128 0xb
 1630 009d 01       		.uleb128 0x1
 1631 009e 13       		.uleb128 0x13
 1632 009f 00       		.byte	0
 1633 00a0 00       		.byte	0
 1634 00a1 0E       		.uleb128 0xe
 1635 00a2 0D       		.uleb128 0xd
 1636 00a3 00       		.byte	0
 1637 00a4 03       		.uleb128 0x3
 1638 00a5 08       		.uleb128 0x8
 1639 00a6 3A       		.uleb128 0x3a
 1640 00a7 0B       		.uleb128 0xb
 1641 00a8 3B       		.uleb128 0x3b
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 35


 1642 00a9 0B       		.uleb128 0xb
 1643 00aa 49       		.uleb128 0x49
 1644 00ab 13       		.uleb128 0x13
 1645 00ac 38       		.uleb128 0x38
 1646 00ad 0B       		.uleb128 0xb
 1647 00ae 00       		.byte	0
 1648 00af 00       		.byte	0
 1649 00b0 0F       		.uleb128 0xf
 1650 00b1 35       		.uleb128 0x35
 1651 00b2 00       		.byte	0
 1652 00b3 49       		.uleb128 0x49
 1653 00b4 13       		.uleb128 0x13
 1654 00b5 00       		.byte	0
 1655 00b6 00       		.byte	0
 1656 00b7 10       		.uleb128 0x10
 1657 00b8 13       		.uleb128 0x13
 1658 00b9 01       		.byte	0x1
 1659 00ba 0B       		.uleb128 0xb
 1660 00bb 05       		.uleb128 0x5
 1661 00bc 3A       		.uleb128 0x3a
 1662 00bd 0B       		.uleb128 0xb
 1663 00be 3B       		.uleb128 0x3b
 1664 00bf 0B       		.uleb128 0xb
 1665 00c0 01       		.uleb128 0x1
 1666 00c1 13       		.uleb128 0x13
 1667 00c2 00       		.byte	0
 1668 00c3 00       		.byte	0
 1669 00c4 11       		.uleb128 0x11
 1670 00c5 01       		.uleb128 0x1
 1671 00c6 01       		.byte	0x1
 1672 00c7 49       		.uleb128 0x49
 1673 00c8 13       		.uleb128 0x13
 1674 00c9 01       		.uleb128 0x1
 1675 00ca 13       		.uleb128 0x13
 1676 00cb 00       		.byte	0
 1677 00cc 00       		.byte	0
 1678 00cd 12       		.uleb128 0x12
 1679 00ce 21       		.uleb128 0x21
 1680 00cf 00       		.byte	0
 1681 00d0 49       		.uleb128 0x49
 1682 00d1 13       		.uleb128 0x13
 1683 00d2 2F       		.uleb128 0x2f
 1684 00d3 0B       		.uleb128 0xb
 1685 00d4 00       		.byte	0
 1686 00d5 00       		.byte	0
 1687 00d6 13       		.uleb128 0x13
 1688 00d7 2E       		.uleb128 0x2e
 1689 00d8 00       		.byte	0
 1690 00d9 3F       		.uleb128 0x3f
 1691 00da 19       		.uleb128 0x19
 1692 00db 03       		.uleb128 0x3
 1693 00dc 0E       		.uleb128 0xe
 1694 00dd 3A       		.uleb128 0x3a
 1695 00de 0B       		.uleb128 0xb
 1696 00df 3B       		.uleb128 0x3b
 1697 00e0 0B       		.uleb128 0xb
 1698 00e1 11       		.uleb128 0x11
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 36


 1699 00e2 01       		.uleb128 0x1
 1700 00e3 12       		.uleb128 0x12
 1701 00e4 06       		.uleb128 0x6
 1702 00e5 40       		.uleb128 0x40
 1703 00e6 18       		.uleb128 0x18
 1704 00e7 9642     		.uleb128 0x2116
 1705 00e9 19       		.uleb128 0x19
 1706 00ea 00       		.byte	0
 1707 00eb 00       		.byte	0
 1708 00ec 14       		.uleb128 0x14
 1709 00ed 2E       		.uleb128 0x2e
 1710 00ee 01       		.byte	0x1
 1711 00ef 3F       		.uleb128 0x3f
 1712 00f0 19       		.uleb128 0x19
 1713 00f1 03       		.uleb128 0x3
 1714 00f2 0E       		.uleb128 0xe
 1715 00f3 3A       		.uleb128 0x3a
 1716 00f4 0B       		.uleb128 0xb
 1717 00f5 3B       		.uleb128 0x3b
 1718 00f6 0B       		.uleb128 0xb
 1719 00f7 27       		.uleb128 0x27
 1720 00f8 19       		.uleb128 0x19
 1721 00f9 49       		.uleb128 0x49
 1722 00fa 13       		.uleb128 0x13
 1723 00fb 11       		.uleb128 0x11
 1724 00fc 01       		.uleb128 0x1
 1725 00fd 12       		.uleb128 0x12
 1726 00fe 06       		.uleb128 0x6
 1727 00ff 40       		.uleb128 0x40
 1728 0100 18       		.uleb128 0x18
 1729 0101 9642     		.uleb128 0x2116
 1730 0103 19       		.uleb128 0x19
 1731 0104 01       		.uleb128 0x1
 1732 0105 13       		.uleb128 0x13
 1733 0106 00       		.byte	0
 1734 0107 00       		.byte	0
 1735 0108 15       		.uleb128 0x15
 1736 0109 05       		.uleb128 0x5
 1737 010a 00       		.byte	0
 1738 010b 03       		.uleb128 0x3
 1739 010c 0E       		.uleb128 0xe
 1740 010d 3A       		.uleb128 0x3a
 1741 010e 0B       		.uleb128 0xb
 1742 010f 3B       		.uleb128 0x3b
 1743 0110 0B       		.uleb128 0xb
 1744 0111 49       		.uleb128 0x49
 1745 0112 13       		.uleb128 0x13
 1746 0113 02       		.uleb128 0x2
 1747 0114 18       		.uleb128 0x18
 1748 0115 00       		.byte	0
 1749 0116 00       		.byte	0
 1750 0117 16       		.uleb128 0x16
 1751 0118 05       		.uleb128 0x5
 1752 0119 00       		.byte	0
 1753 011a 03       		.uleb128 0x3
 1754 011b 08       		.uleb128 0x8
 1755 011c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 37


 1756 011d 0B       		.uleb128 0xb
 1757 011e 3B       		.uleb128 0x3b
 1758 011f 0B       		.uleb128 0xb
 1759 0120 49       		.uleb128 0x49
 1760 0121 13       		.uleb128 0x13
 1761 0122 02       		.uleb128 0x2
 1762 0123 18       		.uleb128 0x18
 1763 0124 00       		.byte	0
 1764 0125 00       		.byte	0
 1765 0126 17       		.uleb128 0x17
 1766 0127 34       		.uleb128 0x34
 1767 0128 00       		.byte	0
 1768 0129 03       		.uleb128 0x3
 1769 012a 08       		.uleb128 0x8
 1770 012b 3A       		.uleb128 0x3a
 1771 012c 0B       		.uleb128 0xb
 1772 012d 3B       		.uleb128 0x3b
 1773 012e 0B       		.uleb128 0xb
 1774 012f 49       		.uleb128 0x49
 1775 0130 13       		.uleb128 0x13
 1776 0131 02       		.uleb128 0x2
 1777 0132 18       		.uleb128 0x18
 1778 0133 00       		.byte	0
 1779 0134 00       		.byte	0
 1780 0135 18       		.uleb128 0x18
 1781 0136 2E       		.uleb128 0x2e
 1782 0137 01       		.byte	0x1
 1783 0138 3F       		.uleb128 0x3f
 1784 0139 19       		.uleb128 0x19
 1785 013a 03       		.uleb128 0x3
 1786 013b 0E       		.uleb128 0xe
 1787 013c 3A       		.uleb128 0x3a
 1788 013d 0B       		.uleb128 0xb
 1789 013e 3B       		.uleb128 0x3b
 1790 013f 0B       		.uleb128 0xb
 1791 0140 27       		.uleb128 0x27
 1792 0141 19       		.uleb128 0x19
 1793 0142 11       		.uleb128 0x11
 1794 0143 01       		.uleb128 0x1
 1795 0144 12       		.uleb128 0x12
 1796 0145 06       		.uleb128 0x6
 1797 0146 40       		.uleb128 0x40
 1798 0147 18       		.uleb128 0x18
 1799 0148 9642     		.uleb128 0x2116
 1800 014a 19       		.uleb128 0x19
 1801 014b 01       		.uleb128 0x1
 1802 014c 13       		.uleb128 0x13
 1803 014d 00       		.byte	0
 1804 014e 00       		.byte	0
 1805 014f 19       		.uleb128 0x19
 1806 0150 18       		.uleb128 0x18
 1807 0151 00       		.byte	0
 1808 0152 00       		.byte	0
 1809 0153 00       		.byte	0
 1810 0154 1A       		.uleb128 0x1a
 1811 0155 0B       		.uleb128 0xb
 1812 0156 01       		.byte	0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 38


 1813 0157 11       		.uleb128 0x11
 1814 0158 01       		.uleb128 0x1
 1815 0159 12       		.uleb128 0x12
 1816 015a 06       		.uleb128 0x6
 1817 015b 01       		.uleb128 0x1
 1818 015c 13       		.uleb128 0x13
 1819 015d 00       		.byte	0
 1820 015e 00       		.byte	0
 1821 015f 1B       		.uleb128 0x1b
 1822 0160 34       		.uleb128 0x34
 1823 0161 00       		.byte	0
 1824 0162 03       		.uleb128 0x3
 1825 0163 0E       		.uleb128 0xe
 1826 0164 3A       		.uleb128 0x3a
 1827 0165 0B       		.uleb128 0xb
 1828 0166 3B       		.uleb128 0x3b
 1829 0167 0B       		.uleb128 0xb
 1830 0168 49       		.uleb128 0x49
 1831 0169 13       		.uleb128 0x13
 1832 016a 02       		.uleb128 0x2
 1833 016b 18       		.uleb128 0x18
 1834 016c 00       		.byte	0
 1835 016d 00       		.byte	0
 1836 016e 1C       		.uleb128 0x1c
 1837 016f 0B       		.uleb128 0xb
 1838 0170 01       		.byte	0x1
 1839 0171 11       		.uleb128 0x11
 1840 0172 01       		.uleb128 0x1
 1841 0173 12       		.uleb128 0x12
 1842 0174 06       		.uleb128 0x6
 1843 0175 00       		.byte	0
 1844 0176 00       		.byte	0
 1845 0177 1D       		.uleb128 0x1d
 1846 0178 21       		.uleb128 0x21
 1847 0179 00       		.byte	0
 1848 017a 49       		.uleb128 0x49
 1849 017b 13       		.uleb128 0x13
 1850 017c 2F       		.uleb128 0x2f
 1851 017d 05       		.uleb128 0x5
 1852 017e 00       		.byte	0
 1853 017f 00       		.byte	0
 1854 0180 1E       		.uleb128 0x1e
 1855 0181 2E       		.uleb128 0x2e
 1856 0182 01       		.byte	0x1
 1857 0183 3F       		.uleb128 0x3f
 1858 0184 19       		.uleb128 0x19
 1859 0185 03       		.uleb128 0x3
 1860 0186 0E       		.uleb128 0xe
 1861 0187 3A       		.uleb128 0x3a
 1862 0188 0B       		.uleb128 0xb
 1863 0189 3B       		.uleb128 0x3b
 1864 018a 0B       		.uleb128 0xb
 1865 018b 49       		.uleb128 0x49
 1866 018c 13       		.uleb128 0x13
 1867 018d 11       		.uleb128 0x11
 1868 018e 01       		.uleb128 0x1
 1869 018f 12       		.uleb128 0x12
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 39


 1870 0190 06       		.uleb128 0x6
 1871 0191 40       		.uleb128 0x40
 1872 0192 18       		.uleb128 0x18
 1873 0193 9642     		.uleb128 0x2116
 1874 0195 19       		.uleb128 0x19
 1875 0196 01       		.uleb128 0x1
 1876 0197 13       		.uleb128 0x13
 1877 0198 00       		.byte	0
 1878 0199 00       		.byte	0
 1879 019a 1F       		.uleb128 0x1f
 1880 019b 34       		.uleb128 0x34
 1881 019c 00       		.byte	0
 1882 019d 03       		.uleb128 0x3
 1883 019e 0E       		.uleb128 0xe
 1884 019f 3A       		.uleb128 0x3a
 1885 01a0 0B       		.uleb128 0xb
 1886 01a1 3B       		.uleb128 0x3b
 1887 01a2 05       		.uleb128 0x5
 1888 01a3 49       		.uleb128 0x49
 1889 01a4 13       		.uleb128 0x13
 1890 01a5 3F       		.uleb128 0x3f
 1891 01a6 19       		.uleb128 0x19
 1892 01a7 3C       		.uleb128 0x3c
 1893 01a8 19       		.uleb128 0x19
 1894 01a9 00       		.byte	0
 1895 01aa 00       		.byte	0
 1896 01ab 20       		.uleb128 0x20
 1897 01ac 34       		.uleb128 0x34
 1898 01ad 00       		.byte	0
 1899 01ae 03       		.uleb128 0x3
 1900 01af 0E       		.uleb128 0xe
 1901 01b0 3A       		.uleb128 0x3a
 1902 01b1 0B       		.uleb128 0xb
 1903 01b2 3B       		.uleb128 0x3b
 1904 01b3 0B       		.uleb128 0xb
 1905 01b4 49       		.uleb128 0x49
 1906 01b5 13       		.uleb128 0x13
 1907 01b6 3F       		.uleb128 0x3f
 1908 01b7 19       		.uleb128 0x19
 1909 01b8 02       		.uleb128 0x2
 1910 01b9 18       		.uleb128 0x18
 1911 01ba 00       		.byte	0
 1912 01bb 00       		.byte	0
 1913 01bc 00       		.byte	0
 1914              		.section	.debug_aranges,"",%progbits
 1915 0000 6C000000 		.4byte	0x6c
 1916 0004 0200     		.2byte	0x2
 1917 0006 00000000 		.4byte	.Ldebug_info0
 1918 000a 04       		.byte	0x4
 1919 000b 00       		.byte	0
 1920 000c 0000     		.2byte	0
 1921 000e 0000     		.2byte	0
 1922 0010 00000000 		.4byte	.LFB64
 1923 0014 0C000000 		.4byte	.LFE64-.LFB64
 1924 0018 00000000 		.4byte	.LFB65
 1925 001c 0C000000 		.4byte	.LFE65-.LFB65
 1926 0020 00000000 		.4byte	.LFB66
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 40


 1927 0024 20000000 		.4byte	.LFE66-.LFB66
 1928 0028 00000000 		.4byte	.LFB67
 1929 002c 0C000000 		.4byte	.LFE67-.LFB67
 1930 0030 00000000 		.4byte	.LFB68
 1931 0034 38000000 		.4byte	.LFE68-.LFB68
 1932 0038 00000000 		.4byte	.LFB69
 1933 003c 48010000 		.4byte	.LFE69-.LFB69
 1934 0040 00000000 		.4byte	.LFB70
 1935 0044 78000000 		.4byte	.LFE70-.LFB70
 1936 0048 00000000 		.4byte	.LFB71
 1937 004c 58000000 		.4byte	.LFE71-.LFB71
 1938 0050 00000000 		.4byte	.LFB72
 1939 0054 40000000 		.4byte	.LFE72-.LFB72
 1940 0058 00000000 		.4byte	.LFB73
 1941 005c 74000000 		.4byte	.LFE73-.LFB73
 1942 0060 00000000 		.4byte	.LFB74
 1943 0064 3C000000 		.4byte	.LFE74-.LFB74
 1944 0068 00000000 		.4byte	0
 1945 006c 00000000 		.4byte	0
 1946              		.section	.debug_ranges,"",%progbits
 1947              	.Ldebug_ranges0:
 1948 0000 00000000 		.4byte	.LFB64
 1949 0004 0C000000 		.4byte	.LFE64
 1950 0008 00000000 		.4byte	.LFB65
 1951 000c 0C000000 		.4byte	.LFE65
 1952 0010 00000000 		.4byte	.LFB66
 1953 0014 20000000 		.4byte	.LFE66
 1954 0018 00000000 		.4byte	.LFB67
 1955 001c 0C000000 		.4byte	.LFE67
 1956 0020 00000000 		.4byte	.LFB68
 1957 0024 38000000 		.4byte	.LFE68
 1958 0028 00000000 		.4byte	.LFB69
 1959 002c 48010000 		.4byte	.LFE69
 1960 0030 00000000 		.4byte	.LFB70
 1961 0034 78000000 		.4byte	.LFE70
 1962 0038 00000000 		.4byte	.LFB71
 1963 003c 58000000 		.4byte	.LFE71
 1964 0040 00000000 		.4byte	.LFB72
 1965 0044 40000000 		.4byte	.LFE72
 1966 0048 00000000 		.4byte	.LFB73
 1967 004c 74000000 		.4byte	.LFE73
 1968 0050 00000000 		.4byte	.LFB74
 1969 0054 3C000000 		.4byte	.LFE74
 1970 0058 00000000 		.4byte	0
 1971 005c 00000000 		.4byte	0
 1972              		.section	.debug_line,"",%progbits
 1973              	.Ldebug_line0:
 1974 0000 BA030000 		.section	.debug_str,"MS",%progbits,1
 1974      02007302 
 1974      00000201 
 1974      FB0E0D00 
 1974      01010101 
 1975              	.LASF56:
 1976 0000 745F6F66 		.ascii	"t_of_day\000"
 1976      5F646179 
 1976      00
 1977              	.LASF19:
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 41


 1978 0009 746D5F68 		.ascii	"tm_hour\000"
 1978      6F757200 
 1979              	.LASF44:
 1980 0011 64656275 		.ascii	"debug_sleep\000"
 1980      675F736C 
 1980      65657000 
 1981              	.LASF37:
 1982 001d 74657374 		.ascii	"test_name\000"
 1982      5F6E616D 
 1982      6500
 1983              	.LASF61:
 1984 0027 696E7075 		.ascii	"input_str\000"
 1984      745F7374 
 1984      7200
 1985              	.LASF42:
 1986 0031 64656275 		.ascii	"debug_start\000"
 1986      675F7374 
 1986      61727400 
 1987              	.LASF2:
 1988 003d 73686F72 		.ascii	"short int\000"
 1988      7420696E 
 1988      7400
 1989              	.LASF36:
 1990 0047 5254435F 		.ascii	"RTC_TIME_DATE\000"
 1990      54494D45 
 1990      5F444154 
 1990      4500
 1991              	.LASF60:
 1992 0055 73747265 		.ascii	"strextract\000"
 1992      78747261 
 1992      637400
 1993              	.LASF65:
 1994 0060 62656769 		.ascii	"begin\000"
 1994      6E00
 1995              	.LASF70:
 1996 0066 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1996      43313120 
 1996      352E342E 
 1996      31203230 
 1996      31363036 
 1997 0099 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1997      20726576 
 1997      6973696F 
 1997      6E203233 
 1997      37373135 
 1998 00cc 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1998      66756E63 
 1998      74696F6E 
 1998      2D736563 
 1998      74696F6E 
 1999              	.LASF23:
 2000 00f4 746D5F77 		.ascii	"tm_wday\000"
 2000      64617900 
 2001              	.LASF6:
 2002 00fc 6C6F6E67 		.ascii	"long long int\000"
 2002      206C6F6E 
 2002      6720696E 
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 42


 2002      7400
 2003              	.LASF59:
 2004 010a 5F777269 		.ascii	"_write\000"
 2004      746500
 2005              	.LASF54:
 2006 0111 67657454 		.ascii	"getTimeStamp\000"
 2006      696D6553 
 2006      74616D70 
 2006      00
 2007              	.LASF30:
 2008 011e 486F7572 		.ascii	"Hour\000"
 2008      00
 2009              	.LASF46:
 2010 0123 66696C65 		.ascii	"file\000"
 2010      00
 2011              	.LASF32:
 2012 0128 4461794F 		.ascii	"DayOfMonth\000"
 2012      664D6F6E 
 2012      746800
 2013              	.LASF27:
 2014 0133 75696E74 		.ascii	"uint16\000"
 2014      313600
 2015              	.LASF41:
 2016 013a 76615F6C 		.ascii	"va_list\000"
 2016      69737400 
 2017              	.LASF71:
 2018 0142 64656275 		.ascii	"debug.c\000"
 2018      672E6300 
 2019              	.LASF26:
 2020 014a 75696E74 		.ascii	"uint8\000"
 2020      3800
 2021              	.LASF62:
 2022 0150 6F757470 		.ascii	"output_str\000"
 2022      75745F73 
 2022      747200
 2023              	.LASF18:
 2024 015b 746D5F6D 		.ascii	"tm_min\000"
 2024      696E00
 2025              	.LASF28:
 2026 0162 666C6F61 		.ascii	"float\000"
 2026      7400
 2027              	.LASF21:
 2028 0168 746D5F6D 		.ascii	"tm_mon\000"
 2028      6F6E00
 2029              	.LASF48:
 2030 016f 666F726D 		.ascii	"format\000"
 2030      617400
 2031              	.LASF15:
 2032 0176 74696D65 		.ascii	"time_t\000"
 2032      5F7400
 2033              	.LASF16:
 2034 017d 5F5F7661 		.ascii	"__va_list\000"
 2034      5F6C6973 
 2034      7400
 2035              	.LASF39:
 2036 0187 72656173 		.ascii	"reason\000"
 2036      6F6E00
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 43


 2037              	.LASF63:
 2038 018e 73656172 		.ascii	"search_start\000"
 2038      63685F73 
 2038      74617274 
 2038      00
 2039              	.LASF58:
 2040 019b 73747269 		.ascii	"string\000"
 2040      6E6700
 2041              	.LASF68:
 2042 01a2 42425F66 		.ascii	"BB_fileName\000"
 2042      696C654E 
 2042      616D6500 
 2043              	.LASF35:
 2044 01ae 59656172 		.ascii	"Year\000"
 2044      00
 2045              	.LASF34:
 2046 01b3 4D6F6E74 		.ascii	"Month\000"
 2046      6800
 2047              	.LASF9:
 2048 01b9 6C6F6E67 		.ascii	"long double\000"
 2048      20646F75 
 2048      626C6500 
 2049              	.LASF1:
 2050 01c5 756E7369 		.ascii	"unsigned char\000"
 2050      676E6564 
 2050      20636861 
 2050      7200
 2051              	.LASF31:
 2052 01d3 4461794F 		.ascii	"DayOfWeek\000"
 2052      66576565 
 2052      6B00
 2053              	.LASF0:
 2054 01dd 7369676E 		.ascii	"signed char\000"
 2054      65642063 
 2054      68617200 
 2055              	.LASF22:
 2056 01e9 746D5F79 		.ascii	"tm_year\000"
 2056      65617200 
 2057              	.LASF7:
 2058 01f1 6C6F6E67 		.ascii	"long long unsigned int\000"
 2058      206C6F6E 
 2058      6720756E 
 2058      7369676E 
 2058      65642069 
 2059              	.LASF47:
 2060 0208 74797065 		.ascii	"type\000"
 2060      00
 2061              	.LASF8:
 2062 020d 756E7369 		.ascii	"unsigned int\000"
 2062      676E6564 
 2062      20696E74 
 2062      00
 2063              	.LASF73:
 2064 021a 5F5F6170 		.ascii	"__ap\000"
 2064      00
 2065              	.LASF20:
 2066 021f 746D5F6D 		.ascii	"tm_mday\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 44


 2066      64617900 
 2067              	.LASF72:
 2068 0227 433A5C55 		.ascii	"C:\\Users\\hail\\Desktop\\Brooke Research\\notoriOS"
 2068      73657273 
 2068      5C686169 
 2068      6C5C4465 
 2068      736B746F 
 2069 0255 5C6E6F74 		.ascii	"\\notoriOS\\notoriOS\\notoriOS.cydsn\000"
 2069      6F72694F 
 2069      535C6E6F 
 2069      746F7269 
 2069      4F535C6E 
 2070              	.LASF3:
 2071 0277 73686F72 		.ascii	"short unsigned int\000"
 2071      7420756E 
 2071      7369676E 
 2071      65642069 
 2071      6E7400
 2072              	.LASF38:
 2073 028a 73746174 		.ascii	"status\000"
 2073      757300
 2074              	.LASF66:
 2075 0291 7072696E 		.ascii	"printd\000"
 2075      746400
 2076              	.LASF13:
 2077 0298 63686172 		.ascii	"char\000"
 2077      00
 2078              	.LASF40:
 2079 029d 74657374 		.ascii	"test_t\000"
 2079      5F7400
 2080              	.LASF4:
 2081 02a4 6C6F6E67 		.ascii	"long int\000"
 2081      20696E74 
 2081      00
 2082              	.LASF52:
 2083 02ad 7072696E 		.ascii	"printTestStatus\000"
 2083      74546573 
 2083      74537461 
 2083      74757300 
 2084              	.LASF14:
 2085 02bd 696E7433 		.ascii	"int32_t\000"
 2085      325F7400 
 2086              	.LASF50:
 2087 02c5 64656275 		.ascii	"debug_string\000"
 2087      675F7374 
 2087      72696E67 
 2087      00
 2088              	.LASF24:
 2089 02d2 746D5F79 		.ascii	"tm_yday\000"
 2089      64617900 
 2090              	.LASF55:
 2091 02da 6C6F6361 		.ascii	"localTime\000"
 2091      6C54696D 
 2091      6500
 2092              	.LASF53:
 2093 02e4 74657374 		.ascii	"test\000"
 2093      00
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 45


 2094              	.LASF64:
 2095 02e9 73656172 		.ascii	"search_end\000"
 2095      63685F65 
 2095      6E6400
 2096              	.LASF25:
 2097 02f4 746D5F69 		.ascii	"tm_isdst\000"
 2097      73647374 
 2097      00
 2098              	.LASF43:
 2099 02fd 64656275 		.ascii	"debug_stop\000"
 2099      675F7374 
 2099      6F7000
 2100              	.LASF5:
 2101 0308 6C6F6E67 		.ascii	"long unsigned int\000"
 2101      20756E73 
 2101      69676E65 
 2101      6420696E 
 2101      7400
 2102              	.LASF29:
 2103 031a 646F7562 		.ascii	"double\000"
 2103      6C6500
 2104              	.LASF49:
 2105 0321 61726770 		.ascii	"argptr\000"
 2105      747200
 2106              	.LASF69:
 2107 0328 64656275 		.ascii	"debug_level\000"
 2107      675F6C65 
 2107      76656C00 
 2108              	.LASF10:
 2109 0334 5F5F696E 		.ascii	"__int32_t\000"
 2109      7433325F 
 2109      7400
 2110              	.LASF12:
 2111 033e 73697A65 		.ascii	"sizetype\000"
 2111      74797065 
 2111      00
 2112              	.LASF11:
 2113 0347 5F5F676E 		.ascii	"__gnuc_va_list\000"
 2113      75635F76 
 2113      615F6C69 
 2113      737400
 2114              	.LASF45:
 2115 0356 64656275 		.ascii	"debug_wakeup\000"
 2115      675F7761 
 2115      6B657570 
 2115      00
 2116              	.LASF51:
 2117 0363 7072696E 		.ascii	"printNotif\000"
 2117      744E6F74 
 2117      696600
 2118              	.LASF17:
 2119 036e 746D5F73 		.ascii	"tm_sec\000"
 2119      656300
 2120              	.LASF67:
 2121 0375 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2121      52784275 
 2121      66666572 
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc96hFVm.s 			page 46


 2121      00
 2122              	.LASF57:
 2123 0382 73747269 		.ascii	"stripEscapeCharacters\000"
 2123      70457363 
 2123      61706543 
 2123      68617261 
 2123      63746572 
 2124              	.LASF33:
 2125 0398 4461794F 		.ascii	"DayOfYear\000"
 2125      66596561 
 2125      7200
 2126              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
