ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"debug.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.syntax unified
  20              		.global _printf_float
  21              		.thumb
  22              		.syntax unified
  23              		.global	BB_fileName
  24              		.data
  25              		.align	2
  26              		.type	BB_fileName, %object
  27              		.size	BB_fileName, 30
  28              	BB_fileName:
  29 0000 626C6163 		.ascii	"blackbox.txt\000"
  29      6B626F78 
  29      2E747874 
  29      00
  30 000d 00000000 		.space	17
  30      00000000 
  30      00000000 
  30      00000000 
  30      00
  31              		.global	debug_level
  32              		.type	debug_level, %object
  33              		.size	debug_level, 1
  34              	debug_level:
  35 001e 02       		.byte	2
  36              		.section	.text.debug_start,"ax",%progbits
  37              		.align	2
  38              		.global	debug_start
  39              		.thumb
  40              		.thumb_func
  41              		.type	debug_start, %function
  42              	debug_start:
  43              	.LFB64:
  44              		.file 1 "debug.c"
   1:debug.c       **** //drivers for UART debug 
   2:debug.c       **** 
   3:debug.c       **** #include "debug.h"
   4:debug.c       **** #include <stdarg.h> // handles variable argument list
   5:debug.c       **** 
   6:debug.c       **** char    BB_fileName[30] = "blackbox.txt";
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 2


   7:debug.c       **** 
   8:debug.c       **** // Set debug level based on what you want printed/ written to SD card
   9:debug.c       **** // 0u = none ; 1u = warnings and errors; 2u = all
  10:debug.c       **** uint8   debug_level = 2u;
  11:debug.c       **** 
  12:debug.c       **** // function to start UART debug
  13:debug.c       **** void debug_start(){
  45              		.loc 1 13 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 1, uses_anonymous_args = 0
  49 0000 80B5     		push	{r7, lr}
  50              		.cfi_def_cfa_offset 8
  51              		.cfi_offset 7, -8
  52              		.cfi_offset 14, -4
  53 0002 00AF     		add	r7, sp, #0
  54              		.cfi_def_cfa_register 7
  14:debug.c       ****     // if debug flag = 1 then start UART
  15:debug.c       ****     #if USE_DEBUG
  16:debug.c       ****        Debug_UART_Start();
  55              		.loc 1 16 0
  56 0004 FFF7FEFF 		bl	Debug_UART_Start
  17:debug.c       ****        //setvbuf(stdout, NULL, _IOFBF, Debug_UART_TX_BUFFER_SIZE);//this sets the printf() bufefr t
  18:debug.c       ****        //setbuf(stdout, NULL);
  19:debug.c       ****     #endif
  20:debug.c       **** }
  57              		.loc 1 20 0
  58 0008 00BF     		nop
  59 000a 80BD     		pop	{r7, pc}
  60              		.cfi_endproc
  61              	.LFE64:
  62              		.size	debug_start, .-debug_start
  63              		.section	.text.debug_stop,"ax",%progbits
  64              		.align	2
  65              		.global	debug_stop
  66              		.thumb
  67              		.thumb_func
  68              		.type	debug_stop, %function
  69              	debug_stop:
  70              	.LFB65:
  21:debug.c       **** 
  22:debug.c       **** // function to stop UART debug
  23:debug.c       **** void debug_stop(){
  71              		.loc 1 23 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 1, uses_anonymous_args = 0
  75 0000 80B5     		push	{r7, lr}
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 7, -8
  78              		.cfi_offset 14, -4
  79 0002 00AF     		add	r7, sp, #0
  80              		.cfi_def_cfa_register 7
  24:debug.c       ****     // if debug flag = 1 then stop UART
  25:debug.c       ****     #if USE_DEBUG
  26:debug.c       ****         Debug_UART_Stop();
  81              		.loc 1 26 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 3


  82 0004 FFF7FEFF 		bl	Debug_UART_Stop
  27:debug.c       ****     #endif
  28:debug.c       **** }
  83              		.loc 1 28 0
  84 0008 00BF     		nop
  85 000a 80BD     		pop	{r7, pc}
  86              		.cfi_endproc
  87              	.LFE65:
  88              		.size	debug_stop, .-debug_stop
  89              		.section	.text.debug_sleep,"ax",%progbits
  90              		.align	2
  91              		.global	debug_sleep
  92              		.thumb
  93              		.thumb_func
  94              		.type	debug_sleep, %function
  95              	debug_sleep:
  96              	.LFB66:
  29:debug.c       **** 
  30:debug.c       **** // function to sleep UART debug
  31:debug.c       **** void debug_sleep(){
  97              		.loc 1 31 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 1, uses_anonymous_args = 0
 101 0000 80B5     		push	{r7, lr}
 102              		.cfi_def_cfa_offset 8
 103              		.cfi_offset 7, -8
 104              		.cfi_offset 14, -4
 105 0002 00AF     		add	r7, sp, #0
 106              		.cfi_def_cfa_register 7
  32:debug.c       ****     // if debug flag = 1 and printf still writing, sleep UART
  33:debug.c       ****     #if USE_DEBUG
  34:debug.c       **** 
  35:debug.c       ****         // Check if UART is busy writing and waiit, if needed
  36:debug.c       ****         // Debug_UART_ReadTxStatus() reads the status register for the TX portion of the UART.
  37:debug.c       ****         if(!(Debug_UART_ReadTxStatus() & Debug_UART_TX_STS_FIFO_EMPTY)){
 107              		.loc 1 37 0
 108 0004 FFF7FEFF 		bl	Debug_UART_ReadTxStatus
 109 0008 0346     		mov	r3, r0
 110 000a 03F00203 		and	r3, r3, #2
 111 000e 002B     		cmp	r3, #0
 112 0010 02D1     		bne	.L4
  38:debug.c       ****             CyDelay(1u);
 113              		.loc 1 38 0
 114 0012 0120     		movs	r0, #1
 115 0014 FFF7FEFF 		bl	CyDelay
 116              	.L4:
  39:debug.c       ****         }
  40:debug.c       ****     // This is the preferred API to prepare the component for sleep. 
  41:debug.c       ****     // The Debug_UART_Sleep() API saves the current component state. Then it calls the Debug_UART_S
  42:debug.c       ****     Debug_UART_Sleep(); 
 117              		.loc 1 42 0
 118 0018 FFF7FEFF 		bl	Debug_UART_Sleep
  43:debug.c       ****    #endif
  44:debug.c       ****    
  45:debug.c       **** }
 119              		.loc 1 45 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 4


 120 001c 00BF     		nop
 121 001e 80BD     		pop	{r7, pc}
 122              		.cfi_endproc
 123              	.LFE66:
 124              		.size	debug_sleep, .-debug_sleep
 125              		.section	.text.debug_wakeup,"ax",%progbits
 126              		.align	2
 127              		.global	debug_wakeup
 128              		.thumb
 129              		.thumb_func
 130              		.type	debug_wakeup, %function
 131              	debug_wakeup:
 132              	.LFB67:
  46:debug.c       **** 
  47:debug.c       **** // function to wakeup UART debug
  48:debug.c       **** void debug_wakeup(){
 133              		.loc 1 48 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 1, uses_anonymous_args = 0
 137 0000 80B5     		push	{r7, lr}
 138              		.cfi_def_cfa_offset 8
 139              		.cfi_offset 7, -8
 140              		.cfi_offset 14, -4
 141 0002 00AF     		add	r7, sp, #0
 142              		.cfi_def_cfa_register 7
  49:debug.c       ****     // if debug flag = 1, wakeup UART debug and turn off stillWriting flag
  50:debug.c       ****     #if USE_DEBUG
  51:debug.c       ****         Debug_UART_Wakeup();
 143              		.loc 1 51 0
 144 0004 FFF7FEFF 		bl	Debug_UART_Wakeup
  52:debug.c       ****     #endif
  53:debug.c       **** }
 145              		.loc 1 53 0
 146 0008 00BF     		nop
 147 000a 80BD     		pop	{r7, pc}
 148              		.cfi_endproc
 149              	.LFE67:
 150              		.size	debug_wakeup, .-debug_wakeup
 151              		.section	.text._write,"ax",%progbits
 152              		.align	2
 153              		.global	_write
 154              		.thumb
 155              		.thumb_func
 156              		.type	_write, %function
 157              	_write:
 158              	.LFB68:
  54:debug.c       **** 
  55:debug.c       **** // if debug flag = 1, and using the GCC compiler, revise the _write() function so that when we call
  56:debug.c       **** // NOTE: For this to work HEAP size in "System" must be set to 0x300 or more
  57:debug.c       **** // Stack and heap are both a part of memory. Stack holds functions, variables, etc. Heap sits on to
  58:debug.c       **** // If heap is too small, then you get a stack overflow. FOr printing, need to have a bigger heap. B
  59:debug.c       **** // If have memory problems, play around with heap size.
  60:debug.c       **** #if USE_DEBUG
  61:debug.c       ****     
  62:debug.c       ****     
  63:debug.c       **** // This will allow you to use printf(), as you would in regulart c programs
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 5


  64:debug.c       **** // careful though, printf() is sometimes not safe in embedded sytems
  65:debug.c       **** // may want to use printd() function below
  66:debug.c       **** int _write(int file, char *ptr, int len)
  67:debug.c       **** {
 159              		.loc 1 67 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 24
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 86B0     		sub	sp, sp, #24
 168              		.cfi_def_cfa_offset 32
 169 0004 00AF     		add	r7, sp, #0
 170              		.cfi_def_cfa_register 7
 171 0006 F860     		str	r0, [r7, #12]
 172 0008 B960     		str	r1, [r7, #8]
 173 000a 7A60     		str	r2, [r7, #4]
  68:debug.c       ****     int i;
  69:debug.c       ****     file = file;
  70:debug.c       ****     for (i = 0; i < len; i++)
 174              		.loc 1 70 0
 175 000c 0023     		movs	r3, #0
 176 000e 7B61     		str	r3, [r7, #20]
 177 0010 09E0     		b	.L7
 178              	.L8:
  71:debug.c       ****     {   
  72:debug.c       ****         // Puts a byte of data into the transmit buffer to be sent when the bus is available.
  73:debug.c       ****         Debug_UART_PutChar(*ptr++);
 179              		.loc 1 73 0 discriminator 3
 180 0012 BB68     		ldr	r3, [r7, #8]
 181 0014 5A1C     		adds	r2, r3, #1
 182 0016 BA60     		str	r2, [r7, #8]
 183 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 184 001a 1846     		mov	r0, r3
 185 001c FFF7FEFF 		bl	Debug_UART_PutChar
  70:debug.c       ****     {   
 186              		.loc 1 70 0 discriminator 3
 187 0020 7B69     		ldr	r3, [r7, #20]
 188 0022 0133     		adds	r3, r3, #1
 189 0024 7B61     		str	r3, [r7, #20]
 190              	.L7:
  70:debug.c       ****     {   
 191              		.loc 1 70 0 is_stmt 0 discriminator 1
 192 0026 7A69     		ldr	r2, [r7, #20]
 193 0028 7B68     		ldr	r3, [r7, #4]
 194 002a 9A42     		cmp	r2, r3
 195 002c F1DB     		blt	.L8
  74:debug.c       ****     }
  75:debug.c       ****     
  76:debug.c       ****     return (len);
 196              		.loc 1 76 0 is_stmt 1
 197 002e 7B68     		ldr	r3, [r7, #4]
  77:debug.c       **** }
 198              		.loc 1 77 0
 199 0030 1846     		mov	r0, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 6


 200 0032 1837     		adds	r7, r7, #24
 201              		.cfi_def_cfa_offset 8
 202 0034 BD46     		mov	sp, r7
 203              		.cfi_def_cfa_register 13
 204              		@ sp needed
 205 0036 80BD     		pop	{r7, pc}
 206              		.cfi_endproc
 207              	.LFE68:
 208              		.size	_write, .-_write
 209              		.section	.rodata
 210              		.align	2
 211              	.LC0:
 212 0000 7B2000   		.ascii	"{ \000"
 213 0003 00       		.align	2
 214              	.LC1:
 215 0004 2274696D 		.ascii	"\"time\":\"%ld\" \000"
 215      65223A22 
 215      256C6422 
 215      2000
 216 0012 0000     		.align	2
 217              	.LC2:
 218 0014 22657665 		.ascii	"\"event\":\"warning\" \"value\":\"\000"
 218      6E74223A 
 218      22776172 
 218      6E696E67 
 218      22202276 
 219              		.align	2
 220              	.LC3:
 221 0030 22657665 		.ascii	"\"event\":\"error\" \"value\":\"\000"
 221      6E74223A 
 221      22657272 
 221      6F722220 
 221      2276616C 
 222 004a 0000     		.align	2
 223              	.LC4:
 224 004c 227D0D0A 		.ascii	"\"}\015\012\000"
 224      00
 225 0051 000000   		.align	2
 226              	.LC5:
 227 0054 612B00   		.ascii	"a+\000"
 228 0057 00       		.align	2
 229              	.LC6:
 230 0058 22657665 		.ascii	"\"event\":\"notif\" \"value\":\"\000"
 230      6E74223A 
 230      226E6F74 
 230      69662220 
 230      2276616C 
 231 0072 0000     		.align	2
 232              	.LC7:
 233 0074 22657665 		.ascii	"\"event\":\"undefined\" \"value\":\"\000"
 233      6E74223A 
 233      22756E64 
 233      6566696E 
 233      65642220 
 234              		.section	.text.printNotif,"ax",%progbits
 235              		.align	2
 236              		.global	printNotif
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 7


 237              		.thumb
 238              		.thumb_func
 239              		.type	printNotif, %function
 240              	printNotif:
 241              	.LFB69:
  78:debug.c       **** 
  79:debug.c       **** #endif
  80:debug.c       **** 
  81:debug.c       **** // Create function to hijack printf to add an epoch timestamp to print output
  82:debug.c       **** // Whenever a function is declared to have an indeterminate number of arguments, in place of the la
  83:debug.c       **** // to tell the compiler the function should accept however many arguments that the programmer uses,
  84:debug.c       **** // to at least the number of variables declared. 
  85:debug.c       **** void printNotif(uint8 type, char* format, ...){
 242              		.loc 1 85 0
 243              		.cfi_startproc
 244              		@ args = 4, pretend = 12, frame = 2064
 245              		@ frame_needed = 1, uses_anonymous_args = 1
 246 0000 0EB4     		push	{r1, r2, r3}
 247              		.cfi_def_cfa_offset 12
 248              		.cfi_offset 1, -12
 249              		.cfi_offset 2, -8
 250              		.cfi_offset 3, -4
 251 0002 80B5     		push	{r7, lr}
 252              		.cfi_def_cfa_offset 20
 253              		.cfi_offset 7, -20
 254              		.cfi_offset 14, -16
 255 0004 ADF6140D 		subw	sp, sp, #2068
 256              		.cfi_def_cfa_offset 2088
 257 0008 00AF     		add	r7, sp, #0
 258              		.cfi_def_cfa_register 7
 259 000a 0246     		mov	r2, r0
 260 000c FB1D     		adds	r3, r7, #7
 261 000e 1A70     		strb	r2, [r3]
  86:debug.c       ****     
  87:debug.c       ****     char debug_string[MAX_DEBUG_STRING_LENGTH]; // string to be printed
  88:debug.c       ****     
  89:debug.c       ****     // if debug flag = 1
  90:debug.c       ****     #if USE_DEBUG
  91:debug.c       ****         if (debug_level == 0u){
 262              		.loc 1 91 0
 263 0010 4C4B     		ldr	r3, .L27
 264 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 265 0014 002B     		cmp	r3, #0
 266 0016 00F08A80 		beq	.L25
  92:debug.c       ****             return;
  93:debug.c       ****         }else if (debug_level == 1u){
 267              		.loc 1 93 0
 268 001a 4A4B     		ldr	r3, .L27
 269 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270 001e 012B     		cmp	r3, #1
 271 0020 40D1     		bne	.L13
  94:debug.c       ****             if (type == NOTIF_TYPE_WARNING || type == NOTIF_TYPE_ERROR){
 272              		.loc 1 94 0
 273 0022 FB1D     		adds	r3, r7, #7
 274 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 275 0026 012B     		cmp	r3, #1
 276 0028 03D0     		beq	.L14
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 8


 277              		.loc 1 94 0 is_stmt 0 discriminator 1
 278 002a FB1D     		adds	r3, r7, #7
 279 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 002e 022B     		cmp	r3, #2
 281 0030 7FD1     		bne	.L26
 282              	.L14:
 283              	.LBB2:
  95:debug.c       ****                 //basically, just hijack printf and inject the timestamp infront
  96:debug.c       ****                 printd("{ ");
 284              		.loc 1 96 0 is_stmt 1
 285 0032 4548     		ldr	r0, .L27+4
 286 0034 FFF7FEFF 		bl	printd
  97:debug.c       ****                 printd("\"time\":\"%ld\" " , getTimeStamp());
 287              		.loc 1 97 0
 288 0038 FFF7FEFF 		bl	getTimeStamp
 289 003c 0346     		mov	r3, r0
 290 003e 1946     		mov	r1, r3
 291 0040 4248     		ldr	r0, .L27+8
 292 0042 FFF7FEFF 		bl	printd
  98:debug.c       ****                 if(type == NOTIF_TYPE_WARNING){
 293              		.loc 1 98 0
 294 0046 FB1D     		adds	r3, r7, #7
 295 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 296 004a 012B     		cmp	r3, #1
 297 004c 03D1     		bne	.L16
  99:debug.c       ****                     printd("\"event\":\"warning\" \"value\":\"");
 298              		.loc 1 99 0
 299 004e 4048     		ldr	r0, .L27+12
 300 0050 FFF7FEFF 		bl	printd
 301 0054 06E0     		b	.L17
 302              	.L16:
 100:debug.c       ****                 }else if(type == NOTIF_TYPE_ERROR){
 303              		.loc 1 100 0
 304 0056 FB1D     		adds	r3, r7, #7
 305 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 306 005a 022B     		cmp	r3, #2
 307 005c 02D1     		bne	.L17
 101:debug.c       ****                     printd("\"event\":\"error\" \"value\":\"");
 308              		.loc 1 101 0
 309 005e 3D48     		ldr	r0, .L27+16
 310 0060 FFF7FEFF 		bl	printd
 311              	.L17:
 102:debug.c       ****                 }
 103:debug.c       ****                        
 104:debug.c       ****                 va_list argptr; // create variable argprt of the type va_list from stdarg.h
 105:debug.c       ****                 va_start(argptr, format); // from stdarg.h: the va_start() macro is invoked to init
 312              		.loc 1 105 0
 313 0064 07F50262 		add	r2, r7, #2080
 314 0068 07F10C03 		add	r3, r7, #12
 315 006c 1A60     		str	r2, [r3]
 106:debug.c       ****                 vsnprintf(debug_string, MAX_DEBUG_STRING_LENGTH, format, argptr); // send text to b
 316              		.loc 1 106 0
 317 006e 07F10C03 		add	r3, r7, #12
 318 0072 07F11000 		add	r0, r7, #16
 319 0076 1B68     		ldr	r3, [r3]
 320 0078 D7F81C28 		ldr	r2, [r7, #2076]
 321 007c 4FF40061 		mov	r1, #2048
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 9


 322 0080 FFF7FEFF 		bl	vsnprintf
 107:debug.c       ****                 Debug_UART_PutString(debug_string); // Sends a NULL terminated string to the TX buf
 323              		.loc 1 107 0
 324 0084 07F11003 		add	r3, r7, #16
 325 0088 1846     		mov	r0, r3
 326 008a FFF7FEFF 		bl	Debug_UART_PutString
 108:debug.c       ****                 va_end(argptr); // the va_end() macro is used to clean up; it invalidates ap for us
 109:debug.c       ****                 printd("\"}\r\n");
 327              		.loc 1 109 0
 328 008e 3248     		ldr	r0, .L27+20
 329 0090 FFF7FEFF 		bl	printd
 110:debug.c       ****                 SD_write(BB_fileName,"a+",debug_string); // Write data to SD Card 
 330              		.loc 1 110 0
 331 0094 07F11003 		add	r3, r7, #16
 332 0098 1A46     		mov	r2, r3
 333 009a 3049     		ldr	r1, .L27+24
 334 009c 3048     		ldr	r0, .L27+28
 335 009e FFF7FEFF 		bl	SD_write
 336              	.LBE2:
  94:debug.c       ****                 //basically, just hijack printf and inject the timestamp infront
 337              		.loc 1 94 0
 338 00a2 47E0     		b	.L10
 339              	.L13:
 340              	.LBB3:
 111:debug.c       ****             }else{
 112:debug.c       ****                 return;
 113:debug.c       ****             }
 114:debug.c       ****         }else{
 115:debug.c       ****             //basically, just hijack printf and inject the timestamp infront
 116:debug.c       ****             printd("{ ");
 341              		.loc 1 116 0
 342 00a4 2848     		ldr	r0, .L27+4
 343 00a6 FFF7FEFF 		bl	printd
 117:debug.c       ****             printd("\"time\":\"%ld\" " , getTimeStamp());
 344              		.loc 1 117 0
 345 00aa FFF7FEFF 		bl	getTimeStamp
 346 00ae 0346     		mov	r3, r0
 347 00b0 1946     		mov	r1, r3
 348 00b2 2648     		ldr	r0, .L27+8
 349 00b4 FFF7FEFF 		bl	printd
 118:debug.c       ****             if(type == NOTIF_TYPE_EVENT){
 350              		.loc 1 118 0
 351 00b8 FB1D     		adds	r3, r7, #7
 352 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 353 00bc 002B     		cmp	r3, #0
 354 00be 03D1     		bne	.L20
 119:debug.c       ****                 printd("\"event\":\"notif\" \"value\":\"");
 355              		.loc 1 119 0
 356 00c0 2848     		ldr	r0, .L27+32
 357 00c2 FFF7FEFF 		bl	printd
 358 00c6 12E0     		b	.L21
 359              	.L20:
 120:debug.c       ****             }else if(type == NOTIF_TYPE_WARNING){
 360              		.loc 1 120 0
 361 00c8 FB1D     		adds	r3, r7, #7
 362 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 363 00cc 012B     		cmp	r3, #1
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 10


 364 00ce 03D1     		bne	.L22
 121:debug.c       ****                 printd("\"event\":\"warning\" \"value\":\"");
 365              		.loc 1 121 0
 366 00d0 1F48     		ldr	r0, .L27+12
 367 00d2 FFF7FEFF 		bl	printd
 368 00d6 0AE0     		b	.L21
 369              	.L22:
 122:debug.c       ****             }else if(type == NOTIF_TYPE_ERROR){
 370              		.loc 1 122 0
 371 00d8 FB1D     		adds	r3, r7, #7
 372 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 373 00dc 022B     		cmp	r3, #2
 374 00de 03D1     		bne	.L23
 123:debug.c       ****                 printd("\"event\":\"error\" \"value\":\"");
 375              		.loc 1 123 0
 376 00e0 1C48     		ldr	r0, .L27+16
 377 00e2 FFF7FEFF 		bl	printd
 378 00e6 02E0     		b	.L21
 379              	.L23:
 124:debug.c       ****             }else{
 125:debug.c       ****                 printd("\"event\":\"undefined\" \"value\":\""); 
 380              		.loc 1 125 0
 381 00e8 1F48     		ldr	r0, .L27+36
 382 00ea FFF7FEFF 		bl	printd
 383              	.L21:
 126:debug.c       ****             }
 127:debug.c       ****   
 128:debug.c       ****             va_list argptr; // create variable argprt of the type va_list from stdarg.h
 129:debug.c       ****             va_start(argptr, format); // from stdarg.h: the va_start() macro is invoked to initiali
 384              		.loc 1 129 0 discriminator 3
 385 00ee 07F50262 		add	r2, r7, #2080
 386 00f2 07F10803 		add	r3, r7, #8
 387 00f6 1A60     		str	r2, [r3]
 130:debug.c       ****             vsnprintf(debug_string, MAX_DEBUG_STRING_LENGTH, format, argptr); // send text to buffe
 388              		.loc 1 130 0 discriminator 3
 389 00f8 07F10803 		add	r3, r7, #8
 390 00fc 07F11000 		add	r0, r7, #16
 391 0100 1B68     		ldr	r3, [r3]
 392 0102 D7F81C28 		ldr	r2, [r7, #2076]
 393 0106 4FF40061 		mov	r1, #2048
 394 010a FFF7FEFF 		bl	vsnprintf
 131:debug.c       ****             Debug_UART_PutString(debug_string); // Sends a NULL terminated string to the TX buffer 
 395              		.loc 1 131 0 discriminator 3
 396 010e 07F11003 		add	r3, r7, #16
 397 0112 1846     		mov	r0, r3
 398 0114 FFF7FEFF 		bl	Debug_UART_PutString
 132:debug.c       ****             va_end(argptr); // the va_end() macro is used to clean up; it invalidates ap for use (u
 133:debug.c       ****             printd("\"}\r\n");
 399              		.loc 1 133 0 discriminator 3
 400 0118 0F48     		ldr	r0, .L27+20
 401 011a FFF7FEFF 		bl	printd
 134:debug.c       ****             SD_write(BB_fileName,"a+",debug_string); // Write data to SD Card    
 402              		.loc 1 134 0 discriminator 3
 403 011e 07F11003 		add	r3, r7, #16
 404 0122 1A46     		mov	r2, r3
 405 0124 0D49     		ldr	r1, .L27+24
 406 0126 0E48     		ldr	r0, .L27+28
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 11


 407 0128 FFF7FEFF 		bl	SD_write
 408 012c 02E0     		b	.L10
 409              	.L25:
 410              	.LBE3:
  92:debug.c       ****         }else if (debug_level == 1u){
 411              		.loc 1 92 0
 412 012e 00BF     		nop
 413 0130 00E0     		b	.L10
 414              	.L26:
 112:debug.c       ****             }
 415              		.loc 1 112 0
 416 0132 00BF     		nop
 417              	.L10:
 135:debug.c       ****         }
 136:debug.c       ****             //va_list argptr; // create variable argprt of the type va_list from stdarg.h
 137:debug.c       ****             //char debug_string[MAX_DEBUG_STRING_LENGTH]; // string to be printed
 138:debug.c       ****             //va_start(argptr, format); // from stdarg.h: the va_start() macro is invoked to initia
 139:debug.c       ****             //vsnprintf(debug_string, MAX_DEBUG_STRING_LENGTH, format, argptr);
 140:debug.c       ****             // Sends a NULL terminated string to the TX buffer for transmission
 141:debug.c       ****         
 142:debug.c       ****         
 143:debug.c       ****             //Debug_UART_PutString(debug_string);
 144:debug.c       ****             //va_end(argptr); // the va_end() macro is used to clean up; it invalidates ap for use 
 145:debug.c       **** 
 146:debug.c       ****             //printd("\"}\r\n");
 147:debug.c       ****             
 148:debug.c       ****             //SD_write(BB_fileName,"a+",debug_string); // Write data to SD Card
 149:debug.c       ****     #endif 
 150:debug.c       **** }
 418              		.loc 1 150 0
 419 0134 07F61407 		addw	r7, r7, #2068
 420              		.cfi_def_cfa_offset 20
 421 0138 BD46     		mov	sp, r7
 422              		.cfi_def_cfa_register 13
 423              		@ sp needed
 424 013a BDE88040 		pop	{r7, lr}
 425              		.cfi_restore 14
 426              		.cfi_restore 7
 427              		.cfi_def_cfa_offset 12
 428 013e 03B0     		add	sp, sp, #12
 429              		.cfi_restore 3
 430              		.cfi_restore 2
 431              		.cfi_restore 1
 432              		.cfi_def_cfa_offset 0
 433 0140 7047     		bx	lr
 434              	.L28:
 435 0142 00BF     		.align	2
 436              	.L27:
 437 0144 00000000 		.word	debug_level
 438 0148 00000000 		.word	.LC0
 439 014c 04000000 		.word	.LC1
 440 0150 14000000 		.word	.LC2
 441 0154 30000000 		.word	.LC3
 442 0158 4C000000 		.word	.LC4
 443 015c 54000000 		.word	.LC5
 444 0160 00000000 		.word	BB_fileName
 445 0164 58000000 		.word	.LC6
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 12


 446 0168 74000000 		.word	.LC7
 447              		.cfi_endproc
 448              	.LFE69:
 449              		.size	printNotif, .-printNotif
 450              		.section	.rodata
 451 0092 0000     		.align	2
 452              	.LC8:
 453 0094 22657665 		.ascii	"\"event\":\"test\" \000"
 453      6E74223A 
 453      22746573 
 453      74222000 
 454              		.align	2
 455              	.LC9:
 456 00a4 226E616D 		.ascii	"\"name\":\"%s\" \000"
 456      65223A22 
 456      25732220 
 456      00
 457 00b1 000000   		.align	2
 458              	.LC10:
 459 00b4 22737461 		.ascii	"\"status\":\"%d\" \000"
 459      74757322 
 459      3A222564 
 459      222000
 460 00c3 00       		.align	2
 461              	.LC11:
 462 00c4 22726561 		.ascii	"\"reason\":\"%s\" \000"
 462      736F6E22 
 462      3A222573 
 462      222000
 463 00d3 00       		.align	2
 464              	.LC12:
 465 00d4 7D0D0A00 		.ascii	"}\015\012\000"
 466              		.section	.text.printTestStatus,"ax",%progbits
 467              		.align	2
 468              		.global	printTestStatus
 469              		.thumb
 470              		.thumb_func
 471              		.type	printTestStatus, %function
 472              	printTestStatus:
 473              	.LFB70:
 151:debug.c       **** 
 152:debug.c       **** // Print debug test status
 153:debug.c       **** void printTestStatus(test_t test){
 474              		.loc 1 153 0
 475              		.cfi_startproc
 476              		@ args = 388, pretend = 16, frame = 0
 477              		@ frame_needed = 1, uses_anonymous_args = 0
 478 0000 84B0     		sub	sp, sp, #16
 479              		.cfi_def_cfa_offset 16
 480 0002 80B5     		push	{r7, lr}
 481              		.cfi_def_cfa_offset 24
 482              		.cfi_offset 7, -24
 483              		.cfi_offset 14, -20
 484 0004 00AF     		add	r7, sp, #0
 485              		.cfi_def_cfa_register 7
 486 0006 07F1080E 		add	lr, r7, #8
 487 000a 8EE80F00 		stmia	lr, {r0, r1, r2, r3}
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 13


 154:debug.c       ****     // if debug flag = 1
 155:debug.c       ****     #if USE_DEBUG
 156:debug.c       ****         printd("{ ");
 488              		.loc 1 156 0
 489 000e 1348     		ldr	r0, .L30
 490 0010 FFF7FEFF 		bl	printd
 157:debug.c       ****         printd("\"time\":\"%ld\" " , getTimeStamp());
 491              		.loc 1 157 0
 492 0014 FFF7FEFF 		bl	getTimeStamp
 493 0018 0346     		mov	r3, r0
 494 001a 1946     		mov	r1, r3
 495 001c 1048     		ldr	r0, .L30+4
 496 001e FFF7FEFF 		bl	printd
 158:debug.c       ****         
 159:debug.c       ****         printd("\"event\":\"test\" ");
 497              		.loc 1 159 0
 498 0022 1048     		ldr	r0, .L30+8
 499 0024 FFF7FEFF 		bl	printd
 160:debug.c       ****         printd("\"name\":\"%s\" ", test.test_name);
 500              		.loc 1 160 0
 501 0028 07F10801 		add	r1, r7, #8
 502 002c 0E48     		ldr	r0, .L30+12
 503 002e FFF7FEFF 		bl	printd
 161:debug.c       ****         printd("\"status\":\"%d\" ", test.status);
 504              		.loc 1 161 0
 505 0032 97F88830 		ldrb	r3, [r7, #136]	@ zero_extendqisi2
 506 0036 1946     		mov	r1, r3
 507 0038 0C48     		ldr	r0, .L30+16
 508 003a FFF7FEFF 		bl	printd
 162:debug.c       ****         printd("\"reason\":\"%s\" ", test.reason);
 509              		.loc 1 162 0
 510 003e 07F18903 		add	r3, r7, #137
 511 0042 1946     		mov	r1, r3
 512 0044 0A48     		ldr	r0, .L30+20
 513 0046 FFF7FEFF 		bl	printd
 163:debug.c       **** 
 164:debug.c       ****         printd("}\r\n");
 514              		.loc 1 164 0
 515 004a 0A48     		ldr	r0, .L30+24
 516 004c FFF7FEFF 		bl	printd
 165:debug.c       ****     #endif
 166:debug.c       ****    
 167:debug.c       **** }
 517              		.loc 1 167 0
 518 0050 00BF     		nop
 519 0052 BD46     		mov	sp, r7
 520              		.cfi_def_cfa_register 13
 521              		@ sp needed
 522 0054 BDE88040 		pop	{r7, lr}
 523              		.cfi_restore 14
 524              		.cfi_restore 7
 525              		.cfi_def_cfa_offset 16
 526 0058 04B0     		add	sp, sp, #16
 527              		.cfi_def_cfa_offset 0
 528 005a 7047     		bx	lr
 529              	.L31:
 530              		.align	2
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 14


 531              	.L30:
 532 005c 00000000 		.word	.LC0
 533 0060 04000000 		.word	.LC1
 534 0064 94000000 		.word	.LC8
 535 0068 A4000000 		.word	.LC9
 536 006c B4000000 		.word	.LC10
 537 0070 C4000000 		.word	.LC11
 538 0074 D4000000 		.word	.LC12
 539              		.cfi_endproc
 540              	.LFE70:
 541              		.size	printTestStatus, .-printTestStatus
 542              		.section	.text.getTimeStamp,"ax",%progbits
 543              		.align	2
 544              		.global	getTimeStamp
 545              		.thumb
 546              		.thumb_func
 547              		.type	getTimeStamp, %function
 548              	getTimeStamp:
 549              	.LFB71:
 168:debug.c       **** 
 169:debug.c       **** 
 170:debug.c       **** // Returns local times in epoch seconds (seconds since Jan 1, 1970)
 171:debug.c       **** // Can also cast this to a t_of_day struct
 172:debug.c       **** long getTimeStamp(){
 550              		.loc 1 172 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 48
 553              		@ frame_needed = 1, uses_anonymous_args = 0
 554 0000 80B5     		push	{r7, lr}
 555              		.cfi_def_cfa_offset 8
 556              		.cfi_offset 7, -8
 557              		.cfi_offset 14, -4
 558 0002 8CB0     		sub	sp, sp, #48
 559              		.cfi_def_cfa_offset 56
 560 0004 00AF     		add	r7, sp, #0
 561              		.cfi_def_cfa_register 7
 173:debug.c       ****     // RTC_TIME_DATE * RTC_ReadTime(void) Description: Reads the current time and date. Parameters:
 174:debug.c       ****     // Creates a variable named localTime that is a pointer to RTC_TIME_DATE. It saves the time and
 175:debug.c       ****     RTC_TIME_DATE *localTime = RTC_ReadTime();
 562              		.loc 1 175 0
 563 0006 FFF7FEFF 		bl	RTC_ReadTime
 564 000a F862     		str	r0, [r7, #44]
 176:debug.c       ****    
 177:debug.c       ****     struct tm t; // creates variable t of struct tm
 178:debug.c       ****     time_t t_of_day;
 179:debug.c       **** 
 180:debug.c       ****     // sets each variable to the correct time 
 181:debug.c       ****     t.tm_sec = localTime->Sec;
 565              		.loc 1 181 0
 566 000c FB6A     		ldr	r3, [r7, #44]
 567 000e 1B78     		ldrb	r3, [r3]
 568 0010 DBB2     		uxtb	r3, r3
 569 0012 7B60     		str	r3, [r7, #4]
 182:debug.c       ****     t.tm_min = localTime->Min;
 570              		.loc 1 182 0
 571 0014 FB6A     		ldr	r3, [r7, #44]
 572 0016 5B78     		ldrb	r3, [r3, #1]
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 15


 573 0018 DBB2     		uxtb	r3, r3
 574 001a BB60     		str	r3, [r7, #8]
 183:debug.c       ****     t.tm_hour = localTime->Hour;
 575              		.loc 1 183 0
 576 001c FB6A     		ldr	r3, [r7, #44]
 577 001e 9B78     		ldrb	r3, [r3, #2]
 578 0020 DBB2     		uxtb	r3, r3
 579 0022 FB60     		str	r3, [r7, #12]
 184:debug.c       ****     t.tm_year = localTime->Year - 1900;  // Year - 1900
 580              		.loc 1 184 0
 581 0024 FB6A     		ldr	r3, [r7, #44]
 582 0026 5B89     		ldrh	r3, [r3, #10]	@ movhi
 583 0028 9BB2     		uxth	r3, r3
 584 002a A3F26C73 		subw	r3, r3, #1900
 585 002e BB61     		str	r3, [r7, #24]
 185:debug.c       ****     t.tm_mon = localTime->Month;           // Month, where 0 = jan
 586              		.loc 1 185 0
 587 0030 FB6A     		ldr	r3, [r7, #44]
 588 0032 1B7A     		ldrb	r3, [r3, #8]
 589 0034 DBB2     		uxtb	r3, r3
 590 0036 7B61     		str	r3, [r7, #20]
 186:debug.c       ****     t.tm_mday = localTime->DayOfMonth;          // Day of the month
 591              		.loc 1 186 0
 592 0038 FB6A     		ldr	r3, [r7, #44]
 593 003a 1B79     		ldrb	r3, [r3, #4]
 594 003c DBB2     		uxtb	r3, r3
 595 003e 3B61     		str	r3, [r7, #16]
 187:debug.c       ****     t.tm_isdst = 0;        // Is Daylight Savings on? 1 = yes, 0 = no, -1 = unknown
 596              		.loc 1 187 0
 597 0040 0023     		movs	r3, #0
 598 0042 7B62     		str	r3, [r7, #36]
 188:debug.c       ****     
 189:debug.c       ****     // the mktime() function converts a broken-down local time (pointed to by timeptr) and returns 
 190:debug.c       ****     // the syntax for the mktime function in the C Language is: time_t mktime(struct tm *timeptr);
 191:debug.c       ****     // creates variable t_of_day of type time_t
 192:debug.c       ****     t_of_day = mktime(&t); // determines a calendar time
 599              		.loc 1 192 0
 600 0044 3B1D     		adds	r3, r7, #4
 601 0046 1846     		mov	r0, r3
 602 0048 FFF7FEFF 		bl	mktime
 603 004c B862     		str	r0, [r7, #40]
 193:debug.c       **** 
 194:debug.c       ****     return (long) t_of_day;
 604              		.loc 1 194 0
 605 004e BB6A     		ldr	r3, [r7, #40]
 195:debug.c       **** }
 606              		.loc 1 195 0
 607 0050 1846     		mov	r0, r3
 608 0052 3037     		adds	r7, r7, #48
 609              		.cfi_def_cfa_offset 8
 610 0054 BD46     		mov	sp, r7
 611              		.cfi_def_cfa_register 13
 612              		@ sp needed
 613 0056 80BD     		pop	{r7, pc}
 614              		.cfi_endproc
 615              	.LFE71:
 616              		.size	getTimeStamp, .-getTimeStamp
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 16


 617              		.section	.text.stripEscapeCharacters,"ax",%progbits
 618              		.align	2
 619              		.global	stripEscapeCharacters
 620              		.thumb
 621              		.thumb_func
 622              		.type	stripEscapeCharacters, %function
 623              	stripEscapeCharacters:
 624              	.LFB72:
 196:debug.c       **** 
 197:debug.c       **** // The C library function char *strchr(const char *str, int c) searches for the first occurrence of
 198:debug.c       **** // Format for strchr() function: char *strchr(const char *str, int c).
 199:debug.c       **** void stripEscapeCharacters(char *string){
 625              		.loc 1 199 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 16
 628              		@ frame_needed = 1, uses_anonymous_args = 0
 629 0000 80B5     		push	{r7, lr}
 630              		.cfi_def_cfa_offset 8
 631              		.cfi_offset 7, -8
 632              		.cfi_offset 14, -4
 633 0002 84B0     		sub	sp, sp, #16
 634              		.cfi_def_cfa_offset 24
 635 0004 00AF     		add	r7, sp, #0
 636              		.cfi_def_cfa_register 7
 637 0006 7860     		str	r0, [r7, #4]
 200:debug.c       **** 
 201:debug.c       ****   char * pch;
 202:debug.c       ****   pch=strchr(string,'\n');
 638              		.loc 1 202 0
 639 0008 0A21     		movs	r1, #10
 640 000a 7868     		ldr	r0, [r7, #4]
 641 000c FFF7FEFF 		bl	strchr
 642 0010 F860     		str	r0, [r7, #12]
 203:debug.c       ****   while (pch!=NULL)
 643              		.loc 1 203 0
 644 0012 0EE0     		b	.L35
 645              	.L36:
 204:debug.c       ****   {
 205:debug.c       ****     string[pch-string+1] = 0;
 646              		.loc 1 205 0
 647 0014 FA68     		ldr	r2, [r7, #12]
 648 0016 7B68     		ldr	r3, [r7, #4]
 649 0018 D31A     		subs	r3, r2, r3
 650 001a 0133     		adds	r3, r3, #1
 651 001c 7A68     		ldr	r2, [r7, #4]
 652 001e 1344     		add	r3, r3, r2
 653 0020 0022     		movs	r2, #0
 654 0022 1A70     		strb	r2, [r3]
 206:debug.c       ****     pch=strchr(pch+1,'s');
 655              		.loc 1 206 0
 656 0024 FB68     		ldr	r3, [r7, #12]
 657 0026 0133     		adds	r3, r3, #1
 658 0028 7321     		movs	r1, #115
 659 002a 1846     		mov	r0, r3
 660 002c FFF7FEFF 		bl	strchr
 661 0030 F860     		str	r0, [r7, #12]
 662              	.L35:
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 17


 203:debug.c       ****   while (pch!=NULL)
 663              		.loc 1 203 0
 664 0032 FB68     		ldr	r3, [r7, #12]
 665 0034 002B     		cmp	r3, #0
 666 0036 EDD1     		bne	.L36
 207:debug.c       ****   }
 208:debug.c       **** }
 667              		.loc 1 208 0
 668 0038 00BF     		nop
 669 003a 1037     		adds	r7, r7, #16
 670              		.cfi_def_cfa_offset 8
 671 003c BD46     		mov	sp, r7
 672              		.cfi_def_cfa_register 13
 673              		@ sp needed
 674 003e 80BD     		pop	{r7, pc}
 675              		.cfi_endproc
 676              	.LFE72:
 677              		.size	stripEscapeCharacters, .-stripEscapeCharacters
 678              		.section	.text.strextract,"ax",%progbits
 679              		.align	2
 680              		.global	strextract
 681              		.thumb
 682              		.thumb_func
 683              		.type	strextract, %function
 684              	strextract:
 685              	.LFB73:
 209:debug.c       **** 
 210:debug.c       **** // Extract
 211:debug.c       **** char *strextract(const char input_str[], char output_str[],
 212:debug.c       ****                  const char search_start[], const char search_end[]) {
 686              		.loc 1 212 0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 24
 689              		@ frame_needed = 1, uses_anonymous_args = 0
 690 0000 80B5     		push	{r7, lr}
 691              		.cfi_def_cfa_offset 8
 692              		.cfi_offset 7, -8
 693              		.cfi_offset 14, -4
 694 0002 86B0     		sub	sp, sp, #24
 695              		.cfi_def_cfa_offset 32
 696 0004 00AF     		add	r7, sp, #0
 697              		.cfi_def_cfa_register 7
 698 0006 F860     		str	r0, [r7, #12]
 699 0008 B960     		str	r1, [r7, #8]
 700 000a 7A60     		str	r2, [r7, #4]
 701 000c 3B60     		str	r3, [r7]
 213:debug.c       ****     if (input_str == NULL) return NULL;
 702              		.loc 1 213 0
 703 000e FB68     		ldr	r3, [r7, #12]
 704 0010 002B     		cmp	r3, #0
 705 0012 01D1     		bne	.L38
 706              		.loc 1 213 0 is_stmt 0 discriminator 1
 707 0014 0023     		movs	r3, #0
 708 0016 29E0     		b	.L39
 709              	.L38:
 214:debug.c       ****     char *begin, *end = NULL;
 710              		.loc 1 214 0 is_stmt 1
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 18


 711 0018 0023     		movs	r3, #0
 712 001a 7B61     		str	r3, [r7, #20]
 215:debug.c       **** 
 216:debug.c       ****     // strstr(): char *strstr(const char *haystack, const char *needle). haystack - main C string t
 217:debug.c       ****     if ((begin = strstr(input_str, search_start))) {
 713              		.loc 1 217 0
 714 001c 7968     		ldr	r1, [r7, #4]
 715 001e F868     		ldr	r0, [r7, #12]
 716 0020 FFF7FEFF 		bl	strstr
 717 0024 3861     		str	r0, [r7, #16]
 718 0026 3B69     		ldr	r3, [r7, #16]
 719 0028 002B     		cmp	r3, #0
 720 002a 1ED0     		beq	.L40
 218:debug.c       ****         // The strlen() function calculates the length of a given string. The strlen() function tak
 219:debug.c       ****         begin += strlen(search_start);
 721              		.loc 1 219 0
 722 002c 7868     		ldr	r0, [r7, #4]
 723 002e FFF7FEFF 		bl	strlen
 724 0032 0246     		mov	r2, r0
 725 0034 3B69     		ldr	r3, [r7, #16]
 726 0036 1344     		add	r3, r3, r2
 727 0038 3B61     		str	r3, [r7, #16]
 220:debug.c       ****         if ((end = strstr(begin, search_end))) {
 728              		.loc 1 220 0
 729 003a 3968     		ldr	r1, [r7]
 730 003c 3869     		ldr	r0, [r7, #16]
 731 003e FFF7FEFF 		bl	strstr
 732 0042 7861     		str	r0, [r7, #20]
 733 0044 7B69     		ldr	r3, [r7, #20]
 734 0046 002B     		cmp	r3, #0
 735 0048 0FD0     		beq	.L40
 221:debug.c       ****             // strncpy(: char *strncpy(char *dest, const char *src, size_t n). dest -  pointer to t
 222:debug.c       ****             strncpy(output_str, begin, end - begin);
 736              		.loc 1 222 0
 737 004a 7A69     		ldr	r2, [r7, #20]
 738 004c 3B69     		ldr	r3, [r7, #16]
 739 004e D31A     		subs	r3, r2, r3
 740 0050 1A46     		mov	r2, r3
 741 0052 3969     		ldr	r1, [r7, #16]
 742 0054 B868     		ldr	r0, [r7, #8]
 743 0056 FFF7FEFF 		bl	strncpy
 223:debug.c       ****             output_str[end - begin] = '\0';
 744              		.loc 1 223 0
 745 005a 7A69     		ldr	r2, [r7, #20]
 746 005c 3B69     		ldr	r3, [r7, #16]
 747 005e D31A     		subs	r3, r2, r3
 748 0060 1A46     		mov	r2, r3
 749 0062 BB68     		ldr	r3, [r7, #8]
 750 0064 1344     		add	r3, r3, r2
 751 0066 0022     		movs	r2, #0
 752 0068 1A70     		strb	r2, [r3]
 753              	.L40:
 224:debug.c       ****         }
 225:debug.c       ****     }
 226:debug.c       **** 
 227:debug.c       ****     return end;
 754              		.loc 1 227 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 19


 755 006a 7B69     		ldr	r3, [r7, #20]
 756              	.L39:
 228:debug.c       **** }
 757              		.loc 1 228 0
 758 006c 1846     		mov	r0, r3
 759 006e 1837     		adds	r7, r7, #24
 760              		.cfi_def_cfa_offset 8
 761 0070 BD46     		mov	sp, r7
 762              		.cfi_def_cfa_register 13
 763              		@ sp needed
 764 0072 80BD     		pop	{r7, pc}
 765              		.cfi_endproc
 766              	.LFE73:
 767              		.size	strextract, .-strextract
 768              		.section	.text.printd,"ax",%progbits
 769              		.align	2
 770              		.global	printd
 771              		.thumb
 772              		.thumb_func
 773              		.type	printd, %function
 774              	printd:
 775              	.LFB74:
 229:debug.c       **** 
 230:debug.c       **** //out attempt at a safe (from buffer overflow) version of printf     
 231:debug.c       **** void printd(char* format, ...){
 776              		.loc 1 231 0
 777              		.cfi_startproc
 778              		@ args = 4, pretend = 16, frame = 2056
 779              		@ frame_needed = 1, uses_anonymous_args = 1
 780 0000 0FB4     		push	{r0, r1, r2, r3}
 781              		.cfi_def_cfa_offset 16
 782              		.cfi_offset 0, -16
 783              		.cfi_offset 1, -12
 784              		.cfi_offset 2, -8
 785              		.cfi_offset 3, -4
 786 0002 80B5     		push	{r7, lr}
 787              		.cfi_def_cfa_offset 24
 788              		.cfi_offset 7, -24
 789              		.cfi_offset 14, -20
 790 0004 ADF6080D 		subw	sp, sp, #2056
 791              		.cfi_def_cfa_offset 2080
 792 0008 00AF     		add	r7, sp, #0
 793              		.cfi_def_cfa_register 7
 232:debug.c       ****     
 233:debug.c       ****     va_list argptr; // Create variable argptr of data structure va_list
 234:debug.c       ****     va_start(argptr, format); // void va_start(va_list ap, last_arg) initializes ap variable to be 
 794              		.loc 1 234 0
 795 000a 07F61403 		addw	r3, r7, #2068
 796 000e C7F80438 		str	r3, [r7, #2052]
 235:debug.c       ****     
 236:debug.c       ****     // Create character array debug_string of size MAX_DEBUG_STRING_LENGTH
 237:debug.c       ****     char debug_string[MAX_DEBUG_STRING_LENGTH];
 238:debug.c       ****     // The vsnprintf() used to write a formatted string to a string buffer.vsnprintf(debug_string,M
 239:debug.c       ****     vsnprintf(debug_string,MAX_DEBUG_STRING_LENGTH,format, argptr);
 797              		.loc 1 239 0
 798 0012 381D     		adds	r0, r7, #4
 799 0014 D7F80438 		ldr	r3, [r7, #2052]
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 20


 800 0018 D7F81028 		ldr	r2, [r7, #2064]
 801 001c 4FF40061 		mov	r1, #2048
 802 0020 FFF7FEFF 		bl	vsnprintf
 240:debug.c       ****     // Sends a NULL terminated string to the TX buffer for transmission.
 241:debug.c       ****     Debug_UART_PutString(debug_string);
 803              		.loc 1 241 0
 804 0024 3B1D     		adds	r3, r7, #4
 805 0026 1846     		mov	r0, r3
 806 0028 FFF7FEFF 		bl	Debug_UART_PutString
 242:debug.c       ****     
 243:debug.c       ****     va_end(argptr); // macro void va_end(va_list ap) allows a function with variable arguments whic
 244:debug.c       ****     
 245:debug.c       **** }
 807              		.loc 1 245 0
 808 002c 00BF     		nop
 809 002e 07F60807 		addw	r7, r7, #2056
 810              		.cfi_def_cfa_offset 24
 811 0032 BD46     		mov	sp, r7
 812              		.cfi_def_cfa_register 13
 813              		@ sp needed
 814 0034 BDE88040 		pop	{r7, lr}
 815              		.cfi_restore 14
 816              		.cfi_restore 7
 817              		.cfi_def_cfa_offset 16
 818 0038 04B0     		add	sp, sp, #16
 819              		.cfi_restore 3
 820              		.cfi_restore 2
 821              		.cfi_restore 1
 822              		.cfi_restore 0
 823              		.cfi_def_cfa_offset 0
 824 003a 7047     		bx	lr
 825              		.cfi_endproc
 826              	.LFE74:
 827              		.size	printd, .-printd
 828              		.text
 829              	.Letext0:
 830              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 831              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 832              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 833              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 834              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 835              		.file 7 "Generated_Source\\PSoC5/cytypes.h"
 836              		.file 8 "Generated_Source\\PSoC5/RTC.h"
 837              		.file 9 "testing.h"
 838              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 839              		.file 11 "<built-in>"
 840              		.section	.debug_info,"",%progbits
 841              	.Ldebug_info0:
 842 0000 FD040000 		.4byte	0x4fd
 843 0004 0400     		.2byte	0x4
 844 0006 00000000 		.4byte	.Ldebug_abbrev0
 845 000a 04       		.byte	0x4
 846 000b 01       		.uleb128 0x1
 847 000c 66000000 		.4byte	.LASF70
 848 0010 0C       		.byte	0xc
 849 0011 42010000 		.4byte	.LASF71
 850 0015 27020000 		.4byte	.LASF72
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 21


 851 0019 00000000 		.4byte	.Ldebug_ranges0+0
 852 001d 00000000 		.4byte	0
 853 0021 00000000 		.4byte	.Ldebug_line0
 854 0025 02       		.uleb128 0x2
 855 0026 01       		.byte	0x1
 856 0027 06       		.byte	0x6
 857 0028 DD010000 		.4byte	.LASF0
 858 002c 02       		.uleb128 0x2
 859 002d 01       		.byte	0x1
 860 002e 08       		.byte	0x8
 861 002f C5010000 		.4byte	.LASF1
 862 0033 02       		.uleb128 0x2
 863 0034 02       		.byte	0x2
 864 0035 05       		.byte	0x5
 865 0036 3D000000 		.4byte	.LASF2
 866 003a 02       		.uleb128 0x2
 867 003b 02       		.byte	0x2
 868 003c 07       		.byte	0x7
 869 003d 77020000 		.4byte	.LASF3
 870 0041 03       		.uleb128 0x3
 871 0042 34030000 		.4byte	.LASF10
 872 0046 02       		.byte	0x2
 873 0047 3F       		.byte	0x3f
 874 0048 4C000000 		.4byte	0x4c
 875 004c 02       		.uleb128 0x2
 876 004d 04       		.byte	0x4
 877 004e 05       		.byte	0x5
 878 004f A4020000 		.4byte	.LASF4
 879 0053 02       		.uleb128 0x2
 880 0054 04       		.byte	0x4
 881 0055 07       		.byte	0x7
 882 0056 08030000 		.4byte	.LASF5
 883 005a 02       		.uleb128 0x2
 884 005b 08       		.byte	0x8
 885 005c 05       		.byte	0x5
 886 005d FC000000 		.4byte	.LASF6
 887 0061 02       		.uleb128 0x2
 888 0062 08       		.byte	0x8
 889 0063 07       		.byte	0x7
 890 0064 F1010000 		.4byte	.LASF7
 891 0068 04       		.uleb128 0x4
 892 0069 04       		.byte	0x4
 893 006a 05       		.byte	0x5
 894 006b 696E7400 		.ascii	"int\000"
 895 006f 02       		.uleb128 0x2
 896 0070 04       		.byte	0x4
 897 0071 07       		.byte	0x7
 898 0072 0D020000 		.4byte	.LASF8
 899 0076 02       		.uleb128 0x2
 900 0077 08       		.byte	0x8
 901 0078 04       		.byte	0x4
 902 0079 B9010000 		.4byte	.LASF9
 903 007d 03       		.uleb128 0x3
 904 007e 47030000 		.4byte	.LASF11
 905 0082 03       		.byte	0x3
 906 0083 28       		.byte	0x28
 907 0084 88000000 		.4byte	0x88
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 22


 908 0088 05       		.uleb128 0x5
 909 0089 7D010000 		.4byte	.LASF16
 910 008d 04       		.byte	0x4
 911 008e 0B       		.byte	0xb
 912 008f 00       		.byte	0
 913 0090 9F000000 		.4byte	0x9f
 914 0094 06       		.uleb128 0x6
 915 0095 1A020000 		.4byte	.LASF73
 916 0099 9F000000 		.4byte	0x9f
 917 009d 00       		.byte	0
 918 009e 00       		.byte	0
 919 009f 07       		.uleb128 0x7
 920 00a0 04       		.byte	0x4
 921 00a1 02       		.uleb128 0x2
 922 00a2 04       		.byte	0x4
 923 00a3 07       		.byte	0x7
 924 00a4 3E030000 		.4byte	.LASF12
 925 00a8 08       		.uleb128 0x8
 926 00a9 04       		.byte	0x4
 927 00aa AE000000 		.4byte	0xae
 928 00ae 02       		.uleb128 0x2
 929 00af 01       		.byte	0x1
 930 00b0 08       		.byte	0x8
 931 00b1 98020000 		.4byte	.LASF13
 932 00b5 08       		.uleb128 0x8
 933 00b6 04       		.byte	0x4
 934 00b7 BB000000 		.4byte	0xbb
 935 00bb 09       		.uleb128 0x9
 936 00bc AE000000 		.4byte	0xae
 937 00c0 03       		.uleb128 0x3
 938 00c1 BD020000 		.4byte	.LASF14
 939 00c5 04       		.byte	0x4
 940 00c6 2C       		.byte	0x2c
 941 00c7 41000000 		.4byte	0x41
 942 00cb 03       		.uleb128 0x3
 943 00cc 76010000 		.4byte	.LASF15
 944 00d0 05       		.byte	0x5
 945 00d1 28       		.byte	0x28
 946 00d2 4C000000 		.4byte	0x4c
 947 00d6 0A       		.uleb128 0xa
 948 00d7 746D00   		.ascii	"tm\000"
 949 00da 24       		.byte	0x24
 950 00db 06       		.byte	0x6
 951 00dc 21       		.byte	0x21
 952 00dd 4E010000 		.4byte	0x14e
 953 00e1 0B       		.uleb128 0xb
 954 00e2 6E030000 		.4byte	.LASF17
 955 00e6 06       		.byte	0x6
 956 00e7 23       		.byte	0x23
 957 00e8 68000000 		.4byte	0x68
 958 00ec 00       		.byte	0
 959 00ed 0B       		.uleb128 0xb
 960 00ee 5B010000 		.4byte	.LASF18
 961 00f2 06       		.byte	0x6
 962 00f3 24       		.byte	0x24
 963 00f4 68000000 		.4byte	0x68
 964 00f8 04       		.byte	0x4
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 23


 965 00f9 0B       		.uleb128 0xb
 966 00fa 09000000 		.4byte	.LASF19
 967 00fe 06       		.byte	0x6
 968 00ff 25       		.byte	0x25
 969 0100 68000000 		.4byte	0x68
 970 0104 08       		.byte	0x8
 971 0105 0B       		.uleb128 0xb
 972 0106 1F020000 		.4byte	.LASF20
 973 010a 06       		.byte	0x6
 974 010b 26       		.byte	0x26
 975 010c 68000000 		.4byte	0x68
 976 0110 0C       		.byte	0xc
 977 0111 0B       		.uleb128 0xb
 978 0112 68010000 		.4byte	.LASF21
 979 0116 06       		.byte	0x6
 980 0117 27       		.byte	0x27
 981 0118 68000000 		.4byte	0x68
 982 011c 10       		.byte	0x10
 983 011d 0B       		.uleb128 0xb
 984 011e E9010000 		.4byte	.LASF22
 985 0122 06       		.byte	0x6
 986 0123 28       		.byte	0x28
 987 0124 68000000 		.4byte	0x68
 988 0128 14       		.byte	0x14
 989 0129 0B       		.uleb128 0xb
 990 012a F4000000 		.4byte	.LASF23
 991 012e 06       		.byte	0x6
 992 012f 29       		.byte	0x29
 993 0130 68000000 		.4byte	0x68
 994 0134 18       		.byte	0x18
 995 0135 0B       		.uleb128 0xb
 996 0136 D2020000 		.4byte	.LASF24
 997 013a 06       		.byte	0x6
 998 013b 2A       		.byte	0x2a
 999 013c 68000000 		.4byte	0x68
 1000 0140 1C       		.byte	0x1c
 1001 0141 0B       		.uleb128 0xb
 1002 0142 F4020000 		.4byte	.LASF25
 1003 0146 06       		.byte	0x6
 1004 0147 2B       		.byte	0x2b
 1005 0148 68000000 		.4byte	0x68
 1006 014c 20       		.byte	0x20
 1007 014d 00       		.byte	0
 1008 014e 0C       		.uleb128 0xc
 1009 014f 4A010000 		.4byte	.LASF26
 1010 0153 07       		.byte	0x7
 1011 0154 9201     		.2byte	0x192
 1012 0156 2C000000 		.4byte	0x2c
 1013 015a 0C       		.uleb128 0xc
 1014 015b 33010000 		.4byte	.LASF27
 1015 015f 07       		.byte	0x7
 1016 0160 9301     		.2byte	0x193
 1017 0162 3A000000 		.4byte	0x3a
 1018 0166 02       		.uleb128 0x2
 1019 0167 04       		.byte	0x4
 1020 0168 04       		.byte	0x4
 1021 0169 62010000 		.4byte	.LASF28
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 24


 1022 016d 02       		.uleb128 0x2
 1023 016e 08       		.byte	0x8
 1024 016f 04       		.byte	0x4
 1025 0170 1A030000 		.4byte	.LASF29
 1026 0174 0D       		.uleb128 0xd
 1027 0175 0C       		.byte	0xc
 1028 0176 08       		.byte	0x8
 1029 0177 30       		.byte	0x30
 1030 0178 DD010000 		.4byte	0x1dd
 1031 017c 0E       		.uleb128 0xe
 1032 017d 53656300 		.ascii	"Sec\000"
 1033 0181 08       		.byte	0x8
 1034 0182 32       		.byte	0x32
 1035 0183 4E010000 		.4byte	0x14e
 1036 0187 00       		.byte	0
 1037 0188 0E       		.uleb128 0xe
 1038 0189 4D696E00 		.ascii	"Min\000"
 1039 018d 08       		.byte	0x8
 1040 018e 33       		.byte	0x33
 1041 018f 4E010000 		.4byte	0x14e
 1042 0193 01       		.byte	0x1
 1043 0194 0B       		.uleb128 0xb
 1044 0195 1E010000 		.4byte	.LASF30
 1045 0199 08       		.byte	0x8
 1046 019a 34       		.byte	0x34
 1047 019b 4E010000 		.4byte	0x14e
 1048 019f 02       		.byte	0x2
 1049 01a0 0B       		.uleb128 0xb
 1050 01a1 D3010000 		.4byte	.LASF31
 1051 01a5 08       		.byte	0x8
 1052 01a6 35       		.byte	0x35
 1053 01a7 4E010000 		.4byte	0x14e
 1054 01ab 03       		.byte	0x3
 1055 01ac 0B       		.uleb128 0xb
 1056 01ad 28010000 		.4byte	.LASF32
 1057 01b1 08       		.byte	0x8
 1058 01b2 36       		.byte	0x36
 1059 01b3 4E010000 		.4byte	0x14e
 1060 01b7 04       		.byte	0x4
 1061 01b8 0B       		.uleb128 0xb
 1062 01b9 98030000 		.4byte	.LASF33
 1063 01bd 08       		.byte	0x8
 1064 01be 37       		.byte	0x37
 1065 01bf 5A010000 		.4byte	0x15a
 1066 01c3 06       		.byte	0x6
 1067 01c4 0B       		.uleb128 0xb
 1068 01c5 B3010000 		.4byte	.LASF34
 1069 01c9 08       		.byte	0x8
 1070 01ca 38       		.byte	0x38
 1071 01cb 4E010000 		.4byte	0x14e
 1072 01cf 08       		.byte	0x8
 1073 01d0 0B       		.uleb128 0xb
 1074 01d1 AE010000 		.4byte	.LASF35
 1075 01d5 08       		.byte	0x8
 1076 01d6 39       		.byte	0x39
 1077 01d7 5A010000 		.4byte	0x15a
 1078 01db 0A       		.byte	0xa
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 25


 1079 01dc 00       		.byte	0
 1080 01dd 03       		.uleb128 0x3
 1081 01de 47000000 		.4byte	.LASF36
 1082 01e2 08       		.byte	0x8
 1083 01e3 3A       		.byte	0x3a
 1084 01e4 E8010000 		.4byte	0x1e8
 1085 01e8 0F       		.uleb128 0xf
 1086 01e9 74010000 		.4byte	0x174
 1087 01ed 10       		.uleb128 0x10
 1088 01ee 8101     		.2byte	0x181
 1089 01f0 09       		.byte	0x9
 1090 01f1 0A       		.byte	0xa
 1091 01f2 1B020000 		.4byte	0x21b
 1092 01f6 0B       		.uleb128 0xb
 1093 01f7 1D000000 		.4byte	.LASF37
 1094 01fb 09       		.byte	0x9
 1095 01fc 0C       		.byte	0xc
 1096 01fd 1B020000 		.4byte	0x21b
 1097 0201 00       		.byte	0
 1098 0202 0B       		.uleb128 0xb
 1099 0203 8A020000 		.4byte	.LASF38
 1100 0207 09       		.byte	0x9
 1101 0208 0D       		.byte	0xd
 1102 0209 4E010000 		.4byte	0x14e
 1103 020d 80       		.byte	0x80
 1104 020e 0B       		.uleb128 0xb
 1105 020f 87010000 		.4byte	.LASF39
 1106 0213 09       		.byte	0x9
 1107 0214 0F       		.byte	0xf
 1108 0215 2B020000 		.4byte	0x22b
 1109 0219 81       		.byte	0x81
 1110 021a 00       		.byte	0
 1111 021b 11       		.uleb128 0x11
 1112 021c AE000000 		.4byte	0xae
 1113 0220 2B020000 		.4byte	0x22b
 1114 0224 12       		.uleb128 0x12
 1115 0225 A1000000 		.4byte	0xa1
 1116 0229 7F       		.byte	0x7f
 1117 022a 00       		.byte	0
 1118 022b 11       		.uleb128 0x11
 1119 022c AE000000 		.4byte	0xae
 1120 0230 3B020000 		.4byte	0x23b
 1121 0234 12       		.uleb128 0x12
 1122 0235 A1000000 		.4byte	0xa1
 1123 0239 FF       		.byte	0xff
 1124 023a 00       		.byte	0
 1125 023b 03       		.uleb128 0x3
 1126 023c 9D020000 		.4byte	.LASF40
 1127 0240 09       		.byte	0x9
 1128 0241 10       		.byte	0x10
 1129 0242 ED010000 		.4byte	0x1ed
 1130 0246 03       		.uleb128 0x3
 1131 0247 3A010000 		.4byte	.LASF41
 1132 024b 03       		.byte	0x3
 1133 024c 62       		.byte	0x62
 1134 024d 7D000000 		.4byte	0x7d
 1135 0251 13       		.uleb128 0x13
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 26


 1136 0252 31000000 		.4byte	.LASF42
 1137 0256 01       		.byte	0x1
 1138 0257 0D       		.byte	0xd
 1139 0258 00000000 		.4byte	.LFB64
 1140 025c 0C000000 		.4byte	.LFE64-.LFB64
 1141 0260 01       		.uleb128 0x1
 1142 0261 9C       		.byte	0x9c
 1143 0262 13       		.uleb128 0x13
 1144 0263 FD020000 		.4byte	.LASF43
 1145 0267 01       		.byte	0x1
 1146 0268 17       		.byte	0x17
 1147 0269 00000000 		.4byte	.LFB65
 1148 026d 0C000000 		.4byte	.LFE65-.LFB65
 1149 0271 01       		.uleb128 0x1
 1150 0272 9C       		.byte	0x9c
 1151 0273 13       		.uleb128 0x13
 1152 0274 11000000 		.4byte	.LASF44
 1153 0278 01       		.byte	0x1
 1154 0279 1F       		.byte	0x1f
 1155 027a 00000000 		.4byte	.LFB66
 1156 027e 20000000 		.4byte	.LFE66-.LFB66
 1157 0282 01       		.uleb128 0x1
 1158 0283 9C       		.byte	0x9c
 1159 0284 13       		.uleb128 0x13
 1160 0285 56030000 		.4byte	.LASF45
 1161 0289 01       		.byte	0x1
 1162 028a 30       		.byte	0x30
 1163 028b 00000000 		.4byte	.LFB67
 1164 028f 0C000000 		.4byte	.LFE67-.LFB67
 1165 0293 01       		.uleb128 0x1
 1166 0294 9C       		.byte	0x9c
 1167 0295 14       		.uleb128 0x14
 1168 0296 0A010000 		.4byte	.LASF59
 1169 029a 01       		.byte	0x1
 1170 029b 42       		.byte	0x42
 1171 029c 68000000 		.4byte	0x68
 1172 02a0 00000000 		.4byte	.LFB68
 1173 02a4 38000000 		.4byte	.LFE68-.LFB68
 1174 02a8 01       		.uleb128 0x1
 1175 02a9 9C       		.byte	0x9c
 1176 02aa E5020000 		.4byte	0x2e5
 1177 02ae 15       		.uleb128 0x15
 1178 02af 23010000 		.4byte	.LASF46
 1179 02b3 01       		.byte	0x1
 1180 02b4 42       		.byte	0x42
 1181 02b5 68000000 		.4byte	0x68
 1182 02b9 02       		.uleb128 0x2
 1183 02ba 91       		.byte	0x91
 1184 02bb 6C       		.sleb128 -20
 1185 02bc 16       		.uleb128 0x16
 1186 02bd 70747200 		.ascii	"ptr\000"
 1187 02c1 01       		.byte	0x1
 1188 02c2 42       		.byte	0x42
 1189 02c3 A8000000 		.4byte	0xa8
 1190 02c7 02       		.uleb128 0x2
 1191 02c8 91       		.byte	0x91
 1192 02c9 68       		.sleb128 -24
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 27


 1193 02ca 16       		.uleb128 0x16
 1194 02cb 6C656E00 		.ascii	"len\000"
 1195 02cf 01       		.byte	0x1
 1196 02d0 42       		.byte	0x42
 1197 02d1 68000000 		.4byte	0x68
 1198 02d5 02       		.uleb128 0x2
 1199 02d6 91       		.byte	0x91
 1200 02d7 64       		.sleb128 -28
 1201 02d8 17       		.uleb128 0x17
 1202 02d9 6900     		.ascii	"i\000"
 1203 02db 01       		.byte	0x1
 1204 02dc 44       		.byte	0x44
 1205 02dd 68000000 		.4byte	0x68
 1206 02e1 02       		.uleb128 0x2
 1207 02e2 91       		.byte	0x91
 1208 02e3 74       		.sleb128 -12
 1209 02e4 00       		.byte	0
 1210 02e5 18       		.uleb128 0x18
 1211 02e6 63030000 		.4byte	.LASF51
 1212 02ea 01       		.byte	0x1
 1213 02eb 55       		.byte	0x55
 1214 02ec 00000000 		.4byte	.LFB69
 1215 02f0 6C010000 		.4byte	.LFE69-.LFB69
 1216 02f4 01       		.uleb128 0x1
 1217 02f5 9C       		.byte	0x9c
 1218 02f6 5E030000 		.4byte	0x35e
 1219 02fa 15       		.uleb128 0x15
 1220 02fb 08020000 		.4byte	.LASF47
 1221 02ff 01       		.byte	0x1
 1222 0300 55       		.byte	0x55
 1223 0301 4E010000 		.4byte	0x14e
 1224 0305 03       		.uleb128 0x3
 1225 0306 91       		.byte	0x91
 1226 0307 DF6F     		.sleb128 -2081
 1227 0309 15       		.uleb128 0x15
 1228 030a 6F010000 		.4byte	.LASF48
 1229 030e 01       		.byte	0x1
 1230 030f 55       		.byte	0x55
 1231 0310 A8000000 		.4byte	0xa8
 1232 0314 02       		.uleb128 0x2
 1233 0315 91       		.byte	0x91
 1234 0316 74       		.sleb128 -12
 1235 0317 19       		.uleb128 0x19
 1236 0318 1A       		.uleb128 0x1a
 1237 0319 C5020000 		.4byte	.LASF49
 1238 031d 01       		.byte	0x1
 1239 031e 57       		.byte	0x57
 1240 031f 5E030000 		.4byte	0x35e
 1241 0323 03       		.uleb128 0x3
 1242 0324 91       		.byte	0x91
 1243 0325 E86F     		.sleb128 -2072
 1244 0327 1B       		.uleb128 0x1b
 1245 0328 32000000 		.4byte	.LBB2
 1246 032c 70000000 		.4byte	.LBE2-.LBB2
 1247 0330 44030000 		.4byte	0x344
 1248 0334 1A       		.uleb128 0x1a
 1249 0335 21030000 		.4byte	.LASF50
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 28


 1250 0339 01       		.byte	0x1
 1251 033a 68       		.byte	0x68
 1252 033b 46020000 		.4byte	0x246
 1253 033f 03       		.uleb128 0x3
 1254 0340 91       		.byte	0x91
 1255 0341 E46F     		.sleb128 -2076
 1256 0343 00       		.byte	0
 1257 0344 1C       		.uleb128 0x1c
 1258 0345 A4000000 		.4byte	.LBB3
 1259 0349 8A000000 		.4byte	.LBE3-.LBB3
 1260 034d 1A       		.uleb128 0x1a
 1261 034e 21030000 		.4byte	.LASF50
 1262 0352 01       		.byte	0x1
 1263 0353 80       		.byte	0x80
 1264 0354 46020000 		.4byte	0x246
 1265 0358 03       		.uleb128 0x3
 1266 0359 91       		.byte	0x91
 1267 035a E06F     		.sleb128 -2080
 1268 035c 00       		.byte	0
 1269 035d 00       		.byte	0
 1270 035e 11       		.uleb128 0x11
 1271 035f AE000000 		.4byte	0xae
 1272 0363 6F030000 		.4byte	0x36f
 1273 0367 1D       		.uleb128 0x1d
 1274 0368 A1000000 		.4byte	0xa1
 1275 036c FF07     		.2byte	0x7ff
 1276 036e 00       		.byte	0
 1277 036f 18       		.uleb128 0x18
 1278 0370 AD020000 		.4byte	.LASF52
 1279 0374 01       		.byte	0x1
 1280 0375 99       		.byte	0x99
 1281 0376 00000000 		.4byte	.LFB70
 1282 037a 78000000 		.4byte	.LFE70-.LFB70
 1283 037e 01       		.uleb128 0x1
 1284 037f 9C       		.byte	0x9c
 1285 0380 93030000 		.4byte	0x393
 1286 0384 15       		.uleb128 0x15
 1287 0385 E4020000 		.4byte	.LASF53
 1288 0389 01       		.byte	0x1
 1289 038a 99       		.byte	0x99
 1290 038b 3B020000 		.4byte	0x23b
 1291 038f 02       		.uleb128 0x2
 1292 0390 91       		.byte	0x91
 1293 0391 70       		.sleb128 -16
 1294 0392 00       		.byte	0
 1295 0393 1E       		.uleb128 0x1e
 1296 0394 11010000 		.4byte	.LASF54
 1297 0398 01       		.byte	0x1
 1298 0399 AC       		.byte	0xac
 1299 039a 4C000000 		.4byte	0x4c
 1300 039e 00000000 		.4byte	.LFB71
 1301 03a2 58000000 		.4byte	.LFE71-.LFB71
 1302 03a6 01       		.uleb128 0x1
 1303 03a7 9C       		.byte	0x9c
 1304 03a8 D5030000 		.4byte	0x3d5
 1305 03ac 1A       		.uleb128 0x1a
 1306 03ad DA020000 		.4byte	.LASF55
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 29


 1307 03b1 01       		.byte	0x1
 1308 03b2 AF       		.byte	0xaf
 1309 03b3 D5030000 		.4byte	0x3d5
 1310 03b7 02       		.uleb128 0x2
 1311 03b8 91       		.byte	0x91
 1312 03b9 74       		.sleb128 -12
 1313 03ba 17       		.uleb128 0x17
 1314 03bb 7400     		.ascii	"t\000"
 1315 03bd 01       		.byte	0x1
 1316 03be B1       		.byte	0xb1
 1317 03bf D6000000 		.4byte	0xd6
 1318 03c3 02       		.uleb128 0x2
 1319 03c4 91       		.byte	0x91
 1320 03c5 4C       		.sleb128 -52
 1321 03c6 1A       		.uleb128 0x1a
 1322 03c7 00000000 		.4byte	.LASF56
 1323 03cb 01       		.byte	0x1
 1324 03cc B2       		.byte	0xb2
 1325 03cd CB000000 		.4byte	0xcb
 1326 03d1 02       		.uleb128 0x2
 1327 03d2 91       		.byte	0x91
 1328 03d3 70       		.sleb128 -16
 1329 03d4 00       		.byte	0
 1330 03d5 08       		.uleb128 0x8
 1331 03d6 04       		.byte	0x4
 1332 03d7 DD010000 		.4byte	0x1dd
 1333 03db 18       		.uleb128 0x18
 1334 03dc 82030000 		.4byte	.LASF57
 1335 03e0 01       		.byte	0x1
 1336 03e1 C7       		.byte	0xc7
 1337 03e2 00000000 		.4byte	.LFB72
 1338 03e6 40000000 		.4byte	.LFE72-.LFB72
 1339 03ea 01       		.uleb128 0x1
 1340 03eb 9C       		.byte	0x9c
 1341 03ec 0D040000 		.4byte	0x40d
 1342 03f0 15       		.uleb128 0x15
 1343 03f1 9B010000 		.4byte	.LASF58
 1344 03f5 01       		.byte	0x1
 1345 03f6 C7       		.byte	0xc7
 1346 03f7 A8000000 		.4byte	0xa8
 1347 03fb 02       		.uleb128 0x2
 1348 03fc 91       		.byte	0x91
 1349 03fd 6C       		.sleb128 -20
 1350 03fe 17       		.uleb128 0x17
 1351 03ff 70636800 		.ascii	"pch\000"
 1352 0403 01       		.byte	0x1
 1353 0404 C9       		.byte	0xc9
 1354 0405 A8000000 		.4byte	0xa8
 1355 0409 02       		.uleb128 0x2
 1356 040a 91       		.byte	0x91
 1357 040b 74       		.sleb128 -12
 1358 040c 00       		.byte	0
 1359 040d 14       		.uleb128 0x14
 1360 040e 55000000 		.4byte	.LASF60
 1361 0412 01       		.byte	0x1
 1362 0413 D3       		.byte	0xd3
 1363 0414 A8000000 		.4byte	0xa8
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 30


 1364 0418 00000000 		.4byte	.LFB73
 1365 041c 74000000 		.4byte	.LFE73-.LFB73
 1366 0420 01       		.uleb128 0x1
 1367 0421 9C       		.byte	0x9c
 1368 0422 7B040000 		.4byte	0x47b
 1369 0426 15       		.uleb128 0x15
 1370 0427 27000000 		.4byte	.LASF61
 1371 042b 01       		.byte	0x1
 1372 042c D3       		.byte	0xd3
 1373 042d B5000000 		.4byte	0xb5
 1374 0431 02       		.uleb128 0x2
 1375 0432 91       		.byte	0x91
 1376 0433 6C       		.sleb128 -20
 1377 0434 15       		.uleb128 0x15
 1378 0435 50010000 		.4byte	.LASF62
 1379 0439 01       		.byte	0x1
 1380 043a D3       		.byte	0xd3
 1381 043b A8000000 		.4byte	0xa8
 1382 043f 02       		.uleb128 0x2
 1383 0440 91       		.byte	0x91
 1384 0441 68       		.sleb128 -24
 1385 0442 15       		.uleb128 0x15
 1386 0443 8E010000 		.4byte	.LASF63
 1387 0447 01       		.byte	0x1
 1388 0448 D4       		.byte	0xd4
 1389 0449 B5000000 		.4byte	0xb5
 1390 044d 02       		.uleb128 0x2
 1391 044e 91       		.byte	0x91
 1392 044f 64       		.sleb128 -28
 1393 0450 15       		.uleb128 0x15
 1394 0451 E9020000 		.4byte	.LASF64
 1395 0455 01       		.byte	0x1
 1396 0456 D4       		.byte	0xd4
 1397 0457 B5000000 		.4byte	0xb5
 1398 045b 02       		.uleb128 0x2
 1399 045c 91       		.byte	0x91
 1400 045d 60       		.sleb128 -32
 1401 045e 1A       		.uleb128 0x1a
 1402 045f 60000000 		.4byte	.LASF65
 1403 0463 01       		.byte	0x1
 1404 0464 D6       		.byte	0xd6
 1405 0465 A8000000 		.4byte	0xa8
 1406 0469 02       		.uleb128 0x2
 1407 046a 91       		.byte	0x91
 1408 046b 70       		.sleb128 -16
 1409 046c 17       		.uleb128 0x17
 1410 046d 656E6400 		.ascii	"end\000"
 1411 0471 01       		.byte	0x1
 1412 0472 D6       		.byte	0xd6
 1413 0473 A8000000 		.4byte	0xa8
 1414 0477 02       		.uleb128 0x2
 1415 0478 91       		.byte	0x91
 1416 0479 74       		.sleb128 -12
 1417 047a 00       		.byte	0
 1418 047b 18       		.uleb128 0x18
 1419 047c 91020000 		.4byte	.LASF66
 1420 0480 01       		.byte	0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 31


 1421 0481 E7       		.byte	0xe7
 1422 0482 00000000 		.4byte	.LFB74
 1423 0486 3C000000 		.4byte	.LFE74-.LFB74
 1424 048a 01       		.uleb128 0x1
 1425 048b 9C       		.byte	0x9c
 1426 048c BD040000 		.4byte	0x4bd
 1427 0490 15       		.uleb128 0x15
 1428 0491 6F010000 		.4byte	.LASF48
 1429 0495 01       		.byte	0x1
 1430 0496 E7       		.byte	0xe7
 1431 0497 A8000000 		.4byte	0xa8
 1432 049b 02       		.uleb128 0x2
 1433 049c 91       		.byte	0x91
 1434 049d 70       		.sleb128 -16
 1435 049e 19       		.uleb128 0x19
 1436 049f 1A       		.uleb128 0x1a
 1437 04a0 21030000 		.4byte	.LASF50
 1438 04a4 01       		.byte	0x1
 1439 04a5 E9       		.byte	0xe9
 1440 04a6 46020000 		.4byte	0x246
 1441 04aa 02       		.uleb128 0x2
 1442 04ab 91       		.byte	0x91
 1443 04ac 64       		.sleb128 -28
 1444 04ad 1A       		.uleb128 0x1a
 1445 04ae C5020000 		.4byte	.LASF49
 1446 04b2 01       		.byte	0x1
 1447 04b3 ED       		.byte	0xed
 1448 04b4 5E030000 		.4byte	0x35e
 1449 04b8 03       		.uleb128 0x3
 1450 04b9 91       		.byte	0x91
 1451 04ba E46F     		.sleb128 -2076
 1452 04bc 00       		.byte	0
 1453 04bd 1F       		.uleb128 0x1f
 1454 04be 75030000 		.4byte	.LASF67
 1455 04c2 0A       		.byte	0xa
 1456 04c3 1207     		.2byte	0x712
 1457 04c5 C9040000 		.4byte	0x4c9
 1458 04c9 0F       		.uleb128 0xf
 1459 04ca C0000000 		.4byte	0xc0
 1460 04ce 11       		.uleb128 0x11
 1461 04cf AE000000 		.4byte	0xae
 1462 04d3 DE040000 		.4byte	0x4de
 1463 04d7 12       		.uleb128 0x12
 1464 04d8 A1000000 		.4byte	0xa1
 1465 04dc 1D       		.byte	0x1d
 1466 04dd 00       		.byte	0
 1467 04de 20       		.uleb128 0x20
 1468 04df A2010000 		.4byte	.LASF68
 1469 04e3 01       		.byte	0x1
 1470 04e4 06       		.byte	0x6
 1471 04e5 CE040000 		.4byte	0x4ce
 1472 04e9 05       		.uleb128 0x5
 1473 04ea 03       		.byte	0x3
 1474 04eb 00000000 		.4byte	BB_fileName
 1475 04ef 20       		.uleb128 0x20
 1476 04f0 28030000 		.4byte	.LASF69
 1477 04f4 01       		.byte	0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 32


 1478 04f5 0A       		.byte	0xa
 1479 04f6 4E010000 		.4byte	0x14e
 1480 04fa 05       		.uleb128 0x5
 1481 04fb 03       		.byte	0x3
 1482 04fc 00000000 		.4byte	debug_level
 1483 0500 00       		.byte	0
 1484              		.section	.debug_abbrev,"",%progbits
 1485              	.Ldebug_abbrev0:
 1486 0000 01       		.uleb128 0x1
 1487 0001 11       		.uleb128 0x11
 1488 0002 01       		.byte	0x1
 1489 0003 25       		.uleb128 0x25
 1490 0004 0E       		.uleb128 0xe
 1491 0005 13       		.uleb128 0x13
 1492 0006 0B       		.uleb128 0xb
 1493 0007 03       		.uleb128 0x3
 1494 0008 0E       		.uleb128 0xe
 1495 0009 1B       		.uleb128 0x1b
 1496 000a 0E       		.uleb128 0xe
 1497 000b 55       		.uleb128 0x55
 1498 000c 17       		.uleb128 0x17
 1499 000d 11       		.uleb128 0x11
 1500 000e 01       		.uleb128 0x1
 1501 000f 10       		.uleb128 0x10
 1502 0010 17       		.uleb128 0x17
 1503 0011 00       		.byte	0
 1504 0012 00       		.byte	0
 1505 0013 02       		.uleb128 0x2
 1506 0014 24       		.uleb128 0x24
 1507 0015 00       		.byte	0
 1508 0016 0B       		.uleb128 0xb
 1509 0017 0B       		.uleb128 0xb
 1510 0018 3E       		.uleb128 0x3e
 1511 0019 0B       		.uleb128 0xb
 1512 001a 03       		.uleb128 0x3
 1513 001b 0E       		.uleb128 0xe
 1514 001c 00       		.byte	0
 1515 001d 00       		.byte	0
 1516 001e 03       		.uleb128 0x3
 1517 001f 16       		.uleb128 0x16
 1518 0020 00       		.byte	0
 1519 0021 03       		.uleb128 0x3
 1520 0022 0E       		.uleb128 0xe
 1521 0023 3A       		.uleb128 0x3a
 1522 0024 0B       		.uleb128 0xb
 1523 0025 3B       		.uleb128 0x3b
 1524 0026 0B       		.uleb128 0xb
 1525 0027 49       		.uleb128 0x49
 1526 0028 13       		.uleb128 0x13
 1527 0029 00       		.byte	0
 1528 002a 00       		.byte	0
 1529 002b 04       		.uleb128 0x4
 1530 002c 24       		.uleb128 0x24
 1531 002d 00       		.byte	0
 1532 002e 0B       		.uleb128 0xb
 1533 002f 0B       		.uleb128 0xb
 1534 0030 3E       		.uleb128 0x3e
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 33


 1535 0031 0B       		.uleb128 0xb
 1536 0032 03       		.uleb128 0x3
 1537 0033 08       		.uleb128 0x8
 1538 0034 00       		.byte	0
 1539 0035 00       		.byte	0
 1540 0036 05       		.uleb128 0x5
 1541 0037 13       		.uleb128 0x13
 1542 0038 01       		.byte	0x1
 1543 0039 03       		.uleb128 0x3
 1544 003a 0E       		.uleb128 0xe
 1545 003b 0B       		.uleb128 0xb
 1546 003c 0B       		.uleb128 0xb
 1547 003d 3A       		.uleb128 0x3a
 1548 003e 0B       		.uleb128 0xb
 1549 003f 3B       		.uleb128 0x3b
 1550 0040 0B       		.uleb128 0xb
 1551 0041 01       		.uleb128 0x1
 1552 0042 13       		.uleb128 0x13
 1553 0043 00       		.byte	0
 1554 0044 00       		.byte	0
 1555 0045 06       		.uleb128 0x6
 1556 0046 0D       		.uleb128 0xd
 1557 0047 00       		.byte	0
 1558 0048 03       		.uleb128 0x3
 1559 0049 0E       		.uleb128 0xe
 1560 004a 49       		.uleb128 0x49
 1561 004b 13       		.uleb128 0x13
 1562 004c 38       		.uleb128 0x38
 1563 004d 0B       		.uleb128 0xb
 1564 004e 34       		.uleb128 0x34
 1565 004f 19       		.uleb128 0x19
 1566 0050 00       		.byte	0
 1567 0051 00       		.byte	0
 1568 0052 07       		.uleb128 0x7
 1569 0053 0F       		.uleb128 0xf
 1570 0054 00       		.byte	0
 1571 0055 0B       		.uleb128 0xb
 1572 0056 0B       		.uleb128 0xb
 1573 0057 00       		.byte	0
 1574 0058 00       		.byte	0
 1575 0059 08       		.uleb128 0x8
 1576 005a 0F       		.uleb128 0xf
 1577 005b 00       		.byte	0
 1578 005c 0B       		.uleb128 0xb
 1579 005d 0B       		.uleb128 0xb
 1580 005e 49       		.uleb128 0x49
 1581 005f 13       		.uleb128 0x13
 1582 0060 00       		.byte	0
 1583 0061 00       		.byte	0
 1584 0062 09       		.uleb128 0x9
 1585 0063 26       		.uleb128 0x26
 1586 0064 00       		.byte	0
 1587 0065 49       		.uleb128 0x49
 1588 0066 13       		.uleb128 0x13
 1589 0067 00       		.byte	0
 1590 0068 00       		.byte	0
 1591 0069 0A       		.uleb128 0xa
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 34


 1592 006a 13       		.uleb128 0x13
 1593 006b 01       		.byte	0x1
 1594 006c 03       		.uleb128 0x3
 1595 006d 08       		.uleb128 0x8
 1596 006e 0B       		.uleb128 0xb
 1597 006f 0B       		.uleb128 0xb
 1598 0070 3A       		.uleb128 0x3a
 1599 0071 0B       		.uleb128 0xb
 1600 0072 3B       		.uleb128 0x3b
 1601 0073 0B       		.uleb128 0xb
 1602 0074 01       		.uleb128 0x1
 1603 0075 13       		.uleb128 0x13
 1604 0076 00       		.byte	0
 1605 0077 00       		.byte	0
 1606 0078 0B       		.uleb128 0xb
 1607 0079 0D       		.uleb128 0xd
 1608 007a 00       		.byte	0
 1609 007b 03       		.uleb128 0x3
 1610 007c 0E       		.uleb128 0xe
 1611 007d 3A       		.uleb128 0x3a
 1612 007e 0B       		.uleb128 0xb
 1613 007f 3B       		.uleb128 0x3b
 1614 0080 0B       		.uleb128 0xb
 1615 0081 49       		.uleb128 0x49
 1616 0082 13       		.uleb128 0x13
 1617 0083 38       		.uleb128 0x38
 1618 0084 0B       		.uleb128 0xb
 1619 0085 00       		.byte	0
 1620 0086 00       		.byte	0
 1621 0087 0C       		.uleb128 0xc
 1622 0088 16       		.uleb128 0x16
 1623 0089 00       		.byte	0
 1624 008a 03       		.uleb128 0x3
 1625 008b 0E       		.uleb128 0xe
 1626 008c 3A       		.uleb128 0x3a
 1627 008d 0B       		.uleb128 0xb
 1628 008e 3B       		.uleb128 0x3b
 1629 008f 05       		.uleb128 0x5
 1630 0090 49       		.uleb128 0x49
 1631 0091 13       		.uleb128 0x13
 1632 0092 00       		.byte	0
 1633 0093 00       		.byte	0
 1634 0094 0D       		.uleb128 0xd
 1635 0095 13       		.uleb128 0x13
 1636 0096 01       		.byte	0x1
 1637 0097 0B       		.uleb128 0xb
 1638 0098 0B       		.uleb128 0xb
 1639 0099 3A       		.uleb128 0x3a
 1640 009a 0B       		.uleb128 0xb
 1641 009b 3B       		.uleb128 0x3b
 1642 009c 0B       		.uleb128 0xb
 1643 009d 01       		.uleb128 0x1
 1644 009e 13       		.uleb128 0x13
 1645 009f 00       		.byte	0
 1646 00a0 00       		.byte	0
 1647 00a1 0E       		.uleb128 0xe
 1648 00a2 0D       		.uleb128 0xd
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 35


 1649 00a3 00       		.byte	0
 1650 00a4 03       		.uleb128 0x3
 1651 00a5 08       		.uleb128 0x8
 1652 00a6 3A       		.uleb128 0x3a
 1653 00a7 0B       		.uleb128 0xb
 1654 00a8 3B       		.uleb128 0x3b
 1655 00a9 0B       		.uleb128 0xb
 1656 00aa 49       		.uleb128 0x49
 1657 00ab 13       		.uleb128 0x13
 1658 00ac 38       		.uleb128 0x38
 1659 00ad 0B       		.uleb128 0xb
 1660 00ae 00       		.byte	0
 1661 00af 00       		.byte	0
 1662 00b0 0F       		.uleb128 0xf
 1663 00b1 35       		.uleb128 0x35
 1664 00b2 00       		.byte	0
 1665 00b3 49       		.uleb128 0x49
 1666 00b4 13       		.uleb128 0x13
 1667 00b5 00       		.byte	0
 1668 00b6 00       		.byte	0
 1669 00b7 10       		.uleb128 0x10
 1670 00b8 13       		.uleb128 0x13
 1671 00b9 01       		.byte	0x1
 1672 00ba 0B       		.uleb128 0xb
 1673 00bb 05       		.uleb128 0x5
 1674 00bc 3A       		.uleb128 0x3a
 1675 00bd 0B       		.uleb128 0xb
 1676 00be 3B       		.uleb128 0x3b
 1677 00bf 0B       		.uleb128 0xb
 1678 00c0 01       		.uleb128 0x1
 1679 00c1 13       		.uleb128 0x13
 1680 00c2 00       		.byte	0
 1681 00c3 00       		.byte	0
 1682 00c4 11       		.uleb128 0x11
 1683 00c5 01       		.uleb128 0x1
 1684 00c6 01       		.byte	0x1
 1685 00c7 49       		.uleb128 0x49
 1686 00c8 13       		.uleb128 0x13
 1687 00c9 01       		.uleb128 0x1
 1688 00ca 13       		.uleb128 0x13
 1689 00cb 00       		.byte	0
 1690 00cc 00       		.byte	0
 1691 00cd 12       		.uleb128 0x12
 1692 00ce 21       		.uleb128 0x21
 1693 00cf 00       		.byte	0
 1694 00d0 49       		.uleb128 0x49
 1695 00d1 13       		.uleb128 0x13
 1696 00d2 2F       		.uleb128 0x2f
 1697 00d3 0B       		.uleb128 0xb
 1698 00d4 00       		.byte	0
 1699 00d5 00       		.byte	0
 1700 00d6 13       		.uleb128 0x13
 1701 00d7 2E       		.uleb128 0x2e
 1702 00d8 00       		.byte	0
 1703 00d9 3F       		.uleb128 0x3f
 1704 00da 19       		.uleb128 0x19
 1705 00db 03       		.uleb128 0x3
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 36


 1706 00dc 0E       		.uleb128 0xe
 1707 00dd 3A       		.uleb128 0x3a
 1708 00de 0B       		.uleb128 0xb
 1709 00df 3B       		.uleb128 0x3b
 1710 00e0 0B       		.uleb128 0xb
 1711 00e1 11       		.uleb128 0x11
 1712 00e2 01       		.uleb128 0x1
 1713 00e3 12       		.uleb128 0x12
 1714 00e4 06       		.uleb128 0x6
 1715 00e5 40       		.uleb128 0x40
 1716 00e6 18       		.uleb128 0x18
 1717 00e7 9642     		.uleb128 0x2116
 1718 00e9 19       		.uleb128 0x19
 1719 00ea 00       		.byte	0
 1720 00eb 00       		.byte	0
 1721 00ec 14       		.uleb128 0x14
 1722 00ed 2E       		.uleb128 0x2e
 1723 00ee 01       		.byte	0x1
 1724 00ef 3F       		.uleb128 0x3f
 1725 00f0 19       		.uleb128 0x19
 1726 00f1 03       		.uleb128 0x3
 1727 00f2 0E       		.uleb128 0xe
 1728 00f3 3A       		.uleb128 0x3a
 1729 00f4 0B       		.uleb128 0xb
 1730 00f5 3B       		.uleb128 0x3b
 1731 00f6 0B       		.uleb128 0xb
 1732 00f7 27       		.uleb128 0x27
 1733 00f8 19       		.uleb128 0x19
 1734 00f9 49       		.uleb128 0x49
 1735 00fa 13       		.uleb128 0x13
 1736 00fb 11       		.uleb128 0x11
 1737 00fc 01       		.uleb128 0x1
 1738 00fd 12       		.uleb128 0x12
 1739 00fe 06       		.uleb128 0x6
 1740 00ff 40       		.uleb128 0x40
 1741 0100 18       		.uleb128 0x18
 1742 0101 9642     		.uleb128 0x2116
 1743 0103 19       		.uleb128 0x19
 1744 0104 01       		.uleb128 0x1
 1745 0105 13       		.uleb128 0x13
 1746 0106 00       		.byte	0
 1747 0107 00       		.byte	0
 1748 0108 15       		.uleb128 0x15
 1749 0109 05       		.uleb128 0x5
 1750 010a 00       		.byte	0
 1751 010b 03       		.uleb128 0x3
 1752 010c 0E       		.uleb128 0xe
 1753 010d 3A       		.uleb128 0x3a
 1754 010e 0B       		.uleb128 0xb
 1755 010f 3B       		.uleb128 0x3b
 1756 0110 0B       		.uleb128 0xb
 1757 0111 49       		.uleb128 0x49
 1758 0112 13       		.uleb128 0x13
 1759 0113 02       		.uleb128 0x2
 1760 0114 18       		.uleb128 0x18
 1761 0115 00       		.byte	0
 1762 0116 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 37


 1763 0117 16       		.uleb128 0x16
 1764 0118 05       		.uleb128 0x5
 1765 0119 00       		.byte	0
 1766 011a 03       		.uleb128 0x3
 1767 011b 08       		.uleb128 0x8
 1768 011c 3A       		.uleb128 0x3a
 1769 011d 0B       		.uleb128 0xb
 1770 011e 3B       		.uleb128 0x3b
 1771 011f 0B       		.uleb128 0xb
 1772 0120 49       		.uleb128 0x49
 1773 0121 13       		.uleb128 0x13
 1774 0122 02       		.uleb128 0x2
 1775 0123 18       		.uleb128 0x18
 1776 0124 00       		.byte	0
 1777 0125 00       		.byte	0
 1778 0126 17       		.uleb128 0x17
 1779 0127 34       		.uleb128 0x34
 1780 0128 00       		.byte	0
 1781 0129 03       		.uleb128 0x3
 1782 012a 08       		.uleb128 0x8
 1783 012b 3A       		.uleb128 0x3a
 1784 012c 0B       		.uleb128 0xb
 1785 012d 3B       		.uleb128 0x3b
 1786 012e 0B       		.uleb128 0xb
 1787 012f 49       		.uleb128 0x49
 1788 0130 13       		.uleb128 0x13
 1789 0131 02       		.uleb128 0x2
 1790 0132 18       		.uleb128 0x18
 1791 0133 00       		.byte	0
 1792 0134 00       		.byte	0
 1793 0135 18       		.uleb128 0x18
 1794 0136 2E       		.uleb128 0x2e
 1795 0137 01       		.byte	0x1
 1796 0138 3F       		.uleb128 0x3f
 1797 0139 19       		.uleb128 0x19
 1798 013a 03       		.uleb128 0x3
 1799 013b 0E       		.uleb128 0xe
 1800 013c 3A       		.uleb128 0x3a
 1801 013d 0B       		.uleb128 0xb
 1802 013e 3B       		.uleb128 0x3b
 1803 013f 0B       		.uleb128 0xb
 1804 0140 27       		.uleb128 0x27
 1805 0141 19       		.uleb128 0x19
 1806 0142 11       		.uleb128 0x11
 1807 0143 01       		.uleb128 0x1
 1808 0144 12       		.uleb128 0x12
 1809 0145 06       		.uleb128 0x6
 1810 0146 40       		.uleb128 0x40
 1811 0147 18       		.uleb128 0x18
 1812 0148 9642     		.uleb128 0x2116
 1813 014a 19       		.uleb128 0x19
 1814 014b 01       		.uleb128 0x1
 1815 014c 13       		.uleb128 0x13
 1816 014d 00       		.byte	0
 1817 014e 00       		.byte	0
 1818 014f 19       		.uleb128 0x19
 1819 0150 18       		.uleb128 0x18
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 38


 1820 0151 00       		.byte	0
 1821 0152 00       		.byte	0
 1822 0153 00       		.byte	0
 1823 0154 1A       		.uleb128 0x1a
 1824 0155 34       		.uleb128 0x34
 1825 0156 00       		.byte	0
 1826 0157 03       		.uleb128 0x3
 1827 0158 0E       		.uleb128 0xe
 1828 0159 3A       		.uleb128 0x3a
 1829 015a 0B       		.uleb128 0xb
 1830 015b 3B       		.uleb128 0x3b
 1831 015c 0B       		.uleb128 0xb
 1832 015d 49       		.uleb128 0x49
 1833 015e 13       		.uleb128 0x13
 1834 015f 02       		.uleb128 0x2
 1835 0160 18       		.uleb128 0x18
 1836 0161 00       		.byte	0
 1837 0162 00       		.byte	0
 1838 0163 1B       		.uleb128 0x1b
 1839 0164 0B       		.uleb128 0xb
 1840 0165 01       		.byte	0x1
 1841 0166 11       		.uleb128 0x11
 1842 0167 01       		.uleb128 0x1
 1843 0168 12       		.uleb128 0x12
 1844 0169 06       		.uleb128 0x6
 1845 016a 01       		.uleb128 0x1
 1846 016b 13       		.uleb128 0x13
 1847 016c 00       		.byte	0
 1848 016d 00       		.byte	0
 1849 016e 1C       		.uleb128 0x1c
 1850 016f 0B       		.uleb128 0xb
 1851 0170 01       		.byte	0x1
 1852 0171 11       		.uleb128 0x11
 1853 0172 01       		.uleb128 0x1
 1854 0173 12       		.uleb128 0x12
 1855 0174 06       		.uleb128 0x6
 1856 0175 00       		.byte	0
 1857 0176 00       		.byte	0
 1858 0177 1D       		.uleb128 0x1d
 1859 0178 21       		.uleb128 0x21
 1860 0179 00       		.byte	0
 1861 017a 49       		.uleb128 0x49
 1862 017b 13       		.uleb128 0x13
 1863 017c 2F       		.uleb128 0x2f
 1864 017d 05       		.uleb128 0x5
 1865 017e 00       		.byte	0
 1866 017f 00       		.byte	0
 1867 0180 1E       		.uleb128 0x1e
 1868 0181 2E       		.uleb128 0x2e
 1869 0182 01       		.byte	0x1
 1870 0183 3F       		.uleb128 0x3f
 1871 0184 19       		.uleb128 0x19
 1872 0185 03       		.uleb128 0x3
 1873 0186 0E       		.uleb128 0xe
 1874 0187 3A       		.uleb128 0x3a
 1875 0188 0B       		.uleb128 0xb
 1876 0189 3B       		.uleb128 0x3b
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 39


 1877 018a 0B       		.uleb128 0xb
 1878 018b 49       		.uleb128 0x49
 1879 018c 13       		.uleb128 0x13
 1880 018d 11       		.uleb128 0x11
 1881 018e 01       		.uleb128 0x1
 1882 018f 12       		.uleb128 0x12
 1883 0190 06       		.uleb128 0x6
 1884 0191 40       		.uleb128 0x40
 1885 0192 18       		.uleb128 0x18
 1886 0193 9642     		.uleb128 0x2116
 1887 0195 19       		.uleb128 0x19
 1888 0196 01       		.uleb128 0x1
 1889 0197 13       		.uleb128 0x13
 1890 0198 00       		.byte	0
 1891 0199 00       		.byte	0
 1892 019a 1F       		.uleb128 0x1f
 1893 019b 34       		.uleb128 0x34
 1894 019c 00       		.byte	0
 1895 019d 03       		.uleb128 0x3
 1896 019e 0E       		.uleb128 0xe
 1897 019f 3A       		.uleb128 0x3a
 1898 01a0 0B       		.uleb128 0xb
 1899 01a1 3B       		.uleb128 0x3b
 1900 01a2 05       		.uleb128 0x5
 1901 01a3 49       		.uleb128 0x49
 1902 01a4 13       		.uleb128 0x13
 1903 01a5 3F       		.uleb128 0x3f
 1904 01a6 19       		.uleb128 0x19
 1905 01a7 3C       		.uleb128 0x3c
 1906 01a8 19       		.uleb128 0x19
 1907 01a9 00       		.byte	0
 1908 01aa 00       		.byte	0
 1909 01ab 20       		.uleb128 0x20
 1910 01ac 34       		.uleb128 0x34
 1911 01ad 00       		.byte	0
 1912 01ae 03       		.uleb128 0x3
 1913 01af 0E       		.uleb128 0xe
 1914 01b0 3A       		.uleb128 0x3a
 1915 01b1 0B       		.uleb128 0xb
 1916 01b2 3B       		.uleb128 0x3b
 1917 01b3 0B       		.uleb128 0xb
 1918 01b4 49       		.uleb128 0x49
 1919 01b5 13       		.uleb128 0x13
 1920 01b6 3F       		.uleb128 0x3f
 1921 01b7 19       		.uleb128 0x19
 1922 01b8 02       		.uleb128 0x2
 1923 01b9 18       		.uleb128 0x18
 1924 01ba 00       		.byte	0
 1925 01bb 00       		.byte	0
 1926 01bc 00       		.byte	0
 1927              		.section	.debug_aranges,"",%progbits
 1928 0000 6C000000 		.4byte	0x6c
 1929 0004 0200     		.2byte	0x2
 1930 0006 00000000 		.4byte	.Ldebug_info0
 1931 000a 04       		.byte	0x4
 1932 000b 00       		.byte	0
 1933 000c 0000     		.2byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 40


 1934 000e 0000     		.2byte	0
 1935 0010 00000000 		.4byte	.LFB64
 1936 0014 0C000000 		.4byte	.LFE64-.LFB64
 1937 0018 00000000 		.4byte	.LFB65
 1938 001c 0C000000 		.4byte	.LFE65-.LFB65
 1939 0020 00000000 		.4byte	.LFB66
 1940 0024 20000000 		.4byte	.LFE66-.LFB66
 1941 0028 00000000 		.4byte	.LFB67
 1942 002c 0C000000 		.4byte	.LFE67-.LFB67
 1943 0030 00000000 		.4byte	.LFB68
 1944 0034 38000000 		.4byte	.LFE68-.LFB68
 1945 0038 00000000 		.4byte	.LFB69
 1946 003c 6C010000 		.4byte	.LFE69-.LFB69
 1947 0040 00000000 		.4byte	.LFB70
 1948 0044 78000000 		.4byte	.LFE70-.LFB70
 1949 0048 00000000 		.4byte	.LFB71
 1950 004c 58000000 		.4byte	.LFE71-.LFB71
 1951 0050 00000000 		.4byte	.LFB72
 1952 0054 40000000 		.4byte	.LFE72-.LFB72
 1953 0058 00000000 		.4byte	.LFB73
 1954 005c 74000000 		.4byte	.LFE73-.LFB73
 1955 0060 00000000 		.4byte	.LFB74
 1956 0064 3C000000 		.4byte	.LFE74-.LFB74
 1957 0068 00000000 		.4byte	0
 1958 006c 00000000 		.4byte	0
 1959              		.section	.debug_ranges,"",%progbits
 1960              	.Ldebug_ranges0:
 1961 0000 00000000 		.4byte	.LFB64
 1962 0004 0C000000 		.4byte	.LFE64
 1963 0008 00000000 		.4byte	.LFB65
 1964 000c 0C000000 		.4byte	.LFE65
 1965 0010 00000000 		.4byte	.LFB66
 1966 0014 20000000 		.4byte	.LFE66
 1967 0018 00000000 		.4byte	.LFB67
 1968 001c 0C000000 		.4byte	.LFE67
 1969 0020 00000000 		.4byte	.LFB68
 1970 0024 38000000 		.4byte	.LFE68
 1971 0028 00000000 		.4byte	.LFB69
 1972 002c 6C010000 		.4byte	.LFE69
 1973 0030 00000000 		.4byte	.LFB70
 1974 0034 78000000 		.4byte	.LFE70
 1975 0038 00000000 		.4byte	.LFB71
 1976 003c 58000000 		.4byte	.LFE71
 1977 0040 00000000 		.4byte	.LFB72
 1978 0044 40000000 		.4byte	.LFE72
 1979 0048 00000000 		.4byte	.LFB73
 1980 004c 74000000 		.4byte	.LFE73
 1981 0050 00000000 		.4byte	.LFB74
 1982 0054 3C000000 		.4byte	.LFE74
 1983 0058 00000000 		.4byte	0
 1984 005c 00000000 		.4byte	0
 1985              		.section	.debug_line,"",%progbits
 1986              	.Ldebug_line0:
 1987 0000 B5030000 		.section	.debug_str,"MS",%progbits,1
 1987      02007302 
 1987      00000201 
 1987      FB0E0D00 
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 41


 1987      01010101 
 1988              	.LASF56:
 1989 0000 745F6F66 		.ascii	"t_of_day\000"
 1989      5F646179 
 1989      00
 1990              	.LASF19:
 1991 0009 746D5F68 		.ascii	"tm_hour\000"
 1991      6F757200 
 1992              	.LASF44:
 1993 0011 64656275 		.ascii	"debug_sleep\000"
 1993      675F736C 
 1993      65657000 
 1994              	.LASF37:
 1995 001d 74657374 		.ascii	"test_name\000"
 1995      5F6E616D 
 1995      6500
 1996              	.LASF61:
 1997 0027 696E7075 		.ascii	"input_str\000"
 1997      745F7374 
 1997      7200
 1998              	.LASF42:
 1999 0031 64656275 		.ascii	"debug_start\000"
 1999      675F7374 
 1999      61727400 
 2000              	.LASF2:
 2001 003d 73686F72 		.ascii	"short int\000"
 2001      7420696E 
 2001      7400
 2002              	.LASF36:
 2003 0047 5254435F 		.ascii	"RTC_TIME_DATE\000"
 2003      54494D45 
 2003      5F444154 
 2003      4500
 2004              	.LASF60:
 2005 0055 73747265 		.ascii	"strextract\000"
 2005      78747261 
 2005      637400
 2006              	.LASF65:
 2007 0060 62656769 		.ascii	"begin\000"
 2007      6E00
 2008              	.LASF70:
 2009 0066 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2009      43313120 
 2009      352E342E 
 2009      31203230 
 2009      31363036 
 2010 0099 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2010      20726576 
 2010      6973696F 
 2010      6E203233 
 2010      37373135 
 2011 00cc 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2011      66756E63 
 2011      74696F6E 
 2011      2D736563 
 2011      74696F6E 
 2012              	.LASF23:
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 42


 2013 00f4 746D5F77 		.ascii	"tm_wday\000"
 2013      64617900 
 2014              	.LASF6:
 2015 00fc 6C6F6E67 		.ascii	"long long int\000"
 2015      206C6F6E 
 2015      6720696E 
 2015      7400
 2016              	.LASF59:
 2017 010a 5F777269 		.ascii	"_write\000"
 2017      746500
 2018              	.LASF54:
 2019 0111 67657454 		.ascii	"getTimeStamp\000"
 2019      696D6553 
 2019      74616D70 
 2019      00
 2020              	.LASF30:
 2021 011e 486F7572 		.ascii	"Hour\000"
 2021      00
 2022              	.LASF46:
 2023 0123 66696C65 		.ascii	"file\000"
 2023      00
 2024              	.LASF32:
 2025 0128 4461794F 		.ascii	"DayOfMonth\000"
 2025      664D6F6E 
 2025      746800
 2026              	.LASF27:
 2027 0133 75696E74 		.ascii	"uint16\000"
 2027      313600
 2028              	.LASF41:
 2029 013a 76615F6C 		.ascii	"va_list\000"
 2029      69737400 
 2030              	.LASF71:
 2031 0142 64656275 		.ascii	"debug.c\000"
 2031      672E6300 
 2032              	.LASF26:
 2033 014a 75696E74 		.ascii	"uint8\000"
 2033      3800
 2034              	.LASF62:
 2035 0150 6F757470 		.ascii	"output_str\000"
 2035      75745F73 
 2035      747200
 2036              	.LASF18:
 2037 015b 746D5F6D 		.ascii	"tm_min\000"
 2037      696E00
 2038              	.LASF28:
 2039 0162 666C6F61 		.ascii	"float\000"
 2039      7400
 2040              	.LASF21:
 2041 0168 746D5F6D 		.ascii	"tm_mon\000"
 2041      6F6E00
 2042              	.LASF48:
 2043 016f 666F726D 		.ascii	"format\000"
 2043      617400
 2044              	.LASF15:
 2045 0176 74696D65 		.ascii	"time_t\000"
 2045      5F7400
 2046              	.LASF16:
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 43


 2047 017d 5F5F7661 		.ascii	"__va_list\000"
 2047      5F6C6973 
 2047      7400
 2048              	.LASF39:
 2049 0187 72656173 		.ascii	"reason\000"
 2049      6F6E00
 2050              	.LASF63:
 2051 018e 73656172 		.ascii	"search_start\000"
 2051      63685F73 
 2051      74617274 
 2051      00
 2052              	.LASF58:
 2053 019b 73747269 		.ascii	"string\000"
 2053      6E6700
 2054              	.LASF68:
 2055 01a2 42425F66 		.ascii	"BB_fileName\000"
 2055      696C654E 
 2055      616D6500 
 2056              	.LASF35:
 2057 01ae 59656172 		.ascii	"Year\000"
 2057      00
 2058              	.LASF34:
 2059 01b3 4D6F6E74 		.ascii	"Month\000"
 2059      6800
 2060              	.LASF9:
 2061 01b9 6C6F6E67 		.ascii	"long double\000"
 2061      20646F75 
 2061      626C6500 
 2062              	.LASF1:
 2063 01c5 756E7369 		.ascii	"unsigned char\000"
 2063      676E6564 
 2063      20636861 
 2063      7200
 2064              	.LASF31:
 2065 01d3 4461794F 		.ascii	"DayOfWeek\000"
 2065      66576565 
 2065      6B00
 2066              	.LASF0:
 2067 01dd 7369676E 		.ascii	"signed char\000"
 2067      65642063 
 2067      68617200 
 2068              	.LASF22:
 2069 01e9 746D5F79 		.ascii	"tm_year\000"
 2069      65617200 
 2070              	.LASF7:
 2071 01f1 6C6F6E67 		.ascii	"long long unsigned int\000"
 2071      206C6F6E 
 2071      6720756E 
 2071      7369676E 
 2071      65642069 
 2072              	.LASF47:
 2073 0208 74797065 		.ascii	"type\000"
 2073      00
 2074              	.LASF8:
 2075 020d 756E7369 		.ascii	"unsigned int\000"
 2075      676E6564 
 2075      20696E74 
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 44


 2075      00
 2076              	.LASF73:
 2077 021a 5F5F6170 		.ascii	"__ap\000"
 2077      00
 2078              	.LASF20:
 2079 021f 746D5F6D 		.ascii	"tm_mday\000"
 2079      64617900 
 2080              	.LASF72:
 2081 0227 433A5C55 		.ascii	"C:\\Users\\hail\\Desktop\\Brooke Research\\notoriOS"
 2081      73657273 
 2081      5C686169 
 2081      6C5C4465 
 2081      736B746F 
 2082 0255 5C6E6F74 		.ascii	"\\notoriOS\\notoriOS\\notoriOS.cydsn\000"
 2082      6F72694F 
 2082      535C6E6F 
 2082      746F7269 
 2082      4F535C6E 
 2083              	.LASF3:
 2084 0277 73686F72 		.ascii	"short unsigned int\000"
 2084      7420756E 
 2084      7369676E 
 2084      65642069 
 2084      6E7400
 2085              	.LASF38:
 2086 028a 73746174 		.ascii	"status\000"
 2086      757300
 2087              	.LASF66:
 2088 0291 7072696E 		.ascii	"printd\000"
 2088      746400
 2089              	.LASF13:
 2090 0298 63686172 		.ascii	"char\000"
 2090      00
 2091              	.LASF40:
 2092 029d 74657374 		.ascii	"test_t\000"
 2092      5F7400
 2093              	.LASF4:
 2094 02a4 6C6F6E67 		.ascii	"long int\000"
 2094      20696E74 
 2094      00
 2095              	.LASF52:
 2096 02ad 7072696E 		.ascii	"printTestStatus\000"
 2096      74546573 
 2096      74537461 
 2096      74757300 
 2097              	.LASF14:
 2098 02bd 696E7433 		.ascii	"int32_t\000"
 2098      325F7400 
 2099              	.LASF49:
 2100 02c5 64656275 		.ascii	"debug_string\000"
 2100      675F7374 
 2100      72696E67 
 2100      00
 2101              	.LASF24:
 2102 02d2 746D5F79 		.ascii	"tm_yday\000"
 2102      64617900 
 2103              	.LASF55:
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 45


 2104 02da 6C6F6361 		.ascii	"localTime\000"
 2104      6C54696D 
 2104      6500
 2105              	.LASF53:
 2106 02e4 74657374 		.ascii	"test\000"
 2106      00
 2107              	.LASF64:
 2108 02e9 73656172 		.ascii	"search_end\000"
 2108      63685F65 
 2108      6E6400
 2109              	.LASF25:
 2110 02f4 746D5F69 		.ascii	"tm_isdst\000"
 2110      73647374 
 2110      00
 2111              	.LASF43:
 2112 02fd 64656275 		.ascii	"debug_stop\000"
 2112      675F7374 
 2112      6F7000
 2113              	.LASF5:
 2114 0308 6C6F6E67 		.ascii	"long unsigned int\000"
 2114      20756E73 
 2114      69676E65 
 2114      6420696E 
 2114      7400
 2115              	.LASF29:
 2116 031a 646F7562 		.ascii	"double\000"
 2116      6C6500
 2117              	.LASF50:
 2118 0321 61726770 		.ascii	"argptr\000"
 2118      747200
 2119              	.LASF69:
 2120 0328 64656275 		.ascii	"debug_level\000"
 2120      675F6C65 
 2120      76656C00 
 2121              	.LASF10:
 2122 0334 5F5F696E 		.ascii	"__int32_t\000"
 2122      7433325F 
 2122      7400
 2123              	.LASF12:
 2124 033e 73697A65 		.ascii	"sizetype\000"
 2124      74797065 
 2124      00
 2125              	.LASF11:
 2126 0347 5F5F676E 		.ascii	"__gnuc_va_list\000"
 2126      75635F76 
 2126      615F6C69 
 2126      737400
 2127              	.LASF45:
 2128 0356 64656275 		.ascii	"debug_wakeup\000"
 2128      675F7761 
 2128      6B657570 
 2128      00
 2129              	.LASF51:
 2130 0363 7072696E 		.ascii	"printNotif\000"
 2130      744E6F74 
 2130      696600
 2131              	.LASF17:
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc8X0099.s 			page 46


 2132 036e 746D5F73 		.ascii	"tm_sec\000"
 2132      656300
 2133              	.LASF67:
 2134 0375 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2134      52784275 
 2134      66666572 
 2134      00
 2135              	.LASF57:
 2136 0382 73747269 		.ascii	"stripEscapeCharacters\000"
 2136      70457363 
 2136      61706543 
 2136      68617261 
 2136      63746572 
 2137              	.LASF33:
 2138 0398 4461794F 		.ascii	"DayOfYear\000"
 2138      66596561 
 2138      7200
 2139              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
