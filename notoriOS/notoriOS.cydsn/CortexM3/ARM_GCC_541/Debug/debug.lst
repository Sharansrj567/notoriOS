ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"debug.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.syntax unified
  20              		.global _printf_float
  21              		.thumb
  22              		.syntax unified
  23              		.global	BB_fileName
  24              		.data
  25              		.align	2
  26              		.type	BB_fileName, %object
  27              		.size	BB_fileName, 30
  28              	BB_fileName:
  29 0000 626C6163 		.ascii	"blackbox.txt\000"
  29      6B626F78 
  29      2E747874 
  29      00
  30 000d 00000000 		.space	17
  30      00000000 
  30      00000000 
  30      00000000 
  30      00
  31              		.global	debug_level
  32              		.bss
  33              		.type	debug_level, %object
  34              		.size	debug_level, 1
  35              	debug_level:
  36 0000 00       		.space	1
  37              		.section	.text.debug_start,"ax",%progbits
  38              		.align	2
  39              		.global	debug_start
  40              		.thumb
  41              		.thumb_func
  42              		.type	debug_start, %function
  43              	debug_start:
  44              	.LFB64:
  45              		.file 1 "debug.c"
   1:debug.c       **** //drivers for UART debug 
   2:debug.c       **** 
   3:debug.c       **** #include "debug.h"
   4:debug.c       **** #include <stdarg.h> // handles variable argument list
   5:debug.c       **** 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 2


   6:debug.c       **** char    BB_fileName[30] = "blackbox.txt";
   7:debug.c       **** 
   8:debug.c       **** // Set debug level based on what you want printed/ written to SD card
   9:debug.c       **** // 0u = errors and warnings, 1u = all
  10:debug.c       **** uint8   debug_level = 0u;
  11:debug.c       **** 
  12:debug.c       **** // function to start UART debug
  13:debug.c       **** void debug_start(){
  46              		.loc 1 13 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 0
  49              		@ frame_needed = 1, uses_anonymous_args = 0
  50 0000 80B5     		push	{r7, lr}
  51              		.cfi_def_cfa_offset 8
  52              		.cfi_offset 7, -8
  53              		.cfi_offset 14, -4
  54 0002 00AF     		add	r7, sp, #0
  55              		.cfi_def_cfa_register 7
  14:debug.c       ****     // if debug flag = 1 then start UART
  15:debug.c       ****     #if USE_DEBUG
  16:debug.c       ****        Debug_UART_Start();
  56              		.loc 1 16 0
  57 0004 FFF7FEFF 		bl	Debug_UART_Start
  17:debug.c       ****        //setvbuf(stdout, NULL, _IOFBF, Debug_UART_TX_BUFFER_SIZE);//this sets the printf() bufefr t
  18:debug.c       ****        //setbuf(stdout, NULL);
  19:debug.c       ****     #endif
  20:debug.c       **** }
  58              		.loc 1 20 0
  59 0008 00BF     		nop
  60 000a 80BD     		pop	{r7, pc}
  61              		.cfi_endproc
  62              	.LFE64:
  63              		.size	debug_start, .-debug_start
  64              		.section	.text.debug_stop,"ax",%progbits
  65              		.align	2
  66              		.global	debug_stop
  67              		.thumb
  68              		.thumb_func
  69              		.type	debug_stop, %function
  70              	debug_stop:
  71              	.LFB65:
  21:debug.c       **** 
  22:debug.c       **** // function to stop UART debug
  23:debug.c       **** void debug_stop(){
  72              		.loc 1 23 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76 0000 80B5     		push	{r7, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 00AF     		add	r7, sp, #0
  81              		.cfi_def_cfa_register 7
  24:debug.c       ****     // if debug flag = 1 then stop UART
  25:debug.c       ****     #if USE_DEBUG
  26:debug.c       ****         Debug_UART_Stop();
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 3


  82              		.loc 1 26 0
  83 0004 FFF7FEFF 		bl	Debug_UART_Stop
  27:debug.c       ****     #endif
  28:debug.c       **** }
  84              		.loc 1 28 0
  85 0008 00BF     		nop
  86 000a 80BD     		pop	{r7, pc}
  87              		.cfi_endproc
  88              	.LFE65:
  89              		.size	debug_stop, .-debug_stop
  90              		.section	.text.debug_sleep,"ax",%progbits
  91              		.align	2
  92              		.global	debug_sleep
  93              		.thumb
  94              		.thumb_func
  95              		.type	debug_sleep, %function
  96              	debug_sleep:
  97              	.LFB66:
  29:debug.c       **** 
  30:debug.c       **** // function to sleep UART debug
  31:debug.c       **** void debug_sleep(){
  98              		.loc 1 31 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 1, uses_anonymous_args = 0
 102 0000 80B5     		push	{r7, lr}
 103              		.cfi_def_cfa_offset 8
 104              		.cfi_offset 7, -8
 105              		.cfi_offset 14, -4
 106 0002 00AF     		add	r7, sp, #0
 107              		.cfi_def_cfa_register 7
  32:debug.c       ****     // if debug flag = 1 and printf still writing, sleep UART
  33:debug.c       ****     #if USE_DEBUG
  34:debug.c       **** 
  35:debug.c       ****         // Check if UART is busy writing and waiit, if needed
  36:debug.c       ****         // Debug_UART_ReadTxStatus() reads the status register for the TX portion of the UART.
  37:debug.c       ****         if(!(Debug_UART_ReadTxStatus() & Debug_UART_TX_STS_FIFO_EMPTY)){
 108              		.loc 1 37 0
 109 0004 FFF7FEFF 		bl	Debug_UART_ReadTxStatus
 110 0008 0346     		mov	r3, r0
 111 000a 03F00203 		and	r3, r3, #2
 112 000e 002B     		cmp	r3, #0
 113 0010 02D1     		bne	.L4
  38:debug.c       ****             CyDelay(1u);
 114              		.loc 1 38 0
 115 0012 0120     		movs	r0, #1
 116 0014 FFF7FEFF 		bl	CyDelay
 117              	.L4:
  39:debug.c       ****         }
  40:debug.c       ****     // This is the preferred API to prepare the component for sleep. 
  41:debug.c       ****     // The Debug_UART_Sleep() API saves the current component state. Then it calls the Debug_UART_S
  42:debug.c       ****     Debug_UART_Sleep(); 
 118              		.loc 1 42 0
 119 0018 FFF7FEFF 		bl	Debug_UART_Sleep
  43:debug.c       ****    #endif
  44:debug.c       ****    
  45:debug.c       **** }
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 4


 120              		.loc 1 45 0
 121 001c 00BF     		nop
 122 001e 80BD     		pop	{r7, pc}
 123              		.cfi_endproc
 124              	.LFE66:
 125              		.size	debug_sleep, .-debug_sleep
 126              		.section	.text.debug_wakeup,"ax",%progbits
 127              		.align	2
 128              		.global	debug_wakeup
 129              		.thumb
 130              		.thumb_func
 131              		.type	debug_wakeup, %function
 132              	debug_wakeup:
 133              	.LFB67:
  46:debug.c       **** 
  47:debug.c       **** // function to wakeup UART debug
  48:debug.c       **** void debug_wakeup(){
 134              		.loc 1 48 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 1, uses_anonymous_args = 0
 138 0000 80B5     		push	{r7, lr}
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 7, -8
 141              		.cfi_offset 14, -4
 142 0002 00AF     		add	r7, sp, #0
 143              		.cfi_def_cfa_register 7
  49:debug.c       ****     // if debug flag = 1, wakeup UART debug and turn off stillWriting flag
  50:debug.c       ****     #if USE_DEBUG
  51:debug.c       ****         Debug_UART_Wakeup();
 144              		.loc 1 51 0
 145 0004 FFF7FEFF 		bl	Debug_UART_Wakeup
  52:debug.c       ****     #endif
  53:debug.c       **** }
 146              		.loc 1 53 0
 147 0008 00BF     		nop
 148 000a 80BD     		pop	{r7, pc}
 149              		.cfi_endproc
 150              	.LFE67:
 151              		.size	debug_wakeup, .-debug_wakeup
 152              		.section	.text._write,"ax",%progbits
 153              		.align	2
 154              		.global	_write
 155              		.thumb
 156              		.thumb_func
 157              		.type	_write, %function
 158              	_write:
 159              	.LFB68:
  54:debug.c       **** 
  55:debug.c       **** // if debug flag = 1, and using the GCC compiler, revise the _write() function so that when we call
  56:debug.c       **** // NOTE: For this to work HEAP size in "System" must be set to 0x300 or more
  57:debug.c       **** // Stack and heap are both a part of memory. Stack holds functions, variables, etc. Heap sits on to
  58:debug.c       **** // If heap is too small, then you get a stack overflow. FOr printing, need to have a bigger heap. B
  59:debug.c       **** // If have memory problems, play around with heap size.
  60:debug.c       **** #if USE_DEBUG
  61:debug.c       ****     
  62:debug.c       ****     
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 5


  63:debug.c       **** // This will allow you to use printf(), as you would in regulart c programs
  64:debug.c       **** // careful though, printf() is sometimes not safe in embedded sytems
  65:debug.c       **** // may want to use printd() function below
  66:debug.c       **** int _write(int file, char *ptr, int len)
  67:debug.c       **** {
 160              		.loc 1 67 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 24
 163              		@ frame_needed = 1, uses_anonymous_args = 0
 164 0000 80B5     		push	{r7, lr}
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 7, -8
 167              		.cfi_offset 14, -4
 168 0002 86B0     		sub	sp, sp, #24
 169              		.cfi_def_cfa_offset 32
 170 0004 00AF     		add	r7, sp, #0
 171              		.cfi_def_cfa_register 7
 172 0006 F860     		str	r0, [r7, #12]
 173 0008 B960     		str	r1, [r7, #8]
 174 000a 7A60     		str	r2, [r7, #4]
  68:debug.c       ****     int i;
  69:debug.c       ****     file = file;
  70:debug.c       ****     for (i = 0; i < len; i++)
 175              		.loc 1 70 0
 176 000c 0023     		movs	r3, #0
 177 000e 7B61     		str	r3, [r7, #20]
 178 0010 09E0     		b	.L7
 179              	.L8:
  71:debug.c       ****     {   
  72:debug.c       ****         // Puts a byte of data into the transmit buffer to be sent when the bus is available.
  73:debug.c       ****         Debug_UART_PutChar(*ptr++);
 180              		.loc 1 73 0 discriminator 3
 181 0012 BB68     		ldr	r3, [r7, #8]
 182 0014 5A1C     		adds	r2, r3, #1
 183 0016 BA60     		str	r2, [r7, #8]
 184 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 185 001a 1846     		mov	r0, r3
 186 001c FFF7FEFF 		bl	Debug_UART_PutChar
  70:debug.c       ****     {   
 187              		.loc 1 70 0 discriminator 3
 188 0020 7B69     		ldr	r3, [r7, #20]
 189 0022 0133     		adds	r3, r3, #1
 190 0024 7B61     		str	r3, [r7, #20]
 191              	.L7:
  70:debug.c       ****     {   
 192              		.loc 1 70 0 is_stmt 0 discriminator 1
 193 0026 7A69     		ldr	r2, [r7, #20]
 194 0028 7B68     		ldr	r3, [r7, #4]
 195 002a 9A42     		cmp	r2, r3
 196 002c F1DB     		blt	.L8
  74:debug.c       ****     }
  75:debug.c       ****     
  76:debug.c       ****     return (len);
 197              		.loc 1 76 0 is_stmt 1
 198 002e 7B68     		ldr	r3, [r7, #4]
  77:debug.c       **** }
 199              		.loc 1 77 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 6


 200 0030 1846     		mov	r0, r3
 201 0032 1837     		adds	r7, r7, #24
 202              		.cfi_def_cfa_offset 8
 203 0034 BD46     		mov	sp, r7
 204              		.cfi_def_cfa_register 13
 205              		@ sp needed
 206 0036 80BD     		pop	{r7, pc}
 207              		.cfi_endproc
 208              	.LFE68:
 209              		.size	_write, .-_write
 210              		.section	.rodata
 211              		.align	2
 212              	.LC0:
 213 0000 7B2000   		.ascii	"{ \000"
 214 0003 00       		.align	2
 215              	.LC1:
 216 0004 2274696D 		.ascii	"\"time\":\"%ld\" \000"
 216      65223A22 
 216      256C6422 
 216      2000
 217 0012 0000     		.align	2
 218              	.LC2:
 219 0014 22657665 		.ascii	"\"event\":\"error\" \"value\":\"\000"
 219      6E74223A 
 219      22657272 
 219      6F722220 
 219      2276616C 
 220 002e 0000     		.align	2
 221              	.LC3:
 222 0030 22657665 		.ascii	"\"event\":\"warning\" \"value\":\"\000"
 222      6E74223A 
 222      22776172 
 222      6E696E67 
 222      22202276 
 223              		.align	2
 224              	.LC4:
 225 004c 227D0D0A 		.ascii	"\"}\015\012\000"
 225      00
 226 0051 000000   		.align	2
 227              	.LC5:
 228 0054 612B00   		.ascii	"a+\000"
 229 0057 00       		.align	2
 230              	.LC6:
 231 0058 22657665 		.ascii	"\"event\":\"notif\" \"value\":\"\000"
 231      6E74223A 
 231      226E6F74 
 231      69662220 
 231      2276616C 
 232              		.section	.text.printNotif,"ax",%progbits
 233              		.align	2
 234              		.global	printNotif
 235              		.thumb
 236              		.thumb_func
 237              		.type	printNotif, %function
 238              	printNotif:
 239              	.LFB69:
  78:debug.c       **** 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 7


  79:debug.c       **** #endif
  80:debug.c       **** 
  81:debug.c       **** // Create function to hijack printf to add an epoch timestamp to print output
  82:debug.c       **** // Whenever a function is declared to have an indeterminate number of arguments, in place of the la
  83:debug.c       **** // to tell the compiler the function should accept however many arguments that the programmer uses,
  84:debug.c       **** // to at least the number of variables declared. 
  85:debug.c       **** void printNotif(uint8 type, char* format, ...){
 240              		.loc 1 85 0
 241              		.cfi_startproc
 242              		@ args = 4, pretend = 12, frame = 2064
 243              		@ frame_needed = 1, uses_anonymous_args = 1
 244 0000 0EB4     		push	{r1, r2, r3}
 245              		.cfi_def_cfa_offset 12
 246              		.cfi_offset 1, -12
 247              		.cfi_offset 2, -8
 248              		.cfi_offset 3, -4
 249 0002 80B5     		push	{r7, lr}
 250              		.cfi_def_cfa_offset 20
 251              		.cfi_offset 7, -20
 252              		.cfi_offset 14, -16
 253 0004 ADF6140D 		subw	sp, sp, #2068
 254              		.cfi_def_cfa_offset 2088
 255 0008 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
 257 000a 0246     		mov	r2, r0
 258 000c FB1D     		adds	r3, r7, #7
 259 000e 1A70     		strb	r2, [r3]
  86:debug.c       ****     
  87:debug.c       ****     char debug_string[MAX_DEBUG_STRING_LENGTH]; // string to be printed
  88:debug.c       ****     
  89:debug.c       ****     // if debug flag = 1, then print debug statements, otherwise don't print anything
  90:debug.c       ****     #if USE_DEBUG
  91:debug.c       ****        
  92:debug.c       ****         // if it is an error or warning and debug_level >= 0, then print the errors and warnings
  93:debug.c       ****         if ((type == NOTIF_TYPE_ERROR || type == NOTIF_TYPE_WARNING) && debug_level >= 0){
 260              		.loc 1 93 0
 261 0010 FB1D     		adds	r3, r7, #7
 262 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 263 0014 022B     		cmp	r3, #2
 264 0016 03D0     		beq	.L11
 265              		.loc 1 93 0 is_stmt 0 discriminator 1
 266 0018 FB1D     		adds	r3, r7, #7
 267 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 268 001c 012B     		cmp	r3, #1
 269 001e 34D1     		bne	.L12
 270              	.L11:
 271              	.LBB2:
  94:debug.c       ****             printd("{ ");
 272              		.loc 1 94 0 is_stmt 1
 273 0020 3848     		ldr	r0, .L19
 274 0022 FFF7FEFF 		bl	printd
  95:debug.c       ****             printd("\"time\":\"%ld\" " , getTimeStamp());
 275              		.loc 1 95 0
 276 0026 FFF7FEFF 		bl	getTimeStamp
 277 002a 0346     		mov	r3, r0
 278 002c 1946     		mov	r1, r3
 279 002e 3648     		ldr	r0, .L19+4
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 8


 280 0030 FFF7FEFF 		bl	printd
  96:debug.c       ****             if (type == NOTIF_TYPE_ERROR){
 281              		.loc 1 96 0
 282 0034 FB1D     		adds	r3, r7, #7
 283 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 284 0038 022B     		cmp	r3, #2
 285 003a 03D1     		bne	.L13
  97:debug.c       ****                 printd("\"event\":\"error\" \"value\":\"");
 286              		.loc 1 97 0
 287 003c 3348     		ldr	r0, .L19+8
 288 003e FFF7FEFF 		bl	printd
 289 0042 02E0     		b	.L14
 290              	.L13:
  98:debug.c       ****             }else{
  99:debug.c       ****             printd("\"event\":\"warning\" \"value\":\"");
 291              		.loc 1 99 0
 292 0044 3248     		ldr	r0, .L19+12
 293 0046 FFF7FEFF 		bl	printd
 294              	.L14:
 100:debug.c       ****             }
 101:debug.c       ****             va_list argptr; // create variable argprt of the type va_list from stdarg.h
 102:debug.c       ****             va_start(argptr, format); // from stdarg.h: the va_start() macro is invoked to initiali
 295              		.loc 1 102 0
 296 004a 07F50262 		add	r2, r7, #2080
 297 004e 07F10C03 		add	r3, r7, #12
 298 0052 1A60     		str	r2, [r3]
 103:debug.c       ****             vsnprintf(debug_string, MAX_DEBUG_STRING_LENGTH, format, argptr); // send text to buffe
 299              		.loc 1 103 0
 300 0054 07F10C03 		add	r3, r7, #12
 301 0058 07F11000 		add	r0, r7, #16
 302 005c 1B68     		ldr	r3, [r3]
 303 005e D7F81C28 		ldr	r2, [r7, #2076]
 304 0062 4FF40061 		mov	r1, #2048
 305 0066 FFF7FEFF 		bl	vsnprintf
 104:debug.c       ****             Debug_UART_PutString(debug_string); // Sends a NULL terminated string to the TX buffer 
 306              		.loc 1 104 0
 307 006a 07F11003 		add	r3, r7, #16
 308 006e 1846     		mov	r0, r3
 309 0070 FFF7FEFF 		bl	Debug_UART_PutString
 105:debug.c       ****             va_end(argptr); // the va_end() macro is used to clean up; it invalidates ap for use (u
 106:debug.c       ****             printd("\"}\r\n");
 310              		.loc 1 106 0
 311 0074 2748     		ldr	r0, .L19+16
 312 0076 FFF7FEFF 		bl	printd
 107:debug.c       ****             SD_write(BB_fileName,"a+",debug_string); // Write data to SD Card 
 313              		.loc 1 107 0
 314 007a 07F11003 		add	r3, r7, #16
 315 007e 1A46     		mov	r2, r3
 316 0080 2549     		ldr	r1, .L19+20
 317 0082 2648     		ldr	r0, .L19+24
 318 0084 FFF7FEFF 		bl	SD_write
 319              	.LBE2:
  93:debug.c       ****             printd("{ ");
 320              		.loc 1 93 0
 321 0088 35E0     		b	.L10
 322              	.L12:
 108:debug.c       ****         
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 9


 109:debug.c       ****         // else if it is an event and debug level >= 1, then print events
 110:debug.c       ****         }else if (type == NOTIF_TYPE_EVENT && debug_level >= 1){
 323              		.loc 1 110 0
 324 008a FB1D     		adds	r3, r7, #7
 325 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 326 008e 002B     		cmp	r3, #0
 327 0090 30D1     		bne	.L18
 328              		.loc 1 110 0 is_stmt 0 discriminator 1
 329 0092 234B     		ldr	r3, .L19+28
 330 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 331 0096 002B     		cmp	r3, #0
 332 0098 2CD0     		beq	.L18
 333              	.LBB3:
 111:debug.c       ****             printd("{ ");
 334              		.loc 1 111 0 is_stmt 1 discriminator 2
 335 009a 1A48     		ldr	r0, .L19
 336 009c FFF7FEFF 		bl	printd
 112:debug.c       ****             printd("\"time\":\"%ld\" " , getTimeStamp());
 337              		.loc 1 112 0 discriminator 2
 338 00a0 FFF7FEFF 		bl	getTimeStamp
 339 00a4 0346     		mov	r3, r0
 340 00a6 1946     		mov	r1, r3
 341 00a8 1748     		ldr	r0, .L19+4
 342 00aa FFF7FEFF 		bl	printd
 113:debug.c       ****             printd("\"event\":\"notif\" \"value\":\"");
 343              		.loc 1 113 0 discriminator 2
 344 00ae 1D48     		ldr	r0, .L19+32
 345 00b0 FFF7FEFF 		bl	printd
 114:debug.c       ****             va_list argptr; // create variable argprt of the type va_list from stdarg.h
 115:debug.c       ****             va_start(argptr, format); // from stdarg.h: the va_start() macro is invoked to initiali
 346              		.loc 1 115 0 discriminator 2
 347 00b4 07F50262 		add	r2, r7, #2080
 348 00b8 07F10803 		add	r3, r7, #8
 349 00bc 1A60     		str	r2, [r3]
 116:debug.c       ****             vsnprintf(debug_string, MAX_DEBUG_STRING_LENGTH, format, argptr); // send text to buffe
 350              		.loc 1 116 0 discriminator 2
 351 00be 07F10803 		add	r3, r7, #8
 352 00c2 07F11000 		add	r0, r7, #16
 353 00c6 1B68     		ldr	r3, [r3]
 354 00c8 D7F81C28 		ldr	r2, [r7, #2076]
 355 00cc 4FF40061 		mov	r1, #2048
 356 00d0 FFF7FEFF 		bl	vsnprintf
 117:debug.c       ****             Debug_UART_PutString(debug_string); // Sends a NULL terminated string to the TX buffer 
 357              		.loc 1 117 0 discriminator 2
 358 00d4 07F11003 		add	r3, r7, #16
 359 00d8 1846     		mov	r0, r3
 360 00da FFF7FEFF 		bl	Debug_UART_PutString
 118:debug.c       ****             va_end(argptr); // the va_end() macro is used to clean up; it invalidates ap for use (u
 119:debug.c       ****             printd("\"}\r\n");
 361              		.loc 1 119 0 discriminator 2
 362 00de 0D48     		ldr	r0, .L19+16
 363 00e0 FFF7FEFF 		bl	printd
 120:debug.c       ****             SD_write(BB_fileName,"a+",debug_string); // Write data to SD Card  
 364              		.loc 1 120 0 discriminator 2
 365 00e4 07F11003 		add	r3, r7, #16
 366 00e8 1A46     		mov	r2, r3
 367 00ea 0B49     		ldr	r1, .L19+20
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 10


 368 00ec 0B48     		ldr	r0, .L19+24
 369 00ee FFF7FEFF 		bl	SD_write
 370              	.LBE3:
 110:debug.c       ****             printd("{ ");
 371              		.loc 1 110 0 discriminator 2
 372 00f2 00E0     		b	.L10
 373              	.L18:
 121:debug.c       **** 
 122:debug.c       ****         // else do not print and exit the function    
 123:debug.c       ****         }else{
 124:debug.c       ****             return;
 374              		.loc 1 124 0
 375 00f4 00BF     		nop
 376              	.L10:
 125:debug.c       ****         }
 126:debug.c       **** 
 127:debug.c       ****     #endif 
 128:debug.c       **** }
 377              		.loc 1 128 0
 378 00f6 07F61407 		addw	r7, r7, #2068
 379              		.cfi_def_cfa_offset 20
 380 00fa BD46     		mov	sp, r7
 381              		.cfi_def_cfa_register 13
 382              		@ sp needed
 383 00fc BDE88040 		pop	{r7, lr}
 384              		.cfi_restore 14
 385              		.cfi_restore 7
 386              		.cfi_def_cfa_offset 12
 387 0100 03B0     		add	sp, sp, #12
 388              		.cfi_restore 3
 389              		.cfi_restore 2
 390              		.cfi_restore 1
 391              		.cfi_def_cfa_offset 0
 392 0102 7047     		bx	lr
 393              	.L20:
 394              		.align	2
 395              	.L19:
 396 0104 00000000 		.word	.LC0
 397 0108 04000000 		.word	.LC1
 398 010c 14000000 		.word	.LC2
 399 0110 30000000 		.word	.LC3
 400 0114 4C000000 		.word	.LC4
 401 0118 54000000 		.word	.LC5
 402 011c 00000000 		.word	BB_fileName
 403 0120 00000000 		.word	debug_level
 404 0124 58000000 		.word	.LC6
 405              		.cfi_endproc
 406              	.LFE69:
 407              		.size	printNotif, .-printNotif
 408              		.section	.rodata
 409 0072 0000     		.align	2
 410              	.LC7:
 411 0074 22657665 		.ascii	"\"event\":\"test\" \000"
 411      6E74223A 
 411      22746573 
 411      74222000 
 412              		.align	2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 11


 413              	.LC8:
 414 0084 226E616D 		.ascii	"\"name\":\"%s\" \000"
 414      65223A22 
 414      25732220 
 414      00
 415 0091 000000   		.align	2
 416              	.LC9:
 417 0094 22737461 		.ascii	"\"status\":\"%d\" \000"
 417      74757322 
 417      3A222564 
 417      222000
 418 00a3 00       		.align	2
 419              	.LC10:
 420 00a4 22726561 		.ascii	"\"reason\":\"%s\" \000"
 420      736F6E22 
 420      3A222573 
 420      222000
 421 00b3 00       		.align	2
 422              	.LC11:
 423 00b4 7D0D0A00 		.ascii	"}\015\012\000"
 424              		.section	.text.printTestStatus,"ax",%progbits
 425              		.align	2
 426              		.global	printTestStatus
 427              		.thumb
 428              		.thumb_func
 429              		.type	printTestStatus, %function
 430              	printTestStatus:
 431              	.LFB70:
 129:debug.c       **** 
 130:debug.c       **** // Print debug test status
 131:debug.c       **** void printTestStatus(test_t test){
 432              		.loc 1 131 0
 433              		.cfi_startproc
 434              		@ args = 388, pretend = 16, frame = 0
 435              		@ frame_needed = 1, uses_anonymous_args = 0
 436 0000 84B0     		sub	sp, sp, #16
 437              		.cfi_def_cfa_offset 16
 438 0002 80B5     		push	{r7, lr}
 439              		.cfi_def_cfa_offset 24
 440              		.cfi_offset 7, -24
 441              		.cfi_offset 14, -20
 442 0004 00AF     		add	r7, sp, #0
 443              		.cfi_def_cfa_register 7
 444 0006 07F1080E 		add	lr, r7, #8
 445 000a 8EE80F00 		stmia	lr, {r0, r1, r2, r3}
 132:debug.c       ****     // if debug flag = 1
 133:debug.c       ****     #if USE_DEBUG
 134:debug.c       ****         printd("{ ");
 446              		.loc 1 134 0
 447 000e 1348     		ldr	r0, .L22
 448 0010 FFF7FEFF 		bl	printd
 135:debug.c       ****         printd("\"time\":\"%ld\" " , getTimeStamp());
 449              		.loc 1 135 0
 450 0014 FFF7FEFF 		bl	getTimeStamp
 451 0018 0346     		mov	r3, r0
 452 001a 1946     		mov	r1, r3
 453 001c 1048     		ldr	r0, .L22+4
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 12


 454 001e FFF7FEFF 		bl	printd
 136:debug.c       ****         
 137:debug.c       ****         printd("\"event\":\"test\" ");
 455              		.loc 1 137 0
 456 0022 1048     		ldr	r0, .L22+8
 457 0024 FFF7FEFF 		bl	printd
 138:debug.c       ****         printd("\"name\":\"%s\" ", test.test_name);
 458              		.loc 1 138 0
 459 0028 07F10801 		add	r1, r7, #8
 460 002c 0E48     		ldr	r0, .L22+12
 461 002e FFF7FEFF 		bl	printd
 139:debug.c       ****         printd("\"status\":\"%d\" ", test.status);
 462              		.loc 1 139 0
 463 0032 97F88830 		ldrb	r3, [r7, #136]	@ zero_extendqisi2
 464 0036 1946     		mov	r1, r3
 465 0038 0C48     		ldr	r0, .L22+16
 466 003a FFF7FEFF 		bl	printd
 140:debug.c       ****         printd("\"reason\":\"%s\" ", test.reason);
 467              		.loc 1 140 0
 468 003e 07F18903 		add	r3, r7, #137
 469 0042 1946     		mov	r1, r3
 470 0044 0A48     		ldr	r0, .L22+20
 471 0046 FFF7FEFF 		bl	printd
 141:debug.c       **** 
 142:debug.c       ****         printd("}\r\n");
 472              		.loc 1 142 0
 473 004a 0A48     		ldr	r0, .L22+24
 474 004c FFF7FEFF 		bl	printd
 143:debug.c       ****     #endif
 144:debug.c       ****    
 145:debug.c       **** }
 475              		.loc 1 145 0
 476 0050 00BF     		nop
 477 0052 BD46     		mov	sp, r7
 478              		.cfi_def_cfa_register 13
 479              		@ sp needed
 480 0054 BDE88040 		pop	{r7, lr}
 481              		.cfi_restore 14
 482              		.cfi_restore 7
 483              		.cfi_def_cfa_offset 16
 484 0058 04B0     		add	sp, sp, #16
 485              		.cfi_def_cfa_offset 0
 486 005a 7047     		bx	lr
 487              	.L23:
 488              		.align	2
 489              	.L22:
 490 005c 00000000 		.word	.LC0
 491 0060 04000000 		.word	.LC1
 492 0064 74000000 		.word	.LC7
 493 0068 84000000 		.word	.LC8
 494 006c 94000000 		.word	.LC9
 495 0070 A4000000 		.word	.LC10
 496 0074 B4000000 		.word	.LC11
 497              		.cfi_endproc
 498              	.LFE70:
 499              		.size	printTestStatus, .-printTestStatus
 500              		.section	.text.getTimeStamp,"ax",%progbits
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 13


 501              		.align	2
 502              		.global	getTimeStamp
 503              		.thumb
 504              		.thumb_func
 505              		.type	getTimeStamp, %function
 506              	getTimeStamp:
 507              	.LFB71:
 146:debug.c       **** 
 147:debug.c       **** 
 148:debug.c       **** // Returns local times in epoch seconds (seconds since Jan 1, 1970)
 149:debug.c       **** // Can also cast this to a t_of_day struct
 150:debug.c       **** long getTimeStamp(){
 508              		.loc 1 150 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 48
 511              		@ frame_needed = 1, uses_anonymous_args = 0
 512 0000 80B5     		push	{r7, lr}
 513              		.cfi_def_cfa_offset 8
 514              		.cfi_offset 7, -8
 515              		.cfi_offset 14, -4
 516 0002 8CB0     		sub	sp, sp, #48
 517              		.cfi_def_cfa_offset 56
 518 0004 00AF     		add	r7, sp, #0
 519              		.cfi_def_cfa_register 7
 151:debug.c       ****     // RTC_TIME_DATE * RTC_ReadTime(void) Description: Reads the current time and date. Parameters:
 152:debug.c       ****     // Creates a variable named localTime that is a pointer to RTC_TIME_DATE. It saves the time and
 153:debug.c       ****     RTC_TIME_DATE *localTime = RTC_ReadTime();
 520              		.loc 1 153 0
 521 0006 FFF7FEFF 		bl	RTC_ReadTime
 522 000a F862     		str	r0, [r7, #44]
 154:debug.c       ****    
 155:debug.c       ****     struct tm t; // creates variable t of struct tm
 156:debug.c       ****     time_t t_of_day;
 157:debug.c       **** 
 158:debug.c       ****     // sets each variable to the correct time 
 159:debug.c       ****     t.tm_sec = localTime->Sec;
 523              		.loc 1 159 0
 524 000c FB6A     		ldr	r3, [r7, #44]
 525 000e 1B78     		ldrb	r3, [r3]
 526 0010 DBB2     		uxtb	r3, r3
 527 0012 7B60     		str	r3, [r7, #4]
 160:debug.c       ****     t.tm_min = localTime->Min;
 528              		.loc 1 160 0
 529 0014 FB6A     		ldr	r3, [r7, #44]
 530 0016 5B78     		ldrb	r3, [r3, #1]
 531 0018 DBB2     		uxtb	r3, r3
 532 001a BB60     		str	r3, [r7, #8]
 161:debug.c       ****     t.tm_hour = localTime->Hour;
 533              		.loc 1 161 0
 534 001c FB6A     		ldr	r3, [r7, #44]
 535 001e 9B78     		ldrb	r3, [r3, #2]
 536 0020 DBB2     		uxtb	r3, r3
 537 0022 FB60     		str	r3, [r7, #12]
 162:debug.c       ****     t.tm_year = localTime->Year - 1900;  // Year - 1900
 538              		.loc 1 162 0
 539 0024 FB6A     		ldr	r3, [r7, #44]
 540 0026 5B89     		ldrh	r3, [r3, #10]	@ movhi
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 14


 541 0028 9BB2     		uxth	r3, r3
 542 002a A3F26C73 		subw	r3, r3, #1900
 543 002e BB61     		str	r3, [r7, #24]
 163:debug.c       ****     t.tm_mon = localTime->Month;           // Month, where 0 = jan
 544              		.loc 1 163 0
 545 0030 FB6A     		ldr	r3, [r7, #44]
 546 0032 1B7A     		ldrb	r3, [r3, #8]
 547 0034 DBB2     		uxtb	r3, r3
 548 0036 7B61     		str	r3, [r7, #20]
 164:debug.c       ****     t.tm_mday = localTime->DayOfMonth;          // Day of the month
 549              		.loc 1 164 0
 550 0038 FB6A     		ldr	r3, [r7, #44]
 551 003a 1B79     		ldrb	r3, [r3, #4]
 552 003c DBB2     		uxtb	r3, r3
 553 003e 3B61     		str	r3, [r7, #16]
 165:debug.c       ****     t.tm_isdst = 0;        // Is Daylight Savings on? 1 = yes, 0 = no, -1 = unknown
 554              		.loc 1 165 0
 555 0040 0023     		movs	r3, #0
 556 0042 7B62     		str	r3, [r7, #36]
 166:debug.c       ****     
 167:debug.c       ****     // the mktime() function converts a broken-down local time (pointed to by timeptr) and returns 
 168:debug.c       ****     // the syntax for the mktime function in the C Language is: time_t mktime(struct tm *timeptr);
 169:debug.c       ****     // creates variable t_of_day of type time_t
 170:debug.c       ****     t_of_day = mktime(&t); // determines a calendar time
 557              		.loc 1 170 0
 558 0044 3B1D     		adds	r3, r7, #4
 559 0046 1846     		mov	r0, r3
 560 0048 FFF7FEFF 		bl	mktime
 561 004c B862     		str	r0, [r7, #40]
 171:debug.c       **** 
 172:debug.c       ****     return (long) t_of_day;
 562              		.loc 1 172 0
 563 004e BB6A     		ldr	r3, [r7, #40]
 173:debug.c       **** }
 564              		.loc 1 173 0
 565 0050 1846     		mov	r0, r3
 566 0052 3037     		adds	r7, r7, #48
 567              		.cfi_def_cfa_offset 8
 568 0054 BD46     		mov	sp, r7
 569              		.cfi_def_cfa_register 13
 570              		@ sp needed
 571 0056 80BD     		pop	{r7, pc}
 572              		.cfi_endproc
 573              	.LFE71:
 574              		.size	getTimeStamp, .-getTimeStamp
 575              		.section	.text.stripEscapeCharacters,"ax",%progbits
 576              		.align	2
 577              		.global	stripEscapeCharacters
 578              		.thumb
 579              		.thumb_func
 580              		.type	stripEscapeCharacters, %function
 581              	stripEscapeCharacters:
 582              	.LFB72:
 174:debug.c       **** 
 175:debug.c       **** // The C library function char *strchr(const char *str, int c) searches for the first occurrence of
 176:debug.c       **** // Format for strchr() function: char *strchr(const char *str, int c).
 177:debug.c       **** void stripEscapeCharacters(char *string){
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 15


 583              		.loc 1 177 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 16
 586              		@ frame_needed = 1, uses_anonymous_args = 0
 587 0000 80B5     		push	{r7, lr}
 588              		.cfi_def_cfa_offset 8
 589              		.cfi_offset 7, -8
 590              		.cfi_offset 14, -4
 591 0002 84B0     		sub	sp, sp, #16
 592              		.cfi_def_cfa_offset 24
 593 0004 00AF     		add	r7, sp, #0
 594              		.cfi_def_cfa_register 7
 595 0006 7860     		str	r0, [r7, #4]
 178:debug.c       **** 
 179:debug.c       ****   char * pch;
 180:debug.c       ****   pch=strchr(string,'\n');
 596              		.loc 1 180 0
 597 0008 0A21     		movs	r1, #10
 598 000a 7868     		ldr	r0, [r7, #4]
 599 000c FFF7FEFF 		bl	strchr
 600 0010 F860     		str	r0, [r7, #12]
 181:debug.c       ****   while (pch!=NULL)
 601              		.loc 1 181 0
 602 0012 0EE0     		b	.L27
 603              	.L28:
 182:debug.c       ****   {
 183:debug.c       ****     string[pch-string+1] = 0;
 604              		.loc 1 183 0
 605 0014 FA68     		ldr	r2, [r7, #12]
 606 0016 7B68     		ldr	r3, [r7, #4]
 607 0018 D31A     		subs	r3, r2, r3
 608 001a 0133     		adds	r3, r3, #1
 609 001c 7A68     		ldr	r2, [r7, #4]
 610 001e 1344     		add	r3, r3, r2
 611 0020 0022     		movs	r2, #0
 612 0022 1A70     		strb	r2, [r3]
 184:debug.c       ****     pch=strchr(pch+1,'s');
 613              		.loc 1 184 0
 614 0024 FB68     		ldr	r3, [r7, #12]
 615 0026 0133     		adds	r3, r3, #1
 616 0028 7321     		movs	r1, #115
 617 002a 1846     		mov	r0, r3
 618 002c FFF7FEFF 		bl	strchr
 619 0030 F860     		str	r0, [r7, #12]
 620              	.L27:
 181:debug.c       ****   while (pch!=NULL)
 621              		.loc 1 181 0
 622 0032 FB68     		ldr	r3, [r7, #12]
 623 0034 002B     		cmp	r3, #0
 624 0036 EDD1     		bne	.L28
 185:debug.c       ****   }
 186:debug.c       **** }
 625              		.loc 1 186 0
 626 0038 00BF     		nop
 627 003a 1037     		adds	r7, r7, #16
 628              		.cfi_def_cfa_offset 8
 629 003c BD46     		mov	sp, r7
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 16


 630              		.cfi_def_cfa_register 13
 631              		@ sp needed
 632 003e 80BD     		pop	{r7, pc}
 633              		.cfi_endproc
 634              	.LFE72:
 635              		.size	stripEscapeCharacters, .-stripEscapeCharacters
 636              		.section	.text.strextract,"ax",%progbits
 637              		.align	2
 638              		.global	strextract
 639              		.thumb
 640              		.thumb_func
 641              		.type	strextract, %function
 642              	strextract:
 643              	.LFB73:
 187:debug.c       **** 
 188:debug.c       **** // Extract
 189:debug.c       **** char *strextract(const char input_str[], char output_str[],
 190:debug.c       ****                  const char search_start[], const char search_end[]) {
 644              		.loc 1 190 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 24
 647              		@ frame_needed = 1, uses_anonymous_args = 0
 648 0000 80B5     		push	{r7, lr}
 649              		.cfi_def_cfa_offset 8
 650              		.cfi_offset 7, -8
 651              		.cfi_offset 14, -4
 652 0002 86B0     		sub	sp, sp, #24
 653              		.cfi_def_cfa_offset 32
 654 0004 00AF     		add	r7, sp, #0
 655              		.cfi_def_cfa_register 7
 656 0006 F860     		str	r0, [r7, #12]
 657 0008 B960     		str	r1, [r7, #8]
 658 000a 7A60     		str	r2, [r7, #4]
 659 000c 3B60     		str	r3, [r7]
 191:debug.c       ****     if (input_str == NULL) return NULL;
 660              		.loc 1 191 0
 661 000e FB68     		ldr	r3, [r7, #12]
 662 0010 002B     		cmp	r3, #0
 663 0012 01D1     		bne	.L30
 664              		.loc 1 191 0 is_stmt 0 discriminator 1
 665 0014 0023     		movs	r3, #0
 666 0016 29E0     		b	.L31
 667              	.L30:
 192:debug.c       ****     char *begin, *end = NULL;
 668              		.loc 1 192 0 is_stmt 1
 669 0018 0023     		movs	r3, #0
 670 001a 7B61     		str	r3, [r7, #20]
 193:debug.c       **** 
 194:debug.c       ****     // strstr(): char *strstr(const char *haystack, const char *needle). haystack - main C string t
 195:debug.c       ****     if ((begin = strstr(input_str, search_start))) {
 671              		.loc 1 195 0
 672 001c 7968     		ldr	r1, [r7, #4]
 673 001e F868     		ldr	r0, [r7, #12]
 674 0020 FFF7FEFF 		bl	strstr
 675 0024 3861     		str	r0, [r7, #16]
 676 0026 3B69     		ldr	r3, [r7, #16]
 677 0028 002B     		cmp	r3, #0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 17


 678 002a 1ED0     		beq	.L32
 196:debug.c       ****         // The strlen() function calculates the length of a given string. The strlen() function tak
 197:debug.c       ****         begin += strlen(search_start);
 679              		.loc 1 197 0
 680 002c 7868     		ldr	r0, [r7, #4]
 681 002e FFF7FEFF 		bl	strlen
 682 0032 0246     		mov	r2, r0
 683 0034 3B69     		ldr	r3, [r7, #16]
 684 0036 1344     		add	r3, r3, r2
 685 0038 3B61     		str	r3, [r7, #16]
 198:debug.c       ****         if ((end = strstr(begin, search_end))) {
 686              		.loc 1 198 0
 687 003a 3968     		ldr	r1, [r7]
 688 003c 3869     		ldr	r0, [r7, #16]
 689 003e FFF7FEFF 		bl	strstr
 690 0042 7861     		str	r0, [r7, #20]
 691 0044 7B69     		ldr	r3, [r7, #20]
 692 0046 002B     		cmp	r3, #0
 693 0048 0FD0     		beq	.L32
 199:debug.c       ****             // strncpy(: char *strncpy(char *dest, const char *src, size_t n). dest -  pointer to t
 200:debug.c       ****             strncpy(output_str, begin, end - begin);
 694              		.loc 1 200 0
 695 004a 7A69     		ldr	r2, [r7, #20]
 696 004c 3B69     		ldr	r3, [r7, #16]
 697 004e D31A     		subs	r3, r2, r3
 698 0050 1A46     		mov	r2, r3
 699 0052 3969     		ldr	r1, [r7, #16]
 700 0054 B868     		ldr	r0, [r7, #8]
 701 0056 FFF7FEFF 		bl	strncpy
 201:debug.c       ****             output_str[end - begin] = '\0';
 702              		.loc 1 201 0
 703 005a 7A69     		ldr	r2, [r7, #20]
 704 005c 3B69     		ldr	r3, [r7, #16]
 705 005e D31A     		subs	r3, r2, r3
 706 0060 1A46     		mov	r2, r3
 707 0062 BB68     		ldr	r3, [r7, #8]
 708 0064 1344     		add	r3, r3, r2
 709 0066 0022     		movs	r2, #0
 710 0068 1A70     		strb	r2, [r3]
 711              	.L32:
 202:debug.c       ****         }
 203:debug.c       ****     }
 204:debug.c       **** 
 205:debug.c       ****     return end;
 712              		.loc 1 205 0
 713 006a 7B69     		ldr	r3, [r7, #20]
 714              	.L31:
 206:debug.c       **** }
 715              		.loc 1 206 0
 716 006c 1846     		mov	r0, r3
 717 006e 1837     		adds	r7, r7, #24
 718              		.cfi_def_cfa_offset 8
 719 0070 BD46     		mov	sp, r7
 720              		.cfi_def_cfa_register 13
 721              		@ sp needed
 722 0072 80BD     		pop	{r7, pc}
 723              		.cfi_endproc
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 18


 724              	.LFE73:
 725              		.size	strextract, .-strextract
 726              		.section	.text.printd,"ax",%progbits
 727              		.align	2
 728              		.global	printd
 729              		.thumb
 730              		.thumb_func
 731              		.type	printd, %function
 732              	printd:
 733              	.LFB74:
 207:debug.c       **** 
 208:debug.c       **** //out attempt at a safe (from buffer overflow) version of printf     
 209:debug.c       **** void printd(char* format, ...){
 734              		.loc 1 209 0
 735              		.cfi_startproc
 736              		@ args = 4, pretend = 16, frame = 2056
 737              		@ frame_needed = 1, uses_anonymous_args = 1
 738 0000 0FB4     		push	{r0, r1, r2, r3}
 739              		.cfi_def_cfa_offset 16
 740              		.cfi_offset 0, -16
 741              		.cfi_offset 1, -12
 742              		.cfi_offset 2, -8
 743              		.cfi_offset 3, -4
 744 0002 80B5     		push	{r7, lr}
 745              		.cfi_def_cfa_offset 24
 746              		.cfi_offset 7, -24
 747              		.cfi_offset 14, -20
 748 0004 ADF6080D 		subw	sp, sp, #2056
 749              		.cfi_def_cfa_offset 2080
 750 0008 00AF     		add	r7, sp, #0
 751              		.cfi_def_cfa_register 7
 210:debug.c       ****     
 211:debug.c       ****     va_list argptr; // Create variable argptr of data structure va_list
 212:debug.c       ****     va_start(argptr, format); // void va_start(va_list ap, last_arg) initializes ap variable to be 
 752              		.loc 1 212 0
 753 000a 07F61403 		addw	r3, r7, #2068
 754 000e C7F80438 		str	r3, [r7, #2052]
 213:debug.c       ****     
 214:debug.c       ****     // Create character array debug_string of size MAX_DEBUG_STRING_LENGTH
 215:debug.c       ****     char debug_string[MAX_DEBUG_STRING_LENGTH];
 216:debug.c       ****     // The vsnprintf() used to write a formatted string to a string buffer.vsnprintf(debug_string,M
 217:debug.c       ****     vsnprintf(debug_string,MAX_DEBUG_STRING_LENGTH,format, argptr);
 755              		.loc 1 217 0
 756 0012 381D     		adds	r0, r7, #4
 757 0014 D7F80438 		ldr	r3, [r7, #2052]
 758 0018 D7F81028 		ldr	r2, [r7, #2064]
 759 001c 4FF40061 		mov	r1, #2048
 760 0020 FFF7FEFF 		bl	vsnprintf
 218:debug.c       ****     // Sends a NULL terminated string to the TX buffer for transmission.
 219:debug.c       ****     Debug_UART_PutString(debug_string);
 761              		.loc 1 219 0
 762 0024 3B1D     		adds	r3, r7, #4
 763 0026 1846     		mov	r0, r3
 764 0028 FFF7FEFF 		bl	Debug_UART_PutString
 220:debug.c       ****     
 221:debug.c       ****     va_end(argptr); // macro void va_end(va_list ap) allows a function with variable arguments whic
 222:debug.c       ****     
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 19


 223:debug.c       **** }
 765              		.loc 1 223 0
 766 002c 00BF     		nop
 767 002e 07F60807 		addw	r7, r7, #2056
 768              		.cfi_def_cfa_offset 24
 769 0032 BD46     		mov	sp, r7
 770              		.cfi_def_cfa_register 13
 771              		@ sp needed
 772 0034 BDE88040 		pop	{r7, lr}
 773              		.cfi_restore 14
 774              		.cfi_restore 7
 775              		.cfi_def_cfa_offset 16
 776 0038 04B0     		add	sp, sp, #16
 777              		.cfi_restore 3
 778              		.cfi_restore 2
 779              		.cfi_restore 1
 780              		.cfi_restore 0
 781              		.cfi_def_cfa_offset 0
 782 003a 7047     		bx	lr
 783              		.cfi_endproc
 784              	.LFE74:
 785              		.size	printd, .-printd
 786              		.text
 787              	.Letext0:
 788              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 789              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 790              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 791              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 792              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 793              		.file 7 "Generated_Source\\PSoC5/cytypes.h"
 794              		.file 8 "Generated_Source\\PSoC5/RTC.h"
 795              		.file 9 "testing.h"
 796              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 797              		.file 11 "<built-in>"
 798              		.section	.debug_info,"",%progbits
 799              	.Ldebug_info0:
 800 0000 FD040000 		.4byte	0x4fd
 801 0004 0400     		.2byte	0x4
 802 0006 00000000 		.4byte	.Ldebug_abbrev0
 803 000a 04       		.byte	0x4
 804 000b 01       		.uleb128 0x1
 805 000c 66000000 		.4byte	.LASF70
 806 0010 0C       		.byte	0xc
 807 0011 42010000 		.4byte	.LASF71
 808 0015 27020000 		.4byte	.LASF72
 809 0019 00000000 		.4byte	.Ldebug_ranges0+0
 810 001d 00000000 		.4byte	0
 811 0021 00000000 		.4byte	.Ldebug_line0
 812 0025 02       		.uleb128 0x2
 813 0026 01       		.byte	0x1
 814 0027 06       		.byte	0x6
 815 0028 DD010000 		.4byte	.LASF0
 816 002c 02       		.uleb128 0x2
 817 002d 01       		.byte	0x1
 818 002e 08       		.byte	0x8
 819 002f C5010000 		.4byte	.LASF1
 820 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 20


 821 0034 02       		.byte	0x2
 822 0035 05       		.byte	0x5
 823 0036 3D000000 		.4byte	.LASF2
 824 003a 02       		.uleb128 0x2
 825 003b 02       		.byte	0x2
 826 003c 07       		.byte	0x7
 827 003d 77020000 		.4byte	.LASF3
 828 0041 03       		.uleb128 0x3
 829 0042 34030000 		.4byte	.LASF10
 830 0046 02       		.byte	0x2
 831 0047 3F       		.byte	0x3f
 832 0048 4C000000 		.4byte	0x4c
 833 004c 02       		.uleb128 0x2
 834 004d 04       		.byte	0x4
 835 004e 05       		.byte	0x5
 836 004f A4020000 		.4byte	.LASF4
 837 0053 02       		.uleb128 0x2
 838 0054 04       		.byte	0x4
 839 0055 07       		.byte	0x7
 840 0056 08030000 		.4byte	.LASF5
 841 005a 02       		.uleb128 0x2
 842 005b 08       		.byte	0x8
 843 005c 05       		.byte	0x5
 844 005d FC000000 		.4byte	.LASF6
 845 0061 02       		.uleb128 0x2
 846 0062 08       		.byte	0x8
 847 0063 07       		.byte	0x7
 848 0064 F1010000 		.4byte	.LASF7
 849 0068 04       		.uleb128 0x4
 850 0069 04       		.byte	0x4
 851 006a 05       		.byte	0x5
 852 006b 696E7400 		.ascii	"int\000"
 853 006f 02       		.uleb128 0x2
 854 0070 04       		.byte	0x4
 855 0071 07       		.byte	0x7
 856 0072 0D020000 		.4byte	.LASF8
 857 0076 02       		.uleb128 0x2
 858 0077 08       		.byte	0x8
 859 0078 04       		.byte	0x4
 860 0079 B9010000 		.4byte	.LASF9
 861 007d 03       		.uleb128 0x3
 862 007e 47030000 		.4byte	.LASF11
 863 0082 03       		.byte	0x3
 864 0083 28       		.byte	0x28
 865 0084 88000000 		.4byte	0x88
 866 0088 05       		.uleb128 0x5
 867 0089 7D010000 		.4byte	.LASF16
 868 008d 04       		.byte	0x4
 869 008e 0B       		.byte	0xb
 870 008f 00       		.byte	0
 871 0090 9F000000 		.4byte	0x9f
 872 0094 06       		.uleb128 0x6
 873 0095 1A020000 		.4byte	.LASF73
 874 0099 9F000000 		.4byte	0x9f
 875 009d 00       		.byte	0
 876 009e 00       		.byte	0
 877 009f 07       		.uleb128 0x7
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 21


 878 00a0 04       		.byte	0x4
 879 00a1 02       		.uleb128 0x2
 880 00a2 04       		.byte	0x4
 881 00a3 07       		.byte	0x7
 882 00a4 3E030000 		.4byte	.LASF12
 883 00a8 08       		.uleb128 0x8
 884 00a9 04       		.byte	0x4
 885 00aa AE000000 		.4byte	0xae
 886 00ae 02       		.uleb128 0x2
 887 00af 01       		.byte	0x1
 888 00b0 08       		.byte	0x8
 889 00b1 98020000 		.4byte	.LASF13
 890 00b5 08       		.uleb128 0x8
 891 00b6 04       		.byte	0x4
 892 00b7 BB000000 		.4byte	0xbb
 893 00bb 09       		.uleb128 0x9
 894 00bc AE000000 		.4byte	0xae
 895 00c0 03       		.uleb128 0x3
 896 00c1 BD020000 		.4byte	.LASF14
 897 00c5 04       		.byte	0x4
 898 00c6 2C       		.byte	0x2c
 899 00c7 41000000 		.4byte	0x41
 900 00cb 03       		.uleb128 0x3
 901 00cc 76010000 		.4byte	.LASF15
 902 00d0 05       		.byte	0x5
 903 00d1 28       		.byte	0x28
 904 00d2 4C000000 		.4byte	0x4c
 905 00d6 0A       		.uleb128 0xa
 906 00d7 746D00   		.ascii	"tm\000"
 907 00da 24       		.byte	0x24
 908 00db 06       		.byte	0x6
 909 00dc 21       		.byte	0x21
 910 00dd 4E010000 		.4byte	0x14e
 911 00e1 0B       		.uleb128 0xb
 912 00e2 6E030000 		.4byte	.LASF17
 913 00e6 06       		.byte	0x6
 914 00e7 23       		.byte	0x23
 915 00e8 68000000 		.4byte	0x68
 916 00ec 00       		.byte	0
 917 00ed 0B       		.uleb128 0xb
 918 00ee 5B010000 		.4byte	.LASF18
 919 00f2 06       		.byte	0x6
 920 00f3 24       		.byte	0x24
 921 00f4 68000000 		.4byte	0x68
 922 00f8 04       		.byte	0x4
 923 00f9 0B       		.uleb128 0xb
 924 00fa 09000000 		.4byte	.LASF19
 925 00fe 06       		.byte	0x6
 926 00ff 25       		.byte	0x25
 927 0100 68000000 		.4byte	0x68
 928 0104 08       		.byte	0x8
 929 0105 0B       		.uleb128 0xb
 930 0106 1F020000 		.4byte	.LASF20
 931 010a 06       		.byte	0x6
 932 010b 26       		.byte	0x26
 933 010c 68000000 		.4byte	0x68
 934 0110 0C       		.byte	0xc
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 22


 935 0111 0B       		.uleb128 0xb
 936 0112 68010000 		.4byte	.LASF21
 937 0116 06       		.byte	0x6
 938 0117 27       		.byte	0x27
 939 0118 68000000 		.4byte	0x68
 940 011c 10       		.byte	0x10
 941 011d 0B       		.uleb128 0xb
 942 011e E9010000 		.4byte	.LASF22
 943 0122 06       		.byte	0x6
 944 0123 28       		.byte	0x28
 945 0124 68000000 		.4byte	0x68
 946 0128 14       		.byte	0x14
 947 0129 0B       		.uleb128 0xb
 948 012a F4000000 		.4byte	.LASF23
 949 012e 06       		.byte	0x6
 950 012f 29       		.byte	0x29
 951 0130 68000000 		.4byte	0x68
 952 0134 18       		.byte	0x18
 953 0135 0B       		.uleb128 0xb
 954 0136 D2020000 		.4byte	.LASF24
 955 013a 06       		.byte	0x6
 956 013b 2A       		.byte	0x2a
 957 013c 68000000 		.4byte	0x68
 958 0140 1C       		.byte	0x1c
 959 0141 0B       		.uleb128 0xb
 960 0142 F4020000 		.4byte	.LASF25
 961 0146 06       		.byte	0x6
 962 0147 2B       		.byte	0x2b
 963 0148 68000000 		.4byte	0x68
 964 014c 20       		.byte	0x20
 965 014d 00       		.byte	0
 966 014e 0C       		.uleb128 0xc
 967 014f 4A010000 		.4byte	.LASF26
 968 0153 07       		.byte	0x7
 969 0154 9201     		.2byte	0x192
 970 0156 2C000000 		.4byte	0x2c
 971 015a 0C       		.uleb128 0xc
 972 015b 33010000 		.4byte	.LASF27
 973 015f 07       		.byte	0x7
 974 0160 9301     		.2byte	0x193
 975 0162 3A000000 		.4byte	0x3a
 976 0166 02       		.uleb128 0x2
 977 0167 04       		.byte	0x4
 978 0168 04       		.byte	0x4
 979 0169 62010000 		.4byte	.LASF28
 980 016d 02       		.uleb128 0x2
 981 016e 08       		.byte	0x8
 982 016f 04       		.byte	0x4
 983 0170 1A030000 		.4byte	.LASF29
 984 0174 0D       		.uleb128 0xd
 985 0175 0C       		.byte	0xc
 986 0176 08       		.byte	0x8
 987 0177 30       		.byte	0x30
 988 0178 DD010000 		.4byte	0x1dd
 989 017c 0E       		.uleb128 0xe
 990 017d 53656300 		.ascii	"Sec\000"
 991 0181 08       		.byte	0x8
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 23


 992 0182 32       		.byte	0x32
 993 0183 4E010000 		.4byte	0x14e
 994 0187 00       		.byte	0
 995 0188 0E       		.uleb128 0xe
 996 0189 4D696E00 		.ascii	"Min\000"
 997 018d 08       		.byte	0x8
 998 018e 33       		.byte	0x33
 999 018f 4E010000 		.4byte	0x14e
 1000 0193 01       		.byte	0x1
 1001 0194 0B       		.uleb128 0xb
 1002 0195 1E010000 		.4byte	.LASF30
 1003 0199 08       		.byte	0x8
 1004 019a 34       		.byte	0x34
 1005 019b 4E010000 		.4byte	0x14e
 1006 019f 02       		.byte	0x2
 1007 01a0 0B       		.uleb128 0xb
 1008 01a1 D3010000 		.4byte	.LASF31
 1009 01a5 08       		.byte	0x8
 1010 01a6 35       		.byte	0x35
 1011 01a7 4E010000 		.4byte	0x14e
 1012 01ab 03       		.byte	0x3
 1013 01ac 0B       		.uleb128 0xb
 1014 01ad 28010000 		.4byte	.LASF32
 1015 01b1 08       		.byte	0x8
 1016 01b2 36       		.byte	0x36
 1017 01b3 4E010000 		.4byte	0x14e
 1018 01b7 04       		.byte	0x4
 1019 01b8 0B       		.uleb128 0xb
 1020 01b9 98030000 		.4byte	.LASF33
 1021 01bd 08       		.byte	0x8
 1022 01be 37       		.byte	0x37
 1023 01bf 5A010000 		.4byte	0x15a
 1024 01c3 06       		.byte	0x6
 1025 01c4 0B       		.uleb128 0xb
 1026 01c5 B3010000 		.4byte	.LASF34
 1027 01c9 08       		.byte	0x8
 1028 01ca 38       		.byte	0x38
 1029 01cb 4E010000 		.4byte	0x14e
 1030 01cf 08       		.byte	0x8
 1031 01d0 0B       		.uleb128 0xb
 1032 01d1 AE010000 		.4byte	.LASF35
 1033 01d5 08       		.byte	0x8
 1034 01d6 39       		.byte	0x39
 1035 01d7 5A010000 		.4byte	0x15a
 1036 01db 0A       		.byte	0xa
 1037 01dc 00       		.byte	0
 1038 01dd 03       		.uleb128 0x3
 1039 01de 47000000 		.4byte	.LASF36
 1040 01e2 08       		.byte	0x8
 1041 01e3 3A       		.byte	0x3a
 1042 01e4 E8010000 		.4byte	0x1e8
 1043 01e8 0F       		.uleb128 0xf
 1044 01e9 74010000 		.4byte	0x174
 1045 01ed 10       		.uleb128 0x10
 1046 01ee 8101     		.2byte	0x181
 1047 01f0 09       		.byte	0x9
 1048 01f1 0A       		.byte	0xa
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 24


 1049 01f2 1B020000 		.4byte	0x21b
 1050 01f6 0B       		.uleb128 0xb
 1051 01f7 1D000000 		.4byte	.LASF37
 1052 01fb 09       		.byte	0x9
 1053 01fc 0C       		.byte	0xc
 1054 01fd 1B020000 		.4byte	0x21b
 1055 0201 00       		.byte	0
 1056 0202 0B       		.uleb128 0xb
 1057 0203 8A020000 		.4byte	.LASF38
 1058 0207 09       		.byte	0x9
 1059 0208 0D       		.byte	0xd
 1060 0209 4E010000 		.4byte	0x14e
 1061 020d 80       		.byte	0x80
 1062 020e 0B       		.uleb128 0xb
 1063 020f 87010000 		.4byte	.LASF39
 1064 0213 09       		.byte	0x9
 1065 0214 0F       		.byte	0xf
 1066 0215 2B020000 		.4byte	0x22b
 1067 0219 81       		.byte	0x81
 1068 021a 00       		.byte	0
 1069 021b 11       		.uleb128 0x11
 1070 021c AE000000 		.4byte	0xae
 1071 0220 2B020000 		.4byte	0x22b
 1072 0224 12       		.uleb128 0x12
 1073 0225 A1000000 		.4byte	0xa1
 1074 0229 7F       		.byte	0x7f
 1075 022a 00       		.byte	0
 1076 022b 11       		.uleb128 0x11
 1077 022c AE000000 		.4byte	0xae
 1078 0230 3B020000 		.4byte	0x23b
 1079 0234 12       		.uleb128 0x12
 1080 0235 A1000000 		.4byte	0xa1
 1081 0239 FF       		.byte	0xff
 1082 023a 00       		.byte	0
 1083 023b 03       		.uleb128 0x3
 1084 023c 9D020000 		.4byte	.LASF40
 1085 0240 09       		.byte	0x9
 1086 0241 10       		.byte	0x10
 1087 0242 ED010000 		.4byte	0x1ed
 1088 0246 03       		.uleb128 0x3
 1089 0247 3A010000 		.4byte	.LASF41
 1090 024b 03       		.byte	0x3
 1091 024c 62       		.byte	0x62
 1092 024d 7D000000 		.4byte	0x7d
 1093 0251 13       		.uleb128 0x13
 1094 0252 31000000 		.4byte	.LASF42
 1095 0256 01       		.byte	0x1
 1096 0257 0D       		.byte	0xd
 1097 0258 00000000 		.4byte	.LFB64
 1098 025c 0C000000 		.4byte	.LFE64-.LFB64
 1099 0260 01       		.uleb128 0x1
 1100 0261 9C       		.byte	0x9c
 1101 0262 13       		.uleb128 0x13
 1102 0263 FD020000 		.4byte	.LASF43
 1103 0267 01       		.byte	0x1
 1104 0268 17       		.byte	0x17
 1105 0269 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 25


 1106 026d 0C000000 		.4byte	.LFE65-.LFB65
 1107 0271 01       		.uleb128 0x1
 1108 0272 9C       		.byte	0x9c
 1109 0273 13       		.uleb128 0x13
 1110 0274 11000000 		.4byte	.LASF44
 1111 0278 01       		.byte	0x1
 1112 0279 1F       		.byte	0x1f
 1113 027a 00000000 		.4byte	.LFB66
 1114 027e 20000000 		.4byte	.LFE66-.LFB66
 1115 0282 01       		.uleb128 0x1
 1116 0283 9C       		.byte	0x9c
 1117 0284 13       		.uleb128 0x13
 1118 0285 56030000 		.4byte	.LASF45
 1119 0289 01       		.byte	0x1
 1120 028a 30       		.byte	0x30
 1121 028b 00000000 		.4byte	.LFB67
 1122 028f 0C000000 		.4byte	.LFE67-.LFB67
 1123 0293 01       		.uleb128 0x1
 1124 0294 9C       		.byte	0x9c
 1125 0295 14       		.uleb128 0x14
 1126 0296 0A010000 		.4byte	.LASF59
 1127 029a 01       		.byte	0x1
 1128 029b 42       		.byte	0x42
 1129 029c 68000000 		.4byte	0x68
 1130 02a0 00000000 		.4byte	.LFB68
 1131 02a4 38000000 		.4byte	.LFE68-.LFB68
 1132 02a8 01       		.uleb128 0x1
 1133 02a9 9C       		.byte	0x9c
 1134 02aa E5020000 		.4byte	0x2e5
 1135 02ae 15       		.uleb128 0x15
 1136 02af 23010000 		.4byte	.LASF46
 1137 02b3 01       		.byte	0x1
 1138 02b4 42       		.byte	0x42
 1139 02b5 68000000 		.4byte	0x68
 1140 02b9 02       		.uleb128 0x2
 1141 02ba 91       		.byte	0x91
 1142 02bb 6C       		.sleb128 -20
 1143 02bc 16       		.uleb128 0x16
 1144 02bd 70747200 		.ascii	"ptr\000"
 1145 02c1 01       		.byte	0x1
 1146 02c2 42       		.byte	0x42
 1147 02c3 A8000000 		.4byte	0xa8
 1148 02c7 02       		.uleb128 0x2
 1149 02c8 91       		.byte	0x91
 1150 02c9 68       		.sleb128 -24
 1151 02ca 16       		.uleb128 0x16
 1152 02cb 6C656E00 		.ascii	"len\000"
 1153 02cf 01       		.byte	0x1
 1154 02d0 42       		.byte	0x42
 1155 02d1 68000000 		.4byte	0x68
 1156 02d5 02       		.uleb128 0x2
 1157 02d6 91       		.byte	0x91
 1158 02d7 64       		.sleb128 -28
 1159 02d8 17       		.uleb128 0x17
 1160 02d9 6900     		.ascii	"i\000"
 1161 02db 01       		.byte	0x1
 1162 02dc 44       		.byte	0x44
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 26


 1163 02dd 68000000 		.4byte	0x68
 1164 02e1 02       		.uleb128 0x2
 1165 02e2 91       		.byte	0x91
 1166 02e3 74       		.sleb128 -12
 1167 02e4 00       		.byte	0
 1168 02e5 18       		.uleb128 0x18
 1169 02e6 63030000 		.4byte	.LASF51
 1170 02ea 01       		.byte	0x1
 1171 02eb 55       		.byte	0x55
 1172 02ec 00000000 		.4byte	.LFB69
 1173 02f0 28010000 		.4byte	.LFE69-.LFB69
 1174 02f4 01       		.uleb128 0x1
 1175 02f5 9C       		.byte	0x9c
 1176 02f6 5E030000 		.4byte	0x35e
 1177 02fa 15       		.uleb128 0x15
 1178 02fb 08020000 		.4byte	.LASF47
 1179 02ff 01       		.byte	0x1
 1180 0300 55       		.byte	0x55
 1181 0301 4E010000 		.4byte	0x14e
 1182 0305 03       		.uleb128 0x3
 1183 0306 91       		.byte	0x91
 1184 0307 DF6F     		.sleb128 -2081
 1185 0309 15       		.uleb128 0x15
 1186 030a 6F010000 		.4byte	.LASF48
 1187 030e 01       		.byte	0x1
 1188 030f 55       		.byte	0x55
 1189 0310 A8000000 		.4byte	0xa8
 1190 0314 02       		.uleb128 0x2
 1191 0315 91       		.byte	0x91
 1192 0316 74       		.sleb128 -12
 1193 0317 19       		.uleb128 0x19
 1194 0318 1A       		.uleb128 0x1a
 1195 0319 C5020000 		.4byte	.LASF49
 1196 031d 01       		.byte	0x1
 1197 031e 57       		.byte	0x57
 1198 031f 5E030000 		.4byte	0x35e
 1199 0323 03       		.uleb128 0x3
 1200 0324 91       		.byte	0x91
 1201 0325 E86F     		.sleb128 -2072
 1202 0327 1B       		.uleb128 0x1b
 1203 0328 20000000 		.4byte	.LBB2
 1204 032c 68000000 		.4byte	.LBE2-.LBB2
 1205 0330 44030000 		.4byte	0x344
 1206 0334 1A       		.uleb128 0x1a
 1207 0335 21030000 		.4byte	.LASF50
 1208 0339 01       		.byte	0x1
 1209 033a 65       		.byte	0x65
 1210 033b 46020000 		.4byte	0x246
 1211 033f 03       		.uleb128 0x3
 1212 0340 91       		.byte	0x91
 1213 0341 E46F     		.sleb128 -2076
 1214 0343 00       		.byte	0
 1215 0344 1C       		.uleb128 0x1c
 1216 0345 9A000000 		.4byte	.LBB3
 1217 0349 58000000 		.4byte	.LBE3-.LBB3
 1218 034d 1A       		.uleb128 0x1a
 1219 034e 21030000 		.4byte	.LASF50
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 27


 1220 0352 01       		.byte	0x1
 1221 0353 72       		.byte	0x72
 1222 0354 46020000 		.4byte	0x246
 1223 0358 03       		.uleb128 0x3
 1224 0359 91       		.byte	0x91
 1225 035a E06F     		.sleb128 -2080
 1226 035c 00       		.byte	0
 1227 035d 00       		.byte	0
 1228 035e 11       		.uleb128 0x11
 1229 035f AE000000 		.4byte	0xae
 1230 0363 6F030000 		.4byte	0x36f
 1231 0367 1D       		.uleb128 0x1d
 1232 0368 A1000000 		.4byte	0xa1
 1233 036c FF07     		.2byte	0x7ff
 1234 036e 00       		.byte	0
 1235 036f 18       		.uleb128 0x18
 1236 0370 AD020000 		.4byte	.LASF52
 1237 0374 01       		.byte	0x1
 1238 0375 83       		.byte	0x83
 1239 0376 00000000 		.4byte	.LFB70
 1240 037a 78000000 		.4byte	.LFE70-.LFB70
 1241 037e 01       		.uleb128 0x1
 1242 037f 9C       		.byte	0x9c
 1243 0380 93030000 		.4byte	0x393
 1244 0384 15       		.uleb128 0x15
 1245 0385 E4020000 		.4byte	.LASF53
 1246 0389 01       		.byte	0x1
 1247 038a 83       		.byte	0x83
 1248 038b 3B020000 		.4byte	0x23b
 1249 038f 02       		.uleb128 0x2
 1250 0390 91       		.byte	0x91
 1251 0391 70       		.sleb128 -16
 1252 0392 00       		.byte	0
 1253 0393 1E       		.uleb128 0x1e
 1254 0394 11010000 		.4byte	.LASF54
 1255 0398 01       		.byte	0x1
 1256 0399 96       		.byte	0x96
 1257 039a 4C000000 		.4byte	0x4c
 1258 039e 00000000 		.4byte	.LFB71
 1259 03a2 58000000 		.4byte	.LFE71-.LFB71
 1260 03a6 01       		.uleb128 0x1
 1261 03a7 9C       		.byte	0x9c
 1262 03a8 D5030000 		.4byte	0x3d5
 1263 03ac 1A       		.uleb128 0x1a
 1264 03ad DA020000 		.4byte	.LASF55
 1265 03b1 01       		.byte	0x1
 1266 03b2 99       		.byte	0x99
 1267 03b3 D5030000 		.4byte	0x3d5
 1268 03b7 02       		.uleb128 0x2
 1269 03b8 91       		.byte	0x91
 1270 03b9 74       		.sleb128 -12
 1271 03ba 17       		.uleb128 0x17
 1272 03bb 7400     		.ascii	"t\000"
 1273 03bd 01       		.byte	0x1
 1274 03be 9B       		.byte	0x9b
 1275 03bf D6000000 		.4byte	0xd6
 1276 03c3 02       		.uleb128 0x2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 28


 1277 03c4 91       		.byte	0x91
 1278 03c5 4C       		.sleb128 -52
 1279 03c6 1A       		.uleb128 0x1a
 1280 03c7 00000000 		.4byte	.LASF56
 1281 03cb 01       		.byte	0x1
 1282 03cc 9C       		.byte	0x9c
 1283 03cd CB000000 		.4byte	0xcb
 1284 03d1 02       		.uleb128 0x2
 1285 03d2 91       		.byte	0x91
 1286 03d3 70       		.sleb128 -16
 1287 03d4 00       		.byte	0
 1288 03d5 08       		.uleb128 0x8
 1289 03d6 04       		.byte	0x4
 1290 03d7 DD010000 		.4byte	0x1dd
 1291 03db 18       		.uleb128 0x18
 1292 03dc 82030000 		.4byte	.LASF57
 1293 03e0 01       		.byte	0x1
 1294 03e1 B1       		.byte	0xb1
 1295 03e2 00000000 		.4byte	.LFB72
 1296 03e6 40000000 		.4byte	.LFE72-.LFB72
 1297 03ea 01       		.uleb128 0x1
 1298 03eb 9C       		.byte	0x9c
 1299 03ec 0D040000 		.4byte	0x40d
 1300 03f0 15       		.uleb128 0x15
 1301 03f1 9B010000 		.4byte	.LASF58
 1302 03f5 01       		.byte	0x1
 1303 03f6 B1       		.byte	0xb1
 1304 03f7 A8000000 		.4byte	0xa8
 1305 03fb 02       		.uleb128 0x2
 1306 03fc 91       		.byte	0x91
 1307 03fd 6C       		.sleb128 -20
 1308 03fe 17       		.uleb128 0x17
 1309 03ff 70636800 		.ascii	"pch\000"
 1310 0403 01       		.byte	0x1
 1311 0404 B3       		.byte	0xb3
 1312 0405 A8000000 		.4byte	0xa8
 1313 0409 02       		.uleb128 0x2
 1314 040a 91       		.byte	0x91
 1315 040b 74       		.sleb128 -12
 1316 040c 00       		.byte	0
 1317 040d 14       		.uleb128 0x14
 1318 040e 55000000 		.4byte	.LASF60
 1319 0412 01       		.byte	0x1
 1320 0413 BD       		.byte	0xbd
 1321 0414 A8000000 		.4byte	0xa8
 1322 0418 00000000 		.4byte	.LFB73
 1323 041c 74000000 		.4byte	.LFE73-.LFB73
 1324 0420 01       		.uleb128 0x1
 1325 0421 9C       		.byte	0x9c
 1326 0422 7B040000 		.4byte	0x47b
 1327 0426 15       		.uleb128 0x15
 1328 0427 27000000 		.4byte	.LASF61
 1329 042b 01       		.byte	0x1
 1330 042c BD       		.byte	0xbd
 1331 042d B5000000 		.4byte	0xb5
 1332 0431 02       		.uleb128 0x2
 1333 0432 91       		.byte	0x91
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 29


 1334 0433 6C       		.sleb128 -20
 1335 0434 15       		.uleb128 0x15
 1336 0435 50010000 		.4byte	.LASF62
 1337 0439 01       		.byte	0x1
 1338 043a BD       		.byte	0xbd
 1339 043b A8000000 		.4byte	0xa8
 1340 043f 02       		.uleb128 0x2
 1341 0440 91       		.byte	0x91
 1342 0441 68       		.sleb128 -24
 1343 0442 15       		.uleb128 0x15
 1344 0443 8E010000 		.4byte	.LASF63
 1345 0447 01       		.byte	0x1
 1346 0448 BE       		.byte	0xbe
 1347 0449 B5000000 		.4byte	0xb5
 1348 044d 02       		.uleb128 0x2
 1349 044e 91       		.byte	0x91
 1350 044f 64       		.sleb128 -28
 1351 0450 15       		.uleb128 0x15
 1352 0451 E9020000 		.4byte	.LASF64
 1353 0455 01       		.byte	0x1
 1354 0456 BE       		.byte	0xbe
 1355 0457 B5000000 		.4byte	0xb5
 1356 045b 02       		.uleb128 0x2
 1357 045c 91       		.byte	0x91
 1358 045d 60       		.sleb128 -32
 1359 045e 1A       		.uleb128 0x1a
 1360 045f 60000000 		.4byte	.LASF65
 1361 0463 01       		.byte	0x1
 1362 0464 C0       		.byte	0xc0
 1363 0465 A8000000 		.4byte	0xa8
 1364 0469 02       		.uleb128 0x2
 1365 046a 91       		.byte	0x91
 1366 046b 70       		.sleb128 -16
 1367 046c 17       		.uleb128 0x17
 1368 046d 656E6400 		.ascii	"end\000"
 1369 0471 01       		.byte	0x1
 1370 0472 C0       		.byte	0xc0
 1371 0473 A8000000 		.4byte	0xa8
 1372 0477 02       		.uleb128 0x2
 1373 0478 91       		.byte	0x91
 1374 0479 74       		.sleb128 -12
 1375 047a 00       		.byte	0
 1376 047b 18       		.uleb128 0x18
 1377 047c 91020000 		.4byte	.LASF66
 1378 0480 01       		.byte	0x1
 1379 0481 D1       		.byte	0xd1
 1380 0482 00000000 		.4byte	.LFB74
 1381 0486 3C000000 		.4byte	.LFE74-.LFB74
 1382 048a 01       		.uleb128 0x1
 1383 048b 9C       		.byte	0x9c
 1384 048c BD040000 		.4byte	0x4bd
 1385 0490 15       		.uleb128 0x15
 1386 0491 6F010000 		.4byte	.LASF48
 1387 0495 01       		.byte	0x1
 1388 0496 D1       		.byte	0xd1
 1389 0497 A8000000 		.4byte	0xa8
 1390 049b 02       		.uleb128 0x2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 30


 1391 049c 91       		.byte	0x91
 1392 049d 70       		.sleb128 -16
 1393 049e 19       		.uleb128 0x19
 1394 049f 1A       		.uleb128 0x1a
 1395 04a0 21030000 		.4byte	.LASF50
 1396 04a4 01       		.byte	0x1
 1397 04a5 D3       		.byte	0xd3
 1398 04a6 46020000 		.4byte	0x246
 1399 04aa 02       		.uleb128 0x2
 1400 04ab 91       		.byte	0x91
 1401 04ac 64       		.sleb128 -28
 1402 04ad 1A       		.uleb128 0x1a
 1403 04ae C5020000 		.4byte	.LASF49
 1404 04b2 01       		.byte	0x1
 1405 04b3 D7       		.byte	0xd7
 1406 04b4 5E030000 		.4byte	0x35e
 1407 04b8 03       		.uleb128 0x3
 1408 04b9 91       		.byte	0x91
 1409 04ba E46F     		.sleb128 -2076
 1410 04bc 00       		.byte	0
 1411 04bd 1F       		.uleb128 0x1f
 1412 04be 75030000 		.4byte	.LASF67
 1413 04c2 0A       		.byte	0xa
 1414 04c3 1207     		.2byte	0x712
 1415 04c5 C9040000 		.4byte	0x4c9
 1416 04c9 0F       		.uleb128 0xf
 1417 04ca C0000000 		.4byte	0xc0
 1418 04ce 11       		.uleb128 0x11
 1419 04cf AE000000 		.4byte	0xae
 1420 04d3 DE040000 		.4byte	0x4de
 1421 04d7 12       		.uleb128 0x12
 1422 04d8 A1000000 		.4byte	0xa1
 1423 04dc 1D       		.byte	0x1d
 1424 04dd 00       		.byte	0
 1425 04de 20       		.uleb128 0x20
 1426 04df A2010000 		.4byte	.LASF68
 1427 04e3 01       		.byte	0x1
 1428 04e4 06       		.byte	0x6
 1429 04e5 CE040000 		.4byte	0x4ce
 1430 04e9 05       		.uleb128 0x5
 1431 04ea 03       		.byte	0x3
 1432 04eb 00000000 		.4byte	BB_fileName
 1433 04ef 20       		.uleb128 0x20
 1434 04f0 28030000 		.4byte	.LASF69
 1435 04f4 01       		.byte	0x1
 1436 04f5 0A       		.byte	0xa
 1437 04f6 4E010000 		.4byte	0x14e
 1438 04fa 05       		.uleb128 0x5
 1439 04fb 03       		.byte	0x3
 1440 04fc 00000000 		.4byte	debug_level
 1441 0500 00       		.byte	0
 1442              		.section	.debug_abbrev,"",%progbits
 1443              	.Ldebug_abbrev0:
 1444 0000 01       		.uleb128 0x1
 1445 0001 11       		.uleb128 0x11
 1446 0002 01       		.byte	0x1
 1447 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 31


 1448 0004 0E       		.uleb128 0xe
 1449 0005 13       		.uleb128 0x13
 1450 0006 0B       		.uleb128 0xb
 1451 0007 03       		.uleb128 0x3
 1452 0008 0E       		.uleb128 0xe
 1453 0009 1B       		.uleb128 0x1b
 1454 000a 0E       		.uleb128 0xe
 1455 000b 55       		.uleb128 0x55
 1456 000c 17       		.uleb128 0x17
 1457 000d 11       		.uleb128 0x11
 1458 000e 01       		.uleb128 0x1
 1459 000f 10       		.uleb128 0x10
 1460 0010 17       		.uleb128 0x17
 1461 0011 00       		.byte	0
 1462 0012 00       		.byte	0
 1463 0013 02       		.uleb128 0x2
 1464 0014 24       		.uleb128 0x24
 1465 0015 00       		.byte	0
 1466 0016 0B       		.uleb128 0xb
 1467 0017 0B       		.uleb128 0xb
 1468 0018 3E       		.uleb128 0x3e
 1469 0019 0B       		.uleb128 0xb
 1470 001a 03       		.uleb128 0x3
 1471 001b 0E       		.uleb128 0xe
 1472 001c 00       		.byte	0
 1473 001d 00       		.byte	0
 1474 001e 03       		.uleb128 0x3
 1475 001f 16       		.uleb128 0x16
 1476 0020 00       		.byte	0
 1477 0021 03       		.uleb128 0x3
 1478 0022 0E       		.uleb128 0xe
 1479 0023 3A       		.uleb128 0x3a
 1480 0024 0B       		.uleb128 0xb
 1481 0025 3B       		.uleb128 0x3b
 1482 0026 0B       		.uleb128 0xb
 1483 0027 49       		.uleb128 0x49
 1484 0028 13       		.uleb128 0x13
 1485 0029 00       		.byte	0
 1486 002a 00       		.byte	0
 1487 002b 04       		.uleb128 0x4
 1488 002c 24       		.uleb128 0x24
 1489 002d 00       		.byte	0
 1490 002e 0B       		.uleb128 0xb
 1491 002f 0B       		.uleb128 0xb
 1492 0030 3E       		.uleb128 0x3e
 1493 0031 0B       		.uleb128 0xb
 1494 0032 03       		.uleb128 0x3
 1495 0033 08       		.uleb128 0x8
 1496 0034 00       		.byte	0
 1497 0035 00       		.byte	0
 1498 0036 05       		.uleb128 0x5
 1499 0037 13       		.uleb128 0x13
 1500 0038 01       		.byte	0x1
 1501 0039 03       		.uleb128 0x3
 1502 003a 0E       		.uleb128 0xe
 1503 003b 0B       		.uleb128 0xb
 1504 003c 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 32


 1505 003d 3A       		.uleb128 0x3a
 1506 003e 0B       		.uleb128 0xb
 1507 003f 3B       		.uleb128 0x3b
 1508 0040 0B       		.uleb128 0xb
 1509 0041 01       		.uleb128 0x1
 1510 0042 13       		.uleb128 0x13
 1511 0043 00       		.byte	0
 1512 0044 00       		.byte	0
 1513 0045 06       		.uleb128 0x6
 1514 0046 0D       		.uleb128 0xd
 1515 0047 00       		.byte	0
 1516 0048 03       		.uleb128 0x3
 1517 0049 0E       		.uleb128 0xe
 1518 004a 49       		.uleb128 0x49
 1519 004b 13       		.uleb128 0x13
 1520 004c 38       		.uleb128 0x38
 1521 004d 0B       		.uleb128 0xb
 1522 004e 34       		.uleb128 0x34
 1523 004f 19       		.uleb128 0x19
 1524 0050 00       		.byte	0
 1525 0051 00       		.byte	0
 1526 0052 07       		.uleb128 0x7
 1527 0053 0F       		.uleb128 0xf
 1528 0054 00       		.byte	0
 1529 0055 0B       		.uleb128 0xb
 1530 0056 0B       		.uleb128 0xb
 1531 0057 00       		.byte	0
 1532 0058 00       		.byte	0
 1533 0059 08       		.uleb128 0x8
 1534 005a 0F       		.uleb128 0xf
 1535 005b 00       		.byte	0
 1536 005c 0B       		.uleb128 0xb
 1537 005d 0B       		.uleb128 0xb
 1538 005e 49       		.uleb128 0x49
 1539 005f 13       		.uleb128 0x13
 1540 0060 00       		.byte	0
 1541 0061 00       		.byte	0
 1542 0062 09       		.uleb128 0x9
 1543 0063 26       		.uleb128 0x26
 1544 0064 00       		.byte	0
 1545 0065 49       		.uleb128 0x49
 1546 0066 13       		.uleb128 0x13
 1547 0067 00       		.byte	0
 1548 0068 00       		.byte	0
 1549 0069 0A       		.uleb128 0xa
 1550 006a 13       		.uleb128 0x13
 1551 006b 01       		.byte	0x1
 1552 006c 03       		.uleb128 0x3
 1553 006d 08       		.uleb128 0x8
 1554 006e 0B       		.uleb128 0xb
 1555 006f 0B       		.uleb128 0xb
 1556 0070 3A       		.uleb128 0x3a
 1557 0071 0B       		.uleb128 0xb
 1558 0072 3B       		.uleb128 0x3b
 1559 0073 0B       		.uleb128 0xb
 1560 0074 01       		.uleb128 0x1
 1561 0075 13       		.uleb128 0x13
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 33


 1562 0076 00       		.byte	0
 1563 0077 00       		.byte	0
 1564 0078 0B       		.uleb128 0xb
 1565 0079 0D       		.uleb128 0xd
 1566 007a 00       		.byte	0
 1567 007b 03       		.uleb128 0x3
 1568 007c 0E       		.uleb128 0xe
 1569 007d 3A       		.uleb128 0x3a
 1570 007e 0B       		.uleb128 0xb
 1571 007f 3B       		.uleb128 0x3b
 1572 0080 0B       		.uleb128 0xb
 1573 0081 49       		.uleb128 0x49
 1574 0082 13       		.uleb128 0x13
 1575 0083 38       		.uleb128 0x38
 1576 0084 0B       		.uleb128 0xb
 1577 0085 00       		.byte	0
 1578 0086 00       		.byte	0
 1579 0087 0C       		.uleb128 0xc
 1580 0088 16       		.uleb128 0x16
 1581 0089 00       		.byte	0
 1582 008a 03       		.uleb128 0x3
 1583 008b 0E       		.uleb128 0xe
 1584 008c 3A       		.uleb128 0x3a
 1585 008d 0B       		.uleb128 0xb
 1586 008e 3B       		.uleb128 0x3b
 1587 008f 05       		.uleb128 0x5
 1588 0090 49       		.uleb128 0x49
 1589 0091 13       		.uleb128 0x13
 1590 0092 00       		.byte	0
 1591 0093 00       		.byte	0
 1592 0094 0D       		.uleb128 0xd
 1593 0095 13       		.uleb128 0x13
 1594 0096 01       		.byte	0x1
 1595 0097 0B       		.uleb128 0xb
 1596 0098 0B       		.uleb128 0xb
 1597 0099 3A       		.uleb128 0x3a
 1598 009a 0B       		.uleb128 0xb
 1599 009b 3B       		.uleb128 0x3b
 1600 009c 0B       		.uleb128 0xb
 1601 009d 01       		.uleb128 0x1
 1602 009e 13       		.uleb128 0x13
 1603 009f 00       		.byte	0
 1604 00a0 00       		.byte	0
 1605 00a1 0E       		.uleb128 0xe
 1606 00a2 0D       		.uleb128 0xd
 1607 00a3 00       		.byte	0
 1608 00a4 03       		.uleb128 0x3
 1609 00a5 08       		.uleb128 0x8
 1610 00a6 3A       		.uleb128 0x3a
 1611 00a7 0B       		.uleb128 0xb
 1612 00a8 3B       		.uleb128 0x3b
 1613 00a9 0B       		.uleb128 0xb
 1614 00aa 49       		.uleb128 0x49
 1615 00ab 13       		.uleb128 0x13
 1616 00ac 38       		.uleb128 0x38
 1617 00ad 0B       		.uleb128 0xb
 1618 00ae 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 34


 1619 00af 00       		.byte	0
 1620 00b0 0F       		.uleb128 0xf
 1621 00b1 35       		.uleb128 0x35
 1622 00b2 00       		.byte	0
 1623 00b3 49       		.uleb128 0x49
 1624 00b4 13       		.uleb128 0x13
 1625 00b5 00       		.byte	0
 1626 00b6 00       		.byte	0
 1627 00b7 10       		.uleb128 0x10
 1628 00b8 13       		.uleb128 0x13
 1629 00b9 01       		.byte	0x1
 1630 00ba 0B       		.uleb128 0xb
 1631 00bb 05       		.uleb128 0x5
 1632 00bc 3A       		.uleb128 0x3a
 1633 00bd 0B       		.uleb128 0xb
 1634 00be 3B       		.uleb128 0x3b
 1635 00bf 0B       		.uleb128 0xb
 1636 00c0 01       		.uleb128 0x1
 1637 00c1 13       		.uleb128 0x13
 1638 00c2 00       		.byte	0
 1639 00c3 00       		.byte	0
 1640 00c4 11       		.uleb128 0x11
 1641 00c5 01       		.uleb128 0x1
 1642 00c6 01       		.byte	0x1
 1643 00c7 49       		.uleb128 0x49
 1644 00c8 13       		.uleb128 0x13
 1645 00c9 01       		.uleb128 0x1
 1646 00ca 13       		.uleb128 0x13
 1647 00cb 00       		.byte	0
 1648 00cc 00       		.byte	0
 1649 00cd 12       		.uleb128 0x12
 1650 00ce 21       		.uleb128 0x21
 1651 00cf 00       		.byte	0
 1652 00d0 49       		.uleb128 0x49
 1653 00d1 13       		.uleb128 0x13
 1654 00d2 2F       		.uleb128 0x2f
 1655 00d3 0B       		.uleb128 0xb
 1656 00d4 00       		.byte	0
 1657 00d5 00       		.byte	0
 1658 00d6 13       		.uleb128 0x13
 1659 00d7 2E       		.uleb128 0x2e
 1660 00d8 00       		.byte	0
 1661 00d9 3F       		.uleb128 0x3f
 1662 00da 19       		.uleb128 0x19
 1663 00db 03       		.uleb128 0x3
 1664 00dc 0E       		.uleb128 0xe
 1665 00dd 3A       		.uleb128 0x3a
 1666 00de 0B       		.uleb128 0xb
 1667 00df 3B       		.uleb128 0x3b
 1668 00e0 0B       		.uleb128 0xb
 1669 00e1 11       		.uleb128 0x11
 1670 00e2 01       		.uleb128 0x1
 1671 00e3 12       		.uleb128 0x12
 1672 00e4 06       		.uleb128 0x6
 1673 00e5 40       		.uleb128 0x40
 1674 00e6 18       		.uleb128 0x18
 1675 00e7 9642     		.uleb128 0x2116
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 35


 1676 00e9 19       		.uleb128 0x19
 1677 00ea 00       		.byte	0
 1678 00eb 00       		.byte	0
 1679 00ec 14       		.uleb128 0x14
 1680 00ed 2E       		.uleb128 0x2e
 1681 00ee 01       		.byte	0x1
 1682 00ef 3F       		.uleb128 0x3f
 1683 00f0 19       		.uleb128 0x19
 1684 00f1 03       		.uleb128 0x3
 1685 00f2 0E       		.uleb128 0xe
 1686 00f3 3A       		.uleb128 0x3a
 1687 00f4 0B       		.uleb128 0xb
 1688 00f5 3B       		.uleb128 0x3b
 1689 00f6 0B       		.uleb128 0xb
 1690 00f7 27       		.uleb128 0x27
 1691 00f8 19       		.uleb128 0x19
 1692 00f9 49       		.uleb128 0x49
 1693 00fa 13       		.uleb128 0x13
 1694 00fb 11       		.uleb128 0x11
 1695 00fc 01       		.uleb128 0x1
 1696 00fd 12       		.uleb128 0x12
 1697 00fe 06       		.uleb128 0x6
 1698 00ff 40       		.uleb128 0x40
 1699 0100 18       		.uleb128 0x18
 1700 0101 9642     		.uleb128 0x2116
 1701 0103 19       		.uleb128 0x19
 1702 0104 01       		.uleb128 0x1
 1703 0105 13       		.uleb128 0x13
 1704 0106 00       		.byte	0
 1705 0107 00       		.byte	0
 1706 0108 15       		.uleb128 0x15
 1707 0109 05       		.uleb128 0x5
 1708 010a 00       		.byte	0
 1709 010b 03       		.uleb128 0x3
 1710 010c 0E       		.uleb128 0xe
 1711 010d 3A       		.uleb128 0x3a
 1712 010e 0B       		.uleb128 0xb
 1713 010f 3B       		.uleb128 0x3b
 1714 0110 0B       		.uleb128 0xb
 1715 0111 49       		.uleb128 0x49
 1716 0112 13       		.uleb128 0x13
 1717 0113 02       		.uleb128 0x2
 1718 0114 18       		.uleb128 0x18
 1719 0115 00       		.byte	0
 1720 0116 00       		.byte	0
 1721 0117 16       		.uleb128 0x16
 1722 0118 05       		.uleb128 0x5
 1723 0119 00       		.byte	0
 1724 011a 03       		.uleb128 0x3
 1725 011b 08       		.uleb128 0x8
 1726 011c 3A       		.uleb128 0x3a
 1727 011d 0B       		.uleb128 0xb
 1728 011e 3B       		.uleb128 0x3b
 1729 011f 0B       		.uleb128 0xb
 1730 0120 49       		.uleb128 0x49
 1731 0121 13       		.uleb128 0x13
 1732 0122 02       		.uleb128 0x2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 36


 1733 0123 18       		.uleb128 0x18
 1734 0124 00       		.byte	0
 1735 0125 00       		.byte	0
 1736 0126 17       		.uleb128 0x17
 1737 0127 34       		.uleb128 0x34
 1738 0128 00       		.byte	0
 1739 0129 03       		.uleb128 0x3
 1740 012a 08       		.uleb128 0x8
 1741 012b 3A       		.uleb128 0x3a
 1742 012c 0B       		.uleb128 0xb
 1743 012d 3B       		.uleb128 0x3b
 1744 012e 0B       		.uleb128 0xb
 1745 012f 49       		.uleb128 0x49
 1746 0130 13       		.uleb128 0x13
 1747 0131 02       		.uleb128 0x2
 1748 0132 18       		.uleb128 0x18
 1749 0133 00       		.byte	0
 1750 0134 00       		.byte	0
 1751 0135 18       		.uleb128 0x18
 1752 0136 2E       		.uleb128 0x2e
 1753 0137 01       		.byte	0x1
 1754 0138 3F       		.uleb128 0x3f
 1755 0139 19       		.uleb128 0x19
 1756 013a 03       		.uleb128 0x3
 1757 013b 0E       		.uleb128 0xe
 1758 013c 3A       		.uleb128 0x3a
 1759 013d 0B       		.uleb128 0xb
 1760 013e 3B       		.uleb128 0x3b
 1761 013f 0B       		.uleb128 0xb
 1762 0140 27       		.uleb128 0x27
 1763 0141 19       		.uleb128 0x19
 1764 0142 11       		.uleb128 0x11
 1765 0143 01       		.uleb128 0x1
 1766 0144 12       		.uleb128 0x12
 1767 0145 06       		.uleb128 0x6
 1768 0146 40       		.uleb128 0x40
 1769 0147 18       		.uleb128 0x18
 1770 0148 9642     		.uleb128 0x2116
 1771 014a 19       		.uleb128 0x19
 1772 014b 01       		.uleb128 0x1
 1773 014c 13       		.uleb128 0x13
 1774 014d 00       		.byte	0
 1775 014e 00       		.byte	0
 1776 014f 19       		.uleb128 0x19
 1777 0150 18       		.uleb128 0x18
 1778 0151 00       		.byte	0
 1779 0152 00       		.byte	0
 1780 0153 00       		.byte	0
 1781 0154 1A       		.uleb128 0x1a
 1782 0155 34       		.uleb128 0x34
 1783 0156 00       		.byte	0
 1784 0157 03       		.uleb128 0x3
 1785 0158 0E       		.uleb128 0xe
 1786 0159 3A       		.uleb128 0x3a
 1787 015a 0B       		.uleb128 0xb
 1788 015b 3B       		.uleb128 0x3b
 1789 015c 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 37


 1790 015d 49       		.uleb128 0x49
 1791 015e 13       		.uleb128 0x13
 1792 015f 02       		.uleb128 0x2
 1793 0160 18       		.uleb128 0x18
 1794 0161 00       		.byte	0
 1795 0162 00       		.byte	0
 1796 0163 1B       		.uleb128 0x1b
 1797 0164 0B       		.uleb128 0xb
 1798 0165 01       		.byte	0x1
 1799 0166 11       		.uleb128 0x11
 1800 0167 01       		.uleb128 0x1
 1801 0168 12       		.uleb128 0x12
 1802 0169 06       		.uleb128 0x6
 1803 016a 01       		.uleb128 0x1
 1804 016b 13       		.uleb128 0x13
 1805 016c 00       		.byte	0
 1806 016d 00       		.byte	0
 1807 016e 1C       		.uleb128 0x1c
 1808 016f 0B       		.uleb128 0xb
 1809 0170 01       		.byte	0x1
 1810 0171 11       		.uleb128 0x11
 1811 0172 01       		.uleb128 0x1
 1812 0173 12       		.uleb128 0x12
 1813 0174 06       		.uleb128 0x6
 1814 0175 00       		.byte	0
 1815 0176 00       		.byte	0
 1816 0177 1D       		.uleb128 0x1d
 1817 0178 21       		.uleb128 0x21
 1818 0179 00       		.byte	0
 1819 017a 49       		.uleb128 0x49
 1820 017b 13       		.uleb128 0x13
 1821 017c 2F       		.uleb128 0x2f
 1822 017d 05       		.uleb128 0x5
 1823 017e 00       		.byte	0
 1824 017f 00       		.byte	0
 1825 0180 1E       		.uleb128 0x1e
 1826 0181 2E       		.uleb128 0x2e
 1827 0182 01       		.byte	0x1
 1828 0183 3F       		.uleb128 0x3f
 1829 0184 19       		.uleb128 0x19
 1830 0185 03       		.uleb128 0x3
 1831 0186 0E       		.uleb128 0xe
 1832 0187 3A       		.uleb128 0x3a
 1833 0188 0B       		.uleb128 0xb
 1834 0189 3B       		.uleb128 0x3b
 1835 018a 0B       		.uleb128 0xb
 1836 018b 49       		.uleb128 0x49
 1837 018c 13       		.uleb128 0x13
 1838 018d 11       		.uleb128 0x11
 1839 018e 01       		.uleb128 0x1
 1840 018f 12       		.uleb128 0x12
 1841 0190 06       		.uleb128 0x6
 1842 0191 40       		.uleb128 0x40
 1843 0192 18       		.uleb128 0x18
 1844 0193 9642     		.uleb128 0x2116
 1845 0195 19       		.uleb128 0x19
 1846 0196 01       		.uleb128 0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 38


 1847 0197 13       		.uleb128 0x13
 1848 0198 00       		.byte	0
 1849 0199 00       		.byte	0
 1850 019a 1F       		.uleb128 0x1f
 1851 019b 34       		.uleb128 0x34
 1852 019c 00       		.byte	0
 1853 019d 03       		.uleb128 0x3
 1854 019e 0E       		.uleb128 0xe
 1855 019f 3A       		.uleb128 0x3a
 1856 01a0 0B       		.uleb128 0xb
 1857 01a1 3B       		.uleb128 0x3b
 1858 01a2 05       		.uleb128 0x5
 1859 01a3 49       		.uleb128 0x49
 1860 01a4 13       		.uleb128 0x13
 1861 01a5 3F       		.uleb128 0x3f
 1862 01a6 19       		.uleb128 0x19
 1863 01a7 3C       		.uleb128 0x3c
 1864 01a8 19       		.uleb128 0x19
 1865 01a9 00       		.byte	0
 1866 01aa 00       		.byte	0
 1867 01ab 20       		.uleb128 0x20
 1868 01ac 34       		.uleb128 0x34
 1869 01ad 00       		.byte	0
 1870 01ae 03       		.uleb128 0x3
 1871 01af 0E       		.uleb128 0xe
 1872 01b0 3A       		.uleb128 0x3a
 1873 01b1 0B       		.uleb128 0xb
 1874 01b2 3B       		.uleb128 0x3b
 1875 01b3 0B       		.uleb128 0xb
 1876 01b4 49       		.uleb128 0x49
 1877 01b5 13       		.uleb128 0x13
 1878 01b6 3F       		.uleb128 0x3f
 1879 01b7 19       		.uleb128 0x19
 1880 01b8 02       		.uleb128 0x2
 1881 01b9 18       		.uleb128 0x18
 1882 01ba 00       		.byte	0
 1883 01bb 00       		.byte	0
 1884 01bc 00       		.byte	0
 1885              		.section	.debug_aranges,"",%progbits
 1886 0000 6C000000 		.4byte	0x6c
 1887 0004 0200     		.2byte	0x2
 1888 0006 00000000 		.4byte	.Ldebug_info0
 1889 000a 04       		.byte	0x4
 1890 000b 00       		.byte	0
 1891 000c 0000     		.2byte	0
 1892 000e 0000     		.2byte	0
 1893 0010 00000000 		.4byte	.LFB64
 1894 0014 0C000000 		.4byte	.LFE64-.LFB64
 1895 0018 00000000 		.4byte	.LFB65
 1896 001c 0C000000 		.4byte	.LFE65-.LFB65
 1897 0020 00000000 		.4byte	.LFB66
 1898 0024 20000000 		.4byte	.LFE66-.LFB66
 1899 0028 00000000 		.4byte	.LFB67
 1900 002c 0C000000 		.4byte	.LFE67-.LFB67
 1901 0030 00000000 		.4byte	.LFB68
 1902 0034 38000000 		.4byte	.LFE68-.LFB68
 1903 0038 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 39


 1904 003c 28010000 		.4byte	.LFE69-.LFB69
 1905 0040 00000000 		.4byte	.LFB70
 1906 0044 78000000 		.4byte	.LFE70-.LFB70
 1907 0048 00000000 		.4byte	.LFB71
 1908 004c 58000000 		.4byte	.LFE71-.LFB71
 1909 0050 00000000 		.4byte	.LFB72
 1910 0054 40000000 		.4byte	.LFE72-.LFB72
 1911 0058 00000000 		.4byte	.LFB73
 1912 005c 74000000 		.4byte	.LFE73-.LFB73
 1913 0060 00000000 		.4byte	.LFB74
 1914 0064 3C000000 		.4byte	.LFE74-.LFB74
 1915 0068 00000000 		.4byte	0
 1916 006c 00000000 		.4byte	0
 1917              		.section	.debug_ranges,"",%progbits
 1918              	.Ldebug_ranges0:
 1919 0000 00000000 		.4byte	.LFB64
 1920 0004 0C000000 		.4byte	.LFE64
 1921 0008 00000000 		.4byte	.LFB65
 1922 000c 0C000000 		.4byte	.LFE65
 1923 0010 00000000 		.4byte	.LFB66
 1924 0014 20000000 		.4byte	.LFE66
 1925 0018 00000000 		.4byte	.LFB67
 1926 001c 0C000000 		.4byte	.LFE67
 1927 0020 00000000 		.4byte	.LFB68
 1928 0024 38000000 		.4byte	.LFE68
 1929 0028 00000000 		.4byte	.LFB69
 1930 002c 28010000 		.4byte	.LFE69
 1931 0030 00000000 		.4byte	.LFB70
 1932 0034 78000000 		.4byte	.LFE70
 1933 0038 00000000 		.4byte	.LFB71
 1934 003c 58000000 		.4byte	.LFE71
 1935 0040 00000000 		.4byte	.LFB72
 1936 0044 40000000 		.4byte	.LFE72
 1937 0048 00000000 		.4byte	.LFB73
 1938 004c 74000000 		.4byte	.LFE73
 1939 0050 00000000 		.4byte	.LFB74
 1940 0054 3C000000 		.4byte	.LFE74
 1941 0058 00000000 		.4byte	0
 1942 005c 00000000 		.4byte	0
 1943              		.section	.debug_line,"",%progbits
 1944              	.Ldebug_line0:
 1945 0000 C2030000 		.section	.debug_str,"MS",%progbits,1
 1945      02007302 
 1945      00000201 
 1945      FB0E0D00 
 1945      01010101 
 1946              	.LASF56:
 1947 0000 745F6F66 		.ascii	"t_of_day\000"
 1947      5F646179 
 1947      00
 1948              	.LASF19:
 1949 0009 746D5F68 		.ascii	"tm_hour\000"
 1949      6F757200 
 1950              	.LASF44:
 1951 0011 64656275 		.ascii	"debug_sleep\000"
 1951      675F736C 
 1951      65657000 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 40


 1952              	.LASF37:
 1953 001d 74657374 		.ascii	"test_name\000"
 1953      5F6E616D 
 1953      6500
 1954              	.LASF61:
 1955 0027 696E7075 		.ascii	"input_str\000"
 1955      745F7374 
 1955      7200
 1956              	.LASF42:
 1957 0031 64656275 		.ascii	"debug_start\000"
 1957      675F7374 
 1957      61727400 
 1958              	.LASF2:
 1959 003d 73686F72 		.ascii	"short int\000"
 1959      7420696E 
 1959      7400
 1960              	.LASF36:
 1961 0047 5254435F 		.ascii	"RTC_TIME_DATE\000"
 1961      54494D45 
 1961      5F444154 
 1961      4500
 1962              	.LASF60:
 1963 0055 73747265 		.ascii	"strextract\000"
 1963      78747261 
 1963      637400
 1964              	.LASF65:
 1965 0060 62656769 		.ascii	"begin\000"
 1965      6E00
 1966              	.LASF70:
 1967 0066 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1967      43313120 
 1967      352E342E 
 1967      31203230 
 1967      31363036 
 1968 0099 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1968      20726576 
 1968      6973696F 
 1968      6E203233 
 1968      37373135 
 1969 00cc 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1969      66756E63 
 1969      74696F6E 
 1969      2D736563 
 1969      74696F6E 
 1970              	.LASF23:
 1971 00f4 746D5F77 		.ascii	"tm_wday\000"
 1971      64617900 
 1972              	.LASF6:
 1973 00fc 6C6F6E67 		.ascii	"long long int\000"
 1973      206C6F6E 
 1973      6720696E 
 1973      7400
 1974              	.LASF59:
 1975 010a 5F777269 		.ascii	"_write\000"
 1975      746500
 1976              	.LASF54:
 1977 0111 67657454 		.ascii	"getTimeStamp\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 41


 1977      696D6553 
 1977      74616D70 
 1977      00
 1978              	.LASF30:
 1979 011e 486F7572 		.ascii	"Hour\000"
 1979      00
 1980              	.LASF46:
 1981 0123 66696C65 		.ascii	"file\000"
 1981      00
 1982              	.LASF32:
 1983 0128 4461794F 		.ascii	"DayOfMonth\000"
 1983      664D6F6E 
 1983      746800
 1984              	.LASF27:
 1985 0133 75696E74 		.ascii	"uint16\000"
 1985      313600
 1986              	.LASF41:
 1987 013a 76615F6C 		.ascii	"va_list\000"
 1987      69737400 
 1988              	.LASF71:
 1989 0142 64656275 		.ascii	"debug.c\000"
 1989      672E6300 
 1990              	.LASF26:
 1991 014a 75696E74 		.ascii	"uint8\000"
 1991      3800
 1992              	.LASF62:
 1993 0150 6F757470 		.ascii	"output_str\000"
 1993      75745F73 
 1993      747200
 1994              	.LASF18:
 1995 015b 746D5F6D 		.ascii	"tm_min\000"
 1995      696E00
 1996              	.LASF28:
 1997 0162 666C6F61 		.ascii	"float\000"
 1997      7400
 1998              	.LASF21:
 1999 0168 746D5F6D 		.ascii	"tm_mon\000"
 1999      6F6E00
 2000              	.LASF48:
 2001 016f 666F726D 		.ascii	"format\000"
 2001      617400
 2002              	.LASF15:
 2003 0176 74696D65 		.ascii	"time_t\000"
 2003      5F7400
 2004              	.LASF16:
 2005 017d 5F5F7661 		.ascii	"__va_list\000"
 2005      5F6C6973 
 2005      7400
 2006              	.LASF39:
 2007 0187 72656173 		.ascii	"reason\000"
 2007      6F6E00
 2008              	.LASF63:
 2009 018e 73656172 		.ascii	"search_start\000"
 2009      63685F73 
 2009      74617274 
 2009      00
 2010              	.LASF58:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 42


 2011 019b 73747269 		.ascii	"string\000"
 2011      6E6700
 2012              	.LASF68:
 2013 01a2 42425F66 		.ascii	"BB_fileName\000"
 2013      696C654E 
 2013      616D6500 
 2014              	.LASF35:
 2015 01ae 59656172 		.ascii	"Year\000"
 2015      00
 2016              	.LASF34:
 2017 01b3 4D6F6E74 		.ascii	"Month\000"
 2017      6800
 2018              	.LASF9:
 2019 01b9 6C6F6E67 		.ascii	"long double\000"
 2019      20646F75 
 2019      626C6500 
 2020              	.LASF1:
 2021 01c5 756E7369 		.ascii	"unsigned char\000"
 2021      676E6564 
 2021      20636861 
 2021      7200
 2022              	.LASF31:
 2023 01d3 4461794F 		.ascii	"DayOfWeek\000"
 2023      66576565 
 2023      6B00
 2024              	.LASF0:
 2025 01dd 7369676E 		.ascii	"signed char\000"
 2025      65642063 
 2025      68617200 
 2026              	.LASF22:
 2027 01e9 746D5F79 		.ascii	"tm_year\000"
 2027      65617200 
 2028              	.LASF7:
 2029 01f1 6C6F6E67 		.ascii	"long long unsigned int\000"
 2029      206C6F6E 
 2029      6720756E 
 2029      7369676E 
 2029      65642069 
 2030              	.LASF47:
 2031 0208 74797065 		.ascii	"type\000"
 2031      00
 2032              	.LASF8:
 2033 020d 756E7369 		.ascii	"unsigned int\000"
 2033      676E6564 
 2033      20696E74 
 2033      00
 2034              	.LASF73:
 2035 021a 5F5F6170 		.ascii	"__ap\000"
 2035      00
 2036              	.LASF20:
 2037 021f 746D5F6D 		.ascii	"tm_mday\000"
 2037      64617900 
 2038              	.LASF72:
 2039 0227 433A5C55 		.ascii	"C:\\Users\\hail\\Desktop\\Brooke Research\\notoriOS"
 2039      73657273 
 2039      5C686169 
 2039      6C5C4465 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 43


 2039      736B746F 
 2040 0255 5C6E6F74 		.ascii	"\\notoriOS\\notoriOS\\notoriOS.cydsn\000"
 2040      6F72694F 
 2040      535C6E6F 
 2040      746F7269 
 2040      4F535C6E 
 2041              	.LASF3:
 2042 0277 73686F72 		.ascii	"short unsigned int\000"
 2042      7420756E 
 2042      7369676E 
 2042      65642069 
 2042      6E7400
 2043              	.LASF38:
 2044 028a 73746174 		.ascii	"status\000"
 2044      757300
 2045              	.LASF66:
 2046 0291 7072696E 		.ascii	"printd\000"
 2046      746400
 2047              	.LASF13:
 2048 0298 63686172 		.ascii	"char\000"
 2048      00
 2049              	.LASF40:
 2050 029d 74657374 		.ascii	"test_t\000"
 2050      5F7400
 2051              	.LASF4:
 2052 02a4 6C6F6E67 		.ascii	"long int\000"
 2052      20696E74 
 2052      00
 2053              	.LASF52:
 2054 02ad 7072696E 		.ascii	"printTestStatus\000"
 2054      74546573 
 2054      74537461 
 2054      74757300 
 2055              	.LASF14:
 2056 02bd 696E7433 		.ascii	"int32_t\000"
 2056      325F7400 
 2057              	.LASF49:
 2058 02c5 64656275 		.ascii	"debug_string\000"
 2058      675F7374 
 2058      72696E67 
 2058      00
 2059              	.LASF24:
 2060 02d2 746D5F79 		.ascii	"tm_yday\000"
 2060      64617900 
 2061              	.LASF55:
 2062 02da 6C6F6361 		.ascii	"localTime\000"
 2062      6C54696D 
 2062      6500
 2063              	.LASF53:
 2064 02e4 74657374 		.ascii	"test\000"
 2064      00
 2065              	.LASF64:
 2066 02e9 73656172 		.ascii	"search_end\000"
 2066      63685F65 
 2066      6E6400
 2067              	.LASF25:
 2068 02f4 746D5F69 		.ascii	"tm_isdst\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 44


 2068      73647374 
 2068      00
 2069              	.LASF43:
 2070 02fd 64656275 		.ascii	"debug_stop\000"
 2070      675F7374 
 2070      6F7000
 2071              	.LASF5:
 2072 0308 6C6F6E67 		.ascii	"long unsigned int\000"
 2072      20756E73 
 2072      69676E65 
 2072      6420696E 
 2072      7400
 2073              	.LASF29:
 2074 031a 646F7562 		.ascii	"double\000"
 2074      6C6500
 2075              	.LASF50:
 2076 0321 61726770 		.ascii	"argptr\000"
 2076      747200
 2077              	.LASF69:
 2078 0328 64656275 		.ascii	"debug_level\000"
 2078      675F6C65 
 2078      76656C00 
 2079              	.LASF10:
 2080 0334 5F5F696E 		.ascii	"__int32_t\000"
 2080      7433325F 
 2080      7400
 2081              	.LASF12:
 2082 033e 73697A65 		.ascii	"sizetype\000"
 2082      74797065 
 2082      00
 2083              	.LASF11:
 2084 0347 5F5F676E 		.ascii	"__gnuc_va_list\000"
 2084      75635F76 
 2084      615F6C69 
 2084      737400
 2085              	.LASF45:
 2086 0356 64656275 		.ascii	"debug_wakeup\000"
 2086      675F7761 
 2086      6B657570 
 2086      00
 2087              	.LASF51:
 2088 0363 7072696E 		.ascii	"printNotif\000"
 2088      744E6F74 
 2088      696600
 2089              	.LASF17:
 2090 036e 746D5F73 		.ascii	"tm_sec\000"
 2090      656300
 2091              	.LASF67:
 2092 0375 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2092      52784275 
 2092      66666572 
 2092      00
 2093              	.LASF57:
 2094 0382 73747269 		.ascii	"stripEscapeCharacters\000"
 2094      70457363 
 2094      61706543 
 2094      68617261 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccTRKB92.s 			page 45


 2094      63746572 
 2095              	.LASF33:
 2096 0398 4461794F 		.ascii	"DayOfYear\000"
 2096      66596561 
 2096      7200
 2097              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
