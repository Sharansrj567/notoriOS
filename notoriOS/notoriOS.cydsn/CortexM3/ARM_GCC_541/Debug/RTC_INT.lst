ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RTC_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	debug_string,100,4
  20              		.syntax unified
  21              		.global _printf_float
  22              		.thumb
  23              		.syntax unified
  24              		.comm	modem_state,1,1
  25              		.comm	modem_start_time_stamp,4,4
  26              		.comm	modem_info,60,4
  27              		.comm	modem_stats,12,4
  28              		.comm	dataPointsInStack,2,2
  29              		.comm	data,440,4
  30              		.section	.text.RTC_EverySecondHandler,"ax",%progbits
  31              		.align	2
  32              		.thumb
  33              		.thumb_func
  34              		.type	RTC_EverySecondHandler, %function
  35              	RTC_EverySecondHandler:
  36              	.LFB64:
  37              		.file 1 "Generated_Source\\PSoC5\\RTC_INT.c"
   1:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/RTC_INT.c **** * File Name: RTC_INT.c
   3:Generated_Source\PSoC5/RTC_INT.c **** * Version 2.0
   4:Generated_Source\PSoC5/RTC_INT.c **** *
   5:Generated_Source\PSoC5/RTC_INT.c **** * Description:
   6:Generated_Source\PSoC5/RTC_INT.c **** *  This file contains the Interrupt Service Routine (ISR) for the RTC component.
   7:Generated_Source\PSoC5/RTC_INT.c **** *  This interrupt routine has entry pointes to overflow on time or date.
   8:Generated_Source\PSoC5/RTC_INT.c **** *
   9:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  10:Generated_Source\PSoC5/RTC_INT.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/RTC_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/RTC_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/RTC_INT.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/RTC_INT.c **** 
  16:Generated_Source\PSoC5/RTC_INT.c **** #include "RTC.h"
  17:Generated_Source\PSoC5/RTC_INT.c **** #include "CyLib.h"
  18:Generated_Source\PSoC5/RTC_INT.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/RTC_INT.c **** 
  20:Generated_Source\PSoC5/RTC_INT.c **** /* Function Prototypes */
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 2


  21:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EverySecondHandler(void);
  22:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMinuteHandler(void);
  23:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryHourHandler(void);
  24:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryDayHandler(void);
  25:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryWeekHandler(void);
  26:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMonthHandler(void);
  27:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryYearHandler(void);
  28:Generated_Source\PSoC5/RTC_INT.c **** 
  29:Generated_Source\PSoC5/RTC_INT.c **** 
  30:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  31:Generated_Source\PSoC5/RTC_INT.c **** *  Place your includes, defines and code here
  32:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  33:Generated_Source\PSoC5/RTC_INT.c **** /* `#START RTC_ISR_DEFINITION` */
  34:Generated_Source\PSoC5/RTC_INT.c **** 
  35:Generated_Source\PSoC5/RTC_INT.c **** #include "notoriOS.h"
  36:Generated_Source\PSoC5/RTC_INT.c **** 
  37:Generated_Source\PSoC5/RTC_INT.c **** /* `#END` */
  38:Generated_Source\PSoC5/RTC_INT.c **** 
  39:Generated_Source\PSoC5/RTC_INT.c **** 
  40:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  41:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EverySecondHandler
  42:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  43:Generated_Source\PSoC5/RTC_INT.c **** *
  44:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  45:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every second.
  46:Generated_Source\PSoC5/RTC_INT.c **** *
  47:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
  48:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  49:Generated_Source\PSoC5/RTC_INT.c **** *
  50:Generated_Source\PSoC5/RTC_INT.c **** * Return:
  51:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  52:Generated_Source\PSoC5/RTC_INT.c **** *
  53:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  54:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EverySecondHandler(void)
  55:Generated_Source\PSoC5/RTC_INT.c **** {
  38              		.loc 1 55 0
  39              		.cfi_startproc
  40              		@ args = 0, pretend = 0, frame = 0
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42 0000 80B5     		push	{r7, lr}
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
  56:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every second handler code here. */
  57:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_SECOND_HANDLER_CODE` */
  58:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_SECOND);
  48              		.loc 1 58 0
  49 0004 0020     		movs	r0, #0
  50 0006 FFF7FEFF 		bl	AyoItsTime
  59:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
  60:Generated_Source\PSoC5/RTC_INT.c ****     
  61:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_SECOND_HANDLER_CALLBACK
  62:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EverySecondHandler_Callback();
  63:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_SECOND_HANDLER_CALLBACK */
  64:Generated_Source\PSoC5/RTC_INT.c **** }
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 3


  51              		.loc 1 64 0
  52 000a 00BF     		nop
  53 000c 80BD     		pop	{r7, pc}
  54              		.cfi_endproc
  55              	.LFE64:
  56              		.size	RTC_EverySecondHandler, .-RTC_EverySecondHandler
  57 000e 00BF     		.section	.text.RTC_EveryMinuteHandler,"ax",%progbits
  58              		.align	2
  59              		.thumb
  60              		.thumb_func
  61              		.type	RTC_EveryMinuteHandler, %function
  62              	RTC_EveryMinuteHandler:
  63              	.LFB65:
  65:Generated_Source\PSoC5/RTC_INT.c **** 
  66:Generated_Source\PSoC5/RTC_INT.c **** 
  67:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  68:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryMinuteHandler
  69:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  70:Generated_Source\PSoC5/RTC_INT.c **** *
  71:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  72:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every minute.
  73:Generated_Source\PSoC5/RTC_INT.c **** *
  74:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
  75:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  76:Generated_Source\PSoC5/RTC_INT.c **** *
  77:Generated_Source\PSoC5/RTC_INT.c **** * Return:
  78:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  79:Generated_Source\PSoC5/RTC_INT.c **** *
  80:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  81:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMinuteHandler(void)
  82:Generated_Source\PSoC5/RTC_INT.c **** {
  64              		.loc 1 82 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 1, uses_anonymous_args = 0
  68 0000 80B5     		push	{r7, lr}
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 7, -8
  71              		.cfi_offset 14, -4
  72 0002 00AF     		add	r7, sp, #0
  73              		.cfi_def_cfa_register 7
  83:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every minute handler code here. */
  84:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_MINUTE_HANDLER_CODE` */
  85:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_MINUTE);
  74              		.loc 1 85 0
  75 0004 0120     		movs	r0, #1
  76 0006 FFF7FEFF 		bl	AyoItsTime
  86:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
  87:Generated_Source\PSoC5/RTC_INT.c **** 
  88:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_MINUTE_HANDLER_CALLBACK
  89:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryMinuteHandler_Callback();
  90:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_MINUTE_HANDLER_CALLBACK */    
  91:Generated_Source\PSoC5/RTC_INT.c **** }
  77              		.loc 1 91 0
  78 000a 00BF     		nop
  79 000c 80BD     		pop	{r7, pc}
  80              		.cfi_endproc
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 4


  81              	.LFE65:
  82              		.size	RTC_EveryMinuteHandler, .-RTC_EveryMinuteHandler
  83 000e 00BF     		.section	.text.RTC_EveryHourHandler,"ax",%progbits
  84              		.align	2
  85              		.thumb
  86              		.thumb_func
  87              		.type	RTC_EveryHourHandler, %function
  88              	RTC_EveryHourHandler:
  89              	.LFB66:
  92:Generated_Source\PSoC5/RTC_INT.c **** 
  93:Generated_Source\PSoC5/RTC_INT.c **** 
  94:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  95:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryHourHandler
  96:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  97:Generated_Source\PSoC5/RTC_INT.c **** *
  98:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  99:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every hour.
 100:Generated_Source\PSoC5/RTC_INT.c **** *
 101:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 102:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 103:Generated_Source\PSoC5/RTC_INT.c **** *
 104:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 105:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 106:Generated_Source\PSoC5/RTC_INT.c **** *
 107:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 108:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryHourHandler(void)
 109:Generated_Source\PSoC5/RTC_INT.c **** {
  90              		.loc 1 109 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 1, uses_anonymous_args = 0
  94 0000 80B5     		push	{r7, lr}
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 7, -8
  97              		.cfi_offset 14, -4
  98 0002 00AF     		add	r7, sp, #0
  99              		.cfi_def_cfa_register 7
 110:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every hour handler code here. */
 111:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_HOUR_HANDLER_CODE` */
 112:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_HOUR);
 100              		.loc 1 112 0
 101 0004 0220     		movs	r0, #2
 102 0006 FFF7FEFF 		bl	AyoItsTime
 113:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 114:Generated_Source\PSoC5/RTC_INT.c ****     
 115:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_HOUR_HANDLER_CALLBACK
 116:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryHourHandler_Callback();
 117:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_HOUR_HANDLER_CALLBACK */
 118:Generated_Source\PSoC5/RTC_INT.c **** }
 103              		.loc 1 118 0
 104 000a 00BF     		nop
 105 000c 80BD     		pop	{r7, pc}
 106              		.cfi_endproc
 107              	.LFE66:
 108              		.size	RTC_EveryHourHandler, .-RTC_EveryHourHandler
 109 000e 00BF     		.section	.text.RTC_EveryDayHandler,"ax",%progbits
 110              		.align	2
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 5


 111              		.thumb
 112              		.thumb_func
 113              		.type	RTC_EveryDayHandler, %function
 114              	RTC_EveryDayHandler:
 115              	.LFB67:
 119:Generated_Source\PSoC5/RTC_INT.c **** 
 120:Generated_Source\PSoC5/RTC_INT.c **** 
 121:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 122:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryDayHandler
 123:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 124:Generated_Source\PSoC5/RTC_INT.c **** *
 125:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 126:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every day.
 127:Generated_Source\PSoC5/RTC_INT.c **** *
 128:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 129:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 130:Generated_Source\PSoC5/RTC_INT.c **** *
 131:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 132:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 133:Generated_Source\PSoC5/RTC_INT.c **** *
 134:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 135:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryDayHandler(void)
 136:Generated_Source\PSoC5/RTC_INT.c **** {
 116              		.loc 1 136 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 1, uses_anonymous_args = 0
 120 0000 80B5     		push	{r7, lr}
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 7, -8
 123              		.cfi_offset 14, -4
 124 0002 00AF     		add	r7, sp, #0
 125              		.cfi_def_cfa_register 7
 137:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your everyday handler code here. */
 138:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_DAY_HANDLER_CODE` */
 139:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_DAY);
 126              		.loc 1 139 0
 127 0004 0320     		movs	r0, #3
 128 0006 FFF7FEFF 		bl	AyoItsTime
 140:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 141:Generated_Source\PSoC5/RTC_INT.c ****     
 142:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_DAY_HANDLER_CALLBACK
 143:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryDayHandler_Callback();
 144:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_DAY_HANDLER_CALLBACK */
 145:Generated_Source\PSoC5/RTC_INT.c **** }
 129              		.loc 1 145 0
 130 000a 00BF     		nop
 131 000c 80BD     		pop	{r7, pc}
 132              		.cfi_endproc
 133              	.LFE67:
 134              		.size	RTC_EveryDayHandler, .-RTC_EveryDayHandler
 135 000e 00BF     		.section	.text.RTC_EveryWeekHandler,"ax",%progbits
 136              		.align	2
 137              		.thumb
 138              		.thumb_func
 139              		.type	RTC_EveryWeekHandler, %function
 140              	RTC_EveryWeekHandler:
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 6


 141              	.LFB68:
 146:Generated_Source\PSoC5/RTC_INT.c **** 
 147:Generated_Source\PSoC5/RTC_INT.c **** 
 148:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 149:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryWeekHandler
 150:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 151:Generated_Source\PSoC5/RTC_INT.c **** *
 152:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 153:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every week.
 154:Generated_Source\PSoC5/RTC_INT.c **** *
 155:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 156:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 157:Generated_Source\PSoC5/RTC_INT.c **** *
 158:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 159:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 160:Generated_Source\PSoC5/RTC_INT.c **** *
 161:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 162:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryWeekHandler(void)
 163:Generated_Source\PSoC5/RTC_INT.c **** {
 142              		.loc 1 163 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146 0000 80B5     		push	{r7, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 00AF     		add	r7, sp, #0
 151              		.cfi_def_cfa_register 7
 164:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every week handler code here. */
 165:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_WEEK_HANDLER_CODE` */
 166:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_WEEK);
 152              		.loc 1 166 0
 153 0004 0420     		movs	r0, #4
 154 0006 FFF7FEFF 		bl	AyoItsTime
 167:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 168:Generated_Source\PSoC5/RTC_INT.c **** 
 169:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_WEEK_HANDLER_CALLBACK
 170:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryWeekHandler_Callback();
 171:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_WEEK_HANDLER_CALLBACK */
 172:Generated_Source\PSoC5/RTC_INT.c **** }
 155              		.loc 1 172 0
 156 000a 00BF     		nop
 157 000c 80BD     		pop	{r7, pc}
 158              		.cfi_endproc
 159              	.LFE68:
 160              		.size	RTC_EveryWeekHandler, .-RTC_EveryWeekHandler
 161 000e 00BF     		.section	.text.RTC_EveryMonthHandler,"ax",%progbits
 162              		.align	2
 163              		.thumb
 164              		.thumb_func
 165              		.type	RTC_EveryMonthHandler, %function
 166              	RTC_EveryMonthHandler:
 167              	.LFB69:
 173:Generated_Source\PSoC5/RTC_INT.c **** 
 174:Generated_Source\PSoC5/RTC_INT.c **** 
 175:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 7


 176:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryMonthHandler
 177:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 178:Generated_Source\PSoC5/RTC_INT.c **** *
 179:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 180:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every month.
 181:Generated_Source\PSoC5/RTC_INT.c **** *
 182:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 183:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 184:Generated_Source\PSoC5/RTC_INT.c **** *
 185:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 186:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 187:Generated_Source\PSoC5/RTC_INT.c **** *
 188:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 189:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMonthHandler(void)
 190:Generated_Source\PSoC5/RTC_INT.c **** {
 168              		.loc 1 190 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 1, uses_anonymous_args = 0
 172 0000 80B5     		push	{r7, lr}
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 7, -8
 175              		.cfi_offset 14, -4
 176 0002 00AF     		add	r7, sp, #0
 177              		.cfi_def_cfa_register 7
 191:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every month handler code here. */
 192:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_MONTH_HANDLER_CODE` */
 193:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_MONTH);
 178              		.loc 1 193 0
 179 0004 0520     		movs	r0, #5
 180 0006 FFF7FEFF 		bl	AyoItsTime
 194:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 195:Generated_Source\PSoC5/RTC_INT.c ****     
 196:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_MONTH_HANDLER_CALLBACK
 197:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryMonthHandler_Callback();
 198:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_MONTH_HANDLER_CALLBACK */
 199:Generated_Source\PSoC5/RTC_INT.c **** }
 181              		.loc 1 199 0
 182 000a 00BF     		nop
 183 000c 80BD     		pop	{r7, pc}
 184              		.cfi_endproc
 185              	.LFE69:
 186              		.size	RTC_EveryMonthHandler, .-RTC_EveryMonthHandler
 187 000e 00BF     		.section	.text.RTC_EveryYearHandler,"ax",%progbits
 188              		.align	2
 189              		.thumb
 190              		.thumb_func
 191              		.type	RTC_EveryYearHandler, %function
 192              	RTC_EveryYearHandler:
 193              	.LFB70:
 200:Generated_Source\PSoC5/RTC_INT.c **** 
 201:Generated_Source\PSoC5/RTC_INT.c **** 
 202:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 203:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryYearHandler
 204:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 205:Generated_Source\PSoC5/RTC_INT.c **** *
 206:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 8


 207:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every year.
 208:Generated_Source\PSoC5/RTC_INT.c **** *
 209:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 210:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 211:Generated_Source\PSoC5/RTC_INT.c **** *
 212:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 213:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 214:Generated_Source\PSoC5/RTC_INT.c **** *
 215:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 216:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryYearHandler(void)
 217:Generated_Source\PSoC5/RTC_INT.c **** {
 194              		.loc 1 217 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 1, uses_anonymous_args = 0
 198 0000 80B5     		push	{r7, lr}
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 7, -8
 201              		.cfi_offset 14, -4
 202 0002 00AF     		add	r7, sp, #0
 203              		.cfi_def_cfa_register 7
 218:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every year handler code here. */
 219:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_YEAR_HANDLER_CODE` */
 220:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_YEAR);
 204              		.loc 1 220 0
 205 0004 0620     		movs	r0, #6
 206 0006 FFF7FEFF 		bl	AyoItsTime
 221:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 222:Generated_Source\PSoC5/RTC_INT.c **** 
 223:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_YEAR_HANDLER_CALLBACK
 224:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryYearHandler_Callback();
 225:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_YEAR_HANDLER_CALLBACK */    
 226:Generated_Source\PSoC5/RTC_INT.c **** }
 207              		.loc 1 226 0
 208 000a 00BF     		nop
 209 000c 80BD     		pop	{r7, pc}
 210              		.cfi_endproc
 211              	.LFE70:
 212              		.size	RTC_EveryYearHandler, .-RTC_EveryYearHandler
 213 000e 00BF     		.section	.text.RTC_ISR,"ax",%progbits
 214              		.align	2
 215              		.global	RTC_ISR
 216              		.thumb
 217              		.thumb_func
 218              		.type	RTC_ISR, %function
 219              	RTC_ISR:
 220              	.LFB71:
 227:Generated_Source\PSoC5/RTC_INT.c **** 
 228:Generated_Source\PSoC5/RTC_INT.c **** 
 229:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/RTC_INT.c **** * Function Name: RTC_ISR
 231:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 232:Generated_Source\PSoC5/RTC_INT.c **** *
 233:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 234:Generated_Source\PSoC5/RTC_INT.c **** *  This ISR is executed on 1PPS (one pulse per second) event.
 235:Generated_Source\PSoC5/RTC_INT.c **** *  Global interrupt must be enabled to invoke this ISR.
 236:Generated_Source\PSoC5/RTC_INT.c **** *  This interrupt trigs every second.
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 9


 237:Generated_Source\PSoC5/RTC_INT.c **** *
 238:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 239:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 240:Generated_Source\PSoC5/RTC_INT.c **** *
 241:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 242:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 243:Generated_Source\PSoC5/RTC_INT.c **** *
 244:Generated_Source\PSoC5/RTC_INT.c **** * Global variables:
 245:Generated_Source\PSoC5/RTC_INT.c **** * RTC_currentTimeDate, RTC_dstTimeDateStart,
 246:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstTimeDateStop, RTC_dstTimeDateStart,
 247:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_alarmCfgTimeDate, RTC_statusDateTime,
 248:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStartStatus, RTC_dstStartStatus,
 249:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStopStatus, RTC_alarmCurStatus: global
 250:Generated_Source\PSoC5/RTC_INT.c **** *  variables are used for the time/date, DST and alarm update procedure.
 251:Generated_Source\PSoC5/RTC_INT.c **** *
 252:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstTimeDateStart and RTC_currentTimeDate:
 253:Generated_Source\PSoC5/RTC_INT.c **** *  are modified with the updated values.
 254:Generated_Source\PSoC5/RTC_INT.c **** *
 255:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_statusDateTime, RTC_dstStartStatus,
 256:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStartStatus, RTC_dstStopStatus,
 257:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_alarmCurStatus: global variables could be modified while
 258:Generated_Source\PSoC5/RTC_INT.c **** *  current time/date is updated.
 259:Generated_Source\PSoC5/RTC_INT.c **** *
 260:Generated_Source\PSoC5/RTC_INT.c **** * Side Effects:
 261:Generated_Source\PSoC5/RTC_INT.c **** *  Clears all interrupt status bits (react_int, limact_int, onepps_int, ctw_int,
 262:Generated_Source\PSoC5/RTC_INT.c **** *  and  ftw_int) in Power Manager Interrupt Status Register. If an interrupt
 263:Generated_Source\PSoC5/RTC_INT.c **** *  gets generated at the same time as a clear, the bit will remain set (which
 264:Generated_Source\PSoC5/RTC_INT.c **** *  causes another interrupt).
 265:Generated_Source\PSoC5/RTC_INT.c **** *
 266:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 267:Generated_Source\PSoC5/RTC_INT.c **** CY_ISR(RTC_ISR)
 268:Generated_Source\PSoC5/RTC_INT.c **** {
 221              		.loc 1 268 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 8
 224              		@ frame_needed = 1, uses_anonymous_args = 0
 225 0000 80B5     		push	{r7, lr}
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 7, -8
 228              		.cfi_offset 14, -4
 229 0002 82B0     		sub	sp, sp, #8
 230              		.cfi_def_cfa_offset 16
 231 0004 00AF     		add	r7, sp, #0
 232              		.cfi_def_cfa_register 7
 269:Generated_Source\PSoC5/RTC_INT.c ****     uint8 RTC_tmp;
 270:Generated_Source\PSoC5/RTC_INT.c **** 
 271:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_ISR_ENTRY_CALLBACK
 272:Generated_Source\PSoC5/RTC_INT.c ****         RTC_ISR_EntryCallback();
 273:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_ISR_ENTRY_CALLBACK */
 274:Generated_Source\PSoC5/RTC_INT.c ****     
 275:Generated_Source\PSoC5/RTC_INT.c ****     /* Clear OPPS interrupt status flag */
 276:Generated_Source\PSoC5/RTC_INT.c ****     (void) CyPmReadStatus(CY_PM_ONEPPS_INT);
 233              		.loc 1 276 0
 234 0006 0420     		movs	r0, #4
 235 0008 FFF7FEFF 		bl	CyPmReadStatus
 277:Generated_Source\PSoC5/RTC_INT.c **** 
 278:Generated_Source\PSoC5/RTC_INT.c ****     /* Increment seconds counter */
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 10


 279:Generated_Source\PSoC5/RTC_INT.c ****     RTC_currentTimeDate.Sec++;
 236              		.loc 1 279 0
 237 000c 9E4B     		ldr	r3, .L48
 238 000e 1B78     		ldrb	r3, [r3]
 239 0010 DBB2     		uxtb	r3, r3
 240 0012 0133     		adds	r3, r3, #1
 241 0014 DAB2     		uxtb	r2, r3
 242 0016 9C4B     		ldr	r3, .L48
 243 0018 1A70     		strb	r2, [r3]
 280:Generated_Source\PSoC5/RTC_INT.c **** 
 281:Generated_Source\PSoC5/RTC_INT.c ****     /* Check if minute elapsed */
 282:Generated_Source\PSoC5/RTC_INT.c ****     if(RTC_currentTimeDate.Sec > RTC_MINUTE_ELAPSED)
 244              		.loc 1 282 0
 245 001a 9B4B     		ldr	r3, .L48
 246 001c 1B78     		ldrb	r3, [r3]
 247 001e DBB2     		uxtb	r3, r3
 248 0020 3B2B     		cmp	r3, #59
 249 0022 40F2A682 		bls	.L9
 283:Generated_Source\PSoC5/RTC_INT.c ****     {
 284:Generated_Source\PSoC5/RTC_INT.c ****         /* Inc Min */
 285:Generated_Source\PSoC5/RTC_INT.c ****         RTC_currentTimeDate.Min++;
 250              		.loc 1 285 0
 251 0026 984B     		ldr	r3, .L48
 252 0028 5B78     		ldrb	r3, [r3, #1]
 253 002a DBB2     		uxtb	r3, r3
 254 002c 0133     		adds	r3, r3, #1
 255 002e DAB2     		uxtb	r2, r3
 256 0030 954B     		ldr	r3, .L48
 257 0032 5A70     		strb	r2, [r3, #1]
 286:Generated_Source\PSoC5/RTC_INT.c **** 
 287:Generated_Source\PSoC5/RTC_INT.c ****         /* Clear Sec */
 288:Generated_Source\PSoC5/RTC_INT.c ****         RTC_currentTimeDate.Sec = 0u;
 258              		.loc 1 288 0
 259 0034 944B     		ldr	r3, .L48
 260 0036 0022     		movs	r2, #0
 261 0038 1A70     		strb	r2, [r3]
 289:Generated_Source\PSoC5/RTC_INT.c **** 
 290:Generated_Source\PSoC5/RTC_INT.c ****         if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 262              		.loc 1 290 0
 263 003a 934B     		ldr	r3, .L48
 264 003c 5B78     		ldrb	r3, [r3, #1]
 265 003e DBB2     		uxtb	r3, r3
 266 0040 3B2B     		cmp	r3, #59
 267 0042 40F24682 		bls	.L10
 291:Generated_Source\PSoC5/RTC_INT.c ****         {
 292:Generated_Source\PSoC5/RTC_INT.c ****             /* Inc HOUR */
 293:Generated_Source\PSoC5/RTC_INT.c ****             RTC_currentTimeDate.Hour++;
 268              		.loc 1 293 0
 269 0046 904B     		ldr	r3, .L48
 270 0048 9B78     		ldrb	r3, [r3, #2]
 271 004a DBB2     		uxtb	r3, r3
 272 004c 0133     		adds	r3, r3, #1
 273 004e DAB2     		uxtb	r2, r3
 274 0050 8D4B     		ldr	r3, .L48
 275 0052 9A70     		strb	r2, [r3, #2]
 294:Generated_Source\PSoC5/RTC_INT.c **** 
 295:Generated_Source\PSoC5/RTC_INT.c ****             /* Clear Min */
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 11


 296:Generated_Source\PSoC5/RTC_INT.c ****             RTC_currentTimeDate.Min = 0u;
 276              		.loc 1 296 0
 277 0054 8C4B     		ldr	r3, .L48
 278 0056 0022     		movs	r2, #0
 279 0058 5A70     		strb	r2, [r3, #1]
 297:Generated_Source\PSoC5/RTC_INT.c **** 
 298:Generated_Source\PSoC5/RTC_INT.c ****             /* Day roll over */
 299:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 280              		.loc 1 299 0
 281 005a 8B4B     		ldr	r3, .L48
 282 005c 9B78     		ldrb	r3, [r3, #2]
 283 005e DBB2     		uxtb	r3, r3
 284 0060 172B     		cmp	r3, #23
 285 0062 40F2DD81 		bls	.L11
 300:Generated_Source\PSoC5/RTC_INT.c ****             {
 301:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfMonth */
 302:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfMonth++;
 286              		.loc 1 302 0
 287 0066 884B     		ldr	r3, .L48
 288 0068 1B79     		ldrb	r3, [r3, #4]
 289 006a DBB2     		uxtb	r3, r3
 290 006c 0133     		adds	r3, r3, #1
 291 006e DAB2     		uxtb	r2, r3
 292 0070 854B     		ldr	r3, .L48
 293 0072 1A71     		strb	r2, [r3, #4]
 303:Generated_Source\PSoC5/RTC_INT.c **** 
 304:Generated_Source\PSoC5/RTC_INT.c ****                 /* Clear Hour */
 305:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.Hour = 0u;
 294              		.loc 1 305 0
 295 0074 844B     		ldr	r3, .L48
 296 0076 0022     		movs	r2, #0
 297 0078 9A70     		strb	r2, [r3, #2]
 306:Generated_Source\PSoC5/RTC_INT.c **** 
 307:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfYear */
 308:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfYear++;
 298              		.loc 1 308 0
 299 007a 834B     		ldr	r3, .L48
 300 007c DB88     		ldrh	r3, [r3, #6]	@ movhi
 301 007e 9BB2     		uxth	r3, r3
 302 0080 0133     		adds	r3, r3, #1
 303 0082 9AB2     		uxth	r2, r3
 304 0084 804B     		ldr	r3, .L48
 305 0086 DA80     		strh	r2, [r3, #6]	@ movhi
 309:Generated_Source\PSoC5/RTC_INT.c **** 
 310:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfWeek */
 311:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfWeek++;
 306              		.loc 1 311 0
 307 0088 7F4B     		ldr	r3, .L48
 308 008a DB78     		ldrb	r3, [r3, #3]
 309 008c DBB2     		uxtb	r3, r3
 310 008e 0133     		adds	r3, r3, #1
 311 0090 DAB2     		uxtb	r2, r3
 312 0092 7D4B     		ldr	r3, .L48
 313 0094 DA70     		strb	r2, [r3, #3]
 312:Generated_Source\PSoC5/RTC_INT.c **** 
 313:Generated_Source\PSoC5/RTC_INT.c ****                 /* Check DayOfWeek */
 314:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 12


 314              		.loc 1 314 0
 315 0096 7C4B     		ldr	r3, .L48
 316 0098 DB78     		ldrb	r3, [r3, #3]
 317 009a DBB2     		uxtb	r3, r3
 318 009c 072B     		cmp	r3, #7
 319 009e 02D9     		bls	.L12
 315:Generated_Source\PSoC5/RTC_INT.c ****                 {
 316:Generated_Source\PSoC5/RTC_INT.c ****                     /* start new week */
 317:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.DayOfWeek = 1u;
 320              		.loc 1 317 0
 321 00a0 794B     		ldr	r3, .L48
 322 00a2 0122     		movs	r2, #1
 323 00a4 DA70     		strb	r2, [r3, #3]
 324              	.L12:
 318:Generated_Source\PSoC5/RTC_INT.c ****                 }
 319:Generated_Source\PSoC5/RTC_INT.c **** 
 320:Generated_Source\PSoC5/RTC_INT.c ****                 /* Day of month roll over.
 321:Generated_Source\PSoC5/RTC_INT.c ****                 * Check if day of month greater than 29 in February of leap year or
 322:Generated_Source\PSoC5/RTC_INT.c ****                 * if day of month greater than 28 NOT in February of NON leap year or
 323:Generated_Source\PSoC5/RTC_INT.c ****                 * if day of month greater than it should be in every month in non leap year
 324:Generated_Source\PSoC5/RTC_INT.c ****                 */
 325:Generated_Source\PSoC5/RTC_INT.c ****                 if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 325              		.loc 1 325 0
 326 00a6 794B     		ldr	r3, .L48+4
 327 00a8 1B78     		ldrb	r3, [r3]
 328 00aa DBB2     		uxtb	r3, r3
 329 00ac 03F00203 		and	r3, r3, #2
 330 00b0 002B     		cmp	r3, #0
 331 00b2 11D0     		beq	.L13
 326:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 332              		.loc 1 326 0 discriminator 1
 333 00b4 744B     		ldr	r3, .L48
 334 00b6 1B7A     		ldrb	r3, [r3, #8]
 335 00b8 DBB2     		uxtb	r3, r3
 325:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 336              		.loc 1 325 0 discriminator 1
 337 00ba 022B     		cmp	r3, #2
 338 00bc 0CD1     		bne	.L13
 327:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 339              		.loc 1 327 0
 340 00be 724B     		ldr	r3, .L48
 341 00c0 1B79     		ldrb	r3, [r3, #4]
 342 00c2 DBB2     		uxtb	r3, r3
 343 00c4 1946     		mov	r1, r3
 328:Generated_Source\PSoC5/RTC_INT.c ****                              (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 344              		.loc 1 328 0
 345 00c6 704B     		ldr	r3, .L48
 346 00c8 1B7A     		ldrb	r3, [r3, #8]
 347 00ca DBB2     		uxtb	r3, r3
 348 00cc 013B     		subs	r3, r3, #1
 349 00ce 704A     		ldr	r2, .L48+8
 350 00d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 351 00d2 0133     		adds	r3, r3, #1
 326:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 352              		.loc 1 326 0
 353 00d4 9942     		cmp	r1, r3
 354 00d6 2AD8     		bhi	.L14
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 13


 355              	.L13:
 329:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY))  &&
 356              		.loc 1 329 0
 357 00d8 6C4B     		ldr	r3, .L48+4
 358 00da 1B78     		ldrb	r3, [r3]
 359 00dc DBB2     		uxtb	r3, r3
 360 00de 03F00203 		and	r3, r3, #2
 328:Generated_Source\PSoC5/RTC_INT.c ****                              (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 361              		.loc 1 328 0
 362 00e2 002B     		cmp	r3, #0
 363 00e4 0FD0     		beq	.L15
 330:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month != RTC_FEBRUARY) &&
 364              		.loc 1 330 0
 365 00e6 684B     		ldr	r3, .L48
 366 00e8 1B7A     		ldrb	r3, [r3, #8]
 367 00ea DBB2     		uxtb	r3, r3
 329:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY))  &&
 368              		.loc 1 329 0
 369 00ec 022B     		cmp	r3, #2
 370 00ee 0AD0     		beq	.L15
 331:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 371              		.loc 1 331 0
 372 00f0 654B     		ldr	r3, .L48
 373 00f2 1B79     		ldrb	r3, [r3, #4]
 374 00f4 DAB2     		uxtb	r2, r3
 332:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 375              		.loc 1 332 0
 376 00f6 644B     		ldr	r3, .L48
 377 00f8 1B7A     		ldrb	r3, [r3, #8]
 378 00fa DBB2     		uxtb	r3, r3
 379 00fc 013B     		subs	r3, r3, #1
 380 00fe 6449     		ldr	r1, .L48+8
 381 0100 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 330:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month != RTC_FEBRUARY) &&
 382              		.loc 1 330 0
 383 0102 9A42     		cmp	r2, r3
 384 0104 13D8     		bhi	.L14
 385              	.L15:
 333:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY))  &&
 386              		.loc 1 333 0
 387 0106 614B     		ldr	r3, .L48+4
 388 0108 1B78     		ldrb	r3, [r3]
 389 010a DBB2     		uxtb	r3, r3
 390 010c 03F00203 		and	r3, r3, #2
 332:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 391              		.loc 1 332 0
 392 0110 002B     		cmp	r3, #0
 393 0112 40F0F480 		bne	.L16
 334:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 394              		.loc 1 334 0
 395 0116 5C4B     		ldr	r3, .L48
 396 0118 1B79     		ldrb	r3, [r3, #4]
 397 011a DAB2     		uxtb	r2, r3
 335:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
 398              		.loc 1 335 0
 399 011c 5A4B     		ldr	r3, .L48
 400 011e 1B7A     		ldrb	r3, [r3, #8]
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 14


 401 0120 DBB2     		uxtb	r3, r3
 402 0122 013B     		subs	r3, r3, #1
 403 0124 5A49     		ldr	r1, .L48+8
 404 0126 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 333:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY))  &&
 405              		.loc 1 333 0
 406 0128 9A42     		cmp	r2, r3
 407 012a 40F2E880 		bls	.L16
 408              	.L14:
 336:Generated_Source\PSoC5/RTC_INT.c ****                 {
 337:Generated_Source\PSoC5/RTC_INT.c ****                     /* Inc Month */
 338:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.Month++;
 409              		.loc 1 338 0
 410 012e 564B     		ldr	r3, .L48
 411 0130 1B7A     		ldrb	r3, [r3, #8]
 412 0132 DBB2     		uxtb	r3, r3
 413 0134 0133     		adds	r3, r3, #1
 414 0136 DAB2     		uxtb	r2, r3
 415 0138 534B     		ldr	r3, .L48
 416 013a 1A72     		strb	r2, [r3, #8]
 339:Generated_Source\PSoC5/RTC_INT.c **** 
 340:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set first day of month */
 341:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.DayOfMonth = 1u;
 417              		.loc 1 341 0
 418 013c 524B     		ldr	r3, .L48
 419 013e 0122     		movs	r2, #1
 420 0140 1A71     		strb	r2, [r3, #4]
 342:Generated_Source\PSoC5/RTC_INT.c **** 
 343:Generated_Source\PSoC5/RTC_INT.c ****                     /* Year roll over */
 344:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 421              		.loc 1 344 0
 422 0142 514B     		ldr	r3, .L48
 423 0144 1B7A     		ldrb	r3, [r3, #8]
 424 0146 DBB2     		uxtb	r3, r3
 425 0148 0C2B     		cmp	r3, #12
 426 014a 40F28580 		bls	.L17
 345:Generated_Source\PSoC5/RTC_INT.c ****                     {
 346:Generated_Source\PSoC5/RTC_INT.c ****                         /* Inc Year */
 347:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.Year++;
 427              		.loc 1 347 0
 428 014e 4E4B     		ldr	r3, .L48
 429 0150 5B89     		ldrh	r3, [r3, #10]	@ movhi
 430 0152 9BB2     		uxth	r3, r3
 431 0154 0133     		adds	r3, r3, #1
 432 0156 9AB2     		uxth	r2, r3
 433 0158 4B4B     		ldr	r3, .L48
 434 015a 5A81     		strh	r2, [r3, #10]	@ movhi
 348:Generated_Source\PSoC5/RTC_INT.c **** 
 349:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set first month of year */
 350:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.Month = 1u;
 435              		.loc 1 350 0
 436 015c 4A4B     		ldr	r3, .L48
 437 015e 0122     		movs	r2, #1
 438 0160 1A72     		strb	r2, [r3, #8]
 351:Generated_Source\PSoC5/RTC_INT.c **** 
 352:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set first day of year */
 353:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.DayOfYear = 1u;
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 15


 439              		.loc 1 353 0
 440 0162 494B     		ldr	r3, .L48
 441 0164 0122     		movs	r2, #1
 442 0166 DA80     		strh	r2, [r3, #6]	@ movhi
 354:Generated_Source\PSoC5/RTC_INT.c **** 
 355:Generated_Source\PSoC5/RTC_INT.c ****                         /* Is this year leap */
 356:Generated_Source\PSoC5/RTC_INT.c ****                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 443              		.loc 1 356 0
 444 0168 474B     		ldr	r3, .L48
 445 016a 5B89     		ldrh	r3, [r3, #10]	@ movhi
 446 016c 9BB2     		uxth	r3, r3
 447 016e 494A     		ldr	r2, .L48+12
 448 0170 A2FB0312 		umull	r1, r2, r2, r3
 449 0174 D209     		lsrs	r2, r2, #7
 450 0176 4FF4C871 		mov	r1, #400
 451 017a 01FB02F2 		mul	r2, r1, r2
 452 017e 9B1A     		subs	r3, r3, r2
 453 0180 9BB2     		uxth	r3, r3
 454 0182 002B     		cmp	r3, #0
 455 0184 15D0     		beq	.L18
 456              		.loc 1 356 0 is_stmt 0 discriminator 1
 457 0186 404B     		ldr	r3, .L48
 458 0188 5B89     		ldrh	r3, [r3, #10]	@ movhi
 459 018a 9BB2     		uxth	r3, r3
 460 018c 03F00303 		and	r3, r3, #3
 461 0190 9BB2     		uxth	r3, r3
 462 0192 002B     		cmp	r3, #0
 463 0194 16D1     		bne	.L19
 464              		.loc 1 356 0 discriminator 2
 465 0196 3C4B     		ldr	r3, .L48
 466 0198 5B89     		ldrh	r3, [r3, #10]	@ movhi
 467 019a 9BB2     		uxth	r3, r3
 468 019c 3D4A     		ldr	r2, .L48+12
 469 019e A2FB0312 		umull	r1, r2, r2, r3
 470 01a2 5209     		lsrs	r2, r2, #5
 471 01a4 6421     		movs	r1, #100
 472 01a6 01FB02F2 		mul	r2, r1, r2
 473 01aa 9B1A     		subs	r3, r3, r2
 474 01ac 9BB2     		uxth	r3, r3
 475 01ae 002B     		cmp	r3, #0
 476 01b0 08D0     		beq	.L19
 477              	.L18:
 357:Generated_Source\PSoC5/RTC_INT.c ****                         {
 358:Generated_Source\PSoC5/RTC_INT.c ****                             /* Set leap year flag */
 359:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime |= RTC_STATUS_LY;
 478              		.loc 1 359 0 is_stmt 1
 479 01b2 364B     		ldr	r3, .L48+4
 480 01b4 1B78     		ldrb	r3, [r3]
 481 01b6 DBB2     		uxtb	r3, r3
 482 01b8 43F00203 		orr	r3, r3, #2
 483 01bc DAB2     		uxtb	r2, r3
 484 01be 334B     		ldr	r3, .L48+4
 485 01c0 1A70     		strb	r2, [r3]
 486 01c2 07E0     		b	.L20
 487              	.L19:
 360:Generated_Source\PSoC5/RTC_INT.c ****                         }
 361:Generated_Source\PSoC5/RTC_INT.c ****                         else    /* not leap year */
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 16


 362:Generated_Source\PSoC5/RTC_INT.c ****                         {
 363:Generated_Source\PSoC5/RTC_INT.c ****                             /* Clear leap year */
 364:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 488              		.loc 1 364 0
 489 01c4 314B     		ldr	r3, .L48+4
 490 01c6 1B78     		ldrb	r3, [r3]
 491 01c8 DBB2     		uxtb	r3, r3
 492 01ca 23F00203 		bic	r3, r3, #2
 493 01ce DAB2     		uxtb	r2, r3
 494 01d0 2E4B     		ldr	r3, .L48+4
 495 01d2 1A70     		strb	r2, [r3]
 496              	.L20:
 365:Generated_Source\PSoC5/RTC_INT.c ****                         }
 366:Generated_Source\PSoC5/RTC_INT.c **** 
 367:Generated_Source\PSoC5/RTC_INT.c ****                         /* Alarm YEAR */
 368:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 497              		.loc 1 368 0
 498 01d4 304B     		ldr	r3, .L48+16
 499 01d6 1B78     		ldrb	r3, [r3]
 500 01d8 DBB2     		uxtb	r3, r3
 501 01da 5BB2     		sxtb	r3, r3
 502 01dc 002B     		cmp	r3, #0
 503 01de 18DA     		bge	.L21
 369:Generated_Source\PSoC5/RTC_INT.c ****                                                              RTC_ALARM_YEAR_MASK))
 370:Generated_Source\PSoC5/RTC_INT.c ****                         {
 371:Generated_Source\PSoC5/RTC_INT.c ****                             /* Years match */
 372:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 504              		.loc 1 372 0
 505 01e0 2E4B     		ldr	r3, .L48+20
 506 01e2 5B89     		ldrh	r3, [r3, #10]	@ movhi
 507 01e4 9AB2     		uxth	r2, r3
 508 01e6 284B     		ldr	r3, .L48
 509 01e8 5B89     		ldrh	r3, [r3, #10]	@ movhi
 510 01ea 9BB2     		uxth	r3, r3
 511 01ec 9A42     		cmp	r2, r3
 512 01ee 08D1     		bne	.L22
 373:Generated_Source\PSoC5/RTC_INT.c ****                             {
 374:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Rise year alarm */
 375:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 513              		.loc 1 375 0
 514 01f0 2B4B     		ldr	r3, .L48+24
 515 01f2 1B78     		ldrb	r3, [r3]
 516 01f4 DBB2     		uxtb	r3, r3
 517 01f6 63F07F03 		orn	r3, r3, #127
 518 01fa DAB2     		uxtb	r2, r3
 519 01fc 284B     		ldr	r3, .L48+24
 520 01fe 1A70     		strb	r2, [r3]
 521 0200 07E0     		b	.L21
 522              	.L22:
 376:Generated_Source\PSoC5/RTC_INT.c ****                             }
 377:Generated_Source\PSoC5/RTC_INT.c ****                             else    /* Years do not match */
 378:Generated_Source\PSoC5/RTC_INT.c ****                             {
 379:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Clear year alarm */
 380:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 523              		.loc 1 380 0
 524 0202 274B     		ldr	r3, .L48+24
 525 0204 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 17


 526 0206 DBB2     		uxtb	r3, r3
 527 0208 03F07F03 		and	r3, r3, #127
 528 020c DAB2     		uxtb	r2, r3
 529 020e 244B     		ldr	r3, .L48+24
 530 0210 1A70     		strb	r2, [r3]
 531              	.L21:
 381:Generated_Source\PSoC5/RTC_INT.c ****                             }
 382:Generated_Source\PSoC5/RTC_INT.c ****                         } /* do not alarm year */
 383:Generated_Source\PSoC5/RTC_INT.c **** 
 384:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set Alarm flag event */
 385:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_tmp = RTC_alarmCfgMask;
 532              		.loc 1 385 0
 533 0212 214B     		ldr	r3, .L48+16
 534 0214 1B78     		ldrb	r3, [r3]
 535 0216 FB71     		strb	r3, [r7, #7]
 386:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_SET_ALARM(RTC_tmp,
 536              		.loc 1 386 0
 537 0218 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 538 021a 002B     		cmp	r3, #0
 539 021c 13D0     		beq	.L23
 540              		.loc 1 386 0 is_stmt 0 discriminator 1
 541 021e 204B     		ldr	r3, .L48+24
 542 0220 1B78     		ldrb	r3, [r3]
 543 0222 DAB2     		uxtb	r2, r3
 544 0224 FB79     		ldrb	r3, [r7, #7]
 545 0226 1340     		ands	r3, r3, r2
 546 0228 DBB2     		uxtb	r3, r3
 547 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 548 022c 9A42     		cmp	r2, r3
 549 022e 0AD1     		bne	.L23
 550              		.loc 1 386 0 discriminator 2
 551 0230 164B     		ldr	r3, .L48+4
 552 0232 1B78     		ldrb	r3, [r3]
 553 0234 DBB2     		uxtb	r3, r3
 554 0236 43F00803 		orr	r3, r3, #8
 555 023a DAB2     		uxtb	r2, r3
 556 023c 134B     		ldr	r3, .L48+4
 557 023e 1A70     		strb	r2, [r3]
 558 0240 174B     		ldr	r3, .L48+24
 559 0242 0022     		movs	r2, #0
 560 0244 1A70     		strb	r2, [r3]
 561              	.L23:
 387:Generated_Source\PSoC5/RTC_INT.c ****                                                    RTC_alarmCurStatus,
 388:Generated_Source\PSoC5/RTC_INT.c ****                                                    RTC_statusDateTime);
 389:Generated_Source\PSoC5/RTC_INT.c **** 
 390:Generated_Source\PSoC5/RTC_INT.c ****                         /* Every Year */
 391:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 562              		.loc 1 391 0 is_stmt 1
 563 0246 174B     		ldr	r3, .L48+28
 564 0248 1B78     		ldrb	r3, [r3]
 565 024a DBB2     		uxtb	r3, r3
 566 024c 03F04003 		and	r3, r3, #64
 567 0250 002B     		cmp	r3, #0
 568 0252 01D0     		beq	.L17
 392:Generated_Source\PSoC5/RTC_INT.c ****                                                              RTC_INTERVAL_YEAR_MASK))
 393:Generated_Source\PSoC5/RTC_INT.c ****                         {
 394:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_EveryYearHandler();
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 18


 569              		.loc 1 394 0
 570 0254 FFF7FEFF 		bl	RTC_EveryYearHandler
 571              	.L17:
 395:Generated_Source\PSoC5/RTC_INT.c ****                         }
 396:Generated_Source\PSoC5/RTC_INT.c **** 
 397:Generated_Source\PSoC5/RTC_INT.c ****                     } /* Month > 12 */
 398:Generated_Source\PSoC5/RTC_INT.c **** 
 399:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm MONTH */
 400:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 572              		.loc 1 400 0
 573 0258 0F4B     		ldr	r3, .L48+16
 574 025a 1B78     		ldrb	r3, [r3]
 575 025c DBB2     		uxtb	r3, r3
 576 025e 03F04003 		and	r3, r3, #64
 577 0262 002B     		cmp	r3, #0
 578 0264 28D0     		beq	.L24
 401:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_MONTH_MASK))
 402:Generated_Source\PSoC5/RTC_INT.c ****                     {
 403:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 579              		.loc 1 403 0
 580 0266 0D4B     		ldr	r3, .L48+20
 581 0268 1B7A     		ldrb	r3, [r3, #8]
 582 026a DAB2     		uxtb	r2, r3
 583 026c 064B     		ldr	r3, .L48
 584 026e 1B7A     		ldrb	r3, [r3, #8]
 585 0270 DBB2     		uxtb	r3, r3
 586 0272 9A42     		cmp	r2, r3
 587 0274 18D1     		bne	.L25
 404:Generated_Source\PSoC5/RTC_INT.c ****                         {
 405:Generated_Source\PSoC5/RTC_INT.c ****                             /* Set month alarm */
 406:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 588              		.loc 1 406 0
 589 0276 0A4B     		ldr	r3, .L48+24
 590 0278 1B78     		ldrb	r3, [r3]
 591 027a DBB2     		uxtb	r3, r3
 592 027c 43F04003 		orr	r3, r3, #64
 593 0280 DAB2     		uxtb	r2, r3
 594 0282 074B     		ldr	r3, .L48+24
 595 0284 1A70     		strb	r2, [r3]
 596 0286 17E0     		b	.L24
 597              	.L49:
 598              		.align	2
 599              	.L48:
 600 0288 00000000 		.word	RTC_currentTimeDate
 601 028c 00000000 		.word	RTC_statusDateTime
 602 0290 00000000 		.word	RTC_daysInMonths
 603 0294 1F85EB51 		.word	1374389535
 604 0298 00000000 		.word	RTC_alarmCfgMask
 605 029c 00000000 		.word	RTC_alarmCfgTimeDate
 606 02a0 00000000 		.word	RTC_alarmCurStatus
 607 02a4 00000000 		.word	RTC_intervalCfgMask
 608              	.L25:
 407:Generated_Source\PSoC5/RTC_INT.c ****                         }
 408:Generated_Source\PSoC5/RTC_INT.c ****                         else
 409:Generated_Source\PSoC5/RTC_INT.c ****                         {
 410:Generated_Source\PSoC5/RTC_INT.c ****                             /* Clear month alarm */
 411:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 19


 609              		.loc 1 411 0
 610 02a8 964B     		ldr	r3, .L50
 611 02aa 1B78     		ldrb	r3, [r3]
 612 02ac DBB2     		uxtb	r3, r3
 613 02ae 23F04003 		bic	r3, r3, #64
 614 02b2 DAB2     		uxtb	r2, r3
 615 02b4 934B     		ldr	r3, .L50
 616 02b6 1A70     		strb	r2, [r3]
 617              	.L24:
 412:Generated_Source\PSoC5/RTC_INT.c ****                         }
 413:Generated_Source\PSoC5/RTC_INT.c ****                     }   /* Month alarm is masked */
 414:Generated_Source\PSoC5/RTC_INT.c **** 
 415:Generated_Source\PSoC5/RTC_INT.c ****                     #if (1u == RTC_DST_FUNC_ENABLE)
 416:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
 417:Generated_Source\PSoC5/RTC_INT.c ****                         {
 418:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus |= RTC_DST_MONTH;
 419:Generated_Source\PSoC5/RTC_INT.c ****                         }
 420:Generated_Source\PSoC5/RTC_INT.c ****                         else
 421:Generated_Source\PSoC5/RTC_INT.c ****                         {
 422:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
 423:Generated_Source\PSoC5/RTC_INT.c ****                         }
 424:Generated_Source\PSoC5/RTC_INT.c **** 
 425:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_dstTimeDateStart.Month == RTC_currentTimeDate.Month)
 426:Generated_Source\PSoC5/RTC_INT.c ****                         {
 427:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus |= RTC_DST_MONTH;
 428:Generated_Source\PSoC5/RTC_INT.c ****                         }
 429:Generated_Source\PSoC5/RTC_INT.c ****                         else
 430:Generated_Source\PSoC5/RTC_INT.c ****                         {
 431:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus &= (uint8)(~RTC_DST_MONTH);
 432:Generated_Source\PSoC5/RTC_INT.c ****                         }
 433:Generated_Source\PSoC5/RTC_INT.c ****                     #endif /* 1u == RTC_DST_FUNC_ENABLE */
 434:Generated_Source\PSoC5/RTC_INT.c **** 
 435:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set Alarm flag event */
 436:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_tmp = RTC_alarmCfgMask;
 618              		.loc 1 436 0
 619 02b8 934B     		ldr	r3, .L50+4
 620 02ba 1B78     		ldrb	r3, [r3]
 621 02bc FB71     		strb	r3, [r7, #7]
 437:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_SET_ALARM(RTC_tmp,
 622              		.loc 1 437 0
 623 02be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 624 02c0 002B     		cmp	r3, #0
 625 02c2 13D0     		beq	.L26
 626              		.loc 1 437 0 is_stmt 0 discriminator 1
 627 02c4 8F4B     		ldr	r3, .L50
 628 02c6 1B78     		ldrb	r3, [r3]
 629 02c8 DAB2     		uxtb	r2, r3
 630 02ca FB79     		ldrb	r3, [r7, #7]
 631 02cc 1340     		ands	r3, r3, r2
 632 02ce DBB2     		uxtb	r3, r3
 633 02d0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 634 02d2 9A42     		cmp	r2, r3
 635 02d4 0AD1     		bne	.L26
 636              		.loc 1 437 0 discriminator 2
 637 02d6 8D4B     		ldr	r3, .L50+8
 638 02d8 1B78     		ldrb	r3, [r3]
 639 02da DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 20


 640 02dc 43F00803 		orr	r3, r3, #8
 641 02e0 DAB2     		uxtb	r2, r3
 642 02e2 8A4B     		ldr	r3, .L50+8
 643 02e4 1A70     		strb	r2, [r3]
 644 02e6 874B     		ldr	r3, .L50
 645 02e8 0022     		movs	r2, #0
 646 02ea 1A70     		strb	r2, [r3]
 647              	.L26:
 438:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_alarmCurStatus,
 439:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_statusDateTime);
 440:Generated_Source\PSoC5/RTC_INT.c **** 
 441:Generated_Source\PSoC5/RTC_INT.c ****                     /* Every Month */
 442:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 648              		.loc 1 442 0 is_stmt 1
 649 02ec 884B     		ldr	r3, .L50+12
 650 02ee 1B78     		ldrb	r3, [r3]
 651 02f0 DBB2     		uxtb	r3, r3
 652 02f2 03F02003 		and	r3, r3, #32
 653 02f6 002B     		cmp	r3, #0
 654 02f8 01D0     		beq	.L16
 443:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_INTERVAL_MONTH_MASK))
 444:Generated_Source\PSoC5/RTC_INT.c ****                     {
 445:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_EveryMonthHandler();
 655              		.loc 1 445 0
 656 02fa FFF7FEFF 		bl	RTC_EveryMonthHandler
 657              	.L16:
 446:Generated_Source\PSoC5/RTC_INT.c ****                     }
 447:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day roll over */
 448:Generated_Source\PSoC5/RTC_INT.c **** 
 449:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFWEEK */
 450:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 658              		.loc 1 450 0
 659 02fe 824B     		ldr	r3, .L50+4
 660 0300 1B78     		ldrb	r3, [r3]
 661 0302 DBB2     		uxtb	r3, r3
 662 0304 03F00803 		and	r3, r3, #8
 663 0308 002B     		cmp	r3, #0
 664 030a 18D0     		beq	.L27
 451:Generated_Source\PSoC5/RTC_INT.c ****                                                      RTC_ALARM_DAYOFWEEK_MASK))
 452:Generated_Source\PSoC5/RTC_INT.c ****                 {
 453:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 665              		.loc 1 453 0
 666 030c 814B     		ldr	r3, .L50+16
 667 030e DB78     		ldrb	r3, [r3, #3]
 668 0310 DAB2     		uxtb	r2, r3
 669 0312 814B     		ldr	r3, .L50+20
 670 0314 DB78     		ldrb	r3, [r3, #3]
 671 0316 DBB2     		uxtb	r3, r3
 672 0318 9A42     		cmp	r2, r3
 673 031a 08D1     		bne	.L28
 454:Generated_Source\PSoC5/RTC_INT.c ****                     {
 455:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of week alarm */
 456:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 674              		.loc 1 456 0
 675 031c 794B     		ldr	r3, .L50
 676 031e 1B78     		ldrb	r3, [r3]
 677 0320 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 21


 678 0322 43F00803 		orr	r3, r3, #8
 679 0326 DAB2     		uxtb	r2, r3
 680 0328 764B     		ldr	r3, .L50
 681 032a 1A70     		strb	r2, [r3]
 682 032c 07E0     		b	.L27
 683              	.L28:
 457:Generated_Source\PSoC5/RTC_INT.c ****                     }
 458:Generated_Source\PSoC5/RTC_INT.c ****                     else
 459:Generated_Source\PSoC5/RTC_INT.c ****                     {
 460:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of week alarm */
 461:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 684              		.loc 1 461 0
 685 032e 754B     		ldr	r3, .L50
 686 0330 1B78     		ldrb	r3, [r3]
 687 0332 DBB2     		uxtb	r3, r3
 688 0334 23F00803 		bic	r3, r3, #8
 689 0338 DAB2     		uxtb	r2, r3
 690 033a 724B     		ldr	r3, .L50
 691 033c 1A70     		strb	r2, [r3]
 692              	.L27:
 462:Generated_Source\PSoC5/RTC_INT.c ****                     }
 463:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of week alarm is masked */
 464:Generated_Source\PSoC5/RTC_INT.c **** 
 465:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFYEAR */
 466:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 693              		.loc 1 466 0
 694 033e 724B     		ldr	r3, .L50+4
 695 0340 1B78     		ldrb	r3, [r3]
 696 0342 DBB2     		uxtb	r3, r3
 697 0344 03F02003 		and	r3, r3, #32
 698 0348 002B     		cmp	r3, #0
 699 034a 18D0     		beq	.L29
 467:Generated_Source\PSoC5/RTC_INT.c ****                                                      RTC_ALARM_DAYOFYEAR_MASK))
 468:Generated_Source\PSoC5/RTC_INT.c ****                 {
 469:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 700              		.loc 1 469 0
 701 034c 714B     		ldr	r3, .L50+16
 702 034e DB88     		ldrh	r3, [r3, #6]	@ movhi
 703 0350 9AB2     		uxth	r2, r3
 704 0352 714B     		ldr	r3, .L50+20
 705 0354 DB88     		ldrh	r3, [r3, #6]	@ movhi
 706 0356 9BB2     		uxth	r3, r3
 707 0358 9A42     		cmp	r2, r3
 708 035a 08D1     		bne	.L30
 470:Generated_Source\PSoC5/RTC_INT.c ****                     {
 471:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of year alarm */
 472:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 709              		.loc 1 472 0
 710 035c 694B     		ldr	r3, .L50
 711 035e 1B78     		ldrb	r3, [r3]
 712 0360 DBB2     		uxtb	r3, r3
 713 0362 43F02003 		orr	r3, r3, #32
 714 0366 DAB2     		uxtb	r2, r3
 715 0368 664B     		ldr	r3, .L50
 716 036a 1A70     		strb	r2, [r3]
 717 036c 07E0     		b	.L29
 718              	.L30:
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 22


 473:Generated_Source\PSoC5/RTC_INT.c ****                     }
 474:Generated_Source\PSoC5/RTC_INT.c ****                     else
 475:Generated_Source\PSoC5/RTC_INT.c ****                     {
 476:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of year alarm */
 477:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 719              		.loc 1 477 0
 720 036e 654B     		ldr	r3, .L50
 721 0370 1B78     		ldrb	r3, [r3]
 722 0372 DBB2     		uxtb	r3, r3
 723 0374 23F02003 		bic	r3, r3, #32
 724 0378 DAB2     		uxtb	r2, r3
 725 037a 624B     		ldr	r3, .L50
 726 037c 1A70     		strb	r2, [r3]
 727              	.L29:
 478:Generated_Source\PSoC5/RTC_INT.c ****                     }
 479:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of year alarm is masked */
 480:Generated_Source\PSoC5/RTC_INT.c **** 
 481:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFMONTH */
 482:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 728              		.loc 1 482 0
 729 037e 624B     		ldr	r3, .L50+4
 730 0380 1B78     		ldrb	r3, [r3]
 731 0382 DBB2     		uxtb	r3, r3
 732 0384 03F01003 		and	r3, r3, #16
 733 0388 002B     		cmp	r3, #0
 734 038a 18D0     		beq	.L31
 483:Generated_Source\PSoC5/RTC_INT.c ****                          RTC_ALARM_DAYOFMONTH_MASK))
 484:Generated_Source\PSoC5/RTC_INT.c ****                 {
 485:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 735              		.loc 1 485 0
 736 038c 614B     		ldr	r3, .L50+16
 737 038e 1B79     		ldrb	r3, [r3, #4]
 738 0390 DAB2     		uxtb	r2, r3
 739 0392 614B     		ldr	r3, .L50+20
 740 0394 1B79     		ldrb	r3, [r3, #4]
 741 0396 DBB2     		uxtb	r3, r3
 742 0398 9A42     		cmp	r2, r3
 743 039a 08D1     		bne	.L32
 486:Generated_Source\PSoC5/RTC_INT.c ****                     {
 487:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of month alarm */
 488:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 744              		.loc 1 488 0
 745 039c 594B     		ldr	r3, .L50
 746 039e 1B78     		ldrb	r3, [r3]
 747 03a0 DBB2     		uxtb	r3, r3
 748 03a2 43F01003 		orr	r3, r3, #16
 749 03a6 DAB2     		uxtb	r2, r3
 750 03a8 564B     		ldr	r3, .L50
 751 03aa 1A70     		strb	r2, [r3]
 752 03ac 07E0     		b	.L31
 753              	.L32:
 489:Generated_Source\PSoC5/RTC_INT.c ****                     }
 490:Generated_Source\PSoC5/RTC_INT.c ****                     else
 491:Generated_Source\PSoC5/RTC_INT.c ****                     {
 492:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of month alarm */
 493:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 754              		.loc 1 493 0
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 23


 755 03ae 554B     		ldr	r3, .L50
 756 03b0 1B78     		ldrb	r3, [r3]
 757 03b2 DBB2     		uxtb	r3, r3
 758 03b4 23F01003 		bic	r3, r3, #16
 759 03b8 DAB2     		uxtb	r2, r3
 760 03ba 524B     		ldr	r3, .L50
 761 03bc 1A70     		strb	r2, [r3]
 762              	.L31:
 494:Generated_Source\PSoC5/RTC_INT.c ****                     }
 495:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of month alarm is masked */
 496:Generated_Source\PSoC5/RTC_INT.c **** 
 497:Generated_Source\PSoC5/RTC_INT.c ****                 #if (1u == RTC_DST_FUNC_ENABLE)
 498:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_dstTimeDateStop.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 499:Generated_Source\PSoC5/RTC_INT.c ****                     {
 500:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
 501:Generated_Source\PSoC5/RTC_INT.c ****                     }
 502:Generated_Source\PSoC5/RTC_INT.c ****                     else
 503:Generated_Source\PSoC5/RTC_INT.c ****                     {
 504:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 505:Generated_Source\PSoC5/RTC_INT.c ****                     }
 506:Generated_Source\PSoC5/RTC_INT.c **** 
 507:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_dstTimeDateStart.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 508:Generated_Source\PSoC5/RTC_INT.c ****                     {
 509:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStartStatus |= RTC_DST_DAYOFMONTH;
 510:Generated_Source\PSoC5/RTC_INT.c ****                     }
 511:Generated_Source\PSoC5/RTC_INT.c ****                     else
 512:Generated_Source\PSoC5/RTC_INT.c ****                     {
 513:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStartStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 514:Generated_Source\PSoC5/RTC_INT.c ****                     }
 515:Generated_Source\PSoC5/RTC_INT.c ****                 #endif /* 1u == RTC_DST_FUNC_ENABLE */
 516:Generated_Source\PSoC5/RTC_INT.c **** 
 517:Generated_Source\PSoC5/RTC_INT.c ****                 /* Set Alarm flag event */
 518:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_tmp = RTC_alarmCfgMask;
 763              		.loc 1 518 0
 764 03be 524B     		ldr	r3, .L50+4
 765 03c0 1B78     		ldrb	r3, [r3]
 766 03c2 FB71     		strb	r3, [r7, #7]
 519:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_SET_ALARM(RTC_tmp,
 767              		.loc 1 519 0
 768 03c4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 769 03c6 002B     		cmp	r3, #0
 770 03c8 13D0     		beq	.L33
 771              		.loc 1 519 0 is_stmt 0 discriminator 1
 772 03ca 4E4B     		ldr	r3, .L50
 773 03cc 1B78     		ldrb	r3, [r3]
 774 03ce DAB2     		uxtb	r2, r3
 775 03d0 FB79     		ldrb	r3, [r7, #7]
 776 03d2 1340     		ands	r3, r3, r2
 777 03d4 DBB2     		uxtb	r3, r3
 778 03d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 779 03d8 9A42     		cmp	r2, r3
 780 03da 0AD1     		bne	.L33
 781              		.loc 1 519 0 discriminator 2
 782 03dc 4B4B     		ldr	r3, .L50+8
 783 03de 1B78     		ldrb	r3, [r3]
 784 03e0 DBB2     		uxtb	r3, r3
 785 03e2 43F00803 		orr	r3, r3, #8
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 24


 786 03e6 DAB2     		uxtb	r2, r3
 787 03e8 484B     		ldr	r3, .L50+8
 788 03ea 1A70     		strb	r2, [r3]
 789 03ec 454B     		ldr	r3, .L50
 790 03ee 0022     		movs	r2, #0
 791 03f0 1A70     		strb	r2, [r3]
 792              	.L33:
 520:Generated_Source\PSoC5/RTC_INT.c ****                                            RTC_alarmCurStatus,
 521:Generated_Source\PSoC5/RTC_INT.c ****                                            RTC_statusDateTime);
 522:Generated_Source\PSoC5/RTC_INT.c **** 
 523:Generated_Source\PSoC5/RTC_INT.c ****                 /* Every Day */
 524:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 793              		.loc 1 524 0 is_stmt 1
 794 03f2 474B     		ldr	r3, .L50+12
 795 03f4 1B78     		ldrb	r3, [r3]
 796 03f6 DBB2     		uxtb	r3, r3
 797 03f8 03F00803 		and	r3, r3, #8
 798 03fc 002B     		cmp	r3, #0
 799 03fe 01D0     		beq	.L34
 525:Generated_Source\PSoC5/RTC_INT.c ****                          RTC_INTERVAL_DAY_MASK))
 526:Generated_Source\PSoC5/RTC_INT.c ****                 {
 527:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_EveryDayHandler();
 800              		.loc 1 527 0
 801 0400 FFF7FEFF 		bl	RTC_EveryDayHandler
 802              	.L34:
 528:Generated_Source\PSoC5/RTC_INT.c ****                 }
 529:Generated_Source\PSoC5/RTC_INT.c **** 
 530:Generated_Source\PSoC5/RTC_INT.c ****                 if(1u == RTC_currentTimeDate.DayOfWeek)
 803              		.loc 1 530 0
 804 0404 444B     		ldr	r3, .L50+20
 805 0406 DB78     		ldrb	r3, [r3, #3]
 806 0408 DBB2     		uxtb	r3, r3
 807 040a 012B     		cmp	r3, #1
 808 040c 08D1     		bne	.L11
 531:Generated_Source\PSoC5/RTC_INT.c ****                 {
 532:Generated_Source\PSoC5/RTC_INT.c ****                     /* Every Week */
 533:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 809              		.loc 1 533 0
 810 040e 404B     		ldr	r3, .L50+12
 811 0410 1B78     		ldrb	r3, [r3]
 812 0412 DBB2     		uxtb	r3, r3
 813 0414 03F01003 		and	r3, r3, #16
 814 0418 002B     		cmp	r3, #0
 815 041a 01D0     		beq	.L11
 534:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_INTERVAL_WEEK_MASK))
 535:Generated_Source\PSoC5/RTC_INT.c ****                     {
 536:Generated_Source\PSoC5/RTC_INT.c ****                        RTC_EveryWeekHandler();
 816              		.loc 1 536 0
 817 041c FFF7FEFF 		bl	RTC_EveryWeekHandler
 818              	.L11:
 537:Generated_Source\PSoC5/RTC_INT.c ****                     }
 538:Generated_Source\PSoC5/RTC_INT.c ****                 }
 539:Generated_Source\PSoC5/RTC_INT.c **** 
 540:Generated_Source\PSoC5/RTC_INT.c ****             } /* End of day roll over */
 541:Generated_Source\PSoC5/RTC_INT.c **** 
 542:Generated_Source\PSoC5/RTC_INT.c ****             /* Status set PM/AM flag */
 543:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 25


 819              		.loc 1 543 0
 820 0420 3D4B     		ldr	r3, .L50+20
 821 0422 9B78     		ldrb	r3, [r3, #2]
 822 0424 DBB2     		uxtb	r3, r3
 823 0426 0B2B     		cmp	r3, #11
 824 0428 08D8     		bhi	.L35
 544:Generated_Source\PSoC5/RTC_INT.c ****             {
 545:Generated_Source\PSoC5/RTC_INT.c ****                 /* AM Hour 00:00-11:59, flag zero */
 546:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 825              		.loc 1 546 0
 826 042a 384B     		ldr	r3, .L50+8
 827 042c 1B78     		ldrb	r3, [r3]
 828 042e DBB2     		uxtb	r3, r3
 829 0430 23F00403 		bic	r3, r3, #4
 830 0434 DAB2     		uxtb	r2, r3
 831 0436 354B     		ldr	r3, .L50+8
 832 0438 1A70     		strb	r2, [r3]
 833 043a 07E0     		b	.L36
 834              	.L35:
 547:Generated_Source\PSoC5/RTC_INT.c ****             }
 548:Generated_Source\PSoC5/RTC_INT.c ****             else
 549:Generated_Source\PSoC5/RTC_INT.c ****             {
 550:Generated_Source\PSoC5/RTC_INT.c ****                 /* PM Hour 12:00-23:59, flag set */
 551:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_statusDateTime |= RTC_STATUS_AM_PM;
 835              		.loc 1 551 0
 836 043c 334B     		ldr	r3, .L50+8
 837 043e 1B78     		ldrb	r3, [r3]
 838 0440 DBB2     		uxtb	r3, r3
 839 0442 43F00403 		orr	r3, r3, #4
 840 0446 DAB2     		uxtb	r2, r3
 841 0448 304B     		ldr	r3, .L50+8
 842 044a 1A70     		strb	r2, [r3]
 843              	.L36:
 552:Generated_Source\PSoC5/RTC_INT.c ****             }
 553:Generated_Source\PSoC5/RTC_INT.c **** 
 554:Generated_Source\PSoC5/RTC_INT.c ****             #if (1u == RTC_DST_FUNC_ENABLE)
 555:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_dstTimeDateStop.Hour == RTC_currentTimeDate.Hour)
 556:Generated_Source\PSoC5/RTC_INT.c ****                 {
 557:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStopStatus |= RTC_DST_HOUR;
 558:Generated_Source\PSoC5/RTC_INT.c ****                 }
 559:Generated_Source\PSoC5/RTC_INT.c ****                 else
 560:Generated_Source\PSoC5/RTC_INT.c ****                 {
 561:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStopStatus &= (uint8)(~RTC_DST_HOUR);
 562:Generated_Source\PSoC5/RTC_INT.c ****                 }
 563:Generated_Source\PSoC5/RTC_INT.c **** 
 564:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_dstTimeDateStart.Hour == RTC_currentTimeDate.Hour)
 565:Generated_Source\PSoC5/RTC_INT.c ****                 {
 566:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStartStatus |= RTC_DST_HOUR;
 567:Generated_Source\PSoC5/RTC_INT.c ****                 }
 568:Generated_Source\PSoC5/RTC_INT.c ****                 else
 569:Generated_Source\PSoC5/RTC_INT.c ****                 {
 570:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_dstStartStatus &= (uint8)(~RTC_DST_HOUR);
 571:Generated_Source\PSoC5/RTC_INT.c ****                 }
 572:Generated_Source\PSoC5/RTC_INT.c **** 
 573:Generated_Source\PSoC5/RTC_INT.c ****                 /* DST Enable ? */
 574:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_dstModeType, RTC_DST_ENABLE))
 575:Generated_Source\PSoC5/RTC_INT.c ****                 {
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 26


 576:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_statusDateTime, RTC_STATUS_DST))
 577:Generated_Source\PSoC5/RTC_INT.c ****                     {
 578:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_dstStopStatus, RTC_DST_HOUR |
 579:Generated_Source\PSoC5/RTC_INT.c ****                                                        RTC_DST_DAYOFMONTH | RTC_DST_MONTH))
 580:Generated_Source\PSoC5/RTC_INT.c ****                         {
 581:Generated_Source\PSoC5/RTC_INT.c ****                             /* Substruct from current value of minutes, number of minutes
 582:Generated_Source\PSoC5/RTC_INT.c ****                             * in DST offset which is out of complete hour
 583:Generated_Source\PSoC5/RTC_INT.c ****                             */
 584:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Min -=
 585:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 586:Generated_Source\PSoC5/RTC_INT.c **** 
 587:Generated_Source\PSoC5/RTC_INT.c ****                             /* Is minute value negative? */
 588:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 589:Generated_Source\PSoC5/RTC_INT.c ****                             {
 590:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Convert to the positive.
 591:Generated_Source\PSoC5/RTC_INT.c ****                                 * HOUR_ELAPSED -     (~currentTimeDate.Min    ) ==
 592:Generated_Source\PSoC5/RTC_INT.c ****                                 * HOUR_ELAPSED + 1 - (~currentTimeDate.Min + 1)
 593:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 594:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Min = RTC_HOUR_ELAPSED -
 595:Generated_Source\PSoC5/RTC_INT.c ****                                                              ((uint8)(~RTC_currentTimeDate.Min));
 596:Generated_Source\PSoC5/RTC_INT.c **** 
 597:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour--;
 598:Generated_Source\PSoC5/RTC_INT.c ****                             }
 599:Generated_Source\PSoC5/RTC_INT.c **** 
 600:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Hour -= RTC_dstOffsetMin /
 601:Generated_Source\PSoC5/RTC_INT.c ****                                                                      (RTC_HOUR_ELAPSED + 1u);
 602:Generated_Source\PSoC5/RTC_INT.c **** 
 603:Generated_Source\PSoC5/RTC_INT.c ****                             /* Day roll over
 604:Generated_Source\PSoC5/RTC_INT.c ****                             * Is hour value negative? */
 605:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 606:Generated_Source\PSoC5/RTC_INT.c ****                             {
 607:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Convert to the positive.
 608:Generated_Source\PSoC5/RTC_INT.c ****                                 * DAY_ELAPSED - (~currentTimeDate.Hour) ==
 609:Generated_Source\PSoC5/RTC_INT.c ****                                 * DAY_ELAPSED + 1 - (~currentTimeDate.Hour + 1)
 610:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 611:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour = RTC_DAY_ELAPSED -
 612:Generated_Source\PSoC5/RTC_INT.c ****                                                               ((uint8)(~RTC_currentTimeDate.Hour));
 613:Generated_Source\PSoC5/RTC_INT.c **** 
 614:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Status set PM/AM flag */
 615:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 616:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 617:Generated_Source\PSoC5/RTC_INT.c ****                                     /* AM Hour 00:00-11:59, flag zero */
 618:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 619:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 620:Generated_Source\PSoC5/RTC_INT.c ****                                 else
 621:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 622:Generated_Source\PSoC5/RTC_INT.c ****                                     /* PM Hour 12:00-23:59, flag set */
 623:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime |= RTC_STATUS_AM_PM;
 624:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 625:Generated_Source\PSoC5/RTC_INT.c **** 
 626:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfMonth--;
 627:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfYear--;
 628:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfWeek--;
 629:Generated_Source\PSoC5/RTC_INT.c **** 
 630:Generated_Source\PSoC5/RTC_INT.c ****                                 if(0u == RTC_currentTimeDate.DayOfWeek)
 631:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 632:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfWeek = RTC_DAYS_IN_WEEK;
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 27


 633:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 634:Generated_Source\PSoC5/RTC_INT.c **** 
 635:Generated_Source\PSoC5/RTC_INT.c ****                                 if(0u == RTC_currentTimeDate.DayOfMonth)
 636:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 637:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.Month--;
 638:Generated_Source\PSoC5/RTC_INT.c ****                                     if(0u == RTC_currentTimeDate.Month)
 639:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 640:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Month = RTC_DECEMBER;
 641:Generated_Source\PSoC5/RTC_INT.c **** 
 642:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.DayOfMonth =
 643:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 644:Generated_Source\PSoC5/RTC_INT.c **** 
 645:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Year--;
 646:Generated_Source\PSoC5/RTC_INT.c **** 
 647:Generated_Source\PSoC5/RTC_INT.c ****                                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 648:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 649:Generated_Source\PSoC5/RTC_INT.c ****                                             /* LP - true, else - false */
 650:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime |= RTC_STATUS_LY;
 651:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfYear =
 652:Generated_Source\PSoC5/RTC_INT.c ****                                                                                     RTC_DAYS_IN_LEA
 653:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 654:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 655:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 656:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 657:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfYear = RTC_DAYS_IN_YEAR;
 658:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 659:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_EveryYearHandler();
 660:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 661:Generated_Source\PSoC5/RTC_INT.c ****                                     else
 662:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 663:Generated_Source\PSoC5/RTC_INT.c ****                                         /* Day of month roll over.
 664:Generated_Source\PSoC5/RTC_INT.c ****                                         * Check if day of month February 29 of leap year
 665:Generated_Source\PSoC5/RTC_INT.c ****                                         */
 666:Generated_Source\PSoC5/RTC_INT.c ****                                         if((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 667:Generated_Source\PSoC5/RTC_INT.c ****                                             (RTC_currentTimeDate.Month == RTC_FEBRUARY))
 668:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 669:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfMonth =
 670:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u]
 671:Generated_Source\PSoC5/RTC_INT.c ****                                             + 1u;
 672:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 673:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 674:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 675:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfMonth =
 676:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 677:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 678:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 679:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_EveryMonthHandler();
 680:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 681:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_EveryDayHandler();
 682:Generated_Source\PSoC5/RTC_INT.c ****                             }
 683:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_DST);
 684:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus = 0u;
 685:Generated_Source\PSoC5/RTC_INT.c ****                         }
 686:Generated_Source\PSoC5/RTC_INT.c ****                     }
 687:Generated_Source\PSoC5/RTC_INT.c ****                     else
 688:Generated_Source\PSoC5/RTC_INT.c ****                     {
 689:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_dstStartStatus,
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 28


 690:Generated_Source\PSoC5/RTC_INT.c ****                                                       (RTC_DST_HOUR | RTC_DST_DAYOFMONTH |
 691:Generated_Source\PSoC5/RTC_INT.c ****                                                        RTC_DST_MONTH)))
 692:Generated_Source\PSoC5/RTC_INT.c ****                         {
 693:Generated_Source\PSoC5/RTC_INT.c ****                             /* Add Hour and Min */
 694:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Min +=
 695:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 696:Generated_Source\PSoC5/RTC_INT.c **** 
 697:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 698:Generated_Source\PSoC5/RTC_INT.c ****                             {
 699:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Adjust Min */
 700:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Min -= (RTC_HOUR_ELAPSED + 1u);
 701:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour++;
 702:Generated_Source\PSoC5/RTC_INT.c ****                             }
 703:Generated_Source\PSoC5/RTC_INT.c **** 
 704:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Hour += RTC_dstOffsetMin /
 705:Generated_Source\PSoC5/RTC_INT.c ****                                                                      (RTC_HOUR_ELAPSED + 1u);
 706:Generated_Source\PSoC5/RTC_INT.c **** 
 707:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 708:Generated_Source\PSoC5/RTC_INT.c ****                             {
 709:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Adjust hour, add day */
 710:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour -= (RTC_DAY_ELAPSED + 1u);
 711:Generated_Source\PSoC5/RTC_INT.c **** 
 712:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Status set PM/AM flag */
 713:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 714:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 715:Generated_Source\PSoC5/RTC_INT.c ****                                     /* AM Hour 00:00-11:59, flag zero */
 716:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 717:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 718:Generated_Source\PSoC5/RTC_INT.c ****                                 else
 719:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 720:Generated_Source\PSoC5/RTC_INT.c ****                                     /* PM Hour 12:00-23:59, flag set */
 721:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime |= RTC_STATUS_AM_PM;
 722:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 723:Generated_Source\PSoC5/RTC_INT.c **** 
 724:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfMonth++;
 725:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfYear++;
 726:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfWeek++;
 727:Generated_Source\PSoC5/RTC_INT.c **** 
 728:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
 729:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 730:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfWeek = 1u;
 731:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 732:Generated_Source\PSoC5/RTC_INT.c **** 
 733:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Day of month roll over.
 734:Generated_Source\PSoC5/RTC_INT.c ****                                 * Check if day of month greater than 29 in February of leap year or
 735:Generated_Source\PSoC5/RTC_INT.c ****                                 * if day of month greater than 28 NOT in February of NON leap year 
 736:Generated_Source\PSoC5/RTC_INT.c ****                                 * if day of month greater than it should be in every month in non l
 737:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 738:Generated_Source\PSoC5/RTC_INT.c ****                                 if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 739:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 740:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 741:Generated_Source\PSoC5/RTC_INT.c ****                                   (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 742:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 743:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month != RTC_FEBRUARY)  &&
 744:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 745:Generated_Source\PSoC5/RTC_INT.c ****                                      RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 746:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY)) &&
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 29


 747:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 748:Generated_Source\PSoC5/RTC_INT.c ****                                      RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
 749:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 750:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.Month++;
 751:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfMonth = 1u;
 752:Generated_Source\PSoC5/RTC_INT.c ****                                     if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 753:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 754:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Month = RTC_JANUARY;
 755:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Year++;
 756:Generated_Source\PSoC5/RTC_INT.c **** 
 757:Generated_Source\PSoC5/RTC_INT.c ****                                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 758:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 759:Generated_Source\PSoC5/RTC_INT.c ****                                             /* LP - true, else - false */
 760:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime |= RTC_STATUS_LY;
 761:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 762:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 763:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 764:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 765:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 766:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.DayOfYear = 1u;
 767:Generated_Source\PSoC5/RTC_INT.c **** 
 768:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_EveryYearHandler();
 769:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 770:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_EveryMonthHandler();
 771:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 772:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_EveryDayHandler();
 773:Generated_Source\PSoC5/RTC_INT.c ****                             }
 774:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime |= RTC_STATUS_DST;
 775:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus = 0u;
 776:Generated_Source\PSoC5/RTC_INT.c **** 
 777:Generated_Source\PSoC5/RTC_INT.c ****                             /* Month */
 778:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
 779:Generated_Source\PSoC5/RTC_INT.c ****                             {
 780:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus |= RTC_DST_MONTH;
 781:Generated_Source\PSoC5/RTC_INT.c ****                             }
 782:Generated_Source\PSoC5/RTC_INT.c ****                             else
 783:Generated_Source\PSoC5/RTC_INT.c ****                             {
 784:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
 785:Generated_Source\PSoC5/RTC_INT.c ****                             }
 786:Generated_Source\PSoC5/RTC_INT.c **** 
 787:Generated_Source\PSoC5/RTC_INT.c ****                             /* DayOfMonth */
 788:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_dstTimeDateStop.DayOfMonth ==
 789:Generated_Source\PSoC5/RTC_INT.c ****                                                                             RTC_currentTimeDate.Day
 790:Generated_Source\PSoC5/RTC_INT.c ****                             {
 791:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
 792:Generated_Source\PSoC5/RTC_INT.c ****                             }
 793:Generated_Source\PSoC5/RTC_INT.c ****                             else
 794:Generated_Source\PSoC5/RTC_INT.c ****                             {
 795:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 796:Generated_Source\PSoC5/RTC_INT.c ****                             }
 797:Generated_Source\PSoC5/RTC_INT.c ****                         }
 798:Generated_Source\PSoC5/RTC_INT.c ****                     }
 799:Generated_Source\PSoC5/RTC_INT.c **** 
 800:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFWEEK */
 801:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 802:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFWEEK_MASK))
 803:Generated_Source\PSoC5/RTC_INT.c ****                     {
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 30


 804:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 805:Generated_Source\PSoC5/RTC_INT.c ****                         {
 806:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 807:Generated_Source\PSoC5/RTC_INT.c ****                         }
 808:Generated_Source\PSoC5/RTC_INT.c ****                         else
 809:Generated_Source\PSoC5/RTC_INT.c ****                         {
 810:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 811:Generated_Source\PSoC5/RTC_INT.c ****                         }
 812:Generated_Source\PSoC5/RTC_INT.c ****                     }
 813:Generated_Source\PSoC5/RTC_INT.c **** 
 814:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFYEAR */
 815:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 816:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFYEAR_MASK))
 817:Generated_Source\PSoC5/RTC_INT.c ****                     {
 818:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 819:Generated_Source\PSoC5/RTC_INT.c ****                         {
 820:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 821:Generated_Source\PSoC5/RTC_INT.c ****                         }
 822:Generated_Source\PSoC5/RTC_INT.c ****                         else
 823:Generated_Source\PSoC5/RTC_INT.c ****                         {
 824:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 825:Generated_Source\PSoC5/RTC_INT.c ****                         }
 826:Generated_Source\PSoC5/RTC_INT.c ****                     }
 827:Generated_Source\PSoC5/RTC_INT.c **** 
 828:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFMONTH */
 829:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 830:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFMONTH_MASK))
 831:Generated_Source\PSoC5/RTC_INT.c ****                     {
 832:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 833:Generated_Source\PSoC5/RTC_INT.c ****                         {
 834:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 835:Generated_Source\PSoC5/RTC_INT.c ****                         }
 836:Generated_Source\PSoC5/RTC_INT.c ****                         else
 837:Generated_Source\PSoC5/RTC_INT.c ****                         {
 838:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 839:Generated_Source\PSoC5/RTC_INT.c ****                         }
 840:Generated_Source\PSoC5/RTC_INT.c ****                     }
 841:Generated_Source\PSoC5/RTC_INT.c **** 
 842:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm MONTH */
 843:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 844:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_MONTH_MASK))
 845:Generated_Source\PSoC5/RTC_INT.c ****                     {
 846:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 847:Generated_Source\PSoC5/RTC_INT.c ****                         {
 848:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 849:Generated_Source\PSoC5/RTC_INT.c ****                         }
 850:Generated_Source\PSoC5/RTC_INT.c ****                         else
 851:Generated_Source\PSoC5/RTC_INT.c ****                         {
 852:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 853:Generated_Source\PSoC5/RTC_INT.c ****                         }
 854:Generated_Source\PSoC5/RTC_INT.c ****                     }
 855:Generated_Source\PSoC5/RTC_INT.c **** 
 856:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm YEAR */
 857:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 858:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_YEAR_MASK))
 859:Generated_Source\PSoC5/RTC_INT.c ****                     {
 860:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 31


 861:Generated_Source\PSoC5/RTC_INT.c ****                         {
 862:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 863:Generated_Source\PSoC5/RTC_INT.c ****                         }
 864:Generated_Source\PSoC5/RTC_INT.c ****                         else
 865:Generated_Source\PSoC5/RTC_INT.c ****                         {
 866:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 867:Generated_Source\PSoC5/RTC_INT.c ****                         }
 868:Generated_Source\PSoC5/RTC_INT.c ****                     }
 869:Generated_Source\PSoC5/RTC_INT.c **** 
 870:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set Alarm flag event */
 871:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_tmp = RTC_alarmCfgMask;
 872:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_SET_ALARM(RTC_tmp,
 873:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_alarmCurStatus,
 874:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_statusDateTime);
 875:Generated_Source\PSoC5/RTC_INT.c ****                 }
 876:Generated_Source\PSoC5/RTC_INT.c ****             #endif /* 1u == RTC_DST_FUNC_ENABLE */
 877:Generated_Source\PSoC5/RTC_INT.c **** 
 878:Generated_Source\PSoC5/RTC_INT.c ****             /* Alarm HOUR */
 879:Generated_Source\PSoC5/RTC_INT.c ****             if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_HOUR_MASK))
 844              		.loc 1 879 0
 845 044c 2E4B     		ldr	r3, .L50+4
 846 044e 1B78     		ldrb	r3, [r3]
 847 0450 DBB2     		uxtb	r3, r3
 848 0452 03F00403 		and	r3, r3, #4
 849 0456 002B     		cmp	r3, #0
 850 0458 18D0     		beq	.L37
 880:Generated_Source\PSoC5/RTC_INT.c ****             {
 881:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_alarmCfgTimeDate.Hour == RTC_currentTimeDate.Hour)
 851              		.loc 1 881 0
 852 045a 2E4B     		ldr	r3, .L50+16
 853 045c 9B78     		ldrb	r3, [r3, #2]
 854 045e DAB2     		uxtb	r2, r3
 855 0460 2D4B     		ldr	r3, .L50+20
 856 0462 9B78     		ldrb	r3, [r3, #2]
 857 0464 DBB2     		uxtb	r3, r3
 858 0466 9A42     		cmp	r2, r3
 859 0468 08D1     		bne	.L38
 882:Generated_Source\PSoC5/RTC_INT.c ****                 {
 883:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_alarmCurStatus |= RTC_ALARM_HOUR_MASK;
 860              		.loc 1 883 0
 861 046a 264B     		ldr	r3, .L50
 862 046c 1B78     		ldrb	r3, [r3]
 863 046e DBB2     		uxtb	r3, r3
 864 0470 43F00403 		orr	r3, r3, #4
 865 0474 DAB2     		uxtb	r2, r3
 866 0476 234B     		ldr	r3, .L50
 867 0478 1A70     		strb	r2, [r3]
 868 047a 07E0     		b	.L37
 869              	.L38:
 884:Generated_Source\PSoC5/RTC_INT.c ****                 }
 885:Generated_Source\PSoC5/RTC_INT.c ****                 else
 886:Generated_Source\PSoC5/RTC_INT.c ****                 {
 887:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_HOUR_MASK);
 870              		.loc 1 887 0
 871 047c 214B     		ldr	r3, .L50
 872 047e 1B78     		ldrb	r3, [r3]
 873 0480 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 32


 874 0482 23F00403 		bic	r3, r3, #4
 875 0486 DAB2     		uxtb	r2, r3
 876 0488 1E4B     		ldr	r3, .L50
 877 048a 1A70     		strb	r2, [r3]
 878              	.L37:
 888:Generated_Source\PSoC5/RTC_INT.c ****                 }
 889:Generated_Source\PSoC5/RTC_INT.c ****             }
 890:Generated_Source\PSoC5/RTC_INT.c **** 
 891:Generated_Source\PSoC5/RTC_INT.c ****             /* Set Alarm flag event */
 892:Generated_Source\PSoC5/RTC_INT.c ****             RTC_tmp = RTC_alarmCfgMask;
 879              		.loc 1 892 0
 880 048c 1E4B     		ldr	r3, .L50+4
 881 048e 1B78     		ldrb	r3, [r3]
 882 0490 FB71     		strb	r3, [r7, #7]
 893:Generated_Source\PSoC5/RTC_INT.c ****             RTC_SET_ALARM(RTC_tmp,
 883              		.loc 1 893 0
 884 0492 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 885 0494 002B     		cmp	r3, #0
 886 0496 13D0     		beq	.L39
 887              		.loc 1 893 0 is_stmt 0 discriminator 1
 888 0498 1A4B     		ldr	r3, .L50
 889 049a 1B78     		ldrb	r3, [r3]
 890 049c DAB2     		uxtb	r2, r3
 891 049e FB79     		ldrb	r3, [r7, #7]
 892 04a0 1340     		ands	r3, r3, r2
 893 04a2 DBB2     		uxtb	r3, r3
 894 04a4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 895 04a6 9A42     		cmp	r2, r3
 896 04a8 0AD1     		bne	.L39
 897              		.loc 1 893 0 discriminator 2
 898 04aa 184B     		ldr	r3, .L50+8
 899 04ac 1B78     		ldrb	r3, [r3]
 900 04ae DBB2     		uxtb	r3, r3
 901 04b0 43F00803 		orr	r3, r3, #8
 902 04b4 DAB2     		uxtb	r2, r3
 903 04b6 154B     		ldr	r3, .L50+8
 904 04b8 1A70     		strb	r2, [r3]
 905 04ba 124B     		ldr	r3, .L50
 906 04bc 0022     		movs	r2, #0
 907 04be 1A70     		strb	r2, [r3]
 908              	.L39:
 894:Generated_Source\PSoC5/RTC_INT.c ****                                        RTC_alarmCurStatus,
 895:Generated_Source\PSoC5/RTC_INT.c ****                                        RTC_statusDateTime);
 896:Generated_Source\PSoC5/RTC_INT.c **** 
 897:Generated_Source\PSoC5/RTC_INT.c ****             /* Every Hour */
 898:Generated_Source\PSoC5/RTC_INT.c ****             if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_HOUR_MASK))
 909              		.loc 1 898 0 is_stmt 1
 910 04c0 134B     		ldr	r3, .L50+12
 911 04c2 1B78     		ldrb	r3, [r3]
 912 04c4 DBB2     		uxtb	r3, r3
 913 04c6 03F00403 		and	r3, r3, #4
 914 04ca 002B     		cmp	r3, #0
 915 04cc 01D0     		beq	.L10
 899:Generated_Source\PSoC5/RTC_INT.c ****             {
 900:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_EveryHourHandler();
 916              		.loc 1 900 0
 917 04ce FFF7FEFF 		bl	RTC_EveryHourHandler
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 33


 918              	.L10:
 901:Generated_Source\PSoC5/RTC_INT.c ****             }
 902:Generated_Source\PSoC5/RTC_INT.c ****         } /* Min > 59 = Hour */
 903:Generated_Source\PSoC5/RTC_INT.c **** 
 904:Generated_Source\PSoC5/RTC_INT.c ****         /* Alarm MIN */
 905:Generated_Source\PSoC5/RTC_INT.c ****         if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_MIN_MASK))
 919              		.loc 1 905 0
 920 04d2 0D4B     		ldr	r3, .L50+4
 921 04d4 1B78     		ldrb	r3, [r3]
 922 04d6 DBB2     		uxtb	r3, r3
 923 04d8 03F00203 		and	r3, r3, #2
 924 04dc 002B     		cmp	r3, #0
 925 04de 25D0     		beq	.L40
 906:Generated_Source\PSoC5/RTC_INT.c ****         {
 907:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_alarmCfgTimeDate.Min == RTC_currentTimeDate.Min)
 926              		.loc 1 907 0
 927 04e0 0C4B     		ldr	r3, .L50+16
 928 04e2 5B78     		ldrb	r3, [r3, #1]
 929 04e4 DAB2     		uxtb	r2, r3
 930 04e6 0C4B     		ldr	r3, .L50+20
 931 04e8 5B78     		ldrb	r3, [r3, #1]
 932 04ea DBB2     		uxtb	r3, r3
 933 04ec 9A42     		cmp	r2, r3
 934 04ee 15D1     		bne	.L41
 908:Generated_Source\PSoC5/RTC_INT.c ****             {
 909:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_alarmCurStatus |= RTC_ALARM_MIN_MASK;
 935              		.loc 1 909 0
 936 04f0 044B     		ldr	r3, .L50
 937 04f2 1B78     		ldrb	r3, [r3]
 938 04f4 DBB2     		uxtb	r3, r3
 939 04f6 43F00203 		orr	r3, r3, #2
 940 04fa DAB2     		uxtb	r2, r3
 941 04fc 014B     		ldr	r3, .L50
 942 04fe 1A70     		strb	r2, [r3]
 943 0500 14E0     		b	.L40
 944              	.L51:
 945 0502 00BF     		.align	2
 946              	.L50:
 947 0504 00000000 		.word	RTC_alarmCurStatus
 948 0508 00000000 		.word	RTC_alarmCfgMask
 949 050c 00000000 		.word	RTC_statusDateTime
 950 0510 00000000 		.word	RTC_intervalCfgMask
 951 0514 00000000 		.word	RTC_alarmCfgTimeDate
 952 0518 00000000 		.word	RTC_currentTimeDate
 953              	.L41:
 910:Generated_Source\PSoC5/RTC_INT.c ****             }
 911:Generated_Source\PSoC5/RTC_INT.c ****             else
 912:Generated_Source\PSoC5/RTC_INT.c ****             {
 913:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MIN_MASK);
 954              		.loc 1 913 0
 955 051c 384B     		ldr	r3, .L52
 956 051e 1B78     		ldrb	r3, [r3]
 957 0520 DBB2     		uxtb	r3, r3
 958 0522 23F00203 		bic	r3, r3, #2
 959 0526 DAB2     		uxtb	r2, r3
 960 0528 354B     		ldr	r3, .L52
 961 052a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 34


 962              	.L40:
 914:Generated_Source\PSoC5/RTC_INT.c ****             }
 915:Generated_Source\PSoC5/RTC_INT.c ****         }
 916:Generated_Source\PSoC5/RTC_INT.c **** 
 917:Generated_Source\PSoC5/RTC_INT.c ****         /* Set Alarm flag event */
 918:Generated_Source\PSoC5/RTC_INT.c ****         RTC_tmp = RTC_alarmCfgMask;
 963              		.loc 1 918 0
 964 052c 354B     		ldr	r3, .L52+4
 965 052e 1B78     		ldrb	r3, [r3]
 966 0530 FB71     		strb	r3, [r7, #7]
 919:Generated_Source\PSoC5/RTC_INT.c ****         RTC_SET_ALARM(RTC_tmp,
 967              		.loc 1 919 0
 968 0532 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 969 0534 002B     		cmp	r3, #0
 970 0536 13D0     		beq	.L42
 971              		.loc 1 919 0 is_stmt 0 discriminator 1
 972 0538 314B     		ldr	r3, .L52
 973 053a 1B78     		ldrb	r3, [r3]
 974 053c DAB2     		uxtb	r2, r3
 975 053e FB79     		ldrb	r3, [r7, #7]
 976 0540 1340     		ands	r3, r3, r2
 977 0542 DBB2     		uxtb	r3, r3
 978 0544 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 979 0546 9A42     		cmp	r2, r3
 980 0548 0AD1     		bne	.L42
 981              		.loc 1 919 0 discriminator 2
 982 054a 2F4B     		ldr	r3, .L52+8
 983 054c 1B78     		ldrb	r3, [r3]
 984 054e DBB2     		uxtb	r3, r3
 985 0550 43F00803 		orr	r3, r3, #8
 986 0554 DAB2     		uxtb	r2, r3
 987 0556 2C4B     		ldr	r3, .L52+8
 988 0558 1A70     		strb	r2, [r3]
 989 055a 294B     		ldr	r3, .L52
 990 055c 0022     		movs	r2, #0
 991 055e 1A70     		strb	r2, [r3]
 992              	.L42:
 920:Generated_Source\PSoC5/RTC_INT.c ****                                    RTC_alarmCurStatus,
 921:Generated_Source\PSoC5/RTC_INT.c ****                                    RTC_statusDateTime);
 922:Generated_Source\PSoC5/RTC_INT.c **** 
 923:Generated_Source\PSoC5/RTC_INT.c ****         /* Every Min */
 924:Generated_Source\PSoC5/RTC_INT.c ****         if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_MIN_MASK))
 993              		.loc 1 924 0 is_stmt 1
 994 0560 2A4B     		ldr	r3, .L52+12
 995 0562 1B78     		ldrb	r3, [r3]
 996 0564 DBB2     		uxtb	r3, r3
 997 0566 03F00203 		and	r3, r3, #2
 998 056a 002B     		cmp	r3, #0
 999 056c 01D0     		beq	.L9
 925:Generated_Source\PSoC5/RTC_INT.c ****         {
 926:Generated_Source\PSoC5/RTC_INT.c ****             RTC_EveryMinuteHandler();
 1000              		.loc 1 926 0
 1001 056e FFF7FEFF 		bl	RTC_EveryMinuteHandler
 1002              	.L9:
 927:Generated_Source\PSoC5/RTC_INT.c ****         }
 928:Generated_Source\PSoC5/RTC_INT.c ****     } /* Sec */
 929:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 35


 930:Generated_Source\PSoC5/RTC_INT.c ****     /* Alarm SEC */
 931:Generated_Source\PSoC5/RTC_INT.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_SEC_MASK))
 1003              		.loc 1 931 0
 1004 0572 244B     		ldr	r3, .L52+4
 1005 0574 1B78     		ldrb	r3, [r3]
 1006 0576 DBB2     		uxtb	r3, r3
 1007 0578 03F00103 		and	r3, r3, #1
 1008 057c 002B     		cmp	r3, #0
 1009 057e 18D0     		beq	.L43
 932:Generated_Source\PSoC5/RTC_INT.c ****     {
 933:Generated_Source\PSoC5/RTC_INT.c ****         if(RTC_alarmCfgTimeDate.Sec == RTC_currentTimeDate.Sec)
 1010              		.loc 1 933 0
 1011 0580 234B     		ldr	r3, .L52+16
 1012 0582 1B78     		ldrb	r3, [r3]
 1013 0584 DAB2     		uxtb	r2, r3
 1014 0586 234B     		ldr	r3, .L52+20
 1015 0588 1B78     		ldrb	r3, [r3]
 1016 058a DBB2     		uxtb	r3, r3
 1017 058c 9A42     		cmp	r2, r3
 1018 058e 08D1     		bne	.L44
 934:Generated_Source\PSoC5/RTC_INT.c ****         {
 935:Generated_Source\PSoC5/RTC_INT.c ****             RTC_alarmCurStatus |= RTC_ALARM_SEC_MASK;
 1019              		.loc 1 935 0
 1020 0590 1B4B     		ldr	r3, .L52
 1021 0592 1B78     		ldrb	r3, [r3]
 1022 0594 DBB2     		uxtb	r3, r3
 1023 0596 43F00103 		orr	r3, r3, #1
 1024 059a DAB2     		uxtb	r2, r3
 1025 059c 184B     		ldr	r3, .L52
 1026 059e 1A70     		strb	r2, [r3]
 1027 05a0 07E0     		b	.L43
 1028              	.L44:
 936:Generated_Source\PSoC5/RTC_INT.c ****         }
 937:Generated_Source\PSoC5/RTC_INT.c ****         else
 938:Generated_Source\PSoC5/RTC_INT.c ****         {
 939:Generated_Source\PSoC5/RTC_INT.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_SEC_MASK);
 1029              		.loc 1 939 0
 1030 05a2 174B     		ldr	r3, .L52
 1031 05a4 1B78     		ldrb	r3, [r3]
 1032 05a6 DBB2     		uxtb	r3, r3
 1033 05a8 23F00103 		bic	r3, r3, #1
 1034 05ac DAB2     		uxtb	r2, r3
 1035 05ae 144B     		ldr	r3, .L52
 1036 05b0 1A70     		strb	r2, [r3]
 1037              	.L43:
 940:Generated_Source\PSoC5/RTC_INT.c ****         }
 941:Generated_Source\PSoC5/RTC_INT.c ****     }
 942:Generated_Source\PSoC5/RTC_INT.c **** 
 943:Generated_Source\PSoC5/RTC_INT.c ****     /* Set Alarm flag event */
 944:Generated_Source\PSoC5/RTC_INT.c ****     RTC_tmp = RTC_alarmCfgMask;
 1038              		.loc 1 944 0
 1039 05b2 144B     		ldr	r3, .L52+4
 1040 05b4 1B78     		ldrb	r3, [r3]
 1041 05b6 FB71     		strb	r3, [r7, #7]
 945:Generated_Source\PSoC5/RTC_INT.c ****     RTC_SET_ALARM(RTC_tmp, RTC_alarmCurStatus, RTC_statusDateTime);
 1042              		.loc 1 945 0
 1043 05b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 36


 1044 05ba 002B     		cmp	r3, #0
 1045 05bc 13D0     		beq	.L45
 1046              		.loc 1 945 0 is_stmt 0 discriminator 1
 1047 05be 104B     		ldr	r3, .L52
 1048 05c0 1B78     		ldrb	r3, [r3]
 1049 05c2 DAB2     		uxtb	r2, r3
 1050 05c4 FB79     		ldrb	r3, [r7, #7]
 1051 05c6 1340     		ands	r3, r3, r2
 1052 05c8 DBB2     		uxtb	r3, r3
 1053 05ca FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1054 05cc 9A42     		cmp	r2, r3
 1055 05ce 0AD1     		bne	.L45
 1056              		.loc 1 945 0 discriminator 2
 1057 05d0 0D4B     		ldr	r3, .L52+8
 1058 05d2 1B78     		ldrb	r3, [r3]
 1059 05d4 DBB2     		uxtb	r3, r3
 1060 05d6 43F00803 		orr	r3, r3, #8
 1061 05da DAB2     		uxtb	r2, r3
 1062 05dc 0A4B     		ldr	r3, .L52+8
 1063 05de 1A70     		strb	r2, [r3]
 1064 05e0 074B     		ldr	r3, .L52
 1065 05e2 0022     		movs	r2, #0
 1066 05e4 1A70     		strb	r2, [r3]
 1067              	.L45:
 946:Generated_Source\PSoC5/RTC_INT.c **** 
 947:Generated_Source\PSoC5/RTC_INT.c ****     /* Execute every second handler if needed */
 948:Generated_Source\PSoC5/RTC_INT.c ****     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_SEC_MASK))
 1068              		.loc 1 948 0 is_stmt 1
 1069 05e6 094B     		ldr	r3, .L52+12
 1070 05e8 1B78     		ldrb	r3, [r3]
 1071 05ea DBB2     		uxtb	r3, r3
 1072 05ec 03F00103 		and	r3, r3, #1
 1073 05f0 002B     		cmp	r3, #0
 1074 05f2 01D0     		beq	.L47
 949:Generated_Source\PSoC5/RTC_INT.c ****     {
 950:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EverySecondHandler();
 1075              		.loc 1 950 0
 1076 05f4 FFF7FEFF 		bl	RTC_EverySecondHandler
 1077              	.L47:
 951:Generated_Source\PSoC5/RTC_INT.c ****     }
 952:Generated_Source\PSoC5/RTC_INT.c ****     
 953:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_ISR_EXIT_CALLBACK
 954:Generated_Source\PSoC5/RTC_INT.c ****         RTC_ISR_ExitCallback();
 955:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_ISR_EXIT_CALLBACK */
 956:Generated_Source\PSoC5/RTC_INT.c **** }
 1078              		.loc 1 956 0
 1079 05f8 00BF     		nop
 1080 05fa 0837     		adds	r7, r7, #8
 1081              		.cfi_def_cfa_offset 8
 1082 05fc BD46     		mov	sp, r7
 1083              		.cfi_def_cfa_register 13
 1084              		@ sp needed
 1085 05fe 80BD     		pop	{r7, pc}
 1086              	.L53:
 1087              		.align	2
 1088              	.L52:
 1089 0600 00000000 		.word	RTC_alarmCurStatus
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 37


 1090 0604 00000000 		.word	RTC_alarmCfgMask
 1091 0608 00000000 		.word	RTC_statusDateTime
 1092 060c 00000000 		.word	RTC_intervalCfgMask
 1093 0610 00000000 		.word	RTC_alarmCfgTimeDate
 1094 0614 00000000 		.word	RTC_currentTimeDate
 1095              		.cfi_endproc
 1096              	.LFE71:
 1097              		.size	RTC_ISR, .-RTC_ISR
 1098              		.text
 1099              	.Letext0:
 1100              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 1101              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 1102              		.file 4 "Generated_Source\\PSoC5\\cytypes.h"
 1103              		.file 5 "Generated_Source\\PSoC5\\RTC.h"
 1104              		.file 6 "./modem.h"
 1105              		.file 7 "./data.h"
 1106              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 1107              		.file 9 "./debug.h"
 1108              		.section	.debug_info,"",%progbits
 1109              	.Ldebug_info0:
 1110 0000 B9030000 		.4byte	0x3b9
 1111 0004 0400     		.2byte	0x4
 1112 0006 00000000 		.4byte	.Ldebug_abbrev0
 1113 000a 04       		.byte	0x4
 1114 000b 01       		.uleb128 0x1
 1115 000c 45000000 		.4byte	.LASF59
 1116 0010 0C       		.byte	0xc
 1117 0011 5D030000 		.4byte	.LASF60
 1118 0015 C0030000 		.4byte	.LASF61
 1119 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1120 001d 00000000 		.4byte	0
 1121 0021 00000000 		.4byte	.Ldebug_line0
 1122 0025 02       		.uleb128 0x2
 1123 0026 01       		.byte	0x1
 1124 0027 06       		.byte	0x6
 1125 0028 EC010000 		.4byte	.LASF0
 1126 002c 02       		.uleb128 0x2
 1127 002d 01       		.byte	0x1
 1128 002e 08       		.byte	0x8
 1129 002f A6010000 		.4byte	.LASF1
 1130 0033 02       		.uleb128 0x2
 1131 0034 02       		.byte	0x2
 1132 0035 05       		.byte	0x5
 1133 0036 32000000 		.4byte	.LASF2
 1134 003a 02       		.uleb128 0x2
 1135 003b 02       		.byte	0x2
 1136 003c 07       		.byte	0x7
 1137 003d 66020000 		.4byte	.LASF3
 1138 0041 03       		.uleb128 0x3
 1139 0042 53030000 		.4byte	.LASF9
 1140 0046 02       		.byte	0x2
 1141 0047 3F       		.byte	0x3f
 1142 0048 4C000000 		.4byte	0x4c
 1143 004c 02       		.uleb128 0x2
 1144 004d 04       		.byte	0x4
 1145 004e 05       		.byte	0x5
 1146 004f 51010000 		.4byte	.LASF4
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 38


 1147 0053 02       		.uleb128 0x2
 1148 0054 04       		.byte	0x4
 1149 0055 07       		.byte	0x7
 1150 0056 FE020000 		.4byte	.LASF5
 1151 005a 02       		.uleb128 0x2
 1152 005b 08       		.byte	0x8
 1153 005c 05       		.byte	0x5
 1154 005d 31010000 		.4byte	.LASF6
 1155 0061 02       		.uleb128 0x2
 1156 0062 08       		.byte	0x8
 1157 0063 07       		.byte	0x7
 1158 0064 0D020000 		.4byte	.LASF7
 1159 0068 04       		.uleb128 0x4
 1160 0069 04       		.byte	0x4
 1161 006a 05       		.byte	0x5
 1162 006b 696E7400 		.ascii	"int\000"
 1163 006f 02       		.uleb128 0x2
 1164 0070 04       		.byte	0x4
 1165 0071 07       		.byte	0x7
 1166 0072 38020000 		.4byte	.LASF8
 1167 0076 03       		.uleb128 0x3
 1168 0077 A9020000 		.4byte	.LASF10
 1169 007b 03       		.byte	0x3
 1170 007c 2C       		.byte	0x2c
 1171 007d 41000000 		.4byte	0x41
 1172 0081 05       		.uleb128 0x5
 1173 0082 11010000 		.4byte	.LASF11
 1174 0086 04       		.byte	0x4
 1175 0087 E401     		.2byte	0x1e4
 1176 0089 2C000000 		.4byte	0x2c
 1177 008d 05       		.uleb128 0x5
 1178 008e F8000000 		.4byte	.LASF12
 1179 0092 04       		.byte	0x4
 1180 0093 E501     		.2byte	0x1e5
 1181 0095 3A000000 		.4byte	0x3a
 1182 0099 05       		.uleb128 0x5
 1183 009a 10030000 		.4byte	.LASF13
 1184 009e 04       		.byte	0x4
 1185 009f E901     		.2byte	0x1e9
 1186 00a1 4C000000 		.4byte	0x4c
 1187 00a5 02       		.uleb128 0x2
 1188 00a6 04       		.byte	0x4
 1189 00a7 04       		.byte	0x4
 1190 00a8 21010000 		.4byte	.LASF14
 1191 00ac 02       		.uleb128 0x2
 1192 00ad 08       		.byte	0x8
 1193 00ae 04       		.byte	0x4
 1194 00af 16030000 		.4byte	.LASF15
 1195 00b3 02       		.uleb128 0x2
 1196 00b4 01       		.byte	0x1
 1197 00b5 08       		.byte	0x8
 1198 00b6 3F010000 		.4byte	.LASF16
 1199 00ba 06       		.uleb128 0x6
 1200 00bb 81000000 		.4byte	0x81
 1201 00bf 07       		.uleb128 0x7
 1202 00c0 0C       		.byte	0xc
 1203 00c1 05       		.byte	0x5
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 39


 1204 00c2 30       		.byte	0x30
 1205 00c3 28010000 		.4byte	0x128
 1206 00c7 08       		.uleb128 0x8
 1207 00c8 53656300 		.ascii	"Sec\000"
 1208 00cc 05       		.byte	0x5
 1209 00cd 32       		.byte	0x32
 1210 00ce 81000000 		.4byte	0x81
 1211 00d2 00       		.byte	0
 1212 00d3 08       		.uleb128 0x8
 1213 00d4 4D696E00 		.ascii	"Min\000"
 1214 00d8 05       		.byte	0x5
 1215 00d9 33       		.byte	0x33
 1216 00da 81000000 		.4byte	0x81
 1217 00de 01       		.byte	0x1
 1218 00df 09       		.uleb128 0x9
 1219 00e0 ED000000 		.4byte	.LASF17
 1220 00e4 05       		.byte	0x5
 1221 00e5 34       		.byte	0x34
 1222 00e6 81000000 		.4byte	0x81
 1223 00ea 02       		.byte	0x2
 1224 00eb 09       		.uleb128 0x9
 1225 00ec 27010000 		.4byte	.LASF18
 1226 00f0 05       		.byte	0x5
 1227 00f1 35       		.byte	0x35
 1228 00f2 81000000 		.4byte	0x81
 1229 00f6 03       		.byte	0x3
 1230 00f7 09       		.uleb128 0x9
 1231 00f8 DC020000 		.4byte	.LASF19
 1232 00fc 05       		.byte	0x5
 1233 00fd 36       		.byte	0x36
 1234 00fe 81000000 		.4byte	0x81
 1235 0102 04       		.byte	0x4
 1236 0103 09       		.uleb128 0x9
 1237 0104 0B040000 		.4byte	.LASF20
 1238 0108 05       		.byte	0x5
 1239 0109 37       		.byte	0x37
 1240 010a 8D000000 		.4byte	0x8d
 1241 010e 06       		.byte	0x6
 1242 010f 09       		.uleb128 0x9
 1243 0110 94010000 		.4byte	.LASF21
 1244 0114 05       		.byte	0x5
 1245 0115 38       		.byte	0x38
 1246 0116 81000000 		.4byte	0x81
 1247 011a 08       		.byte	0x8
 1248 011b 09       		.uleb128 0x9
 1249 011c 7B010000 		.4byte	.LASF22
 1250 0120 05       		.byte	0x5
 1251 0121 39       		.byte	0x39
 1252 0122 8D000000 		.4byte	0x8d
 1253 0126 0A       		.byte	0xa
 1254 0127 00       		.byte	0
 1255 0128 03       		.uleb128 0x3
 1256 0129 9E030000 		.4byte	.LASF23
 1257 012d 05       		.byte	0x5
 1258 012e 3A       		.byte	0x3a
 1259 012f 33010000 		.4byte	0x133
 1260 0133 06       		.uleb128 0x6
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 40


 1261 0134 BF000000 		.4byte	0xbf
 1262 0138 02       		.uleb128 0x2
 1263 0139 08       		.byte	0x8
 1264 013a 04       		.byte	0x4
 1265 013b 9A010000 		.4byte	.LASF24
 1266 013f 02       		.uleb128 0x2
 1267 0140 04       		.byte	0x4
 1268 0141 07       		.byte	0x7
 1269 0142 3C000000 		.4byte	.LASF25
 1270 0146 07       		.uleb128 0x7
 1271 0147 3C       		.byte	0x3c
 1272 0148 06       		.byte	0x6
 1273 0149 24       		.byte	0x24
 1274 014a 73010000 		.4byte	0x173
 1275 014e 09       		.uleb128 0x9
 1276 014f 1A000000 		.4byte	.LASF26
 1277 0153 06       		.byte	0x6
 1278 0154 25       		.byte	0x25
 1279 0155 73010000 		.4byte	0x173
 1280 0159 00       		.byte	0
 1281 015a 09       		.uleb128 0x9
 1282 015b 00000000 		.4byte	.LASF27
 1283 015f 06       		.byte	0x6
 1284 0160 26       		.byte	0x26
 1285 0161 73010000 		.4byte	0x173
 1286 0165 14       		.byte	0x14
 1287 0166 09       		.uleb128 0x9
 1288 0167 A4020000 		.4byte	.LASF28
 1289 016b 06       		.byte	0x6
 1290 016c 27       		.byte	0x27
 1291 016d 73010000 		.4byte	0x173
 1292 0171 28       		.byte	0x28
 1293 0172 00       		.byte	0
 1294 0173 0A       		.uleb128 0xa
 1295 0174 B3000000 		.4byte	0xb3
 1296 0178 83010000 		.4byte	0x183
 1297 017c 0B       		.uleb128 0xb
 1298 017d 3F010000 		.4byte	0x13f
 1299 0181 13       		.byte	0x13
 1300 0182 00       		.byte	0
 1301 0183 03       		.uleb128 0x3
 1302 0184 44010000 		.4byte	.LASF29
 1303 0188 06       		.byte	0x6
 1304 0189 28       		.byte	0x28
 1305 018a 46010000 		.4byte	0x146
 1306 018e 07       		.uleb128 0x7
 1307 018f 0C       		.byte	0xc
 1308 0190 06       		.byte	0x6
 1309 0191 2A       		.byte	0x2a
 1310 0192 C6010000 		.4byte	0x1c6
 1311 0196 09       		.uleb128 0x9
 1312 0197 06040000 		.4byte	.LASF30
 1313 019b 06       		.byte	0x6
 1314 019c 2B       		.byte	0x2b
 1315 019d 81000000 		.4byte	0x81
 1316 01a1 00       		.byte	0
 1317 01a2 08       		.uleb128 0x8
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 41


 1318 01a3 737100   		.ascii	"sq\000"
 1319 01a6 06       		.byte	0x6
 1320 01a7 2C       		.byte	0x2c
 1321 01a8 81000000 		.4byte	0x81
 1322 01ac 01       		.byte	0x1
 1323 01ad 09       		.uleb128 0x9
 1324 01ae 79020000 		.4byte	.LASF31
 1325 01b2 06       		.byte	0x6
 1326 01b3 2D       		.byte	0x2d
 1327 01b4 68000000 		.4byte	0x68
 1328 01b8 04       		.byte	0x4
 1329 01b9 09       		.uleb128 0x9
 1330 01ba 91020000 		.4byte	.LASF32
 1331 01be 06       		.byte	0x6
 1332 01bf 2E       		.byte	0x2e
 1333 01c0 68000000 		.4byte	0x68
 1334 01c4 08       		.byte	0x8
 1335 01c5 00       		.byte	0
 1336 01c6 03       		.uleb128 0x3
 1337 01c7 B9020000 		.4byte	.LASF33
 1338 01cb 06       		.byte	0x6
 1339 01cc 2F       		.byte	0x2f
 1340 01cd 8E010000 		.4byte	0x18e
 1341 01d1 07       		.uleb128 0x7
 1342 01d2 2C       		.byte	0x2c
 1343 01d3 07       		.byte	0x7
 1344 01d4 0B       		.byte	0xb
 1345 01d5 FE010000 		.4byte	0x1fe
 1346 01d9 08       		.uleb128 0x8
 1347 01da 6B657900 		.ascii	"key\000"
 1348 01de 07       		.byte	0x7
 1349 01df 0C       		.byte	0xc
 1350 01e0 73010000 		.4byte	0x173
 1351 01e4 00       		.byte	0
 1352 01e5 09       		.uleb128 0x9
 1353 01e6 F2000000 		.4byte	.LASF34
 1354 01ea 07       		.byte	0x7
 1355 01eb 0D       		.byte	0xd
 1356 01ec 73010000 		.4byte	0x173
 1357 01f0 14       		.byte	0x14
 1358 01f1 09       		.uleb128 0x9
 1359 01f2 17010000 		.4byte	.LASF35
 1360 01f6 07       		.byte	0x7
 1361 01f7 0E       		.byte	0xe
 1362 01f8 99000000 		.4byte	0x99
 1363 01fc 28       		.byte	0x28
 1364 01fd 00       		.byte	0
 1365 01fe 03       		.uleb128 0x3
 1366 01ff 45020000 		.4byte	.LASF36
 1367 0203 07       		.byte	0x7
 1368 0204 0F       		.byte	0xf
 1369 0205 D1010000 		.4byte	0x1d1
 1370 0209 0C       		.uleb128 0xc
 1371 020a 1D030000 		.4byte	.LASF37
 1372 020e 01       		.byte	0x1
 1373 020f 36       		.byte	0x36
 1374 0210 00000000 		.4byte	.LFB64
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 42


 1375 0214 0E000000 		.4byte	.LFE64-.LFB64
 1376 0218 01       		.uleb128 0x1
 1377 0219 9C       		.byte	0x9c
 1378 021a 0C       		.uleb128 0xc
 1379 021b E7020000 		.4byte	.LASF38
 1380 021f 01       		.byte	0x1
 1381 0220 51       		.byte	0x51
 1382 0221 00000000 		.4byte	.LFB65
 1383 0225 0E000000 		.4byte	.LFE65-.LFB65
 1384 0229 01       		.uleb128 0x1
 1385 022a 9C       		.byte	0x9c
 1386 022b 0C       		.uleb128 0xc
 1387 022c C7020000 		.4byte	.LASF39
 1388 0230 01       		.byte	0x1
 1389 0231 6C       		.byte	0x6c
 1390 0232 00000000 		.4byte	.LFB66
 1391 0236 0E000000 		.4byte	.LFE66-.LFB66
 1392 023a 01       		.uleb128 0x1
 1393 023b 9C       		.byte	0x9c
 1394 023c 0C       		.uleb128 0xc
 1395 023d 80010000 		.4byte	.LASF40
 1396 0241 01       		.byte	0x1
 1397 0242 87       		.byte	0x87
 1398 0243 00000000 		.4byte	.LFB67
 1399 0247 0E000000 		.4byte	.LFE67-.LFB67
 1400 024b 01       		.uleb128 0x1
 1401 024c 9C       		.byte	0x9c
 1402 024d 0C       		.uleb128 0xc
 1403 024e D3000000 		.4byte	.LASF41
 1404 0252 01       		.byte	0x1
 1405 0253 A2       		.byte	0xa2
 1406 0254 00000000 		.4byte	.LFB68
 1407 0258 0E000000 		.4byte	.LFE68-.LFB68
 1408 025c 01       		.uleb128 0x1
 1409 025d 9C       		.byte	0x9c
 1410 025e 0C       		.uleb128 0xc
 1411 025f 65010000 		.4byte	.LASF42
 1412 0263 01       		.byte	0x1
 1413 0264 BD       		.byte	0xbd
 1414 0265 00000000 		.4byte	.LFB69
 1415 0269 0E000000 		.4byte	.LFE69-.LFB69
 1416 026d 01       		.uleb128 0x1
 1417 026e 9C       		.byte	0x9c
 1418 026f 0C       		.uleb128 0xc
 1419 0270 F8010000 		.4byte	.LASF43
 1420 0274 01       		.byte	0x1
 1421 0275 D8       		.byte	0xd8
 1422 0276 00000000 		.4byte	.LFB70
 1423 027a 0E000000 		.4byte	.LFE70-.LFB70
 1424 027e 01       		.uleb128 0x1
 1425 027f 9C       		.byte	0x9c
 1426 0280 0D       		.uleb128 0xd
 1427 0281 5E020000 		.4byte	.LASF62
 1428 0285 01       		.byte	0x1
 1429 0286 0B01     		.2byte	0x10b
 1430 0288 00000000 		.4byte	.LFB71
 1431 028c 18060000 		.4byte	.LFE71-.LFB71
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 43


 1432 0290 01       		.uleb128 0x1
 1433 0291 9C       		.byte	0x9c
 1434 0292 A6020000 		.4byte	0x2a6
 1435 0296 0E       		.uleb128 0xe
 1436 0297 B1020000 		.4byte	.LASF63
 1437 029b 01       		.byte	0x1
 1438 029c 0D01     		.2byte	0x10d
 1439 029e 81000000 		.4byte	0x81
 1440 02a2 02       		.uleb128 0x2
 1441 02a3 91       		.byte	0x91
 1442 02a4 77       		.sleb128 -9
 1443 02a5 00       		.byte	0
 1444 02a6 0F       		.uleb128 0xf
 1445 02a7 CB010000 		.4byte	.LASF44
 1446 02ab 05       		.byte	0x5
 1447 02ac 2D01     		.2byte	0x12d
 1448 02ae 28010000 		.4byte	0x128
 1449 02b2 0F       		.uleb128 0xf
 1450 02b3 24020000 		.4byte	.LASF45
 1451 02b7 05       		.byte	0x5
 1452 02b8 2E01     		.2byte	0x12e
 1453 02ba 28010000 		.4byte	0x128
 1454 02be 0F       		.uleb128 0xf
 1455 02bf 09000000 		.4byte	.LASF46
 1456 02c3 05       		.byte	0x5
 1457 02c4 3901     		.2byte	0x139
 1458 02c6 BA000000 		.4byte	0xba
 1459 02ca 0F       		.uleb128 0xf
 1460 02cb 7E030000 		.4byte	.LASF47
 1461 02cf 05       		.byte	0x5
 1462 02d0 3A01     		.2byte	0x13a
 1463 02d2 BA000000 		.4byte	0xba
 1464 02d6 0F       		.uleb128 0xf
 1465 02d7 AC030000 		.4byte	.LASF48
 1466 02db 05       		.byte	0x5
 1467 02dc 3B01     		.2byte	0x13b
 1468 02de BA000000 		.4byte	0xba
 1469 02e2 0F       		.uleb128 0xf
 1470 02e3 40030000 		.4byte	.LASF49
 1471 02e7 05       		.byte	0x5
 1472 02e8 3C01     		.2byte	0x13c
 1473 02ea BA000000 		.4byte	0xba
 1474 02ee 0A       		.uleb128 0xa
 1475 02ef FE020000 		.4byte	0x2fe
 1476 02f3 FE020000 		.4byte	0x2fe
 1477 02f7 0B       		.uleb128 0xb
 1478 02f8 3F010000 		.4byte	0x13f
 1479 02fc 0B       		.byte	0xb
 1480 02fd 00       		.byte	0
 1481 02fe 10       		.uleb128 0x10
 1482 02ff 81000000 		.4byte	0x81
 1483 0303 0F       		.uleb128 0xf
 1484 0304 21000000 		.4byte	.LASF50
 1485 0308 05       		.byte	0x5
 1486 0309 3E01     		.2byte	0x13e
 1487 030b 0F030000 		.4byte	0x30f
 1488 030f 10       		.uleb128 0x10
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 44


 1489 0310 EE020000 		.4byte	0x2ee
 1490 0314 0F       		.uleb128 0xf
 1491 0315 91030000 		.4byte	.LASF51
 1492 0319 08       		.byte	0x8
 1493 031a 1207     		.2byte	0x712
 1494 031c 20030000 		.4byte	0x320
 1495 0320 06       		.uleb128 0x6
 1496 0321 76000000 		.4byte	0x76
 1497 0325 0A       		.uleb128 0xa
 1498 0326 B3000000 		.4byte	0xb3
 1499 032a 35030000 		.4byte	0x335
 1500 032e 0B       		.uleb128 0xb
 1501 032f 3F010000 		.4byte	0x13f
 1502 0333 63       		.byte	0x63
 1503 0334 00       		.byte	0
 1504 0335 11       		.uleb128 0x11
 1505 0336 51020000 		.4byte	.LASF52
 1506 033a 09       		.byte	0x9
 1507 033b 17       		.byte	0x17
 1508 033c 25030000 		.4byte	0x325
 1509 0340 05       		.uleb128 0x5
 1510 0341 03       		.byte	0x3
 1511 0342 00000000 		.4byte	debug_string
 1512 0346 11       		.uleb128 0x11
 1513 0347 E0010000 		.4byte	.LASF53
 1514 034b 06       		.byte	0x6
 1515 034c 0E       		.byte	0xe
 1516 034d 81000000 		.4byte	0x81
 1517 0351 05       		.uleb128 0x5
 1518 0352 03       		.byte	0x3
 1519 0353 00000000 		.4byte	modem_state
 1520 0357 11       		.uleb128 0x11
 1521 0358 B4010000 		.4byte	.LASF54
 1522 035c 06       		.byte	0x6
 1523 035d 31       		.byte	0x31
 1524 035e 99000000 		.4byte	0x99
 1525 0362 05       		.uleb128 0x5
 1526 0363 03       		.byte	0x3
 1527 0364 00000000 		.4byte	modem_start_time_stamp
 1528 0368 11       		.uleb128 0x11
 1529 0369 5A010000 		.4byte	.LASF55
 1530 036d 06       		.byte	0x6
 1531 036e 32       		.byte	0x32
 1532 036f 83010000 		.4byte	0x183
 1533 0373 05       		.uleb128 0x5
 1534 0374 03       		.byte	0x3
 1535 0375 00000000 		.4byte	modem_info
 1536 0379 11       		.uleb128 0x11
 1537 037a 34030000 		.4byte	.LASF56
 1538 037e 06       		.byte	0x6
 1539 037f 33       		.byte	0x33
 1540 0380 C6010000 		.4byte	0x1c6
 1541 0384 05       		.uleb128 0x5
 1542 0385 03       		.byte	0x3
 1543 0386 00000000 		.4byte	modem_stats
 1544 038a 11       		.uleb128 0x11
 1545 038b FF000000 		.4byte	.LASF57
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 45


 1546 038f 07       		.byte	0x7
 1547 0390 19       		.byte	0x19
 1548 0391 8D000000 		.4byte	0x8d
 1549 0395 05       		.uleb128 0x5
 1550 0396 03       		.byte	0x3
 1551 0397 00000000 		.4byte	dataPointsInStack
 1552 039b 0A       		.uleb128 0xa
 1553 039c FE010000 		.4byte	0x1fe
 1554 03a0 AB030000 		.4byte	0x3ab
 1555 03a4 0B       		.uleb128 0xb
 1556 03a5 3F010000 		.4byte	0x13f
 1557 03a9 09       		.byte	0x9
 1558 03aa 00       		.byte	0
 1559 03ab 11       		.uleb128 0x11
 1560 03ac E8000000 		.4byte	.LASF58
 1561 03b0 07       		.byte	0x7
 1562 03b1 1A       		.byte	0x1a
 1563 03b2 9B030000 		.4byte	0x39b
 1564 03b6 05       		.uleb128 0x5
 1565 03b7 03       		.byte	0x3
 1566 03b8 00000000 		.4byte	data
 1567 03bc 00       		.byte	0
 1568              		.section	.debug_abbrev,"",%progbits
 1569              	.Ldebug_abbrev0:
 1570 0000 01       		.uleb128 0x1
 1571 0001 11       		.uleb128 0x11
 1572 0002 01       		.byte	0x1
 1573 0003 25       		.uleb128 0x25
 1574 0004 0E       		.uleb128 0xe
 1575 0005 13       		.uleb128 0x13
 1576 0006 0B       		.uleb128 0xb
 1577 0007 03       		.uleb128 0x3
 1578 0008 0E       		.uleb128 0xe
 1579 0009 1B       		.uleb128 0x1b
 1580 000a 0E       		.uleb128 0xe
 1581 000b 55       		.uleb128 0x55
 1582 000c 17       		.uleb128 0x17
 1583 000d 11       		.uleb128 0x11
 1584 000e 01       		.uleb128 0x1
 1585 000f 10       		.uleb128 0x10
 1586 0010 17       		.uleb128 0x17
 1587 0011 00       		.byte	0
 1588 0012 00       		.byte	0
 1589 0013 02       		.uleb128 0x2
 1590 0014 24       		.uleb128 0x24
 1591 0015 00       		.byte	0
 1592 0016 0B       		.uleb128 0xb
 1593 0017 0B       		.uleb128 0xb
 1594 0018 3E       		.uleb128 0x3e
 1595 0019 0B       		.uleb128 0xb
 1596 001a 03       		.uleb128 0x3
 1597 001b 0E       		.uleb128 0xe
 1598 001c 00       		.byte	0
 1599 001d 00       		.byte	0
 1600 001e 03       		.uleb128 0x3
 1601 001f 16       		.uleb128 0x16
 1602 0020 00       		.byte	0
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 46


 1603 0021 03       		.uleb128 0x3
 1604 0022 0E       		.uleb128 0xe
 1605 0023 3A       		.uleb128 0x3a
 1606 0024 0B       		.uleb128 0xb
 1607 0025 3B       		.uleb128 0x3b
 1608 0026 0B       		.uleb128 0xb
 1609 0027 49       		.uleb128 0x49
 1610 0028 13       		.uleb128 0x13
 1611 0029 00       		.byte	0
 1612 002a 00       		.byte	0
 1613 002b 04       		.uleb128 0x4
 1614 002c 24       		.uleb128 0x24
 1615 002d 00       		.byte	0
 1616 002e 0B       		.uleb128 0xb
 1617 002f 0B       		.uleb128 0xb
 1618 0030 3E       		.uleb128 0x3e
 1619 0031 0B       		.uleb128 0xb
 1620 0032 03       		.uleb128 0x3
 1621 0033 08       		.uleb128 0x8
 1622 0034 00       		.byte	0
 1623 0035 00       		.byte	0
 1624 0036 05       		.uleb128 0x5
 1625 0037 16       		.uleb128 0x16
 1626 0038 00       		.byte	0
 1627 0039 03       		.uleb128 0x3
 1628 003a 0E       		.uleb128 0xe
 1629 003b 3A       		.uleb128 0x3a
 1630 003c 0B       		.uleb128 0xb
 1631 003d 3B       		.uleb128 0x3b
 1632 003e 05       		.uleb128 0x5
 1633 003f 49       		.uleb128 0x49
 1634 0040 13       		.uleb128 0x13
 1635 0041 00       		.byte	0
 1636 0042 00       		.byte	0
 1637 0043 06       		.uleb128 0x6
 1638 0044 35       		.uleb128 0x35
 1639 0045 00       		.byte	0
 1640 0046 49       		.uleb128 0x49
 1641 0047 13       		.uleb128 0x13
 1642 0048 00       		.byte	0
 1643 0049 00       		.byte	0
 1644 004a 07       		.uleb128 0x7
 1645 004b 13       		.uleb128 0x13
 1646 004c 01       		.byte	0x1
 1647 004d 0B       		.uleb128 0xb
 1648 004e 0B       		.uleb128 0xb
 1649 004f 3A       		.uleb128 0x3a
 1650 0050 0B       		.uleb128 0xb
 1651 0051 3B       		.uleb128 0x3b
 1652 0052 0B       		.uleb128 0xb
 1653 0053 01       		.uleb128 0x1
 1654 0054 13       		.uleb128 0x13
 1655 0055 00       		.byte	0
 1656 0056 00       		.byte	0
 1657 0057 08       		.uleb128 0x8
 1658 0058 0D       		.uleb128 0xd
 1659 0059 00       		.byte	0
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 47


 1660 005a 03       		.uleb128 0x3
 1661 005b 08       		.uleb128 0x8
 1662 005c 3A       		.uleb128 0x3a
 1663 005d 0B       		.uleb128 0xb
 1664 005e 3B       		.uleb128 0x3b
 1665 005f 0B       		.uleb128 0xb
 1666 0060 49       		.uleb128 0x49
 1667 0061 13       		.uleb128 0x13
 1668 0062 38       		.uleb128 0x38
 1669 0063 0B       		.uleb128 0xb
 1670 0064 00       		.byte	0
 1671 0065 00       		.byte	0
 1672 0066 09       		.uleb128 0x9
 1673 0067 0D       		.uleb128 0xd
 1674 0068 00       		.byte	0
 1675 0069 03       		.uleb128 0x3
 1676 006a 0E       		.uleb128 0xe
 1677 006b 3A       		.uleb128 0x3a
 1678 006c 0B       		.uleb128 0xb
 1679 006d 3B       		.uleb128 0x3b
 1680 006e 0B       		.uleb128 0xb
 1681 006f 49       		.uleb128 0x49
 1682 0070 13       		.uleb128 0x13
 1683 0071 38       		.uleb128 0x38
 1684 0072 0B       		.uleb128 0xb
 1685 0073 00       		.byte	0
 1686 0074 00       		.byte	0
 1687 0075 0A       		.uleb128 0xa
 1688 0076 01       		.uleb128 0x1
 1689 0077 01       		.byte	0x1
 1690 0078 49       		.uleb128 0x49
 1691 0079 13       		.uleb128 0x13
 1692 007a 01       		.uleb128 0x1
 1693 007b 13       		.uleb128 0x13
 1694 007c 00       		.byte	0
 1695 007d 00       		.byte	0
 1696 007e 0B       		.uleb128 0xb
 1697 007f 21       		.uleb128 0x21
 1698 0080 00       		.byte	0
 1699 0081 49       		.uleb128 0x49
 1700 0082 13       		.uleb128 0x13
 1701 0083 2F       		.uleb128 0x2f
 1702 0084 0B       		.uleb128 0xb
 1703 0085 00       		.byte	0
 1704 0086 00       		.byte	0
 1705 0087 0C       		.uleb128 0xc
 1706 0088 2E       		.uleb128 0x2e
 1707 0089 00       		.byte	0
 1708 008a 03       		.uleb128 0x3
 1709 008b 0E       		.uleb128 0xe
 1710 008c 3A       		.uleb128 0x3a
 1711 008d 0B       		.uleb128 0xb
 1712 008e 3B       		.uleb128 0x3b
 1713 008f 0B       		.uleb128 0xb
 1714 0090 27       		.uleb128 0x27
 1715 0091 19       		.uleb128 0x19
 1716 0092 11       		.uleb128 0x11
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 48


 1717 0093 01       		.uleb128 0x1
 1718 0094 12       		.uleb128 0x12
 1719 0095 06       		.uleb128 0x6
 1720 0096 40       		.uleb128 0x40
 1721 0097 18       		.uleb128 0x18
 1722 0098 9642     		.uleb128 0x2116
 1723 009a 19       		.uleb128 0x19
 1724 009b 00       		.byte	0
 1725 009c 00       		.byte	0
 1726 009d 0D       		.uleb128 0xd
 1727 009e 2E       		.uleb128 0x2e
 1728 009f 01       		.byte	0x1
 1729 00a0 3F       		.uleb128 0x3f
 1730 00a1 19       		.uleb128 0x19
 1731 00a2 03       		.uleb128 0x3
 1732 00a3 0E       		.uleb128 0xe
 1733 00a4 3A       		.uleb128 0x3a
 1734 00a5 0B       		.uleb128 0xb
 1735 00a6 3B       		.uleb128 0x3b
 1736 00a7 05       		.uleb128 0x5
 1737 00a8 27       		.uleb128 0x27
 1738 00a9 19       		.uleb128 0x19
 1739 00aa 11       		.uleb128 0x11
 1740 00ab 01       		.uleb128 0x1
 1741 00ac 12       		.uleb128 0x12
 1742 00ad 06       		.uleb128 0x6
 1743 00ae 40       		.uleb128 0x40
 1744 00af 18       		.uleb128 0x18
 1745 00b0 9642     		.uleb128 0x2116
 1746 00b2 19       		.uleb128 0x19
 1747 00b3 01       		.uleb128 0x1
 1748 00b4 13       		.uleb128 0x13
 1749 00b5 00       		.byte	0
 1750 00b6 00       		.byte	0
 1751 00b7 0E       		.uleb128 0xe
 1752 00b8 34       		.uleb128 0x34
 1753 00b9 00       		.byte	0
 1754 00ba 03       		.uleb128 0x3
 1755 00bb 0E       		.uleb128 0xe
 1756 00bc 3A       		.uleb128 0x3a
 1757 00bd 0B       		.uleb128 0xb
 1758 00be 3B       		.uleb128 0x3b
 1759 00bf 05       		.uleb128 0x5
 1760 00c0 49       		.uleb128 0x49
 1761 00c1 13       		.uleb128 0x13
 1762 00c2 02       		.uleb128 0x2
 1763 00c3 18       		.uleb128 0x18
 1764 00c4 00       		.byte	0
 1765 00c5 00       		.byte	0
 1766 00c6 0F       		.uleb128 0xf
 1767 00c7 34       		.uleb128 0x34
 1768 00c8 00       		.byte	0
 1769 00c9 03       		.uleb128 0x3
 1770 00ca 0E       		.uleb128 0xe
 1771 00cb 3A       		.uleb128 0x3a
 1772 00cc 0B       		.uleb128 0xb
 1773 00cd 3B       		.uleb128 0x3b
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 49


 1774 00ce 05       		.uleb128 0x5
 1775 00cf 49       		.uleb128 0x49
 1776 00d0 13       		.uleb128 0x13
 1777 00d1 3F       		.uleb128 0x3f
 1778 00d2 19       		.uleb128 0x19
 1779 00d3 3C       		.uleb128 0x3c
 1780 00d4 19       		.uleb128 0x19
 1781 00d5 00       		.byte	0
 1782 00d6 00       		.byte	0
 1783 00d7 10       		.uleb128 0x10
 1784 00d8 26       		.uleb128 0x26
 1785 00d9 00       		.byte	0
 1786 00da 49       		.uleb128 0x49
 1787 00db 13       		.uleb128 0x13
 1788 00dc 00       		.byte	0
 1789 00dd 00       		.byte	0
 1790 00de 11       		.uleb128 0x11
 1791 00df 34       		.uleb128 0x34
 1792 00e0 00       		.byte	0
 1793 00e1 03       		.uleb128 0x3
 1794 00e2 0E       		.uleb128 0xe
 1795 00e3 3A       		.uleb128 0x3a
 1796 00e4 0B       		.uleb128 0xb
 1797 00e5 3B       		.uleb128 0x3b
 1798 00e6 0B       		.uleb128 0xb
 1799 00e7 49       		.uleb128 0x49
 1800 00e8 13       		.uleb128 0x13
 1801 00e9 3F       		.uleb128 0x3f
 1802 00ea 19       		.uleb128 0x19
 1803 00eb 02       		.uleb128 0x2
 1804 00ec 18       		.uleb128 0x18
 1805 00ed 00       		.byte	0
 1806 00ee 00       		.byte	0
 1807 00ef 00       		.byte	0
 1808              		.section	.debug_aranges,"",%progbits
 1809 0000 54000000 		.4byte	0x54
 1810 0004 0200     		.2byte	0x2
 1811 0006 00000000 		.4byte	.Ldebug_info0
 1812 000a 04       		.byte	0x4
 1813 000b 00       		.byte	0
 1814 000c 0000     		.2byte	0
 1815 000e 0000     		.2byte	0
 1816 0010 00000000 		.4byte	.LFB64
 1817 0014 0E000000 		.4byte	.LFE64-.LFB64
 1818 0018 00000000 		.4byte	.LFB65
 1819 001c 0E000000 		.4byte	.LFE65-.LFB65
 1820 0020 00000000 		.4byte	.LFB66
 1821 0024 0E000000 		.4byte	.LFE66-.LFB66
 1822 0028 00000000 		.4byte	.LFB67
 1823 002c 0E000000 		.4byte	.LFE67-.LFB67
 1824 0030 00000000 		.4byte	.LFB68
 1825 0034 0E000000 		.4byte	.LFE68-.LFB68
 1826 0038 00000000 		.4byte	.LFB69
 1827 003c 0E000000 		.4byte	.LFE69-.LFB69
 1828 0040 00000000 		.4byte	.LFB70
 1829 0044 0E000000 		.4byte	.LFE70-.LFB70
 1830 0048 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 50


 1831 004c 18060000 		.4byte	.LFE71-.LFB71
 1832 0050 00000000 		.4byte	0
 1833 0054 00000000 		.4byte	0
 1834              		.section	.debug_ranges,"",%progbits
 1835              	.Ldebug_ranges0:
 1836 0000 00000000 		.4byte	.LFB64
 1837 0004 0E000000 		.4byte	.LFE64
 1838 0008 00000000 		.4byte	.LFB65
 1839 000c 0E000000 		.4byte	.LFE65
 1840 0010 00000000 		.4byte	.LFB66
 1841 0014 0E000000 		.4byte	.LFE66
 1842 0018 00000000 		.4byte	.LFB67
 1843 001c 0E000000 		.4byte	.LFE67
 1844 0020 00000000 		.4byte	.LFB68
 1845 0024 0E000000 		.4byte	.LFE68
 1846 0028 00000000 		.4byte	.LFB69
 1847 002c 0E000000 		.4byte	.LFE69
 1848 0030 00000000 		.4byte	.LFB70
 1849 0034 0E000000 		.4byte	.LFE70
 1850 0038 00000000 		.4byte	.LFB71
 1851 003c 18060000 		.4byte	.LFE71
 1852 0040 00000000 		.4byte	0
 1853 0044 00000000 		.4byte	0
 1854              		.section	.debug_line,"",%progbits
 1855              	.Ldebug_line0:
 1856 0000 DF020000 		.section	.debug_str,"MS",%progbits,1
 1856      02007E01 
 1856      00000201 
 1856      FB0E0D00 
 1856      01010101 
 1857              	.LASF27:
 1858 0000 6D6F6465 		.ascii	"model_id\000"
 1858      6C5F6964 
 1858      00
 1859              	.LASF46:
 1860 0009 5254435F 		.ascii	"RTC_alarmCfgMask\000"
 1860      616C6172 
 1860      6D436667 
 1860      4D61736B 
 1860      00
 1861              	.LASF26:
 1862 001a 73696D5F 		.ascii	"sim_id\000"
 1862      696400
 1863              	.LASF50:
 1864 0021 5254435F 		.ascii	"RTC_daysInMonths\000"
 1864      64617973 
 1864      496E4D6F 
 1864      6E746873 
 1864      00
 1865              	.LASF2:
 1866 0032 73686F72 		.ascii	"short int\000"
 1866      7420696E 
 1866      7400
 1867              	.LASF25:
 1868 003c 73697A65 		.ascii	"sizetype\000"
 1868      74797065 
 1868      00
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 51


 1869              	.LASF59:
 1870 0045 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1870      43313120 
 1870      352E342E 
 1870      31203230 
 1870      31363036 
 1871 0078 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1871      20726576 
 1871      6973696F 
 1871      6E203233 
 1871      37373135 
 1872 00ab 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1872      66756E63 
 1872      74696F6E 
 1872      2D736563 
 1872      74696F6E 
 1873              	.LASF41:
 1874 00d3 5254435F 		.ascii	"RTC_EveryWeekHandler\000"
 1874      45766572 
 1874      79576565 
 1874      6B48616E 
 1874      646C6572 
 1875              	.LASF58:
 1876 00e8 64617461 		.ascii	"data\000"
 1876      00
 1877              	.LASF17:
 1878 00ed 486F7572 		.ascii	"Hour\000"
 1878      00
 1879              	.LASF34:
 1880 00f2 76616C75 		.ascii	"value\000"
 1880      6500
 1881              	.LASF12:
 1882 00f8 75696E74 		.ascii	"uint16\000"
 1882      313600
 1883              	.LASF57:
 1884 00ff 64617461 		.ascii	"dataPointsInStack\000"
 1884      506F696E 
 1884      7473496E 
 1884      53746163 
 1884      6B00
 1885              	.LASF11:
 1886 0111 75696E74 		.ascii	"uint8\000"
 1886      3800
 1887              	.LASF35:
 1888 0117 74696D65 		.ascii	"timeStamp\000"
 1888      5374616D 
 1888      7000
 1889              	.LASF14:
 1890 0121 666C6F61 		.ascii	"float\000"
 1890      7400
 1891              	.LASF18:
 1892 0127 4461794F 		.ascii	"DayOfWeek\000"
 1892      66576565 
 1892      6B00
 1893              	.LASF6:
 1894 0131 6C6F6E67 		.ascii	"long long int\000"
 1894      206C6F6E 
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 52


 1894      6720696E 
 1894      7400
 1895              	.LASF16:
 1896 013f 63686172 		.ascii	"char\000"
 1896      00
 1897              	.LASF29:
 1898 0144 6D6F6465 		.ascii	"modem_info_t\000"
 1898      6D5F696E 
 1898      666F5F74 
 1898      00
 1899              	.LASF4:
 1900 0151 6C6F6E67 		.ascii	"long int\000"
 1900      20696E74 
 1900      00
 1901              	.LASF55:
 1902 015a 6D6F6465 		.ascii	"modem_info\000"
 1902      6D5F696E 
 1902      666F00
 1903              	.LASF42:
 1904 0165 5254435F 		.ascii	"RTC_EveryMonthHandler\000"
 1904      45766572 
 1904      794D6F6E 
 1904      74684861 
 1904      6E646C65 
 1905              	.LASF22:
 1906 017b 59656172 		.ascii	"Year\000"
 1906      00
 1907              	.LASF40:
 1908 0180 5254435F 		.ascii	"RTC_EveryDayHandler\000"
 1908      45766572 
 1908      79446179 
 1908      48616E64 
 1908      6C657200 
 1909              	.LASF21:
 1910 0194 4D6F6E74 		.ascii	"Month\000"
 1910      6800
 1911              	.LASF24:
 1912 019a 6C6F6E67 		.ascii	"long double\000"
 1912      20646F75 
 1912      626C6500 
 1913              	.LASF1:
 1914 01a6 756E7369 		.ascii	"unsigned char\000"
 1914      676E6564 
 1914      20636861 
 1914      7200
 1915              	.LASF54:
 1916 01b4 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 1916      6D5F7374 
 1916      6172745F 
 1916      74696D65 
 1916      5F737461 
 1917              	.LASF44:
 1918 01cb 5254435F 		.ascii	"RTC_alarmCfgTimeDate\000"
 1918      616C6172 
 1918      6D436667 
 1918      54696D65 
 1918      44617465 
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 53


 1919              	.LASF53:
 1920 01e0 6D6F6465 		.ascii	"modem_state\000"
 1920      6D5F7374 
 1920      61746500 
 1921              	.LASF0:
 1922 01ec 7369676E 		.ascii	"signed char\000"
 1922      65642063 
 1922      68617200 
 1923              	.LASF43:
 1924 01f8 5254435F 		.ascii	"RTC_EveryYearHandler\000"
 1924      45766572 
 1924      79596561 
 1924      7248616E 
 1924      646C6572 
 1925              	.LASF7:
 1926 020d 6C6F6E67 		.ascii	"long long unsigned int\000"
 1926      206C6F6E 
 1926      6720756E 
 1926      7369676E 
 1926      65642069 
 1927              	.LASF45:
 1928 0224 5254435F 		.ascii	"RTC_currentTimeDate\000"
 1928      63757272 
 1928      656E7454 
 1928      696D6544 
 1928      61746500 
 1929              	.LASF8:
 1930 0238 756E7369 		.ascii	"unsigned int\000"
 1930      676E6564 
 1930      20696E74 
 1930      00
 1931              	.LASF36:
 1932 0245 6B65795F 		.ascii	"key_value_t\000"
 1932      76616C75 
 1932      655F7400 
 1933              	.LASF52:
 1934 0251 64656275 		.ascii	"debug_string\000"
 1934      675F7374 
 1934      72696E67 
 1934      00
 1935              	.LASF62:
 1936 025e 5254435F 		.ascii	"RTC_ISR\000"
 1936      49535200 
 1937              	.LASF3:
 1938 0266 73686F72 		.ascii	"short unsigned int\000"
 1938      7420756E 
 1938      7369676E 
 1938      65642069 
 1938      6E7400
 1939              	.LASF31:
 1940 0279 74696D65 		.ascii	"time_to_network_connect\000"
 1940      5F746F5F 
 1940      6E657477 
 1940      6F726B5F 
 1940      636F6E6E 
 1941              	.LASF32:
 1942 0291 74696D65 		.ascii	"time_to_acquire_ip\000"
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 54


 1942      5F746F5F 
 1942      61637175 
 1942      6972655F 
 1942      697000
 1943              	.LASF28:
 1944 02a4 696D6569 		.ascii	"imei\000"
 1944      00
 1945              	.LASF10:
 1946 02a9 696E7433 		.ascii	"int32_t\000"
 1946      325F7400 
 1947              	.LASF63:
 1948 02b1 5254435F 		.ascii	"RTC_tmp\000"
 1948      746D7000 
 1949              	.LASF33:
 1950 02b9 6D6F6465 		.ascii	"modem_stats_t\000"
 1950      6D5F7374 
 1950      6174735F 
 1950      7400
 1951              	.LASF39:
 1952 02c7 5254435F 		.ascii	"RTC_EveryHourHandler\000"
 1952      45766572 
 1952      79486F75 
 1952      7248616E 
 1952      646C6572 
 1953              	.LASF19:
 1954 02dc 4461794F 		.ascii	"DayOfMonth\000"
 1954      664D6F6E 
 1954      746800
 1955              	.LASF38:
 1956 02e7 5254435F 		.ascii	"RTC_EveryMinuteHandler\000"
 1956      45766572 
 1956      794D696E 
 1956      75746548 
 1956      616E646C 
 1957              	.LASF5:
 1958 02fe 6C6F6E67 		.ascii	"long unsigned int\000"
 1958      20756E73 
 1958      69676E65 
 1958      6420696E 
 1958      7400
 1959              	.LASF13:
 1960 0310 696E7433 		.ascii	"int32\000"
 1960      3200
 1961              	.LASF15:
 1962 0316 646F7562 		.ascii	"double\000"
 1962      6C6500
 1963              	.LASF37:
 1964 031d 5254435F 		.ascii	"RTC_EverySecondHandler\000"
 1964      45766572 
 1964      79536563 
 1964      6F6E6448 
 1964      616E646C 
 1965              	.LASF56:
 1966 0334 6D6F6465 		.ascii	"modem_stats\000"
 1966      6D5F7374 
 1966      61747300 
 1967              	.LASF49:
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccLvOP2Z.s 			page 55


 1968 0340 5254435F 		.ascii	"RTC_statusDateTime\000"
 1968      73746174 
 1968      75734461 
 1968      74655469 
 1968      6D6500
 1969              	.LASF9:
 1970 0353 5F5F696E 		.ascii	"__int32_t\000"
 1970      7433325F 
 1970      7400
 1971              	.LASF60:
 1972 035d 47656E65 		.ascii	"Generated_Source\\PSoC5\\RTC_INT.c\000"
 1972      72617465 
 1972      645F536F 
 1972      75726365 
 1972      5C50536F 
 1973              	.LASF47:
 1974 037e 5254435F 		.ascii	"RTC_alarmCurStatus\000"
 1974      616C6172 
 1974      6D437572 
 1974      53746174 
 1974      757300
 1975              	.LASF51:
 1976 0391 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1976      52784275 
 1976      66666572 
 1976      00
 1977              	.LASF23:
 1978 039e 5254435F 		.ascii	"RTC_TIME_DATE\000"
 1978      54494D45 
 1978      5F444154 
 1978      4500
 1979              	.LASF48:
 1980 03ac 5254435F 		.ascii	"RTC_intervalCfgMask\000"
 1980      696E7465 
 1980      7276616C 
 1980      4366674D 
 1980      61736B00 
 1981              	.LASF61:
 1982 03c0 433A5C55 		.ascii	"C:\\Users\\hyfi_admin\\Documents\\GitHub\\notoriOS\\"
 1982      73657273 
 1982      5C687966 
 1982      695F6164 
 1982      6D696E5C 
 1983 03ee 6E6F746F 		.ascii	"notoriOS\\notoriOS.cydsn\000"
 1983      72694F53 
 1983      5C6E6F74 
 1983      6F72694F 
 1983      532E6379 
 1984              	.LASF30:
 1985 0406 72737369 		.ascii	"rssi\000"
 1985      00
 1986              	.LASF20:
 1987 040b 4461794F 		.ascii	"DayOfYear\000"
 1987      66596561 
 1987      7200
 1988              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
