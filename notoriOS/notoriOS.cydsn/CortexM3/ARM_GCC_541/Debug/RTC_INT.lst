ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RTC_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.syntax unified
  20              		.global _printf_float
  21              		.thumb
  22              		.syntax unified
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,12,4
  27              		.comm	dataPointsInStack,2,2
  28              		.comm	dataPointsInStackDesired,2,2
  29              		.comm	data,6600,4
  30              		.comm	http_request,10000,4
  31              		.comm	http_body,10000,4
  32              		.comm	http_route,200,4
  33              		.comm	system_info,28,4
  34              		.comm	system_settings,324,4
  35              		.section	.text.RTC_EverySecondHandler,"ax",%progbits
  36              		.align	2
  37              		.thumb
  38              		.thumb_func
  39              		.type	RTC_EverySecondHandler, %function
  40              	RTC_EverySecondHandler:
  41              	.LFB64:
  42              		.file 1 "Generated_Source\\PSoC5\\RTC_INT.c"
   1:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/RTC_INT.c **** * File Name: RTC_INT.c
   3:Generated_Source\PSoC5/RTC_INT.c **** * Version 2.0
   4:Generated_Source\PSoC5/RTC_INT.c **** *
   5:Generated_Source\PSoC5/RTC_INT.c **** * Description:
   6:Generated_Source\PSoC5/RTC_INT.c **** *  This file contains the Interrupt Service Routine (ISR) for the RTC component.
   7:Generated_Source\PSoC5/RTC_INT.c **** *  This interrupt routine has entry pointes to overflow on time or date.
   8:Generated_Source\PSoC5/RTC_INT.c **** *
   9:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  10:Generated_Source\PSoC5/RTC_INT.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/RTC_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/RTC_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/RTC_INT.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 2


  16:Generated_Source\PSoC5/RTC_INT.c **** #include "RTC.h"
  17:Generated_Source\PSoC5/RTC_INT.c **** #include "CyLib.h"
  18:Generated_Source\PSoC5/RTC_INT.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/RTC_INT.c **** 
  20:Generated_Source\PSoC5/RTC_INT.c **** /* Function Prototypes */
  21:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EverySecondHandler(void);
  22:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMinuteHandler(void);
  23:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryHourHandler(void);
  24:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryDayHandler(void);
  25:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryWeekHandler(void);
  26:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMonthHandler(void);
  27:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryYearHandler(void);
  28:Generated_Source\PSoC5/RTC_INT.c **** 
  29:Generated_Source\PSoC5/RTC_INT.c **** 
  30:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  31:Generated_Source\PSoC5/RTC_INT.c **** *  Place your includes, defines and code here
  32:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  33:Generated_Source\PSoC5/RTC_INT.c **** /* `#START RTC_ISR_DEFINITION` */
  34:Generated_Source\PSoC5/RTC_INT.c **** 
  35:Generated_Source\PSoC5/RTC_INT.c **** #include "notoriOS.h"
  36:Generated_Source\PSoC5/RTC_INT.c **** 
  37:Generated_Source\PSoC5/RTC_INT.c **** /* `#END` */
  38:Generated_Source\PSoC5/RTC_INT.c **** 
  39:Generated_Source\PSoC5/RTC_INT.c **** 
  40:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  41:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EverySecondHandler
  42:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  43:Generated_Source\PSoC5/RTC_INT.c **** *
  44:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  45:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every second.
  46:Generated_Source\PSoC5/RTC_INT.c **** *
  47:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
  48:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  49:Generated_Source\PSoC5/RTC_INT.c **** *
  50:Generated_Source\PSoC5/RTC_INT.c **** * Return:
  51:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  52:Generated_Source\PSoC5/RTC_INT.c **** *
  53:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  54:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EverySecondHandler(void)
  55:Generated_Source\PSoC5/RTC_INT.c **** {
  43              		.loc 1 55 0
  44              		.cfi_startproc
  45              		@ args = 0, pretend = 0, frame = 0
  46              		@ frame_needed = 1, uses_anonymous_args = 0
  47 0000 80B5     		push	{r7, lr}
  48              		.cfi_def_cfa_offset 8
  49              		.cfi_offset 7, -8
  50              		.cfi_offset 14, -4
  51 0002 00AF     		add	r7, sp, #0
  52              		.cfi_def_cfa_register 7
  56:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every second handler code here. */
  57:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_SECOND_HANDLER_CODE` */
  58:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_SECOND);
  53              		.loc 1 58 0
  54 0004 0020     		movs	r0, #0
  55 0006 FFF7FEFF 		bl	AyoItsTime
  59:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 3


  60:Generated_Source\PSoC5/RTC_INT.c ****     
  61:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_SECOND_HANDLER_CALLBACK
  62:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EverySecondHandler_Callback();
  63:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_SECOND_HANDLER_CALLBACK */
  64:Generated_Source\PSoC5/RTC_INT.c **** }
  56              		.loc 1 64 0
  57 000a 00BF     		nop
  58 000c 80BD     		pop	{r7, pc}
  59              		.cfi_endproc
  60              	.LFE64:
  61              		.size	RTC_EverySecondHandler, .-RTC_EverySecondHandler
  62 000e 00BF     		.section	.text.RTC_EveryMinuteHandler,"ax",%progbits
  63              		.align	2
  64              		.thumb
  65              		.thumb_func
  66              		.type	RTC_EveryMinuteHandler, %function
  67              	RTC_EveryMinuteHandler:
  68              	.LFB65:
  65:Generated_Source\PSoC5/RTC_INT.c **** 
  66:Generated_Source\PSoC5/RTC_INT.c **** 
  67:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  68:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryMinuteHandler
  69:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  70:Generated_Source\PSoC5/RTC_INT.c **** *
  71:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  72:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every minute.
  73:Generated_Source\PSoC5/RTC_INT.c **** *
  74:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
  75:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  76:Generated_Source\PSoC5/RTC_INT.c **** *
  77:Generated_Source\PSoC5/RTC_INT.c **** * Return:
  78:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  79:Generated_Source\PSoC5/RTC_INT.c **** *
  80:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  81:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMinuteHandler(void)
  82:Generated_Source\PSoC5/RTC_INT.c **** {
  69              		.loc 1 82 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 1, uses_anonymous_args = 0
  73 0000 80B5     		push	{r7, lr}
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 7, -8
  76              		.cfi_offset 14, -4
  77 0002 00AF     		add	r7, sp, #0
  78              		.cfi_def_cfa_register 7
  83:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every minute handler code here. */
  84:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_MINUTE_HANDLER_CODE` */
  85:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_MINUTE);
  79              		.loc 1 85 0
  80 0004 0120     		movs	r0, #1
  81 0006 FFF7FEFF 		bl	AyoItsTime
  86:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
  87:Generated_Source\PSoC5/RTC_INT.c **** 
  88:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_MINUTE_HANDLER_CALLBACK
  89:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryMinuteHandler_Callback();
  90:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_MINUTE_HANDLER_CALLBACK */    
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 4


  91:Generated_Source\PSoC5/RTC_INT.c **** }
  82              		.loc 1 91 0
  83 000a 00BF     		nop
  84 000c 80BD     		pop	{r7, pc}
  85              		.cfi_endproc
  86              	.LFE65:
  87              		.size	RTC_EveryMinuteHandler, .-RTC_EveryMinuteHandler
  88 000e 00BF     		.section	.text.RTC_EveryHourHandler,"ax",%progbits
  89              		.align	2
  90              		.thumb
  91              		.thumb_func
  92              		.type	RTC_EveryHourHandler, %function
  93              	RTC_EveryHourHandler:
  94              	.LFB66:
  92:Generated_Source\PSoC5/RTC_INT.c **** 
  93:Generated_Source\PSoC5/RTC_INT.c **** 
  94:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  95:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryHourHandler
  96:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  97:Generated_Source\PSoC5/RTC_INT.c **** *
  98:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  99:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every hour.
 100:Generated_Source\PSoC5/RTC_INT.c **** *
 101:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 102:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 103:Generated_Source\PSoC5/RTC_INT.c **** *
 104:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 105:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 106:Generated_Source\PSoC5/RTC_INT.c **** *
 107:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 108:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryHourHandler(void)
 109:Generated_Source\PSoC5/RTC_INT.c **** {
  95              		.loc 1 109 0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 1, uses_anonymous_args = 0
  99 0000 80B5     		push	{r7, lr}
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 7, -8
 102              		.cfi_offset 14, -4
 103 0002 00AF     		add	r7, sp, #0
 104              		.cfi_def_cfa_register 7
 110:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every hour handler code here. */
 111:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_HOUR_HANDLER_CODE` */
 112:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_HOUR);
 105              		.loc 1 112 0
 106 0004 0220     		movs	r0, #2
 107 0006 FFF7FEFF 		bl	AyoItsTime
 113:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 114:Generated_Source\PSoC5/RTC_INT.c ****     
 115:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_HOUR_HANDLER_CALLBACK
 116:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryHourHandler_Callback();
 117:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_HOUR_HANDLER_CALLBACK */
 118:Generated_Source\PSoC5/RTC_INT.c **** }
 108              		.loc 1 118 0
 109 000a 00BF     		nop
 110 000c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 5


 111              		.cfi_endproc
 112              	.LFE66:
 113              		.size	RTC_EveryHourHandler, .-RTC_EveryHourHandler
 114 000e 00BF     		.section	.text.RTC_EveryDayHandler,"ax",%progbits
 115              		.align	2
 116              		.thumb
 117              		.thumb_func
 118              		.type	RTC_EveryDayHandler, %function
 119              	RTC_EveryDayHandler:
 120              	.LFB67:
 119:Generated_Source\PSoC5/RTC_INT.c **** 
 120:Generated_Source\PSoC5/RTC_INT.c **** 
 121:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 122:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryDayHandler
 123:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 124:Generated_Source\PSoC5/RTC_INT.c **** *
 125:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 126:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every day.
 127:Generated_Source\PSoC5/RTC_INT.c **** *
 128:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 129:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 130:Generated_Source\PSoC5/RTC_INT.c **** *
 131:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 132:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 133:Generated_Source\PSoC5/RTC_INT.c **** *
 134:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 135:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryDayHandler(void)
 136:Generated_Source\PSoC5/RTC_INT.c **** {
 121              		.loc 1 136 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
 129 0002 00AF     		add	r7, sp, #0
 130              		.cfi_def_cfa_register 7
 137:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your everyday handler code here. */
 138:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_DAY_HANDLER_CODE` */
 139:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_DAY);
 131              		.loc 1 139 0
 132 0004 0320     		movs	r0, #3
 133 0006 FFF7FEFF 		bl	AyoItsTime
 140:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 141:Generated_Source\PSoC5/RTC_INT.c ****     
 142:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_DAY_HANDLER_CALLBACK
 143:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryDayHandler_Callback();
 144:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_DAY_HANDLER_CALLBACK */
 145:Generated_Source\PSoC5/RTC_INT.c **** }
 134              		.loc 1 145 0
 135 000a 00BF     		nop
 136 000c 80BD     		pop	{r7, pc}
 137              		.cfi_endproc
 138              	.LFE67:
 139              		.size	RTC_EveryDayHandler, .-RTC_EveryDayHandler
 140 000e 00BF     		.section	.text.RTC_EveryWeekHandler,"ax",%progbits
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 6


 141              		.align	2
 142              		.thumb
 143              		.thumb_func
 144              		.type	RTC_EveryWeekHandler, %function
 145              	RTC_EveryWeekHandler:
 146              	.LFB68:
 146:Generated_Source\PSoC5/RTC_INT.c **** 
 147:Generated_Source\PSoC5/RTC_INT.c **** 
 148:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 149:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryWeekHandler
 150:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 151:Generated_Source\PSoC5/RTC_INT.c **** *
 152:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 153:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every week.
 154:Generated_Source\PSoC5/RTC_INT.c **** *
 155:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 156:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 157:Generated_Source\PSoC5/RTC_INT.c **** *
 158:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 159:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 160:Generated_Source\PSoC5/RTC_INT.c **** *
 161:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 162:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryWeekHandler(void)
 163:Generated_Source\PSoC5/RTC_INT.c **** {
 147              		.loc 1 163 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 1, uses_anonymous_args = 0
 151 0000 80B5     		push	{r7, lr}
 152              		.cfi_def_cfa_offset 8
 153              		.cfi_offset 7, -8
 154              		.cfi_offset 14, -4
 155 0002 00AF     		add	r7, sp, #0
 156              		.cfi_def_cfa_register 7
 164:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every week handler code here. */
 165:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_WEEK_HANDLER_CODE` */
 166:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_WEEK);
 157              		.loc 1 166 0
 158 0004 0420     		movs	r0, #4
 159 0006 FFF7FEFF 		bl	AyoItsTime
 167:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 168:Generated_Source\PSoC5/RTC_INT.c **** 
 169:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_WEEK_HANDLER_CALLBACK
 170:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryWeekHandler_Callback();
 171:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_WEEK_HANDLER_CALLBACK */
 172:Generated_Source\PSoC5/RTC_INT.c **** }
 160              		.loc 1 172 0
 161 000a 00BF     		nop
 162 000c 80BD     		pop	{r7, pc}
 163              		.cfi_endproc
 164              	.LFE68:
 165              		.size	RTC_EveryWeekHandler, .-RTC_EveryWeekHandler
 166 000e 00BF     		.section	.text.RTC_EveryMonthHandler,"ax",%progbits
 167              		.align	2
 168              		.thumb
 169              		.thumb_func
 170              		.type	RTC_EveryMonthHandler, %function
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 7


 171              	RTC_EveryMonthHandler:
 172              	.LFB69:
 173:Generated_Source\PSoC5/RTC_INT.c **** 
 174:Generated_Source\PSoC5/RTC_INT.c **** 
 175:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 176:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryMonthHandler
 177:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 178:Generated_Source\PSoC5/RTC_INT.c **** *
 179:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 180:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every month.
 181:Generated_Source\PSoC5/RTC_INT.c **** *
 182:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 183:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 184:Generated_Source\PSoC5/RTC_INT.c **** *
 185:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 186:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 187:Generated_Source\PSoC5/RTC_INT.c **** *
 188:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 189:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMonthHandler(void)
 190:Generated_Source\PSoC5/RTC_INT.c **** {
 173              		.loc 1 190 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 1, uses_anonymous_args = 0
 177 0000 80B5     		push	{r7, lr}
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 7, -8
 180              		.cfi_offset 14, -4
 181 0002 00AF     		add	r7, sp, #0
 182              		.cfi_def_cfa_register 7
 191:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every month handler code here. */
 192:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_MONTH_HANDLER_CODE` */
 193:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_MONTH);
 183              		.loc 1 193 0
 184 0004 0520     		movs	r0, #5
 185 0006 FFF7FEFF 		bl	AyoItsTime
 194:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 195:Generated_Source\PSoC5/RTC_INT.c ****     
 196:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_MONTH_HANDLER_CALLBACK
 197:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryMonthHandler_Callback();
 198:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_MONTH_HANDLER_CALLBACK */
 199:Generated_Source\PSoC5/RTC_INT.c **** }
 186              		.loc 1 199 0
 187 000a 00BF     		nop
 188 000c 80BD     		pop	{r7, pc}
 189              		.cfi_endproc
 190              	.LFE69:
 191              		.size	RTC_EveryMonthHandler, .-RTC_EveryMonthHandler
 192 000e 00BF     		.section	.text.RTC_EveryYearHandler,"ax",%progbits
 193              		.align	2
 194              		.thumb
 195              		.thumb_func
 196              		.type	RTC_EveryYearHandler, %function
 197              	RTC_EveryYearHandler:
 198              	.LFB70:
 200:Generated_Source\PSoC5/RTC_INT.c **** 
 201:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 8


 202:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 203:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryYearHandler
 204:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 205:Generated_Source\PSoC5/RTC_INT.c **** *
 206:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 207:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every year.
 208:Generated_Source\PSoC5/RTC_INT.c **** *
 209:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 210:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 211:Generated_Source\PSoC5/RTC_INT.c **** *
 212:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 213:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 214:Generated_Source\PSoC5/RTC_INT.c **** *
 215:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 216:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryYearHandler(void)
 217:Generated_Source\PSoC5/RTC_INT.c **** {
 199              		.loc 1 217 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 1, uses_anonymous_args = 0
 203 0000 80B5     		push	{r7, lr}
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 7, -8
 206              		.cfi_offset 14, -4
 207 0002 00AF     		add	r7, sp, #0
 208              		.cfi_def_cfa_register 7
 218:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every year handler code here. */
 219:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_YEAR_HANDLER_CODE` */
 220:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_YEAR);
 209              		.loc 1 220 0
 210 0004 0620     		movs	r0, #6
 211 0006 FFF7FEFF 		bl	AyoItsTime
 221:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 222:Generated_Source\PSoC5/RTC_INT.c **** 
 223:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_YEAR_HANDLER_CALLBACK
 224:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryYearHandler_Callback();
 225:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_YEAR_HANDLER_CALLBACK */    
 226:Generated_Source\PSoC5/RTC_INT.c **** }
 212              		.loc 1 226 0
 213 000a 00BF     		nop
 214 000c 80BD     		pop	{r7, pc}
 215              		.cfi_endproc
 216              	.LFE70:
 217              		.size	RTC_EveryYearHandler, .-RTC_EveryYearHandler
 218 000e 00BF     		.section	.text.RTC_ISR,"ax",%progbits
 219              		.align	2
 220              		.global	RTC_ISR
 221              		.thumb
 222              		.thumb_func
 223              		.type	RTC_ISR, %function
 224              	RTC_ISR:
 225              	.LFB71:
 227:Generated_Source\PSoC5/RTC_INT.c **** 
 228:Generated_Source\PSoC5/RTC_INT.c **** 
 229:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/RTC_INT.c **** * Function Name: RTC_ISR
 231:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 9


 232:Generated_Source\PSoC5/RTC_INT.c **** *
 233:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 234:Generated_Source\PSoC5/RTC_INT.c **** *  This ISR is executed on 1PPS (one pulse per second) event.
 235:Generated_Source\PSoC5/RTC_INT.c **** *  Global interrupt must be enabled to invoke this ISR.
 236:Generated_Source\PSoC5/RTC_INT.c **** *  This interrupt trigs every second.
 237:Generated_Source\PSoC5/RTC_INT.c **** *
 238:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 239:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 240:Generated_Source\PSoC5/RTC_INT.c **** *
 241:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 242:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 243:Generated_Source\PSoC5/RTC_INT.c **** *
 244:Generated_Source\PSoC5/RTC_INT.c **** * Global variables:
 245:Generated_Source\PSoC5/RTC_INT.c **** * RTC_currentTimeDate, RTC_dstTimeDateStart,
 246:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstTimeDateStop, RTC_dstTimeDateStart,
 247:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_alarmCfgTimeDate, RTC_statusDateTime,
 248:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStartStatus, RTC_dstStartStatus,
 249:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStopStatus, RTC_alarmCurStatus: global
 250:Generated_Source\PSoC5/RTC_INT.c **** *  variables are used for the time/date, DST and alarm update procedure.
 251:Generated_Source\PSoC5/RTC_INT.c **** *
 252:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstTimeDateStart and RTC_currentTimeDate:
 253:Generated_Source\PSoC5/RTC_INT.c **** *  are modified with the updated values.
 254:Generated_Source\PSoC5/RTC_INT.c **** *
 255:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_statusDateTime, RTC_dstStartStatus,
 256:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStartStatus, RTC_dstStopStatus,
 257:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_alarmCurStatus: global variables could be modified while
 258:Generated_Source\PSoC5/RTC_INT.c **** *  current time/date is updated.
 259:Generated_Source\PSoC5/RTC_INT.c **** *
 260:Generated_Source\PSoC5/RTC_INT.c **** * Side Effects:
 261:Generated_Source\PSoC5/RTC_INT.c **** *  Clears all interrupt status bits (react_int, limact_int, onepps_int, ctw_int,
 262:Generated_Source\PSoC5/RTC_INT.c **** *  and  ftw_int) in Power Manager Interrupt Status Register. If an interrupt
 263:Generated_Source\PSoC5/RTC_INT.c **** *  gets generated at the same time as a clear, the bit will remain set (which
 264:Generated_Source\PSoC5/RTC_INT.c **** *  causes another interrupt).
 265:Generated_Source\PSoC5/RTC_INT.c **** *
 266:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 267:Generated_Source\PSoC5/RTC_INT.c **** CY_ISR(RTC_ISR)
 268:Generated_Source\PSoC5/RTC_INT.c **** {
 226              		.loc 1 268 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 8
 229              		@ frame_needed = 1, uses_anonymous_args = 0
 230 0000 80B5     		push	{r7, lr}
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 7, -8
 233              		.cfi_offset 14, -4
 234 0002 82B0     		sub	sp, sp, #8
 235              		.cfi_def_cfa_offset 16
 236 0004 00AF     		add	r7, sp, #0
 237              		.cfi_def_cfa_register 7
 269:Generated_Source\PSoC5/RTC_INT.c ****     uint8 RTC_tmp;
 270:Generated_Source\PSoC5/RTC_INT.c **** 
 271:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_ISR_ENTRY_CALLBACK
 272:Generated_Source\PSoC5/RTC_INT.c ****         RTC_ISR_EntryCallback();
 273:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_ISR_ENTRY_CALLBACK */
 274:Generated_Source\PSoC5/RTC_INT.c ****     
 275:Generated_Source\PSoC5/RTC_INT.c ****     /* Clear OPPS interrupt status flag */
 276:Generated_Source\PSoC5/RTC_INT.c ****     (void) CyPmReadStatus(CY_PM_ONEPPS_INT);
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 10


 238              		.loc 1 276 0
 239 0006 0420     		movs	r0, #4
 240 0008 FFF7FEFF 		bl	CyPmReadStatus
 277:Generated_Source\PSoC5/RTC_INT.c **** 
 278:Generated_Source\PSoC5/RTC_INT.c ****     /* Increment seconds counter */
 279:Generated_Source\PSoC5/RTC_INT.c ****     RTC_currentTimeDate.Sec++;
 241              		.loc 1 279 0
 242 000c 9E4B     		ldr	r3, .L48
 243 000e 1B78     		ldrb	r3, [r3]
 244 0010 DBB2     		uxtb	r3, r3
 245 0012 0133     		adds	r3, r3, #1
 246 0014 DAB2     		uxtb	r2, r3
 247 0016 9C4B     		ldr	r3, .L48
 248 0018 1A70     		strb	r2, [r3]
 280:Generated_Source\PSoC5/RTC_INT.c **** 
 281:Generated_Source\PSoC5/RTC_INT.c ****     /* Check if minute elapsed */
 282:Generated_Source\PSoC5/RTC_INT.c ****     if(RTC_currentTimeDate.Sec > RTC_MINUTE_ELAPSED)
 249              		.loc 1 282 0
 250 001a 9B4B     		ldr	r3, .L48
 251 001c 1B78     		ldrb	r3, [r3]
 252 001e DBB2     		uxtb	r3, r3
 253 0020 3B2B     		cmp	r3, #59
 254 0022 40F2A682 		bls	.L9
 283:Generated_Source\PSoC5/RTC_INT.c ****     {
 284:Generated_Source\PSoC5/RTC_INT.c ****         /* Inc Min */
 285:Generated_Source\PSoC5/RTC_INT.c ****         RTC_currentTimeDate.Min++;
 255              		.loc 1 285 0
 256 0026 984B     		ldr	r3, .L48
 257 0028 5B78     		ldrb	r3, [r3, #1]
 258 002a DBB2     		uxtb	r3, r3
 259 002c 0133     		adds	r3, r3, #1
 260 002e DAB2     		uxtb	r2, r3
 261 0030 954B     		ldr	r3, .L48
 262 0032 5A70     		strb	r2, [r3, #1]
 286:Generated_Source\PSoC5/RTC_INT.c **** 
 287:Generated_Source\PSoC5/RTC_INT.c ****         /* Clear Sec */
 288:Generated_Source\PSoC5/RTC_INT.c ****         RTC_currentTimeDate.Sec = 0u;
 263              		.loc 1 288 0
 264 0034 944B     		ldr	r3, .L48
 265 0036 0022     		movs	r2, #0
 266 0038 1A70     		strb	r2, [r3]
 289:Generated_Source\PSoC5/RTC_INT.c **** 
 290:Generated_Source\PSoC5/RTC_INT.c ****         if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 267              		.loc 1 290 0
 268 003a 934B     		ldr	r3, .L48
 269 003c 5B78     		ldrb	r3, [r3, #1]
 270 003e DBB2     		uxtb	r3, r3
 271 0040 3B2B     		cmp	r3, #59
 272 0042 40F24682 		bls	.L10
 291:Generated_Source\PSoC5/RTC_INT.c ****         {
 292:Generated_Source\PSoC5/RTC_INT.c ****             /* Inc HOUR */
 293:Generated_Source\PSoC5/RTC_INT.c ****             RTC_currentTimeDate.Hour++;
 273              		.loc 1 293 0
 274 0046 904B     		ldr	r3, .L48
 275 0048 9B78     		ldrb	r3, [r3, #2]
 276 004a DBB2     		uxtb	r3, r3
 277 004c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 11


 278 004e DAB2     		uxtb	r2, r3
 279 0050 8D4B     		ldr	r3, .L48
 280 0052 9A70     		strb	r2, [r3, #2]
 294:Generated_Source\PSoC5/RTC_INT.c **** 
 295:Generated_Source\PSoC5/RTC_INT.c ****             /* Clear Min */
 296:Generated_Source\PSoC5/RTC_INT.c ****             RTC_currentTimeDate.Min = 0u;
 281              		.loc 1 296 0
 282 0054 8C4B     		ldr	r3, .L48
 283 0056 0022     		movs	r2, #0
 284 0058 5A70     		strb	r2, [r3, #1]
 297:Generated_Source\PSoC5/RTC_INT.c **** 
 298:Generated_Source\PSoC5/RTC_INT.c ****             /* Day roll over */
 299:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 285              		.loc 1 299 0
 286 005a 8B4B     		ldr	r3, .L48
 287 005c 9B78     		ldrb	r3, [r3, #2]
 288 005e DBB2     		uxtb	r3, r3
 289 0060 172B     		cmp	r3, #23
 290 0062 40F2DD81 		bls	.L11
 300:Generated_Source\PSoC5/RTC_INT.c ****             {
 301:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfMonth */
 302:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfMonth++;
 291              		.loc 1 302 0
 292 0066 884B     		ldr	r3, .L48
 293 0068 1B79     		ldrb	r3, [r3, #4]
 294 006a DBB2     		uxtb	r3, r3
 295 006c 0133     		adds	r3, r3, #1
 296 006e DAB2     		uxtb	r2, r3
 297 0070 854B     		ldr	r3, .L48
 298 0072 1A71     		strb	r2, [r3, #4]
 303:Generated_Source\PSoC5/RTC_INT.c **** 
 304:Generated_Source\PSoC5/RTC_INT.c ****                 /* Clear Hour */
 305:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.Hour = 0u;
 299              		.loc 1 305 0
 300 0074 844B     		ldr	r3, .L48
 301 0076 0022     		movs	r2, #0
 302 0078 9A70     		strb	r2, [r3, #2]
 306:Generated_Source\PSoC5/RTC_INT.c **** 
 307:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfYear */
 308:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfYear++;
 303              		.loc 1 308 0
 304 007a 834B     		ldr	r3, .L48
 305 007c DB88     		ldrh	r3, [r3, #6]	@ movhi
 306 007e 9BB2     		uxth	r3, r3
 307 0080 0133     		adds	r3, r3, #1
 308 0082 9AB2     		uxth	r2, r3
 309 0084 804B     		ldr	r3, .L48
 310 0086 DA80     		strh	r2, [r3, #6]	@ movhi
 309:Generated_Source\PSoC5/RTC_INT.c **** 
 310:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfWeek */
 311:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfWeek++;
 311              		.loc 1 311 0
 312 0088 7F4B     		ldr	r3, .L48
 313 008a DB78     		ldrb	r3, [r3, #3]
 314 008c DBB2     		uxtb	r3, r3
 315 008e 0133     		adds	r3, r3, #1
 316 0090 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 12


 317 0092 7D4B     		ldr	r3, .L48
 318 0094 DA70     		strb	r2, [r3, #3]
 312:Generated_Source\PSoC5/RTC_INT.c **** 
 313:Generated_Source\PSoC5/RTC_INT.c ****                 /* Check DayOfWeek */
 314:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
 319              		.loc 1 314 0
 320 0096 7C4B     		ldr	r3, .L48
 321 0098 DB78     		ldrb	r3, [r3, #3]
 322 009a DBB2     		uxtb	r3, r3
 323 009c 072B     		cmp	r3, #7
 324 009e 02D9     		bls	.L12
 315:Generated_Source\PSoC5/RTC_INT.c ****                 {
 316:Generated_Source\PSoC5/RTC_INT.c ****                     /* start new week */
 317:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.DayOfWeek = 1u;
 325              		.loc 1 317 0
 326 00a0 794B     		ldr	r3, .L48
 327 00a2 0122     		movs	r2, #1
 328 00a4 DA70     		strb	r2, [r3, #3]
 329              	.L12:
 318:Generated_Source\PSoC5/RTC_INT.c ****                 }
 319:Generated_Source\PSoC5/RTC_INT.c **** 
 320:Generated_Source\PSoC5/RTC_INT.c ****                 /* Day of month roll over.
 321:Generated_Source\PSoC5/RTC_INT.c ****                 * Check if day of month greater than 29 in February of leap year or
 322:Generated_Source\PSoC5/RTC_INT.c ****                 * if day of month greater than 28 NOT in February of NON leap year or
 323:Generated_Source\PSoC5/RTC_INT.c ****                 * if day of month greater than it should be in every month in non leap year
 324:Generated_Source\PSoC5/RTC_INT.c ****                 */
 325:Generated_Source\PSoC5/RTC_INT.c ****                 if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 330              		.loc 1 325 0
 331 00a6 794B     		ldr	r3, .L48+4
 332 00a8 1B78     		ldrb	r3, [r3]
 333 00aa DBB2     		uxtb	r3, r3
 334 00ac 03F00203 		and	r3, r3, #2
 335 00b0 002B     		cmp	r3, #0
 336 00b2 11D0     		beq	.L13
 326:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 337              		.loc 1 326 0 discriminator 1
 338 00b4 744B     		ldr	r3, .L48
 339 00b6 1B7A     		ldrb	r3, [r3, #8]
 340 00b8 DBB2     		uxtb	r3, r3
 325:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 341              		.loc 1 325 0 discriminator 1
 342 00ba 022B     		cmp	r3, #2
 343 00bc 0CD1     		bne	.L13
 327:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 344              		.loc 1 327 0
 345 00be 724B     		ldr	r3, .L48
 346 00c0 1B79     		ldrb	r3, [r3, #4]
 347 00c2 DBB2     		uxtb	r3, r3
 348 00c4 1946     		mov	r1, r3
 328:Generated_Source\PSoC5/RTC_INT.c ****                              (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 349              		.loc 1 328 0
 350 00c6 704B     		ldr	r3, .L48
 351 00c8 1B7A     		ldrb	r3, [r3, #8]
 352 00ca DBB2     		uxtb	r3, r3
 353 00cc 013B     		subs	r3, r3, #1
 354 00ce 704A     		ldr	r2, .L48+8
 355 00d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 13


 356 00d2 0133     		adds	r3, r3, #1
 326:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 357              		.loc 1 326 0
 358 00d4 9942     		cmp	r1, r3
 359 00d6 2AD8     		bhi	.L14
 360              	.L13:
 329:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY))  &&
 361              		.loc 1 329 0
 362 00d8 6C4B     		ldr	r3, .L48+4
 363 00da 1B78     		ldrb	r3, [r3]
 364 00dc DBB2     		uxtb	r3, r3
 365 00de 03F00203 		and	r3, r3, #2
 328:Generated_Source\PSoC5/RTC_INT.c ****                              (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 366              		.loc 1 328 0
 367 00e2 002B     		cmp	r3, #0
 368 00e4 0FD0     		beq	.L15
 330:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month != RTC_FEBRUARY) &&
 369              		.loc 1 330 0
 370 00e6 684B     		ldr	r3, .L48
 371 00e8 1B7A     		ldrb	r3, [r3, #8]
 372 00ea DBB2     		uxtb	r3, r3
 329:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY))  &&
 373              		.loc 1 329 0
 374 00ec 022B     		cmp	r3, #2
 375 00ee 0AD0     		beq	.L15
 331:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 376              		.loc 1 331 0
 377 00f0 654B     		ldr	r3, .L48
 378 00f2 1B79     		ldrb	r3, [r3, #4]
 379 00f4 DAB2     		uxtb	r2, r3
 332:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 380              		.loc 1 332 0
 381 00f6 644B     		ldr	r3, .L48
 382 00f8 1B7A     		ldrb	r3, [r3, #8]
 383 00fa DBB2     		uxtb	r3, r3
 384 00fc 013B     		subs	r3, r3, #1
 385 00fe 6449     		ldr	r1, .L48+8
 386 0100 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 330:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month != RTC_FEBRUARY) &&
 387              		.loc 1 330 0
 388 0102 9A42     		cmp	r2, r3
 389 0104 13D8     		bhi	.L14
 390              	.L15:
 333:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY))  &&
 391              		.loc 1 333 0
 392 0106 614B     		ldr	r3, .L48+4
 393 0108 1B78     		ldrb	r3, [r3]
 394 010a DBB2     		uxtb	r3, r3
 395 010c 03F00203 		and	r3, r3, #2
 332:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 396              		.loc 1 332 0
 397 0110 002B     		cmp	r3, #0
 398 0112 40F0F480 		bne	.L16
 334:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 399              		.loc 1 334 0
 400 0116 5C4B     		ldr	r3, .L48
 401 0118 1B79     		ldrb	r3, [r3, #4]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 14


 402 011a DAB2     		uxtb	r2, r3
 335:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
 403              		.loc 1 335 0
 404 011c 5A4B     		ldr	r3, .L48
 405 011e 1B7A     		ldrb	r3, [r3, #8]
 406 0120 DBB2     		uxtb	r3, r3
 407 0122 013B     		subs	r3, r3, #1
 408 0124 5A49     		ldr	r1, .L48+8
 409 0126 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 333:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY))  &&
 410              		.loc 1 333 0
 411 0128 9A42     		cmp	r2, r3
 412 012a 40F2E880 		bls	.L16
 413              	.L14:
 336:Generated_Source\PSoC5/RTC_INT.c ****                 {
 337:Generated_Source\PSoC5/RTC_INT.c ****                     /* Inc Month */
 338:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.Month++;
 414              		.loc 1 338 0
 415 012e 564B     		ldr	r3, .L48
 416 0130 1B7A     		ldrb	r3, [r3, #8]
 417 0132 DBB2     		uxtb	r3, r3
 418 0134 0133     		adds	r3, r3, #1
 419 0136 DAB2     		uxtb	r2, r3
 420 0138 534B     		ldr	r3, .L48
 421 013a 1A72     		strb	r2, [r3, #8]
 339:Generated_Source\PSoC5/RTC_INT.c **** 
 340:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set first day of month */
 341:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.DayOfMonth = 1u;
 422              		.loc 1 341 0
 423 013c 524B     		ldr	r3, .L48
 424 013e 0122     		movs	r2, #1
 425 0140 1A71     		strb	r2, [r3, #4]
 342:Generated_Source\PSoC5/RTC_INT.c **** 
 343:Generated_Source\PSoC5/RTC_INT.c ****                     /* Year roll over */
 344:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 426              		.loc 1 344 0
 427 0142 514B     		ldr	r3, .L48
 428 0144 1B7A     		ldrb	r3, [r3, #8]
 429 0146 DBB2     		uxtb	r3, r3
 430 0148 0C2B     		cmp	r3, #12
 431 014a 40F28580 		bls	.L17
 345:Generated_Source\PSoC5/RTC_INT.c ****                     {
 346:Generated_Source\PSoC5/RTC_INT.c ****                         /* Inc Year */
 347:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.Year++;
 432              		.loc 1 347 0
 433 014e 4E4B     		ldr	r3, .L48
 434 0150 5B89     		ldrh	r3, [r3, #10]	@ movhi
 435 0152 9BB2     		uxth	r3, r3
 436 0154 0133     		adds	r3, r3, #1
 437 0156 9AB2     		uxth	r2, r3
 438 0158 4B4B     		ldr	r3, .L48
 439 015a 5A81     		strh	r2, [r3, #10]	@ movhi
 348:Generated_Source\PSoC5/RTC_INT.c **** 
 349:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set first month of year */
 350:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.Month = 1u;
 440              		.loc 1 350 0
 441 015c 4A4B     		ldr	r3, .L48
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 15


 442 015e 0122     		movs	r2, #1
 443 0160 1A72     		strb	r2, [r3, #8]
 351:Generated_Source\PSoC5/RTC_INT.c **** 
 352:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set first day of year */
 353:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.DayOfYear = 1u;
 444              		.loc 1 353 0
 445 0162 494B     		ldr	r3, .L48
 446 0164 0122     		movs	r2, #1
 447 0166 DA80     		strh	r2, [r3, #6]	@ movhi
 354:Generated_Source\PSoC5/RTC_INT.c **** 
 355:Generated_Source\PSoC5/RTC_INT.c ****                         /* Is this year leap */
 356:Generated_Source\PSoC5/RTC_INT.c ****                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 448              		.loc 1 356 0
 449 0168 474B     		ldr	r3, .L48
 450 016a 5B89     		ldrh	r3, [r3, #10]	@ movhi
 451 016c 9BB2     		uxth	r3, r3
 452 016e 494A     		ldr	r2, .L48+12
 453 0170 A2FB0312 		umull	r1, r2, r2, r3
 454 0174 D209     		lsrs	r2, r2, #7
 455 0176 4FF4C871 		mov	r1, #400
 456 017a 01FB02F2 		mul	r2, r1, r2
 457 017e 9B1A     		subs	r3, r3, r2
 458 0180 9BB2     		uxth	r3, r3
 459 0182 002B     		cmp	r3, #0
 460 0184 15D0     		beq	.L18
 461              		.loc 1 356 0 is_stmt 0 discriminator 1
 462 0186 404B     		ldr	r3, .L48
 463 0188 5B89     		ldrh	r3, [r3, #10]	@ movhi
 464 018a 9BB2     		uxth	r3, r3
 465 018c 03F00303 		and	r3, r3, #3
 466 0190 9BB2     		uxth	r3, r3
 467 0192 002B     		cmp	r3, #0
 468 0194 16D1     		bne	.L19
 469              		.loc 1 356 0 discriminator 2
 470 0196 3C4B     		ldr	r3, .L48
 471 0198 5B89     		ldrh	r3, [r3, #10]	@ movhi
 472 019a 9BB2     		uxth	r3, r3
 473 019c 3D4A     		ldr	r2, .L48+12
 474 019e A2FB0312 		umull	r1, r2, r2, r3
 475 01a2 5209     		lsrs	r2, r2, #5
 476 01a4 6421     		movs	r1, #100
 477 01a6 01FB02F2 		mul	r2, r1, r2
 478 01aa 9B1A     		subs	r3, r3, r2
 479 01ac 9BB2     		uxth	r3, r3
 480 01ae 002B     		cmp	r3, #0
 481 01b0 08D0     		beq	.L19
 482              	.L18:
 357:Generated_Source\PSoC5/RTC_INT.c ****                         {
 358:Generated_Source\PSoC5/RTC_INT.c ****                             /* Set leap year flag */
 359:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime |= RTC_STATUS_LY;
 483              		.loc 1 359 0 is_stmt 1
 484 01b2 364B     		ldr	r3, .L48+4
 485 01b4 1B78     		ldrb	r3, [r3]
 486 01b6 DBB2     		uxtb	r3, r3
 487 01b8 43F00203 		orr	r3, r3, #2
 488 01bc DAB2     		uxtb	r2, r3
 489 01be 334B     		ldr	r3, .L48+4
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 16


 490 01c0 1A70     		strb	r2, [r3]
 491 01c2 07E0     		b	.L20
 492              	.L19:
 360:Generated_Source\PSoC5/RTC_INT.c ****                         }
 361:Generated_Source\PSoC5/RTC_INT.c ****                         else    /* not leap year */
 362:Generated_Source\PSoC5/RTC_INT.c ****                         {
 363:Generated_Source\PSoC5/RTC_INT.c ****                             /* Clear leap year */
 364:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 493              		.loc 1 364 0
 494 01c4 314B     		ldr	r3, .L48+4
 495 01c6 1B78     		ldrb	r3, [r3]
 496 01c8 DBB2     		uxtb	r3, r3
 497 01ca 23F00203 		bic	r3, r3, #2
 498 01ce DAB2     		uxtb	r2, r3
 499 01d0 2E4B     		ldr	r3, .L48+4
 500 01d2 1A70     		strb	r2, [r3]
 501              	.L20:
 365:Generated_Source\PSoC5/RTC_INT.c ****                         }
 366:Generated_Source\PSoC5/RTC_INT.c **** 
 367:Generated_Source\PSoC5/RTC_INT.c ****                         /* Alarm YEAR */
 368:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 502              		.loc 1 368 0
 503 01d4 304B     		ldr	r3, .L48+16
 504 01d6 1B78     		ldrb	r3, [r3]
 505 01d8 DBB2     		uxtb	r3, r3
 506 01da 5BB2     		sxtb	r3, r3
 507 01dc 002B     		cmp	r3, #0
 508 01de 18DA     		bge	.L21
 369:Generated_Source\PSoC5/RTC_INT.c ****                                                              RTC_ALARM_YEAR_MASK))
 370:Generated_Source\PSoC5/RTC_INT.c ****                         {
 371:Generated_Source\PSoC5/RTC_INT.c ****                             /* Years match */
 372:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 509              		.loc 1 372 0
 510 01e0 2E4B     		ldr	r3, .L48+20
 511 01e2 5B89     		ldrh	r3, [r3, #10]	@ movhi
 512 01e4 9AB2     		uxth	r2, r3
 513 01e6 284B     		ldr	r3, .L48
 514 01e8 5B89     		ldrh	r3, [r3, #10]	@ movhi
 515 01ea 9BB2     		uxth	r3, r3
 516 01ec 9A42     		cmp	r2, r3
 517 01ee 08D1     		bne	.L22
 373:Generated_Source\PSoC5/RTC_INT.c ****                             {
 374:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Rise year alarm */
 375:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 518              		.loc 1 375 0
 519 01f0 2B4B     		ldr	r3, .L48+24
 520 01f2 1B78     		ldrb	r3, [r3]
 521 01f4 DBB2     		uxtb	r3, r3
 522 01f6 63F07F03 		orn	r3, r3, #127
 523 01fa DAB2     		uxtb	r2, r3
 524 01fc 284B     		ldr	r3, .L48+24
 525 01fe 1A70     		strb	r2, [r3]
 526 0200 07E0     		b	.L21
 527              	.L22:
 376:Generated_Source\PSoC5/RTC_INT.c ****                             }
 377:Generated_Source\PSoC5/RTC_INT.c ****                             else    /* Years do not match */
 378:Generated_Source\PSoC5/RTC_INT.c ****                             {
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 17


 379:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Clear year alarm */
 380:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 528              		.loc 1 380 0
 529 0202 274B     		ldr	r3, .L48+24
 530 0204 1B78     		ldrb	r3, [r3]
 531 0206 DBB2     		uxtb	r3, r3
 532 0208 03F07F03 		and	r3, r3, #127
 533 020c DAB2     		uxtb	r2, r3
 534 020e 244B     		ldr	r3, .L48+24
 535 0210 1A70     		strb	r2, [r3]
 536              	.L21:
 381:Generated_Source\PSoC5/RTC_INT.c ****                             }
 382:Generated_Source\PSoC5/RTC_INT.c ****                         } /* do not alarm year */
 383:Generated_Source\PSoC5/RTC_INT.c **** 
 384:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set Alarm flag event */
 385:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_tmp = RTC_alarmCfgMask;
 537              		.loc 1 385 0
 538 0212 214B     		ldr	r3, .L48+16
 539 0214 1B78     		ldrb	r3, [r3]
 540 0216 FB71     		strb	r3, [r7, #7]
 386:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_SET_ALARM(RTC_tmp,
 541              		.loc 1 386 0
 542 0218 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 543 021a 002B     		cmp	r3, #0
 544 021c 13D0     		beq	.L23
 545              		.loc 1 386 0 is_stmt 0 discriminator 1
 546 021e 204B     		ldr	r3, .L48+24
 547 0220 1B78     		ldrb	r3, [r3]
 548 0222 DAB2     		uxtb	r2, r3
 549 0224 FB79     		ldrb	r3, [r7, #7]
 550 0226 1340     		ands	r3, r3, r2
 551 0228 DBB2     		uxtb	r3, r3
 552 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 553 022c 9A42     		cmp	r2, r3
 554 022e 0AD1     		bne	.L23
 555              		.loc 1 386 0 discriminator 2
 556 0230 164B     		ldr	r3, .L48+4
 557 0232 1B78     		ldrb	r3, [r3]
 558 0234 DBB2     		uxtb	r3, r3
 559 0236 43F00803 		orr	r3, r3, #8
 560 023a DAB2     		uxtb	r2, r3
 561 023c 134B     		ldr	r3, .L48+4
 562 023e 1A70     		strb	r2, [r3]
 563 0240 174B     		ldr	r3, .L48+24
 564 0242 0022     		movs	r2, #0
 565 0244 1A70     		strb	r2, [r3]
 566              	.L23:
 387:Generated_Source\PSoC5/RTC_INT.c ****                                                    RTC_alarmCurStatus,
 388:Generated_Source\PSoC5/RTC_INT.c ****                                                    RTC_statusDateTime);
 389:Generated_Source\PSoC5/RTC_INT.c **** 
 390:Generated_Source\PSoC5/RTC_INT.c ****                         /* Every Year */
 391:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 567              		.loc 1 391 0 is_stmt 1
 568 0246 174B     		ldr	r3, .L48+28
 569 0248 1B78     		ldrb	r3, [r3]
 570 024a DBB2     		uxtb	r3, r3
 571 024c 03F04003 		and	r3, r3, #64
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 18


 572 0250 002B     		cmp	r3, #0
 573 0252 01D0     		beq	.L17
 392:Generated_Source\PSoC5/RTC_INT.c ****                                                              RTC_INTERVAL_YEAR_MASK))
 393:Generated_Source\PSoC5/RTC_INT.c ****                         {
 394:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_EveryYearHandler();
 574              		.loc 1 394 0
 575 0254 FFF7FEFF 		bl	RTC_EveryYearHandler
 576              	.L17:
 395:Generated_Source\PSoC5/RTC_INT.c ****                         }
 396:Generated_Source\PSoC5/RTC_INT.c **** 
 397:Generated_Source\PSoC5/RTC_INT.c ****                     } /* Month > 12 */
 398:Generated_Source\PSoC5/RTC_INT.c **** 
 399:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm MONTH */
 400:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 577              		.loc 1 400 0
 578 0258 0F4B     		ldr	r3, .L48+16
 579 025a 1B78     		ldrb	r3, [r3]
 580 025c DBB2     		uxtb	r3, r3
 581 025e 03F04003 		and	r3, r3, #64
 582 0262 002B     		cmp	r3, #0
 583 0264 28D0     		beq	.L24
 401:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_MONTH_MASK))
 402:Generated_Source\PSoC5/RTC_INT.c ****                     {
 403:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 584              		.loc 1 403 0
 585 0266 0D4B     		ldr	r3, .L48+20
 586 0268 1B7A     		ldrb	r3, [r3, #8]
 587 026a DAB2     		uxtb	r2, r3
 588 026c 064B     		ldr	r3, .L48
 589 026e 1B7A     		ldrb	r3, [r3, #8]
 590 0270 DBB2     		uxtb	r3, r3
 591 0272 9A42     		cmp	r2, r3
 592 0274 18D1     		bne	.L25
 404:Generated_Source\PSoC5/RTC_INT.c ****                         {
 405:Generated_Source\PSoC5/RTC_INT.c ****                             /* Set month alarm */
 406:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 593              		.loc 1 406 0
 594 0276 0A4B     		ldr	r3, .L48+24
 595 0278 1B78     		ldrb	r3, [r3]
 596 027a DBB2     		uxtb	r3, r3
 597 027c 43F04003 		orr	r3, r3, #64
 598 0280 DAB2     		uxtb	r2, r3
 599 0282 074B     		ldr	r3, .L48+24
 600 0284 1A70     		strb	r2, [r3]
 601 0286 17E0     		b	.L24
 602              	.L49:
 603              		.align	2
 604              	.L48:
 605 0288 00000000 		.word	RTC_currentTimeDate
 606 028c 00000000 		.word	RTC_statusDateTime
 607 0290 00000000 		.word	RTC_daysInMonths
 608 0294 1F85EB51 		.word	1374389535
 609 0298 00000000 		.word	RTC_alarmCfgMask
 610 029c 00000000 		.word	RTC_alarmCfgTimeDate
 611 02a0 00000000 		.word	RTC_alarmCurStatus
 612 02a4 00000000 		.word	RTC_intervalCfgMask
 613              	.L25:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 19


 407:Generated_Source\PSoC5/RTC_INT.c ****                         }
 408:Generated_Source\PSoC5/RTC_INT.c ****                         else
 409:Generated_Source\PSoC5/RTC_INT.c ****                         {
 410:Generated_Source\PSoC5/RTC_INT.c ****                             /* Clear month alarm */
 411:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 614              		.loc 1 411 0
 615 02a8 964B     		ldr	r3, .L50
 616 02aa 1B78     		ldrb	r3, [r3]
 617 02ac DBB2     		uxtb	r3, r3
 618 02ae 23F04003 		bic	r3, r3, #64
 619 02b2 DAB2     		uxtb	r2, r3
 620 02b4 934B     		ldr	r3, .L50
 621 02b6 1A70     		strb	r2, [r3]
 622              	.L24:
 412:Generated_Source\PSoC5/RTC_INT.c ****                         }
 413:Generated_Source\PSoC5/RTC_INT.c ****                     }   /* Month alarm is masked */
 414:Generated_Source\PSoC5/RTC_INT.c **** 
 415:Generated_Source\PSoC5/RTC_INT.c ****                     #if (1u == RTC_DST_FUNC_ENABLE)
 416:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
 417:Generated_Source\PSoC5/RTC_INT.c ****                         {
 418:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus |= RTC_DST_MONTH;
 419:Generated_Source\PSoC5/RTC_INT.c ****                         }
 420:Generated_Source\PSoC5/RTC_INT.c ****                         else
 421:Generated_Source\PSoC5/RTC_INT.c ****                         {
 422:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
 423:Generated_Source\PSoC5/RTC_INT.c ****                         }
 424:Generated_Source\PSoC5/RTC_INT.c **** 
 425:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_dstTimeDateStart.Month == RTC_currentTimeDate.Month)
 426:Generated_Source\PSoC5/RTC_INT.c ****                         {
 427:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus |= RTC_DST_MONTH;
 428:Generated_Source\PSoC5/RTC_INT.c ****                         }
 429:Generated_Source\PSoC5/RTC_INT.c ****                         else
 430:Generated_Source\PSoC5/RTC_INT.c ****                         {
 431:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus &= (uint8)(~RTC_DST_MONTH);
 432:Generated_Source\PSoC5/RTC_INT.c ****                         }
 433:Generated_Source\PSoC5/RTC_INT.c ****                     #endif /* 1u == RTC_DST_FUNC_ENABLE */
 434:Generated_Source\PSoC5/RTC_INT.c **** 
 435:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set Alarm flag event */
 436:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_tmp = RTC_alarmCfgMask;
 623              		.loc 1 436 0
 624 02b8 934B     		ldr	r3, .L50+4
 625 02ba 1B78     		ldrb	r3, [r3]
 626 02bc FB71     		strb	r3, [r7, #7]
 437:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_SET_ALARM(RTC_tmp,
 627              		.loc 1 437 0
 628 02be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 629 02c0 002B     		cmp	r3, #0
 630 02c2 13D0     		beq	.L26
 631              		.loc 1 437 0 is_stmt 0 discriminator 1
 632 02c4 8F4B     		ldr	r3, .L50
 633 02c6 1B78     		ldrb	r3, [r3]
 634 02c8 DAB2     		uxtb	r2, r3
 635 02ca FB79     		ldrb	r3, [r7, #7]
 636 02cc 1340     		ands	r3, r3, r2
 637 02ce DBB2     		uxtb	r3, r3
 638 02d0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 639 02d2 9A42     		cmp	r2, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 20


 640 02d4 0AD1     		bne	.L26
 641              		.loc 1 437 0 discriminator 2
 642 02d6 8D4B     		ldr	r3, .L50+8
 643 02d8 1B78     		ldrb	r3, [r3]
 644 02da DBB2     		uxtb	r3, r3
 645 02dc 43F00803 		orr	r3, r3, #8
 646 02e0 DAB2     		uxtb	r2, r3
 647 02e2 8A4B     		ldr	r3, .L50+8
 648 02e4 1A70     		strb	r2, [r3]
 649 02e6 874B     		ldr	r3, .L50
 650 02e8 0022     		movs	r2, #0
 651 02ea 1A70     		strb	r2, [r3]
 652              	.L26:
 438:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_alarmCurStatus,
 439:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_statusDateTime);
 440:Generated_Source\PSoC5/RTC_INT.c **** 
 441:Generated_Source\PSoC5/RTC_INT.c ****                     /* Every Month */
 442:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 653              		.loc 1 442 0 is_stmt 1
 654 02ec 884B     		ldr	r3, .L50+12
 655 02ee 1B78     		ldrb	r3, [r3]
 656 02f0 DBB2     		uxtb	r3, r3
 657 02f2 03F02003 		and	r3, r3, #32
 658 02f6 002B     		cmp	r3, #0
 659 02f8 01D0     		beq	.L16
 443:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_INTERVAL_MONTH_MASK))
 444:Generated_Source\PSoC5/RTC_INT.c ****                     {
 445:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_EveryMonthHandler();
 660              		.loc 1 445 0
 661 02fa FFF7FEFF 		bl	RTC_EveryMonthHandler
 662              	.L16:
 446:Generated_Source\PSoC5/RTC_INT.c ****                     }
 447:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day roll over */
 448:Generated_Source\PSoC5/RTC_INT.c **** 
 449:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFWEEK */
 450:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 663              		.loc 1 450 0
 664 02fe 824B     		ldr	r3, .L50+4
 665 0300 1B78     		ldrb	r3, [r3]
 666 0302 DBB2     		uxtb	r3, r3
 667 0304 03F00803 		and	r3, r3, #8
 668 0308 002B     		cmp	r3, #0
 669 030a 18D0     		beq	.L27
 451:Generated_Source\PSoC5/RTC_INT.c ****                                                      RTC_ALARM_DAYOFWEEK_MASK))
 452:Generated_Source\PSoC5/RTC_INT.c ****                 {
 453:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 670              		.loc 1 453 0
 671 030c 814B     		ldr	r3, .L50+16
 672 030e DB78     		ldrb	r3, [r3, #3]
 673 0310 DAB2     		uxtb	r2, r3
 674 0312 814B     		ldr	r3, .L50+20
 675 0314 DB78     		ldrb	r3, [r3, #3]
 676 0316 DBB2     		uxtb	r3, r3
 677 0318 9A42     		cmp	r2, r3
 678 031a 08D1     		bne	.L28
 454:Generated_Source\PSoC5/RTC_INT.c ****                     {
 455:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of week alarm */
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 21


 456:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 679              		.loc 1 456 0
 680 031c 794B     		ldr	r3, .L50
 681 031e 1B78     		ldrb	r3, [r3]
 682 0320 DBB2     		uxtb	r3, r3
 683 0322 43F00803 		orr	r3, r3, #8
 684 0326 DAB2     		uxtb	r2, r3
 685 0328 764B     		ldr	r3, .L50
 686 032a 1A70     		strb	r2, [r3]
 687 032c 07E0     		b	.L27
 688              	.L28:
 457:Generated_Source\PSoC5/RTC_INT.c ****                     }
 458:Generated_Source\PSoC5/RTC_INT.c ****                     else
 459:Generated_Source\PSoC5/RTC_INT.c ****                     {
 460:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of week alarm */
 461:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 689              		.loc 1 461 0
 690 032e 754B     		ldr	r3, .L50
 691 0330 1B78     		ldrb	r3, [r3]
 692 0332 DBB2     		uxtb	r3, r3
 693 0334 23F00803 		bic	r3, r3, #8
 694 0338 DAB2     		uxtb	r2, r3
 695 033a 724B     		ldr	r3, .L50
 696 033c 1A70     		strb	r2, [r3]
 697              	.L27:
 462:Generated_Source\PSoC5/RTC_INT.c ****                     }
 463:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of week alarm is masked */
 464:Generated_Source\PSoC5/RTC_INT.c **** 
 465:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFYEAR */
 466:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 698              		.loc 1 466 0
 699 033e 724B     		ldr	r3, .L50+4
 700 0340 1B78     		ldrb	r3, [r3]
 701 0342 DBB2     		uxtb	r3, r3
 702 0344 03F02003 		and	r3, r3, #32
 703 0348 002B     		cmp	r3, #0
 704 034a 18D0     		beq	.L29
 467:Generated_Source\PSoC5/RTC_INT.c ****                                                      RTC_ALARM_DAYOFYEAR_MASK))
 468:Generated_Source\PSoC5/RTC_INT.c ****                 {
 469:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 705              		.loc 1 469 0
 706 034c 714B     		ldr	r3, .L50+16
 707 034e DB88     		ldrh	r3, [r3, #6]	@ movhi
 708 0350 9AB2     		uxth	r2, r3
 709 0352 714B     		ldr	r3, .L50+20
 710 0354 DB88     		ldrh	r3, [r3, #6]	@ movhi
 711 0356 9BB2     		uxth	r3, r3
 712 0358 9A42     		cmp	r2, r3
 713 035a 08D1     		bne	.L30
 470:Generated_Source\PSoC5/RTC_INT.c ****                     {
 471:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of year alarm */
 472:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 714              		.loc 1 472 0
 715 035c 694B     		ldr	r3, .L50
 716 035e 1B78     		ldrb	r3, [r3]
 717 0360 DBB2     		uxtb	r3, r3
 718 0362 43F02003 		orr	r3, r3, #32
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 22


 719 0366 DAB2     		uxtb	r2, r3
 720 0368 664B     		ldr	r3, .L50
 721 036a 1A70     		strb	r2, [r3]
 722 036c 07E0     		b	.L29
 723              	.L30:
 473:Generated_Source\PSoC5/RTC_INT.c ****                     }
 474:Generated_Source\PSoC5/RTC_INT.c ****                     else
 475:Generated_Source\PSoC5/RTC_INT.c ****                     {
 476:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of year alarm */
 477:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 724              		.loc 1 477 0
 725 036e 654B     		ldr	r3, .L50
 726 0370 1B78     		ldrb	r3, [r3]
 727 0372 DBB2     		uxtb	r3, r3
 728 0374 23F02003 		bic	r3, r3, #32
 729 0378 DAB2     		uxtb	r2, r3
 730 037a 624B     		ldr	r3, .L50
 731 037c 1A70     		strb	r2, [r3]
 732              	.L29:
 478:Generated_Source\PSoC5/RTC_INT.c ****                     }
 479:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of year alarm is masked */
 480:Generated_Source\PSoC5/RTC_INT.c **** 
 481:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFMONTH */
 482:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 733              		.loc 1 482 0
 734 037e 624B     		ldr	r3, .L50+4
 735 0380 1B78     		ldrb	r3, [r3]
 736 0382 DBB2     		uxtb	r3, r3
 737 0384 03F01003 		and	r3, r3, #16
 738 0388 002B     		cmp	r3, #0
 739 038a 18D0     		beq	.L31
 483:Generated_Source\PSoC5/RTC_INT.c ****                          RTC_ALARM_DAYOFMONTH_MASK))
 484:Generated_Source\PSoC5/RTC_INT.c ****                 {
 485:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 740              		.loc 1 485 0
 741 038c 614B     		ldr	r3, .L50+16
 742 038e 1B79     		ldrb	r3, [r3, #4]
 743 0390 DAB2     		uxtb	r2, r3
 744 0392 614B     		ldr	r3, .L50+20
 745 0394 1B79     		ldrb	r3, [r3, #4]
 746 0396 DBB2     		uxtb	r3, r3
 747 0398 9A42     		cmp	r2, r3
 748 039a 08D1     		bne	.L32
 486:Generated_Source\PSoC5/RTC_INT.c ****                     {
 487:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of month alarm */
 488:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 749              		.loc 1 488 0
 750 039c 594B     		ldr	r3, .L50
 751 039e 1B78     		ldrb	r3, [r3]
 752 03a0 DBB2     		uxtb	r3, r3
 753 03a2 43F01003 		orr	r3, r3, #16
 754 03a6 DAB2     		uxtb	r2, r3
 755 03a8 564B     		ldr	r3, .L50
 756 03aa 1A70     		strb	r2, [r3]
 757 03ac 07E0     		b	.L31
 758              	.L32:
 489:Generated_Source\PSoC5/RTC_INT.c ****                     }
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 23


 490:Generated_Source\PSoC5/RTC_INT.c ****                     else
 491:Generated_Source\PSoC5/RTC_INT.c ****                     {
 492:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of month alarm */
 493:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 759              		.loc 1 493 0
 760 03ae 554B     		ldr	r3, .L50
 761 03b0 1B78     		ldrb	r3, [r3]
 762 03b2 DBB2     		uxtb	r3, r3
 763 03b4 23F01003 		bic	r3, r3, #16
 764 03b8 DAB2     		uxtb	r2, r3
 765 03ba 524B     		ldr	r3, .L50
 766 03bc 1A70     		strb	r2, [r3]
 767              	.L31:
 494:Generated_Source\PSoC5/RTC_INT.c ****                     }
 495:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of month alarm is masked */
 496:Generated_Source\PSoC5/RTC_INT.c **** 
 497:Generated_Source\PSoC5/RTC_INT.c ****                 #if (1u == RTC_DST_FUNC_ENABLE)
 498:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_dstTimeDateStop.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 499:Generated_Source\PSoC5/RTC_INT.c ****                     {
 500:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
 501:Generated_Source\PSoC5/RTC_INT.c ****                     }
 502:Generated_Source\PSoC5/RTC_INT.c ****                     else
 503:Generated_Source\PSoC5/RTC_INT.c ****                     {
 504:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 505:Generated_Source\PSoC5/RTC_INT.c ****                     }
 506:Generated_Source\PSoC5/RTC_INT.c **** 
 507:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_dstTimeDateStart.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 508:Generated_Source\PSoC5/RTC_INT.c ****                     {
 509:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStartStatus |= RTC_DST_DAYOFMONTH;
 510:Generated_Source\PSoC5/RTC_INT.c ****                     }
 511:Generated_Source\PSoC5/RTC_INT.c ****                     else
 512:Generated_Source\PSoC5/RTC_INT.c ****                     {
 513:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStartStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 514:Generated_Source\PSoC5/RTC_INT.c ****                     }
 515:Generated_Source\PSoC5/RTC_INT.c ****                 #endif /* 1u == RTC_DST_FUNC_ENABLE */
 516:Generated_Source\PSoC5/RTC_INT.c **** 
 517:Generated_Source\PSoC5/RTC_INT.c ****                 /* Set Alarm flag event */
 518:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_tmp = RTC_alarmCfgMask;
 768              		.loc 1 518 0
 769 03be 524B     		ldr	r3, .L50+4
 770 03c0 1B78     		ldrb	r3, [r3]
 771 03c2 FB71     		strb	r3, [r7, #7]
 519:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_SET_ALARM(RTC_tmp,
 772              		.loc 1 519 0
 773 03c4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 774 03c6 002B     		cmp	r3, #0
 775 03c8 13D0     		beq	.L33
 776              		.loc 1 519 0 is_stmt 0 discriminator 1
 777 03ca 4E4B     		ldr	r3, .L50
 778 03cc 1B78     		ldrb	r3, [r3]
 779 03ce DAB2     		uxtb	r2, r3
 780 03d0 FB79     		ldrb	r3, [r7, #7]
 781 03d2 1340     		ands	r3, r3, r2
 782 03d4 DBB2     		uxtb	r3, r3
 783 03d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 784 03d8 9A42     		cmp	r2, r3
 785 03da 0AD1     		bne	.L33
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 24


 786              		.loc 1 519 0 discriminator 2
 787 03dc 4B4B     		ldr	r3, .L50+8
 788 03de 1B78     		ldrb	r3, [r3]
 789 03e0 DBB2     		uxtb	r3, r3
 790 03e2 43F00803 		orr	r3, r3, #8
 791 03e6 DAB2     		uxtb	r2, r3
 792 03e8 484B     		ldr	r3, .L50+8
 793 03ea 1A70     		strb	r2, [r3]
 794 03ec 454B     		ldr	r3, .L50
 795 03ee 0022     		movs	r2, #0
 796 03f0 1A70     		strb	r2, [r3]
 797              	.L33:
 520:Generated_Source\PSoC5/RTC_INT.c ****                                            RTC_alarmCurStatus,
 521:Generated_Source\PSoC5/RTC_INT.c ****                                            RTC_statusDateTime);
 522:Generated_Source\PSoC5/RTC_INT.c **** 
 523:Generated_Source\PSoC5/RTC_INT.c ****                 /* Every Day */
 524:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 798              		.loc 1 524 0 is_stmt 1
 799 03f2 474B     		ldr	r3, .L50+12
 800 03f4 1B78     		ldrb	r3, [r3]
 801 03f6 DBB2     		uxtb	r3, r3
 802 03f8 03F00803 		and	r3, r3, #8
 803 03fc 002B     		cmp	r3, #0
 804 03fe 01D0     		beq	.L34
 525:Generated_Source\PSoC5/RTC_INT.c ****                          RTC_INTERVAL_DAY_MASK))
 526:Generated_Source\PSoC5/RTC_INT.c ****                 {
 527:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_EveryDayHandler();
 805              		.loc 1 527 0
 806 0400 FFF7FEFF 		bl	RTC_EveryDayHandler
 807              	.L34:
 528:Generated_Source\PSoC5/RTC_INT.c ****                 }
 529:Generated_Source\PSoC5/RTC_INT.c **** 
 530:Generated_Source\PSoC5/RTC_INT.c ****                 if(1u == RTC_currentTimeDate.DayOfWeek)
 808              		.loc 1 530 0
 809 0404 444B     		ldr	r3, .L50+20
 810 0406 DB78     		ldrb	r3, [r3, #3]
 811 0408 DBB2     		uxtb	r3, r3
 812 040a 012B     		cmp	r3, #1
 813 040c 08D1     		bne	.L11
 531:Generated_Source\PSoC5/RTC_INT.c ****                 {
 532:Generated_Source\PSoC5/RTC_INT.c ****                     /* Every Week */
 533:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 814              		.loc 1 533 0
 815 040e 404B     		ldr	r3, .L50+12
 816 0410 1B78     		ldrb	r3, [r3]
 817 0412 DBB2     		uxtb	r3, r3
 818 0414 03F01003 		and	r3, r3, #16
 819 0418 002B     		cmp	r3, #0
 820 041a 01D0     		beq	.L11
 534:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_INTERVAL_WEEK_MASK))
 535:Generated_Source\PSoC5/RTC_INT.c ****                     {
 536:Generated_Source\PSoC5/RTC_INT.c ****                        RTC_EveryWeekHandler();
 821              		.loc 1 536 0
 822 041c FFF7FEFF 		bl	RTC_EveryWeekHandler
 823              	.L11:
 537:Generated_Source\PSoC5/RTC_INT.c ****                     }
 538:Generated_Source\PSoC5/RTC_INT.c ****                 }
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 25


 539:Generated_Source\PSoC5/RTC_INT.c **** 
 540:Generated_Source\PSoC5/RTC_INT.c ****             } /* End of day roll over */
 541:Generated_Source\PSoC5/RTC_INT.c **** 
 542:Generated_Source\PSoC5/RTC_INT.c ****             /* Status set PM/AM flag */
 543:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 824              		.loc 1 543 0
 825 0420 3D4B     		ldr	r3, .L50+20
 826 0422 9B78     		ldrb	r3, [r3, #2]
 827 0424 DBB2     		uxtb	r3, r3
 828 0426 0B2B     		cmp	r3, #11
 829 0428 08D8     		bhi	.L35
 544:Generated_Source\PSoC5/RTC_INT.c ****             {
 545:Generated_Source\PSoC5/RTC_INT.c ****                 /* AM Hour 00:00-11:59, flag zero */
 546:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 830              		.loc 1 546 0
 831 042a 384B     		ldr	r3, .L50+8
 832 042c 1B78     		ldrb	r3, [r3]
 833 042e DBB2     		uxtb	r3, r3
 834 0430 23F00403 		bic	r3, r3, #4
 835 0434 DAB2     		uxtb	r2, r3
 836 0436 354B     		ldr	r3, .L50+8
 837 0438 1A70     		strb	r2, [r3]
 838 043a 07E0     		b	.L36
 839              	.L35:
 547:Generated_Source\PSoC5/RTC_INT.c ****             }
 548:Generated_Source\PSoC5/RTC_INT.c ****             else
 549:Generated_Source\PSoC5/RTC_INT.c ****             {
 550:Generated_Source\PSoC5/RTC_INT.c ****                 /* PM Hour 12:00-23:59, flag set */
 551:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_statusDateTime |= RTC_STATUS_AM_PM;
 840              		.loc 1 551 0
 841 043c 334B     		ldr	r3, .L50+8
 842 043e 1B78     		ldrb	r3, [r3]
 843 0440 DBB2     		uxtb	r3, r3
 844 0442 43F00403 		orr	r3, r3, #4
 845 0446 DAB2     		uxtb	r2, r3
 846 0448 304B     		ldr	r3, .L50+8
 847 044a 1A70     		strb	r2, [r3]
 848              	.L36:
 552:Generated_Source\PSoC5/RTC_INT.c ****             }
 553:Generated_Source\PSoC5/RTC_INT.c **** 
 554:Generated_Source\PSoC5/RTC_INT.c ****             #if (1u == RTC_DST_FUNC_ENABLE)
 555:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_dstTimeDateStop.Hour == RTC_currentTimeDate.Hour)
 556:Generated_Source\PSoC5/RTC_INT.c ****                 {
 557:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStopStatus |= RTC_DST_HOUR;
 558:Generated_Source\PSoC5/RTC_INT.c ****                 }
 559:Generated_Source\PSoC5/RTC_INT.c ****                 else
 560:Generated_Source\PSoC5/RTC_INT.c ****                 {
 561:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStopStatus &= (uint8)(~RTC_DST_HOUR);
 562:Generated_Source\PSoC5/RTC_INT.c ****                 }
 563:Generated_Source\PSoC5/RTC_INT.c **** 
 564:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_dstTimeDateStart.Hour == RTC_currentTimeDate.Hour)
 565:Generated_Source\PSoC5/RTC_INT.c ****                 {
 566:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStartStatus |= RTC_DST_HOUR;
 567:Generated_Source\PSoC5/RTC_INT.c ****                 }
 568:Generated_Source\PSoC5/RTC_INT.c ****                 else
 569:Generated_Source\PSoC5/RTC_INT.c ****                 {
 570:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_dstStartStatus &= (uint8)(~RTC_DST_HOUR);
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 26


 571:Generated_Source\PSoC5/RTC_INT.c ****                 }
 572:Generated_Source\PSoC5/RTC_INT.c **** 
 573:Generated_Source\PSoC5/RTC_INT.c ****                 /* DST Enable ? */
 574:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_dstModeType, RTC_DST_ENABLE))
 575:Generated_Source\PSoC5/RTC_INT.c ****                 {
 576:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_statusDateTime, RTC_STATUS_DST))
 577:Generated_Source\PSoC5/RTC_INT.c ****                     {
 578:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_dstStopStatus, RTC_DST_HOUR |
 579:Generated_Source\PSoC5/RTC_INT.c ****                                                        RTC_DST_DAYOFMONTH | RTC_DST_MONTH))
 580:Generated_Source\PSoC5/RTC_INT.c ****                         {
 581:Generated_Source\PSoC5/RTC_INT.c ****                             /* Substruct from current value of minutes, number of minutes
 582:Generated_Source\PSoC5/RTC_INT.c ****                             * in DST offset which is out of complete hour
 583:Generated_Source\PSoC5/RTC_INT.c ****                             */
 584:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Min -=
 585:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 586:Generated_Source\PSoC5/RTC_INT.c **** 
 587:Generated_Source\PSoC5/RTC_INT.c ****                             /* Is minute value negative? */
 588:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 589:Generated_Source\PSoC5/RTC_INT.c ****                             {
 590:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Convert to the positive.
 591:Generated_Source\PSoC5/RTC_INT.c ****                                 * HOUR_ELAPSED -     (~currentTimeDate.Min    ) ==
 592:Generated_Source\PSoC5/RTC_INT.c ****                                 * HOUR_ELAPSED + 1 - (~currentTimeDate.Min + 1)
 593:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 594:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Min = RTC_HOUR_ELAPSED -
 595:Generated_Source\PSoC5/RTC_INT.c ****                                                              ((uint8)(~RTC_currentTimeDate.Min));
 596:Generated_Source\PSoC5/RTC_INT.c **** 
 597:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour--;
 598:Generated_Source\PSoC5/RTC_INT.c ****                             }
 599:Generated_Source\PSoC5/RTC_INT.c **** 
 600:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Hour -= RTC_dstOffsetMin /
 601:Generated_Source\PSoC5/RTC_INT.c ****                                                                      (RTC_HOUR_ELAPSED + 1u);
 602:Generated_Source\PSoC5/RTC_INT.c **** 
 603:Generated_Source\PSoC5/RTC_INT.c ****                             /* Day roll over
 604:Generated_Source\PSoC5/RTC_INT.c ****                             * Is hour value negative? */
 605:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 606:Generated_Source\PSoC5/RTC_INT.c ****                             {
 607:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Convert to the positive.
 608:Generated_Source\PSoC5/RTC_INT.c ****                                 * DAY_ELAPSED - (~currentTimeDate.Hour) ==
 609:Generated_Source\PSoC5/RTC_INT.c ****                                 * DAY_ELAPSED + 1 - (~currentTimeDate.Hour + 1)
 610:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 611:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour = RTC_DAY_ELAPSED -
 612:Generated_Source\PSoC5/RTC_INT.c ****                                                               ((uint8)(~RTC_currentTimeDate.Hour));
 613:Generated_Source\PSoC5/RTC_INT.c **** 
 614:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Status set PM/AM flag */
 615:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 616:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 617:Generated_Source\PSoC5/RTC_INT.c ****                                     /* AM Hour 00:00-11:59, flag zero */
 618:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 619:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 620:Generated_Source\PSoC5/RTC_INT.c ****                                 else
 621:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 622:Generated_Source\PSoC5/RTC_INT.c ****                                     /* PM Hour 12:00-23:59, flag set */
 623:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime |= RTC_STATUS_AM_PM;
 624:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 625:Generated_Source\PSoC5/RTC_INT.c **** 
 626:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfMonth--;
 627:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfYear--;
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 27


 628:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfWeek--;
 629:Generated_Source\PSoC5/RTC_INT.c **** 
 630:Generated_Source\PSoC5/RTC_INT.c ****                                 if(0u == RTC_currentTimeDate.DayOfWeek)
 631:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 632:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfWeek = RTC_DAYS_IN_WEEK;
 633:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 634:Generated_Source\PSoC5/RTC_INT.c **** 
 635:Generated_Source\PSoC5/RTC_INT.c ****                                 if(0u == RTC_currentTimeDate.DayOfMonth)
 636:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 637:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.Month--;
 638:Generated_Source\PSoC5/RTC_INT.c ****                                     if(0u == RTC_currentTimeDate.Month)
 639:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 640:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Month = RTC_DECEMBER;
 641:Generated_Source\PSoC5/RTC_INT.c **** 
 642:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.DayOfMonth =
 643:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 644:Generated_Source\PSoC5/RTC_INT.c **** 
 645:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Year--;
 646:Generated_Source\PSoC5/RTC_INT.c **** 
 647:Generated_Source\PSoC5/RTC_INT.c ****                                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 648:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 649:Generated_Source\PSoC5/RTC_INT.c ****                                             /* LP - true, else - false */
 650:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime |= RTC_STATUS_LY;
 651:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfYear =
 652:Generated_Source\PSoC5/RTC_INT.c ****                                                                                     RTC_DAYS_IN_LEA
 653:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 654:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 655:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 656:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 657:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfYear = RTC_DAYS_IN_YEAR;
 658:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 659:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_EveryYearHandler();
 660:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 661:Generated_Source\PSoC5/RTC_INT.c ****                                     else
 662:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 663:Generated_Source\PSoC5/RTC_INT.c ****                                         /* Day of month roll over.
 664:Generated_Source\PSoC5/RTC_INT.c ****                                         * Check if day of month February 29 of leap year
 665:Generated_Source\PSoC5/RTC_INT.c ****                                         */
 666:Generated_Source\PSoC5/RTC_INT.c ****                                         if((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 667:Generated_Source\PSoC5/RTC_INT.c ****                                             (RTC_currentTimeDate.Month == RTC_FEBRUARY))
 668:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 669:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfMonth =
 670:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u]
 671:Generated_Source\PSoC5/RTC_INT.c ****                                             + 1u;
 672:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 673:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 674:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 675:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfMonth =
 676:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 677:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 678:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 679:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_EveryMonthHandler();
 680:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 681:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_EveryDayHandler();
 682:Generated_Source\PSoC5/RTC_INT.c ****                             }
 683:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_DST);
 684:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus = 0u;
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 28


 685:Generated_Source\PSoC5/RTC_INT.c ****                         }
 686:Generated_Source\PSoC5/RTC_INT.c ****                     }
 687:Generated_Source\PSoC5/RTC_INT.c ****                     else
 688:Generated_Source\PSoC5/RTC_INT.c ****                     {
 689:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_dstStartStatus,
 690:Generated_Source\PSoC5/RTC_INT.c ****                                                       (RTC_DST_HOUR | RTC_DST_DAYOFMONTH |
 691:Generated_Source\PSoC5/RTC_INT.c ****                                                        RTC_DST_MONTH)))
 692:Generated_Source\PSoC5/RTC_INT.c ****                         {
 693:Generated_Source\PSoC5/RTC_INT.c ****                             /* Add Hour and Min */
 694:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Min +=
 695:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 696:Generated_Source\PSoC5/RTC_INT.c **** 
 697:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 698:Generated_Source\PSoC5/RTC_INT.c ****                             {
 699:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Adjust Min */
 700:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Min -= (RTC_HOUR_ELAPSED + 1u);
 701:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour++;
 702:Generated_Source\PSoC5/RTC_INT.c ****                             }
 703:Generated_Source\PSoC5/RTC_INT.c **** 
 704:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Hour += RTC_dstOffsetMin /
 705:Generated_Source\PSoC5/RTC_INT.c ****                                                                      (RTC_HOUR_ELAPSED + 1u);
 706:Generated_Source\PSoC5/RTC_INT.c **** 
 707:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 708:Generated_Source\PSoC5/RTC_INT.c ****                             {
 709:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Adjust hour, add day */
 710:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour -= (RTC_DAY_ELAPSED + 1u);
 711:Generated_Source\PSoC5/RTC_INT.c **** 
 712:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Status set PM/AM flag */
 713:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 714:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 715:Generated_Source\PSoC5/RTC_INT.c ****                                     /* AM Hour 00:00-11:59, flag zero */
 716:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 717:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 718:Generated_Source\PSoC5/RTC_INT.c ****                                 else
 719:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 720:Generated_Source\PSoC5/RTC_INT.c ****                                     /* PM Hour 12:00-23:59, flag set */
 721:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime |= RTC_STATUS_AM_PM;
 722:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 723:Generated_Source\PSoC5/RTC_INT.c **** 
 724:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfMonth++;
 725:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfYear++;
 726:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfWeek++;
 727:Generated_Source\PSoC5/RTC_INT.c **** 
 728:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
 729:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 730:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfWeek = 1u;
 731:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 732:Generated_Source\PSoC5/RTC_INT.c **** 
 733:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Day of month roll over.
 734:Generated_Source\PSoC5/RTC_INT.c ****                                 * Check if day of month greater than 29 in February of leap year or
 735:Generated_Source\PSoC5/RTC_INT.c ****                                 * if day of month greater than 28 NOT in February of NON leap year 
 736:Generated_Source\PSoC5/RTC_INT.c ****                                 * if day of month greater than it should be in every month in non l
 737:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 738:Generated_Source\PSoC5/RTC_INT.c ****                                 if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 739:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 740:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 741:Generated_Source\PSoC5/RTC_INT.c ****                                   (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 29


 742:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 743:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month != RTC_FEBRUARY)  &&
 744:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 745:Generated_Source\PSoC5/RTC_INT.c ****                                      RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 746:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY)) &&
 747:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 748:Generated_Source\PSoC5/RTC_INT.c ****                                      RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
 749:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 750:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.Month++;
 751:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfMonth = 1u;
 752:Generated_Source\PSoC5/RTC_INT.c ****                                     if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 753:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 754:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Month = RTC_JANUARY;
 755:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Year++;
 756:Generated_Source\PSoC5/RTC_INT.c **** 
 757:Generated_Source\PSoC5/RTC_INT.c ****                                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 758:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 759:Generated_Source\PSoC5/RTC_INT.c ****                                             /* LP - true, else - false */
 760:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime |= RTC_STATUS_LY;
 761:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 762:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 763:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 764:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 765:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 766:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.DayOfYear = 1u;
 767:Generated_Source\PSoC5/RTC_INT.c **** 
 768:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_EveryYearHandler();
 769:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 770:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_EveryMonthHandler();
 771:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 772:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_EveryDayHandler();
 773:Generated_Source\PSoC5/RTC_INT.c ****                             }
 774:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime |= RTC_STATUS_DST;
 775:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus = 0u;
 776:Generated_Source\PSoC5/RTC_INT.c **** 
 777:Generated_Source\PSoC5/RTC_INT.c ****                             /* Month */
 778:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
 779:Generated_Source\PSoC5/RTC_INT.c ****                             {
 780:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus |= RTC_DST_MONTH;
 781:Generated_Source\PSoC5/RTC_INT.c ****                             }
 782:Generated_Source\PSoC5/RTC_INT.c ****                             else
 783:Generated_Source\PSoC5/RTC_INT.c ****                             {
 784:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
 785:Generated_Source\PSoC5/RTC_INT.c ****                             }
 786:Generated_Source\PSoC5/RTC_INT.c **** 
 787:Generated_Source\PSoC5/RTC_INT.c ****                             /* DayOfMonth */
 788:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_dstTimeDateStop.DayOfMonth ==
 789:Generated_Source\PSoC5/RTC_INT.c ****                                                                             RTC_currentTimeDate.Day
 790:Generated_Source\PSoC5/RTC_INT.c ****                             {
 791:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
 792:Generated_Source\PSoC5/RTC_INT.c ****                             }
 793:Generated_Source\PSoC5/RTC_INT.c ****                             else
 794:Generated_Source\PSoC5/RTC_INT.c ****                             {
 795:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 796:Generated_Source\PSoC5/RTC_INT.c ****                             }
 797:Generated_Source\PSoC5/RTC_INT.c ****                         }
 798:Generated_Source\PSoC5/RTC_INT.c ****                     }
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 30


 799:Generated_Source\PSoC5/RTC_INT.c **** 
 800:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFWEEK */
 801:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 802:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFWEEK_MASK))
 803:Generated_Source\PSoC5/RTC_INT.c ****                     {
 804:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 805:Generated_Source\PSoC5/RTC_INT.c ****                         {
 806:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 807:Generated_Source\PSoC5/RTC_INT.c ****                         }
 808:Generated_Source\PSoC5/RTC_INT.c ****                         else
 809:Generated_Source\PSoC5/RTC_INT.c ****                         {
 810:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 811:Generated_Source\PSoC5/RTC_INT.c ****                         }
 812:Generated_Source\PSoC5/RTC_INT.c ****                     }
 813:Generated_Source\PSoC5/RTC_INT.c **** 
 814:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFYEAR */
 815:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 816:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFYEAR_MASK))
 817:Generated_Source\PSoC5/RTC_INT.c ****                     {
 818:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 819:Generated_Source\PSoC5/RTC_INT.c ****                         {
 820:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 821:Generated_Source\PSoC5/RTC_INT.c ****                         }
 822:Generated_Source\PSoC5/RTC_INT.c ****                         else
 823:Generated_Source\PSoC5/RTC_INT.c ****                         {
 824:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 825:Generated_Source\PSoC5/RTC_INT.c ****                         }
 826:Generated_Source\PSoC5/RTC_INT.c ****                     }
 827:Generated_Source\PSoC5/RTC_INT.c **** 
 828:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFMONTH */
 829:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 830:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFMONTH_MASK))
 831:Generated_Source\PSoC5/RTC_INT.c ****                     {
 832:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 833:Generated_Source\PSoC5/RTC_INT.c ****                         {
 834:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 835:Generated_Source\PSoC5/RTC_INT.c ****                         }
 836:Generated_Source\PSoC5/RTC_INT.c ****                         else
 837:Generated_Source\PSoC5/RTC_INT.c ****                         {
 838:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 839:Generated_Source\PSoC5/RTC_INT.c ****                         }
 840:Generated_Source\PSoC5/RTC_INT.c ****                     }
 841:Generated_Source\PSoC5/RTC_INT.c **** 
 842:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm MONTH */
 843:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 844:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_MONTH_MASK))
 845:Generated_Source\PSoC5/RTC_INT.c ****                     {
 846:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 847:Generated_Source\PSoC5/RTC_INT.c ****                         {
 848:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 849:Generated_Source\PSoC5/RTC_INT.c ****                         }
 850:Generated_Source\PSoC5/RTC_INT.c ****                         else
 851:Generated_Source\PSoC5/RTC_INT.c ****                         {
 852:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 853:Generated_Source\PSoC5/RTC_INT.c ****                         }
 854:Generated_Source\PSoC5/RTC_INT.c ****                     }
 855:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 31


 856:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm YEAR */
 857:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 858:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_YEAR_MASK))
 859:Generated_Source\PSoC5/RTC_INT.c ****                     {
 860:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 861:Generated_Source\PSoC5/RTC_INT.c ****                         {
 862:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 863:Generated_Source\PSoC5/RTC_INT.c ****                         }
 864:Generated_Source\PSoC5/RTC_INT.c ****                         else
 865:Generated_Source\PSoC5/RTC_INT.c ****                         {
 866:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 867:Generated_Source\PSoC5/RTC_INT.c ****                         }
 868:Generated_Source\PSoC5/RTC_INT.c ****                     }
 869:Generated_Source\PSoC5/RTC_INT.c **** 
 870:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set Alarm flag event */
 871:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_tmp = RTC_alarmCfgMask;
 872:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_SET_ALARM(RTC_tmp,
 873:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_alarmCurStatus,
 874:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_statusDateTime);
 875:Generated_Source\PSoC5/RTC_INT.c ****                 }
 876:Generated_Source\PSoC5/RTC_INT.c ****             #endif /* 1u == RTC_DST_FUNC_ENABLE */
 877:Generated_Source\PSoC5/RTC_INT.c **** 
 878:Generated_Source\PSoC5/RTC_INT.c ****             /* Alarm HOUR */
 879:Generated_Source\PSoC5/RTC_INT.c ****             if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_HOUR_MASK))
 849              		.loc 1 879 0
 850 044c 2E4B     		ldr	r3, .L50+4
 851 044e 1B78     		ldrb	r3, [r3]
 852 0450 DBB2     		uxtb	r3, r3
 853 0452 03F00403 		and	r3, r3, #4
 854 0456 002B     		cmp	r3, #0
 855 0458 18D0     		beq	.L37
 880:Generated_Source\PSoC5/RTC_INT.c ****             {
 881:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_alarmCfgTimeDate.Hour == RTC_currentTimeDate.Hour)
 856              		.loc 1 881 0
 857 045a 2E4B     		ldr	r3, .L50+16
 858 045c 9B78     		ldrb	r3, [r3, #2]
 859 045e DAB2     		uxtb	r2, r3
 860 0460 2D4B     		ldr	r3, .L50+20
 861 0462 9B78     		ldrb	r3, [r3, #2]
 862 0464 DBB2     		uxtb	r3, r3
 863 0466 9A42     		cmp	r2, r3
 864 0468 08D1     		bne	.L38
 882:Generated_Source\PSoC5/RTC_INT.c ****                 {
 883:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_alarmCurStatus |= RTC_ALARM_HOUR_MASK;
 865              		.loc 1 883 0
 866 046a 264B     		ldr	r3, .L50
 867 046c 1B78     		ldrb	r3, [r3]
 868 046e DBB2     		uxtb	r3, r3
 869 0470 43F00403 		orr	r3, r3, #4
 870 0474 DAB2     		uxtb	r2, r3
 871 0476 234B     		ldr	r3, .L50
 872 0478 1A70     		strb	r2, [r3]
 873 047a 07E0     		b	.L37
 874              	.L38:
 884:Generated_Source\PSoC5/RTC_INT.c ****                 }
 885:Generated_Source\PSoC5/RTC_INT.c ****                 else
 886:Generated_Source\PSoC5/RTC_INT.c ****                 {
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 32


 887:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_HOUR_MASK);
 875              		.loc 1 887 0
 876 047c 214B     		ldr	r3, .L50
 877 047e 1B78     		ldrb	r3, [r3]
 878 0480 DBB2     		uxtb	r3, r3
 879 0482 23F00403 		bic	r3, r3, #4
 880 0486 DAB2     		uxtb	r2, r3
 881 0488 1E4B     		ldr	r3, .L50
 882 048a 1A70     		strb	r2, [r3]
 883              	.L37:
 888:Generated_Source\PSoC5/RTC_INT.c ****                 }
 889:Generated_Source\PSoC5/RTC_INT.c ****             }
 890:Generated_Source\PSoC5/RTC_INT.c **** 
 891:Generated_Source\PSoC5/RTC_INT.c ****             /* Set Alarm flag event */
 892:Generated_Source\PSoC5/RTC_INT.c ****             RTC_tmp = RTC_alarmCfgMask;
 884              		.loc 1 892 0
 885 048c 1E4B     		ldr	r3, .L50+4
 886 048e 1B78     		ldrb	r3, [r3]
 887 0490 FB71     		strb	r3, [r7, #7]
 893:Generated_Source\PSoC5/RTC_INT.c ****             RTC_SET_ALARM(RTC_tmp,
 888              		.loc 1 893 0
 889 0492 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 890 0494 002B     		cmp	r3, #0
 891 0496 13D0     		beq	.L39
 892              		.loc 1 893 0 is_stmt 0 discriminator 1
 893 0498 1A4B     		ldr	r3, .L50
 894 049a 1B78     		ldrb	r3, [r3]
 895 049c DAB2     		uxtb	r2, r3
 896 049e FB79     		ldrb	r3, [r7, #7]
 897 04a0 1340     		ands	r3, r3, r2
 898 04a2 DBB2     		uxtb	r3, r3
 899 04a4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 900 04a6 9A42     		cmp	r2, r3
 901 04a8 0AD1     		bne	.L39
 902              		.loc 1 893 0 discriminator 2
 903 04aa 184B     		ldr	r3, .L50+8
 904 04ac 1B78     		ldrb	r3, [r3]
 905 04ae DBB2     		uxtb	r3, r3
 906 04b0 43F00803 		orr	r3, r3, #8
 907 04b4 DAB2     		uxtb	r2, r3
 908 04b6 154B     		ldr	r3, .L50+8
 909 04b8 1A70     		strb	r2, [r3]
 910 04ba 124B     		ldr	r3, .L50
 911 04bc 0022     		movs	r2, #0
 912 04be 1A70     		strb	r2, [r3]
 913              	.L39:
 894:Generated_Source\PSoC5/RTC_INT.c ****                                        RTC_alarmCurStatus,
 895:Generated_Source\PSoC5/RTC_INT.c ****                                        RTC_statusDateTime);
 896:Generated_Source\PSoC5/RTC_INT.c **** 
 897:Generated_Source\PSoC5/RTC_INT.c ****             /* Every Hour */
 898:Generated_Source\PSoC5/RTC_INT.c ****             if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_HOUR_MASK))
 914              		.loc 1 898 0 is_stmt 1
 915 04c0 134B     		ldr	r3, .L50+12
 916 04c2 1B78     		ldrb	r3, [r3]
 917 04c4 DBB2     		uxtb	r3, r3
 918 04c6 03F00403 		and	r3, r3, #4
 919 04ca 002B     		cmp	r3, #0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 33


 920 04cc 01D0     		beq	.L10
 899:Generated_Source\PSoC5/RTC_INT.c ****             {
 900:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_EveryHourHandler();
 921              		.loc 1 900 0
 922 04ce FFF7FEFF 		bl	RTC_EveryHourHandler
 923              	.L10:
 901:Generated_Source\PSoC5/RTC_INT.c ****             }
 902:Generated_Source\PSoC5/RTC_INT.c ****         } /* Min > 59 = Hour */
 903:Generated_Source\PSoC5/RTC_INT.c **** 
 904:Generated_Source\PSoC5/RTC_INT.c ****         /* Alarm MIN */
 905:Generated_Source\PSoC5/RTC_INT.c ****         if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_MIN_MASK))
 924              		.loc 1 905 0
 925 04d2 0D4B     		ldr	r3, .L50+4
 926 04d4 1B78     		ldrb	r3, [r3]
 927 04d6 DBB2     		uxtb	r3, r3
 928 04d8 03F00203 		and	r3, r3, #2
 929 04dc 002B     		cmp	r3, #0
 930 04de 25D0     		beq	.L40
 906:Generated_Source\PSoC5/RTC_INT.c ****         {
 907:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_alarmCfgTimeDate.Min == RTC_currentTimeDate.Min)
 931              		.loc 1 907 0
 932 04e0 0C4B     		ldr	r3, .L50+16
 933 04e2 5B78     		ldrb	r3, [r3, #1]
 934 04e4 DAB2     		uxtb	r2, r3
 935 04e6 0C4B     		ldr	r3, .L50+20
 936 04e8 5B78     		ldrb	r3, [r3, #1]
 937 04ea DBB2     		uxtb	r3, r3
 938 04ec 9A42     		cmp	r2, r3
 939 04ee 15D1     		bne	.L41
 908:Generated_Source\PSoC5/RTC_INT.c ****             {
 909:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_alarmCurStatus |= RTC_ALARM_MIN_MASK;
 940              		.loc 1 909 0
 941 04f0 044B     		ldr	r3, .L50
 942 04f2 1B78     		ldrb	r3, [r3]
 943 04f4 DBB2     		uxtb	r3, r3
 944 04f6 43F00203 		orr	r3, r3, #2
 945 04fa DAB2     		uxtb	r2, r3
 946 04fc 014B     		ldr	r3, .L50
 947 04fe 1A70     		strb	r2, [r3]
 948 0500 14E0     		b	.L40
 949              	.L51:
 950 0502 00BF     		.align	2
 951              	.L50:
 952 0504 00000000 		.word	RTC_alarmCurStatus
 953 0508 00000000 		.word	RTC_alarmCfgMask
 954 050c 00000000 		.word	RTC_statusDateTime
 955 0510 00000000 		.word	RTC_intervalCfgMask
 956 0514 00000000 		.word	RTC_alarmCfgTimeDate
 957 0518 00000000 		.word	RTC_currentTimeDate
 958              	.L41:
 910:Generated_Source\PSoC5/RTC_INT.c ****             }
 911:Generated_Source\PSoC5/RTC_INT.c ****             else
 912:Generated_Source\PSoC5/RTC_INT.c ****             {
 913:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MIN_MASK);
 959              		.loc 1 913 0
 960 051c 384B     		ldr	r3, .L52
 961 051e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 34


 962 0520 DBB2     		uxtb	r3, r3
 963 0522 23F00203 		bic	r3, r3, #2
 964 0526 DAB2     		uxtb	r2, r3
 965 0528 354B     		ldr	r3, .L52
 966 052a 1A70     		strb	r2, [r3]
 967              	.L40:
 914:Generated_Source\PSoC5/RTC_INT.c ****             }
 915:Generated_Source\PSoC5/RTC_INT.c ****         }
 916:Generated_Source\PSoC5/RTC_INT.c **** 
 917:Generated_Source\PSoC5/RTC_INT.c ****         /* Set Alarm flag event */
 918:Generated_Source\PSoC5/RTC_INT.c ****         RTC_tmp = RTC_alarmCfgMask;
 968              		.loc 1 918 0
 969 052c 354B     		ldr	r3, .L52+4
 970 052e 1B78     		ldrb	r3, [r3]
 971 0530 FB71     		strb	r3, [r7, #7]
 919:Generated_Source\PSoC5/RTC_INT.c ****         RTC_SET_ALARM(RTC_tmp,
 972              		.loc 1 919 0
 973 0532 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 974 0534 002B     		cmp	r3, #0
 975 0536 13D0     		beq	.L42
 976              		.loc 1 919 0 is_stmt 0 discriminator 1
 977 0538 314B     		ldr	r3, .L52
 978 053a 1B78     		ldrb	r3, [r3]
 979 053c DAB2     		uxtb	r2, r3
 980 053e FB79     		ldrb	r3, [r7, #7]
 981 0540 1340     		ands	r3, r3, r2
 982 0542 DBB2     		uxtb	r3, r3
 983 0544 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 984 0546 9A42     		cmp	r2, r3
 985 0548 0AD1     		bne	.L42
 986              		.loc 1 919 0 discriminator 2
 987 054a 2F4B     		ldr	r3, .L52+8
 988 054c 1B78     		ldrb	r3, [r3]
 989 054e DBB2     		uxtb	r3, r3
 990 0550 43F00803 		orr	r3, r3, #8
 991 0554 DAB2     		uxtb	r2, r3
 992 0556 2C4B     		ldr	r3, .L52+8
 993 0558 1A70     		strb	r2, [r3]
 994 055a 294B     		ldr	r3, .L52
 995 055c 0022     		movs	r2, #0
 996 055e 1A70     		strb	r2, [r3]
 997              	.L42:
 920:Generated_Source\PSoC5/RTC_INT.c ****                                    RTC_alarmCurStatus,
 921:Generated_Source\PSoC5/RTC_INT.c ****                                    RTC_statusDateTime);
 922:Generated_Source\PSoC5/RTC_INT.c **** 
 923:Generated_Source\PSoC5/RTC_INT.c ****         /* Every Min */
 924:Generated_Source\PSoC5/RTC_INT.c ****         if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_MIN_MASK))
 998              		.loc 1 924 0 is_stmt 1
 999 0560 2A4B     		ldr	r3, .L52+12
 1000 0562 1B78     		ldrb	r3, [r3]
 1001 0564 DBB2     		uxtb	r3, r3
 1002 0566 03F00203 		and	r3, r3, #2
 1003 056a 002B     		cmp	r3, #0
 1004 056c 01D0     		beq	.L9
 925:Generated_Source\PSoC5/RTC_INT.c ****         {
 926:Generated_Source\PSoC5/RTC_INT.c ****             RTC_EveryMinuteHandler();
 1005              		.loc 1 926 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 35


 1006 056e FFF7FEFF 		bl	RTC_EveryMinuteHandler
 1007              	.L9:
 927:Generated_Source\PSoC5/RTC_INT.c ****         }
 928:Generated_Source\PSoC5/RTC_INT.c ****     } /* Sec */
 929:Generated_Source\PSoC5/RTC_INT.c **** 
 930:Generated_Source\PSoC5/RTC_INT.c ****     /* Alarm SEC */
 931:Generated_Source\PSoC5/RTC_INT.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_SEC_MASK))
 1008              		.loc 1 931 0
 1009 0572 244B     		ldr	r3, .L52+4
 1010 0574 1B78     		ldrb	r3, [r3]
 1011 0576 DBB2     		uxtb	r3, r3
 1012 0578 03F00103 		and	r3, r3, #1
 1013 057c 002B     		cmp	r3, #0
 1014 057e 18D0     		beq	.L43
 932:Generated_Source\PSoC5/RTC_INT.c ****     {
 933:Generated_Source\PSoC5/RTC_INT.c ****         if(RTC_alarmCfgTimeDate.Sec == RTC_currentTimeDate.Sec)
 1015              		.loc 1 933 0
 1016 0580 234B     		ldr	r3, .L52+16
 1017 0582 1B78     		ldrb	r3, [r3]
 1018 0584 DAB2     		uxtb	r2, r3
 1019 0586 234B     		ldr	r3, .L52+20
 1020 0588 1B78     		ldrb	r3, [r3]
 1021 058a DBB2     		uxtb	r3, r3
 1022 058c 9A42     		cmp	r2, r3
 1023 058e 08D1     		bne	.L44
 934:Generated_Source\PSoC5/RTC_INT.c ****         {
 935:Generated_Source\PSoC5/RTC_INT.c ****             RTC_alarmCurStatus |= RTC_ALARM_SEC_MASK;
 1024              		.loc 1 935 0
 1025 0590 1B4B     		ldr	r3, .L52
 1026 0592 1B78     		ldrb	r3, [r3]
 1027 0594 DBB2     		uxtb	r3, r3
 1028 0596 43F00103 		orr	r3, r3, #1
 1029 059a DAB2     		uxtb	r2, r3
 1030 059c 184B     		ldr	r3, .L52
 1031 059e 1A70     		strb	r2, [r3]
 1032 05a0 07E0     		b	.L43
 1033              	.L44:
 936:Generated_Source\PSoC5/RTC_INT.c ****         }
 937:Generated_Source\PSoC5/RTC_INT.c ****         else
 938:Generated_Source\PSoC5/RTC_INT.c ****         {
 939:Generated_Source\PSoC5/RTC_INT.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_SEC_MASK);
 1034              		.loc 1 939 0
 1035 05a2 174B     		ldr	r3, .L52
 1036 05a4 1B78     		ldrb	r3, [r3]
 1037 05a6 DBB2     		uxtb	r3, r3
 1038 05a8 23F00103 		bic	r3, r3, #1
 1039 05ac DAB2     		uxtb	r2, r3
 1040 05ae 144B     		ldr	r3, .L52
 1041 05b0 1A70     		strb	r2, [r3]
 1042              	.L43:
 940:Generated_Source\PSoC5/RTC_INT.c ****         }
 941:Generated_Source\PSoC5/RTC_INT.c ****     }
 942:Generated_Source\PSoC5/RTC_INT.c **** 
 943:Generated_Source\PSoC5/RTC_INT.c ****     /* Set Alarm flag event */
 944:Generated_Source\PSoC5/RTC_INT.c ****     RTC_tmp = RTC_alarmCfgMask;
 1043              		.loc 1 944 0
 1044 05b2 144B     		ldr	r3, .L52+4
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 36


 1045 05b4 1B78     		ldrb	r3, [r3]
 1046 05b6 FB71     		strb	r3, [r7, #7]
 945:Generated_Source\PSoC5/RTC_INT.c ****     RTC_SET_ALARM(RTC_tmp, RTC_alarmCurStatus, RTC_statusDateTime);
 1047              		.loc 1 945 0
 1048 05b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1049 05ba 002B     		cmp	r3, #0
 1050 05bc 13D0     		beq	.L45
 1051              		.loc 1 945 0 is_stmt 0 discriminator 1
 1052 05be 104B     		ldr	r3, .L52
 1053 05c0 1B78     		ldrb	r3, [r3]
 1054 05c2 DAB2     		uxtb	r2, r3
 1055 05c4 FB79     		ldrb	r3, [r7, #7]
 1056 05c6 1340     		ands	r3, r3, r2
 1057 05c8 DBB2     		uxtb	r3, r3
 1058 05ca FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1059 05cc 9A42     		cmp	r2, r3
 1060 05ce 0AD1     		bne	.L45
 1061              		.loc 1 945 0 discriminator 2
 1062 05d0 0D4B     		ldr	r3, .L52+8
 1063 05d2 1B78     		ldrb	r3, [r3]
 1064 05d4 DBB2     		uxtb	r3, r3
 1065 05d6 43F00803 		orr	r3, r3, #8
 1066 05da DAB2     		uxtb	r2, r3
 1067 05dc 0A4B     		ldr	r3, .L52+8
 1068 05de 1A70     		strb	r2, [r3]
 1069 05e0 074B     		ldr	r3, .L52
 1070 05e2 0022     		movs	r2, #0
 1071 05e4 1A70     		strb	r2, [r3]
 1072              	.L45:
 946:Generated_Source\PSoC5/RTC_INT.c **** 
 947:Generated_Source\PSoC5/RTC_INT.c ****     /* Execute every second handler if needed */
 948:Generated_Source\PSoC5/RTC_INT.c ****     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_SEC_MASK))
 1073              		.loc 1 948 0 is_stmt 1
 1074 05e6 094B     		ldr	r3, .L52+12
 1075 05e8 1B78     		ldrb	r3, [r3]
 1076 05ea DBB2     		uxtb	r3, r3
 1077 05ec 03F00103 		and	r3, r3, #1
 1078 05f0 002B     		cmp	r3, #0
 1079 05f2 01D0     		beq	.L47
 949:Generated_Source\PSoC5/RTC_INT.c ****     {
 950:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EverySecondHandler();
 1080              		.loc 1 950 0
 1081 05f4 FFF7FEFF 		bl	RTC_EverySecondHandler
 1082              	.L47:
 951:Generated_Source\PSoC5/RTC_INT.c ****     }
 952:Generated_Source\PSoC5/RTC_INT.c ****     
 953:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_ISR_EXIT_CALLBACK
 954:Generated_Source\PSoC5/RTC_INT.c ****         RTC_ISR_ExitCallback();
 955:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_ISR_EXIT_CALLBACK */
 956:Generated_Source\PSoC5/RTC_INT.c **** }
 1083              		.loc 1 956 0
 1084 05f8 00BF     		nop
 1085 05fa 0837     		adds	r7, r7, #8
 1086              		.cfi_def_cfa_offset 8
 1087 05fc BD46     		mov	sp, r7
 1088              		.cfi_def_cfa_register 13
 1089              		@ sp needed
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 37


 1090 05fe 80BD     		pop	{r7, pc}
 1091              	.L53:
 1092              		.align	2
 1093              	.L52:
 1094 0600 00000000 		.word	RTC_alarmCurStatus
 1095 0604 00000000 		.word	RTC_alarmCfgMask
 1096 0608 00000000 		.word	RTC_statusDateTime
 1097 060c 00000000 		.word	RTC_intervalCfgMask
 1098 0610 00000000 		.word	RTC_alarmCfgTimeDate
 1099 0614 00000000 		.word	RTC_currentTimeDate
 1100              		.cfi_endproc
 1101              	.LFE71:
 1102              		.size	RTC_ISR, .-RTC_ISR
 1103              		.text
 1104              	.Letext0:
 1105              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 1106              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 1107              		.file 4 "Generated_Source\\PSoC5\\cytypes.h"
 1108              		.file 5 "Generated_Source\\PSoC5\\RTC.h"
 1109              		.file 6 "./modem.h"
 1110              		.file 7 "./data.h"
 1111              		.file 8 "./notoriOS.h"
 1112              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 1113              		.section	.debug_info,"",%progbits
 1114              	.Ldebug_info0:
 1115 0000 E0040000 		.4byte	0x4e0
 1116 0004 0400     		.2byte	0x4
 1117 0006 00000000 		.4byte	.Ldebug_abbrev0
 1118 000a 04       		.byte	0x4
 1119 000b 01       		.uleb128 0x1
 1120 000c 5C000000 		.4byte	.LASF74
 1121 0010 0C       		.byte	0xc
 1122 0011 43040000 		.4byte	.LASF75
 1123 0015 CD020000 		.4byte	.LASF76
 1124 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1125 001d 00000000 		.4byte	0
 1126 0021 00000000 		.4byte	.Ldebug_line0
 1127 0025 02       		.uleb128 0x2
 1128 0026 01       		.byte	0x1
 1129 0027 06       		.byte	0x6
 1130 0028 50020000 		.4byte	.LASF0
 1131 002c 02       		.uleb128 0x2
 1132 002d 01       		.byte	0x1
 1133 002e 08       		.byte	0x8
 1134 002f 0A020000 		.4byte	.LASF1
 1135 0033 02       		.uleb128 0x2
 1136 0034 02       		.byte	0x2
 1137 0035 05       		.byte	0x5
 1138 0036 41000000 		.4byte	.LASF2
 1139 003a 02       		.uleb128 0x2
 1140 003b 02       		.byte	0x2
 1141 003c 07       		.byte	0x7
 1142 003d 28030000 		.4byte	.LASF3
 1143 0041 03       		.uleb128 0x3
 1144 0042 39040000 		.4byte	.LASF9
 1145 0046 02       		.byte	0x2
 1146 0047 3F       		.byte	0x3f
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 38


 1147 0048 4C000000 		.4byte	0x4c
 1148 004c 02       		.uleb128 0x2
 1149 004d 04       		.byte	0x4
 1150 004e 05       		.byte	0x5
 1151 004f AB010000 		.4byte	.LASF4
 1152 0053 02       		.uleb128 0x2
 1153 0054 04       		.byte	0x4
 1154 0055 07       		.byte	0x7
 1155 0056 E4030000 		.4byte	.LASF5
 1156 005a 02       		.uleb128 0x2
 1157 005b 08       		.byte	0x8
 1158 005c 05       		.byte	0x5
 1159 005d 8B010000 		.4byte	.LASF6
 1160 0061 02       		.uleb128 0x2
 1161 0062 08       		.byte	0x8
 1162 0063 07       		.byte	0x7
 1163 0064 71020000 		.4byte	.LASF7
 1164 0068 04       		.uleb128 0x4
 1165 0069 04       		.byte	0x4
 1166 006a 05       		.byte	0x5
 1167 006b 696E7400 		.ascii	"int\000"
 1168 006f 02       		.uleb128 0x2
 1169 0070 04       		.byte	0x4
 1170 0071 07       		.byte	0x7
 1171 0072 AC020000 		.4byte	.LASF8
 1172 0076 03       		.uleb128 0x3
 1173 0077 77030000 		.4byte	.LASF10
 1174 007b 03       		.byte	0x3
 1175 007c 2C       		.byte	0x2c
 1176 007d 41000000 		.4byte	0x41
 1177 0081 05       		.uleb128 0x5
 1178 0082 3E010000 		.4byte	.LASF11
 1179 0086 04       		.byte	0x4
 1180 0087 9201     		.2byte	0x192
 1181 0089 2C000000 		.4byte	0x2c
 1182 008d 05       		.uleb128 0x5
 1183 008e 1D010000 		.4byte	.LASF12
 1184 0092 04       		.byte	0x4
 1185 0093 9301     		.2byte	0x193
 1186 0095 3A000000 		.4byte	0x3a
 1187 0099 05       		.uleb128 0x5
 1188 009a F6030000 		.4byte	.LASF13
 1189 009e 04       		.byte	0x4
 1190 009f 9701     		.2byte	0x197
 1191 00a1 4C000000 		.4byte	0x4c
 1192 00a5 02       		.uleb128 0x2
 1193 00a6 04       		.byte	0x4
 1194 00a7 04       		.byte	0x4
 1195 00a8 7B010000 		.4byte	.LASF14
 1196 00ac 02       		.uleb128 0x2
 1197 00ad 08       		.byte	0x8
 1198 00ae 04       		.byte	0x4
 1199 00af FC030000 		.4byte	.LASF15
 1200 00b3 02       		.uleb128 0x2
 1201 00b4 01       		.byte	0x1
 1202 00b5 08       		.byte	0x8
 1203 00b6 99010000 		.4byte	.LASF16
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 39


 1204 00ba 06       		.uleb128 0x6
 1205 00bb 81000000 		.4byte	0x81
 1206 00bf 07       		.uleb128 0x7
 1207 00c0 0C       		.byte	0xc
 1208 00c1 05       		.byte	0x5
 1209 00c2 30       		.byte	0x30
 1210 00c3 28010000 		.4byte	0x128
 1211 00c7 08       		.uleb128 0x8
 1212 00c8 53656300 		.ascii	"Sec\000"
 1213 00cc 05       		.byte	0x5
 1214 00cd 32       		.byte	0x32
 1215 00ce 81000000 		.4byte	0x81
 1216 00d2 00       		.byte	0
 1217 00d3 08       		.uleb128 0x8
 1218 00d4 4D696E00 		.ascii	"Min\000"
 1219 00d8 05       		.byte	0x5
 1220 00d9 33       		.byte	0x33
 1221 00da 81000000 		.4byte	0x81
 1222 00de 01       		.byte	0x1
 1223 00df 09       		.uleb128 0x9
 1224 00e0 04010000 		.4byte	.LASF17
 1225 00e4 05       		.byte	0x5
 1226 00e5 34       		.byte	0x34
 1227 00e6 81000000 		.4byte	0x81
 1228 00ea 02       		.byte	0x2
 1229 00eb 09       		.uleb128 0x9
 1230 00ec 81010000 		.4byte	.LASF18
 1231 00f0 05       		.byte	0x5
 1232 00f1 35       		.byte	0x35
 1233 00f2 81000000 		.4byte	0x81
 1234 00f6 03       		.byte	0x3
 1235 00f7 09       		.uleb128 0x9
 1236 00f8 AA030000 		.4byte	.LASF19
 1237 00fc 05       		.byte	0x5
 1238 00fd 36       		.byte	0x36
 1239 00fe 81000000 		.4byte	0x81
 1240 0102 04       		.byte	0x4
 1241 0103 09       		.uleb128 0x9
 1242 0104 C0040000 		.4byte	.LASF20
 1243 0108 05       		.byte	0x5
 1244 0109 37       		.byte	0x37
 1245 010a 8D000000 		.4byte	0x8d
 1246 010e 06       		.byte	0x6
 1247 010f 09       		.uleb128 0x9
 1248 0110 F8010000 		.4byte	.LASF21
 1249 0114 05       		.byte	0x5
 1250 0115 38       		.byte	0x38
 1251 0116 81000000 		.4byte	0x81
 1252 011a 08       		.byte	0x8
 1253 011b 09       		.uleb128 0x9
 1254 011c D5010000 		.4byte	.LASF22
 1255 0120 05       		.byte	0x5
 1256 0121 39       		.byte	0x39
 1257 0122 8D000000 		.4byte	0x8d
 1258 0126 0A       		.byte	0xa
 1259 0127 00       		.byte	0
 1260 0128 03       		.uleb128 0x3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 40


 1261 0129 8C040000 		.4byte	.LASF23
 1262 012d 05       		.byte	0x5
 1263 012e 3A       		.byte	0x3a
 1264 012f 33010000 		.4byte	0x133
 1265 0133 06       		.uleb128 0x6
 1266 0134 BF000000 		.4byte	0xbf
 1267 0138 02       		.uleb128 0x2
 1268 0139 08       		.byte	0x8
 1269 013a 04       		.byte	0x4
 1270 013b FE010000 		.4byte	.LASF24
 1271 013f 02       		.uleb128 0x2
 1272 0140 04       		.byte	0x4
 1273 0141 07       		.byte	0x7
 1274 0142 4B000000 		.4byte	.LASF25
 1275 0146 0A       		.uleb128 0xa
 1276 0147 B3000000 		.4byte	0xb3
 1277 014b 56010000 		.4byte	0x156
 1278 014f 0B       		.uleb128 0xb
 1279 0150 3F010000 		.4byte	0x13f
 1280 0154 17       		.byte	0x17
 1281 0155 00       		.byte	0
 1282 0156 07       		.uleb128 0x7
 1283 0157 3C       		.byte	0x3c
 1284 0158 06       		.byte	0x6
 1285 0159 2C       		.byte	0x2c
 1286 015a 83010000 		.4byte	0x183
 1287 015e 09       		.uleb128 0x9
 1288 015f 1A000000 		.4byte	.LASF26
 1289 0163 06       		.byte	0x6
 1290 0164 2D       		.byte	0x2d
 1291 0165 83010000 		.4byte	0x183
 1292 0169 00       		.byte	0
 1293 016a 09       		.uleb128 0x9
 1294 016b 00000000 		.4byte	.LASF27
 1295 016f 06       		.byte	0x6
 1296 0170 2E       		.byte	0x2e
 1297 0171 83010000 		.4byte	0x183
 1298 0175 14       		.byte	0x14
 1299 0176 09       		.uleb128 0x9
 1300 0177 72030000 		.4byte	.LASF28
 1301 017b 06       		.byte	0x6
 1302 017c 2F       		.byte	0x2f
 1303 017d 83010000 		.4byte	0x183
 1304 0181 28       		.byte	0x28
 1305 0182 00       		.byte	0
 1306 0183 0A       		.uleb128 0xa
 1307 0184 B3000000 		.4byte	0xb3
 1308 0188 93010000 		.4byte	0x193
 1309 018c 0B       		.uleb128 0xb
 1310 018d 3F010000 		.4byte	0x13f
 1311 0191 13       		.byte	0x13
 1312 0192 00       		.byte	0
 1313 0193 03       		.uleb128 0x3
 1314 0194 9E010000 		.4byte	.LASF29
 1315 0198 06       		.byte	0x6
 1316 0199 30       		.byte	0x30
 1317 019a 56010000 		.4byte	0x156
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 41


 1318 019e 07       		.uleb128 0x7
 1319 019f 0C       		.byte	0xc
 1320 01a0 06       		.byte	0x6
 1321 01a1 32       		.byte	0x32
 1322 01a2 D7010000 		.4byte	0x1d7
 1323 01a6 09       		.uleb128 0x9
 1324 01a7 BB040000 		.4byte	.LASF30
 1325 01ab 06       		.byte	0x6
 1326 01ac 33       		.byte	0x33
 1327 01ad 81000000 		.4byte	0x81
 1328 01b1 00       		.byte	0
 1329 01b2 09       		.uleb128 0x9
 1330 01b3 B5030000 		.4byte	.LASF31
 1331 01b7 06       		.byte	0x6
 1332 01b8 34       		.byte	0x34
 1333 01b9 81000000 		.4byte	0x81
 1334 01bd 01       		.byte	0x1
 1335 01be 09       		.uleb128 0x9
 1336 01bf 3B030000 		.4byte	.LASF32
 1337 01c3 06       		.byte	0x6
 1338 01c4 35       		.byte	0x35
 1339 01c5 68000000 		.4byte	0x68
 1340 01c9 04       		.byte	0x4
 1341 01ca 09       		.uleb128 0x9
 1342 01cb 5F030000 		.4byte	.LASF33
 1343 01cf 06       		.byte	0x6
 1344 01d0 36       		.byte	0x36
 1345 01d1 68000000 		.4byte	0x68
 1346 01d5 08       		.byte	0x8
 1347 01d6 00       		.byte	0
 1348 01d7 03       		.uleb128 0x3
 1349 01d8 87030000 		.4byte	.LASF34
 1350 01dc 06       		.byte	0x6
 1351 01dd 37       		.byte	0x37
 1352 01de 9E010000 		.4byte	0x19e
 1353 01e2 07       		.uleb128 0x7
 1354 01e3 2C       		.byte	0x2c
 1355 01e4 07       		.byte	0x7
 1356 01e5 10       		.byte	0x10
 1357 01e6 0F020000 		.4byte	0x20f
 1358 01ea 08       		.uleb128 0x8
 1359 01eb 6B657900 		.ascii	"key\000"
 1360 01ef 07       		.byte	0x7
 1361 01f0 11       		.byte	0x11
 1362 01f1 83010000 		.4byte	0x183
 1363 01f5 00       		.byte	0
 1364 01f6 09       		.uleb128 0x9
 1365 01f7 17010000 		.4byte	.LASF35
 1366 01fb 07       		.byte	0x7
 1367 01fc 12       		.byte	0x12
 1368 01fd 83010000 		.4byte	0x183
 1369 0201 14       		.byte	0x14
 1370 0202 09       		.uleb128 0x9
 1371 0203 58010000 		.4byte	.LASF36
 1372 0207 07       		.byte	0x7
 1373 0208 13       		.byte	0x13
 1374 0209 99000000 		.4byte	0x99
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 42


 1375 020d 28       		.byte	0x28
 1376 020e 00       		.byte	0
 1377 020f 03       		.uleb128 0x3
 1378 0210 B9020000 		.4byte	.LASF37
 1379 0214 07       		.byte	0x7
 1380 0215 14       		.byte	0x14
 1381 0216 E2010000 		.4byte	0x1e2
 1382 021a 07       		.uleb128 0x7
 1383 021b 1C       		.byte	0x1c
 1384 021c 08       		.byte	0x8
 1385 021d 37       		.byte	0x37
 1386 021e 3B020000 		.4byte	0x23b
 1387 0222 09       		.uleb128 0x9
 1388 0223 B4010000 		.4byte	.LASF38
 1389 0227 08       		.byte	0x8
 1390 0228 39       		.byte	0x39
 1391 0229 3B020000 		.4byte	0x23b
 1392 022d 00       		.byte	0
 1393 022e 09       		.uleb128 0x9
 1394 022f 09010000 		.4byte	.LASF39
 1395 0233 08       		.byte	0x8
 1396 0234 3A       		.byte	0x3a
 1397 0235 46010000 		.4byte	0x146
 1398 0239 04       		.byte	0x4
 1399 023a 00       		.byte	0
 1400 023b 0C       		.uleb128 0xc
 1401 023c 04       		.byte	0x4
 1402 023d 93010000 		.4byte	0x193
 1403 0241 03       		.uleb128 0x3
 1404 0242 1D030000 		.4byte	.LASF40
 1405 0246 08       		.byte	0x8
 1406 0247 3C       		.byte	0x3c
 1407 0248 1A020000 		.4byte	0x21a
 1408 024c 0D       		.uleb128 0xd
 1409 024d 4401     		.2byte	0x144
 1410 024f 08       		.byte	0x8
 1411 0250 42       		.byte	0x42
 1412 0251 9F020000 		.4byte	0x29f
 1413 0255 09       		.uleb128 0x9
 1414 0256 64040000 		.4byte	.LASF41
 1415 025a 08       		.byte	0x8
 1416 025b 45       		.byte	0x45
 1417 025c 83010000 		.4byte	0x183
 1418 0260 00       		.byte	0
 1419 0261 09       		.uleb128 0x9
 1420 0262 54000000 		.4byte	.LASF42
 1421 0266 08       		.byte	0x8
 1422 0267 47       		.byte	0x47
 1423 0268 9F020000 		.4byte	0x29f
 1424 026c 14       		.byte	0x14
 1425 026d 09       		.uleb128 0x9
 1426 026e 24010000 		.4byte	.LASF43
 1427 0272 08       		.byte	0x8
 1428 0273 48       		.byte	0x48
 1429 0274 68000000 		.4byte	0x68
 1430 0278 78       		.byte	0x78
 1431 0279 09       		.uleb128 0x9
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 43


 1432 027a 50010000 		.4byte	.LASF44
 1433 027e 08       		.byte	0x8
 1434 027f 49       		.byte	0x49
 1435 0280 AF020000 		.4byte	0x2af
 1436 0284 7C       		.byte	0x7c
 1437 0285 09       		.uleb128 0x9
 1438 0286 DC030000 		.4byte	.LASF45
 1439 028a 08       		.byte	0x8
 1440 028b 4A       		.byte	0x4a
 1441 028c 9F020000 		.4byte	0x29f
 1442 0290 AE       		.byte	0xae
 1443 0291 0E       		.uleb128 0xe
 1444 0292 44010000 		.4byte	.LASF46
 1445 0296 08       		.byte	0x8
 1446 0297 4B       		.byte	0x4b
 1447 0298 AF020000 		.4byte	0x2af
 1448 029c 1201     		.2byte	0x112
 1449 029e 00       		.byte	0
 1450 029f 0A       		.uleb128 0xa
 1451 02a0 B3000000 		.4byte	0xb3
 1452 02a4 AF020000 		.4byte	0x2af
 1453 02a8 0B       		.uleb128 0xb
 1454 02a9 3F010000 		.4byte	0x13f
 1455 02ad 63       		.byte	0x63
 1456 02ae 00       		.byte	0
 1457 02af 0A       		.uleb128 0xa
 1458 02b0 B3000000 		.4byte	0xb3
 1459 02b4 BF020000 		.4byte	0x2bf
 1460 02b8 0B       		.uleb128 0xb
 1461 02b9 3F010000 		.4byte	0x13f
 1462 02bd 31       		.byte	0x31
 1463 02be 00       		.byte	0
 1464 02bf 03       		.uleb128 0x3
 1465 02c0 32000000 		.4byte	.LASF47
 1466 02c4 08       		.byte	0x8
 1467 02c5 4E       		.byte	0x4e
 1468 02c6 4C020000 		.4byte	0x24c
 1469 02ca 0F       		.uleb128 0xf
 1470 02cb 03040000 		.4byte	.LASF48
 1471 02cf 01       		.byte	0x1
 1472 02d0 36       		.byte	0x36
 1473 02d1 00000000 		.4byte	.LFB64
 1474 02d5 0E000000 		.4byte	.LFE64-.LFB64
 1475 02d9 01       		.uleb128 0x1
 1476 02da 9C       		.byte	0x9c
 1477 02db 0F       		.uleb128 0xf
 1478 02dc C5030000 		.4byte	.LASF49
 1479 02e0 01       		.byte	0x1
 1480 02e1 51       		.byte	0x51
 1481 02e2 00000000 		.4byte	.LFB65
 1482 02e6 0E000000 		.4byte	.LFE65-.LFB65
 1483 02ea 01       		.uleb128 0x1
 1484 02eb 9C       		.byte	0x9c
 1485 02ec 0F       		.uleb128 0xf
 1486 02ed 95030000 		.4byte	.LASF50
 1487 02f1 01       		.byte	0x1
 1488 02f2 6C       		.byte	0x6c
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 44


 1489 02f3 00000000 		.4byte	.LFB66
 1490 02f7 0E000000 		.4byte	.LFE66-.LFB66
 1491 02fb 01       		.uleb128 0x1
 1492 02fc 9C       		.byte	0x9c
 1493 02fd 0F       		.uleb128 0xf
 1494 02fe DA010000 		.4byte	.LASF51
 1495 0302 01       		.byte	0x1
 1496 0303 87       		.byte	0x87
 1497 0304 00000000 		.4byte	.LFB67
 1498 0308 0E000000 		.4byte	.LFE67-.LFB67
 1499 030c 01       		.uleb128 0x1
 1500 030d 9C       		.byte	0x9c
 1501 030e 0F       		.uleb128 0xf
 1502 030f EA000000 		.4byte	.LASF52
 1503 0313 01       		.byte	0x1
 1504 0314 A2       		.byte	0xa2
 1505 0315 00000000 		.4byte	.LFB68
 1506 0319 0E000000 		.4byte	.LFE68-.LFB68
 1507 031d 01       		.uleb128 0x1
 1508 031e 9C       		.byte	0x9c
 1509 031f 0F       		.uleb128 0xf
 1510 0320 BF010000 		.4byte	.LASF53
 1511 0324 01       		.byte	0x1
 1512 0325 BD       		.byte	0xbd
 1513 0326 00000000 		.4byte	.LFB69
 1514 032a 0E000000 		.4byte	.LFE69-.LFB69
 1515 032e 01       		.uleb128 0x1
 1516 032f 9C       		.byte	0x9c
 1517 0330 0F       		.uleb128 0xf
 1518 0331 5C020000 		.4byte	.LASF54
 1519 0335 01       		.byte	0x1
 1520 0336 D8       		.byte	0xd8
 1521 0337 00000000 		.4byte	.LFB70
 1522 033b 0E000000 		.4byte	.LFE70-.LFB70
 1523 033f 01       		.uleb128 0x1
 1524 0340 9C       		.byte	0x9c
 1525 0341 10       		.uleb128 0x10
 1526 0342 C5020000 		.4byte	.LASF77
 1527 0346 01       		.byte	0x1
 1528 0347 0B01     		.2byte	0x10b
 1529 0349 00000000 		.4byte	.LFB71
 1530 034d 18060000 		.4byte	.LFE71-.LFB71
 1531 0351 01       		.uleb128 0x1
 1532 0352 9C       		.byte	0x9c
 1533 0353 67030000 		.4byte	0x367
 1534 0357 11       		.uleb128 0x11
 1535 0358 7F030000 		.4byte	.LASF78
 1536 035c 01       		.byte	0x1
 1537 035d 0D01     		.2byte	0x10d
 1538 035f 81000000 		.4byte	0x81
 1539 0363 02       		.uleb128 0x2
 1540 0364 91       		.byte	0x91
 1541 0365 77       		.sleb128 -9
 1542 0366 00       		.byte	0
 1543 0367 12       		.uleb128 0x12
 1544 0368 2F020000 		.4byte	.LASF55
 1545 036c 05       		.byte	0x5
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 45


 1546 036d 2D01     		.2byte	0x12d
 1547 036f 28010000 		.4byte	0x128
 1548 0373 12       		.uleb128 0x12
 1549 0374 98020000 		.4byte	.LASF56
 1550 0378 05       		.byte	0x5
 1551 0379 2E01     		.2byte	0x12e
 1552 037b 28010000 		.4byte	0x128
 1553 037f 12       		.uleb128 0x12
 1554 0380 09000000 		.4byte	.LASF57
 1555 0384 05       		.byte	0x5
 1556 0385 3901     		.2byte	0x139
 1557 0387 BA000000 		.4byte	0xba
 1558 038b 12       		.uleb128 0x12
 1559 038c 6C040000 		.4byte	.LASF58
 1560 0390 05       		.byte	0x5
 1561 0391 3A01     		.2byte	0x13a
 1562 0393 BA000000 		.4byte	0xba
 1563 0397 12       		.uleb128 0x12
 1564 0398 9A040000 		.4byte	.LASF59
 1565 039c 05       		.byte	0x5
 1566 039d 3B01     		.2byte	0x13b
 1567 039f BA000000 		.4byte	0xba
 1568 03a3 12       		.uleb128 0x12
 1569 03a4 26040000 		.4byte	.LASF60
 1570 03a8 05       		.byte	0x5
 1571 03a9 3C01     		.2byte	0x13c
 1572 03ab BA000000 		.4byte	0xba
 1573 03af 0A       		.uleb128 0xa
 1574 03b0 BF030000 		.4byte	0x3bf
 1575 03b4 BF030000 		.4byte	0x3bf
 1576 03b8 0B       		.uleb128 0xb
 1577 03b9 3F010000 		.4byte	0x13f
 1578 03bd 0B       		.byte	0xb
 1579 03be 00       		.byte	0
 1580 03bf 13       		.uleb128 0x13
 1581 03c0 81000000 		.4byte	0x81
 1582 03c4 12       		.uleb128 0x12
 1583 03c5 21000000 		.4byte	.LASF61
 1584 03c9 05       		.byte	0x5
 1585 03ca 3E01     		.2byte	0x13e
 1586 03cc D0030000 		.4byte	0x3d0
 1587 03d0 13       		.uleb128 0x13
 1588 03d1 AF030000 		.4byte	0x3af
 1589 03d5 12       		.uleb128 0x12
 1590 03d6 7F040000 		.4byte	.LASF62
 1591 03da 09       		.byte	0x9
 1592 03db 1207     		.2byte	0x712
 1593 03dd E1030000 		.4byte	0x3e1
 1594 03e1 06       		.uleb128 0x6
 1595 03e2 76000000 		.4byte	0x76
 1596 03e6 14       		.uleb128 0x14
 1597 03e7 44020000 		.4byte	.LASF63
 1598 03eb 06       		.byte	0x6
 1599 03ec 15       		.byte	0x15
 1600 03ed 81000000 		.4byte	0x81
 1601 03f1 05       		.uleb128 0x5
 1602 03f2 03       		.byte	0x3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 46


 1603 03f3 00000000 		.4byte	modem_state
 1604 03f7 14       		.uleb128 0x14
 1605 03f8 18020000 		.4byte	.LASF64
 1606 03fc 06       		.byte	0x6
 1607 03fd 45       		.byte	0x45
 1608 03fe 99000000 		.4byte	0x99
 1609 0402 05       		.uleb128 0x5
 1610 0403 03       		.byte	0x3
 1611 0404 00000000 		.4byte	modem_start_time_stamp
 1612 0408 14       		.uleb128 0x14
 1613 0409 B4010000 		.4byte	.LASF38
 1614 040d 06       		.byte	0x6
 1615 040e 46       		.byte	0x46
 1616 040f 93010000 		.4byte	0x193
 1617 0413 05       		.uleb128 0x5
 1618 0414 03       		.byte	0x3
 1619 0415 00000000 		.4byte	modem_info
 1620 0419 14       		.uleb128 0x14
 1621 041a 1A040000 		.4byte	.LASF65
 1622 041e 06       		.byte	0x6
 1623 041f 47       		.byte	0x47
 1624 0420 D7010000 		.4byte	0x1d7
 1625 0424 05       		.uleb128 0x5
 1626 0425 03       		.byte	0x3
 1627 0426 00000000 		.4byte	modem_stats
 1628 042a 14       		.uleb128 0x14
 1629 042b 2C010000 		.4byte	.LASF66
 1630 042f 07       		.byte	0x7
 1631 0430 1D       		.byte	0x1d
 1632 0431 8D000000 		.4byte	0x8d
 1633 0435 05       		.uleb128 0x5
 1634 0436 03       		.byte	0x3
 1635 0437 00000000 		.4byte	dataPointsInStack
 1636 043b 14       		.uleb128 0x14
 1637 043c 62010000 		.4byte	.LASF67
 1638 0440 07       		.byte	0x7
 1639 0441 1E       		.byte	0x1e
 1640 0442 8D000000 		.4byte	0x8d
 1641 0446 05       		.uleb128 0x5
 1642 0447 03       		.byte	0x3
 1643 0448 00000000 		.4byte	dataPointsInStackDesired
 1644 044c 0A       		.uleb128 0xa
 1645 044d 0F020000 		.4byte	0x20f
 1646 0451 5C040000 		.4byte	0x45c
 1647 0455 0B       		.uleb128 0xb
 1648 0456 3F010000 		.4byte	0x13f
 1649 045a 95       		.byte	0x95
 1650 045b 00       		.byte	0
 1651 045c 14       		.uleb128 0x14
 1652 045d FF000000 		.4byte	.LASF68
 1653 0461 07       		.byte	0x7
 1654 0462 1F       		.byte	0x1f
 1655 0463 4C040000 		.4byte	0x44c
 1656 0467 05       		.uleb128 0x5
 1657 0468 03       		.byte	0x3
 1658 0469 00000000 		.4byte	data
 1659 046d 0A       		.uleb128 0xa
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 47


 1660 046e B3000000 		.4byte	0xb3
 1661 0472 7E040000 		.4byte	0x47e
 1662 0476 15       		.uleb128 0x15
 1663 0477 3F010000 		.4byte	0x13f
 1664 047b 0F27     		.2byte	0x270f
 1665 047d 00       		.byte	0
 1666 047e 14       		.uleb128 0x14
 1667 047f AE040000 		.4byte	.LASF69
 1668 0483 08       		.byte	0x8
 1669 0484 16       		.byte	0x16
 1670 0485 6D040000 		.4byte	0x46d
 1671 0489 05       		.uleb128 0x5
 1672 048a 03       		.byte	0x3
 1673 048b 00000000 		.4byte	http_request
 1674 048f 14       		.uleb128 0x14
 1675 0490 EE010000 		.4byte	.LASF70
 1676 0494 08       		.byte	0x8
 1677 0495 17       		.byte	0x17
 1678 0496 6D040000 		.4byte	0x46d
 1679 049a 05       		.uleb128 0x5
 1680 049b 03       		.byte	0x3
 1681 049c 00000000 		.4byte	http_body
 1682 04a0 0A       		.uleb128 0xa
 1683 04a1 B3000000 		.4byte	0xb3
 1684 04a5 B0040000 		.4byte	0x4b0
 1685 04a9 0B       		.uleb128 0xb
 1686 04aa 3F010000 		.4byte	0x13f
 1687 04ae C7       		.byte	0xc7
 1688 04af 00       		.byte	0
 1689 04b0 14       		.uleb128 0x14
 1690 04b1 BA030000 		.4byte	.LASF71
 1691 04b5 08       		.byte	0x8
 1692 04b6 18       		.byte	0x18
 1693 04b7 A0040000 		.4byte	0x4a0
 1694 04bb 05       		.uleb128 0x5
 1695 04bc 03       		.byte	0x3
 1696 04bd 00000000 		.4byte	http_route
 1697 04c1 14       		.uleb128 0x14
 1698 04c2 53030000 		.4byte	.LASF72
 1699 04c6 08       		.byte	0x8
 1700 04c7 3F       		.byte	0x3f
 1701 04c8 41020000 		.4byte	0x241
 1702 04cc 05       		.uleb128 0x5
 1703 04cd 03       		.byte	0x3
 1704 04ce 00000000 		.4byte	system_info
 1705 04d2 14       		.uleb128 0x14
 1706 04d3 88020000 		.4byte	.LASF73
 1707 04d7 08       		.byte	0x8
 1708 04d8 51       		.byte	0x51
 1709 04d9 BF020000 		.4byte	0x2bf
 1710 04dd 05       		.uleb128 0x5
 1711 04de 03       		.byte	0x3
 1712 04df 00000000 		.4byte	system_settings
 1713 04e3 00       		.byte	0
 1714              		.section	.debug_abbrev,"",%progbits
 1715              	.Ldebug_abbrev0:
 1716 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 48


 1717 0001 11       		.uleb128 0x11
 1718 0002 01       		.byte	0x1
 1719 0003 25       		.uleb128 0x25
 1720 0004 0E       		.uleb128 0xe
 1721 0005 13       		.uleb128 0x13
 1722 0006 0B       		.uleb128 0xb
 1723 0007 03       		.uleb128 0x3
 1724 0008 0E       		.uleb128 0xe
 1725 0009 1B       		.uleb128 0x1b
 1726 000a 0E       		.uleb128 0xe
 1727 000b 55       		.uleb128 0x55
 1728 000c 17       		.uleb128 0x17
 1729 000d 11       		.uleb128 0x11
 1730 000e 01       		.uleb128 0x1
 1731 000f 10       		.uleb128 0x10
 1732 0010 17       		.uleb128 0x17
 1733 0011 00       		.byte	0
 1734 0012 00       		.byte	0
 1735 0013 02       		.uleb128 0x2
 1736 0014 24       		.uleb128 0x24
 1737 0015 00       		.byte	0
 1738 0016 0B       		.uleb128 0xb
 1739 0017 0B       		.uleb128 0xb
 1740 0018 3E       		.uleb128 0x3e
 1741 0019 0B       		.uleb128 0xb
 1742 001a 03       		.uleb128 0x3
 1743 001b 0E       		.uleb128 0xe
 1744 001c 00       		.byte	0
 1745 001d 00       		.byte	0
 1746 001e 03       		.uleb128 0x3
 1747 001f 16       		.uleb128 0x16
 1748 0020 00       		.byte	0
 1749 0021 03       		.uleb128 0x3
 1750 0022 0E       		.uleb128 0xe
 1751 0023 3A       		.uleb128 0x3a
 1752 0024 0B       		.uleb128 0xb
 1753 0025 3B       		.uleb128 0x3b
 1754 0026 0B       		.uleb128 0xb
 1755 0027 49       		.uleb128 0x49
 1756 0028 13       		.uleb128 0x13
 1757 0029 00       		.byte	0
 1758 002a 00       		.byte	0
 1759 002b 04       		.uleb128 0x4
 1760 002c 24       		.uleb128 0x24
 1761 002d 00       		.byte	0
 1762 002e 0B       		.uleb128 0xb
 1763 002f 0B       		.uleb128 0xb
 1764 0030 3E       		.uleb128 0x3e
 1765 0031 0B       		.uleb128 0xb
 1766 0032 03       		.uleb128 0x3
 1767 0033 08       		.uleb128 0x8
 1768 0034 00       		.byte	0
 1769 0035 00       		.byte	0
 1770 0036 05       		.uleb128 0x5
 1771 0037 16       		.uleb128 0x16
 1772 0038 00       		.byte	0
 1773 0039 03       		.uleb128 0x3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 49


 1774 003a 0E       		.uleb128 0xe
 1775 003b 3A       		.uleb128 0x3a
 1776 003c 0B       		.uleb128 0xb
 1777 003d 3B       		.uleb128 0x3b
 1778 003e 05       		.uleb128 0x5
 1779 003f 49       		.uleb128 0x49
 1780 0040 13       		.uleb128 0x13
 1781 0041 00       		.byte	0
 1782 0042 00       		.byte	0
 1783 0043 06       		.uleb128 0x6
 1784 0044 35       		.uleb128 0x35
 1785 0045 00       		.byte	0
 1786 0046 49       		.uleb128 0x49
 1787 0047 13       		.uleb128 0x13
 1788 0048 00       		.byte	0
 1789 0049 00       		.byte	0
 1790 004a 07       		.uleb128 0x7
 1791 004b 13       		.uleb128 0x13
 1792 004c 01       		.byte	0x1
 1793 004d 0B       		.uleb128 0xb
 1794 004e 0B       		.uleb128 0xb
 1795 004f 3A       		.uleb128 0x3a
 1796 0050 0B       		.uleb128 0xb
 1797 0051 3B       		.uleb128 0x3b
 1798 0052 0B       		.uleb128 0xb
 1799 0053 01       		.uleb128 0x1
 1800 0054 13       		.uleb128 0x13
 1801 0055 00       		.byte	0
 1802 0056 00       		.byte	0
 1803 0057 08       		.uleb128 0x8
 1804 0058 0D       		.uleb128 0xd
 1805 0059 00       		.byte	0
 1806 005a 03       		.uleb128 0x3
 1807 005b 08       		.uleb128 0x8
 1808 005c 3A       		.uleb128 0x3a
 1809 005d 0B       		.uleb128 0xb
 1810 005e 3B       		.uleb128 0x3b
 1811 005f 0B       		.uleb128 0xb
 1812 0060 49       		.uleb128 0x49
 1813 0061 13       		.uleb128 0x13
 1814 0062 38       		.uleb128 0x38
 1815 0063 0B       		.uleb128 0xb
 1816 0064 00       		.byte	0
 1817 0065 00       		.byte	0
 1818 0066 09       		.uleb128 0x9
 1819 0067 0D       		.uleb128 0xd
 1820 0068 00       		.byte	0
 1821 0069 03       		.uleb128 0x3
 1822 006a 0E       		.uleb128 0xe
 1823 006b 3A       		.uleb128 0x3a
 1824 006c 0B       		.uleb128 0xb
 1825 006d 3B       		.uleb128 0x3b
 1826 006e 0B       		.uleb128 0xb
 1827 006f 49       		.uleb128 0x49
 1828 0070 13       		.uleb128 0x13
 1829 0071 38       		.uleb128 0x38
 1830 0072 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 50


 1831 0073 00       		.byte	0
 1832 0074 00       		.byte	0
 1833 0075 0A       		.uleb128 0xa
 1834 0076 01       		.uleb128 0x1
 1835 0077 01       		.byte	0x1
 1836 0078 49       		.uleb128 0x49
 1837 0079 13       		.uleb128 0x13
 1838 007a 01       		.uleb128 0x1
 1839 007b 13       		.uleb128 0x13
 1840 007c 00       		.byte	0
 1841 007d 00       		.byte	0
 1842 007e 0B       		.uleb128 0xb
 1843 007f 21       		.uleb128 0x21
 1844 0080 00       		.byte	0
 1845 0081 49       		.uleb128 0x49
 1846 0082 13       		.uleb128 0x13
 1847 0083 2F       		.uleb128 0x2f
 1848 0084 0B       		.uleb128 0xb
 1849 0085 00       		.byte	0
 1850 0086 00       		.byte	0
 1851 0087 0C       		.uleb128 0xc
 1852 0088 0F       		.uleb128 0xf
 1853 0089 00       		.byte	0
 1854 008a 0B       		.uleb128 0xb
 1855 008b 0B       		.uleb128 0xb
 1856 008c 49       		.uleb128 0x49
 1857 008d 13       		.uleb128 0x13
 1858 008e 00       		.byte	0
 1859 008f 00       		.byte	0
 1860 0090 0D       		.uleb128 0xd
 1861 0091 13       		.uleb128 0x13
 1862 0092 01       		.byte	0x1
 1863 0093 0B       		.uleb128 0xb
 1864 0094 05       		.uleb128 0x5
 1865 0095 3A       		.uleb128 0x3a
 1866 0096 0B       		.uleb128 0xb
 1867 0097 3B       		.uleb128 0x3b
 1868 0098 0B       		.uleb128 0xb
 1869 0099 01       		.uleb128 0x1
 1870 009a 13       		.uleb128 0x13
 1871 009b 00       		.byte	0
 1872 009c 00       		.byte	0
 1873 009d 0E       		.uleb128 0xe
 1874 009e 0D       		.uleb128 0xd
 1875 009f 00       		.byte	0
 1876 00a0 03       		.uleb128 0x3
 1877 00a1 0E       		.uleb128 0xe
 1878 00a2 3A       		.uleb128 0x3a
 1879 00a3 0B       		.uleb128 0xb
 1880 00a4 3B       		.uleb128 0x3b
 1881 00a5 0B       		.uleb128 0xb
 1882 00a6 49       		.uleb128 0x49
 1883 00a7 13       		.uleb128 0x13
 1884 00a8 38       		.uleb128 0x38
 1885 00a9 05       		.uleb128 0x5
 1886 00aa 00       		.byte	0
 1887 00ab 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 51


 1888 00ac 0F       		.uleb128 0xf
 1889 00ad 2E       		.uleb128 0x2e
 1890 00ae 00       		.byte	0
 1891 00af 03       		.uleb128 0x3
 1892 00b0 0E       		.uleb128 0xe
 1893 00b1 3A       		.uleb128 0x3a
 1894 00b2 0B       		.uleb128 0xb
 1895 00b3 3B       		.uleb128 0x3b
 1896 00b4 0B       		.uleb128 0xb
 1897 00b5 27       		.uleb128 0x27
 1898 00b6 19       		.uleb128 0x19
 1899 00b7 11       		.uleb128 0x11
 1900 00b8 01       		.uleb128 0x1
 1901 00b9 12       		.uleb128 0x12
 1902 00ba 06       		.uleb128 0x6
 1903 00bb 40       		.uleb128 0x40
 1904 00bc 18       		.uleb128 0x18
 1905 00bd 9642     		.uleb128 0x2116
 1906 00bf 19       		.uleb128 0x19
 1907 00c0 00       		.byte	0
 1908 00c1 00       		.byte	0
 1909 00c2 10       		.uleb128 0x10
 1910 00c3 2E       		.uleb128 0x2e
 1911 00c4 01       		.byte	0x1
 1912 00c5 3F       		.uleb128 0x3f
 1913 00c6 19       		.uleb128 0x19
 1914 00c7 03       		.uleb128 0x3
 1915 00c8 0E       		.uleb128 0xe
 1916 00c9 3A       		.uleb128 0x3a
 1917 00ca 0B       		.uleb128 0xb
 1918 00cb 3B       		.uleb128 0x3b
 1919 00cc 05       		.uleb128 0x5
 1920 00cd 27       		.uleb128 0x27
 1921 00ce 19       		.uleb128 0x19
 1922 00cf 11       		.uleb128 0x11
 1923 00d0 01       		.uleb128 0x1
 1924 00d1 12       		.uleb128 0x12
 1925 00d2 06       		.uleb128 0x6
 1926 00d3 40       		.uleb128 0x40
 1927 00d4 18       		.uleb128 0x18
 1928 00d5 9642     		.uleb128 0x2116
 1929 00d7 19       		.uleb128 0x19
 1930 00d8 01       		.uleb128 0x1
 1931 00d9 13       		.uleb128 0x13
 1932 00da 00       		.byte	0
 1933 00db 00       		.byte	0
 1934 00dc 11       		.uleb128 0x11
 1935 00dd 34       		.uleb128 0x34
 1936 00de 00       		.byte	0
 1937 00df 03       		.uleb128 0x3
 1938 00e0 0E       		.uleb128 0xe
 1939 00e1 3A       		.uleb128 0x3a
 1940 00e2 0B       		.uleb128 0xb
 1941 00e3 3B       		.uleb128 0x3b
 1942 00e4 05       		.uleb128 0x5
 1943 00e5 49       		.uleb128 0x49
 1944 00e6 13       		.uleb128 0x13
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 52


 1945 00e7 02       		.uleb128 0x2
 1946 00e8 18       		.uleb128 0x18
 1947 00e9 00       		.byte	0
 1948 00ea 00       		.byte	0
 1949 00eb 12       		.uleb128 0x12
 1950 00ec 34       		.uleb128 0x34
 1951 00ed 00       		.byte	0
 1952 00ee 03       		.uleb128 0x3
 1953 00ef 0E       		.uleb128 0xe
 1954 00f0 3A       		.uleb128 0x3a
 1955 00f1 0B       		.uleb128 0xb
 1956 00f2 3B       		.uleb128 0x3b
 1957 00f3 05       		.uleb128 0x5
 1958 00f4 49       		.uleb128 0x49
 1959 00f5 13       		.uleb128 0x13
 1960 00f6 3F       		.uleb128 0x3f
 1961 00f7 19       		.uleb128 0x19
 1962 00f8 3C       		.uleb128 0x3c
 1963 00f9 19       		.uleb128 0x19
 1964 00fa 00       		.byte	0
 1965 00fb 00       		.byte	0
 1966 00fc 13       		.uleb128 0x13
 1967 00fd 26       		.uleb128 0x26
 1968 00fe 00       		.byte	0
 1969 00ff 49       		.uleb128 0x49
 1970 0100 13       		.uleb128 0x13
 1971 0101 00       		.byte	0
 1972 0102 00       		.byte	0
 1973 0103 14       		.uleb128 0x14
 1974 0104 34       		.uleb128 0x34
 1975 0105 00       		.byte	0
 1976 0106 03       		.uleb128 0x3
 1977 0107 0E       		.uleb128 0xe
 1978 0108 3A       		.uleb128 0x3a
 1979 0109 0B       		.uleb128 0xb
 1980 010a 3B       		.uleb128 0x3b
 1981 010b 0B       		.uleb128 0xb
 1982 010c 49       		.uleb128 0x49
 1983 010d 13       		.uleb128 0x13
 1984 010e 3F       		.uleb128 0x3f
 1985 010f 19       		.uleb128 0x19
 1986 0110 02       		.uleb128 0x2
 1987 0111 18       		.uleb128 0x18
 1988 0112 00       		.byte	0
 1989 0113 00       		.byte	0
 1990 0114 15       		.uleb128 0x15
 1991 0115 21       		.uleb128 0x21
 1992 0116 00       		.byte	0
 1993 0117 49       		.uleb128 0x49
 1994 0118 13       		.uleb128 0x13
 1995 0119 2F       		.uleb128 0x2f
 1996 011a 05       		.uleb128 0x5
 1997 011b 00       		.byte	0
 1998 011c 00       		.byte	0
 1999 011d 00       		.byte	0
 2000              		.section	.debug_aranges,"",%progbits
 2001 0000 54000000 		.4byte	0x54
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 53


 2002 0004 0200     		.2byte	0x2
 2003 0006 00000000 		.4byte	.Ldebug_info0
 2004 000a 04       		.byte	0x4
 2005 000b 00       		.byte	0
 2006 000c 0000     		.2byte	0
 2007 000e 0000     		.2byte	0
 2008 0010 00000000 		.4byte	.LFB64
 2009 0014 0E000000 		.4byte	.LFE64-.LFB64
 2010 0018 00000000 		.4byte	.LFB65
 2011 001c 0E000000 		.4byte	.LFE65-.LFB65
 2012 0020 00000000 		.4byte	.LFB66
 2013 0024 0E000000 		.4byte	.LFE66-.LFB66
 2014 0028 00000000 		.4byte	.LFB67
 2015 002c 0E000000 		.4byte	.LFE67-.LFB67
 2016 0030 00000000 		.4byte	.LFB68
 2017 0034 0E000000 		.4byte	.LFE68-.LFB68
 2018 0038 00000000 		.4byte	.LFB69
 2019 003c 0E000000 		.4byte	.LFE69-.LFB69
 2020 0040 00000000 		.4byte	.LFB70
 2021 0044 0E000000 		.4byte	.LFE70-.LFB70
 2022 0048 00000000 		.4byte	.LFB71
 2023 004c 18060000 		.4byte	.LFE71-.LFB71
 2024 0050 00000000 		.4byte	0
 2025 0054 00000000 		.4byte	0
 2026              		.section	.debug_ranges,"",%progbits
 2027              	.Ldebug_ranges0:
 2028 0000 00000000 		.4byte	.LFB64
 2029 0004 0E000000 		.4byte	.LFE64
 2030 0008 00000000 		.4byte	.LFB65
 2031 000c 0E000000 		.4byte	.LFE65
 2032 0010 00000000 		.4byte	.LFB66
 2033 0014 0E000000 		.4byte	.LFE66
 2034 0018 00000000 		.4byte	.LFB67
 2035 001c 0E000000 		.4byte	.LFE67
 2036 0020 00000000 		.4byte	.LFB68
 2037 0024 0E000000 		.4byte	.LFE68
 2038 0028 00000000 		.4byte	.LFB69
 2039 002c 0E000000 		.4byte	.LFE69
 2040 0030 00000000 		.4byte	.LFB70
 2041 0034 0E000000 		.4byte	.LFE70
 2042 0038 00000000 		.4byte	.LFB71
 2043 003c 18060000 		.4byte	.LFE71
 2044 0040 00000000 		.4byte	0
 2045 0044 00000000 		.4byte	0
 2046              		.section	.debug_line,"",%progbits
 2047              	.Ldebug_line0:
 2048 0000 E2020000 		.section	.debug_str,"MS",%progbits,1
 2048      02008101 
 2048      00000201 
 2048      FB0E0D00 
 2048      01010101 
 2049              	.LASF27:
 2050 0000 6D6F6465 		.ascii	"model_id\000"
 2050      6C5F6964 
 2050      00
 2051              	.LASF57:
 2052 0009 5254435F 		.ascii	"RTC_alarmCfgMask\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 54


 2052      616C6172 
 2052      6D436667 
 2052      4D61736B 
 2052      00
 2053              	.LASF26:
 2054 001a 73696D5F 		.ascii	"sim_id\000"
 2054      696400
 2055              	.LASF61:
 2056 0021 5254435F 		.ascii	"RTC_daysInMonths\000"
 2056      64617973 
 2056      496E4D6F 
 2056      6E746873 
 2056      00
 2057              	.LASF47:
 2058 0032 7379735F 		.ascii	"sys_settings_t\000"
 2058      73657474 
 2058      696E6773 
 2058      5F7400
 2059              	.LASF2:
 2060 0041 73686F72 		.ascii	"short int\000"
 2060      7420696E 
 2060      7400
 2061              	.LASF25:
 2062 004b 73697A65 		.ascii	"sizetype\000"
 2062      74797065 
 2062      00
 2063              	.LASF42:
 2064 0054 65705F68 		.ascii	"ep_host\000"
 2064      6F737400 
 2065              	.LASF74:
 2066 005c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2066      43313120 
 2066      352E342E 
 2066      31203230 
 2066      31363036 
 2067 008f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2067      20726576 
 2067      6973696F 
 2067      6E203233 
 2067      37373135 
 2068 00c2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2068      66756E63 
 2068      74696F6E 
 2068      2D736563 
 2068      74696F6E 
 2069              	.LASF52:
 2070 00ea 5254435F 		.ascii	"RTC_EveryWeekHandler\000"
 2070      45766572 
 2070      79576565 
 2070      6B48616E 
 2070      646C6572 
 2071              	.LASF68:
 2072 00ff 64617461 		.ascii	"data\000"
 2072      00
 2073              	.LASF17:
 2074 0104 486F7572 		.ascii	"Hour\000"
 2074      00
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 55


 2075              	.LASF39:
 2076 0109 63686970 		.ascii	"chip_uniqueId\000"
 2076      5F756E69 
 2076      71756549 
 2076      6400
 2077              	.LASF35:
 2078 0117 76616C75 		.ascii	"value\000"
 2078      6500
 2079              	.LASF12:
 2080 011d 75696E74 		.ascii	"uint16\000"
 2080      313600
 2081              	.LASF43:
 2082 0124 65705F70 		.ascii	"ep_port\000"
 2082      6F727400 
 2083              	.LASF66:
 2084 012c 64617461 		.ascii	"dataPointsInStack\000"
 2084      506F696E 
 2084      7473496E 
 2084      53746163 
 2084      6B00
 2085              	.LASF11:
 2086 013e 75696E74 		.ascii	"uint8\000"
 2086      3800
 2087              	.LASF46:
 2088 0144 65705F64 		.ascii	"ep_database\000"
 2088      61746162 
 2088      61736500 
 2089              	.LASF44:
 2090 0150 65705F75 		.ascii	"ep_user\000"
 2090      73657200 
 2091              	.LASF36:
 2092 0158 74696D65 		.ascii	"timeStamp\000"
 2092      5374616D 
 2092      7000
 2093              	.LASF67:
 2094 0162 64617461 		.ascii	"dataPointsInStackDesired\000"
 2094      506F696E 
 2094      7473496E 
 2094      53746163 
 2094      6B446573 
 2095              	.LASF14:
 2096 017b 666C6F61 		.ascii	"float\000"
 2096      7400
 2097              	.LASF18:
 2098 0181 4461794F 		.ascii	"DayOfWeek\000"
 2098      66576565 
 2098      6B00
 2099              	.LASF6:
 2100 018b 6C6F6E67 		.ascii	"long long int\000"
 2100      206C6F6E 
 2100      6720696E 
 2100      7400
 2101              	.LASF16:
 2102 0199 63686172 		.ascii	"char\000"
 2102      00
 2103              	.LASF29:
 2104 019e 6D6F6465 		.ascii	"modem_info_t\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 56


 2104      6D5F696E 
 2104      666F5F74 
 2104      00
 2105              	.LASF4:
 2106 01ab 6C6F6E67 		.ascii	"long int\000"
 2106      20696E74 
 2106      00
 2107              	.LASF38:
 2108 01b4 6D6F6465 		.ascii	"modem_info\000"
 2108      6D5F696E 
 2108      666F00
 2109              	.LASF53:
 2110 01bf 5254435F 		.ascii	"RTC_EveryMonthHandler\000"
 2110      45766572 
 2110      794D6F6E 
 2110      74684861 
 2110      6E646C65 
 2111              	.LASF22:
 2112 01d5 59656172 		.ascii	"Year\000"
 2112      00
 2113              	.LASF51:
 2114 01da 5254435F 		.ascii	"RTC_EveryDayHandler\000"
 2114      45766572 
 2114      79446179 
 2114      48616E64 
 2114      6C657200 
 2115              	.LASF70:
 2116 01ee 68747470 		.ascii	"http_body\000"
 2116      5F626F64 
 2116      7900
 2117              	.LASF21:
 2118 01f8 4D6F6E74 		.ascii	"Month\000"
 2118      6800
 2119              	.LASF24:
 2120 01fe 6C6F6E67 		.ascii	"long double\000"
 2120      20646F75 
 2120      626C6500 
 2121              	.LASF1:
 2122 020a 756E7369 		.ascii	"unsigned char\000"
 2122      676E6564 
 2122      20636861 
 2122      7200
 2123              	.LASF64:
 2124 0218 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2124      6D5F7374 
 2124      6172745F 
 2124      74696D65 
 2124      5F737461 
 2125              	.LASF55:
 2126 022f 5254435F 		.ascii	"RTC_alarmCfgTimeDate\000"
 2126      616C6172 
 2126      6D436667 
 2126      54696D65 
 2126      44617465 
 2127              	.LASF63:
 2128 0244 6D6F6465 		.ascii	"modem_state\000"
 2128      6D5F7374 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 57


 2128      61746500 
 2129              	.LASF0:
 2130 0250 7369676E 		.ascii	"signed char\000"
 2130      65642063 
 2130      68617200 
 2131              	.LASF54:
 2132 025c 5254435F 		.ascii	"RTC_EveryYearHandler\000"
 2132      45766572 
 2132      79596561 
 2132      7248616E 
 2132      646C6572 
 2133              	.LASF7:
 2134 0271 6C6F6E67 		.ascii	"long long unsigned int\000"
 2134      206C6F6E 
 2134      6720756E 
 2134      7369676E 
 2134      65642069 
 2135              	.LASF73:
 2136 0288 73797374 		.ascii	"system_settings\000"
 2136      656D5F73 
 2136      65747469 
 2136      6E677300 
 2137              	.LASF56:
 2138 0298 5254435F 		.ascii	"RTC_currentTimeDate\000"
 2138      63757272 
 2138      656E7454 
 2138      696D6544 
 2138      61746500 
 2139              	.LASF8:
 2140 02ac 756E7369 		.ascii	"unsigned int\000"
 2140      676E6564 
 2140      20696E74 
 2140      00
 2141              	.LASF37:
 2142 02b9 6B65795F 		.ascii	"key_value_t\000"
 2142      76616C75 
 2142      655F7400 
 2143              	.LASF77:
 2144 02c5 5254435F 		.ascii	"RTC_ISR\000"
 2144      49535200 
 2145              	.LASF76:
 2146 02cd 433A5C55 		.ascii	"C:\\Users\\hail\\Desktop\\Brooke Research\\notoriOS"
 2146      73657273 
 2146      5C686169 
 2146      6C5C4465 
 2146      736B746F 
 2147 02fb 5C6E6F74 		.ascii	"\\notoriOS\\notoriOS\\notoriOS.cydsn\000"
 2147      6F72694F 
 2147      535C6E6F 
 2147      746F7269 
 2147      4F535C6E 
 2148              	.LASF40:
 2149 031d 7379735F 		.ascii	"sys_info_t\000"
 2149      696E666F 
 2149      5F7400
 2150              	.LASF3:
 2151 0328 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 58


 2151      7420756E 
 2151      7369676E 
 2151      65642069 
 2151      6E7400
 2152              	.LASF32:
 2153 033b 74696D65 		.ascii	"time_to_network_connect\000"
 2153      5F746F5F 
 2153      6E657477 
 2153      6F726B5F 
 2153      636F6E6E 
 2154              	.LASF72:
 2155 0353 73797374 		.ascii	"system_info\000"
 2155      656D5F69 
 2155      6E666F00 
 2156              	.LASF33:
 2157 035f 74696D65 		.ascii	"time_to_acquire_ip\000"
 2157      5F746F5F 
 2157      61637175 
 2157      6972655F 
 2157      697000
 2158              	.LASF28:
 2159 0372 696D6569 		.ascii	"imei\000"
 2159      00
 2160              	.LASF10:
 2161 0377 696E7433 		.ascii	"int32_t\000"
 2161      325F7400 
 2162              	.LASF78:
 2163 037f 5254435F 		.ascii	"RTC_tmp\000"
 2163      746D7000 
 2164              	.LASF34:
 2165 0387 6D6F6465 		.ascii	"modem_stats_t\000"
 2165      6D5F7374 
 2165      6174735F 
 2165      7400
 2166              	.LASF50:
 2167 0395 5254435F 		.ascii	"RTC_EveryHourHandler\000"
 2167      45766572 
 2167      79486F75 
 2167      7248616E 
 2167      646C6572 
 2168              	.LASF19:
 2169 03aa 4461794F 		.ascii	"DayOfMonth\000"
 2169      664D6F6E 
 2169      746800
 2170              	.LASF31:
 2171 03b5 72737271 		.ascii	"rsrq\000"
 2171      00
 2172              	.LASF71:
 2173 03ba 68747470 		.ascii	"http_route\000"
 2173      5F726F75 
 2173      746500
 2174              	.LASF49:
 2175 03c5 5254435F 		.ascii	"RTC_EveryMinuteHandler\000"
 2175      45766572 
 2175      794D696E 
 2175      75746548 
 2175      616E646C 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 59


 2176              	.LASF45:
 2177 03dc 65705F70 		.ascii	"ep_pswd\000"
 2177      73776400 
 2178              	.LASF5:
 2179 03e4 6C6F6E67 		.ascii	"long unsigned int\000"
 2179      20756E73 
 2179      69676E65 
 2179      6420696E 
 2179      7400
 2180              	.LASF13:
 2181 03f6 696E7433 		.ascii	"int32\000"
 2181      3200
 2182              	.LASF15:
 2183 03fc 646F7562 		.ascii	"double\000"
 2183      6C6500
 2184              	.LASF48:
 2185 0403 5254435F 		.ascii	"RTC_EverySecondHandler\000"
 2185      45766572 
 2185      79536563 
 2185      6F6E6448 
 2185      616E646C 
 2186              	.LASF65:
 2187 041a 6D6F6465 		.ascii	"modem_stats\000"
 2187      6D5F7374 
 2187      61747300 
 2188              	.LASF60:
 2189 0426 5254435F 		.ascii	"RTC_statusDateTime\000"
 2189      73746174 
 2189      75734461 
 2189      74655469 
 2189      6D6500
 2190              	.LASF9:
 2191 0439 5F5F696E 		.ascii	"__int32_t\000"
 2191      7433325F 
 2191      7400
 2192              	.LASF75:
 2193 0443 47656E65 		.ascii	"Generated_Source\\PSoC5\\RTC_INT.c\000"
 2193      72617465 
 2193      645F536F 
 2193      75726365 
 2193      5C50536F 
 2194              	.LASF41:
 2195 0464 6E6F6465 		.ascii	"node_id\000"
 2195      5F696400 
 2196              	.LASF58:
 2197 046c 5254435F 		.ascii	"RTC_alarmCurStatus\000"
 2197      616C6172 
 2197      6D437572 
 2197      53746174 
 2197      757300
 2198              	.LASF62:
 2199 047f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2199      52784275 
 2199      66666572 
 2199      00
 2200              	.LASF23:
 2201 048c 5254435F 		.ascii	"RTC_TIME_DATE\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccuccYO8.s 			page 60


 2201      54494D45 
 2201      5F444154 
 2201      4500
 2202              	.LASF59:
 2203 049a 5254435F 		.ascii	"RTC_intervalCfgMask\000"
 2203      696E7465 
 2203      7276616C 
 2203      4366674D 
 2203      61736B00 
 2204              	.LASF69:
 2205 04ae 68747470 		.ascii	"http_request\000"
 2205      5F726571 
 2205      75657374 
 2205      00
 2206              	.LASF30:
 2207 04bb 72737369 		.ascii	"rssi\000"
 2207      00
 2208              	.LASF20:
 2209 04c0 4461794F 		.ascii	"DayOfYear\000"
 2209      66596561 
 2209      7200
 2210              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
