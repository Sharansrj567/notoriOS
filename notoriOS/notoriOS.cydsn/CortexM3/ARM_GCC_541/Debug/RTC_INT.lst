ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RTC_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	debug_string,100,4
  20              		.syntax unified
  21              		.global _printf_float
  22              		.thumb
  23              		.syntax unified
  24              		.comm	modem_state,1,1
  25              		.comm	modem_start_time_stamp,4,4
  26              		.comm	modem_info,60,4
  27              		.comm	modem_stats,12,4
  28              		.comm	dataPointsInStack,2,2
  29              		.comm	data,440,4
  30              		.comm	system_info,28,4
  31              		.comm	system_settings,324,4
  32              		.section	.text.RTC_EverySecondHandler,"ax",%progbits
  33              		.align	2
  34              		.thumb
  35              		.thumb_func
  36              		.type	RTC_EverySecondHandler, %function
  37              	RTC_EverySecondHandler:
  38              	.LFB64:
  39              		.file 1 "Generated_Source\\PSoC5\\RTC_INT.c"
   1:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/RTC_INT.c **** * File Name: RTC_INT.c
   3:Generated_Source\PSoC5/RTC_INT.c **** * Version 2.0
   4:Generated_Source\PSoC5/RTC_INT.c **** *
   5:Generated_Source\PSoC5/RTC_INT.c **** * Description:
   6:Generated_Source\PSoC5/RTC_INT.c **** *  This file contains the Interrupt Service Routine (ISR) for the RTC component.
   7:Generated_Source\PSoC5/RTC_INT.c **** *  This interrupt routine has entry pointes to overflow on time or date.
   8:Generated_Source\PSoC5/RTC_INT.c **** *
   9:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  10:Generated_Source\PSoC5/RTC_INT.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/RTC_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/RTC_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/RTC_INT.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/RTC_INT.c **** 
  16:Generated_Source\PSoC5/RTC_INT.c **** #include "RTC.h"
  17:Generated_Source\PSoC5/RTC_INT.c **** #include "CyLib.h"
  18:Generated_Source\PSoC5/RTC_INT.c **** #include "cyapicallbacks.h"
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 2


  19:Generated_Source\PSoC5/RTC_INT.c **** 
  20:Generated_Source\PSoC5/RTC_INT.c **** /* Function Prototypes */
  21:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EverySecondHandler(void);
  22:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMinuteHandler(void);
  23:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryHourHandler(void);
  24:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryDayHandler(void);
  25:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryWeekHandler(void);
  26:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMonthHandler(void);
  27:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryYearHandler(void);
  28:Generated_Source\PSoC5/RTC_INT.c **** 
  29:Generated_Source\PSoC5/RTC_INT.c **** 
  30:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  31:Generated_Source\PSoC5/RTC_INT.c **** *  Place your includes, defines and code here
  32:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  33:Generated_Source\PSoC5/RTC_INT.c **** /* `#START RTC_ISR_DEFINITION` */
  34:Generated_Source\PSoC5/RTC_INT.c **** 
  35:Generated_Source\PSoC5/RTC_INT.c **** #include "notoriOS.h"
  36:Generated_Source\PSoC5/RTC_INT.c **** 
  37:Generated_Source\PSoC5/RTC_INT.c **** /* `#END` */
  38:Generated_Source\PSoC5/RTC_INT.c **** 
  39:Generated_Source\PSoC5/RTC_INT.c **** 
  40:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  41:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EverySecondHandler
  42:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  43:Generated_Source\PSoC5/RTC_INT.c **** *
  44:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  45:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every second.
  46:Generated_Source\PSoC5/RTC_INT.c **** *
  47:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
  48:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  49:Generated_Source\PSoC5/RTC_INT.c **** *
  50:Generated_Source\PSoC5/RTC_INT.c **** * Return:
  51:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  52:Generated_Source\PSoC5/RTC_INT.c **** *
  53:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  54:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EverySecondHandler(void)
  55:Generated_Source\PSoC5/RTC_INT.c **** {
  40              		.loc 1 55 0
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 0
  43              		@ frame_needed = 1, uses_anonymous_args = 0
  44 0000 80B5     		push	{r7, lr}
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
  48 0002 00AF     		add	r7, sp, #0
  49              		.cfi_def_cfa_register 7
  56:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every second handler code here. */
  57:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_SECOND_HANDLER_CODE` */
  58:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_SECOND);
  50              		.loc 1 58 0
  51 0004 0020     		movs	r0, #0
  52 0006 FFF7FEFF 		bl	AyoItsTime
  59:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
  60:Generated_Source\PSoC5/RTC_INT.c ****     
  61:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_SECOND_HANDLER_CALLBACK
  62:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EverySecondHandler_Callback();
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 3


  63:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_SECOND_HANDLER_CALLBACK */
  64:Generated_Source\PSoC5/RTC_INT.c **** }
  53              		.loc 1 64 0
  54 000a 00BF     		nop
  55 000c 80BD     		pop	{r7, pc}
  56              		.cfi_endproc
  57              	.LFE64:
  58              		.size	RTC_EverySecondHandler, .-RTC_EverySecondHandler
  59 000e 00BF     		.section	.text.RTC_EveryMinuteHandler,"ax",%progbits
  60              		.align	2
  61              		.thumb
  62              		.thumb_func
  63              		.type	RTC_EveryMinuteHandler, %function
  64              	RTC_EveryMinuteHandler:
  65              	.LFB65:
  65:Generated_Source\PSoC5/RTC_INT.c **** 
  66:Generated_Source\PSoC5/RTC_INT.c **** 
  67:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  68:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryMinuteHandler
  69:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  70:Generated_Source\PSoC5/RTC_INT.c **** *
  71:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  72:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every minute.
  73:Generated_Source\PSoC5/RTC_INT.c **** *
  74:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
  75:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  76:Generated_Source\PSoC5/RTC_INT.c **** *
  77:Generated_Source\PSoC5/RTC_INT.c **** * Return:
  78:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  79:Generated_Source\PSoC5/RTC_INT.c **** *
  80:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  81:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMinuteHandler(void)
  82:Generated_Source\PSoC5/RTC_INT.c **** {
  66              		.loc 1 82 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70 0000 80B5     		push	{r7, lr}
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 7, -8
  73              		.cfi_offset 14, -4
  74 0002 00AF     		add	r7, sp, #0
  75              		.cfi_def_cfa_register 7
  83:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every minute handler code here. */
  84:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_MINUTE_HANDLER_CODE` */
  85:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_MINUTE);
  76              		.loc 1 85 0
  77 0004 0120     		movs	r0, #1
  78 0006 FFF7FEFF 		bl	AyoItsTime
  86:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
  87:Generated_Source\PSoC5/RTC_INT.c **** 
  88:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_MINUTE_HANDLER_CALLBACK
  89:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryMinuteHandler_Callback();
  90:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_MINUTE_HANDLER_CALLBACK */    
  91:Generated_Source\PSoC5/RTC_INT.c **** }
  79              		.loc 1 91 0
  80 000a 00BF     		nop
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 4


  81 000c 80BD     		pop	{r7, pc}
  82              		.cfi_endproc
  83              	.LFE65:
  84              		.size	RTC_EveryMinuteHandler, .-RTC_EveryMinuteHandler
  85 000e 00BF     		.section	.text.RTC_EveryHourHandler,"ax",%progbits
  86              		.align	2
  87              		.thumb
  88              		.thumb_func
  89              		.type	RTC_EveryHourHandler, %function
  90              	RTC_EveryHourHandler:
  91              	.LFB66:
  92:Generated_Source\PSoC5/RTC_INT.c **** 
  93:Generated_Source\PSoC5/RTC_INT.c **** 
  94:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  95:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryHourHandler
  96:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  97:Generated_Source\PSoC5/RTC_INT.c **** *
  98:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  99:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every hour.
 100:Generated_Source\PSoC5/RTC_INT.c **** *
 101:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 102:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 103:Generated_Source\PSoC5/RTC_INT.c **** *
 104:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 105:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 106:Generated_Source\PSoC5/RTC_INT.c **** *
 107:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 108:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryHourHandler(void)
 109:Generated_Source\PSoC5/RTC_INT.c **** {
  92              		.loc 1 109 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96 0000 80B5     		push	{r7, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 7, -8
  99              		.cfi_offset 14, -4
 100 0002 00AF     		add	r7, sp, #0
 101              		.cfi_def_cfa_register 7
 110:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every hour handler code here. */
 111:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_HOUR_HANDLER_CODE` */
 112:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_HOUR);
 102              		.loc 1 112 0
 103 0004 0220     		movs	r0, #2
 104 0006 FFF7FEFF 		bl	AyoItsTime
 113:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 114:Generated_Source\PSoC5/RTC_INT.c ****     
 115:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_HOUR_HANDLER_CALLBACK
 116:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryHourHandler_Callback();
 117:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_HOUR_HANDLER_CALLBACK */
 118:Generated_Source\PSoC5/RTC_INT.c **** }
 105              		.loc 1 118 0
 106 000a 00BF     		nop
 107 000c 80BD     		pop	{r7, pc}
 108              		.cfi_endproc
 109              	.LFE66:
 110              		.size	RTC_EveryHourHandler, .-RTC_EveryHourHandler
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 5


 111 000e 00BF     		.section	.text.RTC_EveryDayHandler,"ax",%progbits
 112              		.align	2
 113              		.thumb
 114              		.thumb_func
 115              		.type	RTC_EveryDayHandler, %function
 116              	RTC_EveryDayHandler:
 117              	.LFB67:
 119:Generated_Source\PSoC5/RTC_INT.c **** 
 120:Generated_Source\PSoC5/RTC_INT.c **** 
 121:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 122:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryDayHandler
 123:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 124:Generated_Source\PSoC5/RTC_INT.c **** *
 125:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 126:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every day.
 127:Generated_Source\PSoC5/RTC_INT.c **** *
 128:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 129:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 130:Generated_Source\PSoC5/RTC_INT.c **** *
 131:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 132:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 133:Generated_Source\PSoC5/RTC_INT.c **** *
 134:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 135:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryDayHandler(void)
 136:Generated_Source\PSoC5/RTC_INT.c **** {
 118              		.loc 1 136 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 1, uses_anonymous_args = 0
 122 0000 80B5     		push	{r7, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 7, -8
 125              		.cfi_offset 14, -4
 126 0002 00AF     		add	r7, sp, #0
 127              		.cfi_def_cfa_register 7
 137:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your everyday handler code here. */
 138:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_DAY_HANDLER_CODE` */
 139:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_DAY);
 128              		.loc 1 139 0
 129 0004 0320     		movs	r0, #3
 130 0006 FFF7FEFF 		bl	AyoItsTime
 140:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 141:Generated_Source\PSoC5/RTC_INT.c ****     
 142:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_DAY_HANDLER_CALLBACK
 143:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryDayHandler_Callback();
 144:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_DAY_HANDLER_CALLBACK */
 145:Generated_Source\PSoC5/RTC_INT.c **** }
 131              		.loc 1 145 0
 132 000a 00BF     		nop
 133 000c 80BD     		pop	{r7, pc}
 134              		.cfi_endproc
 135              	.LFE67:
 136              		.size	RTC_EveryDayHandler, .-RTC_EveryDayHandler
 137 000e 00BF     		.section	.text.RTC_EveryWeekHandler,"ax",%progbits
 138              		.align	2
 139              		.thumb
 140              		.thumb_func
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 6


 141              		.type	RTC_EveryWeekHandler, %function
 142              	RTC_EveryWeekHandler:
 143              	.LFB68:
 146:Generated_Source\PSoC5/RTC_INT.c **** 
 147:Generated_Source\PSoC5/RTC_INT.c **** 
 148:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 149:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryWeekHandler
 150:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 151:Generated_Source\PSoC5/RTC_INT.c **** *
 152:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 153:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every week.
 154:Generated_Source\PSoC5/RTC_INT.c **** *
 155:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 156:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 157:Generated_Source\PSoC5/RTC_INT.c **** *
 158:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 159:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 160:Generated_Source\PSoC5/RTC_INT.c **** *
 161:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 162:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryWeekHandler(void)
 163:Generated_Source\PSoC5/RTC_INT.c **** {
 144              		.loc 1 163 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 1, uses_anonymous_args = 0
 148 0000 80B5     		push	{r7, lr}
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 7, -8
 151              		.cfi_offset 14, -4
 152 0002 00AF     		add	r7, sp, #0
 153              		.cfi_def_cfa_register 7
 164:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every week handler code here. */
 165:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_WEEK_HANDLER_CODE` */
 166:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_WEEK);
 154              		.loc 1 166 0
 155 0004 0420     		movs	r0, #4
 156 0006 FFF7FEFF 		bl	AyoItsTime
 167:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 168:Generated_Source\PSoC5/RTC_INT.c **** 
 169:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_WEEK_HANDLER_CALLBACK
 170:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryWeekHandler_Callback();
 171:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_WEEK_HANDLER_CALLBACK */
 172:Generated_Source\PSoC5/RTC_INT.c **** }
 157              		.loc 1 172 0
 158 000a 00BF     		nop
 159 000c 80BD     		pop	{r7, pc}
 160              		.cfi_endproc
 161              	.LFE68:
 162              		.size	RTC_EveryWeekHandler, .-RTC_EveryWeekHandler
 163 000e 00BF     		.section	.text.RTC_EveryMonthHandler,"ax",%progbits
 164              		.align	2
 165              		.thumb
 166              		.thumb_func
 167              		.type	RTC_EveryMonthHandler, %function
 168              	RTC_EveryMonthHandler:
 169              	.LFB69:
 173:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 7


 174:Generated_Source\PSoC5/RTC_INT.c **** 
 175:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 176:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryMonthHandler
 177:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 178:Generated_Source\PSoC5/RTC_INT.c **** *
 179:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 180:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every month.
 181:Generated_Source\PSoC5/RTC_INT.c **** *
 182:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 183:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 184:Generated_Source\PSoC5/RTC_INT.c **** *
 185:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 186:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 187:Generated_Source\PSoC5/RTC_INT.c **** *
 188:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 189:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMonthHandler(void)
 190:Generated_Source\PSoC5/RTC_INT.c **** {
 170              		.loc 1 190 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 1, uses_anonymous_args = 0
 174 0000 80B5     		push	{r7, lr}
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 7, -8
 177              		.cfi_offset 14, -4
 178 0002 00AF     		add	r7, sp, #0
 179              		.cfi_def_cfa_register 7
 191:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every month handler code here. */
 192:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_MONTH_HANDLER_CODE` */
 193:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_MONTH);
 180              		.loc 1 193 0
 181 0004 0520     		movs	r0, #5
 182 0006 FFF7FEFF 		bl	AyoItsTime
 194:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 195:Generated_Source\PSoC5/RTC_INT.c ****     
 196:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_MONTH_HANDLER_CALLBACK
 197:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryMonthHandler_Callback();
 198:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_MONTH_HANDLER_CALLBACK */
 199:Generated_Source\PSoC5/RTC_INT.c **** }
 183              		.loc 1 199 0
 184 000a 00BF     		nop
 185 000c 80BD     		pop	{r7, pc}
 186              		.cfi_endproc
 187              	.LFE69:
 188              		.size	RTC_EveryMonthHandler, .-RTC_EveryMonthHandler
 189 000e 00BF     		.section	.text.RTC_EveryYearHandler,"ax",%progbits
 190              		.align	2
 191              		.thumb
 192              		.thumb_func
 193              		.type	RTC_EveryYearHandler, %function
 194              	RTC_EveryYearHandler:
 195              	.LFB70:
 200:Generated_Source\PSoC5/RTC_INT.c **** 
 201:Generated_Source\PSoC5/RTC_INT.c **** 
 202:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 203:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryYearHandler
 204:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 8


 205:Generated_Source\PSoC5/RTC_INT.c **** *
 206:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 207:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every year.
 208:Generated_Source\PSoC5/RTC_INT.c **** *
 209:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 210:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 211:Generated_Source\PSoC5/RTC_INT.c **** *
 212:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 213:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 214:Generated_Source\PSoC5/RTC_INT.c **** *
 215:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 216:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryYearHandler(void)
 217:Generated_Source\PSoC5/RTC_INT.c **** {
 196              		.loc 1 217 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 1, uses_anonymous_args = 0
 200 0000 80B5     		push	{r7, lr}
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 7, -8
 203              		.cfi_offset 14, -4
 204 0002 00AF     		add	r7, sp, #0
 205              		.cfi_def_cfa_register 7
 218:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every year handler code here. */
 219:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_YEAR_HANDLER_CODE` */
 220:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_YEAR);
 206              		.loc 1 220 0
 207 0004 0620     		movs	r0, #6
 208 0006 FFF7FEFF 		bl	AyoItsTime
 221:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 222:Generated_Source\PSoC5/RTC_INT.c **** 
 223:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_YEAR_HANDLER_CALLBACK
 224:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryYearHandler_Callback();
 225:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_YEAR_HANDLER_CALLBACK */    
 226:Generated_Source\PSoC5/RTC_INT.c **** }
 209              		.loc 1 226 0
 210 000a 00BF     		nop
 211 000c 80BD     		pop	{r7, pc}
 212              		.cfi_endproc
 213              	.LFE70:
 214              		.size	RTC_EveryYearHandler, .-RTC_EveryYearHandler
 215 000e 00BF     		.section	.text.RTC_ISR,"ax",%progbits
 216              		.align	2
 217              		.global	RTC_ISR
 218              		.thumb
 219              		.thumb_func
 220              		.type	RTC_ISR, %function
 221              	RTC_ISR:
 222              	.LFB71:
 227:Generated_Source\PSoC5/RTC_INT.c **** 
 228:Generated_Source\PSoC5/RTC_INT.c **** 
 229:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/RTC_INT.c **** * Function Name: RTC_ISR
 231:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 232:Generated_Source\PSoC5/RTC_INT.c **** *
 233:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 234:Generated_Source\PSoC5/RTC_INT.c **** *  This ISR is executed on 1PPS (one pulse per second) event.
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 9


 235:Generated_Source\PSoC5/RTC_INT.c **** *  Global interrupt must be enabled to invoke this ISR.
 236:Generated_Source\PSoC5/RTC_INT.c **** *  This interrupt trigs every second.
 237:Generated_Source\PSoC5/RTC_INT.c **** *
 238:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 239:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 240:Generated_Source\PSoC5/RTC_INT.c **** *
 241:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 242:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 243:Generated_Source\PSoC5/RTC_INT.c **** *
 244:Generated_Source\PSoC5/RTC_INT.c **** * Global variables:
 245:Generated_Source\PSoC5/RTC_INT.c **** * RTC_currentTimeDate, RTC_dstTimeDateStart,
 246:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstTimeDateStop, RTC_dstTimeDateStart,
 247:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_alarmCfgTimeDate, RTC_statusDateTime,
 248:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStartStatus, RTC_dstStartStatus,
 249:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStopStatus, RTC_alarmCurStatus: global
 250:Generated_Source\PSoC5/RTC_INT.c **** *  variables are used for the time/date, DST and alarm update procedure.
 251:Generated_Source\PSoC5/RTC_INT.c **** *
 252:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstTimeDateStart and RTC_currentTimeDate:
 253:Generated_Source\PSoC5/RTC_INT.c **** *  are modified with the updated values.
 254:Generated_Source\PSoC5/RTC_INT.c **** *
 255:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_statusDateTime, RTC_dstStartStatus,
 256:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStartStatus, RTC_dstStopStatus,
 257:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_alarmCurStatus: global variables could be modified while
 258:Generated_Source\PSoC5/RTC_INT.c **** *  current time/date is updated.
 259:Generated_Source\PSoC5/RTC_INT.c **** *
 260:Generated_Source\PSoC5/RTC_INT.c **** * Side Effects:
 261:Generated_Source\PSoC5/RTC_INT.c **** *  Clears all interrupt status bits (react_int, limact_int, onepps_int, ctw_int,
 262:Generated_Source\PSoC5/RTC_INT.c **** *  and  ftw_int) in Power Manager Interrupt Status Register. If an interrupt
 263:Generated_Source\PSoC5/RTC_INT.c **** *  gets generated at the same time as a clear, the bit will remain set (which
 264:Generated_Source\PSoC5/RTC_INT.c **** *  causes another interrupt).
 265:Generated_Source\PSoC5/RTC_INT.c **** *
 266:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 267:Generated_Source\PSoC5/RTC_INT.c **** CY_ISR(RTC_ISR)
 268:Generated_Source\PSoC5/RTC_INT.c **** {
 223              		.loc 1 268 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 8
 226              		@ frame_needed = 1, uses_anonymous_args = 0
 227 0000 80B5     		push	{r7, lr}
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 7, -8
 230              		.cfi_offset 14, -4
 231 0002 82B0     		sub	sp, sp, #8
 232              		.cfi_def_cfa_offset 16
 233 0004 00AF     		add	r7, sp, #0
 234              		.cfi_def_cfa_register 7
 269:Generated_Source\PSoC5/RTC_INT.c ****     uint8 RTC_tmp;
 270:Generated_Source\PSoC5/RTC_INT.c **** 
 271:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_ISR_ENTRY_CALLBACK
 272:Generated_Source\PSoC5/RTC_INT.c ****         RTC_ISR_EntryCallback();
 273:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_ISR_ENTRY_CALLBACK */
 274:Generated_Source\PSoC5/RTC_INT.c ****     
 275:Generated_Source\PSoC5/RTC_INT.c ****     /* Clear OPPS interrupt status flag */
 276:Generated_Source\PSoC5/RTC_INT.c ****     (void) CyPmReadStatus(CY_PM_ONEPPS_INT);
 235              		.loc 1 276 0
 236 0006 0420     		movs	r0, #4
 237 0008 FFF7FEFF 		bl	CyPmReadStatus
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 10


 277:Generated_Source\PSoC5/RTC_INT.c **** 
 278:Generated_Source\PSoC5/RTC_INT.c ****     /* Increment seconds counter */
 279:Generated_Source\PSoC5/RTC_INT.c ****     RTC_currentTimeDate.Sec++;
 238              		.loc 1 279 0
 239 000c 9E4B     		ldr	r3, .L48
 240 000e 1B78     		ldrb	r3, [r3]
 241 0010 DBB2     		uxtb	r3, r3
 242 0012 0133     		adds	r3, r3, #1
 243 0014 DAB2     		uxtb	r2, r3
 244 0016 9C4B     		ldr	r3, .L48
 245 0018 1A70     		strb	r2, [r3]
 280:Generated_Source\PSoC5/RTC_INT.c **** 
 281:Generated_Source\PSoC5/RTC_INT.c ****     /* Check if minute elapsed */
 282:Generated_Source\PSoC5/RTC_INT.c ****     if(RTC_currentTimeDate.Sec > RTC_MINUTE_ELAPSED)
 246              		.loc 1 282 0
 247 001a 9B4B     		ldr	r3, .L48
 248 001c 1B78     		ldrb	r3, [r3]
 249 001e DBB2     		uxtb	r3, r3
 250 0020 3B2B     		cmp	r3, #59
 251 0022 40F2A682 		bls	.L9
 283:Generated_Source\PSoC5/RTC_INT.c ****     {
 284:Generated_Source\PSoC5/RTC_INT.c ****         /* Inc Min */
 285:Generated_Source\PSoC5/RTC_INT.c ****         RTC_currentTimeDate.Min++;
 252              		.loc 1 285 0
 253 0026 984B     		ldr	r3, .L48
 254 0028 5B78     		ldrb	r3, [r3, #1]
 255 002a DBB2     		uxtb	r3, r3
 256 002c 0133     		adds	r3, r3, #1
 257 002e DAB2     		uxtb	r2, r3
 258 0030 954B     		ldr	r3, .L48
 259 0032 5A70     		strb	r2, [r3, #1]
 286:Generated_Source\PSoC5/RTC_INT.c **** 
 287:Generated_Source\PSoC5/RTC_INT.c ****         /* Clear Sec */
 288:Generated_Source\PSoC5/RTC_INT.c ****         RTC_currentTimeDate.Sec = 0u;
 260              		.loc 1 288 0
 261 0034 944B     		ldr	r3, .L48
 262 0036 0022     		movs	r2, #0
 263 0038 1A70     		strb	r2, [r3]
 289:Generated_Source\PSoC5/RTC_INT.c **** 
 290:Generated_Source\PSoC5/RTC_INT.c ****         if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 264              		.loc 1 290 0
 265 003a 934B     		ldr	r3, .L48
 266 003c 5B78     		ldrb	r3, [r3, #1]
 267 003e DBB2     		uxtb	r3, r3
 268 0040 3B2B     		cmp	r3, #59
 269 0042 40F24682 		bls	.L10
 291:Generated_Source\PSoC5/RTC_INT.c ****         {
 292:Generated_Source\PSoC5/RTC_INT.c ****             /* Inc HOUR */
 293:Generated_Source\PSoC5/RTC_INT.c ****             RTC_currentTimeDate.Hour++;
 270              		.loc 1 293 0
 271 0046 904B     		ldr	r3, .L48
 272 0048 9B78     		ldrb	r3, [r3, #2]
 273 004a DBB2     		uxtb	r3, r3
 274 004c 0133     		adds	r3, r3, #1
 275 004e DAB2     		uxtb	r2, r3
 276 0050 8D4B     		ldr	r3, .L48
 277 0052 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 11


 294:Generated_Source\PSoC5/RTC_INT.c **** 
 295:Generated_Source\PSoC5/RTC_INT.c ****             /* Clear Min */
 296:Generated_Source\PSoC5/RTC_INT.c ****             RTC_currentTimeDate.Min = 0u;
 278              		.loc 1 296 0
 279 0054 8C4B     		ldr	r3, .L48
 280 0056 0022     		movs	r2, #0
 281 0058 5A70     		strb	r2, [r3, #1]
 297:Generated_Source\PSoC5/RTC_INT.c **** 
 298:Generated_Source\PSoC5/RTC_INT.c ****             /* Day roll over */
 299:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 282              		.loc 1 299 0
 283 005a 8B4B     		ldr	r3, .L48
 284 005c 9B78     		ldrb	r3, [r3, #2]
 285 005e DBB2     		uxtb	r3, r3
 286 0060 172B     		cmp	r3, #23
 287 0062 40F2DD81 		bls	.L11
 300:Generated_Source\PSoC5/RTC_INT.c ****             {
 301:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfMonth */
 302:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfMonth++;
 288              		.loc 1 302 0
 289 0066 884B     		ldr	r3, .L48
 290 0068 1B79     		ldrb	r3, [r3, #4]
 291 006a DBB2     		uxtb	r3, r3
 292 006c 0133     		adds	r3, r3, #1
 293 006e DAB2     		uxtb	r2, r3
 294 0070 854B     		ldr	r3, .L48
 295 0072 1A71     		strb	r2, [r3, #4]
 303:Generated_Source\PSoC5/RTC_INT.c **** 
 304:Generated_Source\PSoC5/RTC_INT.c ****                 /* Clear Hour */
 305:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.Hour = 0u;
 296              		.loc 1 305 0
 297 0074 844B     		ldr	r3, .L48
 298 0076 0022     		movs	r2, #0
 299 0078 9A70     		strb	r2, [r3, #2]
 306:Generated_Source\PSoC5/RTC_INT.c **** 
 307:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfYear */
 308:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfYear++;
 300              		.loc 1 308 0
 301 007a 834B     		ldr	r3, .L48
 302 007c DB88     		ldrh	r3, [r3, #6]	@ movhi
 303 007e 9BB2     		uxth	r3, r3
 304 0080 0133     		adds	r3, r3, #1
 305 0082 9AB2     		uxth	r2, r3
 306 0084 804B     		ldr	r3, .L48
 307 0086 DA80     		strh	r2, [r3, #6]	@ movhi
 309:Generated_Source\PSoC5/RTC_INT.c **** 
 310:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfWeek */
 311:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfWeek++;
 308              		.loc 1 311 0
 309 0088 7F4B     		ldr	r3, .L48
 310 008a DB78     		ldrb	r3, [r3, #3]
 311 008c DBB2     		uxtb	r3, r3
 312 008e 0133     		adds	r3, r3, #1
 313 0090 DAB2     		uxtb	r2, r3
 314 0092 7D4B     		ldr	r3, .L48
 315 0094 DA70     		strb	r2, [r3, #3]
 312:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 12


 313:Generated_Source\PSoC5/RTC_INT.c ****                 /* Check DayOfWeek */
 314:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
 316              		.loc 1 314 0
 317 0096 7C4B     		ldr	r3, .L48
 318 0098 DB78     		ldrb	r3, [r3, #3]
 319 009a DBB2     		uxtb	r3, r3
 320 009c 072B     		cmp	r3, #7
 321 009e 02D9     		bls	.L12
 315:Generated_Source\PSoC5/RTC_INT.c ****                 {
 316:Generated_Source\PSoC5/RTC_INT.c ****                     /* start new week */
 317:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.DayOfWeek = 1u;
 322              		.loc 1 317 0
 323 00a0 794B     		ldr	r3, .L48
 324 00a2 0122     		movs	r2, #1
 325 00a4 DA70     		strb	r2, [r3, #3]
 326              	.L12:
 318:Generated_Source\PSoC5/RTC_INT.c ****                 }
 319:Generated_Source\PSoC5/RTC_INT.c **** 
 320:Generated_Source\PSoC5/RTC_INT.c ****                 /* Day of month roll over.
 321:Generated_Source\PSoC5/RTC_INT.c ****                 * Check if day of month greater than 29 in February of leap year or
 322:Generated_Source\PSoC5/RTC_INT.c ****                 * if day of month greater than 28 NOT in February of NON leap year or
 323:Generated_Source\PSoC5/RTC_INT.c ****                 * if day of month greater than it should be in every month in non leap year
 324:Generated_Source\PSoC5/RTC_INT.c ****                 */
 325:Generated_Source\PSoC5/RTC_INT.c ****                 if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 327              		.loc 1 325 0
 328 00a6 794B     		ldr	r3, .L48+4
 329 00a8 1B78     		ldrb	r3, [r3]
 330 00aa DBB2     		uxtb	r3, r3
 331 00ac 03F00203 		and	r3, r3, #2
 332 00b0 002B     		cmp	r3, #0
 333 00b2 11D0     		beq	.L13
 326:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 334              		.loc 1 326 0 discriminator 1
 335 00b4 744B     		ldr	r3, .L48
 336 00b6 1B7A     		ldrb	r3, [r3, #8]
 337 00b8 DBB2     		uxtb	r3, r3
 325:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 338              		.loc 1 325 0 discriminator 1
 339 00ba 022B     		cmp	r3, #2
 340 00bc 0CD1     		bne	.L13
 327:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 341              		.loc 1 327 0
 342 00be 724B     		ldr	r3, .L48
 343 00c0 1B79     		ldrb	r3, [r3, #4]
 344 00c2 DBB2     		uxtb	r3, r3
 345 00c4 1946     		mov	r1, r3
 328:Generated_Source\PSoC5/RTC_INT.c ****                              (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 346              		.loc 1 328 0
 347 00c6 704B     		ldr	r3, .L48
 348 00c8 1B7A     		ldrb	r3, [r3, #8]
 349 00ca DBB2     		uxtb	r3, r3
 350 00cc 013B     		subs	r3, r3, #1
 351 00ce 704A     		ldr	r2, .L48+8
 352 00d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 353 00d2 0133     		adds	r3, r3, #1
 326:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 354              		.loc 1 326 0
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 13


 355 00d4 9942     		cmp	r1, r3
 356 00d6 2AD8     		bhi	.L14
 357              	.L13:
 329:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY))  &&
 358              		.loc 1 329 0
 359 00d8 6C4B     		ldr	r3, .L48+4
 360 00da 1B78     		ldrb	r3, [r3]
 361 00dc DBB2     		uxtb	r3, r3
 362 00de 03F00203 		and	r3, r3, #2
 328:Generated_Source\PSoC5/RTC_INT.c ****                              (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 363              		.loc 1 328 0
 364 00e2 002B     		cmp	r3, #0
 365 00e4 0FD0     		beq	.L15
 330:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month != RTC_FEBRUARY) &&
 366              		.loc 1 330 0
 367 00e6 684B     		ldr	r3, .L48
 368 00e8 1B7A     		ldrb	r3, [r3, #8]
 369 00ea DBB2     		uxtb	r3, r3
 329:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY))  &&
 370              		.loc 1 329 0
 371 00ec 022B     		cmp	r3, #2
 372 00ee 0AD0     		beq	.L15
 331:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 373              		.loc 1 331 0
 374 00f0 654B     		ldr	r3, .L48
 375 00f2 1B79     		ldrb	r3, [r3, #4]
 376 00f4 DAB2     		uxtb	r2, r3
 332:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 377              		.loc 1 332 0
 378 00f6 644B     		ldr	r3, .L48
 379 00f8 1B7A     		ldrb	r3, [r3, #8]
 380 00fa DBB2     		uxtb	r3, r3
 381 00fc 013B     		subs	r3, r3, #1
 382 00fe 6449     		ldr	r1, .L48+8
 383 0100 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 330:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month != RTC_FEBRUARY) &&
 384              		.loc 1 330 0
 385 0102 9A42     		cmp	r2, r3
 386 0104 13D8     		bhi	.L14
 387              	.L15:
 333:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY))  &&
 388              		.loc 1 333 0
 389 0106 614B     		ldr	r3, .L48+4
 390 0108 1B78     		ldrb	r3, [r3]
 391 010a DBB2     		uxtb	r3, r3
 392 010c 03F00203 		and	r3, r3, #2
 332:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 393              		.loc 1 332 0
 394 0110 002B     		cmp	r3, #0
 395 0112 40F0F480 		bne	.L16
 334:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 396              		.loc 1 334 0
 397 0116 5C4B     		ldr	r3, .L48
 398 0118 1B79     		ldrb	r3, [r3, #4]
 399 011a DAB2     		uxtb	r2, r3
 335:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
 400              		.loc 1 335 0
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 14


 401 011c 5A4B     		ldr	r3, .L48
 402 011e 1B7A     		ldrb	r3, [r3, #8]
 403 0120 DBB2     		uxtb	r3, r3
 404 0122 013B     		subs	r3, r3, #1
 405 0124 5A49     		ldr	r1, .L48+8
 406 0126 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 333:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY))  &&
 407              		.loc 1 333 0
 408 0128 9A42     		cmp	r2, r3
 409 012a 40F2E880 		bls	.L16
 410              	.L14:
 336:Generated_Source\PSoC5/RTC_INT.c ****                 {
 337:Generated_Source\PSoC5/RTC_INT.c ****                     /* Inc Month */
 338:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.Month++;
 411              		.loc 1 338 0
 412 012e 564B     		ldr	r3, .L48
 413 0130 1B7A     		ldrb	r3, [r3, #8]
 414 0132 DBB2     		uxtb	r3, r3
 415 0134 0133     		adds	r3, r3, #1
 416 0136 DAB2     		uxtb	r2, r3
 417 0138 534B     		ldr	r3, .L48
 418 013a 1A72     		strb	r2, [r3, #8]
 339:Generated_Source\PSoC5/RTC_INT.c **** 
 340:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set first day of month */
 341:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.DayOfMonth = 1u;
 419              		.loc 1 341 0
 420 013c 524B     		ldr	r3, .L48
 421 013e 0122     		movs	r2, #1
 422 0140 1A71     		strb	r2, [r3, #4]
 342:Generated_Source\PSoC5/RTC_INT.c **** 
 343:Generated_Source\PSoC5/RTC_INT.c ****                     /* Year roll over */
 344:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 423              		.loc 1 344 0
 424 0142 514B     		ldr	r3, .L48
 425 0144 1B7A     		ldrb	r3, [r3, #8]
 426 0146 DBB2     		uxtb	r3, r3
 427 0148 0C2B     		cmp	r3, #12
 428 014a 40F28580 		bls	.L17
 345:Generated_Source\PSoC5/RTC_INT.c ****                     {
 346:Generated_Source\PSoC5/RTC_INT.c ****                         /* Inc Year */
 347:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.Year++;
 429              		.loc 1 347 0
 430 014e 4E4B     		ldr	r3, .L48
 431 0150 5B89     		ldrh	r3, [r3, #10]	@ movhi
 432 0152 9BB2     		uxth	r3, r3
 433 0154 0133     		adds	r3, r3, #1
 434 0156 9AB2     		uxth	r2, r3
 435 0158 4B4B     		ldr	r3, .L48
 436 015a 5A81     		strh	r2, [r3, #10]	@ movhi
 348:Generated_Source\PSoC5/RTC_INT.c **** 
 349:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set first month of year */
 350:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.Month = 1u;
 437              		.loc 1 350 0
 438 015c 4A4B     		ldr	r3, .L48
 439 015e 0122     		movs	r2, #1
 440 0160 1A72     		strb	r2, [r3, #8]
 351:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 15


 352:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set first day of year */
 353:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.DayOfYear = 1u;
 441              		.loc 1 353 0
 442 0162 494B     		ldr	r3, .L48
 443 0164 0122     		movs	r2, #1
 444 0166 DA80     		strh	r2, [r3, #6]	@ movhi
 354:Generated_Source\PSoC5/RTC_INT.c **** 
 355:Generated_Source\PSoC5/RTC_INT.c ****                         /* Is this year leap */
 356:Generated_Source\PSoC5/RTC_INT.c ****                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 445              		.loc 1 356 0
 446 0168 474B     		ldr	r3, .L48
 447 016a 5B89     		ldrh	r3, [r3, #10]	@ movhi
 448 016c 9BB2     		uxth	r3, r3
 449 016e 494A     		ldr	r2, .L48+12
 450 0170 A2FB0312 		umull	r1, r2, r2, r3
 451 0174 D209     		lsrs	r2, r2, #7
 452 0176 4FF4C871 		mov	r1, #400
 453 017a 01FB02F2 		mul	r2, r1, r2
 454 017e 9B1A     		subs	r3, r3, r2
 455 0180 9BB2     		uxth	r3, r3
 456 0182 002B     		cmp	r3, #0
 457 0184 15D0     		beq	.L18
 458              		.loc 1 356 0 is_stmt 0 discriminator 1
 459 0186 404B     		ldr	r3, .L48
 460 0188 5B89     		ldrh	r3, [r3, #10]	@ movhi
 461 018a 9BB2     		uxth	r3, r3
 462 018c 03F00303 		and	r3, r3, #3
 463 0190 9BB2     		uxth	r3, r3
 464 0192 002B     		cmp	r3, #0
 465 0194 16D1     		bne	.L19
 466              		.loc 1 356 0 discriminator 2
 467 0196 3C4B     		ldr	r3, .L48
 468 0198 5B89     		ldrh	r3, [r3, #10]	@ movhi
 469 019a 9BB2     		uxth	r3, r3
 470 019c 3D4A     		ldr	r2, .L48+12
 471 019e A2FB0312 		umull	r1, r2, r2, r3
 472 01a2 5209     		lsrs	r2, r2, #5
 473 01a4 6421     		movs	r1, #100
 474 01a6 01FB02F2 		mul	r2, r1, r2
 475 01aa 9B1A     		subs	r3, r3, r2
 476 01ac 9BB2     		uxth	r3, r3
 477 01ae 002B     		cmp	r3, #0
 478 01b0 08D0     		beq	.L19
 479              	.L18:
 357:Generated_Source\PSoC5/RTC_INT.c ****                         {
 358:Generated_Source\PSoC5/RTC_INT.c ****                             /* Set leap year flag */
 359:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime |= RTC_STATUS_LY;
 480              		.loc 1 359 0 is_stmt 1
 481 01b2 364B     		ldr	r3, .L48+4
 482 01b4 1B78     		ldrb	r3, [r3]
 483 01b6 DBB2     		uxtb	r3, r3
 484 01b8 43F00203 		orr	r3, r3, #2
 485 01bc DAB2     		uxtb	r2, r3
 486 01be 334B     		ldr	r3, .L48+4
 487 01c0 1A70     		strb	r2, [r3]
 488 01c2 07E0     		b	.L20
 489              	.L19:
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 16


 360:Generated_Source\PSoC5/RTC_INT.c ****                         }
 361:Generated_Source\PSoC5/RTC_INT.c ****                         else    /* not leap year */
 362:Generated_Source\PSoC5/RTC_INT.c ****                         {
 363:Generated_Source\PSoC5/RTC_INT.c ****                             /* Clear leap year */
 364:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 490              		.loc 1 364 0
 491 01c4 314B     		ldr	r3, .L48+4
 492 01c6 1B78     		ldrb	r3, [r3]
 493 01c8 DBB2     		uxtb	r3, r3
 494 01ca 23F00203 		bic	r3, r3, #2
 495 01ce DAB2     		uxtb	r2, r3
 496 01d0 2E4B     		ldr	r3, .L48+4
 497 01d2 1A70     		strb	r2, [r3]
 498              	.L20:
 365:Generated_Source\PSoC5/RTC_INT.c ****                         }
 366:Generated_Source\PSoC5/RTC_INT.c **** 
 367:Generated_Source\PSoC5/RTC_INT.c ****                         /* Alarm YEAR */
 368:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 499              		.loc 1 368 0
 500 01d4 304B     		ldr	r3, .L48+16
 501 01d6 1B78     		ldrb	r3, [r3]
 502 01d8 DBB2     		uxtb	r3, r3
 503 01da 5BB2     		sxtb	r3, r3
 504 01dc 002B     		cmp	r3, #0
 505 01de 18DA     		bge	.L21
 369:Generated_Source\PSoC5/RTC_INT.c ****                                                              RTC_ALARM_YEAR_MASK))
 370:Generated_Source\PSoC5/RTC_INT.c ****                         {
 371:Generated_Source\PSoC5/RTC_INT.c ****                             /* Years match */
 372:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 506              		.loc 1 372 0
 507 01e0 2E4B     		ldr	r3, .L48+20
 508 01e2 5B89     		ldrh	r3, [r3, #10]	@ movhi
 509 01e4 9AB2     		uxth	r2, r3
 510 01e6 284B     		ldr	r3, .L48
 511 01e8 5B89     		ldrh	r3, [r3, #10]	@ movhi
 512 01ea 9BB2     		uxth	r3, r3
 513 01ec 9A42     		cmp	r2, r3
 514 01ee 08D1     		bne	.L22
 373:Generated_Source\PSoC5/RTC_INT.c ****                             {
 374:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Rise year alarm */
 375:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 515              		.loc 1 375 0
 516 01f0 2B4B     		ldr	r3, .L48+24
 517 01f2 1B78     		ldrb	r3, [r3]
 518 01f4 DBB2     		uxtb	r3, r3
 519 01f6 63F07F03 		orn	r3, r3, #127
 520 01fa DAB2     		uxtb	r2, r3
 521 01fc 284B     		ldr	r3, .L48+24
 522 01fe 1A70     		strb	r2, [r3]
 523 0200 07E0     		b	.L21
 524              	.L22:
 376:Generated_Source\PSoC5/RTC_INT.c ****                             }
 377:Generated_Source\PSoC5/RTC_INT.c ****                             else    /* Years do not match */
 378:Generated_Source\PSoC5/RTC_INT.c ****                             {
 379:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Clear year alarm */
 380:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 525              		.loc 1 380 0
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 17


 526 0202 274B     		ldr	r3, .L48+24
 527 0204 1B78     		ldrb	r3, [r3]
 528 0206 DBB2     		uxtb	r3, r3
 529 0208 03F07F03 		and	r3, r3, #127
 530 020c DAB2     		uxtb	r2, r3
 531 020e 244B     		ldr	r3, .L48+24
 532 0210 1A70     		strb	r2, [r3]
 533              	.L21:
 381:Generated_Source\PSoC5/RTC_INT.c ****                             }
 382:Generated_Source\PSoC5/RTC_INT.c ****                         } /* do not alarm year */
 383:Generated_Source\PSoC5/RTC_INT.c **** 
 384:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set Alarm flag event */
 385:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_tmp = RTC_alarmCfgMask;
 534              		.loc 1 385 0
 535 0212 214B     		ldr	r3, .L48+16
 536 0214 1B78     		ldrb	r3, [r3]
 537 0216 FB71     		strb	r3, [r7, #7]
 386:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_SET_ALARM(RTC_tmp,
 538              		.loc 1 386 0
 539 0218 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 540 021a 002B     		cmp	r3, #0
 541 021c 13D0     		beq	.L23
 542              		.loc 1 386 0 is_stmt 0 discriminator 1
 543 021e 204B     		ldr	r3, .L48+24
 544 0220 1B78     		ldrb	r3, [r3]
 545 0222 DAB2     		uxtb	r2, r3
 546 0224 FB79     		ldrb	r3, [r7, #7]
 547 0226 1340     		ands	r3, r3, r2
 548 0228 DBB2     		uxtb	r3, r3
 549 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 550 022c 9A42     		cmp	r2, r3
 551 022e 0AD1     		bne	.L23
 552              		.loc 1 386 0 discriminator 2
 553 0230 164B     		ldr	r3, .L48+4
 554 0232 1B78     		ldrb	r3, [r3]
 555 0234 DBB2     		uxtb	r3, r3
 556 0236 43F00803 		orr	r3, r3, #8
 557 023a DAB2     		uxtb	r2, r3
 558 023c 134B     		ldr	r3, .L48+4
 559 023e 1A70     		strb	r2, [r3]
 560 0240 174B     		ldr	r3, .L48+24
 561 0242 0022     		movs	r2, #0
 562 0244 1A70     		strb	r2, [r3]
 563              	.L23:
 387:Generated_Source\PSoC5/RTC_INT.c ****                                                    RTC_alarmCurStatus,
 388:Generated_Source\PSoC5/RTC_INT.c ****                                                    RTC_statusDateTime);
 389:Generated_Source\PSoC5/RTC_INT.c **** 
 390:Generated_Source\PSoC5/RTC_INT.c ****                         /* Every Year */
 391:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 564              		.loc 1 391 0 is_stmt 1
 565 0246 174B     		ldr	r3, .L48+28
 566 0248 1B78     		ldrb	r3, [r3]
 567 024a DBB2     		uxtb	r3, r3
 568 024c 03F04003 		and	r3, r3, #64
 569 0250 002B     		cmp	r3, #0
 570 0252 01D0     		beq	.L17
 392:Generated_Source\PSoC5/RTC_INT.c ****                                                              RTC_INTERVAL_YEAR_MASK))
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 18


 393:Generated_Source\PSoC5/RTC_INT.c ****                         {
 394:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_EveryYearHandler();
 571              		.loc 1 394 0
 572 0254 FFF7FEFF 		bl	RTC_EveryYearHandler
 573              	.L17:
 395:Generated_Source\PSoC5/RTC_INT.c ****                         }
 396:Generated_Source\PSoC5/RTC_INT.c **** 
 397:Generated_Source\PSoC5/RTC_INT.c ****                     } /* Month > 12 */
 398:Generated_Source\PSoC5/RTC_INT.c **** 
 399:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm MONTH */
 400:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 574              		.loc 1 400 0
 575 0258 0F4B     		ldr	r3, .L48+16
 576 025a 1B78     		ldrb	r3, [r3]
 577 025c DBB2     		uxtb	r3, r3
 578 025e 03F04003 		and	r3, r3, #64
 579 0262 002B     		cmp	r3, #0
 580 0264 28D0     		beq	.L24
 401:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_MONTH_MASK))
 402:Generated_Source\PSoC5/RTC_INT.c ****                     {
 403:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 581              		.loc 1 403 0
 582 0266 0D4B     		ldr	r3, .L48+20
 583 0268 1B7A     		ldrb	r3, [r3, #8]
 584 026a DAB2     		uxtb	r2, r3
 585 026c 064B     		ldr	r3, .L48
 586 026e 1B7A     		ldrb	r3, [r3, #8]
 587 0270 DBB2     		uxtb	r3, r3
 588 0272 9A42     		cmp	r2, r3
 589 0274 18D1     		bne	.L25
 404:Generated_Source\PSoC5/RTC_INT.c ****                         {
 405:Generated_Source\PSoC5/RTC_INT.c ****                             /* Set month alarm */
 406:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 590              		.loc 1 406 0
 591 0276 0A4B     		ldr	r3, .L48+24
 592 0278 1B78     		ldrb	r3, [r3]
 593 027a DBB2     		uxtb	r3, r3
 594 027c 43F04003 		orr	r3, r3, #64
 595 0280 DAB2     		uxtb	r2, r3
 596 0282 074B     		ldr	r3, .L48+24
 597 0284 1A70     		strb	r2, [r3]
 598 0286 17E0     		b	.L24
 599              	.L49:
 600              		.align	2
 601              	.L48:
 602 0288 00000000 		.word	RTC_currentTimeDate
 603 028c 00000000 		.word	RTC_statusDateTime
 604 0290 00000000 		.word	RTC_daysInMonths
 605 0294 1F85EB51 		.word	1374389535
 606 0298 00000000 		.word	RTC_alarmCfgMask
 607 029c 00000000 		.word	RTC_alarmCfgTimeDate
 608 02a0 00000000 		.word	RTC_alarmCurStatus
 609 02a4 00000000 		.word	RTC_intervalCfgMask
 610              	.L25:
 407:Generated_Source\PSoC5/RTC_INT.c ****                         }
 408:Generated_Source\PSoC5/RTC_INT.c ****                         else
 409:Generated_Source\PSoC5/RTC_INT.c ****                         {
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 19


 410:Generated_Source\PSoC5/RTC_INT.c ****                             /* Clear month alarm */
 411:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 611              		.loc 1 411 0
 612 02a8 964B     		ldr	r3, .L50
 613 02aa 1B78     		ldrb	r3, [r3]
 614 02ac DBB2     		uxtb	r3, r3
 615 02ae 23F04003 		bic	r3, r3, #64
 616 02b2 DAB2     		uxtb	r2, r3
 617 02b4 934B     		ldr	r3, .L50
 618 02b6 1A70     		strb	r2, [r3]
 619              	.L24:
 412:Generated_Source\PSoC5/RTC_INT.c ****                         }
 413:Generated_Source\PSoC5/RTC_INT.c ****                     }   /* Month alarm is masked */
 414:Generated_Source\PSoC5/RTC_INT.c **** 
 415:Generated_Source\PSoC5/RTC_INT.c ****                     #if (1u == RTC_DST_FUNC_ENABLE)
 416:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
 417:Generated_Source\PSoC5/RTC_INT.c ****                         {
 418:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus |= RTC_DST_MONTH;
 419:Generated_Source\PSoC5/RTC_INT.c ****                         }
 420:Generated_Source\PSoC5/RTC_INT.c ****                         else
 421:Generated_Source\PSoC5/RTC_INT.c ****                         {
 422:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
 423:Generated_Source\PSoC5/RTC_INT.c ****                         }
 424:Generated_Source\PSoC5/RTC_INT.c **** 
 425:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_dstTimeDateStart.Month == RTC_currentTimeDate.Month)
 426:Generated_Source\PSoC5/RTC_INT.c ****                         {
 427:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus |= RTC_DST_MONTH;
 428:Generated_Source\PSoC5/RTC_INT.c ****                         }
 429:Generated_Source\PSoC5/RTC_INT.c ****                         else
 430:Generated_Source\PSoC5/RTC_INT.c ****                         {
 431:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus &= (uint8)(~RTC_DST_MONTH);
 432:Generated_Source\PSoC5/RTC_INT.c ****                         }
 433:Generated_Source\PSoC5/RTC_INT.c ****                     #endif /* 1u == RTC_DST_FUNC_ENABLE */
 434:Generated_Source\PSoC5/RTC_INT.c **** 
 435:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set Alarm flag event */
 436:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_tmp = RTC_alarmCfgMask;
 620              		.loc 1 436 0
 621 02b8 934B     		ldr	r3, .L50+4
 622 02ba 1B78     		ldrb	r3, [r3]
 623 02bc FB71     		strb	r3, [r7, #7]
 437:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_SET_ALARM(RTC_tmp,
 624              		.loc 1 437 0
 625 02be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 626 02c0 002B     		cmp	r3, #0
 627 02c2 13D0     		beq	.L26
 628              		.loc 1 437 0 is_stmt 0 discriminator 1
 629 02c4 8F4B     		ldr	r3, .L50
 630 02c6 1B78     		ldrb	r3, [r3]
 631 02c8 DAB2     		uxtb	r2, r3
 632 02ca FB79     		ldrb	r3, [r7, #7]
 633 02cc 1340     		ands	r3, r3, r2
 634 02ce DBB2     		uxtb	r3, r3
 635 02d0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 636 02d2 9A42     		cmp	r2, r3
 637 02d4 0AD1     		bne	.L26
 638              		.loc 1 437 0 discriminator 2
 639 02d6 8D4B     		ldr	r3, .L50+8
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 20


 640 02d8 1B78     		ldrb	r3, [r3]
 641 02da DBB2     		uxtb	r3, r3
 642 02dc 43F00803 		orr	r3, r3, #8
 643 02e0 DAB2     		uxtb	r2, r3
 644 02e2 8A4B     		ldr	r3, .L50+8
 645 02e4 1A70     		strb	r2, [r3]
 646 02e6 874B     		ldr	r3, .L50
 647 02e8 0022     		movs	r2, #0
 648 02ea 1A70     		strb	r2, [r3]
 649              	.L26:
 438:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_alarmCurStatus,
 439:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_statusDateTime);
 440:Generated_Source\PSoC5/RTC_INT.c **** 
 441:Generated_Source\PSoC5/RTC_INT.c ****                     /* Every Month */
 442:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 650              		.loc 1 442 0 is_stmt 1
 651 02ec 884B     		ldr	r3, .L50+12
 652 02ee 1B78     		ldrb	r3, [r3]
 653 02f0 DBB2     		uxtb	r3, r3
 654 02f2 03F02003 		and	r3, r3, #32
 655 02f6 002B     		cmp	r3, #0
 656 02f8 01D0     		beq	.L16
 443:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_INTERVAL_MONTH_MASK))
 444:Generated_Source\PSoC5/RTC_INT.c ****                     {
 445:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_EveryMonthHandler();
 657              		.loc 1 445 0
 658 02fa FFF7FEFF 		bl	RTC_EveryMonthHandler
 659              	.L16:
 446:Generated_Source\PSoC5/RTC_INT.c ****                     }
 447:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day roll over */
 448:Generated_Source\PSoC5/RTC_INT.c **** 
 449:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFWEEK */
 450:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 660              		.loc 1 450 0
 661 02fe 824B     		ldr	r3, .L50+4
 662 0300 1B78     		ldrb	r3, [r3]
 663 0302 DBB2     		uxtb	r3, r3
 664 0304 03F00803 		and	r3, r3, #8
 665 0308 002B     		cmp	r3, #0
 666 030a 18D0     		beq	.L27
 451:Generated_Source\PSoC5/RTC_INT.c ****                                                      RTC_ALARM_DAYOFWEEK_MASK))
 452:Generated_Source\PSoC5/RTC_INT.c ****                 {
 453:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 667              		.loc 1 453 0
 668 030c 814B     		ldr	r3, .L50+16
 669 030e DB78     		ldrb	r3, [r3, #3]
 670 0310 DAB2     		uxtb	r2, r3
 671 0312 814B     		ldr	r3, .L50+20
 672 0314 DB78     		ldrb	r3, [r3, #3]
 673 0316 DBB2     		uxtb	r3, r3
 674 0318 9A42     		cmp	r2, r3
 675 031a 08D1     		bne	.L28
 454:Generated_Source\PSoC5/RTC_INT.c ****                     {
 455:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of week alarm */
 456:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 676              		.loc 1 456 0
 677 031c 794B     		ldr	r3, .L50
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 21


 678 031e 1B78     		ldrb	r3, [r3]
 679 0320 DBB2     		uxtb	r3, r3
 680 0322 43F00803 		orr	r3, r3, #8
 681 0326 DAB2     		uxtb	r2, r3
 682 0328 764B     		ldr	r3, .L50
 683 032a 1A70     		strb	r2, [r3]
 684 032c 07E0     		b	.L27
 685              	.L28:
 457:Generated_Source\PSoC5/RTC_INT.c ****                     }
 458:Generated_Source\PSoC5/RTC_INT.c ****                     else
 459:Generated_Source\PSoC5/RTC_INT.c ****                     {
 460:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of week alarm */
 461:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 686              		.loc 1 461 0
 687 032e 754B     		ldr	r3, .L50
 688 0330 1B78     		ldrb	r3, [r3]
 689 0332 DBB2     		uxtb	r3, r3
 690 0334 23F00803 		bic	r3, r3, #8
 691 0338 DAB2     		uxtb	r2, r3
 692 033a 724B     		ldr	r3, .L50
 693 033c 1A70     		strb	r2, [r3]
 694              	.L27:
 462:Generated_Source\PSoC5/RTC_INT.c ****                     }
 463:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of week alarm is masked */
 464:Generated_Source\PSoC5/RTC_INT.c **** 
 465:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFYEAR */
 466:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 695              		.loc 1 466 0
 696 033e 724B     		ldr	r3, .L50+4
 697 0340 1B78     		ldrb	r3, [r3]
 698 0342 DBB2     		uxtb	r3, r3
 699 0344 03F02003 		and	r3, r3, #32
 700 0348 002B     		cmp	r3, #0
 701 034a 18D0     		beq	.L29
 467:Generated_Source\PSoC5/RTC_INT.c ****                                                      RTC_ALARM_DAYOFYEAR_MASK))
 468:Generated_Source\PSoC5/RTC_INT.c ****                 {
 469:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 702              		.loc 1 469 0
 703 034c 714B     		ldr	r3, .L50+16
 704 034e DB88     		ldrh	r3, [r3, #6]	@ movhi
 705 0350 9AB2     		uxth	r2, r3
 706 0352 714B     		ldr	r3, .L50+20
 707 0354 DB88     		ldrh	r3, [r3, #6]	@ movhi
 708 0356 9BB2     		uxth	r3, r3
 709 0358 9A42     		cmp	r2, r3
 710 035a 08D1     		bne	.L30
 470:Generated_Source\PSoC5/RTC_INT.c ****                     {
 471:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of year alarm */
 472:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 711              		.loc 1 472 0
 712 035c 694B     		ldr	r3, .L50
 713 035e 1B78     		ldrb	r3, [r3]
 714 0360 DBB2     		uxtb	r3, r3
 715 0362 43F02003 		orr	r3, r3, #32
 716 0366 DAB2     		uxtb	r2, r3
 717 0368 664B     		ldr	r3, .L50
 718 036a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 22


 719 036c 07E0     		b	.L29
 720              	.L30:
 473:Generated_Source\PSoC5/RTC_INT.c ****                     }
 474:Generated_Source\PSoC5/RTC_INT.c ****                     else
 475:Generated_Source\PSoC5/RTC_INT.c ****                     {
 476:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of year alarm */
 477:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 721              		.loc 1 477 0
 722 036e 654B     		ldr	r3, .L50
 723 0370 1B78     		ldrb	r3, [r3]
 724 0372 DBB2     		uxtb	r3, r3
 725 0374 23F02003 		bic	r3, r3, #32
 726 0378 DAB2     		uxtb	r2, r3
 727 037a 624B     		ldr	r3, .L50
 728 037c 1A70     		strb	r2, [r3]
 729              	.L29:
 478:Generated_Source\PSoC5/RTC_INT.c ****                     }
 479:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of year alarm is masked */
 480:Generated_Source\PSoC5/RTC_INT.c **** 
 481:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFMONTH */
 482:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 730              		.loc 1 482 0
 731 037e 624B     		ldr	r3, .L50+4
 732 0380 1B78     		ldrb	r3, [r3]
 733 0382 DBB2     		uxtb	r3, r3
 734 0384 03F01003 		and	r3, r3, #16
 735 0388 002B     		cmp	r3, #0
 736 038a 18D0     		beq	.L31
 483:Generated_Source\PSoC5/RTC_INT.c ****                          RTC_ALARM_DAYOFMONTH_MASK))
 484:Generated_Source\PSoC5/RTC_INT.c ****                 {
 485:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 737              		.loc 1 485 0
 738 038c 614B     		ldr	r3, .L50+16
 739 038e 1B79     		ldrb	r3, [r3, #4]
 740 0390 DAB2     		uxtb	r2, r3
 741 0392 614B     		ldr	r3, .L50+20
 742 0394 1B79     		ldrb	r3, [r3, #4]
 743 0396 DBB2     		uxtb	r3, r3
 744 0398 9A42     		cmp	r2, r3
 745 039a 08D1     		bne	.L32
 486:Generated_Source\PSoC5/RTC_INT.c ****                     {
 487:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of month alarm */
 488:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 746              		.loc 1 488 0
 747 039c 594B     		ldr	r3, .L50
 748 039e 1B78     		ldrb	r3, [r3]
 749 03a0 DBB2     		uxtb	r3, r3
 750 03a2 43F01003 		orr	r3, r3, #16
 751 03a6 DAB2     		uxtb	r2, r3
 752 03a8 564B     		ldr	r3, .L50
 753 03aa 1A70     		strb	r2, [r3]
 754 03ac 07E0     		b	.L31
 755              	.L32:
 489:Generated_Source\PSoC5/RTC_INT.c ****                     }
 490:Generated_Source\PSoC5/RTC_INT.c ****                     else
 491:Generated_Source\PSoC5/RTC_INT.c ****                     {
 492:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of month alarm */
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 23


 493:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 756              		.loc 1 493 0
 757 03ae 554B     		ldr	r3, .L50
 758 03b0 1B78     		ldrb	r3, [r3]
 759 03b2 DBB2     		uxtb	r3, r3
 760 03b4 23F01003 		bic	r3, r3, #16
 761 03b8 DAB2     		uxtb	r2, r3
 762 03ba 524B     		ldr	r3, .L50
 763 03bc 1A70     		strb	r2, [r3]
 764              	.L31:
 494:Generated_Source\PSoC5/RTC_INT.c ****                     }
 495:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of month alarm is masked */
 496:Generated_Source\PSoC5/RTC_INT.c **** 
 497:Generated_Source\PSoC5/RTC_INT.c ****                 #if (1u == RTC_DST_FUNC_ENABLE)
 498:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_dstTimeDateStop.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 499:Generated_Source\PSoC5/RTC_INT.c ****                     {
 500:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
 501:Generated_Source\PSoC5/RTC_INT.c ****                     }
 502:Generated_Source\PSoC5/RTC_INT.c ****                     else
 503:Generated_Source\PSoC5/RTC_INT.c ****                     {
 504:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 505:Generated_Source\PSoC5/RTC_INT.c ****                     }
 506:Generated_Source\PSoC5/RTC_INT.c **** 
 507:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_dstTimeDateStart.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 508:Generated_Source\PSoC5/RTC_INT.c ****                     {
 509:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStartStatus |= RTC_DST_DAYOFMONTH;
 510:Generated_Source\PSoC5/RTC_INT.c ****                     }
 511:Generated_Source\PSoC5/RTC_INT.c ****                     else
 512:Generated_Source\PSoC5/RTC_INT.c ****                     {
 513:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStartStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 514:Generated_Source\PSoC5/RTC_INT.c ****                     }
 515:Generated_Source\PSoC5/RTC_INT.c ****                 #endif /* 1u == RTC_DST_FUNC_ENABLE */
 516:Generated_Source\PSoC5/RTC_INT.c **** 
 517:Generated_Source\PSoC5/RTC_INT.c ****                 /* Set Alarm flag event */
 518:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_tmp = RTC_alarmCfgMask;
 765              		.loc 1 518 0
 766 03be 524B     		ldr	r3, .L50+4
 767 03c0 1B78     		ldrb	r3, [r3]
 768 03c2 FB71     		strb	r3, [r7, #7]
 519:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_SET_ALARM(RTC_tmp,
 769              		.loc 1 519 0
 770 03c4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 771 03c6 002B     		cmp	r3, #0
 772 03c8 13D0     		beq	.L33
 773              		.loc 1 519 0 is_stmt 0 discriminator 1
 774 03ca 4E4B     		ldr	r3, .L50
 775 03cc 1B78     		ldrb	r3, [r3]
 776 03ce DAB2     		uxtb	r2, r3
 777 03d0 FB79     		ldrb	r3, [r7, #7]
 778 03d2 1340     		ands	r3, r3, r2
 779 03d4 DBB2     		uxtb	r3, r3
 780 03d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 781 03d8 9A42     		cmp	r2, r3
 782 03da 0AD1     		bne	.L33
 783              		.loc 1 519 0 discriminator 2
 784 03dc 4B4B     		ldr	r3, .L50+8
 785 03de 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 24


 786 03e0 DBB2     		uxtb	r3, r3
 787 03e2 43F00803 		orr	r3, r3, #8
 788 03e6 DAB2     		uxtb	r2, r3
 789 03e8 484B     		ldr	r3, .L50+8
 790 03ea 1A70     		strb	r2, [r3]
 791 03ec 454B     		ldr	r3, .L50
 792 03ee 0022     		movs	r2, #0
 793 03f0 1A70     		strb	r2, [r3]
 794              	.L33:
 520:Generated_Source\PSoC5/RTC_INT.c ****                                            RTC_alarmCurStatus,
 521:Generated_Source\PSoC5/RTC_INT.c ****                                            RTC_statusDateTime);
 522:Generated_Source\PSoC5/RTC_INT.c **** 
 523:Generated_Source\PSoC5/RTC_INT.c ****                 /* Every Day */
 524:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 795              		.loc 1 524 0 is_stmt 1
 796 03f2 474B     		ldr	r3, .L50+12
 797 03f4 1B78     		ldrb	r3, [r3]
 798 03f6 DBB2     		uxtb	r3, r3
 799 03f8 03F00803 		and	r3, r3, #8
 800 03fc 002B     		cmp	r3, #0
 801 03fe 01D0     		beq	.L34
 525:Generated_Source\PSoC5/RTC_INT.c ****                          RTC_INTERVAL_DAY_MASK))
 526:Generated_Source\PSoC5/RTC_INT.c ****                 {
 527:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_EveryDayHandler();
 802              		.loc 1 527 0
 803 0400 FFF7FEFF 		bl	RTC_EveryDayHandler
 804              	.L34:
 528:Generated_Source\PSoC5/RTC_INT.c ****                 }
 529:Generated_Source\PSoC5/RTC_INT.c **** 
 530:Generated_Source\PSoC5/RTC_INT.c ****                 if(1u == RTC_currentTimeDate.DayOfWeek)
 805              		.loc 1 530 0
 806 0404 444B     		ldr	r3, .L50+20
 807 0406 DB78     		ldrb	r3, [r3, #3]
 808 0408 DBB2     		uxtb	r3, r3
 809 040a 012B     		cmp	r3, #1
 810 040c 08D1     		bne	.L11
 531:Generated_Source\PSoC5/RTC_INT.c ****                 {
 532:Generated_Source\PSoC5/RTC_INT.c ****                     /* Every Week */
 533:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 811              		.loc 1 533 0
 812 040e 404B     		ldr	r3, .L50+12
 813 0410 1B78     		ldrb	r3, [r3]
 814 0412 DBB2     		uxtb	r3, r3
 815 0414 03F01003 		and	r3, r3, #16
 816 0418 002B     		cmp	r3, #0
 817 041a 01D0     		beq	.L11
 534:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_INTERVAL_WEEK_MASK))
 535:Generated_Source\PSoC5/RTC_INT.c ****                     {
 536:Generated_Source\PSoC5/RTC_INT.c ****                        RTC_EveryWeekHandler();
 818              		.loc 1 536 0
 819 041c FFF7FEFF 		bl	RTC_EveryWeekHandler
 820              	.L11:
 537:Generated_Source\PSoC5/RTC_INT.c ****                     }
 538:Generated_Source\PSoC5/RTC_INT.c ****                 }
 539:Generated_Source\PSoC5/RTC_INT.c **** 
 540:Generated_Source\PSoC5/RTC_INT.c ****             } /* End of day roll over */
 541:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 25


 542:Generated_Source\PSoC5/RTC_INT.c ****             /* Status set PM/AM flag */
 543:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 821              		.loc 1 543 0
 822 0420 3D4B     		ldr	r3, .L50+20
 823 0422 9B78     		ldrb	r3, [r3, #2]
 824 0424 DBB2     		uxtb	r3, r3
 825 0426 0B2B     		cmp	r3, #11
 826 0428 08D8     		bhi	.L35
 544:Generated_Source\PSoC5/RTC_INT.c ****             {
 545:Generated_Source\PSoC5/RTC_INT.c ****                 /* AM Hour 00:00-11:59, flag zero */
 546:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 827              		.loc 1 546 0
 828 042a 384B     		ldr	r3, .L50+8
 829 042c 1B78     		ldrb	r3, [r3]
 830 042e DBB2     		uxtb	r3, r3
 831 0430 23F00403 		bic	r3, r3, #4
 832 0434 DAB2     		uxtb	r2, r3
 833 0436 354B     		ldr	r3, .L50+8
 834 0438 1A70     		strb	r2, [r3]
 835 043a 07E0     		b	.L36
 836              	.L35:
 547:Generated_Source\PSoC5/RTC_INT.c ****             }
 548:Generated_Source\PSoC5/RTC_INT.c ****             else
 549:Generated_Source\PSoC5/RTC_INT.c ****             {
 550:Generated_Source\PSoC5/RTC_INT.c ****                 /* PM Hour 12:00-23:59, flag set */
 551:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_statusDateTime |= RTC_STATUS_AM_PM;
 837              		.loc 1 551 0
 838 043c 334B     		ldr	r3, .L50+8
 839 043e 1B78     		ldrb	r3, [r3]
 840 0440 DBB2     		uxtb	r3, r3
 841 0442 43F00403 		orr	r3, r3, #4
 842 0446 DAB2     		uxtb	r2, r3
 843 0448 304B     		ldr	r3, .L50+8
 844 044a 1A70     		strb	r2, [r3]
 845              	.L36:
 552:Generated_Source\PSoC5/RTC_INT.c ****             }
 553:Generated_Source\PSoC5/RTC_INT.c **** 
 554:Generated_Source\PSoC5/RTC_INT.c ****             #if (1u == RTC_DST_FUNC_ENABLE)
 555:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_dstTimeDateStop.Hour == RTC_currentTimeDate.Hour)
 556:Generated_Source\PSoC5/RTC_INT.c ****                 {
 557:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStopStatus |= RTC_DST_HOUR;
 558:Generated_Source\PSoC5/RTC_INT.c ****                 }
 559:Generated_Source\PSoC5/RTC_INT.c ****                 else
 560:Generated_Source\PSoC5/RTC_INT.c ****                 {
 561:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStopStatus &= (uint8)(~RTC_DST_HOUR);
 562:Generated_Source\PSoC5/RTC_INT.c ****                 }
 563:Generated_Source\PSoC5/RTC_INT.c **** 
 564:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_dstTimeDateStart.Hour == RTC_currentTimeDate.Hour)
 565:Generated_Source\PSoC5/RTC_INT.c ****                 {
 566:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStartStatus |= RTC_DST_HOUR;
 567:Generated_Source\PSoC5/RTC_INT.c ****                 }
 568:Generated_Source\PSoC5/RTC_INT.c ****                 else
 569:Generated_Source\PSoC5/RTC_INT.c ****                 {
 570:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_dstStartStatus &= (uint8)(~RTC_DST_HOUR);
 571:Generated_Source\PSoC5/RTC_INT.c ****                 }
 572:Generated_Source\PSoC5/RTC_INT.c **** 
 573:Generated_Source\PSoC5/RTC_INT.c ****                 /* DST Enable ? */
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 26


 574:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_dstModeType, RTC_DST_ENABLE))
 575:Generated_Source\PSoC5/RTC_INT.c ****                 {
 576:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_statusDateTime, RTC_STATUS_DST))
 577:Generated_Source\PSoC5/RTC_INT.c ****                     {
 578:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_dstStopStatus, RTC_DST_HOUR |
 579:Generated_Source\PSoC5/RTC_INT.c ****                                                        RTC_DST_DAYOFMONTH | RTC_DST_MONTH))
 580:Generated_Source\PSoC5/RTC_INT.c ****                         {
 581:Generated_Source\PSoC5/RTC_INT.c ****                             /* Substruct from current value of minutes, number of minutes
 582:Generated_Source\PSoC5/RTC_INT.c ****                             * in DST offset which is out of complete hour
 583:Generated_Source\PSoC5/RTC_INT.c ****                             */
 584:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Min -=
 585:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 586:Generated_Source\PSoC5/RTC_INT.c **** 
 587:Generated_Source\PSoC5/RTC_INT.c ****                             /* Is minute value negative? */
 588:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 589:Generated_Source\PSoC5/RTC_INT.c ****                             {
 590:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Convert to the positive.
 591:Generated_Source\PSoC5/RTC_INT.c ****                                 * HOUR_ELAPSED -     (~currentTimeDate.Min    ) ==
 592:Generated_Source\PSoC5/RTC_INT.c ****                                 * HOUR_ELAPSED + 1 - (~currentTimeDate.Min + 1)
 593:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 594:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Min = RTC_HOUR_ELAPSED -
 595:Generated_Source\PSoC5/RTC_INT.c ****                                                              ((uint8)(~RTC_currentTimeDate.Min));
 596:Generated_Source\PSoC5/RTC_INT.c **** 
 597:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour--;
 598:Generated_Source\PSoC5/RTC_INT.c ****                             }
 599:Generated_Source\PSoC5/RTC_INT.c **** 
 600:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Hour -= RTC_dstOffsetMin /
 601:Generated_Source\PSoC5/RTC_INT.c ****                                                                      (RTC_HOUR_ELAPSED + 1u);
 602:Generated_Source\PSoC5/RTC_INT.c **** 
 603:Generated_Source\PSoC5/RTC_INT.c ****                             /* Day roll over
 604:Generated_Source\PSoC5/RTC_INT.c ****                             * Is hour value negative? */
 605:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 606:Generated_Source\PSoC5/RTC_INT.c ****                             {
 607:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Convert to the positive.
 608:Generated_Source\PSoC5/RTC_INT.c ****                                 * DAY_ELAPSED - (~currentTimeDate.Hour) ==
 609:Generated_Source\PSoC5/RTC_INT.c ****                                 * DAY_ELAPSED + 1 - (~currentTimeDate.Hour + 1)
 610:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 611:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour = RTC_DAY_ELAPSED -
 612:Generated_Source\PSoC5/RTC_INT.c ****                                                               ((uint8)(~RTC_currentTimeDate.Hour));
 613:Generated_Source\PSoC5/RTC_INT.c **** 
 614:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Status set PM/AM flag */
 615:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 616:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 617:Generated_Source\PSoC5/RTC_INT.c ****                                     /* AM Hour 00:00-11:59, flag zero */
 618:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 619:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 620:Generated_Source\PSoC5/RTC_INT.c ****                                 else
 621:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 622:Generated_Source\PSoC5/RTC_INT.c ****                                     /* PM Hour 12:00-23:59, flag set */
 623:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime |= RTC_STATUS_AM_PM;
 624:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 625:Generated_Source\PSoC5/RTC_INT.c **** 
 626:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfMonth--;
 627:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfYear--;
 628:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfWeek--;
 629:Generated_Source\PSoC5/RTC_INT.c **** 
 630:Generated_Source\PSoC5/RTC_INT.c ****                                 if(0u == RTC_currentTimeDate.DayOfWeek)
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 27


 631:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 632:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfWeek = RTC_DAYS_IN_WEEK;
 633:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 634:Generated_Source\PSoC5/RTC_INT.c **** 
 635:Generated_Source\PSoC5/RTC_INT.c ****                                 if(0u == RTC_currentTimeDate.DayOfMonth)
 636:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 637:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.Month--;
 638:Generated_Source\PSoC5/RTC_INT.c ****                                     if(0u == RTC_currentTimeDate.Month)
 639:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 640:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Month = RTC_DECEMBER;
 641:Generated_Source\PSoC5/RTC_INT.c **** 
 642:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.DayOfMonth =
 643:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 644:Generated_Source\PSoC5/RTC_INT.c **** 
 645:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Year--;
 646:Generated_Source\PSoC5/RTC_INT.c **** 
 647:Generated_Source\PSoC5/RTC_INT.c ****                                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 648:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 649:Generated_Source\PSoC5/RTC_INT.c ****                                             /* LP - true, else - false */
 650:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime |= RTC_STATUS_LY;
 651:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfYear =
 652:Generated_Source\PSoC5/RTC_INT.c ****                                                                                     RTC_DAYS_IN_LEA
 653:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 654:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 655:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 656:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 657:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfYear = RTC_DAYS_IN_YEAR;
 658:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 659:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_EveryYearHandler();
 660:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 661:Generated_Source\PSoC5/RTC_INT.c ****                                     else
 662:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 663:Generated_Source\PSoC5/RTC_INT.c ****                                         /* Day of month roll over.
 664:Generated_Source\PSoC5/RTC_INT.c ****                                         * Check if day of month February 29 of leap year
 665:Generated_Source\PSoC5/RTC_INT.c ****                                         */
 666:Generated_Source\PSoC5/RTC_INT.c ****                                         if((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 667:Generated_Source\PSoC5/RTC_INT.c ****                                             (RTC_currentTimeDate.Month == RTC_FEBRUARY))
 668:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 669:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfMonth =
 670:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u]
 671:Generated_Source\PSoC5/RTC_INT.c ****                                             + 1u;
 672:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 673:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 674:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 675:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfMonth =
 676:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 677:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 678:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 679:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_EveryMonthHandler();
 680:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 681:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_EveryDayHandler();
 682:Generated_Source\PSoC5/RTC_INT.c ****                             }
 683:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_DST);
 684:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus = 0u;
 685:Generated_Source\PSoC5/RTC_INT.c ****                         }
 686:Generated_Source\PSoC5/RTC_INT.c ****                     }
 687:Generated_Source\PSoC5/RTC_INT.c ****                     else
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 28


 688:Generated_Source\PSoC5/RTC_INT.c ****                     {
 689:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_dstStartStatus,
 690:Generated_Source\PSoC5/RTC_INT.c ****                                                       (RTC_DST_HOUR | RTC_DST_DAYOFMONTH |
 691:Generated_Source\PSoC5/RTC_INT.c ****                                                        RTC_DST_MONTH)))
 692:Generated_Source\PSoC5/RTC_INT.c ****                         {
 693:Generated_Source\PSoC5/RTC_INT.c ****                             /* Add Hour and Min */
 694:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Min +=
 695:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 696:Generated_Source\PSoC5/RTC_INT.c **** 
 697:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 698:Generated_Source\PSoC5/RTC_INT.c ****                             {
 699:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Adjust Min */
 700:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Min -= (RTC_HOUR_ELAPSED + 1u);
 701:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour++;
 702:Generated_Source\PSoC5/RTC_INT.c ****                             }
 703:Generated_Source\PSoC5/RTC_INT.c **** 
 704:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Hour += RTC_dstOffsetMin /
 705:Generated_Source\PSoC5/RTC_INT.c ****                                                                      (RTC_HOUR_ELAPSED + 1u);
 706:Generated_Source\PSoC5/RTC_INT.c **** 
 707:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 708:Generated_Source\PSoC5/RTC_INT.c ****                             {
 709:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Adjust hour, add day */
 710:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour -= (RTC_DAY_ELAPSED + 1u);
 711:Generated_Source\PSoC5/RTC_INT.c **** 
 712:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Status set PM/AM flag */
 713:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 714:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 715:Generated_Source\PSoC5/RTC_INT.c ****                                     /* AM Hour 00:00-11:59, flag zero */
 716:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 717:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 718:Generated_Source\PSoC5/RTC_INT.c ****                                 else
 719:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 720:Generated_Source\PSoC5/RTC_INT.c ****                                     /* PM Hour 12:00-23:59, flag set */
 721:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime |= RTC_STATUS_AM_PM;
 722:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 723:Generated_Source\PSoC5/RTC_INT.c **** 
 724:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfMonth++;
 725:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfYear++;
 726:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfWeek++;
 727:Generated_Source\PSoC5/RTC_INT.c **** 
 728:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
 729:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 730:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfWeek = 1u;
 731:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 732:Generated_Source\PSoC5/RTC_INT.c **** 
 733:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Day of month roll over.
 734:Generated_Source\PSoC5/RTC_INT.c ****                                 * Check if day of month greater than 29 in February of leap year or
 735:Generated_Source\PSoC5/RTC_INT.c ****                                 * if day of month greater than 28 NOT in February of NON leap year 
 736:Generated_Source\PSoC5/RTC_INT.c ****                                 * if day of month greater than it should be in every month in non l
 737:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 738:Generated_Source\PSoC5/RTC_INT.c ****                                 if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 739:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 740:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 741:Generated_Source\PSoC5/RTC_INT.c ****                                   (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 742:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 743:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month != RTC_FEBRUARY)  &&
 744:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 29


 745:Generated_Source\PSoC5/RTC_INT.c ****                                      RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 746:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY)) &&
 747:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 748:Generated_Source\PSoC5/RTC_INT.c ****                                      RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
 749:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 750:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.Month++;
 751:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfMonth = 1u;
 752:Generated_Source\PSoC5/RTC_INT.c ****                                     if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 753:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 754:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Month = RTC_JANUARY;
 755:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Year++;
 756:Generated_Source\PSoC5/RTC_INT.c **** 
 757:Generated_Source\PSoC5/RTC_INT.c ****                                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 758:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 759:Generated_Source\PSoC5/RTC_INT.c ****                                             /* LP - true, else - false */
 760:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime |= RTC_STATUS_LY;
 761:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 762:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 763:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 764:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 765:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 766:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.DayOfYear = 1u;
 767:Generated_Source\PSoC5/RTC_INT.c **** 
 768:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_EveryYearHandler();
 769:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 770:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_EveryMonthHandler();
 771:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 772:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_EveryDayHandler();
 773:Generated_Source\PSoC5/RTC_INT.c ****                             }
 774:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime |= RTC_STATUS_DST;
 775:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus = 0u;
 776:Generated_Source\PSoC5/RTC_INT.c **** 
 777:Generated_Source\PSoC5/RTC_INT.c ****                             /* Month */
 778:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
 779:Generated_Source\PSoC5/RTC_INT.c ****                             {
 780:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus |= RTC_DST_MONTH;
 781:Generated_Source\PSoC5/RTC_INT.c ****                             }
 782:Generated_Source\PSoC5/RTC_INT.c ****                             else
 783:Generated_Source\PSoC5/RTC_INT.c ****                             {
 784:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
 785:Generated_Source\PSoC5/RTC_INT.c ****                             }
 786:Generated_Source\PSoC5/RTC_INT.c **** 
 787:Generated_Source\PSoC5/RTC_INT.c ****                             /* DayOfMonth */
 788:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_dstTimeDateStop.DayOfMonth ==
 789:Generated_Source\PSoC5/RTC_INT.c ****                                                                             RTC_currentTimeDate.Day
 790:Generated_Source\PSoC5/RTC_INT.c ****                             {
 791:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
 792:Generated_Source\PSoC5/RTC_INT.c ****                             }
 793:Generated_Source\PSoC5/RTC_INT.c ****                             else
 794:Generated_Source\PSoC5/RTC_INT.c ****                             {
 795:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 796:Generated_Source\PSoC5/RTC_INT.c ****                             }
 797:Generated_Source\PSoC5/RTC_INT.c ****                         }
 798:Generated_Source\PSoC5/RTC_INT.c ****                     }
 799:Generated_Source\PSoC5/RTC_INT.c **** 
 800:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFWEEK */
 801:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 30


 802:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFWEEK_MASK))
 803:Generated_Source\PSoC5/RTC_INT.c ****                     {
 804:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 805:Generated_Source\PSoC5/RTC_INT.c ****                         {
 806:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 807:Generated_Source\PSoC5/RTC_INT.c ****                         }
 808:Generated_Source\PSoC5/RTC_INT.c ****                         else
 809:Generated_Source\PSoC5/RTC_INT.c ****                         {
 810:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 811:Generated_Source\PSoC5/RTC_INT.c ****                         }
 812:Generated_Source\PSoC5/RTC_INT.c ****                     }
 813:Generated_Source\PSoC5/RTC_INT.c **** 
 814:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFYEAR */
 815:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 816:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFYEAR_MASK))
 817:Generated_Source\PSoC5/RTC_INT.c ****                     {
 818:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 819:Generated_Source\PSoC5/RTC_INT.c ****                         {
 820:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 821:Generated_Source\PSoC5/RTC_INT.c ****                         }
 822:Generated_Source\PSoC5/RTC_INT.c ****                         else
 823:Generated_Source\PSoC5/RTC_INT.c ****                         {
 824:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 825:Generated_Source\PSoC5/RTC_INT.c ****                         }
 826:Generated_Source\PSoC5/RTC_INT.c ****                     }
 827:Generated_Source\PSoC5/RTC_INT.c **** 
 828:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFMONTH */
 829:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 830:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFMONTH_MASK))
 831:Generated_Source\PSoC5/RTC_INT.c ****                     {
 832:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 833:Generated_Source\PSoC5/RTC_INT.c ****                         {
 834:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 835:Generated_Source\PSoC5/RTC_INT.c ****                         }
 836:Generated_Source\PSoC5/RTC_INT.c ****                         else
 837:Generated_Source\PSoC5/RTC_INT.c ****                         {
 838:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 839:Generated_Source\PSoC5/RTC_INT.c ****                         }
 840:Generated_Source\PSoC5/RTC_INT.c ****                     }
 841:Generated_Source\PSoC5/RTC_INT.c **** 
 842:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm MONTH */
 843:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 844:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_MONTH_MASK))
 845:Generated_Source\PSoC5/RTC_INT.c ****                     {
 846:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 847:Generated_Source\PSoC5/RTC_INT.c ****                         {
 848:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 849:Generated_Source\PSoC5/RTC_INT.c ****                         }
 850:Generated_Source\PSoC5/RTC_INT.c ****                         else
 851:Generated_Source\PSoC5/RTC_INT.c ****                         {
 852:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 853:Generated_Source\PSoC5/RTC_INT.c ****                         }
 854:Generated_Source\PSoC5/RTC_INT.c ****                     }
 855:Generated_Source\PSoC5/RTC_INT.c **** 
 856:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm YEAR */
 857:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 858:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_YEAR_MASK))
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 31


 859:Generated_Source\PSoC5/RTC_INT.c ****                     {
 860:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 861:Generated_Source\PSoC5/RTC_INT.c ****                         {
 862:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 863:Generated_Source\PSoC5/RTC_INT.c ****                         }
 864:Generated_Source\PSoC5/RTC_INT.c ****                         else
 865:Generated_Source\PSoC5/RTC_INT.c ****                         {
 866:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 867:Generated_Source\PSoC5/RTC_INT.c ****                         }
 868:Generated_Source\PSoC5/RTC_INT.c ****                     }
 869:Generated_Source\PSoC5/RTC_INT.c **** 
 870:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set Alarm flag event */
 871:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_tmp = RTC_alarmCfgMask;
 872:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_SET_ALARM(RTC_tmp,
 873:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_alarmCurStatus,
 874:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_statusDateTime);
 875:Generated_Source\PSoC5/RTC_INT.c ****                 }
 876:Generated_Source\PSoC5/RTC_INT.c ****             #endif /* 1u == RTC_DST_FUNC_ENABLE */
 877:Generated_Source\PSoC5/RTC_INT.c **** 
 878:Generated_Source\PSoC5/RTC_INT.c ****             /* Alarm HOUR */
 879:Generated_Source\PSoC5/RTC_INT.c ****             if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_HOUR_MASK))
 846              		.loc 1 879 0
 847 044c 2E4B     		ldr	r3, .L50+4
 848 044e 1B78     		ldrb	r3, [r3]
 849 0450 DBB2     		uxtb	r3, r3
 850 0452 03F00403 		and	r3, r3, #4
 851 0456 002B     		cmp	r3, #0
 852 0458 18D0     		beq	.L37
 880:Generated_Source\PSoC5/RTC_INT.c ****             {
 881:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_alarmCfgTimeDate.Hour == RTC_currentTimeDate.Hour)
 853              		.loc 1 881 0
 854 045a 2E4B     		ldr	r3, .L50+16
 855 045c 9B78     		ldrb	r3, [r3, #2]
 856 045e DAB2     		uxtb	r2, r3
 857 0460 2D4B     		ldr	r3, .L50+20
 858 0462 9B78     		ldrb	r3, [r3, #2]
 859 0464 DBB2     		uxtb	r3, r3
 860 0466 9A42     		cmp	r2, r3
 861 0468 08D1     		bne	.L38
 882:Generated_Source\PSoC5/RTC_INT.c ****                 {
 883:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_alarmCurStatus |= RTC_ALARM_HOUR_MASK;
 862              		.loc 1 883 0
 863 046a 264B     		ldr	r3, .L50
 864 046c 1B78     		ldrb	r3, [r3]
 865 046e DBB2     		uxtb	r3, r3
 866 0470 43F00403 		orr	r3, r3, #4
 867 0474 DAB2     		uxtb	r2, r3
 868 0476 234B     		ldr	r3, .L50
 869 0478 1A70     		strb	r2, [r3]
 870 047a 07E0     		b	.L37
 871              	.L38:
 884:Generated_Source\PSoC5/RTC_INT.c ****                 }
 885:Generated_Source\PSoC5/RTC_INT.c ****                 else
 886:Generated_Source\PSoC5/RTC_INT.c ****                 {
 887:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_HOUR_MASK);
 872              		.loc 1 887 0
 873 047c 214B     		ldr	r3, .L50
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 32


 874 047e 1B78     		ldrb	r3, [r3]
 875 0480 DBB2     		uxtb	r3, r3
 876 0482 23F00403 		bic	r3, r3, #4
 877 0486 DAB2     		uxtb	r2, r3
 878 0488 1E4B     		ldr	r3, .L50
 879 048a 1A70     		strb	r2, [r3]
 880              	.L37:
 888:Generated_Source\PSoC5/RTC_INT.c ****                 }
 889:Generated_Source\PSoC5/RTC_INT.c ****             }
 890:Generated_Source\PSoC5/RTC_INT.c **** 
 891:Generated_Source\PSoC5/RTC_INT.c ****             /* Set Alarm flag event */
 892:Generated_Source\PSoC5/RTC_INT.c ****             RTC_tmp = RTC_alarmCfgMask;
 881              		.loc 1 892 0
 882 048c 1E4B     		ldr	r3, .L50+4
 883 048e 1B78     		ldrb	r3, [r3]
 884 0490 FB71     		strb	r3, [r7, #7]
 893:Generated_Source\PSoC5/RTC_INT.c ****             RTC_SET_ALARM(RTC_tmp,
 885              		.loc 1 893 0
 886 0492 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 887 0494 002B     		cmp	r3, #0
 888 0496 13D0     		beq	.L39
 889              		.loc 1 893 0 is_stmt 0 discriminator 1
 890 0498 1A4B     		ldr	r3, .L50
 891 049a 1B78     		ldrb	r3, [r3]
 892 049c DAB2     		uxtb	r2, r3
 893 049e FB79     		ldrb	r3, [r7, #7]
 894 04a0 1340     		ands	r3, r3, r2
 895 04a2 DBB2     		uxtb	r3, r3
 896 04a4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 897 04a6 9A42     		cmp	r2, r3
 898 04a8 0AD1     		bne	.L39
 899              		.loc 1 893 0 discriminator 2
 900 04aa 184B     		ldr	r3, .L50+8
 901 04ac 1B78     		ldrb	r3, [r3]
 902 04ae DBB2     		uxtb	r3, r3
 903 04b0 43F00803 		orr	r3, r3, #8
 904 04b4 DAB2     		uxtb	r2, r3
 905 04b6 154B     		ldr	r3, .L50+8
 906 04b8 1A70     		strb	r2, [r3]
 907 04ba 124B     		ldr	r3, .L50
 908 04bc 0022     		movs	r2, #0
 909 04be 1A70     		strb	r2, [r3]
 910              	.L39:
 894:Generated_Source\PSoC5/RTC_INT.c ****                                        RTC_alarmCurStatus,
 895:Generated_Source\PSoC5/RTC_INT.c ****                                        RTC_statusDateTime);
 896:Generated_Source\PSoC5/RTC_INT.c **** 
 897:Generated_Source\PSoC5/RTC_INT.c ****             /* Every Hour */
 898:Generated_Source\PSoC5/RTC_INT.c ****             if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_HOUR_MASK))
 911              		.loc 1 898 0 is_stmt 1
 912 04c0 134B     		ldr	r3, .L50+12
 913 04c2 1B78     		ldrb	r3, [r3]
 914 04c4 DBB2     		uxtb	r3, r3
 915 04c6 03F00403 		and	r3, r3, #4
 916 04ca 002B     		cmp	r3, #0
 917 04cc 01D0     		beq	.L10
 899:Generated_Source\PSoC5/RTC_INT.c ****             {
 900:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_EveryHourHandler();
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 33


 918              		.loc 1 900 0
 919 04ce FFF7FEFF 		bl	RTC_EveryHourHandler
 920              	.L10:
 901:Generated_Source\PSoC5/RTC_INT.c ****             }
 902:Generated_Source\PSoC5/RTC_INT.c ****         } /* Min > 59 = Hour */
 903:Generated_Source\PSoC5/RTC_INT.c **** 
 904:Generated_Source\PSoC5/RTC_INT.c ****         /* Alarm MIN */
 905:Generated_Source\PSoC5/RTC_INT.c ****         if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_MIN_MASK))
 921              		.loc 1 905 0
 922 04d2 0D4B     		ldr	r3, .L50+4
 923 04d4 1B78     		ldrb	r3, [r3]
 924 04d6 DBB2     		uxtb	r3, r3
 925 04d8 03F00203 		and	r3, r3, #2
 926 04dc 002B     		cmp	r3, #0
 927 04de 25D0     		beq	.L40
 906:Generated_Source\PSoC5/RTC_INT.c ****         {
 907:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_alarmCfgTimeDate.Min == RTC_currentTimeDate.Min)
 928              		.loc 1 907 0
 929 04e0 0C4B     		ldr	r3, .L50+16
 930 04e2 5B78     		ldrb	r3, [r3, #1]
 931 04e4 DAB2     		uxtb	r2, r3
 932 04e6 0C4B     		ldr	r3, .L50+20
 933 04e8 5B78     		ldrb	r3, [r3, #1]
 934 04ea DBB2     		uxtb	r3, r3
 935 04ec 9A42     		cmp	r2, r3
 936 04ee 15D1     		bne	.L41
 908:Generated_Source\PSoC5/RTC_INT.c ****             {
 909:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_alarmCurStatus |= RTC_ALARM_MIN_MASK;
 937              		.loc 1 909 0
 938 04f0 044B     		ldr	r3, .L50
 939 04f2 1B78     		ldrb	r3, [r3]
 940 04f4 DBB2     		uxtb	r3, r3
 941 04f6 43F00203 		orr	r3, r3, #2
 942 04fa DAB2     		uxtb	r2, r3
 943 04fc 014B     		ldr	r3, .L50
 944 04fe 1A70     		strb	r2, [r3]
 945 0500 14E0     		b	.L40
 946              	.L51:
 947 0502 00BF     		.align	2
 948              	.L50:
 949 0504 00000000 		.word	RTC_alarmCurStatus
 950 0508 00000000 		.word	RTC_alarmCfgMask
 951 050c 00000000 		.word	RTC_statusDateTime
 952 0510 00000000 		.word	RTC_intervalCfgMask
 953 0514 00000000 		.word	RTC_alarmCfgTimeDate
 954 0518 00000000 		.word	RTC_currentTimeDate
 955              	.L41:
 910:Generated_Source\PSoC5/RTC_INT.c ****             }
 911:Generated_Source\PSoC5/RTC_INT.c ****             else
 912:Generated_Source\PSoC5/RTC_INT.c ****             {
 913:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MIN_MASK);
 956              		.loc 1 913 0
 957 051c 384B     		ldr	r3, .L52
 958 051e 1B78     		ldrb	r3, [r3]
 959 0520 DBB2     		uxtb	r3, r3
 960 0522 23F00203 		bic	r3, r3, #2
 961 0526 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 34


 962 0528 354B     		ldr	r3, .L52
 963 052a 1A70     		strb	r2, [r3]
 964              	.L40:
 914:Generated_Source\PSoC5/RTC_INT.c ****             }
 915:Generated_Source\PSoC5/RTC_INT.c ****         }
 916:Generated_Source\PSoC5/RTC_INT.c **** 
 917:Generated_Source\PSoC5/RTC_INT.c ****         /* Set Alarm flag event */
 918:Generated_Source\PSoC5/RTC_INT.c ****         RTC_tmp = RTC_alarmCfgMask;
 965              		.loc 1 918 0
 966 052c 354B     		ldr	r3, .L52+4
 967 052e 1B78     		ldrb	r3, [r3]
 968 0530 FB71     		strb	r3, [r7, #7]
 919:Generated_Source\PSoC5/RTC_INT.c ****         RTC_SET_ALARM(RTC_tmp,
 969              		.loc 1 919 0
 970 0532 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 971 0534 002B     		cmp	r3, #0
 972 0536 13D0     		beq	.L42
 973              		.loc 1 919 0 is_stmt 0 discriminator 1
 974 0538 314B     		ldr	r3, .L52
 975 053a 1B78     		ldrb	r3, [r3]
 976 053c DAB2     		uxtb	r2, r3
 977 053e FB79     		ldrb	r3, [r7, #7]
 978 0540 1340     		ands	r3, r3, r2
 979 0542 DBB2     		uxtb	r3, r3
 980 0544 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 981 0546 9A42     		cmp	r2, r3
 982 0548 0AD1     		bne	.L42
 983              		.loc 1 919 0 discriminator 2
 984 054a 2F4B     		ldr	r3, .L52+8
 985 054c 1B78     		ldrb	r3, [r3]
 986 054e DBB2     		uxtb	r3, r3
 987 0550 43F00803 		orr	r3, r3, #8
 988 0554 DAB2     		uxtb	r2, r3
 989 0556 2C4B     		ldr	r3, .L52+8
 990 0558 1A70     		strb	r2, [r3]
 991 055a 294B     		ldr	r3, .L52
 992 055c 0022     		movs	r2, #0
 993 055e 1A70     		strb	r2, [r3]
 994              	.L42:
 920:Generated_Source\PSoC5/RTC_INT.c ****                                    RTC_alarmCurStatus,
 921:Generated_Source\PSoC5/RTC_INT.c ****                                    RTC_statusDateTime);
 922:Generated_Source\PSoC5/RTC_INT.c **** 
 923:Generated_Source\PSoC5/RTC_INT.c ****         /* Every Min */
 924:Generated_Source\PSoC5/RTC_INT.c ****         if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_MIN_MASK))
 995              		.loc 1 924 0 is_stmt 1
 996 0560 2A4B     		ldr	r3, .L52+12
 997 0562 1B78     		ldrb	r3, [r3]
 998 0564 DBB2     		uxtb	r3, r3
 999 0566 03F00203 		and	r3, r3, #2
 1000 056a 002B     		cmp	r3, #0
 1001 056c 01D0     		beq	.L9
 925:Generated_Source\PSoC5/RTC_INT.c ****         {
 926:Generated_Source\PSoC5/RTC_INT.c ****             RTC_EveryMinuteHandler();
 1002              		.loc 1 926 0
 1003 056e FFF7FEFF 		bl	RTC_EveryMinuteHandler
 1004              	.L9:
 927:Generated_Source\PSoC5/RTC_INT.c ****         }
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 35


 928:Generated_Source\PSoC5/RTC_INT.c ****     } /* Sec */
 929:Generated_Source\PSoC5/RTC_INT.c **** 
 930:Generated_Source\PSoC5/RTC_INT.c ****     /* Alarm SEC */
 931:Generated_Source\PSoC5/RTC_INT.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_SEC_MASK))
 1005              		.loc 1 931 0
 1006 0572 244B     		ldr	r3, .L52+4
 1007 0574 1B78     		ldrb	r3, [r3]
 1008 0576 DBB2     		uxtb	r3, r3
 1009 0578 03F00103 		and	r3, r3, #1
 1010 057c 002B     		cmp	r3, #0
 1011 057e 18D0     		beq	.L43
 932:Generated_Source\PSoC5/RTC_INT.c ****     {
 933:Generated_Source\PSoC5/RTC_INT.c ****         if(RTC_alarmCfgTimeDate.Sec == RTC_currentTimeDate.Sec)
 1012              		.loc 1 933 0
 1013 0580 234B     		ldr	r3, .L52+16
 1014 0582 1B78     		ldrb	r3, [r3]
 1015 0584 DAB2     		uxtb	r2, r3
 1016 0586 234B     		ldr	r3, .L52+20
 1017 0588 1B78     		ldrb	r3, [r3]
 1018 058a DBB2     		uxtb	r3, r3
 1019 058c 9A42     		cmp	r2, r3
 1020 058e 08D1     		bne	.L44
 934:Generated_Source\PSoC5/RTC_INT.c ****         {
 935:Generated_Source\PSoC5/RTC_INT.c ****             RTC_alarmCurStatus |= RTC_ALARM_SEC_MASK;
 1021              		.loc 1 935 0
 1022 0590 1B4B     		ldr	r3, .L52
 1023 0592 1B78     		ldrb	r3, [r3]
 1024 0594 DBB2     		uxtb	r3, r3
 1025 0596 43F00103 		orr	r3, r3, #1
 1026 059a DAB2     		uxtb	r2, r3
 1027 059c 184B     		ldr	r3, .L52
 1028 059e 1A70     		strb	r2, [r3]
 1029 05a0 07E0     		b	.L43
 1030              	.L44:
 936:Generated_Source\PSoC5/RTC_INT.c ****         }
 937:Generated_Source\PSoC5/RTC_INT.c ****         else
 938:Generated_Source\PSoC5/RTC_INT.c ****         {
 939:Generated_Source\PSoC5/RTC_INT.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_SEC_MASK);
 1031              		.loc 1 939 0
 1032 05a2 174B     		ldr	r3, .L52
 1033 05a4 1B78     		ldrb	r3, [r3]
 1034 05a6 DBB2     		uxtb	r3, r3
 1035 05a8 23F00103 		bic	r3, r3, #1
 1036 05ac DAB2     		uxtb	r2, r3
 1037 05ae 144B     		ldr	r3, .L52
 1038 05b0 1A70     		strb	r2, [r3]
 1039              	.L43:
 940:Generated_Source\PSoC5/RTC_INT.c ****         }
 941:Generated_Source\PSoC5/RTC_INT.c ****     }
 942:Generated_Source\PSoC5/RTC_INT.c **** 
 943:Generated_Source\PSoC5/RTC_INT.c ****     /* Set Alarm flag event */
 944:Generated_Source\PSoC5/RTC_INT.c ****     RTC_tmp = RTC_alarmCfgMask;
 1040              		.loc 1 944 0
 1041 05b2 144B     		ldr	r3, .L52+4
 1042 05b4 1B78     		ldrb	r3, [r3]
 1043 05b6 FB71     		strb	r3, [r7, #7]
 945:Generated_Source\PSoC5/RTC_INT.c ****     RTC_SET_ALARM(RTC_tmp, RTC_alarmCurStatus, RTC_statusDateTime);
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 36


 1044              		.loc 1 945 0
 1045 05b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1046 05ba 002B     		cmp	r3, #0
 1047 05bc 13D0     		beq	.L45
 1048              		.loc 1 945 0 is_stmt 0 discriminator 1
 1049 05be 104B     		ldr	r3, .L52
 1050 05c0 1B78     		ldrb	r3, [r3]
 1051 05c2 DAB2     		uxtb	r2, r3
 1052 05c4 FB79     		ldrb	r3, [r7, #7]
 1053 05c6 1340     		ands	r3, r3, r2
 1054 05c8 DBB2     		uxtb	r3, r3
 1055 05ca FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1056 05cc 9A42     		cmp	r2, r3
 1057 05ce 0AD1     		bne	.L45
 1058              		.loc 1 945 0 discriminator 2
 1059 05d0 0D4B     		ldr	r3, .L52+8
 1060 05d2 1B78     		ldrb	r3, [r3]
 1061 05d4 DBB2     		uxtb	r3, r3
 1062 05d6 43F00803 		orr	r3, r3, #8
 1063 05da DAB2     		uxtb	r2, r3
 1064 05dc 0A4B     		ldr	r3, .L52+8
 1065 05de 1A70     		strb	r2, [r3]
 1066 05e0 074B     		ldr	r3, .L52
 1067 05e2 0022     		movs	r2, #0
 1068 05e4 1A70     		strb	r2, [r3]
 1069              	.L45:
 946:Generated_Source\PSoC5/RTC_INT.c **** 
 947:Generated_Source\PSoC5/RTC_INT.c ****     /* Execute every second handler if needed */
 948:Generated_Source\PSoC5/RTC_INT.c ****     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_SEC_MASK))
 1070              		.loc 1 948 0 is_stmt 1
 1071 05e6 094B     		ldr	r3, .L52+12
 1072 05e8 1B78     		ldrb	r3, [r3]
 1073 05ea DBB2     		uxtb	r3, r3
 1074 05ec 03F00103 		and	r3, r3, #1
 1075 05f0 002B     		cmp	r3, #0
 1076 05f2 01D0     		beq	.L47
 949:Generated_Source\PSoC5/RTC_INT.c ****     {
 950:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EverySecondHandler();
 1077              		.loc 1 950 0
 1078 05f4 FFF7FEFF 		bl	RTC_EverySecondHandler
 1079              	.L47:
 951:Generated_Source\PSoC5/RTC_INT.c ****     }
 952:Generated_Source\PSoC5/RTC_INT.c ****     
 953:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_ISR_EXIT_CALLBACK
 954:Generated_Source\PSoC5/RTC_INT.c ****         RTC_ISR_ExitCallback();
 955:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_ISR_EXIT_CALLBACK */
 956:Generated_Source\PSoC5/RTC_INT.c **** }
 1080              		.loc 1 956 0
 1081 05f8 00BF     		nop
 1082 05fa 0837     		adds	r7, r7, #8
 1083              		.cfi_def_cfa_offset 8
 1084 05fc BD46     		mov	sp, r7
 1085              		.cfi_def_cfa_register 13
 1086              		@ sp needed
 1087 05fe 80BD     		pop	{r7, pc}
 1088              	.L53:
 1089              		.align	2
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 37


 1090              	.L52:
 1091 0600 00000000 		.word	RTC_alarmCurStatus
 1092 0604 00000000 		.word	RTC_alarmCfgMask
 1093 0608 00000000 		.word	RTC_statusDateTime
 1094 060c 00000000 		.word	RTC_intervalCfgMask
 1095 0610 00000000 		.word	RTC_alarmCfgTimeDate
 1096 0614 00000000 		.word	RTC_currentTimeDate
 1097              		.cfi_endproc
 1098              	.LFE71:
 1099              		.size	RTC_ISR, .-RTC_ISR
 1100              		.text
 1101              	.Letext0:
 1102              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 1103              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 1104              		.file 4 "Generated_Source\\PSoC5\\cytypes.h"
 1105              		.file 5 "Generated_Source\\PSoC5\\RTC.h"
 1106              		.file 6 "./modem.h"
 1107              		.file 7 "./data.h"
 1108              		.file 8 "./notoriOS.h"
 1109              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 1110              		.file 10 "./debug.h"
 1111              		.section	.debug_info,"",%progbits
 1112              	.Ldebug_info0:
 1113 0000 8B040000 		.4byte	0x48b
 1114 0004 0400     		.2byte	0x4
 1115 0006 00000000 		.4byte	.Ldebug_abbrev0
 1116 000a 04       		.byte	0x4
 1117 000b 01       		.uleb128 0x1
 1118 000c 5C000000 		.4byte	.LASF70
 1119 0010 0C       		.byte	0xc
 1120 0011 CD030000 		.4byte	.LASF71
 1121 0015 38040000 		.4byte	.LASF72
 1122 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1123 001d 00000000 		.4byte	0
 1124 0021 00000000 		.4byte	.Ldebug_line0
 1125 0025 02       		.uleb128 0x2
 1126 0026 01       		.byte	0x1
 1127 0027 06       		.byte	0x6
 1128 0028 3D020000 		.4byte	.LASF0
 1129 002c 02       		.uleb128 0x2
 1130 002d 01       		.byte	0x1
 1131 002e 08       		.byte	0x8
 1132 002f F7010000 		.4byte	.LASF1
 1133 0033 02       		.uleb128 0x2
 1134 0034 02       		.byte	0x2
 1135 0035 05       		.byte	0x5
 1136 0036 41000000 		.4byte	.LASF2
 1137 003a 02       		.uleb128 0x2
 1138 003b 02       		.byte	0x2
 1139 003c 07       		.byte	0x7
 1140 003d C2020000 		.4byte	.LASF3
 1141 0041 03       		.uleb128 0x3
 1142 0042 C3030000 		.4byte	.LASF9
 1143 0046 02       		.byte	0x2
 1144 0047 3F       		.byte	0x3f
 1145 0048 4C000000 		.4byte	0x4c
 1146 004c 02       		.uleb128 0x2
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 38


 1147 004d 04       		.byte	0x4
 1148 004e 05       		.byte	0x5
 1149 004f A2010000 		.4byte	.LASF4
 1150 0053 02       		.uleb128 0x2
 1151 0054 04       		.byte	0x4
 1152 0055 07       		.byte	0x7
 1153 0056 6E030000 		.4byte	.LASF5
 1154 005a 02       		.uleb128 0x2
 1155 005b 08       		.byte	0x8
 1156 005c 05       		.byte	0x5
 1157 005d 82010000 		.4byte	.LASF6
 1158 0061 02       		.uleb128 0x2
 1159 0062 08       		.byte	0x8
 1160 0063 07       		.byte	0x7
 1161 0064 5E020000 		.4byte	.LASF7
 1162 0068 04       		.uleb128 0x4
 1163 0069 04       		.byte	0x4
 1164 006a 05       		.byte	0x5
 1165 006b 696E7400 		.ascii	"int\000"
 1166 006f 02       		.uleb128 0x2
 1167 0070 04       		.byte	0x4
 1168 0071 07       		.byte	0x7
 1169 0072 89020000 		.4byte	.LASF8
 1170 0076 03       		.uleb128 0x3
 1171 0077 11030000 		.4byte	.LASF10
 1172 007b 03       		.byte	0x3
 1173 007c 2C       		.byte	0x2c
 1174 007d 41000000 		.4byte	0x41
 1175 0081 05       		.uleb128 0x5
 1176 0082 4E010000 		.4byte	.LASF11
 1177 0086 04       		.byte	0x4
 1178 0087 E401     		.2byte	0x1e4
 1179 0089 2C000000 		.4byte	0x2c
 1180 008d 05       		.uleb128 0x5
 1181 008e 2D010000 		.4byte	.LASF12
 1182 0092 04       		.byte	0x4
 1183 0093 E501     		.2byte	0x1e5
 1184 0095 3A000000 		.4byte	0x3a
 1185 0099 05       		.uleb128 0x5
 1186 009a 80030000 		.4byte	.LASF13
 1187 009e 04       		.byte	0x4
 1188 009f E901     		.2byte	0x1e9
 1189 00a1 4C000000 		.4byte	0x4c
 1190 00a5 02       		.uleb128 0x2
 1191 00a6 04       		.byte	0x4
 1192 00a7 04       		.byte	0x4
 1193 00a8 72010000 		.4byte	.LASF14
 1194 00ac 02       		.uleb128 0x2
 1195 00ad 08       		.byte	0x8
 1196 00ae 04       		.byte	0x4
 1197 00af 86030000 		.4byte	.LASF15
 1198 00b3 02       		.uleb128 0x2
 1199 00b4 01       		.byte	0x1
 1200 00b5 08       		.byte	0x8
 1201 00b6 90010000 		.4byte	.LASF16
 1202 00ba 06       		.uleb128 0x6
 1203 00bb 81000000 		.4byte	0x81
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 39


 1204 00bf 07       		.uleb128 0x7
 1205 00c0 0C       		.byte	0xc
 1206 00c1 05       		.byte	0x5
 1207 00c2 30       		.byte	0x30
 1208 00c3 28010000 		.4byte	0x128
 1209 00c7 08       		.uleb128 0x8
 1210 00c8 53656300 		.ascii	"Sec\000"
 1211 00cc 05       		.byte	0x5
 1212 00cd 32       		.byte	0x32
 1213 00ce 81000000 		.4byte	0x81
 1214 00d2 00       		.byte	0
 1215 00d3 08       		.uleb128 0x8
 1216 00d4 4D696E00 		.ascii	"Min\000"
 1217 00d8 05       		.byte	0x5
 1218 00d9 33       		.byte	0x33
 1219 00da 81000000 		.4byte	0x81
 1220 00de 01       		.byte	0x1
 1221 00df 09       		.uleb128 0x9
 1222 00e0 04010000 		.4byte	.LASF17
 1223 00e4 05       		.byte	0x5
 1224 00e5 34       		.byte	0x34
 1225 00e6 81000000 		.4byte	0x81
 1226 00ea 02       		.byte	0x2
 1227 00eb 09       		.uleb128 0x9
 1228 00ec 78010000 		.4byte	.LASF18
 1229 00f0 05       		.byte	0x5
 1230 00f1 35       		.byte	0x35
 1231 00f2 81000000 		.4byte	0x81
 1232 00f6 03       		.byte	0x3
 1233 00f7 09       		.uleb128 0x9
 1234 00f8 44030000 		.4byte	.LASF19
 1235 00fc 05       		.byte	0x5
 1236 00fd 36       		.byte	0x36
 1237 00fe 81000000 		.4byte	0x81
 1238 0102 04       		.byte	0x4
 1239 0103 09       		.uleb128 0x9
 1240 0104 83040000 		.4byte	.LASF20
 1241 0108 05       		.byte	0x5
 1242 0109 37       		.byte	0x37
 1243 010a 8D000000 		.4byte	0x8d
 1244 010e 06       		.byte	0x6
 1245 010f 09       		.uleb128 0x9
 1246 0110 E5010000 		.4byte	.LASF21
 1247 0114 05       		.byte	0x5
 1248 0115 38       		.byte	0x38
 1249 0116 81000000 		.4byte	0x81
 1250 011a 08       		.byte	0x8
 1251 011b 09       		.uleb128 0x9
 1252 011c CC010000 		.4byte	.LASF22
 1253 0120 05       		.byte	0x5
 1254 0121 39       		.byte	0x39
 1255 0122 8D000000 		.4byte	0x8d
 1256 0126 0A       		.byte	0xa
 1257 0127 00       		.byte	0
 1258 0128 03       		.uleb128 0x3
 1259 0129 16040000 		.4byte	.LASF23
 1260 012d 05       		.byte	0x5
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 40


 1261 012e 3A       		.byte	0x3a
 1262 012f 33010000 		.4byte	0x133
 1263 0133 06       		.uleb128 0x6
 1264 0134 BF000000 		.4byte	0xbf
 1265 0138 02       		.uleb128 0x2
 1266 0139 08       		.byte	0x8
 1267 013a 04       		.byte	0x4
 1268 013b EB010000 		.4byte	.LASF24
 1269 013f 02       		.uleb128 0x2
 1270 0140 04       		.byte	0x4
 1271 0141 07       		.byte	0x7
 1272 0142 4B000000 		.4byte	.LASF25
 1273 0146 0A       		.uleb128 0xa
 1274 0147 B3000000 		.4byte	0xb3
 1275 014b 56010000 		.4byte	0x156
 1276 014f 0B       		.uleb128 0xb
 1277 0150 3F010000 		.4byte	0x13f
 1278 0154 17       		.byte	0x17
 1279 0155 00       		.byte	0
 1280 0156 07       		.uleb128 0x7
 1281 0157 3C       		.byte	0x3c
 1282 0158 06       		.byte	0x6
 1283 0159 2A       		.byte	0x2a
 1284 015a 83010000 		.4byte	0x183
 1285 015e 09       		.uleb128 0x9
 1286 015f 1A000000 		.4byte	.LASF26
 1287 0163 06       		.byte	0x6
 1288 0164 2B       		.byte	0x2b
 1289 0165 83010000 		.4byte	0x183
 1290 0169 00       		.byte	0
 1291 016a 09       		.uleb128 0x9
 1292 016b 00000000 		.4byte	.LASF27
 1293 016f 06       		.byte	0x6
 1294 0170 2C       		.byte	0x2c
 1295 0171 83010000 		.4byte	0x183
 1296 0175 14       		.byte	0x14
 1297 0176 09       		.uleb128 0x9
 1298 0177 0C030000 		.4byte	.LASF28
 1299 017b 06       		.byte	0x6
 1300 017c 2D       		.byte	0x2d
 1301 017d 83010000 		.4byte	0x183
 1302 0181 28       		.byte	0x28
 1303 0182 00       		.byte	0
 1304 0183 0A       		.uleb128 0xa
 1305 0184 B3000000 		.4byte	0xb3
 1306 0188 93010000 		.4byte	0x193
 1307 018c 0B       		.uleb128 0xb
 1308 018d 3F010000 		.4byte	0x13f
 1309 0191 13       		.byte	0x13
 1310 0192 00       		.byte	0
 1311 0193 03       		.uleb128 0x3
 1312 0194 95010000 		.4byte	.LASF29
 1313 0198 06       		.byte	0x6
 1314 0199 2E       		.byte	0x2e
 1315 019a 56010000 		.4byte	0x156
 1316 019e 07       		.uleb128 0x7
 1317 019f 0C       		.byte	0xc
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 41


 1318 01a0 06       		.byte	0x6
 1319 01a1 30       		.byte	0x30
 1320 01a2 D6010000 		.4byte	0x1d6
 1321 01a6 09       		.uleb128 0x9
 1322 01a7 7E040000 		.4byte	.LASF30
 1323 01ab 06       		.byte	0x6
 1324 01ac 31       		.byte	0x31
 1325 01ad 81000000 		.4byte	0x81
 1326 01b1 00       		.byte	0
 1327 01b2 08       		.uleb128 0x8
 1328 01b3 737100   		.ascii	"sq\000"
 1329 01b6 06       		.byte	0x6
 1330 01b7 32       		.byte	0x32
 1331 01b8 81000000 		.4byte	0x81
 1332 01bc 01       		.byte	0x1
 1333 01bd 09       		.uleb128 0x9
 1334 01be D5020000 		.4byte	.LASF31
 1335 01c2 06       		.byte	0x6
 1336 01c3 33       		.byte	0x33
 1337 01c4 68000000 		.4byte	0x68
 1338 01c8 04       		.byte	0x4
 1339 01c9 09       		.uleb128 0x9
 1340 01ca F9020000 		.4byte	.LASF32
 1341 01ce 06       		.byte	0x6
 1342 01cf 34       		.byte	0x34
 1343 01d0 68000000 		.4byte	0x68
 1344 01d4 08       		.byte	0x8
 1345 01d5 00       		.byte	0
 1346 01d6 03       		.uleb128 0x3
 1347 01d7 21030000 		.4byte	.LASF33
 1348 01db 06       		.byte	0x6
 1349 01dc 35       		.byte	0x35
 1350 01dd 9E010000 		.4byte	0x19e
 1351 01e1 07       		.uleb128 0x7
 1352 01e2 2C       		.byte	0x2c
 1353 01e3 07       		.byte	0x7
 1354 01e4 0B       		.byte	0xb
 1355 01e5 0E020000 		.4byte	0x20e
 1356 01e9 08       		.uleb128 0x8
 1357 01ea 6B657900 		.ascii	"key\000"
 1358 01ee 07       		.byte	0x7
 1359 01ef 0C       		.byte	0xc
 1360 01f0 83010000 		.4byte	0x183
 1361 01f4 00       		.byte	0
 1362 01f5 09       		.uleb128 0x9
 1363 01f6 27010000 		.4byte	.LASF34
 1364 01fa 07       		.byte	0x7
 1365 01fb 0D       		.byte	0xd
 1366 01fc 83010000 		.4byte	0x183
 1367 0200 14       		.byte	0x14
 1368 0201 09       		.uleb128 0x9
 1369 0202 68010000 		.4byte	.LASF35
 1370 0206 07       		.byte	0x7
 1371 0207 0E       		.byte	0xe
 1372 0208 99000000 		.4byte	0x99
 1373 020c 28       		.byte	0x28
 1374 020d 00       		.byte	0
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 42


 1375 020e 03       		.uleb128 0x3
 1376 020f 96020000 		.4byte	.LASF36
 1377 0213 07       		.byte	0x7
 1378 0214 0F       		.byte	0xf
 1379 0215 E1010000 		.4byte	0x1e1
 1380 0219 07       		.uleb128 0x7
 1381 021a 1C       		.byte	0x1c
 1382 021b 08       		.byte	0x8
 1383 021c 2C       		.byte	0x2c
 1384 021d 3A020000 		.4byte	0x23a
 1385 0221 09       		.uleb128 0x9
 1386 0222 AB010000 		.4byte	.LASF37
 1387 0226 08       		.byte	0x8
 1388 0227 2E       		.byte	0x2e
 1389 0228 3A020000 		.4byte	0x23a
 1390 022c 00       		.byte	0
 1391 022d 09       		.uleb128 0x9
 1392 022e 09010000 		.4byte	.LASF38
 1393 0232 08       		.byte	0x8
 1394 0233 2F       		.byte	0x2f
 1395 0234 46010000 		.4byte	0x146
 1396 0238 04       		.byte	0x4
 1397 0239 00       		.byte	0
 1398 023a 0C       		.uleb128 0xc
 1399 023b 04       		.byte	0x4
 1400 023c 93010000 		.4byte	0x193
 1401 0240 03       		.uleb128 0x3
 1402 0241 B7020000 		.4byte	.LASF39
 1403 0245 08       		.byte	0x8
 1404 0246 31       		.byte	0x31
 1405 0247 19020000 		.4byte	0x219
 1406 024b 0D       		.uleb128 0xd
 1407 024c 4401     		.2byte	0x144
 1408 024e 08       		.byte	0x8
 1409 024f 34       		.byte	0x34
 1410 0250 9E020000 		.4byte	0x29e
 1411 0254 09       		.uleb128 0x9
 1412 0255 EE030000 		.4byte	.LASF40
 1413 0259 08       		.byte	0x8
 1414 025a 37       		.byte	0x37
 1415 025b 83010000 		.4byte	0x183
 1416 025f 00       		.byte	0
 1417 0260 09       		.uleb128 0x9
 1418 0261 54000000 		.4byte	.LASF41
 1419 0265 08       		.byte	0x8
 1420 0266 39       		.byte	0x39
 1421 0267 9E020000 		.4byte	0x29e
 1422 026b 14       		.byte	0x14
 1423 026c 09       		.uleb128 0x9
 1424 026d 34010000 		.4byte	.LASF42
 1425 0271 08       		.byte	0x8
 1426 0272 3A       		.byte	0x3a
 1427 0273 68000000 		.4byte	0x68
 1428 0277 78       		.byte	0x78
 1429 0278 09       		.uleb128 0x9
 1430 0279 60010000 		.4byte	.LASF43
 1431 027d 08       		.byte	0x8
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 43


 1432 027e 3B       		.byte	0x3b
 1433 027f AE020000 		.4byte	0x2ae
 1434 0283 7C       		.byte	0x7c
 1435 0284 09       		.uleb128 0x9
 1436 0285 66030000 		.4byte	.LASF44
 1437 0289 08       		.byte	0x8
 1438 028a 3C       		.byte	0x3c
 1439 028b 9E020000 		.4byte	0x29e
 1440 028f AE       		.byte	0xae
 1441 0290 0E       		.uleb128 0xe
 1442 0291 54010000 		.4byte	.LASF45
 1443 0295 08       		.byte	0x8
 1444 0296 3D       		.byte	0x3d
 1445 0297 AE020000 		.4byte	0x2ae
 1446 029b 1201     		.2byte	0x112
 1447 029d 00       		.byte	0
 1448 029e 0A       		.uleb128 0xa
 1449 029f B3000000 		.4byte	0xb3
 1450 02a3 AE020000 		.4byte	0x2ae
 1451 02a7 0B       		.uleb128 0xb
 1452 02a8 3F010000 		.4byte	0x13f
 1453 02ac 63       		.byte	0x63
 1454 02ad 00       		.byte	0
 1455 02ae 0A       		.uleb128 0xa
 1456 02af B3000000 		.4byte	0xb3
 1457 02b3 BE020000 		.4byte	0x2be
 1458 02b7 0B       		.uleb128 0xb
 1459 02b8 3F010000 		.4byte	0x13f
 1460 02bc 31       		.byte	0x31
 1461 02bd 00       		.byte	0
 1462 02be 03       		.uleb128 0x3
 1463 02bf 32000000 		.4byte	.LASF46
 1464 02c3 08       		.byte	0x8
 1465 02c4 3F       		.byte	0x3f
 1466 02c5 4B020000 		.4byte	0x24b
 1467 02c9 0F       		.uleb128 0xf
 1468 02ca 8D030000 		.4byte	.LASF47
 1469 02ce 01       		.byte	0x1
 1470 02cf 36       		.byte	0x36
 1471 02d0 00000000 		.4byte	.LFB64
 1472 02d4 0E000000 		.4byte	.LFE64-.LFB64
 1473 02d8 01       		.uleb128 0x1
 1474 02d9 9C       		.byte	0x9c
 1475 02da 0F       		.uleb128 0xf
 1476 02db 4F030000 		.4byte	.LASF48
 1477 02df 01       		.byte	0x1
 1478 02e0 51       		.byte	0x51
 1479 02e1 00000000 		.4byte	.LFB65
 1480 02e5 0E000000 		.4byte	.LFE65-.LFB65
 1481 02e9 01       		.uleb128 0x1
 1482 02ea 9C       		.byte	0x9c
 1483 02eb 0F       		.uleb128 0xf
 1484 02ec 2F030000 		.4byte	.LASF49
 1485 02f0 01       		.byte	0x1
 1486 02f1 6C       		.byte	0x6c
 1487 02f2 00000000 		.4byte	.LFB66
 1488 02f6 0E000000 		.4byte	.LFE66-.LFB66
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 44


 1489 02fa 01       		.uleb128 0x1
 1490 02fb 9C       		.byte	0x9c
 1491 02fc 0F       		.uleb128 0xf
 1492 02fd D1010000 		.4byte	.LASF50
 1493 0301 01       		.byte	0x1
 1494 0302 87       		.byte	0x87
 1495 0303 00000000 		.4byte	.LFB67
 1496 0307 0E000000 		.4byte	.LFE67-.LFB67
 1497 030b 01       		.uleb128 0x1
 1498 030c 9C       		.byte	0x9c
 1499 030d 0F       		.uleb128 0xf
 1500 030e EA000000 		.4byte	.LASF51
 1501 0312 01       		.byte	0x1
 1502 0313 A2       		.byte	0xa2
 1503 0314 00000000 		.4byte	.LFB68
 1504 0318 0E000000 		.4byte	.LFE68-.LFB68
 1505 031c 01       		.uleb128 0x1
 1506 031d 9C       		.byte	0x9c
 1507 031e 0F       		.uleb128 0xf
 1508 031f B6010000 		.4byte	.LASF52
 1509 0323 01       		.byte	0x1
 1510 0324 BD       		.byte	0xbd
 1511 0325 00000000 		.4byte	.LFB69
 1512 0329 0E000000 		.4byte	.LFE69-.LFB69
 1513 032d 01       		.uleb128 0x1
 1514 032e 9C       		.byte	0x9c
 1515 032f 0F       		.uleb128 0xf
 1516 0330 49020000 		.4byte	.LASF53
 1517 0334 01       		.byte	0x1
 1518 0335 D8       		.byte	0xd8
 1519 0336 00000000 		.4byte	.LFB70
 1520 033a 0E000000 		.4byte	.LFE70-.LFB70
 1521 033e 01       		.uleb128 0x1
 1522 033f 9C       		.byte	0x9c
 1523 0340 10       		.uleb128 0x10
 1524 0341 AF020000 		.4byte	.LASF73
 1525 0345 01       		.byte	0x1
 1526 0346 0B01     		.2byte	0x10b
 1527 0348 00000000 		.4byte	.LFB71
 1528 034c 18060000 		.4byte	.LFE71-.LFB71
 1529 0350 01       		.uleb128 0x1
 1530 0351 9C       		.byte	0x9c
 1531 0352 66030000 		.4byte	0x366
 1532 0356 11       		.uleb128 0x11
 1533 0357 19030000 		.4byte	.LASF74
 1534 035b 01       		.byte	0x1
 1535 035c 0D01     		.2byte	0x10d
 1536 035e 81000000 		.4byte	0x81
 1537 0362 02       		.uleb128 0x2
 1538 0363 91       		.byte	0x91
 1539 0364 77       		.sleb128 -9
 1540 0365 00       		.byte	0
 1541 0366 12       		.uleb128 0x12
 1542 0367 1C020000 		.4byte	.LASF54
 1543 036b 05       		.byte	0x5
 1544 036c 2D01     		.2byte	0x12d
 1545 036e 28010000 		.4byte	0x128
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 45


 1546 0372 12       		.uleb128 0x12
 1547 0373 75020000 		.4byte	.LASF55
 1548 0377 05       		.byte	0x5
 1549 0378 2E01     		.2byte	0x12e
 1550 037a 28010000 		.4byte	0x128
 1551 037e 12       		.uleb128 0x12
 1552 037f 09000000 		.4byte	.LASF56
 1553 0383 05       		.byte	0x5
 1554 0384 3901     		.2byte	0x139
 1555 0386 BA000000 		.4byte	0xba
 1556 038a 12       		.uleb128 0x12
 1557 038b F6030000 		.4byte	.LASF57
 1558 038f 05       		.byte	0x5
 1559 0390 3A01     		.2byte	0x13a
 1560 0392 BA000000 		.4byte	0xba
 1561 0396 12       		.uleb128 0x12
 1562 0397 24040000 		.4byte	.LASF58
 1563 039b 05       		.byte	0x5
 1564 039c 3B01     		.2byte	0x13b
 1565 039e BA000000 		.4byte	0xba
 1566 03a2 12       		.uleb128 0x12
 1567 03a3 B0030000 		.4byte	.LASF59
 1568 03a7 05       		.byte	0x5
 1569 03a8 3C01     		.2byte	0x13c
 1570 03aa BA000000 		.4byte	0xba
 1571 03ae 0A       		.uleb128 0xa
 1572 03af BE030000 		.4byte	0x3be
 1573 03b3 BE030000 		.4byte	0x3be
 1574 03b7 0B       		.uleb128 0xb
 1575 03b8 3F010000 		.4byte	0x13f
 1576 03bc 0B       		.byte	0xb
 1577 03bd 00       		.byte	0
 1578 03be 13       		.uleb128 0x13
 1579 03bf 81000000 		.4byte	0x81
 1580 03c3 12       		.uleb128 0x12
 1581 03c4 21000000 		.4byte	.LASF60
 1582 03c8 05       		.byte	0x5
 1583 03c9 3E01     		.2byte	0x13e
 1584 03cb CF030000 		.4byte	0x3cf
 1585 03cf 13       		.uleb128 0x13
 1586 03d0 AE030000 		.4byte	0x3ae
 1587 03d4 12       		.uleb128 0x12
 1588 03d5 09040000 		.4byte	.LASF61
 1589 03d9 09       		.byte	0x9
 1590 03da 1207     		.2byte	0x712
 1591 03dc E0030000 		.4byte	0x3e0
 1592 03e0 06       		.uleb128 0x6
 1593 03e1 76000000 		.4byte	0x76
 1594 03e5 14       		.uleb128 0x14
 1595 03e6 A2020000 		.4byte	.LASF62
 1596 03ea 0A       		.byte	0xa
 1597 03eb 17       		.byte	0x17
 1598 03ec 9E020000 		.4byte	0x29e
 1599 03f0 05       		.uleb128 0x5
 1600 03f1 03       		.byte	0x3
 1601 03f2 00000000 		.4byte	debug_string
 1602 03f6 14       		.uleb128 0x14
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 46


 1603 03f7 31020000 		.4byte	.LASF63
 1604 03fb 06       		.byte	0x6
 1605 03fc 13       		.byte	0x13
 1606 03fd 81000000 		.4byte	0x81
 1607 0401 05       		.uleb128 0x5
 1608 0402 03       		.byte	0x3
 1609 0403 00000000 		.4byte	modem_state
 1610 0407 14       		.uleb128 0x14
 1611 0408 05020000 		.4byte	.LASF64
 1612 040c 06       		.byte	0x6
 1613 040d 38       		.byte	0x38
 1614 040e 99000000 		.4byte	0x99
 1615 0412 05       		.uleb128 0x5
 1616 0413 03       		.byte	0x3
 1617 0414 00000000 		.4byte	modem_start_time_stamp
 1618 0418 14       		.uleb128 0x14
 1619 0419 AB010000 		.4byte	.LASF37
 1620 041d 06       		.byte	0x6
 1621 041e 39       		.byte	0x39
 1622 041f 93010000 		.4byte	0x193
 1623 0423 05       		.uleb128 0x5
 1624 0424 03       		.byte	0x3
 1625 0425 00000000 		.4byte	modem_info
 1626 0429 14       		.uleb128 0x14
 1627 042a A4030000 		.4byte	.LASF65
 1628 042e 06       		.byte	0x6
 1629 042f 3A       		.byte	0x3a
 1630 0430 D6010000 		.4byte	0x1d6
 1631 0434 05       		.uleb128 0x5
 1632 0435 03       		.byte	0x3
 1633 0436 00000000 		.4byte	modem_stats
 1634 043a 14       		.uleb128 0x14
 1635 043b 3C010000 		.4byte	.LASF66
 1636 043f 07       		.byte	0x7
 1637 0440 19       		.byte	0x19
 1638 0441 8D000000 		.4byte	0x8d
 1639 0445 05       		.uleb128 0x5
 1640 0446 03       		.byte	0x3
 1641 0447 00000000 		.4byte	dataPointsInStack
 1642 044b 0A       		.uleb128 0xa
 1643 044c 0E020000 		.4byte	0x20e
 1644 0450 5B040000 		.4byte	0x45b
 1645 0454 0B       		.uleb128 0xb
 1646 0455 3F010000 		.4byte	0x13f
 1647 0459 09       		.byte	0x9
 1648 045a 00       		.byte	0
 1649 045b 14       		.uleb128 0x14
 1650 045c FF000000 		.4byte	.LASF67
 1651 0460 07       		.byte	0x7
 1652 0461 1A       		.byte	0x1a
 1653 0462 4B040000 		.4byte	0x44b
 1654 0466 05       		.uleb128 0x5
 1655 0467 03       		.byte	0x3
 1656 0468 00000000 		.4byte	data
 1657 046c 14       		.uleb128 0x14
 1658 046d ED020000 		.4byte	.LASF68
 1659 0471 08       		.byte	0x8
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 47


 1660 0472 32       		.byte	0x32
 1661 0473 40020000 		.4byte	0x240
 1662 0477 05       		.uleb128 0x5
 1663 0478 03       		.byte	0x3
 1664 0479 00000000 		.4byte	system_info
 1665 047d 14       		.uleb128 0x14
 1666 047e 17010000 		.4byte	.LASF69
 1667 0482 08       		.byte	0x8
 1668 0483 40       		.byte	0x40
 1669 0484 BE020000 		.4byte	0x2be
 1670 0488 05       		.uleb128 0x5
 1671 0489 03       		.byte	0x3
 1672 048a 00000000 		.4byte	system_settings
 1673 048e 00       		.byte	0
 1674              		.section	.debug_abbrev,"",%progbits
 1675              	.Ldebug_abbrev0:
 1676 0000 01       		.uleb128 0x1
 1677 0001 11       		.uleb128 0x11
 1678 0002 01       		.byte	0x1
 1679 0003 25       		.uleb128 0x25
 1680 0004 0E       		.uleb128 0xe
 1681 0005 13       		.uleb128 0x13
 1682 0006 0B       		.uleb128 0xb
 1683 0007 03       		.uleb128 0x3
 1684 0008 0E       		.uleb128 0xe
 1685 0009 1B       		.uleb128 0x1b
 1686 000a 0E       		.uleb128 0xe
 1687 000b 55       		.uleb128 0x55
 1688 000c 17       		.uleb128 0x17
 1689 000d 11       		.uleb128 0x11
 1690 000e 01       		.uleb128 0x1
 1691 000f 10       		.uleb128 0x10
 1692 0010 17       		.uleb128 0x17
 1693 0011 00       		.byte	0
 1694 0012 00       		.byte	0
 1695 0013 02       		.uleb128 0x2
 1696 0014 24       		.uleb128 0x24
 1697 0015 00       		.byte	0
 1698 0016 0B       		.uleb128 0xb
 1699 0017 0B       		.uleb128 0xb
 1700 0018 3E       		.uleb128 0x3e
 1701 0019 0B       		.uleb128 0xb
 1702 001a 03       		.uleb128 0x3
 1703 001b 0E       		.uleb128 0xe
 1704 001c 00       		.byte	0
 1705 001d 00       		.byte	0
 1706 001e 03       		.uleb128 0x3
 1707 001f 16       		.uleb128 0x16
 1708 0020 00       		.byte	0
 1709 0021 03       		.uleb128 0x3
 1710 0022 0E       		.uleb128 0xe
 1711 0023 3A       		.uleb128 0x3a
 1712 0024 0B       		.uleb128 0xb
 1713 0025 3B       		.uleb128 0x3b
 1714 0026 0B       		.uleb128 0xb
 1715 0027 49       		.uleb128 0x49
 1716 0028 13       		.uleb128 0x13
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 48


 1717 0029 00       		.byte	0
 1718 002a 00       		.byte	0
 1719 002b 04       		.uleb128 0x4
 1720 002c 24       		.uleb128 0x24
 1721 002d 00       		.byte	0
 1722 002e 0B       		.uleb128 0xb
 1723 002f 0B       		.uleb128 0xb
 1724 0030 3E       		.uleb128 0x3e
 1725 0031 0B       		.uleb128 0xb
 1726 0032 03       		.uleb128 0x3
 1727 0033 08       		.uleb128 0x8
 1728 0034 00       		.byte	0
 1729 0035 00       		.byte	0
 1730 0036 05       		.uleb128 0x5
 1731 0037 16       		.uleb128 0x16
 1732 0038 00       		.byte	0
 1733 0039 03       		.uleb128 0x3
 1734 003a 0E       		.uleb128 0xe
 1735 003b 3A       		.uleb128 0x3a
 1736 003c 0B       		.uleb128 0xb
 1737 003d 3B       		.uleb128 0x3b
 1738 003e 05       		.uleb128 0x5
 1739 003f 49       		.uleb128 0x49
 1740 0040 13       		.uleb128 0x13
 1741 0041 00       		.byte	0
 1742 0042 00       		.byte	0
 1743 0043 06       		.uleb128 0x6
 1744 0044 35       		.uleb128 0x35
 1745 0045 00       		.byte	0
 1746 0046 49       		.uleb128 0x49
 1747 0047 13       		.uleb128 0x13
 1748 0048 00       		.byte	0
 1749 0049 00       		.byte	0
 1750 004a 07       		.uleb128 0x7
 1751 004b 13       		.uleb128 0x13
 1752 004c 01       		.byte	0x1
 1753 004d 0B       		.uleb128 0xb
 1754 004e 0B       		.uleb128 0xb
 1755 004f 3A       		.uleb128 0x3a
 1756 0050 0B       		.uleb128 0xb
 1757 0051 3B       		.uleb128 0x3b
 1758 0052 0B       		.uleb128 0xb
 1759 0053 01       		.uleb128 0x1
 1760 0054 13       		.uleb128 0x13
 1761 0055 00       		.byte	0
 1762 0056 00       		.byte	0
 1763 0057 08       		.uleb128 0x8
 1764 0058 0D       		.uleb128 0xd
 1765 0059 00       		.byte	0
 1766 005a 03       		.uleb128 0x3
 1767 005b 08       		.uleb128 0x8
 1768 005c 3A       		.uleb128 0x3a
 1769 005d 0B       		.uleb128 0xb
 1770 005e 3B       		.uleb128 0x3b
 1771 005f 0B       		.uleb128 0xb
 1772 0060 49       		.uleb128 0x49
 1773 0061 13       		.uleb128 0x13
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 49


 1774 0062 38       		.uleb128 0x38
 1775 0063 0B       		.uleb128 0xb
 1776 0064 00       		.byte	0
 1777 0065 00       		.byte	0
 1778 0066 09       		.uleb128 0x9
 1779 0067 0D       		.uleb128 0xd
 1780 0068 00       		.byte	0
 1781 0069 03       		.uleb128 0x3
 1782 006a 0E       		.uleb128 0xe
 1783 006b 3A       		.uleb128 0x3a
 1784 006c 0B       		.uleb128 0xb
 1785 006d 3B       		.uleb128 0x3b
 1786 006e 0B       		.uleb128 0xb
 1787 006f 49       		.uleb128 0x49
 1788 0070 13       		.uleb128 0x13
 1789 0071 38       		.uleb128 0x38
 1790 0072 0B       		.uleb128 0xb
 1791 0073 00       		.byte	0
 1792 0074 00       		.byte	0
 1793 0075 0A       		.uleb128 0xa
 1794 0076 01       		.uleb128 0x1
 1795 0077 01       		.byte	0x1
 1796 0078 49       		.uleb128 0x49
 1797 0079 13       		.uleb128 0x13
 1798 007a 01       		.uleb128 0x1
 1799 007b 13       		.uleb128 0x13
 1800 007c 00       		.byte	0
 1801 007d 00       		.byte	0
 1802 007e 0B       		.uleb128 0xb
 1803 007f 21       		.uleb128 0x21
 1804 0080 00       		.byte	0
 1805 0081 49       		.uleb128 0x49
 1806 0082 13       		.uleb128 0x13
 1807 0083 2F       		.uleb128 0x2f
 1808 0084 0B       		.uleb128 0xb
 1809 0085 00       		.byte	0
 1810 0086 00       		.byte	0
 1811 0087 0C       		.uleb128 0xc
 1812 0088 0F       		.uleb128 0xf
 1813 0089 00       		.byte	0
 1814 008a 0B       		.uleb128 0xb
 1815 008b 0B       		.uleb128 0xb
 1816 008c 49       		.uleb128 0x49
 1817 008d 13       		.uleb128 0x13
 1818 008e 00       		.byte	0
 1819 008f 00       		.byte	0
 1820 0090 0D       		.uleb128 0xd
 1821 0091 13       		.uleb128 0x13
 1822 0092 01       		.byte	0x1
 1823 0093 0B       		.uleb128 0xb
 1824 0094 05       		.uleb128 0x5
 1825 0095 3A       		.uleb128 0x3a
 1826 0096 0B       		.uleb128 0xb
 1827 0097 3B       		.uleb128 0x3b
 1828 0098 0B       		.uleb128 0xb
 1829 0099 01       		.uleb128 0x1
 1830 009a 13       		.uleb128 0x13
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 50


 1831 009b 00       		.byte	0
 1832 009c 00       		.byte	0
 1833 009d 0E       		.uleb128 0xe
 1834 009e 0D       		.uleb128 0xd
 1835 009f 00       		.byte	0
 1836 00a0 03       		.uleb128 0x3
 1837 00a1 0E       		.uleb128 0xe
 1838 00a2 3A       		.uleb128 0x3a
 1839 00a3 0B       		.uleb128 0xb
 1840 00a4 3B       		.uleb128 0x3b
 1841 00a5 0B       		.uleb128 0xb
 1842 00a6 49       		.uleb128 0x49
 1843 00a7 13       		.uleb128 0x13
 1844 00a8 38       		.uleb128 0x38
 1845 00a9 05       		.uleb128 0x5
 1846 00aa 00       		.byte	0
 1847 00ab 00       		.byte	0
 1848 00ac 0F       		.uleb128 0xf
 1849 00ad 2E       		.uleb128 0x2e
 1850 00ae 00       		.byte	0
 1851 00af 03       		.uleb128 0x3
 1852 00b0 0E       		.uleb128 0xe
 1853 00b1 3A       		.uleb128 0x3a
 1854 00b2 0B       		.uleb128 0xb
 1855 00b3 3B       		.uleb128 0x3b
 1856 00b4 0B       		.uleb128 0xb
 1857 00b5 27       		.uleb128 0x27
 1858 00b6 19       		.uleb128 0x19
 1859 00b7 11       		.uleb128 0x11
 1860 00b8 01       		.uleb128 0x1
 1861 00b9 12       		.uleb128 0x12
 1862 00ba 06       		.uleb128 0x6
 1863 00bb 40       		.uleb128 0x40
 1864 00bc 18       		.uleb128 0x18
 1865 00bd 9642     		.uleb128 0x2116
 1866 00bf 19       		.uleb128 0x19
 1867 00c0 00       		.byte	0
 1868 00c1 00       		.byte	0
 1869 00c2 10       		.uleb128 0x10
 1870 00c3 2E       		.uleb128 0x2e
 1871 00c4 01       		.byte	0x1
 1872 00c5 3F       		.uleb128 0x3f
 1873 00c6 19       		.uleb128 0x19
 1874 00c7 03       		.uleb128 0x3
 1875 00c8 0E       		.uleb128 0xe
 1876 00c9 3A       		.uleb128 0x3a
 1877 00ca 0B       		.uleb128 0xb
 1878 00cb 3B       		.uleb128 0x3b
 1879 00cc 05       		.uleb128 0x5
 1880 00cd 27       		.uleb128 0x27
 1881 00ce 19       		.uleb128 0x19
 1882 00cf 11       		.uleb128 0x11
 1883 00d0 01       		.uleb128 0x1
 1884 00d1 12       		.uleb128 0x12
 1885 00d2 06       		.uleb128 0x6
 1886 00d3 40       		.uleb128 0x40
 1887 00d4 18       		.uleb128 0x18
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 51


 1888 00d5 9642     		.uleb128 0x2116
 1889 00d7 19       		.uleb128 0x19
 1890 00d8 01       		.uleb128 0x1
 1891 00d9 13       		.uleb128 0x13
 1892 00da 00       		.byte	0
 1893 00db 00       		.byte	0
 1894 00dc 11       		.uleb128 0x11
 1895 00dd 34       		.uleb128 0x34
 1896 00de 00       		.byte	0
 1897 00df 03       		.uleb128 0x3
 1898 00e0 0E       		.uleb128 0xe
 1899 00e1 3A       		.uleb128 0x3a
 1900 00e2 0B       		.uleb128 0xb
 1901 00e3 3B       		.uleb128 0x3b
 1902 00e4 05       		.uleb128 0x5
 1903 00e5 49       		.uleb128 0x49
 1904 00e6 13       		.uleb128 0x13
 1905 00e7 02       		.uleb128 0x2
 1906 00e8 18       		.uleb128 0x18
 1907 00e9 00       		.byte	0
 1908 00ea 00       		.byte	0
 1909 00eb 12       		.uleb128 0x12
 1910 00ec 34       		.uleb128 0x34
 1911 00ed 00       		.byte	0
 1912 00ee 03       		.uleb128 0x3
 1913 00ef 0E       		.uleb128 0xe
 1914 00f0 3A       		.uleb128 0x3a
 1915 00f1 0B       		.uleb128 0xb
 1916 00f2 3B       		.uleb128 0x3b
 1917 00f3 05       		.uleb128 0x5
 1918 00f4 49       		.uleb128 0x49
 1919 00f5 13       		.uleb128 0x13
 1920 00f6 3F       		.uleb128 0x3f
 1921 00f7 19       		.uleb128 0x19
 1922 00f8 3C       		.uleb128 0x3c
 1923 00f9 19       		.uleb128 0x19
 1924 00fa 00       		.byte	0
 1925 00fb 00       		.byte	0
 1926 00fc 13       		.uleb128 0x13
 1927 00fd 26       		.uleb128 0x26
 1928 00fe 00       		.byte	0
 1929 00ff 49       		.uleb128 0x49
 1930 0100 13       		.uleb128 0x13
 1931 0101 00       		.byte	0
 1932 0102 00       		.byte	0
 1933 0103 14       		.uleb128 0x14
 1934 0104 34       		.uleb128 0x34
 1935 0105 00       		.byte	0
 1936 0106 03       		.uleb128 0x3
 1937 0107 0E       		.uleb128 0xe
 1938 0108 3A       		.uleb128 0x3a
 1939 0109 0B       		.uleb128 0xb
 1940 010a 3B       		.uleb128 0x3b
 1941 010b 0B       		.uleb128 0xb
 1942 010c 49       		.uleb128 0x49
 1943 010d 13       		.uleb128 0x13
 1944 010e 3F       		.uleb128 0x3f
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 52


 1945 010f 19       		.uleb128 0x19
 1946 0110 02       		.uleb128 0x2
 1947 0111 18       		.uleb128 0x18
 1948 0112 00       		.byte	0
 1949 0113 00       		.byte	0
 1950 0114 00       		.byte	0
 1951              		.section	.debug_aranges,"",%progbits
 1952 0000 54000000 		.4byte	0x54
 1953 0004 0200     		.2byte	0x2
 1954 0006 00000000 		.4byte	.Ldebug_info0
 1955 000a 04       		.byte	0x4
 1956 000b 00       		.byte	0
 1957 000c 0000     		.2byte	0
 1958 000e 0000     		.2byte	0
 1959 0010 00000000 		.4byte	.LFB64
 1960 0014 0E000000 		.4byte	.LFE64-.LFB64
 1961 0018 00000000 		.4byte	.LFB65
 1962 001c 0E000000 		.4byte	.LFE65-.LFB65
 1963 0020 00000000 		.4byte	.LFB66
 1964 0024 0E000000 		.4byte	.LFE66-.LFB66
 1965 0028 00000000 		.4byte	.LFB67
 1966 002c 0E000000 		.4byte	.LFE67-.LFB67
 1967 0030 00000000 		.4byte	.LFB68
 1968 0034 0E000000 		.4byte	.LFE68-.LFB68
 1969 0038 00000000 		.4byte	.LFB69
 1970 003c 0E000000 		.4byte	.LFE69-.LFB69
 1971 0040 00000000 		.4byte	.LFB70
 1972 0044 0E000000 		.4byte	.LFE70-.LFB70
 1973 0048 00000000 		.4byte	.LFB71
 1974 004c 18060000 		.4byte	.LFE71-.LFB71
 1975 0050 00000000 		.4byte	0
 1976 0054 00000000 		.4byte	0
 1977              		.section	.debug_ranges,"",%progbits
 1978              	.Ldebug_ranges0:
 1979 0000 00000000 		.4byte	.LFB64
 1980 0004 0E000000 		.4byte	.LFE64
 1981 0008 00000000 		.4byte	.LFB65
 1982 000c 0E000000 		.4byte	.LFE65
 1983 0010 00000000 		.4byte	.LFB66
 1984 0014 0E000000 		.4byte	.LFE66
 1985 0018 00000000 		.4byte	.LFB67
 1986 001c 0E000000 		.4byte	.LFE67
 1987 0020 00000000 		.4byte	.LFB68
 1988 0024 0E000000 		.4byte	.LFE68
 1989 0028 00000000 		.4byte	.LFB69
 1990 002c 0E000000 		.4byte	.LFE69
 1991 0030 00000000 		.4byte	.LFB70
 1992 0034 0E000000 		.4byte	.LFE70
 1993 0038 00000000 		.4byte	.LFB71
 1994 003c 18060000 		.4byte	.LFE71
 1995 0040 00000000 		.4byte	0
 1996 0044 00000000 		.4byte	0
 1997              		.section	.debug_line,"",%progbits
 1998              	.Ldebug_line0:
 1999 0000 EF020000 		.section	.debug_str,"MS",%progbits,1
 1999      02008E01 
 1999      00000201 
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 53


 1999      FB0E0D00 
 1999      01010101 
 2000              	.LASF27:
 2001 0000 6D6F6465 		.ascii	"model_id\000"
 2001      6C5F6964 
 2001      00
 2002              	.LASF56:
 2003 0009 5254435F 		.ascii	"RTC_alarmCfgMask\000"
 2003      616C6172 
 2003      6D436667 
 2003      4D61736B 
 2003      00
 2004              	.LASF26:
 2005 001a 73696D5F 		.ascii	"sim_id\000"
 2005      696400
 2006              	.LASF60:
 2007 0021 5254435F 		.ascii	"RTC_daysInMonths\000"
 2007      64617973 
 2007      496E4D6F 
 2007      6E746873 
 2007      00
 2008              	.LASF46:
 2009 0032 7379735F 		.ascii	"sys_settings_t\000"
 2009      73657474 
 2009      696E6773 
 2009      5F7400
 2010              	.LASF2:
 2011 0041 73686F72 		.ascii	"short int\000"
 2011      7420696E 
 2011      7400
 2012              	.LASF25:
 2013 004b 73697A65 		.ascii	"sizetype\000"
 2013      74797065 
 2013      00
 2014              	.LASF41:
 2015 0054 65705F68 		.ascii	"ep_host\000"
 2015      6F737400 
 2016              	.LASF70:
 2017 005c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2017      43313120 
 2017      352E342E 
 2017      31203230 
 2017      31363036 
 2018 008f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2018      20726576 
 2018      6973696F 
 2018      6E203233 
 2018      37373135 
 2019 00c2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2019      66756E63 
 2019      74696F6E 
 2019      2D736563 
 2019      74696F6E 
 2020              	.LASF51:
 2021 00ea 5254435F 		.ascii	"RTC_EveryWeekHandler\000"
 2021      45766572 
 2021      79576565 
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 54


 2021      6B48616E 
 2021      646C6572 
 2022              	.LASF67:
 2023 00ff 64617461 		.ascii	"data\000"
 2023      00
 2024              	.LASF17:
 2025 0104 486F7572 		.ascii	"Hour\000"
 2025      00
 2026              	.LASF38:
 2027 0109 63686970 		.ascii	"chip_uniqueId\000"
 2027      5F756E69 
 2027      71756549 
 2027      6400
 2028              	.LASF69:
 2029 0117 73797374 		.ascii	"system_settings\000"
 2029      656D5F73 
 2029      65747469 
 2029      6E677300 
 2030              	.LASF34:
 2031 0127 76616C75 		.ascii	"value\000"
 2031      6500
 2032              	.LASF12:
 2033 012d 75696E74 		.ascii	"uint16\000"
 2033      313600
 2034              	.LASF42:
 2035 0134 65705F70 		.ascii	"ep_port\000"
 2035      6F727400 
 2036              	.LASF66:
 2037 013c 64617461 		.ascii	"dataPointsInStack\000"
 2037      506F696E 
 2037      7473496E 
 2037      53746163 
 2037      6B00
 2038              	.LASF11:
 2039 014e 75696E74 		.ascii	"uint8\000"
 2039      3800
 2040              	.LASF45:
 2041 0154 65705F64 		.ascii	"ep_database\000"
 2041      61746162 
 2041      61736500 
 2042              	.LASF43:
 2043 0160 65705F75 		.ascii	"ep_user\000"
 2043      73657200 
 2044              	.LASF35:
 2045 0168 74696D65 		.ascii	"timeStamp\000"
 2045      5374616D 
 2045      7000
 2046              	.LASF14:
 2047 0172 666C6F61 		.ascii	"float\000"
 2047      7400
 2048              	.LASF18:
 2049 0178 4461794F 		.ascii	"DayOfWeek\000"
 2049      66576565 
 2049      6B00
 2050              	.LASF6:
 2051 0182 6C6F6E67 		.ascii	"long long int\000"
 2051      206C6F6E 
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 55


 2051      6720696E 
 2051      7400
 2052              	.LASF16:
 2053 0190 63686172 		.ascii	"char\000"
 2053      00
 2054              	.LASF29:
 2055 0195 6D6F6465 		.ascii	"modem_info_t\000"
 2055      6D5F696E 
 2055      666F5F74 
 2055      00
 2056              	.LASF4:
 2057 01a2 6C6F6E67 		.ascii	"long int\000"
 2057      20696E74 
 2057      00
 2058              	.LASF37:
 2059 01ab 6D6F6465 		.ascii	"modem_info\000"
 2059      6D5F696E 
 2059      666F00
 2060              	.LASF52:
 2061 01b6 5254435F 		.ascii	"RTC_EveryMonthHandler\000"
 2061      45766572 
 2061      794D6F6E 
 2061      74684861 
 2061      6E646C65 
 2062              	.LASF22:
 2063 01cc 59656172 		.ascii	"Year\000"
 2063      00
 2064              	.LASF50:
 2065 01d1 5254435F 		.ascii	"RTC_EveryDayHandler\000"
 2065      45766572 
 2065      79446179 
 2065      48616E64 
 2065      6C657200 
 2066              	.LASF21:
 2067 01e5 4D6F6E74 		.ascii	"Month\000"
 2067      6800
 2068              	.LASF24:
 2069 01eb 6C6F6E67 		.ascii	"long double\000"
 2069      20646F75 
 2069      626C6500 
 2070              	.LASF1:
 2071 01f7 756E7369 		.ascii	"unsigned char\000"
 2071      676E6564 
 2071      20636861 
 2071      7200
 2072              	.LASF64:
 2073 0205 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2073      6D5F7374 
 2073      6172745F 
 2073      74696D65 
 2073      5F737461 
 2074              	.LASF54:
 2075 021c 5254435F 		.ascii	"RTC_alarmCfgTimeDate\000"
 2075      616C6172 
 2075      6D436667 
 2075      54696D65 
 2075      44617465 
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 56


 2076              	.LASF63:
 2077 0231 6D6F6465 		.ascii	"modem_state\000"
 2077      6D5F7374 
 2077      61746500 
 2078              	.LASF0:
 2079 023d 7369676E 		.ascii	"signed char\000"
 2079      65642063 
 2079      68617200 
 2080              	.LASF53:
 2081 0249 5254435F 		.ascii	"RTC_EveryYearHandler\000"
 2081      45766572 
 2081      79596561 
 2081      7248616E 
 2081      646C6572 
 2082              	.LASF7:
 2083 025e 6C6F6E67 		.ascii	"long long unsigned int\000"
 2083      206C6F6E 
 2083      6720756E 
 2083      7369676E 
 2083      65642069 
 2084              	.LASF55:
 2085 0275 5254435F 		.ascii	"RTC_currentTimeDate\000"
 2085      63757272 
 2085      656E7454 
 2085      696D6544 
 2085      61746500 
 2086              	.LASF8:
 2087 0289 756E7369 		.ascii	"unsigned int\000"
 2087      676E6564 
 2087      20696E74 
 2087      00
 2088              	.LASF36:
 2089 0296 6B65795F 		.ascii	"key_value_t\000"
 2089      76616C75 
 2089      655F7400 
 2090              	.LASF62:
 2091 02a2 64656275 		.ascii	"debug_string\000"
 2091      675F7374 
 2091      72696E67 
 2091      00
 2092              	.LASF73:
 2093 02af 5254435F 		.ascii	"RTC_ISR\000"
 2093      49535200 
 2094              	.LASF39:
 2095 02b7 7379735F 		.ascii	"sys_info_t\000"
 2095      696E666F 
 2095      5F7400
 2096              	.LASF3:
 2097 02c2 73686F72 		.ascii	"short unsigned int\000"
 2097      7420756E 
 2097      7369676E 
 2097      65642069 
 2097      6E7400
 2098              	.LASF31:
 2099 02d5 74696D65 		.ascii	"time_to_network_connect\000"
 2099      5F746F5F 
 2099      6E657477 
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 57


 2099      6F726B5F 
 2099      636F6E6E 
 2100              	.LASF68:
 2101 02ed 73797374 		.ascii	"system_info\000"
 2101      656D5F69 
 2101      6E666F00 
 2102              	.LASF32:
 2103 02f9 74696D65 		.ascii	"time_to_acquire_ip\000"
 2103      5F746F5F 
 2103      61637175 
 2103      6972655F 
 2103      697000
 2104              	.LASF28:
 2105 030c 696D6569 		.ascii	"imei\000"
 2105      00
 2106              	.LASF10:
 2107 0311 696E7433 		.ascii	"int32_t\000"
 2107      325F7400 
 2108              	.LASF74:
 2109 0319 5254435F 		.ascii	"RTC_tmp\000"
 2109      746D7000 
 2110              	.LASF33:
 2111 0321 6D6F6465 		.ascii	"modem_stats_t\000"
 2111      6D5F7374 
 2111      6174735F 
 2111      7400
 2112              	.LASF49:
 2113 032f 5254435F 		.ascii	"RTC_EveryHourHandler\000"
 2113      45766572 
 2113      79486F75 
 2113      7248616E 
 2113      646C6572 
 2114              	.LASF19:
 2115 0344 4461794F 		.ascii	"DayOfMonth\000"
 2115      664D6F6E 
 2115      746800
 2116              	.LASF48:
 2117 034f 5254435F 		.ascii	"RTC_EveryMinuteHandler\000"
 2117      45766572 
 2117      794D696E 
 2117      75746548 
 2117      616E646C 
 2118              	.LASF44:
 2119 0366 65705F70 		.ascii	"ep_pswd\000"
 2119      73776400 
 2120              	.LASF5:
 2121 036e 6C6F6E67 		.ascii	"long unsigned int\000"
 2121      20756E73 
 2121      69676E65 
 2121      6420696E 
 2121      7400
 2122              	.LASF13:
 2123 0380 696E7433 		.ascii	"int32\000"
 2123      3200
 2124              	.LASF15:
 2125 0386 646F7562 		.ascii	"double\000"
 2125      6C6500
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 58


 2126              	.LASF47:
 2127 038d 5254435F 		.ascii	"RTC_EverySecondHandler\000"
 2127      45766572 
 2127      79536563 
 2127      6F6E6448 
 2127      616E646C 
 2128              	.LASF65:
 2129 03a4 6D6F6465 		.ascii	"modem_stats\000"
 2129      6D5F7374 
 2129      61747300 
 2130              	.LASF59:
 2131 03b0 5254435F 		.ascii	"RTC_statusDateTime\000"
 2131      73746174 
 2131      75734461 
 2131      74655469 
 2131      6D6500
 2132              	.LASF9:
 2133 03c3 5F5F696E 		.ascii	"__int32_t\000"
 2133      7433325F 
 2133      7400
 2134              	.LASF71:
 2135 03cd 47656E65 		.ascii	"Generated_Source\\PSoC5\\RTC_INT.c\000"
 2135      72617465 
 2135      645F536F 
 2135      75726365 
 2135      5C50536F 
 2136              	.LASF40:
 2137 03ee 6E6F6465 		.ascii	"node_id\000"
 2137      5F696400 
 2138              	.LASF57:
 2139 03f6 5254435F 		.ascii	"RTC_alarmCurStatus\000"
 2139      616C6172 
 2139      6D437572 
 2139      53746174 
 2139      757300
 2140              	.LASF61:
 2141 0409 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2141      52784275 
 2141      66666572 
 2141      00
 2142              	.LASF23:
 2143 0416 5254435F 		.ascii	"RTC_TIME_DATE\000"
 2143      54494D45 
 2143      5F444154 
 2143      4500
 2144              	.LASF58:
 2145 0424 5254435F 		.ascii	"RTC_intervalCfgMask\000"
 2145      696E7465 
 2145      7276616C 
 2145      4366674D 
 2145      61736B00 
 2146              	.LASF72:
 2147 0438 433A5C55 		.ascii	"C:\\Users\\hyfi_admin\\Documents\\GitHub\\notoriOS\\"
 2147      73657273 
 2147      5C687966 
 2147      695F6164 
 2147      6D696E5C 
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\ccbGjVEL.s 			page 59


 2148 0466 6E6F746F 		.ascii	"notoriOS\\notoriOS.cydsn\000"
 2148      72694F53 
 2148      5C6E6F74 
 2148      6F72694F 
 2148      532E6379 
 2149              	.LASF30:
 2150 047e 72737369 		.ascii	"rssi\000"
 2150      00
 2151              	.LASF20:
 2152 0483 4461794F 		.ascii	"DayOfYear\000"
 2152      66596561 
 2152      7200
 2153              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
