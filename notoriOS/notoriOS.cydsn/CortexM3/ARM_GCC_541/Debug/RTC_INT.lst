ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RTC_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RTC_EveryYearHandler,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	RTC_EveryYearHandler, %function
  24              	RTC_EveryYearHandler:
  25              	.LFB69:
  26              		.file 1 "Generated_Source\\PSoC5\\RTC_INT.c"
   1:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/RTC_INT.c **** * File Name: RTC_INT.c
   3:Generated_Source\PSoC5/RTC_INT.c **** * Version 2.0
   4:Generated_Source\PSoC5/RTC_INT.c **** *
   5:Generated_Source\PSoC5/RTC_INT.c **** * Description:
   6:Generated_Source\PSoC5/RTC_INT.c **** *  This file contains the Interrupt Service Routine (ISR) for the RTC component.
   7:Generated_Source\PSoC5/RTC_INT.c **** *  This interrupt routine has entry pointes to overflow on time or date.
   8:Generated_Source\PSoC5/RTC_INT.c **** *
   9:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  10:Generated_Source\PSoC5/RTC_INT.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/RTC_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/RTC_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/RTC_INT.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/RTC_INT.c **** 
  16:Generated_Source\PSoC5/RTC_INT.c **** #include "RTC.h"
  17:Generated_Source\PSoC5/RTC_INT.c **** #include "CyLib.h"
  18:Generated_Source\PSoC5/RTC_INT.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/RTC_INT.c **** 
  20:Generated_Source\PSoC5/RTC_INT.c **** /* Function Prototypes */
  21:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EverySecondHandler(void);
  22:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMinuteHandler(void);
  23:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryHourHandler(void);
  24:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryDayHandler(void);
  25:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryWeekHandler(void);
  26:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMonthHandler(void);
  27:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryYearHandler(void);
  28:Generated_Source\PSoC5/RTC_INT.c **** 
  29:Generated_Source\PSoC5/RTC_INT.c **** 
  30:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  31:Generated_Source\PSoC5/RTC_INT.c **** *  Place your includes, defines and code here
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 2


  32:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  33:Generated_Source\PSoC5/RTC_INT.c **** /* `#START RTC_ISR_DEFINITION` */
  34:Generated_Source\PSoC5/RTC_INT.c **** 
  35:Generated_Source\PSoC5/RTC_INT.c **** #include "notoriOS.h"
  36:Generated_Source\PSoC5/RTC_INT.c **** 
  37:Generated_Source\PSoC5/RTC_INT.c **** /* `#END` */
  38:Generated_Source\PSoC5/RTC_INT.c **** 
  39:Generated_Source\PSoC5/RTC_INT.c **** 
  40:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  41:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EverySecondHandler
  42:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  43:Generated_Source\PSoC5/RTC_INT.c **** *
  44:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  45:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every second.
  46:Generated_Source\PSoC5/RTC_INT.c **** *
  47:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
  48:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  49:Generated_Source\PSoC5/RTC_INT.c **** *
  50:Generated_Source\PSoC5/RTC_INT.c **** * Return:
  51:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  52:Generated_Source\PSoC5/RTC_INT.c **** *
  53:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  54:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EverySecondHandler(void)
  55:Generated_Source\PSoC5/RTC_INT.c **** {
  56:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every second handler code here. */
  57:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_SECOND_HANDLER_CODE` */
  58:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_SECOND);
  59:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
  60:Generated_Source\PSoC5/RTC_INT.c ****     
  61:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_SECOND_HANDLER_CALLBACK
  62:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EverySecondHandler_Callback();
  63:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_SECOND_HANDLER_CALLBACK */
  64:Generated_Source\PSoC5/RTC_INT.c **** }
  65:Generated_Source\PSoC5/RTC_INT.c **** 
  66:Generated_Source\PSoC5/RTC_INT.c **** 
  67:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  68:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryMinuteHandler
  69:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  70:Generated_Source\PSoC5/RTC_INT.c **** *
  71:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  72:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every minute.
  73:Generated_Source\PSoC5/RTC_INT.c **** *
  74:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
  75:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  76:Generated_Source\PSoC5/RTC_INT.c **** *
  77:Generated_Source\PSoC5/RTC_INT.c **** * Return:
  78:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  79:Generated_Source\PSoC5/RTC_INT.c **** *
  80:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  81:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMinuteHandler(void)
  82:Generated_Source\PSoC5/RTC_INT.c **** {
  83:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every minute handler code here. */
  84:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_MINUTE_HANDLER_CODE` */
  85:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_MINUTE);
  86:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
  87:Generated_Source\PSoC5/RTC_INT.c **** 
  88:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_MINUTE_HANDLER_CALLBACK
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 3


  89:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryMinuteHandler_Callback();
  90:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_MINUTE_HANDLER_CALLBACK */    
  91:Generated_Source\PSoC5/RTC_INT.c **** }
  92:Generated_Source\PSoC5/RTC_INT.c **** 
  93:Generated_Source\PSoC5/RTC_INT.c **** 
  94:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  95:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryHourHandler
  96:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  97:Generated_Source\PSoC5/RTC_INT.c **** *
  98:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  99:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every hour.
 100:Generated_Source\PSoC5/RTC_INT.c **** *
 101:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 102:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 103:Generated_Source\PSoC5/RTC_INT.c **** *
 104:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 105:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 106:Generated_Source\PSoC5/RTC_INT.c **** *
 107:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 108:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryHourHandler(void)
 109:Generated_Source\PSoC5/RTC_INT.c **** {
 110:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every hour handler code here. */
 111:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_HOUR_HANDLER_CODE` */
 112:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_HOUR);
 113:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 114:Generated_Source\PSoC5/RTC_INT.c ****     
 115:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_HOUR_HANDLER_CALLBACK
 116:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryHourHandler_Callback();
 117:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_HOUR_HANDLER_CALLBACK */
 118:Generated_Source\PSoC5/RTC_INT.c **** }
 119:Generated_Source\PSoC5/RTC_INT.c **** 
 120:Generated_Source\PSoC5/RTC_INT.c **** 
 121:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 122:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryDayHandler
 123:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 124:Generated_Source\PSoC5/RTC_INT.c **** *
 125:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 126:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every day.
 127:Generated_Source\PSoC5/RTC_INT.c **** *
 128:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 129:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 130:Generated_Source\PSoC5/RTC_INT.c **** *
 131:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 132:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 133:Generated_Source\PSoC5/RTC_INT.c **** *
 134:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 135:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryDayHandler(void)
 136:Generated_Source\PSoC5/RTC_INT.c **** {
 137:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your everyday handler code here. */
 138:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_DAY_HANDLER_CODE` */
 139:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_DAY);
 140:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 141:Generated_Source\PSoC5/RTC_INT.c ****     
 142:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_DAY_HANDLER_CALLBACK
 143:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryDayHandler_Callback();
 144:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_DAY_HANDLER_CALLBACK */
 145:Generated_Source\PSoC5/RTC_INT.c **** }
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 4


 146:Generated_Source\PSoC5/RTC_INT.c **** 
 147:Generated_Source\PSoC5/RTC_INT.c **** 
 148:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 149:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryWeekHandler
 150:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 151:Generated_Source\PSoC5/RTC_INT.c **** *
 152:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 153:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every week.
 154:Generated_Source\PSoC5/RTC_INT.c **** *
 155:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 156:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 157:Generated_Source\PSoC5/RTC_INT.c **** *
 158:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 159:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 160:Generated_Source\PSoC5/RTC_INT.c **** *
 161:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 162:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryWeekHandler(void)
 163:Generated_Source\PSoC5/RTC_INT.c **** {
 164:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every week handler code here. */
 165:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_WEEK_HANDLER_CODE` */
 166:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_WEEK);
 167:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 168:Generated_Source\PSoC5/RTC_INT.c **** 
 169:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_WEEK_HANDLER_CALLBACK
 170:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryWeekHandler_Callback();
 171:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_WEEK_HANDLER_CALLBACK */
 172:Generated_Source\PSoC5/RTC_INT.c **** }
 173:Generated_Source\PSoC5/RTC_INT.c **** 
 174:Generated_Source\PSoC5/RTC_INT.c **** 
 175:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 176:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryMonthHandler
 177:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 178:Generated_Source\PSoC5/RTC_INT.c **** *
 179:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 180:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every month.
 181:Generated_Source\PSoC5/RTC_INT.c **** *
 182:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 183:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 184:Generated_Source\PSoC5/RTC_INT.c **** *
 185:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 186:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 187:Generated_Source\PSoC5/RTC_INT.c **** *
 188:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 189:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMonthHandler(void)
 190:Generated_Source\PSoC5/RTC_INT.c **** {
 191:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every month handler code here. */
 192:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_MONTH_HANDLER_CODE` */
 193:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_MONTH);
 194:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 195:Generated_Source\PSoC5/RTC_INT.c ****     
 196:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_MONTH_HANDLER_CALLBACK
 197:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryMonthHandler_Callback();
 198:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_MONTH_HANDLER_CALLBACK */
 199:Generated_Source\PSoC5/RTC_INT.c **** }
 200:Generated_Source\PSoC5/RTC_INT.c **** 
 201:Generated_Source\PSoC5/RTC_INT.c **** 
 202:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 5


 203:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryYearHandler
 204:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 205:Generated_Source\PSoC5/RTC_INT.c **** *
 206:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 207:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every year.
 208:Generated_Source\PSoC5/RTC_INT.c **** *
 209:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 210:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 211:Generated_Source\PSoC5/RTC_INT.c **** *
 212:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 213:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 214:Generated_Source\PSoC5/RTC_INT.c **** *
 215:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 216:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryYearHandler(void)
 217:Generated_Source\PSoC5/RTC_INT.c **** {
  27              		.loc 1 217 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 218:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every year handler code here. */
 219:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_YEAR_HANDLER_CODE` */
 220:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_YEAR);
  35              		.loc 1 220 0
  36 0002 0620     		movs	r0, #6
  37 0004 FFF7FEFF 		bl	AyoItsTime
  38              	.LVL0:
  39 0008 08BD     		pop	{r3, pc}
  40              		.cfi_endproc
  41              	.LFE69:
  42              		.size	RTC_EveryYearHandler, .-RTC_EveryYearHandler
  43 000a 00BF     		.section	.text.RTC_EveryMonthHandler,"ax",%progbits
  44              		.align	2
  45              		.thumb
  46              		.thumb_func
  47              		.type	RTC_EveryMonthHandler, %function
  48              	RTC_EveryMonthHandler:
  49              	.LFB68:
 190:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every month handler code here. */
  50              		.loc 1 190 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54 0000 08B5     		push	{r3, lr}
  55              		.cfi_def_cfa_offset 8
  56              		.cfi_offset 3, -8
  57              		.cfi_offset 14, -4
 193:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
  58              		.loc 1 193 0
  59 0002 0520     		movs	r0, #5
  60 0004 FFF7FEFF 		bl	AyoItsTime
  61              	.LVL1:
  62 0008 08BD     		pop	{r3, pc}
  63              		.cfi_endproc
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 6


  64              	.LFE68:
  65              		.size	RTC_EveryMonthHandler, .-RTC_EveryMonthHandler
  66 000a 00BF     		.section	.text.RTC_EveryDayHandler,"ax",%progbits
  67              		.align	2
  68              		.thumb
  69              		.thumb_func
  70              		.type	RTC_EveryDayHandler, %function
  71              	RTC_EveryDayHandler:
  72              	.LFB66:
 136:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your everyday handler code here. */
  73              		.loc 1 136 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77 0000 08B5     		push	{r3, lr}
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 3, -8
  80              		.cfi_offset 14, -4
 139:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
  81              		.loc 1 139 0
  82 0002 0320     		movs	r0, #3
  83 0004 FFF7FEFF 		bl	AyoItsTime
  84              	.LVL2:
  85 0008 08BD     		pop	{r3, pc}
  86              		.cfi_endproc
  87              	.LFE66:
  88              		.size	RTC_EveryDayHandler, .-RTC_EveryDayHandler
  89 000a 00BF     		.section	.text.RTC_EveryWeekHandler,"ax",%progbits
  90              		.align	2
  91              		.thumb
  92              		.thumb_func
  93              		.type	RTC_EveryWeekHandler, %function
  94              	RTC_EveryWeekHandler:
  95              	.LFB67:
 163:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every week handler code here. */
  96              		.loc 1 163 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100 0000 08B5     		push	{r3, lr}
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 3, -8
 103              		.cfi_offset 14, -4
 166:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 104              		.loc 1 166 0
 105 0002 0420     		movs	r0, #4
 106 0004 FFF7FEFF 		bl	AyoItsTime
 107              	.LVL3:
 108 0008 08BD     		pop	{r3, pc}
 109              		.cfi_endproc
 110              	.LFE67:
 111              		.size	RTC_EveryWeekHandler, .-RTC_EveryWeekHandler
 112 000a 00BF     		.section	.text.RTC_EveryHourHandler,"ax",%progbits
 113              		.align	2
 114              		.thumb
 115              		.thumb_func
 116              		.type	RTC_EveryHourHandler, %function
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 7


 117              	RTC_EveryHourHandler:
 118              	.LFB65:
 109:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every hour handler code here. */
 119              		.loc 1 109 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123 0000 08B5     		push	{r3, lr}
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 3, -8
 126              		.cfi_offset 14, -4
 112:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 127              		.loc 1 112 0
 128 0002 0220     		movs	r0, #2
 129 0004 FFF7FEFF 		bl	AyoItsTime
 130              	.LVL4:
 131 0008 08BD     		pop	{r3, pc}
 132              		.cfi_endproc
 133              	.LFE65:
 134              		.size	RTC_EveryHourHandler, .-RTC_EveryHourHandler
 135 000a 00BF     		.section	.text.RTC_EveryMinuteHandler,"ax",%progbits
 136              		.align	2
 137              		.thumb
 138              		.thumb_func
 139              		.type	RTC_EveryMinuteHandler, %function
 140              	RTC_EveryMinuteHandler:
 141              	.LFB64:
  82:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every minute handler code here. */
 142              		.loc 1 82 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146 0000 08B5     		push	{r3, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 3, -8
 149              		.cfi_offset 14, -4
  85:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 150              		.loc 1 85 0
 151 0002 0120     		movs	r0, #1
 152 0004 FFF7FEFF 		bl	AyoItsTime
 153              	.LVL5:
 154 0008 08BD     		pop	{r3, pc}
 155              		.cfi_endproc
 156              	.LFE64:
 157              		.size	RTC_EveryMinuteHandler, .-RTC_EveryMinuteHandler
 158 000a 00BF     		.section	.text.RTC_EverySecondHandler,"ax",%progbits
 159              		.align	2
 160              		.thumb
 161              		.thumb_func
 162              		.type	RTC_EverySecondHandler, %function
 163              	RTC_EverySecondHandler:
 164              	.LFB63:
  55:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every second handler code here. */
 165              		.loc 1 55 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 8


 169 0000 08B5     		push	{r3, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 3, -8
 172              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 173              		.loc 1 58 0
 174 0002 0020     		movs	r0, #0
 175 0004 FFF7FEFF 		bl	AyoItsTime
 176              	.LVL6:
 177 0008 08BD     		pop	{r3, pc}
 178              		.cfi_endproc
 179              	.LFE63:
 180              		.size	RTC_EverySecondHandler, .-RTC_EverySecondHandler
 181 000a 00BF     		.section	.text.RTC_ISR,"ax",%progbits
 182              		.align	2
 183              		.global	RTC_ISR
 184              		.thumb
 185              		.thumb_func
 186              		.type	RTC_ISR, %function
 187              	RTC_ISR:
 188              	.LFB70:
 221:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 222:Generated_Source\PSoC5/RTC_INT.c **** 
 223:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_YEAR_HANDLER_CALLBACK
 224:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryYearHandler_Callback();
 225:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_YEAR_HANDLER_CALLBACK */    
 226:Generated_Source\PSoC5/RTC_INT.c **** }
 227:Generated_Source\PSoC5/RTC_INT.c **** 
 228:Generated_Source\PSoC5/RTC_INT.c **** 
 229:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/RTC_INT.c **** * Function Name: RTC_ISR
 231:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 232:Generated_Source\PSoC5/RTC_INT.c **** *
 233:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 234:Generated_Source\PSoC5/RTC_INT.c **** *  This ISR is executed on 1PPS (one pulse per second) event.
 235:Generated_Source\PSoC5/RTC_INT.c **** *  Global interrupt must be enabled to invoke this ISR.
 236:Generated_Source\PSoC5/RTC_INT.c **** *  This interrupt trigs every second.
 237:Generated_Source\PSoC5/RTC_INT.c **** *
 238:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 239:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 240:Generated_Source\PSoC5/RTC_INT.c **** *
 241:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 242:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 243:Generated_Source\PSoC5/RTC_INT.c **** *
 244:Generated_Source\PSoC5/RTC_INT.c **** * Global variables:
 245:Generated_Source\PSoC5/RTC_INT.c **** * RTC_currentTimeDate, RTC_dstTimeDateStart,
 246:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstTimeDateStop, RTC_dstTimeDateStart,
 247:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_alarmCfgTimeDate, RTC_statusDateTime,
 248:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStartStatus, RTC_dstStartStatus,
 249:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStopStatus, RTC_alarmCurStatus: global
 250:Generated_Source\PSoC5/RTC_INT.c **** *  variables are used for the time/date, DST and alarm update procedure.
 251:Generated_Source\PSoC5/RTC_INT.c **** *
 252:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstTimeDateStart and RTC_currentTimeDate:
 253:Generated_Source\PSoC5/RTC_INT.c **** *  are modified with the updated values.
 254:Generated_Source\PSoC5/RTC_INT.c **** *
 255:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_statusDateTime, RTC_dstStartStatus,
 256:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStartStatus, RTC_dstStopStatus,
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 9


 257:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_alarmCurStatus: global variables could be modified while
 258:Generated_Source\PSoC5/RTC_INT.c **** *  current time/date is updated.
 259:Generated_Source\PSoC5/RTC_INT.c **** *
 260:Generated_Source\PSoC5/RTC_INT.c **** * Side Effects:
 261:Generated_Source\PSoC5/RTC_INT.c **** *  Clears all interrupt status bits (react_int, limact_int, onepps_int, ctw_int,
 262:Generated_Source\PSoC5/RTC_INT.c **** *  and  ftw_int) in Power Manager Interrupt Status Register. If an interrupt
 263:Generated_Source\PSoC5/RTC_INT.c **** *  gets generated at the same time as a clear, the bit will remain set (which
 264:Generated_Source\PSoC5/RTC_INT.c **** *  causes another interrupt).
 265:Generated_Source\PSoC5/RTC_INT.c **** *
 266:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 267:Generated_Source\PSoC5/RTC_INT.c **** CY_ISR(RTC_ISR)
 268:Generated_Source\PSoC5/RTC_INT.c **** {
 189              		.loc 1 268 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193 0000 08B5     		push	{r3, lr}
 194              		.cfi_def_cfa_offset 8
 195              		.cfi_offset 3, -8
 196              		.cfi_offset 14, -4
 269:Generated_Source\PSoC5/RTC_INT.c ****     uint8 RTC_tmp;
 270:Generated_Source\PSoC5/RTC_INT.c **** 
 271:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_ISR_ENTRY_CALLBACK
 272:Generated_Source\PSoC5/RTC_INT.c ****         RTC_ISR_EntryCallback();
 273:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_ISR_ENTRY_CALLBACK */
 274:Generated_Source\PSoC5/RTC_INT.c ****     
 275:Generated_Source\PSoC5/RTC_INT.c ****     /* Clear OPPS interrupt status flag */
 276:Generated_Source\PSoC5/RTC_INT.c ****     (void) CyPmReadStatus(CY_PM_ONEPPS_INT);
 197              		.loc 1 276 0
 198 0002 0420     		movs	r0, #4
 199 0004 FFF7FEFF 		bl	CyPmReadStatus
 200              	.LVL7:
 277:Generated_Source\PSoC5/RTC_INT.c **** 
 278:Generated_Source\PSoC5/RTC_INT.c ****     /* Increment seconds counter */
 279:Generated_Source\PSoC5/RTC_INT.c ****     RTC_currentTimeDate.Sec++;
 201              		.loc 1 279 0
 202 0008 9A4A     		ldr	r2, .L55
 203 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 204 000c 0133     		adds	r3, r3, #1
 205 000e DBB2     		uxtb	r3, r3
 206 0010 1370     		strb	r3, [r2]
 280:Generated_Source\PSoC5/RTC_INT.c **** 
 281:Generated_Source\PSoC5/RTC_INT.c ****     /* Check if minute elapsed */
 282:Generated_Source\PSoC5/RTC_INT.c ****     if(RTC_currentTimeDate.Sec > RTC_MINUTE_ELAPSED)
 207              		.loc 1 282 0
 208 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 209 0014 DBB2     		uxtb	r3, r3
 210 0016 3B2B     		cmp	r3, #59
 211 0018 40F2F081 		bls	.L16
 283:Generated_Source\PSoC5/RTC_INT.c ****     {
 284:Generated_Source\PSoC5/RTC_INT.c ****         /* Inc Min */
 285:Generated_Source\PSoC5/RTC_INT.c ****         RTC_currentTimeDate.Min++;
 212              		.loc 1 285 0
 213 001c 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 214 001e 0133     		adds	r3, r3, #1
 215 0020 DBB2     		uxtb	r3, r3
 216 0022 5370     		strb	r3, [r2, #1]
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 10


 286:Generated_Source\PSoC5/RTC_INT.c **** 
 287:Generated_Source\PSoC5/RTC_INT.c ****         /* Clear Sec */
 288:Generated_Source\PSoC5/RTC_INT.c ****         RTC_currentTimeDate.Sec = 0u;
 217              		.loc 1 288 0
 218 0024 0023     		movs	r3, #0
 219 0026 1370     		strb	r3, [r2]
 289:Generated_Source\PSoC5/RTC_INT.c **** 
 290:Generated_Source\PSoC5/RTC_INT.c ****         if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 220              		.loc 1 290 0
 221 0028 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 222 002a DBB2     		uxtb	r3, r3
 223 002c 3B2B     		cmp	r3, #59
 224 002e 40F2B481 		bls	.L17
 291:Generated_Source\PSoC5/RTC_INT.c ****         {
 292:Generated_Source\PSoC5/RTC_INT.c ****             /* Inc HOUR */
 293:Generated_Source\PSoC5/RTC_INT.c ****             RTC_currentTimeDate.Hour++;
 225              		.loc 1 293 0
 226 0032 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 227 0034 0133     		adds	r3, r3, #1
 228 0036 DBB2     		uxtb	r3, r3
 229 0038 9370     		strb	r3, [r2, #2]
 294:Generated_Source\PSoC5/RTC_INT.c **** 
 295:Generated_Source\PSoC5/RTC_INT.c ****             /* Clear Min */
 296:Generated_Source\PSoC5/RTC_INT.c ****             RTC_currentTimeDate.Min = 0u;
 230              		.loc 1 296 0
 231 003a 0023     		movs	r3, #0
 232 003c 5370     		strb	r3, [r2, #1]
 297:Generated_Source\PSoC5/RTC_INT.c **** 
 298:Generated_Source\PSoC5/RTC_INT.c ****             /* Day roll over */
 299:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 233              		.loc 1 299 0
 234 003e 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 235 0040 DBB2     		uxtb	r3, r3
 236 0042 172B     		cmp	r3, #23
 237 0044 40F26881 		bls	.L18
 300:Generated_Source\PSoC5/RTC_INT.c ****             {
 301:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfMonth */
 302:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfMonth++;
 238              		.loc 1 302 0
 239 0048 1346     		mov	r3, r2
 240 004a 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 241 004c 0132     		adds	r2, r2, #1
 242 004e D2B2     		uxtb	r2, r2
 243 0050 1A71     		strb	r2, [r3, #4]
 303:Generated_Source\PSoC5/RTC_INT.c **** 
 304:Generated_Source\PSoC5/RTC_INT.c ****                 /* Clear Hour */
 305:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.Hour = 0u;
 244              		.loc 1 305 0
 245 0052 0022     		movs	r2, #0
 246 0054 9A70     		strb	r2, [r3, #2]
 306:Generated_Source\PSoC5/RTC_INT.c **** 
 307:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfYear */
 308:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfYear++;
 247              		.loc 1 308 0
 248 0056 DA88     		ldrh	r2, [r3, #6]
 249 0058 92B2     		uxth	r2, r2
 250 005a 0132     		adds	r2, r2, #1
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 11


 251 005c 92B2     		uxth	r2, r2
 252 005e DA80     		strh	r2, [r3, #6]	@ movhi
 309:Generated_Source\PSoC5/RTC_INT.c **** 
 310:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfWeek */
 311:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfWeek++;
 253              		.loc 1 311 0
 254 0060 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 255 0062 0132     		adds	r2, r2, #1
 256 0064 D2B2     		uxtb	r2, r2
 257 0066 DA70     		strb	r2, [r3, #3]
 312:Generated_Source\PSoC5/RTC_INT.c **** 
 313:Generated_Source\PSoC5/RTC_INT.c ****                 /* Check DayOfWeek */
 314:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
 258              		.loc 1 314 0
 259 0068 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 260 006a DBB2     		uxtb	r3, r3
 261 006c 072B     		cmp	r3, #7
 262 006e 02D9     		bls	.L19
 315:Generated_Source\PSoC5/RTC_INT.c ****                 {
 316:Generated_Source\PSoC5/RTC_INT.c ****                     /* start new week */
 317:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.DayOfWeek = 1u;
 263              		.loc 1 317 0
 264 0070 0122     		movs	r2, #1
 265 0072 804B     		ldr	r3, .L55
 266 0074 DA70     		strb	r2, [r3, #3]
 267              	.L19:
 318:Generated_Source\PSoC5/RTC_INT.c ****                 }
 319:Generated_Source\PSoC5/RTC_INT.c **** 
 320:Generated_Source\PSoC5/RTC_INT.c ****                 /* Day of month roll over.
 321:Generated_Source\PSoC5/RTC_INT.c ****                 * Check if day of month greater than 29 in February of leap year or
 322:Generated_Source\PSoC5/RTC_INT.c ****                 * if day of month greater than 28 NOT in February of NON leap year or
 323:Generated_Source\PSoC5/RTC_INT.c ****                 * if day of month greater than it should be in every month in non leap year
 324:Generated_Source\PSoC5/RTC_INT.c ****                 */
 325:Generated_Source\PSoC5/RTC_INT.c ****                 if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 268              		.loc 1 325 0
 269 0076 804B     		ldr	r3, .L55+4
 270 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 271 007a 13F0020F 		tst	r3, #2
 272 007e 0ED0     		beq	.L20
 326:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 273              		.loc 1 326 0 discriminator 1
 274 0080 7C4B     		ldr	r3, .L55
 275 0082 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 276 0084 DBB2     		uxtb	r3, r3
 325:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 277              		.loc 1 325 0 discriminator 1
 278 0086 022B     		cmp	r3, #2
 279 0088 09D1     		bne	.L20
 327:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 280              		.loc 1 327 0
 281 008a 7A4B     		ldr	r3, .L55
 282 008c 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 283 008e D2B2     		uxtb	r2, r2
 328:Generated_Source\PSoC5/RTC_INT.c ****                              (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 284              		.loc 1 328 0
 285 0090 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 286 0092 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 12


 287 0094 7949     		ldr	r1, .L55+8
 288 0096 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 289 0098 0133     		adds	r3, r3, #1
 326:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 290              		.loc 1 326 0
 291 009a 9A42     		cmp	r2, r3
 292 009c 22D8     		bhi	.L21
 293              	.L20:
 329:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY))  &&
 294              		.loc 1 329 0
 295 009e 764B     		ldr	r3, .L55+4
 296 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 328:Generated_Source\PSoC5/RTC_INT.c ****                              (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 297              		.loc 1 328 0
 298 00a2 13F0020F 		tst	r3, #2
 299 00a6 0DD0     		beq	.L22
 330:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month != RTC_FEBRUARY) &&
 300              		.loc 1 330 0
 301 00a8 724B     		ldr	r3, .L55
 302 00aa 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 303 00ac DBB2     		uxtb	r3, r3
 329:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY))  &&
 304              		.loc 1 329 0
 305 00ae 022B     		cmp	r3, #2
 306 00b0 08D0     		beq	.L22
 331:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 307              		.loc 1 331 0
 308 00b2 704A     		ldr	r2, .L55
 309 00b4 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 310 00b6 DBB2     		uxtb	r3, r3
 332:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 311              		.loc 1 332 0
 312 00b8 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 313 00ba 013A     		subs	r2, r2, #1
 314 00bc 6F49     		ldr	r1, .L55+8
 315 00be 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 330:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month != RTC_FEBRUARY) &&
 316              		.loc 1 330 0
 317 00c0 9342     		cmp	r3, r2
 318 00c2 0FD8     		bhi	.L21
 319              	.L22:
 333:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY))  &&
 320              		.loc 1 333 0
 321 00c4 6C4B     		ldr	r3, .L55+4
 322 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 332:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 323              		.loc 1 332 0
 324 00c8 13F0020F 		tst	r3, #2
 325 00cc 40F0A780 		bne	.L23
 334:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 326              		.loc 1 334 0
 327 00d0 684A     		ldr	r2, .L55
 328 00d2 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 329 00d4 DBB2     		uxtb	r3, r3
 335:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
 330              		.loc 1 335 0
 331 00d6 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 13


 332 00d8 013A     		subs	r2, r2, #1
 333 00da 6849     		ldr	r1, .L55+8
 334 00dc 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 333:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY))  &&
 335              		.loc 1 333 0
 336 00de 9342     		cmp	r3, r2
 337 00e0 40F29D80 		bls	.L23
 338              	.L21:
 336:Generated_Source\PSoC5/RTC_INT.c ****                 {
 337:Generated_Source\PSoC5/RTC_INT.c ****                     /* Inc Month */
 338:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.Month++;
 339              		.loc 1 338 0
 340 00e4 634A     		ldr	r2, .L55
 341 00e6 137A     		ldrb	r3, [r2, #8]	@ zero_extendqisi2
 342 00e8 0133     		adds	r3, r3, #1
 343 00ea DBB2     		uxtb	r3, r3
 344 00ec 1372     		strb	r3, [r2, #8]
 339:Generated_Source\PSoC5/RTC_INT.c **** 
 340:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set first day of month */
 341:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.DayOfMonth = 1u;
 345              		.loc 1 341 0
 346 00ee 0123     		movs	r3, #1
 347 00f0 1371     		strb	r3, [r2, #4]
 342:Generated_Source\PSoC5/RTC_INT.c **** 
 343:Generated_Source\PSoC5/RTC_INT.c ****                     /* Year roll over */
 344:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 348              		.loc 1 344 0
 349 00f2 137A     		ldrb	r3, [r2, #8]	@ zero_extendqisi2
 350 00f4 DBB2     		uxtb	r3, r3
 351 00f6 0C2B     		cmp	r3, #12
 352 00f8 60D9     		bls	.L24
 345:Generated_Source\PSoC5/RTC_INT.c ****                     {
 346:Generated_Source\PSoC5/RTC_INT.c ****                         /* Inc Year */
 347:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.Year++;
 353              		.loc 1 347 0
 354 00fa 5389     		ldrh	r3, [r2, #10]
 355 00fc 9BB2     		uxth	r3, r3
 356 00fe 0133     		adds	r3, r3, #1
 357 0100 9BB2     		uxth	r3, r3
 358 0102 5381     		strh	r3, [r2, #10]	@ movhi
 348:Generated_Source\PSoC5/RTC_INT.c **** 
 349:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set first month of year */
 350:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.Month = 1u;
 359              		.loc 1 350 0
 360 0104 0123     		movs	r3, #1
 361 0106 1372     		strb	r3, [r2, #8]
 351:Generated_Source\PSoC5/RTC_INT.c **** 
 352:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set first day of year */
 353:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.DayOfYear = 1u;
 362              		.loc 1 353 0
 363 0108 D380     		strh	r3, [r2, #6]	@ movhi
 354:Generated_Source\PSoC5/RTC_INT.c **** 
 355:Generated_Source\PSoC5/RTC_INT.c ****                         /* Is this year leap */
 356:Generated_Source\PSoC5/RTC_INT.c ****                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 364              		.loc 1 356 0
 365 010a 5389     		ldrh	r3, [r2, #10]
 366 010c 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 14


 367 010e 5C4A     		ldr	r2, .L55+12
 368 0110 A2FB0312 		umull	r1, r2, r2, r3
 369 0114 D209     		lsrs	r2, r2, #7
 370 0116 4FF4C871 		mov	r1, #400
 371 011a 01FB1233 		mls	r3, r1, r2, r3
 372 011e 9BB2     		uxth	r3, r3
 373 0120 83B1     		cbz	r3, .L25
 374              		.loc 1 356 0 is_stmt 0 discriminator 1
 375 0122 544B     		ldr	r3, .L55
 376 0124 5B89     		ldrh	r3, [r3, #10]
 377 0126 13F0030F 		tst	r3, #3
 378 012a 11D1     		bne	.L26
 379              		.loc 1 356 0 discriminator 2
 380 012c 514B     		ldr	r3, .L55
 381 012e 5B89     		ldrh	r3, [r3, #10]
 382 0130 9BB2     		uxth	r3, r3
 383 0132 534A     		ldr	r2, .L55+12
 384 0134 A2FB0312 		umull	r1, r2, r2, r3
 385 0138 5209     		lsrs	r2, r2, #5
 386 013a 6421     		movs	r1, #100
 387 013c 01FB1233 		mls	r3, r1, r2, r3
 388 0140 9BB2     		uxth	r3, r3
 389 0142 2BB1     		cbz	r3, .L26
 390              	.L25:
 357:Generated_Source\PSoC5/RTC_INT.c ****                         {
 358:Generated_Source\PSoC5/RTC_INT.c ****                             /* Set leap year flag */
 359:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime |= RTC_STATUS_LY;
 391              		.loc 1 359 0 is_stmt 1
 392 0144 4C4A     		ldr	r2, .L55+4
 393 0146 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 394 0148 43F00203 		orr	r3, r3, #2
 395 014c 1370     		strb	r3, [r2]
 396 014e 04E0     		b	.L27
 397              	.L26:
 360:Generated_Source\PSoC5/RTC_INT.c ****                         }
 361:Generated_Source\PSoC5/RTC_INT.c ****                         else    /* not leap year */
 362:Generated_Source\PSoC5/RTC_INT.c ****                         {
 363:Generated_Source\PSoC5/RTC_INT.c ****                             /* Clear leap year */
 364:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 398              		.loc 1 364 0
 399 0150 494A     		ldr	r2, .L55+4
 400 0152 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 401 0154 03F0FD03 		and	r3, r3, #253
 402 0158 1370     		strb	r3, [r2]
 403              	.L27:
 365:Generated_Source\PSoC5/RTC_INT.c ****                         }
 366:Generated_Source\PSoC5/RTC_INT.c **** 
 367:Generated_Source\PSoC5/RTC_INT.c ****                         /* Alarm YEAR */
 368:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 404              		.loc 1 368 0
 405 015a 4A4B     		ldr	r3, .L55+16
 406 015c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 407 015e 13F0800F 		tst	r3, #128
 408 0162 12D0     		beq	.L28
 369:Generated_Source\PSoC5/RTC_INT.c ****                                                              RTC_ALARM_YEAR_MASK))
 370:Generated_Source\PSoC5/RTC_INT.c ****                         {
 371:Generated_Source\PSoC5/RTC_INT.c ****                             /* Years match */
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 15


 372:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 409              		.loc 1 372 0
 410 0164 484B     		ldr	r3, .L55+20
 411 0166 5A89     		ldrh	r2, [r3, #10]
 412 0168 92B2     		uxth	r2, r2
 413 016a 424B     		ldr	r3, .L55
 414 016c 5B89     		ldrh	r3, [r3, #10]
 415 016e 9BB2     		uxth	r3, r3
 416 0170 9A42     		cmp	r2, r3
 417 0172 05D1     		bne	.L29
 373:Generated_Source\PSoC5/RTC_INT.c ****                             {
 374:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Rise year alarm */
 375:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 418              		.loc 1 375 0
 419 0174 454A     		ldr	r2, .L55+24
 420 0176 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 421 0178 43F08003 		orr	r3, r3, #128
 422 017c 1370     		strb	r3, [r2]
 423 017e 04E0     		b	.L28
 424              	.L29:
 376:Generated_Source\PSoC5/RTC_INT.c ****                             }
 377:Generated_Source\PSoC5/RTC_INT.c ****                             else    /* Years do not match */
 378:Generated_Source\PSoC5/RTC_INT.c ****                             {
 379:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Clear year alarm */
 380:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 425              		.loc 1 380 0
 426 0180 424A     		ldr	r2, .L55+24
 427 0182 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 428 0184 03F07F03 		and	r3, r3, #127
 429 0188 1370     		strb	r3, [r2]
 430              	.L28:
 381:Generated_Source\PSoC5/RTC_INT.c ****                             }
 382:Generated_Source\PSoC5/RTC_INT.c ****                         } /* do not alarm year */
 383:Generated_Source\PSoC5/RTC_INT.c **** 
 384:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set Alarm flag event */
 385:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_tmp = RTC_alarmCfgMask;
 431              		.loc 1 385 0
 432 018a 3E4B     		ldr	r3, .L55+16
 433 018c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 434              	.LVL8:
 386:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_SET_ALARM(RTC_tmp,
 435              		.loc 1 386 0
 436 018e 03F0FF02 		and	r2, r3, #255
 437 0192 63B1     		cbz	r3, .L30
 438              		.loc 1 386 0 is_stmt 0 discriminator 1
 439 0194 3D4B     		ldr	r3, .L55+24
 440              	.LVL9:
 441 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 442 0198 32EA0303 		bics	r3, r2, r3
 443 019c 07D1     		bne	.L30
 444              		.loc 1 386 0 discriminator 2
 445 019e 364A     		ldr	r2, .L55+4
 446 01a0 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 447 01a2 43F00803 		orr	r3, r3, #8
 448 01a6 1370     		strb	r3, [r2]
 449 01a8 0022     		movs	r2, #0
 450 01aa 384B     		ldr	r3, .L55+24
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 16


 451 01ac 1A70     		strb	r2, [r3]
 452              	.L30:
 387:Generated_Source\PSoC5/RTC_INT.c ****                                                    RTC_alarmCurStatus,
 388:Generated_Source\PSoC5/RTC_INT.c ****                                                    RTC_statusDateTime);
 389:Generated_Source\PSoC5/RTC_INT.c **** 
 390:Generated_Source\PSoC5/RTC_INT.c ****                         /* Every Year */
 391:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 453              		.loc 1 391 0 is_stmt 1
 454 01ae 384B     		ldr	r3, .L55+28
 455 01b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 456 01b2 13F0400F 		tst	r3, #64
 457 01b6 01D0     		beq	.L24
 392:Generated_Source\PSoC5/RTC_INT.c ****                                                              RTC_INTERVAL_YEAR_MASK))
 393:Generated_Source\PSoC5/RTC_INT.c ****                         {
 394:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_EveryYearHandler();
 458              		.loc 1 394 0
 459 01b8 FFF7FEFF 		bl	RTC_EveryYearHandler
 460              	.LVL10:
 461              	.L24:
 395:Generated_Source\PSoC5/RTC_INT.c ****                         }
 396:Generated_Source\PSoC5/RTC_INT.c **** 
 397:Generated_Source\PSoC5/RTC_INT.c ****                     } /* Month > 12 */
 398:Generated_Source\PSoC5/RTC_INT.c **** 
 399:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm MONTH */
 400:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 462              		.loc 1 400 0
 463 01bc 314B     		ldr	r3, .L55+16
 464 01be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 465 01c0 13F0400F 		tst	r3, #64
 466 01c4 12D0     		beq	.L31
 401:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_MONTH_MASK))
 402:Generated_Source\PSoC5/RTC_INT.c ****                     {
 403:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 467              		.loc 1 403 0
 468 01c6 304B     		ldr	r3, .L55+20
 469 01c8 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 470 01ca D2B2     		uxtb	r2, r2
 471 01cc 294B     		ldr	r3, .L55
 472 01ce 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 473 01d0 DBB2     		uxtb	r3, r3
 474 01d2 9A42     		cmp	r2, r3
 475 01d4 05D1     		bne	.L32
 404:Generated_Source\PSoC5/RTC_INT.c ****                         {
 405:Generated_Source\PSoC5/RTC_INT.c ****                             /* Set month alarm */
 406:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 476              		.loc 1 406 0
 477 01d6 2D4A     		ldr	r2, .L55+24
 478 01d8 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 479 01da 43F04003 		orr	r3, r3, #64
 480 01de 1370     		strb	r3, [r2]
 481 01e0 04E0     		b	.L31
 482              	.L32:
 407:Generated_Source\PSoC5/RTC_INT.c ****                         }
 408:Generated_Source\PSoC5/RTC_INT.c ****                         else
 409:Generated_Source\PSoC5/RTC_INT.c ****                         {
 410:Generated_Source\PSoC5/RTC_INT.c ****                             /* Clear month alarm */
 411:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 17


 483              		.loc 1 411 0
 484 01e2 2A4A     		ldr	r2, .L55+24
 485 01e4 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 486 01e6 03F0BF03 		and	r3, r3, #191
 487 01ea 1370     		strb	r3, [r2]
 488              	.L31:
 412:Generated_Source\PSoC5/RTC_INT.c ****                         }
 413:Generated_Source\PSoC5/RTC_INT.c ****                     }   /* Month alarm is masked */
 414:Generated_Source\PSoC5/RTC_INT.c **** 
 415:Generated_Source\PSoC5/RTC_INT.c ****                     #if (1u == RTC_DST_FUNC_ENABLE)
 416:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
 417:Generated_Source\PSoC5/RTC_INT.c ****                         {
 418:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus |= RTC_DST_MONTH;
 419:Generated_Source\PSoC5/RTC_INT.c ****                         }
 420:Generated_Source\PSoC5/RTC_INT.c ****                         else
 421:Generated_Source\PSoC5/RTC_INT.c ****                         {
 422:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
 423:Generated_Source\PSoC5/RTC_INT.c ****                         }
 424:Generated_Source\PSoC5/RTC_INT.c **** 
 425:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_dstTimeDateStart.Month == RTC_currentTimeDate.Month)
 426:Generated_Source\PSoC5/RTC_INT.c ****                         {
 427:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus |= RTC_DST_MONTH;
 428:Generated_Source\PSoC5/RTC_INT.c ****                         }
 429:Generated_Source\PSoC5/RTC_INT.c ****                         else
 430:Generated_Source\PSoC5/RTC_INT.c ****                         {
 431:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus &= (uint8)(~RTC_DST_MONTH);
 432:Generated_Source\PSoC5/RTC_INT.c ****                         }
 433:Generated_Source\PSoC5/RTC_INT.c ****                     #endif /* 1u == RTC_DST_FUNC_ENABLE */
 434:Generated_Source\PSoC5/RTC_INT.c **** 
 435:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set Alarm flag event */
 436:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_tmp = RTC_alarmCfgMask;
 489              		.loc 1 436 0
 490 01ec 254B     		ldr	r3, .L55+16
 491 01ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 492              	.LVL11:
 437:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_SET_ALARM(RTC_tmp,
 493              		.loc 1 437 0
 494 01f0 03F0FF02 		and	r2, r3, #255
 495 01f4 63B1     		cbz	r3, .L33
 496              		.loc 1 437 0 is_stmt 0 discriminator 1
 497 01f6 254B     		ldr	r3, .L55+24
 498              	.LVL12:
 499 01f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 500 01fa 32EA0303 		bics	r3, r2, r3
 501 01fe 07D1     		bne	.L33
 502              		.loc 1 437 0 discriminator 2
 503 0200 1D4A     		ldr	r2, .L55+4
 504 0202 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 505 0204 43F00803 		orr	r3, r3, #8
 506 0208 1370     		strb	r3, [r2]
 507 020a 0022     		movs	r2, #0
 508 020c 1F4B     		ldr	r3, .L55+24
 509 020e 1A70     		strb	r2, [r3]
 510              	.L33:
 438:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_alarmCurStatus,
 439:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_statusDateTime);
 440:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 18


 441:Generated_Source\PSoC5/RTC_INT.c ****                     /* Every Month */
 442:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 511              		.loc 1 442 0 is_stmt 1
 512 0210 1F4B     		ldr	r3, .L55+28
 513 0212 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 514 0214 13F0200F 		tst	r3, #32
 515 0218 01D0     		beq	.L23
 443:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_INTERVAL_MONTH_MASK))
 444:Generated_Source\PSoC5/RTC_INT.c ****                     {
 445:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_EveryMonthHandler();
 516              		.loc 1 445 0
 517 021a FFF7FEFF 		bl	RTC_EveryMonthHandler
 518              	.LVL13:
 519              	.L23:
 446:Generated_Source\PSoC5/RTC_INT.c ****                     }
 447:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day roll over */
 448:Generated_Source\PSoC5/RTC_INT.c **** 
 449:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFWEEK */
 450:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 520              		.loc 1 450 0
 521 021e 194B     		ldr	r3, .L55+16
 522 0220 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 523 0222 13F0080F 		tst	r3, #8
 524 0226 12D0     		beq	.L34
 451:Generated_Source\PSoC5/RTC_INT.c ****                                                      RTC_ALARM_DAYOFWEEK_MASK))
 452:Generated_Source\PSoC5/RTC_INT.c ****                 {
 453:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 525              		.loc 1 453 0
 526 0228 174B     		ldr	r3, .L55+20
 527 022a DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 528 022c D2B2     		uxtb	r2, r2
 529 022e 114B     		ldr	r3, .L55
 530 0230 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 531 0232 DBB2     		uxtb	r3, r3
 532 0234 9A42     		cmp	r2, r3
 533 0236 05D1     		bne	.L35
 454:Generated_Source\PSoC5/RTC_INT.c ****                     {
 455:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of week alarm */
 456:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 534              		.loc 1 456 0
 535 0238 144A     		ldr	r2, .L55+24
 536 023a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 537 023c 43F00803 		orr	r3, r3, #8
 538 0240 1370     		strb	r3, [r2]
 539 0242 04E0     		b	.L34
 540              	.L35:
 457:Generated_Source\PSoC5/RTC_INT.c ****                     }
 458:Generated_Source\PSoC5/RTC_INT.c ****                     else
 459:Generated_Source\PSoC5/RTC_INT.c ****                     {
 460:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of week alarm */
 461:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 541              		.loc 1 461 0
 542 0244 114A     		ldr	r2, .L55+24
 543 0246 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 544 0248 03F0F703 		and	r3, r3, #247
 545 024c 1370     		strb	r3, [r2]
 546              	.L34:
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 19


 462:Generated_Source\PSoC5/RTC_INT.c ****                     }
 463:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of week alarm is masked */
 464:Generated_Source\PSoC5/RTC_INT.c **** 
 465:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFYEAR */
 466:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 547              		.loc 1 466 0
 548 024e 0D4B     		ldr	r3, .L55+16
 549 0250 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 550 0252 13F0200F 		tst	r3, #32
 551 0256 22D0     		beq	.L36
 467:Generated_Source\PSoC5/RTC_INT.c ****                                                      RTC_ALARM_DAYOFYEAR_MASK))
 468:Generated_Source\PSoC5/RTC_INT.c ****                 {
 469:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 552              		.loc 1 469 0
 553 0258 0B4B     		ldr	r3, .L55+20
 554 025a DA88     		ldrh	r2, [r3, #6]
 555 025c 92B2     		uxth	r2, r2
 556 025e 054B     		ldr	r3, .L55
 557 0260 DB88     		ldrh	r3, [r3, #6]
 558 0262 9BB2     		uxth	r3, r3
 559 0264 9A42     		cmp	r2, r3
 560 0266 15D1     		bne	.L37
 470:Generated_Source\PSoC5/RTC_INT.c ****                     {
 471:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of year alarm */
 472:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 561              		.loc 1 472 0
 562 0268 084A     		ldr	r2, .L55+24
 563 026a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 564 026c 43F02003 		orr	r3, r3, #32
 565 0270 1370     		strb	r3, [r2]
 566 0272 14E0     		b	.L36
 567              	.L56:
 568              		.align	2
 569              	.L55:
 570 0274 00000000 		.word	RTC_currentTimeDate
 571 0278 00000000 		.word	RTC_statusDateTime
 572 027c 00000000 		.word	RTC_daysInMonths
 573 0280 1F85EB51 		.word	1374389535
 574 0284 00000000 		.word	RTC_alarmCfgMask
 575 0288 00000000 		.word	RTC_alarmCfgTimeDate
 576 028c 00000000 		.word	RTC_alarmCurStatus
 577 0290 00000000 		.word	RTC_intervalCfgMask
 578              	.L37:
 473:Generated_Source\PSoC5/RTC_INT.c ****                     }
 474:Generated_Source\PSoC5/RTC_INT.c ****                     else
 475:Generated_Source\PSoC5/RTC_INT.c ****                     {
 476:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of year alarm */
 477:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 579              		.loc 1 477 0
 580 0294 724A     		ldr	r2, .L57
 581 0296 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 582 0298 03F0DF03 		and	r3, r3, #223
 583 029c 1370     		strb	r3, [r2]
 584              	.L36:
 478:Generated_Source\PSoC5/RTC_INT.c ****                     }
 479:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of year alarm is masked */
 480:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 20


 481:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFMONTH */
 482:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 585              		.loc 1 482 0
 586 029e 714B     		ldr	r3, .L57+4
 587 02a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 588 02a2 13F0100F 		tst	r3, #16
 589 02a6 12D0     		beq	.L38
 483:Generated_Source\PSoC5/RTC_INT.c ****                          RTC_ALARM_DAYOFMONTH_MASK))
 484:Generated_Source\PSoC5/RTC_INT.c ****                 {
 485:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 590              		.loc 1 485 0
 591 02a8 6F4B     		ldr	r3, .L57+8
 592 02aa 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 593 02ac D2B2     		uxtb	r2, r2
 594 02ae 6F4B     		ldr	r3, .L57+12
 595 02b0 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 596 02b2 DBB2     		uxtb	r3, r3
 597 02b4 9A42     		cmp	r2, r3
 598 02b6 05D1     		bne	.L39
 486:Generated_Source\PSoC5/RTC_INT.c ****                     {
 487:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of month alarm */
 488:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 599              		.loc 1 488 0
 600 02b8 694A     		ldr	r2, .L57
 601 02ba 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 602 02bc 43F01003 		orr	r3, r3, #16
 603 02c0 1370     		strb	r3, [r2]
 604 02c2 04E0     		b	.L38
 605              	.L39:
 489:Generated_Source\PSoC5/RTC_INT.c ****                     }
 490:Generated_Source\PSoC5/RTC_INT.c ****                     else
 491:Generated_Source\PSoC5/RTC_INT.c ****                     {
 492:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of month alarm */
 493:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 606              		.loc 1 493 0
 607 02c4 664A     		ldr	r2, .L57
 608 02c6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 609 02c8 03F0EF03 		and	r3, r3, #239
 610 02cc 1370     		strb	r3, [r2]
 611              	.L38:
 494:Generated_Source\PSoC5/RTC_INT.c ****                     }
 495:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of month alarm is masked */
 496:Generated_Source\PSoC5/RTC_INT.c **** 
 497:Generated_Source\PSoC5/RTC_INT.c ****                 #if (1u == RTC_DST_FUNC_ENABLE)
 498:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_dstTimeDateStop.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 499:Generated_Source\PSoC5/RTC_INT.c ****                     {
 500:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
 501:Generated_Source\PSoC5/RTC_INT.c ****                     }
 502:Generated_Source\PSoC5/RTC_INT.c ****                     else
 503:Generated_Source\PSoC5/RTC_INT.c ****                     {
 504:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 505:Generated_Source\PSoC5/RTC_INT.c ****                     }
 506:Generated_Source\PSoC5/RTC_INT.c **** 
 507:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_dstTimeDateStart.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 508:Generated_Source\PSoC5/RTC_INT.c ****                     {
 509:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStartStatus |= RTC_DST_DAYOFMONTH;
 510:Generated_Source\PSoC5/RTC_INT.c ****                     }
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 21


 511:Generated_Source\PSoC5/RTC_INT.c ****                     else
 512:Generated_Source\PSoC5/RTC_INT.c ****                     {
 513:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStartStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 514:Generated_Source\PSoC5/RTC_INT.c ****                     }
 515:Generated_Source\PSoC5/RTC_INT.c ****                 #endif /* 1u == RTC_DST_FUNC_ENABLE */
 516:Generated_Source\PSoC5/RTC_INT.c **** 
 517:Generated_Source\PSoC5/RTC_INT.c ****                 /* Set Alarm flag event */
 518:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_tmp = RTC_alarmCfgMask;
 612              		.loc 1 518 0
 613 02ce 654B     		ldr	r3, .L57+4
 614 02d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 615              	.LVL14:
 519:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_SET_ALARM(RTC_tmp,
 616              		.loc 1 519 0
 617 02d2 03F0FF02 		and	r2, r3, #255
 618 02d6 63B1     		cbz	r3, .L40
 619              		.loc 1 519 0 is_stmt 0 discriminator 1
 620 02d8 614B     		ldr	r3, .L57
 621              	.LVL15:
 622 02da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 623 02dc 32EA0303 		bics	r3, r2, r3
 624 02e0 07D1     		bne	.L40
 625              		.loc 1 519 0 discriminator 2
 626 02e2 634A     		ldr	r2, .L57+16
 627 02e4 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 628 02e6 43F00803 		orr	r3, r3, #8
 629 02ea 1370     		strb	r3, [r2]
 630 02ec 0022     		movs	r2, #0
 631 02ee 5C4B     		ldr	r3, .L57
 632 02f0 1A70     		strb	r2, [r3]
 633              	.L40:
 520:Generated_Source\PSoC5/RTC_INT.c ****                                            RTC_alarmCurStatus,
 521:Generated_Source\PSoC5/RTC_INT.c ****                                            RTC_statusDateTime);
 522:Generated_Source\PSoC5/RTC_INT.c **** 
 523:Generated_Source\PSoC5/RTC_INT.c ****                 /* Every Day */
 524:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 634              		.loc 1 524 0 is_stmt 1
 635 02f2 604B     		ldr	r3, .L57+20
 636 02f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 637 02f6 13F0080F 		tst	r3, #8
 638 02fa 01D0     		beq	.L41
 525:Generated_Source\PSoC5/RTC_INT.c ****                          RTC_INTERVAL_DAY_MASK))
 526:Generated_Source\PSoC5/RTC_INT.c ****                 {
 527:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_EveryDayHandler();
 639              		.loc 1 527 0
 640 02fc FFF7FEFF 		bl	RTC_EveryDayHandler
 641              	.LVL16:
 642              	.L41:
 528:Generated_Source\PSoC5/RTC_INT.c ****                 }
 529:Generated_Source\PSoC5/RTC_INT.c **** 
 530:Generated_Source\PSoC5/RTC_INT.c ****                 if(1u == RTC_currentTimeDate.DayOfWeek)
 643              		.loc 1 530 0
 644 0300 5A4B     		ldr	r3, .L57+12
 645 0302 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 646 0304 DBB2     		uxtb	r3, r3
 647 0306 012B     		cmp	r3, #1
 648 0308 06D1     		bne	.L18
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 22


 531:Generated_Source\PSoC5/RTC_INT.c ****                 {
 532:Generated_Source\PSoC5/RTC_INT.c ****                     /* Every Week */
 533:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 649              		.loc 1 533 0
 650 030a 5A4B     		ldr	r3, .L57+20
 651 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 652 030e 13F0100F 		tst	r3, #16
 653 0312 01D0     		beq	.L18
 534:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_INTERVAL_WEEK_MASK))
 535:Generated_Source\PSoC5/RTC_INT.c ****                     {
 536:Generated_Source\PSoC5/RTC_INT.c ****                        RTC_EveryWeekHandler();
 654              		.loc 1 536 0
 655 0314 FFF7FEFF 		bl	RTC_EveryWeekHandler
 656              	.LVL17:
 657              	.L18:
 537:Generated_Source\PSoC5/RTC_INT.c ****                     }
 538:Generated_Source\PSoC5/RTC_INT.c ****                 }
 539:Generated_Source\PSoC5/RTC_INT.c **** 
 540:Generated_Source\PSoC5/RTC_INT.c ****             } /* End of day roll over */
 541:Generated_Source\PSoC5/RTC_INT.c **** 
 542:Generated_Source\PSoC5/RTC_INT.c ****             /* Status set PM/AM flag */
 543:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 658              		.loc 1 543 0
 659 0318 544B     		ldr	r3, .L57+12
 660 031a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 661 031c DBB2     		uxtb	r3, r3
 662 031e 0B2B     		cmp	r3, #11
 663 0320 05D8     		bhi	.L42
 544:Generated_Source\PSoC5/RTC_INT.c ****             {
 545:Generated_Source\PSoC5/RTC_INT.c ****                 /* AM Hour 00:00-11:59, flag zero */
 546:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 664              		.loc 1 546 0
 665 0322 534A     		ldr	r2, .L57+16
 666 0324 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 667 0326 03F0FB03 		and	r3, r3, #251
 668 032a 1370     		strb	r3, [r2]
 669 032c 04E0     		b	.L43
 670              	.L42:
 547:Generated_Source\PSoC5/RTC_INT.c ****             }
 548:Generated_Source\PSoC5/RTC_INT.c ****             else
 549:Generated_Source\PSoC5/RTC_INT.c ****             {
 550:Generated_Source\PSoC5/RTC_INT.c ****                 /* PM Hour 12:00-23:59, flag set */
 551:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_statusDateTime |= RTC_STATUS_AM_PM;
 671              		.loc 1 551 0
 672 032e 504A     		ldr	r2, .L57+16
 673 0330 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 674 0332 43F00403 		orr	r3, r3, #4
 675 0336 1370     		strb	r3, [r2]
 676              	.L43:
 552:Generated_Source\PSoC5/RTC_INT.c ****             }
 553:Generated_Source\PSoC5/RTC_INT.c **** 
 554:Generated_Source\PSoC5/RTC_INT.c ****             #if (1u == RTC_DST_FUNC_ENABLE)
 555:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_dstTimeDateStop.Hour == RTC_currentTimeDate.Hour)
 556:Generated_Source\PSoC5/RTC_INT.c ****                 {
 557:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStopStatus |= RTC_DST_HOUR;
 558:Generated_Source\PSoC5/RTC_INT.c ****                 }
 559:Generated_Source\PSoC5/RTC_INT.c ****                 else
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 23


 560:Generated_Source\PSoC5/RTC_INT.c ****                 {
 561:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStopStatus &= (uint8)(~RTC_DST_HOUR);
 562:Generated_Source\PSoC5/RTC_INT.c ****                 }
 563:Generated_Source\PSoC5/RTC_INT.c **** 
 564:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_dstTimeDateStart.Hour == RTC_currentTimeDate.Hour)
 565:Generated_Source\PSoC5/RTC_INT.c ****                 {
 566:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStartStatus |= RTC_DST_HOUR;
 567:Generated_Source\PSoC5/RTC_INT.c ****                 }
 568:Generated_Source\PSoC5/RTC_INT.c ****                 else
 569:Generated_Source\PSoC5/RTC_INT.c ****                 {
 570:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_dstStartStatus &= (uint8)(~RTC_DST_HOUR);
 571:Generated_Source\PSoC5/RTC_INT.c ****                 }
 572:Generated_Source\PSoC5/RTC_INT.c **** 
 573:Generated_Source\PSoC5/RTC_INT.c ****                 /* DST Enable ? */
 574:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_dstModeType, RTC_DST_ENABLE))
 575:Generated_Source\PSoC5/RTC_INT.c ****                 {
 576:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_statusDateTime, RTC_STATUS_DST))
 577:Generated_Source\PSoC5/RTC_INT.c ****                     {
 578:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_dstStopStatus, RTC_DST_HOUR |
 579:Generated_Source\PSoC5/RTC_INT.c ****                                                        RTC_DST_DAYOFMONTH | RTC_DST_MONTH))
 580:Generated_Source\PSoC5/RTC_INT.c ****                         {
 581:Generated_Source\PSoC5/RTC_INT.c ****                             /* Substruct from current value of minutes, number of minutes
 582:Generated_Source\PSoC5/RTC_INT.c ****                             * in DST offset which is out of complete hour
 583:Generated_Source\PSoC5/RTC_INT.c ****                             */
 584:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Min -=
 585:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 586:Generated_Source\PSoC5/RTC_INT.c **** 
 587:Generated_Source\PSoC5/RTC_INT.c ****                             /* Is minute value negative? */
 588:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 589:Generated_Source\PSoC5/RTC_INT.c ****                             {
 590:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Convert to the positive.
 591:Generated_Source\PSoC5/RTC_INT.c ****                                 * HOUR_ELAPSED -     (~currentTimeDate.Min    ) ==
 592:Generated_Source\PSoC5/RTC_INT.c ****                                 * HOUR_ELAPSED + 1 - (~currentTimeDate.Min + 1)
 593:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 594:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Min = RTC_HOUR_ELAPSED -
 595:Generated_Source\PSoC5/RTC_INT.c ****                                                              ((uint8)(~RTC_currentTimeDate.Min));
 596:Generated_Source\PSoC5/RTC_INT.c **** 
 597:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour--;
 598:Generated_Source\PSoC5/RTC_INT.c ****                             }
 599:Generated_Source\PSoC5/RTC_INT.c **** 
 600:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Hour -= RTC_dstOffsetMin /
 601:Generated_Source\PSoC5/RTC_INT.c ****                                                                      (RTC_HOUR_ELAPSED + 1u);
 602:Generated_Source\PSoC5/RTC_INT.c **** 
 603:Generated_Source\PSoC5/RTC_INT.c ****                             /* Day roll over
 604:Generated_Source\PSoC5/RTC_INT.c ****                             * Is hour value negative? */
 605:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 606:Generated_Source\PSoC5/RTC_INT.c ****                             {
 607:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Convert to the positive.
 608:Generated_Source\PSoC5/RTC_INT.c ****                                 * DAY_ELAPSED - (~currentTimeDate.Hour) ==
 609:Generated_Source\PSoC5/RTC_INT.c ****                                 * DAY_ELAPSED + 1 - (~currentTimeDate.Hour + 1)
 610:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 611:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour = RTC_DAY_ELAPSED -
 612:Generated_Source\PSoC5/RTC_INT.c ****                                                               ((uint8)(~RTC_currentTimeDate.Hour));
 613:Generated_Source\PSoC5/RTC_INT.c **** 
 614:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Status set PM/AM flag */
 615:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 616:Generated_Source\PSoC5/RTC_INT.c ****                                 {
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 24


 617:Generated_Source\PSoC5/RTC_INT.c ****                                     /* AM Hour 00:00-11:59, flag zero */
 618:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 619:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 620:Generated_Source\PSoC5/RTC_INT.c ****                                 else
 621:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 622:Generated_Source\PSoC5/RTC_INT.c ****                                     /* PM Hour 12:00-23:59, flag set */
 623:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime |= RTC_STATUS_AM_PM;
 624:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 625:Generated_Source\PSoC5/RTC_INT.c **** 
 626:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfMonth--;
 627:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfYear--;
 628:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfWeek--;
 629:Generated_Source\PSoC5/RTC_INT.c **** 
 630:Generated_Source\PSoC5/RTC_INT.c ****                                 if(0u == RTC_currentTimeDate.DayOfWeek)
 631:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 632:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfWeek = RTC_DAYS_IN_WEEK;
 633:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 634:Generated_Source\PSoC5/RTC_INT.c **** 
 635:Generated_Source\PSoC5/RTC_INT.c ****                                 if(0u == RTC_currentTimeDate.DayOfMonth)
 636:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 637:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.Month--;
 638:Generated_Source\PSoC5/RTC_INT.c ****                                     if(0u == RTC_currentTimeDate.Month)
 639:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 640:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Month = RTC_DECEMBER;
 641:Generated_Source\PSoC5/RTC_INT.c **** 
 642:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.DayOfMonth =
 643:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 644:Generated_Source\PSoC5/RTC_INT.c **** 
 645:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Year--;
 646:Generated_Source\PSoC5/RTC_INT.c **** 
 647:Generated_Source\PSoC5/RTC_INT.c ****                                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 648:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 649:Generated_Source\PSoC5/RTC_INT.c ****                                             /* LP - true, else - false */
 650:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime |= RTC_STATUS_LY;
 651:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfYear =
 652:Generated_Source\PSoC5/RTC_INT.c ****                                                                                     RTC_DAYS_IN_LEA
 653:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 654:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 655:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 656:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 657:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfYear = RTC_DAYS_IN_YEAR;
 658:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 659:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_EveryYearHandler();
 660:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 661:Generated_Source\PSoC5/RTC_INT.c ****                                     else
 662:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 663:Generated_Source\PSoC5/RTC_INT.c ****                                         /* Day of month roll over.
 664:Generated_Source\PSoC5/RTC_INT.c ****                                         * Check if day of month February 29 of leap year
 665:Generated_Source\PSoC5/RTC_INT.c ****                                         */
 666:Generated_Source\PSoC5/RTC_INT.c ****                                         if((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 667:Generated_Source\PSoC5/RTC_INT.c ****                                             (RTC_currentTimeDate.Month == RTC_FEBRUARY))
 668:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 669:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfMonth =
 670:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u]
 671:Generated_Source\PSoC5/RTC_INT.c ****                                             + 1u;
 672:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 673:Generated_Source\PSoC5/RTC_INT.c ****                                         else
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 25


 674:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 675:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfMonth =
 676:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 677:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 678:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 679:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_EveryMonthHandler();
 680:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 681:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_EveryDayHandler();
 682:Generated_Source\PSoC5/RTC_INT.c ****                             }
 683:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_DST);
 684:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus = 0u;
 685:Generated_Source\PSoC5/RTC_INT.c ****                         }
 686:Generated_Source\PSoC5/RTC_INT.c ****                     }
 687:Generated_Source\PSoC5/RTC_INT.c ****                     else
 688:Generated_Source\PSoC5/RTC_INT.c ****                     {
 689:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_dstStartStatus,
 690:Generated_Source\PSoC5/RTC_INT.c ****                                                       (RTC_DST_HOUR | RTC_DST_DAYOFMONTH |
 691:Generated_Source\PSoC5/RTC_INT.c ****                                                        RTC_DST_MONTH)))
 692:Generated_Source\PSoC5/RTC_INT.c ****                         {
 693:Generated_Source\PSoC5/RTC_INT.c ****                             /* Add Hour and Min */
 694:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Min +=
 695:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 696:Generated_Source\PSoC5/RTC_INT.c **** 
 697:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 698:Generated_Source\PSoC5/RTC_INT.c ****                             {
 699:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Adjust Min */
 700:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Min -= (RTC_HOUR_ELAPSED + 1u);
 701:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour++;
 702:Generated_Source\PSoC5/RTC_INT.c ****                             }
 703:Generated_Source\PSoC5/RTC_INT.c **** 
 704:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Hour += RTC_dstOffsetMin /
 705:Generated_Source\PSoC5/RTC_INT.c ****                                                                      (RTC_HOUR_ELAPSED + 1u);
 706:Generated_Source\PSoC5/RTC_INT.c **** 
 707:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 708:Generated_Source\PSoC5/RTC_INT.c ****                             {
 709:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Adjust hour, add day */
 710:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour -= (RTC_DAY_ELAPSED + 1u);
 711:Generated_Source\PSoC5/RTC_INT.c **** 
 712:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Status set PM/AM flag */
 713:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 714:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 715:Generated_Source\PSoC5/RTC_INT.c ****                                     /* AM Hour 00:00-11:59, flag zero */
 716:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 717:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 718:Generated_Source\PSoC5/RTC_INT.c ****                                 else
 719:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 720:Generated_Source\PSoC5/RTC_INT.c ****                                     /* PM Hour 12:00-23:59, flag set */
 721:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime |= RTC_STATUS_AM_PM;
 722:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 723:Generated_Source\PSoC5/RTC_INT.c **** 
 724:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfMonth++;
 725:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfYear++;
 726:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfWeek++;
 727:Generated_Source\PSoC5/RTC_INT.c **** 
 728:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
 729:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 730:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfWeek = 1u;
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 26


 731:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 732:Generated_Source\PSoC5/RTC_INT.c **** 
 733:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Day of month roll over.
 734:Generated_Source\PSoC5/RTC_INT.c ****                                 * Check if day of month greater than 29 in February of leap year or
 735:Generated_Source\PSoC5/RTC_INT.c ****                                 * if day of month greater than 28 NOT in February of NON leap year 
 736:Generated_Source\PSoC5/RTC_INT.c ****                                 * if day of month greater than it should be in every month in non l
 737:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 738:Generated_Source\PSoC5/RTC_INT.c ****                                 if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 739:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 740:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 741:Generated_Source\PSoC5/RTC_INT.c ****                                   (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 742:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 743:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month != RTC_FEBRUARY)  &&
 744:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 745:Generated_Source\PSoC5/RTC_INT.c ****                                      RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 746:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY)) &&
 747:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 748:Generated_Source\PSoC5/RTC_INT.c ****                                      RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
 749:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 750:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.Month++;
 751:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfMonth = 1u;
 752:Generated_Source\PSoC5/RTC_INT.c ****                                     if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 753:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 754:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Month = RTC_JANUARY;
 755:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Year++;
 756:Generated_Source\PSoC5/RTC_INT.c **** 
 757:Generated_Source\PSoC5/RTC_INT.c ****                                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 758:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 759:Generated_Source\PSoC5/RTC_INT.c ****                                             /* LP - true, else - false */
 760:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime |= RTC_STATUS_LY;
 761:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 762:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 763:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 764:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 765:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 766:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.DayOfYear = 1u;
 767:Generated_Source\PSoC5/RTC_INT.c **** 
 768:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_EveryYearHandler();
 769:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 770:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_EveryMonthHandler();
 771:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 772:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_EveryDayHandler();
 773:Generated_Source\PSoC5/RTC_INT.c ****                             }
 774:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime |= RTC_STATUS_DST;
 775:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus = 0u;
 776:Generated_Source\PSoC5/RTC_INT.c **** 
 777:Generated_Source\PSoC5/RTC_INT.c ****                             /* Month */
 778:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
 779:Generated_Source\PSoC5/RTC_INT.c ****                             {
 780:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus |= RTC_DST_MONTH;
 781:Generated_Source\PSoC5/RTC_INT.c ****                             }
 782:Generated_Source\PSoC5/RTC_INT.c ****                             else
 783:Generated_Source\PSoC5/RTC_INT.c ****                             {
 784:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
 785:Generated_Source\PSoC5/RTC_INT.c ****                             }
 786:Generated_Source\PSoC5/RTC_INT.c **** 
 787:Generated_Source\PSoC5/RTC_INT.c ****                             /* DayOfMonth */
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 27


 788:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_dstTimeDateStop.DayOfMonth ==
 789:Generated_Source\PSoC5/RTC_INT.c ****                                                                             RTC_currentTimeDate.Day
 790:Generated_Source\PSoC5/RTC_INT.c ****                             {
 791:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
 792:Generated_Source\PSoC5/RTC_INT.c ****                             }
 793:Generated_Source\PSoC5/RTC_INT.c ****                             else
 794:Generated_Source\PSoC5/RTC_INT.c ****                             {
 795:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 796:Generated_Source\PSoC5/RTC_INT.c ****                             }
 797:Generated_Source\PSoC5/RTC_INT.c ****                         }
 798:Generated_Source\PSoC5/RTC_INT.c ****                     }
 799:Generated_Source\PSoC5/RTC_INT.c **** 
 800:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFWEEK */
 801:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 802:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFWEEK_MASK))
 803:Generated_Source\PSoC5/RTC_INT.c ****                     {
 804:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 805:Generated_Source\PSoC5/RTC_INT.c ****                         {
 806:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 807:Generated_Source\PSoC5/RTC_INT.c ****                         }
 808:Generated_Source\PSoC5/RTC_INT.c ****                         else
 809:Generated_Source\PSoC5/RTC_INT.c ****                         {
 810:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 811:Generated_Source\PSoC5/RTC_INT.c ****                         }
 812:Generated_Source\PSoC5/RTC_INT.c ****                     }
 813:Generated_Source\PSoC5/RTC_INT.c **** 
 814:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFYEAR */
 815:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 816:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFYEAR_MASK))
 817:Generated_Source\PSoC5/RTC_INT.c ****                     {
 818:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 819:Generated_Source\PSoC5/RTC_INT.c ****                         {
 820:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 821:Generated_Source\PSoC5/RTC_INT.c ****                         }
 822:Generated_Source\PSoC5/RTC_INT.c ****                         else
 823:Generated_Source\PSoC5/RTC_INT.c ****                         {
 824:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 825:Generated_Source\PSoC5/RTC_INT.c ****                         }
 826:Generated_Source\PSoC5/RTC_INT.c ****                     }
 827:Generated_Source\PSoC5/RTC_INT.c **** 
 828:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFMONTH */
 829:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 830:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFMONTH_MASK))
 831:Generated_Source\PSoC5/RTC_INT.c ****                     {
 832:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 833:Generated_Source\PSoC5/RTC_INT.c ****                         {
 834:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 835:Generated_Source\PSoC5/RTC_INT.c ****                         }
 836:Generated_Source\PSoC5/RTC_INT.c ****                         else
 837:Generated_Source\PSoC5/RTC_INT.c ****                         {
 838:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 839:Generated_Source\PSoC5/RTC_INT.c ****                         }
 840:Generated_Source\PSoC5/RTC_INT.c ****                     }
 841:Generated_Source\PSoC5/RTC_INT.c **** 
 842:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm MONTH */
 843:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 844:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_MONTH_MASK))
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 28


 845:Generated_Source\PSoC5/RTC_INT.c ****                     {
 846:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 847:Generated_Source\PSoC5/RTC_INT.c ****                         {
 848:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 849:Generated_Source\PSoC5/RTC_INT.c ****                         }
 850:Generated_Source\PSoC5/RTC_INT.c ****                         else
 851:Generated_Source\PSoC5/RTC_INT.c ****                         {
 852:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 853:Generated_Source\PSoC5/RTC_INT.c ****                         }
 854:Generated_Source\PSoC5/RTC_INT.c ****                     }
 855:Generated_Source\PSoC5/RTC_INT.c **** 
 856:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm YEAR */
 857:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 858:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_YEAR_MASK))
 859:Generated_Source\PSoC5/RTC_INT.c ****                     {
 860:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 861:Generated_Source\PSoC5/RTC_INT.c ****                         {
 862:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 863:Generated_Source\PSoC5/RTC_INT.c ****                         }
 864:Generated_Source\PSoC5/RTC_INT.c ****                         else
 865:Generated_Source\PSoC5/RTC_INT.c ****                         {
 866:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 867:Generated_Source\PSoC5/RTC_INT.c ****                         }
 868:Generated_Source\PSoC5/RTC_INT.c ****                     }
 869:Generated_Source\PSoC5/RTC_INT.c **** 
 870:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set Alarm flag event */
 871:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_tmp = RTC_alarmCfgMask;
 872:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_SET_ALARM(RTC_tmp,
 873:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_alarmCurStatus,
 874:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_statusDateTime);
 875:Generated_Source\PSoC5/RTC_INT.c ****                 }
 876:Generated_Source\PSoC5/RTC_INT.c ****             #endif /* 1u == RTC_DST_FUNC_ENABLE */
 877:Generated_Source\PSoC5/RTC_INT.c **** 
 878:Generated_Source\PSoC5/RTC_INT.c ****             /* Alarm HOUR */
 879:Generated_Source\PSoC5/RTC_INT.c ****             if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_HOUR_MASK))
 677              		.loc 1 879 0
 678 0338 4A4B     		ldr	r3, .L57+4
 679 033a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 680 033c 13F0040F 		tst	r3, #4
 681 0340 12D0     		beq	.L44
 880:Generated_Source\PSoC5/RTC_INT.c ****             {
 881:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_alarmCfgTimeDate.Hour == RTC_currentTimeDate.Hour)
 682              		.loc 1 881 0
 683 0342 494B     		ldr	r3, .L57+8
 684 0344 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 685 0346 D2B2     		uxtb	r2, r2
 686 0348 484B     		ldr	r3, .L57+12
 687 034a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 688 034c DBB2     		uxtb	r3, r3
 689 034e 9A42     		cmp	r2, r3
 690 0350 05D1     		bne	.L45
 882:Generated_Source\PSoC5/RTC_INT.c ****                 {
 883:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_alarmCurStatus |= RTC_ALARM_HOUR_MASK;
 691              		.loc 1 883 0
 692 0352 434A     		ldr	r2, .L57
 693 0354 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 694 0356 43F00403 		orr	r3, r3, #4
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 29


 695 035a 1370     		strb	r3, [r2]
 696 035c 04E0     		b	.L44
 697              	.L45:
 884:Generated_Source\PSoC5/RTC_INT.c ****                 }
 885:Generated_Source\PSoC5/RTC_INT.c ****                 else
 886:Generated_Source\PSoC5/RTC_INT.c ****                 {
 887:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_HOUR_MASK);
 698              		.loc 1 887 0
 699 035e 404A     		ldr	r2, .L57
 700 0360 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 701 0362 03F0FB03 		and	r3, r3, #251
 702 0366 1370     		strb	r3, [r2]
 703              	.L44:
 888:Generated_Source\PSoC5/RTC_INT.c ****                 }
 889:Generated_Source\PSoC5/RTC_INT.c ****             }
 890:Generated_Source\PSoC5/RTC_INT.c **** 
 891:Generated_Source\PSoC5/RTC_INT.c ****             /* Set Alarm flag event */
 892:Generated_Source\PSoC5/RTC_INT.c ****             RTC_tmp = RTC_alarmCfgMask;
 704              		.loc 1 892 0
 705 0368 3E4B     		ldr	r3, .L57+4
 706 036a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 707              	.LVL18:
 893:Generated_Source\PSoC5/RTC_INT.c ****             RTC_SET_ALARM(RTC_tmp,
 708              		.loc 1 893 0
 709 036c 03F0FF02 		and	r2, r3, #255
 710 0370 63B1     		cbz	r3, .L46
 711              		.loc 1 893 0 is_stmt 0 discriminator 1
 712 0372 3B4B     		ldr	r3, .L57
 713              	.LVL19:
 714 0374 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 715 0376 32EA0303 		bics	r3, r2, r3
 716 037a 07D1     		bne	.L46
 717              		.loc 1 893 0 discriminator 2
 718 037c 3C4A     		ldr	r2, .L57+16
 719 037e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 720 0380 43F00803 		orr	r3, r3, #8
 721 0384 1370     		strb	r3, [r2]
 722 0386 0022     		movs	r2, #0
 723 0388 354B     		ldr	r3, .L57
 724 038a 1A70     		strb	r2, [r3]
 725              	.L46:
 894:Generated_Source\PSoC5/RTC_INT.c ****                                        RTC_alarmCurStatus,
 895:Generated_Source\PSoC5/RTC_INT.c ****                                        RTC_statusDateTime);
 896:Generated_Source\PSoC5/RTC_INT.c **** 
 897:Generated_Source\PSoC5/RTC_INT.c ****             /* Every Hour */
 898:Generated_Source\PSoC5/RTC_INT.c ****             if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_HOUR_MASK))
 726              		.loc 1 898 0 is_stmt 1
 727 038c 394B     		ldr	r3, .L57+20
 728 038e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 729 0390 13F0040F 		tst	r3, #4
 730 0394 01D0     		beq	.L17
 899:Generated_Source\PSoC5/RTC_INT.c ****             {
 900:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_EveryHourHandler();
 731              		.loc 1 900 0
 732 0396 FFF7FEFF 		bl	RTC_EveryHourHandler
 733              	.LVL20:
 734              	.L17:
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 30


 901:Generated_Source\PSoC5/RTC_INT.c ****             }
 902:Generated_Source\PSoC5/RTC_INT.c ****         } /* Min > 59 = Hour */
 903:Generated_Source\PSoC5/RTC_INT.c **** 
 904:Generated_Source\PSoC5/RTC_INT.c ****         /* Alarm MIN */
 905:Generated_Source\PSoC5/RTC_INT.c ****         if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_MIN_MASK))
 735              		.loc 1 905 0
 736 039a 324B     		ldr	r3, .L57+4
 737 039c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 738 039e 13F0020F 		tst	r3, #2
 739 03a2 12D0     		beq	.L47
 906:Generated_Source\PSoC5/RTC_INT.c ****         {
 907:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_alarmCfgTimeDate.Min == RTC_currentTimeDate.Min)
 740              		.loc 1 907 0
 741 03a4 304B     		ldr	r3, .L57+8
 742 03a6 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 743 03a8 D2B2     		uxtb	r2, r2
 744 03aa 304B     		ldr	r3, .L57+12
 745 03ac 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 746 03ae DBB2     		uxtb	r3, r3
 747 03b0 9A42     		cmp	r2, r3
 748 03b2 05D1     		bne	.L48
 908:Generated_Source\PSoC5/RTC_INT.c ****             {
 909:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_alarmCurStatus |= RTC_ALARM_MIN_MASK;
 749              		.loc 1 909 0
 750 03b4 2A4A     		ldr	r2, .L57
 751 03b6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 752 03b8 43F00203 		orr	r3, r3, #2
 753 03bc 1370     		strb	r3, [r2]
 754 03be 04E0     		b	.L47
 755              	.L48:
 910:Generated_Source\PSoC5/RTC_INT.c ****             }
 911:Generated_Source\PSoC5/RTC_INT.c ****             else
 912:Generated_Source\PSoC5/RTC_INT.c ****             {
 913:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MIN_MASK);
 756              		.loc 1 913 0
 757 03c0 274A     		ldr	r2, .L57
 758 03c2 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 759 03c4 03F0FD03 		and	r3, r3, #253
 760 03c8 1370     		strb	r3, [r2]
 761              	.L47:
 914:Generated_Source\PSoC5/RTC_INT.c ****             }
 915:Generated_Source\PSoC5/RTC_INT.c ****         }
 916:Generated_Source\PSoC5/RTC_INT.c **** 
 917:Generated_Source\PSoC5/RTC_INT.c ****         /* Set Alarm flag event */
 918:Generated_Source\PSoC5/RTC_INT.c ****         RTC_tmp = RTC_alarmCfgMask;
 762              		.loc 1 918 0
 763 03ca 264B     		ldr	r3, .L57+4
 764 03cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 765              	.LVL21:
 919:Generated_Source\PSoC5/RTC_INT.c ****         RTC_SET_ALARM(RTC_tmp,
 766              		.loc 1 919 0
 767 03ce 03F0FF02 		and	r2, r3, #255
 768 03d2 63B1     		cbz	r3, .L49
 769              		.loc 1 919 0 is_stmt 0 discriminator 1
 770 03d4 224B     		ldr	r3, .L57
 771              	.LVL22:
 772 03d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 31


 773 03d8 32EA0303 		bics	r3, r2, r3
 774 03dc 07D1     		bne	.L49
 775              		.loc 1 919 0 discriminator 2
 776 03de 244A     		ldr	r2, .L57+16
 777 03e0 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 778 03e2 43F00803 		orr	r3, r3, #8
 779 03e6 1370     		strb	r3, [r2]
 780 03e8 0022     		movs	r2, #0
 781 03ea 1D4B     		ldr	r3, .L57
 782 03ec 1A70     		strb	r2, [r3]
 783              	.L49:
 920:Generated_Source\PSoC5/RTC_INT.c ****                                    RTC_alarmCurStatus,
 921:Generated_Source\PSoC5/RTC_INT.c ****                                    RTC_statusDateTime);
 922:Generated_Source\PSoC5/RTC_INT.c **** 
 923:Generated_Source\PSoC5/RTC_INT.c ****         /* Every Min */
 924:Generated_Source\PSoC5/RTC_INT.c ****         if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_MIN_MASK))
 784              		.loc 1 924 0 is_stmt 1
 785 03ee 214B     		ldr	r3, .L57+20
 786 03f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 787 03f2 13F0020F 		tst	r3, #2
 788 03f6 01D0     		beq	.L16
 925:Generated_Source\PSoC5/RTC_INT.c ****         {
 926:Generated_Source\PSoC5/RTC_INT.c ****             RTC_EveryMinuteHandler();
 789              		.loc 1 926 0
 790 03f8 FFF7FEFF 		bl	RTC_EveryMinuteHandler
 791              	.LVL23:
 792              	.L16:
 927:Generated_Source\PSoC5/RTC_INT.c ****         }
 928:Generated_Source\PSoC5/RTC_INT.c ****     } /* Sec */
 929:Generated_Source\PSoC5/RTC_INT.c **** 
 930:Generated_Source\PSoC5/RTC_INT.c ****     /* Alarm SEC */
 931:Generated_Source\PSoC5/RTC_INT.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_SEC_MASK))
 793              		.loc 1 931 0
 794 03fc 194B     		ldr	r3, .L57+4
 795 03fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 796 0400 13F0010F 		tst	r3, #1
 797 0404 12D0     		beq	.L50
 932:Generated_Source\PSoC5/RTC_INT.c ****     {
 933:Generated_Source\PSoC5/RTC_INT.c ****         if(RTC_alarmCfgTimeDate.Sec == RTC_currentTimeDate.Sec)
 798              		.loc 1 933 0
 799 0406 184B     		ldr	r3, .L57+8
 800 0408 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 801 040a D2B2     		uxtb	r2, r2
 802 040c 174B     		ldr	r3, .L57+12
 803 040e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 804 0410 DBB2     		uxtb	r3, r3
 805 0412 9A42     		cmp	r2, r3
 806 0414 05D1     		bne	.L51
 934:Generated_Source\PSoC5/RTC_INT.c ****         {
 935:Generated_Source\PSoC5/RTC_INT.c ****             RTC_alarmCurStatus |= RTC_ALARM_SEC_MASK;
 807              		.loc 1 935 0
 808 0416 124A     		ldr	r2, .L57
 809 0418 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 810 041a 43F00103 		orr	r3, r3, #1
 811 041e 1370     		strb	r3, [r2]
 812 0420 04E0     		b	.L50
 813              	.L51:
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 32


 936:Generated_Source\PSoC5/RTC_INT.c ****         }
 937:Generated_Source\PSoC5/RTC_INT.c ****         else
 938:Generated_Source\PSoC5/RTC_INT.c ****         {
 939:Generated_Source\PSoC5/RTC_INT.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_SEC_MASK);
 814              		.loc 1 939 0
 815 0422 0F4A     		ldr	r2, .L57
 816 0424 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 817 0426 03F0FE03 		and	r3, r3, #254
 818 042a 1370     		strb	r3, [r2]
 819              	.L50:
 940:Generated_Source\PSoC5/RTC_INT.c ****         }
 941:Generated_Source\PSoC5/RTC_INT.c ****     }
 942:Generated_Source\PSoC5/RTC_INT.c **** 
 943:Generated_Source\PSoC5/RTC_INT.c ****     /* Set Alarm flag event */
 944:Generated_Source\PSoC5/RTC_INT.c ****     RTC_tmp = RTC_alarmCfgMask;
 820              		.loc 1 944 0
 821 042c 0D4B     		ldr	r3, .L57+4
 822 042e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 823              	.LVL24:
 945:Generated_Source\PSoC5/RTC_INT.c ****     RTC_SET_ALARM(RTC_tmp, RTC_alarmCurStatus, RTC_statusDateTime);
 824              		.loc 1 945 0
 825 0430 03F0FF02 		and	r2, r3, #255
 826 0434 63B1     		cbz	r3, .L52
 827              		.loc 1 945 0 is_stmt 0 discriminator 1
 828 0436 0A4B     		ldr	r3, .L57
 829              	.LVL25:
 830 0438 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 831 043a 32EA0303 		bics	r3, r2, r3
 832 043e 07D1     		bne	.L52
 833              		.loc 1 945 0 discriminator 2
 834 0440 0B4A     		ldr	r2, .L57+16
 835 0442 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 836 0444 43F00803 		orr	r3, r3, #8
 837 0448 1370     		strb	r3, [r2]
 838 044a 0022     		movs	r2, #0
 839 044c 044B     		ldr	r3, .L57
 840 044e 1A70     		strb	r2, [r3]
 841              	.L52:
 946:Generated_Source\PSoC5/RTC_INT.c **** 
 947:Generated_Source\PSoC5/RTC_INT.c ****     /* Execute every second handler if needed */
 948:Generated_Source\PSoC5/RTC_INT.c ****     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_SEC_MASK))
 842              		.loc 1 948 0 is_stmt 1
 843 0450 084B     		ldr	r3, .L57+20
 844 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 845 0454 13F0010F 		tst	r3, #1
 846 0458 01D0     		beq	.L15
 949:Generated_Source\PSoC5/RTC_INT.c ****     {
 950:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EverySecondHandler();
 847              		.loc 1 950 0
 848 045a FFF7FEFF 		bl	RTC_EverySecondHandler
 849              	.LVL26:
 850              	.L15:
 851 045e 08BD     		pop	{r3, pc}
 852              	.L58:
 853              		.align	2
 854              	.L57:
 855 0460 00000000 		.word	RTC_alarmCurStatus
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 33


 856 0464 00000000 		.word	RTC_alarmCfgMask
 857 0468 00000000 		.word	RTC_alarmCfgTimeDate
 858 046c 00000000 		.word	RTC_currentTimeDate
 859 0470 00000000 		.word	RTC_statusDateTime
 860 0474 00000000 		.word	RTC_intervalCfgMask
 861              		.cfi_endproc
 862              	.LFE70:
 863              		.size	RTC_ISR, .-RTC_ISR
 864              		.text
 865              	.Letext0:
 866              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 867              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 868              		.file 4 "Generated_Source\\PSoC5\\cytypes.h"
 869              		.file 5 "Generated_Source\\PSoC5\\RTC.h"
 870              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 871              		.file 7 "./notoriOS.h"
 872              		.file 8 "Generated_Source\\PSoC5\\cyPm.h"
 873              		.section	.debug_info,"",%progbits
 874              	.Ldebug_info0:
 875 0000 48030000 		.4byte	0x348
 876 0004 0400     		.2byte	0x4
 877 0006 00000000 		.4byte	.Ldebug_abbrev0
 878 000a 04       		.byte	0x4
 879 000b 01       		.uleb128 0x1
 880 000c F0000000 		.4byte	.LASF42
 881 0010 0C       		.byte	0xc
 882 0011 72000000 		.4byte	.LASF43
 883 0015 99000000 		.4byte	.LASF44
 884 0019 00000000 		.4byte	.Ldebug_ranges0+0
 885 001d 00000000 		.4byte	0
 886 0021 00000000 		.4byte	.Ldebug_line0
 887 0025 02       		.uleb128 0x2
 888 0026 01       		.byte	0x1
 889 0027 06       		.byte	0x6
 890 0028 18030000 		.4byte	.LASF0
 891 002c 02       		.uleb128 0x2
 892 002d 01       		.byte	0x1
 893 002e 08       		.byte	0x8
 894 002f E2000000 		.4byte	.LASF1
 895 0033 02       		.uleb128 0x2
 896 0034 02       		.byte	0x2
 897 0035 05       		.byte	0x5
 898 0036 D7020000 		.4byte	.LASF2
 899 003a 02       		.uleb128 0x2
 900 003b 02       		.byte	0x2
 901 003c 07       		.byte	0x7
 902 003d AF010000 		.4byte	.LASF3
 903 0041 03       		.uleb128 0x3
 904 0042 1E000000 		.4byte	.LASF9
 905 0046 02       		.byte	0x2
 906 0047 3F       		.byte	0x3f
 907 0048 4C000000 		.4byte	0x4c
 908 004c 02       		.uleb128 0x2
 909 004d 04       		.byte	0x4
 910 004e 05       		.byte	0x5
 911 004f 28000000 		.4byte	.LASF4
 912 0053 02       		.uleb128 0x2
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 34


 913 0054 04       		.byte	0x4
 914 0055 07       		.byte	0x7
 915 0056 9D010000 		.4byte	.LASF5
 916 005a 02       		.uleb128 0x2
 917 005b 08       		.byte	0x8
 918 005c 05       		.byte	0x5
 919 005d AF020000 		.4byte	.LASF6
 920 0061 02       		.uleb128 0x2
 921 0062 08       		.byte	0x8
 922 0063 07       		.byte	0x7
 923 0064 35020000 		.4byte	.LASF7
 924 0068 04       		.uleb128 0x4
 925 0069 04       		.byte	0x4
 926 006a 05       		.byte	0x5
 927 006b 696E7400 		.ascii	"int\000"
 928 006f 02       		.uleb128 0x2
 929 0070 04       		.byte	0x4
 930 0071 07       		.byte	0x7
 931 0072 12020000 		.4byte	.LASF8
 932 0076 03       		.uleb128 0x3
 933 0077 88020000 		.4byte	.LASF10
 934 007b 03       		.byte	0x3
 935 007c 2C       		.byte	0x2c
 936 007d 41000000 		.4byte	0x41
 937 0081 05       		.uleb128 0x5
 938 0082 E1020000 		.4byte	.LASF11
 939 0086 04       		.byte	0x4
 940 0087 E401     		.2byte	0x1e4
 941 0089 2C000000 		.4byte	0x2c
 942 008d 05       		.uleb128 0x5
 943 008e FE010000 		.4byte	.LASF12
 944 0092 04       		.byte	0x4
 945 0093 E501     		.2byte	0x1e5
 946 0095 3A000000 		.4byte	0x3a
 947 0099 02       		.uleb128 0x2
 948 009a 04       		.byte	0x4
 949 009b 04       		.byte	0x4
 950 009c 93000000 		.4byte	.LASF13
 951 00a0 02       		.uleb128 0x2
 952 00a1 08       		.byte	0x8
 953 00a2 04       		.byte	0x4
 954 00a3 F7010000 		.4byte	.LASF14
 955 00a7 02       		.uleb128 0x2
 956 00a8 01       		.byte	0x1
 957 00a9 08       		.byte	0x8
 958 00aa BD020000 		.4byte	.LASF15
 959 00ae 06       		.uleb128 0x6
 960 00af 81000000 		.4byte	0x81
 961 00b3 07       		.uleb128 0x7
 962 00b4 0C       		.byte	0xc
 963 00b5 05       		.byte	0x5
 964 00b6 30       		.byte	0x30
 965 00b7 1C010000 		.4byte	0x11c
 966 00bb 08       		.uleb128 0x8
 967 00bc 53656300 		.ascii	"Sec\000"
 968 00c0 05       		.byte	0x5
 969 00c1 32       		.byte	0x32
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 35


 970 00c2 81000000 		.4byte	0x81
 971 00c6 00       		.byte	0
 972 00c7 08       		.uleb128 0x8
 973 00c8 4D696E00 		.ascii	"Min\000"
 974 00cc 05       		.byte	0x5
 975 00cd 33       		.byte	0x33
 976 00ce 81000000 		.4byte	0x81
 977 00d2 01       		.byte	0x1
 978 00d3 09       		.uleb128 0x9
 979 00d4 99020000 		.4byte	.LASF16
 980 00d8 05       		.byte	0x5
 981 00d9 34       		.byte	0x34
 982 00da 81000000 		.4byte	0x81
 983 00de 02       		.byte	0x2
 984 00df 09       		.uleb128 0x9
 985 00e0 00000000 		.4byte	.LASF17
 986 00e4 05       		.byte	0x5
 987 00e5 35       		.byte	0x35
 988 00e6 81000000 		.4byte	0x81
 989 00ea 03       		.byte	0x3
 990 00eb 09       		.uleb128 0x9
 991 00ec EC010000 		.4byte	.LASF18
 992 00f0 05       		.byte	0x5
 993 00f1 36       		.byte	0x36
 994 00f2 81000000 		.4byte	0x81
 995 00f6 04       		.byte	0x4
 996 00f7 09       		.uleb128 0x9
 997 00f8 C2010000 		.4byte	.LASF19
 998 00fc 05       		.byte	0x5
 999 00fd 37       		.byte	0x37
 1000 00fe 8D000000 		.4byte	0x8d
 1001 0102 06       		.byte	0x6
 1002 0103 09       		.uleb128 0x9
 1003 0104 CC010000 		.4byte	.LASF20
 1004 0108 05       		.byte	0x5
 1005 0109 38       		.byte	0x38
 1006 010a 81000000 		.4byte	0x81
 1007 010e 08       		.byte	0x8
 1008 010f 09       		.uleb128 0x9
 1009 0110 E7010000 		.4byte	.LASF21
 1010 0114 05       		.byte	0x5
 1011 0115 39       		.byte	0x39
 1012 0116 8D000000 		.4byte	0x8d
 1013 011a 0A       		.byte	0xa
 1014 011b 00       		.byte	0
 1015 011c 03       		.uleb128 0x3
 1016 011d FE020000 		.4byte	.LASF22
 1017 0121 05       		.byte	0x5
 1018 0122 3A       		.byte	0x3a
 1019 0123 27010000 		.4byte	0x127
 1020 0127 06       		.uleb128 0x6
 1021 0128 B3000000 		.4byte	0xb3
 1022 012c 02       		.uleb128 0x2
 1023 012d 08       		.byte	0x8
 1024 012e 04       		.byte	0x4
 1025 012f 0C030000 		.4byte	.LASF23
 1026 0133 02       		.uleb128 0x2
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 36


 1027 0134 04       		.byte	0x4
 1028 0135 07       		.byte	0x7
 1029 0136 90020000 		.4byte	.LASF24
 1030 013a 0A       		.uleb128 0xa
 1031 013b 5D000000 		.4byte	.LASF25
 1032 013f 01       		.byte	0x1
 1033 0140 D8       		.byte	0xd8
 1034 0141 00000000 		.4byte	.LFB69
 1035 0145 0A000000 		.4byte	.LFE69-.LFB69
 1036 0149 01       		.uleb128 0x1
 1037 014a 9C       		.byte	0x9c
 1038 014b 5F010000 		.4byte	0x15f
 1039 014f 0B       		.uleb128 0xb
 1040 0150 08000000 		.4byte	.LVL0
 1041 0154 35030000 		.4byte	0x335
 1042 0158 0C       		.uleb128 0xc
 1043 0159 01       		.uleb128 0x1
 1044 015a 50       		.byte	0x50
 1045 015b 01       		.uleb128 0x1
 1046 015c 36       		.byte	0x36
 1047 015d 00       		.byte	0
 1048 015e 00       		.byte	0
 1049 015f 0A       		.uleb128 0xa
 1050 0160 1F020000 		.4byte	.LASF26
 1051 0164 01       		.byte	0x1
 1052 0165 BD       		.byte	0xbd
 1053 0166 00000000 		.4byte	.LFB68
 1054 016a 0A000000 		.4byte	.LFE68-.LFB68
 1055 016e 01       		.uleb128 0x1
 1056 016f 9C       		.byte	0x9c
 1057 0170 84010000 		.4byte	0x184
 1058 0174 0B       		.uleb128 0xb
 1059 0175 08000000 		.4byte	.LVL1
 1060 0179 35030000 		.4byte	0x335
 1061 017d 0C       		.uleb128 0xc
 1062 017e 01       		.uleb128 0x1
 1063 017f 50       		.byte	0x50
 1064 0180 01       		.uleb128 0x1
 1065 0181 35       		.byte	0x35
 1066 0182 00       		.byte	0
 1067 0183 00       		.byte	0
 1068 0184 0A       		.uleb128 0xa
 1069 0185 0A000000 		.4byte	.LASF27
 1070 0189 01       		.byte	0x1
 1071 018a 87       		.byte	0x87
 1072 018b 00000000 		.4byte	.LFB66
 1073 018f 0A000000 		.4byte	.LFE66-.LFB66
 1074 0193 01       		.uleb128 0x1
 1075 0194 9C       		.byte	0x9c
 1076 0195 A9010000 		.4byte	0x1a9
 1077 0199 0B       		.uleb128 0xb
 1078 019a 08000000 		.4byte	.LVL2
 1079 019e 35030000 		.4byte	0x335
 1080 01a2 0C       		.uleb128 0xc
 1081 01a3 01       		.uleb128 0x1
 1082 01a4 50       		.byte	0x50
 1083 01a5 01       		.uleb128 0x1
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 37


 1084 01a6 33       		.byte	0x33
 1085 01a7 00       		.byte	0
 1086 01a8 00       		.byte	0
 1087 01a9 0A       		.uleb128 0xa
 1088 01aa 5F020000 		.4byte	.LASF28
 1089 01ae 01       		.byte	0x1
 1090 01af A2       		.byte	0xa2
 1091 01b0 00000000 		.4byte	.LFB67
 1092 01b4 0A000000 		.4byte	.LFE67-.LFB67
 1093 01b8 01       		.uleb128 0x1
 1094 01b9 9C       		.byte	0x9c
 1095 01ba CE010000 		.4byte	0x1ce
 1096 01be 0B       		.uleb128 0xb
 1097 01bf 08000000 		.4byte	.LVL3
 1098 01c3 35030000 		.4byte	0x335
 1099 01c7 0C       		.uleb128 0xc
 1100 01c8 01       		.uleb128 0x1
 1101 01c9 50       		.byte	0x50
 1102 01ca 01       		.uleb128 0x1
 1103 01cb 34       		.byte	0x34
 1104 01cc 00       		.byte	0
 1105 01cd 00       		.byte	0
 1106 01ce 0A       		.uleb128 0xa
 1107 01cf C2020000 		.4byte	.LASF29
 1108 01d3 01       		.byte	0x1
 1109 01d4 6C       		.byte	0x6c
 1110 01d5 00000000 		.4byte	.LFB65
 1111 01d9 0A000000 		.4byte	.LFE65-.LFB65
 1112 01dd 01       		.uleb128 0x1
 1113 01de 9C       		.byte	0x9c
 1114 01df F3010000 		.4byte	0x1f3
 1115 01e3 0B       		.uleb128 0xb
 1116 01e4 08000000 		.4byte	.LVL4
 1117 01e8 35030000 		.4byte	0x335
 1118 01ec 0C       		.uleb128 0xc
 1119 01ed 01       		.uleb128 0x1
 1120 01ee 50       		.byte	0x50
 1121 01ef 01       		.uleb128 0x1
 1122 01f0 32       		.byte	0x32
 1123 01f1 00       		.byte	0
 1124 01f2 00       		.byte	0
 1125 01f3 0A       		.uleb128 0xa
 1126 01f4 E7020000 		.4byte	.LASF30
 1127 01f8 01       		.byte	0x1
 1128 01f9 51       		.byte	0x51
 1129 01fa 00000000 		.4byte	.LFB64
 1130 01fe 0A000000 		.4byte	.LFE64-.LFB64
 1131 0202 01       		.uleb128 0x1
 1132 0203 9C       		.byte	0x9c
 1133 0204 18020000 		.4byte	0x218
 1134 0208 0B       		.uleb128 0xb
 1135 0209 08000000 		.4byte	.LVL5
 1136 020d 35030000 		.4byte	0x335
 1137 0211 0C       		.uleb128 0xc
 1138 0212 01       		.uleb128 0x1
 1139 0213 50       		.byte	0x50
 1140 0214 01       		.uleb128 0x1
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 38


 1141 0215 31       		.byte	0x31
 1142 0216 00       		.byte	0
 1143 0217 00       		.byte	0
 1144 0218 0A       		.uleb128 0xa
 1145 0219 86010000 		.4byte	.LASF31
 1146 021d 01       		.byte	0x1
 1147 021e 36       		.byte	0x36
 1148 021f 00000000 		.4byte	.LFB63
 1149 0223 0A000000 		.4byte	.LFE63-.LFB63
 1150 0227 01       		.uleb128 0x1
 1151 0228 9C       		.byte	0x9c
 1152 0229 3D020000 		.4byte	0x23d
 1153 022d 0B       		.uleb128 0xb
 1154 022e 08000000 		.4byte	.LVL6
 1155 0232 35030000 		.4byte	0x335
 1156 0236 0C       		.uleb128 0xc
 1157 0237 01       		.uleb128 0x1
 1158 0238 50       		.byte	0x50
 1159 0239 01       		.uleb128 0x1
 1160 023a 30       		.byte	0x30
 1161 023b 00       		.byte	0
 1162 023c 00       		.byte	0
 1163 023d 0D       		.uleb128 0xd
 1164 023e 7E010000 		.4byte	.LASF45
 1165 0242 01       		.byte	0x1
 1166 0243 0B01     		.2byte	0x10b
 1167 0245 00000000 		.4byte	.LFB70
 1168 0249 78040000 		.4byte	.LFE70-.LFB70
 1169 024d 01       		.uleb128 0x1
 1170 024e 9C       		.byte	0x9c
 1171 024f B6020000 		.4byte	0x2b6
 1172 0253 0E       		.uleb128 0xe
 1173 0254 31000000 		.4byte	.LASF46
 1174 0258 01       		.byte	0x1
 1175 0259 0D01     		.2byte	0x10d
 1176 025b 81000000 		.4byte	0x81
 1177 025f 00000000 		.4byte	.LLST0
 1178 0263 0F       		.uleb128 0xf
 1179 0264 08000000 		.4byte	.LVL7
 1180 0268 40030000 		.4byte	0x340
 1181 026c 76020000 		.4byte	0x276
 1182 0270 0C       		.uleb128 0xc
 1183 0271 01       		.uleb128 0x1
 1184 0272 50       		.byte	0x50
 1185 0273 01       		.uleb128 0x1
 1186 0274 34       		.byte	0x34
 1187 0275 00       		.byte	0
 1188 0276 10       		.uleb128 0x10
 1189 0277 BC010000 		.4byte	.LVL10
 1190 027b 3A010000 		.4byte	0x13a
 1191 027f 10       		.uleb128 0x10
 1192 0280 1E020000 		.4byte	.LVL13
 1193 0284 5F010000 		.4byte	0x15f
 1194 0288 10       		.uleb128 0x10
 1195 0289 00030000 		.4byte	.LVL16
 1196 028d 84010000 		.4byte	0x184
 1197 0291 10       		.uleb128 0x10
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 39


 1198 0292 18030000 		.4byte	.LVL17
 1199 0296 A9010000 		.4byte	0x1a9
 1200 029a 10       		.uleb128 0x10
 1201 029b 9A030000 		.4byte	.LVL20
 1202 029f CE010000 		.4byte	0x1ce
 1203 02a3 10       		.uleb128 0x10
 1204 02a4 FC030000 		.4byte	.LVL23
 1205 02a8 F3010000 		.4byte	0x1f3
 1206 02ac 10       		.uleb128 0x10
 1207 02ad 5E040000 		.4byte	.LVL26
 1208 02b1 18020000 		.4byte	0x218
 1209 02b5 00       		.byte	0
 1210 02b6 11       		.uleb128 0x11
 1211 02b7 D2010000 		.4byte	.LASF32
 1212 02bb 05       		.byte	0x5
 1213 02bc 2D01     		.2byte	0x12d
 1214 02be 1C010000 		.4byte	0x11c
 1215 02c2 11       		.uleb128 0x11
 1216 02c3 74020000 		.4byte	.LASF33
 1217 02c7 05       		.byte	0x5
 1218 02c8 2E01     		.2byte	0x12e
 1219 02ca 1C010000 		.4byte	0x11c
 1220 02ce 11       		.uleb128 0x11
 1221 02cf 4C000000 		.4byte	.LASF34
 1222 02d3 05       		.byte	0x5
 1223 02d4 3901     		.2byte	0x139
 1224 02d6 AE000000 		.4byte	0xae
 1225 02da 11       		.uleb128 0x11
 1226 02db 4C020000 		.4byte	.LASF35
 1227 02df 05       		.byte	0x5
 1228 02e0 3A01     		.2byte	0x13a
 1229 02e2 AE000000 		.4byte	0xae
 1230 02e6 11       		.uleb128 0x11
 1231 02e7 33030000 		.4byte	.LASF36
 1232 02eb 05       		.byte	0x5
 1233 02ec 3B01     		.2byte	0x13b
 1234 02ee AE000000 		.4byte	0xae
 1235 02f2 11       		.uleb128 0x11
 1236 02f3 39000000 		.4byte	.LASF37
 1237 02f7 05       		.byte	0x5
 1238 02f8 3C01     		.2byte	0x13c
 1239 02fa AE000000 		.4byte	0xae
 1240 02fe 12       		.uleb128 0x12
 1241 02ff 0E030000 		.4byte	0x30e
 1242 0303 0E030000 		.4byte	0x30e
 1243 0307 13       		.uleb128 0x13
 1244 0308 33010000 		.4byte	0x133
 1245 030c 0B       		.byte	0xb
 1246 030d 00       		.byte	0
 1247 030e 14       		.uleb128 0x14
 1248 030f 81000000 		.4byte	0x81
 1249 0313 11       		.uleb128 0x11
 1250 0314 9E020000 		.4byte	.LASF38
 1251 0318 05       		.byte	0x5
 1252 0319 3E01     		.2byte	0x13e
 1253 031b 1F030000 		.4byte	0x31f
 1254 031f 14       		.uleb128 0x14
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 40


 1255 0320 FE020000 		.4byte	0x2fe
 1256 0324 11       		.uleb128 0x11
 1257 0325 05020000 		.4byte	.LASF39
 1258 0329 06       		.byte	0x6
 1259 032a 1207     		.2byte	0x712
 1260 032c 30030000 		.4byte	0x330
 1261 0330 06       		.uleb128 0x6
 1262 0331 76000000 		.4byte	0x76
 1263 0335 15       		.uleb128 0x15
 1264 0336 47030000 		.4byte	.LASF40
 1265 033a 47030000 		.4byte	.LASF40
 1266 033e 07       		.byte	0x7
 1267 033f 20       		.byte	0x20
 1268 0340 15       		.uleb128 0x15
 1269 0341 24030000 		.4byte	.LASF41
 1270 0345 24030000 		.4byte	.LASF41
 1271 0349 08       		.byte	0x8
 1272 034a 26       		.byte	0x26
 1273 034b 00       		.byte	0
 1274              		.section	.debug_abbrev,"",%progbits
 1275              	.Ldebug_abbrev0:
 1276 0000 01       		.uleb128 0x1
 1277 0001 11       		.uleb128 0x11
 1278 0002 01       		.byte	0x1
 1279 0003 25       		.uleb128 0x25
 1280 0004 0E       		.uleb128 0xe
 1281 0005 13       		.uleb128 0x13
 1282 0006 0B       		.uleb128 0xb
 1283 0007 03       		.uleb128 0x3
 1284 0008 0E       		.uleb128 0xe
 1285 0009 1B       		.uleb128 0x1b
 1286 000a 0E       		.uleb128 0xe
 1287 000b 55       		.uleb128 0x55
 1288 000c 17       		.uleb128 0x17
 1289 000d 11       		.uleb128 0x11
 1290 000e 01       		.uleb128 0x1
 1291 000f 10       		.uleb128 0x10
 1292 0010 17       		.uleb128 0x17
 1293 0011 00       		.byte	0
 1294 0012 00       		.byte	0
 1295 0013 02       		.uleb128 0x2
 1296 0014 24       		.uleb128 0x24
 1297 0015 00       		.byte	0
 1298 0016 0B       		.uleb128 0xb
 1299 0017 0B       		.uleb128 0xb
 1300 0018 3E       		.uleb128 0x3e
 1301 0019 0B       		.uleb128 0xb
 1302 001a 03       		.uleb128 0x3
 1303 001b 0E       		.uleb128 0xe
 1304 001c 00       		.byte	0
 1305 001d 00       		.byte	0
 1306 001e 03       		.uleb128 0x3
 1307 001f 16       		.uleb128 0x16
 1308 0020 00       		.byte	0
 1309 0021 03       		.uleb128 0x3
 1310 0022 0E       		.uleb128 0xe
 1311 0023 3A       		.uleb128 0x3a
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 41


 1312 0024 0B       		.uleb128 0xb
 1313 0025 3B       		.uleb128 0x3b
 1314 0026 0B       		.uleb128 0xb
 1315 0027 49       		.uleb128 0x49
 1316 0028 13       		.uleb128 0x13
 1317 0029 00       		.byte	0
 1318 002a 00       		.byte	0
 1319 002b 04       		.uleb128 0x4
 1320 002c 24       		.uleb128 0x24
 1321 002d 00       		.byte	0
 1322 002e 0B       		.uleb128 0xb
 1323 002f 0B       		.uleb128 0xb
 1324 0030 3E       		.uleb128 0x3e
 1325 0031 0B       		.uleb128 0xb
 1326 0032 03       		.uleb128 0x3
 1327 0033 08       		.uleb128 0x8
 1328 0034 00       		.byte	0
 1329 0035 00       		.byte	0
 1330 0036 05       		.uleb128 0x5
 1331 0037 16       		.uleb128 0x16
 1332 0038 00       		.byte	0
 1333 0039 03       		.uleb128 0x3
 1334 003a 0E       		.uleb128 0xe
 1335 003b 3A       		.uleb128 0x3a
 1336 003c 0B       		.uleb128 0xb
 1337 003d 3B       		.uleb128 0x3b
 1338 003e 05       		.uleb128 0x5
 1339 003f 49       		.uleb128 0x49
 1340 0040 13       		.uleb128 0x13
 1341 0041 00       		.byte	0
 1342 0042 00       		.byte	0
 1343 0043 06       		.uleb128 0x6
 1344 0044 35       		.uleb128 0x35
 1345 0045 00       		.byte	0
 1346 0046 49       		.uleb128 0x49
 1347 0047 13       		.uleb128 0x13
 1348 0048 00       		.byte	0
 1349 0049 00       		.byte	0
 1350 004a 07       		.uleb128 0x7
 1351 004b 13       		.uleb128 0x13
 1352 004c 01       		.byte	0x1
 1353 004d 0B       		.uleb128 0xb
 1354 004e 0B       		.uleb128 0xb
 1355 004f 3A       		.uleb128 0x3a
 1356 0050 0B       		.uleb128 0xb
 1357 0051 3B       		.uleb128 0x3b
 1358 0052 0B       		.uleb128 0xb
 1359 0053 01       		.uleb128 0x1
 1360 0054 13       		.uleb128 0x13
 1361 0055 00       		.byte	0
 1362 0056 00       		.byte	0
 1363 0057 08       		.uleb128 0x8
 1364 0058 0D       		.uleb128 0xd
 1365 0059 00       		.byte	0
 1366 005a 03       		.uleb128 0x3
 1367 005b 08       		.uleb128 0x8
 1368 005c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 42


 1369 005d 0B       		.uleb128 0xb
 1370 005e 3B       		.uleb128 0x3b
 1371 005f 0B       		.uleb128 0xb
 1372 0060 49       		.uleb128 0x49
 1373 0061 13       		.uleb128 0x13
 1374 0062 38       		.uleb128 0x38
 1375 0063 0B       		.uleb128 0xb
 1376 0064 00       		.byte	0
 1377 0065 00       		.byte	0
 1378 0066 09       		.uleb128 0x9
 1379 0067 0D       		.uleb128 0xd
 1380 0068 00       		.byte	0
 1381 0069 03       		.uleb128 0x3
 1382 006a 0E       		.uleb128 0xe
 1383 006b 3A       		.uleb128 0x3a
 1384 006c 0B       		.uleb128 0xb
 1385 006d 3B       		.uleb128 0x3b
 1386 006e 0B       		.uleb128 0xb
 1387 006f 49       		.uleb128 0x49
 1388 0070 13       		.uleb128 0x13
 1389 0071 38       		.uleb128 0x38
 1390 0072 0B       		.uleb128 0xb
 1391 0073 00       		.byte	0
 1392 0074 00       		.byte	0
 1393 0075 0A       		.uleb128 0xa
 1394 0076 2E       		.uleb128 0x2e
 1395 0077 01       		.byte	0x1
 1396 0078 03       		.uleb128 0x3
 1397 0079 0E       		.uleb128 0xe
 1398 007a 3A       		.uleb128 0x3a
 1399 007b 0B       		.uleb128 0xb
 1400 007c 3B       		.uleb128 0x3b
 1401 007d 0B       		.uleb128 0xb
 1402 007e 27       		.uleb128 0x27
 1403 007f 19       		.uleb128 0x19
 1404 0080 11       		.uleb128 0x11
 1405 0081 01       		.uleb128 0x1
 1406 0082 12       		.uleb128 0x12
 1407 0083 06       		.uleb128 0x6
 1408 0084 40       		.uleb128 0x40
 1409 0085 18       		.uleb128 0x18
 1410 0086 9742     		.uleb128 0x2117
 1411 0088 19       		.uleb128 0x19
 1412 0089 01       		.uleb128 0x1
 1413 008a 13       		.uleb128 0x13
 1414 008b 00       		.byte	0
 1415 008c 00       		.byte	0
 1416 008d 0B       		.uleb128 0xb
 1417 008e 898201   		.uleb128 0x4109
 1418 0091 01       		.byte	0x1
 1419 0092 11       		.uleb128 0x11
 1420 0093 01       		.uleb128 0x1
 1421 0094 31       		.uleb128 0x31
 1422 0095 13       		.uleb128 0x13
 1423 0096 00       		.byte	0
 1424 0097 00       		.byte	0
 1425 0098 0C       		.uleb128 0xc
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 43


 1426 0099 8A8201   		.uleb128 0x410a
 1427 009c 00       		.byte	0
 1428 009d 02       		.uleb128 0x2
 1429 009e 18       		.uleb128 0x18
 1430 009f 9142     		.uleb128 0x2111
 1431 00a1 18       		.uleb128 0x18
 1432 00a2 00       		.byte	0
 1433 00a3 00       		.byte	0
 1434 00a4 0D       		.uleb128 0xd
 1435 00a5 2E       		.uleb128 0x2e
 1436 00a6 01       		.byte	0x1
 1437 00a7 3F       		.uleb128 0x3f
 1438 00a8 19       		.uleb128 0x19
 1439 00a9 03       		.uleb128 0x3
 1440 00aa 0E       		.uleb128 0xe
 1441 00ab 3A       		.uleb128 0x3a
 1442 00ac 0B       		.uleb128 0xb
 1443 00ad 3B       		.uleb128 0x3b
 1444 00ae 05       		.uleb128 0x5
 1445 00af 27       		.uleb128 0x27
 1446 00b0 19       		.uleb128 0x19
 1447 00b1 11       		.uleb128 0x11
 1448 00b2 01       		.uleb128 0x1
 1449 00b3 12       		.uleb128 0x12
 1450 00b4 06       		.uleb128 0x6
 1451 00b5 40       		.uleb128 0x40
 1452 00b6 18       		.uleb128 0x18
 1453 00b7 9742     		.uleb128 0x2117
 1454 00b9 19       		.uleb128 0x19
 1455 00ba 01       		.uleb128 0x1
 1456 00bb 13       		.uleb128 0x13
 1457 00bc 00       		.byte	0
 1458 00bd 00       		.byte	0
 1459 00be 0E       		.uleb128 0xe
 1460 00bf 34       		.uleb128 0x34
 1461 00c0 00       		.byte	0
 1462 00c1 03       		.uleb128 0x3
 1463 00c2 0E       		.uleb128 0xe
 1464 00c3 3A       		.uleb128 0x3a
 1465 00c4 0B       		.uleb128 0xb
 1466 00c5 3B       		.uleb128 0x3b
 1467 00c6 05       		.uleb128 0x5
 1468 00c7 49       		.uleb128 0x49
 1469 00c8 13       		.uleb128 0x13
 1470 00c9 02       		.uleb128 0x2
 1471 00ca 17       		.uleb128 0x17
 1472 00cb 00       		.byte	0
 1473 00cc 00       		.byte	0
 1474 00cd 0F       		.uleb128 0xf
 1475 00ce 898201   		.uleb128 0x4109
 1476 00d1 01       		.byte	0x1
 1477 00d2 11       		.uleb128 0x11
 1478 00d3 01       		.uleb128 0x1
 1479 00d4 31       		.uleb128 0x31
 1480 00d5 13       		.uleb128 0x13
 1481 00d6 01       		.uleb128 0x1
 1482 00d7 13       		.uleb128 0x13
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 44


 1483 00d8 00       		.byte	0
 1484 00d9 00       		.byte	0
 1485 00da 10       		.uleb128 0x10
 1486 00db 898201   		.uleb128 0x4109
 1487 00de 00       		.byte	0
 1488 00df 11       		.uleb128 0x11
 1489 00e0 01       		.uleb128 0x1
 1490 00e1 31       		.uleb128 0x31
 1491 00e2 13       		.uleb128 0x13
 1492 00e3 00       		.byte	0
 1493 00e4 00       		.byte	0
 1494 00e5 11       		.uleb128 0x11
 1495 00e6 34       		.uleb128 0x34
 1496 00e7 00       		.byte	0
 1497 00e8 03       		.uleb128 0x3
 1498 00e9 0E       		.uleb128 0xe
 1499 00ea 3A       		.uleb128 0x3a
 1500 00eb 0B       		.uleb128 0xb
 1501 00ec 3B       		.uleb128 0x3b
 1502 00ed 05       		.uleb128 0x5
 1503 00ee 49       		.uleb128 0x49
 1504 00ef 13       		.uleb128 0x13
 1505 00f0 3F       		.uleb128 0x3f
 1506 00f1 19       		.uleb128 0x19
 1507 00f2 3C       		.uleb128 0x3c
 1508 00f3 19       		.uleb128 0x19
 1509 00f4 00       		.byte	0
 1510 00f5 00       		.byte	0
 1511 00f6 12       		.uleb128 0x12
 1512 00f7 01       		.uleb128 0x1
 1513 00f8 01       		.byte	0x1
 1514 00f9 49       		.uleb128 0x49
 1515 00fa 13       		.uleb128 0x13
 1516 00fb 01       		.uleb128 0x1
 1517 00fc 13       		.uleb128 0x13
 1518 00fd 00       		.byte	0
 1519 00fe 00       		.byte	0
 1520 00ff 13       		.uleb128 0x13
 1521 0100 21       		.uleb128 0x21
 1522 0101 00       		.byte	0
 1523 0102 49       		.uleb128 0x49
 1524 0103 13       		.uleb128 0x13
 1525 0104 2F       		.uleb128 0x2f
 1526 0105 0B       		.uleb128 0xb
 1527 0106 00       		.byte	0
 1528 0107 00       		.byte	0
 1529 0108 14       		.uleb128 0x14
 1530 0109 26       		.uleb128 0x26
 1531 010a 00       		.byte	0
 1532 010b 49       		.uleb128 0x49
 1533 010c 13       		.uleb128 0x13
 1534 010d 00       		.byte	0
 1535 010e 00       		.byte	0
 1536 010f 15       		.uleb128 0x15
 1537 0110 2E       		.uleb128 0x2e
 1538 0111 00       		.byte	0
 1539 0112 3F       		.uleb128 0x3f
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 45


 1540 0113 19       		.uleb128 0x19
 1541 0114 3C       		.uleb128 0x3c
 1542 0115 19       		.uleb128 0x19
 1543 0116 6E       		.uleb128 0x6e
 1544 0117 0E       		.uleb128 0xe
 1545 0118 03       		.uleb128 0x3
 1546 0119 0E       		.uleb128 0xe
 1547 011a 3A       		.uleb128 0x3a
 1548 011b 0B       		.uleb128 0xb
 1549 011c 3B       		.uleb128 0x3b
 1550 011d 0B       		.uleb128 0xb
 1551 011e 00       		.byte	0
 1552 011f 00       		.byte	0
 1553 0120 00       		.byte	0
 1554              		.section	.debug_loc,"",%progbits
 1555              	.Ldebug_loc0:
 1556              	.LLST0:
 1557 0000 8E010000 		.4byte	.LVL8
 1558 0004 96010000 		.4byte	.LVL9
 1559 0008 0100     		.2byte	0x1
 1560 000a 53       		.byte	0x53
 1561 000b F0010000 		.4byte	.LVL11
 1562 000f F8010000 		.4byte	.LVL12
 1563 0013 0100     		.2byte	0x1
 1564 0015 53       		.byte	0x53
 1565 0016 D2020000 		.4byte	.LVL14
 1566 001a DA020000 		.4byte	.LVL15
 1567 001e 0100     		.2byte	0x1
 1568 0020 53       		.byte	0x53
 1569 0021 6C030000 		.4byte	.LVL18
 1570 0025 74030000 		.4byte	.LVL19
 1571 0029 0100     		.2byte	0x1
 1572 002b 53       		.byte	0x53
 1573 002c CE030000 		.4byte	.LVL21
 1574 0030 D6030000 		.4byte	.LVL22
 1575 0034 0100     		.2byte	0x1
 1576 0036 53       		.byte	0x53
 1577 0037 30040000 		.4byte	.LVL24
 1578 003b 38040000 		.4byte	.LVL25
 1579 003f 0100     		.2byte	0x1
 1580 0041 53       		.byte	0x53
 1581 0042 00000000 		.4byte	0
 1582 0046 00000000 		.4byte	0
 1583              		.section	.debug_aranges,"",%progbits
 1584 0000 54000000 		.4byte	0x54
 1585 0004 0200     		.2byte	0x2
 1586 0006 00000000 		.4byte	.Ldebug_info0
 1587 000a 04       		.byte	0x4
 1588 000b 00       		.byte	0
 1589 000c 0000     		.2byte	0
 1590 000e 0000     		.2byte	0
 1591 0010 00000000 		.4byte	.LFB69
 1592 0014 0A000000 		.4byte	.LFE69-.LFB69
 1593 0018 00000000 		.4byte	.LFB68
 1594 001c 0A000000 		.4byte	.LFE68-.LFB68
 1595 0020 00000000 		.4byte	.LFB66
 1596 0024 0A000000 		.4byte	.LFE66-.LFB66
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 46


 1597 0028 00000000 		.4byte	.LFB67
 1598 002c 0A000000 		.4byte	.LFE67-.LFB67
 1599 0030 00000000 		.4byte	.LFB65
 1600 0034 0A000000 		.4byte	.LFE65-.LFB65
 1601 0038 00000000 		.4byte	.LFB64
 1602 003c 0A000000 		.4byte	.LFE64-.LFB64
 1603 0040 00000000 		.4byte	.LFB63
 1604 0044 0A000000 		.4byte	.LFE63-.LFB63
 1605 0048 00000000 		.4byte	.LFB70
 1606 004c 78040000 		.4byte	.LFE70-.LFB70
 1607 0050 00000000 		.4byte	0
 1608 0054 00000000 		.4byte	0
 1609              		.section	.debug_ranges,"",%progbits
 1610              	.Ldebug_ranges0:
 1611 0000 00000000 		.4byte	.LFB69
 1612 0004 0A000000 		.4byte	.LFE69
 1613 0008 00000000 		.4byte	.LFB68
 1614 000c 0A000000 		.4byte	.LFE68
 1615 0010 00000000 		.4byte	.LFB66
 1616 0014 0A000000 		.4byte	.LFE66
 1617 0018 00000000 		.4byte	.LFB67
 1618 001c 0A000000 		.4byte	.LFE67
 1619 0020 00000000 		.4byte	.LFB65
 1620 0024 0A000000 		.4byte	.LFE65
 1621 0028 00000000 		.4byte	.LFB64
 1622 002c 0A000000 		.4byte	.LFE64
 1623 0030 00000000 		.4byte	.LFB63
 1624 0034 0A000000 		.4byte	.LFE63
 1625 0038 00000000 		.4byte	.LFB70
 1626 003c 78040000 		.4byte	.LFE70
 1627 0040 00000000 		.4byte	0
 1628 0044 00000000 		.4byte	0
 1629              		.section	.debug_line,"",%progbits
 1630              	.Ldebug_line0:
 1631 0000 CA020000 		.section	.debug_str,"MS",%progbits,1
 1631      02007201 
 1631      00000201 
 1631      FB0E0D00 
 1631      01010101 
 1632              	.LASF17:
 1633 0000 4461794F 		.ascii	"DayOfWeek\000"
 1633      66576565 
 1633      6B00
 1634              	.LASF27:
 1635 000a 5254435F 		.ascii	"RTC_EveryDayHandler\000"
 1635      45766572 
 1635      79446179 
 1635      48616E64 
 1635      6C657200 
 1636              	.LASF9:
 1637 001e 5F5F696E 		.ascii	"__int32_t\000"
 1637      7433325F 
 1637      7400
 1638              	.LASF4:
 1639 0028 6C6F6E67 		.ascii	"long int\000"
 1639      20696E74 
 1639      00
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 47


 1640              	.LASF46:
 1641 0031 5254435F 		.ascii	"RTC_tmp\000"
 1641      746D7000 
 1642              	.LASF37:
 1643 0039 5254435F 		.ascii	"RTC_statusDateTime\000"
 1643      73746174 
 1643      75734461 
 1643      74655469 
 1643      6D6500
 1644              	.LASF34:
 1645 004c 5254435F 		.ascii	"RTC_alarmCfgMask\000"
 1645      616C6172 
 1645      6D436667 
 1645      4D61736B 
 1645      00
 1646              	.LASF25:
 1647 005d 5254435F 		.ascii	"RTC_EveryYearHandler\000"
 1647      45766572 
 1647      79596561 
 1647      7248616E 
 1647      646C6572 
 1648              	.LASF43:
 1649 0072 47656E65 		.ascii	"Generated_Source\\PSoC5\\RTC_INT.c\000"
 1649      72617465 
 1649      645F536F 
 1649      75726365 
 1649      5C50536F 
 1650              	.LASF13:
 1651 0093 666C6F61 		.ascii	"float\000"
 1651      7400
 1652              	.LASF44:
 1653 0099 433A5C55 		.ascii	"C:\\Users\\bk\\Documents\\GitHub\\Open Storm\\notor"
 1653      73657273 
 1653      5C626B5C 
 1653      446F6375 
 1653      6D656E74 
 1654 00c6 694F535C 		.ascii	"iOS\\notoriOS\\notoriOS.cydsn\000"
 1654      6E6F746F 
 1654      72694F53 
 1654      5C6E6F74 
 1654      6F72694F 
 1655              	.LASF1:
 1656 00e2 756E7369 		.ascii	"unsigned char\000"
 1656      676E6564 
 1656      20636861 
 1656      7200
 1657              	.LASF42:
 1658 00f0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1658      43313120 
 1658      352E342E 
 1658      31203230 
 1658      31363036 
 1659 0123 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1659      20726576 
 1659      6973696F 
 1659      6E203233 
 1659      37373135 
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 48


 1660 0156 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1660      66756E63 
 1660      74696F6E 
 1660      2D736563 
 1660      74696F6E 
 1661              	.LASF45:
 1662 017e 5254435F 		.ascii	"RTC_ISR\000"
 1662      49535200 
 1663              	.LASF31:
 1664 0186 5254435F 		.ascii	"RTC_EverySecondHandler\000"
 1664      45766572 
 1664      79536563 
 1664      6F6E6448 
 1664      616E646C 
 1665              	.LASF5:
 1666 019d 6C6F6E67 		.ascii	"long unsigned int\000"
 1666      20756E73 
 1666      69676E65 
 1666      6420696E 
 1666      7400
 1667              	.LASF3:
 1668 01af 73686F72 		.ascii	"short unsigned int\000"
 1668      7420756E 
 1668      7369676E 
 1668      65642069 
 1668      6E7400
 1669              	.LASF19:
 1670 01c2 4461794F 		.ascii	"DayOfYear\000"
 1670      66596561 
 1670      7200
 1671              	.LASF20:
 1672 01cc 4D6F6E74 		.ascii	"Month\000"
 1672      6800
 1673              	.LASF32:
 1674 01d2 5254435F 		.ascii	"RTC_alarmCfgTimeDate\000"
 1674      616C6172 
 1674      6D436667 
 1674      54696D65 
 1674      44617465 
 1675              	.LASF21:
 1676 01e7 59656172 		.ascii	"Year\000"
 1676      00
 1677              	.LASF18:
 1678 01ec 4461794F 		.ascii	"DayOfMonth\000"
 1678      664D6F6E 
 1678      746800
 1679              	.LASF14:
 1680 01f7 646F7562 		.ascii	"double\000"
 1680      6C6500
 1681              	.LASF12:
 1682 01fe 75696E74 		.ascii	"uint16\000"
 1682      313600
 1683              	.LASF39:
 1684 0205 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1684      52784275 
 1684      66666572 
 1684      00
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 49


 1685              	.LASF8:
 1686 0212 756E7369 		.ascii	"unsigned int\000"
 1686      676E6564 
 1686      20696E74 
 1686      00
 1687              	.LASF26:
 1688 021f 5254435F 		.ascii	"RTC_EveryMonthHandler\000"
 1688      45766572 
 1688      794D6F6E 
 1688      74684861 
 1688      6E646C65 
 1689              	.LASF7:
 1690 0235 6C6F6E67 		.ascii	"long long unsigned int\000"
 1690      206C6F6E 
 1690      6720756E 
 1690      7369676E 
 1690      65642069 
 1691              	.LASF35:
 1692 024c 5254435F 		.ascii	"RTC_alarmCurStatus\000"
 1692      616C6172 
 1692      6D437572 
 1692      53746174 
 1692      757300
 1693              	.LASF28:
 1694 025f 5254435F 		.ascii	"RTC_EveryWeekHandler\000"
 1694      45766572 
 1694      79576565 
 1694      6B48616E 
 1694      646C6572 
 1695              	.LASF33:
 1696 0274 5254435F 		.ascii	"RTC_currentTimeDate\000"
 1696      63757272 
 1696      656E7454 
 1696      696D6544 
 1696      61746500 
 1697              	.LASF10:
 1698 0288 696E7433 		.ascii	"int32_t\000"
 1698      325F7400 
 1699              	.LASF24:
 1700 0290 73697A65 		.ascii	"sizetype\000"
 1700      74797065 
 1700      00
 1701              	.LASF16:
 1702 0299 486F7572 		.ascii	"Hour\000"
 1702      00
 1703              	.LASF38:
 1704 029e 5254435F 		.ascii	"RTC_daysInMonths\000"
 1704      64617973 
 1704      496E4D6F 
 1704      6E746873 
 1704      00
 1705              	.LASF6:
 1706 02af 6C6F6E67 		.ascii	"long long int\000"
 1706      206C6F6E 
 1706      6720696E 
 1706      7400
 1707              	.LASF15:
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccyHAQeA.s 			page 50


 1708 02bd 63686172 		.ascii	"char\000"
 1708      00
 1709              	.LASF29:
 1710 02c2 5254435F 		.ascii	"RTC_EveryHourHandler\000"
 1710      45766572 
 1710      79486F75 
 1710      7248616E 
 1710      646C6572 
 1711              	.LASF2:
 1712 02d7 73686F72 		.ascii	"short int\000"
 1712      7420696E 
 1712      7400
 1713              	.LASF11:
 1714 02e1 75696E74 		.ascii	"uint8\000"
 1714      3800
 1715              	.LASF30:
 1716 02e7 5254435F 		.ascii	"RTC_EveryMinuteHandler\000"
 1716      45766572 
 1716      794D696E 
 1716      75746548 
 1716      616E646C 
 1717              	.LASF22:
 1718 02fe 5254435F 		.ascii	"RTC_TIME_DATE\000"
 1718      54494D45 
 1718      5F444154 
 1718      4500
 1719              	.LASF23:
 1720 030c 6C6F6E67 		.ascii	"long double\000"
 1720      20646F75 
 1720      626C6500 
 1721              	.LASF0:
 1722 0318 7369676E 		.ascii	"signed char\000"
 1722      65642063 
 1722      68617200 
 1723              	.LASF41:
 1724 0324 4379506D 		.ascii	"CyPmReadStatus\000"
 1724      52656164 
 1724      53746174 
 1724      757300
 1725              	.LASF36:
 1726 0333 5254435F 		.ascii	"RTC_intervalCfgMask\000"
 1726      696E7465 
 1726      7276616C 
 1726      4366674D 
 1726      61736B00 
 1727              	.LASF40:
 1728 0347 41796F49 		.ascii	"AyoItsTime\000"
 1728      74735469 
 1728      6D6500
 1729              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
