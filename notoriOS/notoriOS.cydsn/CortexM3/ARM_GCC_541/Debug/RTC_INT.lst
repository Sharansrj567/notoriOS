ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RTC_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.syntax unified
  20              		.global _printf_float
  21              		.thumb
  22              		.syntax unified
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,12,4
  27              		.comm	dataPointsInStack,2,2
  28              		.comm	data,4400,4
  29              		.comm	http_request,1000,4
  30              		.comm	http_body,7000,4
  31              		.comm	http_route,200,4
  32              		.comm	system_info,28,4
  33              		.comm	system_settings,324,4
  34              		.section	.text.RTC_EverySecondHandler,"ax",%progbits
  35              		.align	2
  36              		.thumb
  37              		.thumb_func
  38              		.type	RTC_EverySecondHandler, %function
  39              	RTC_EverySecondHandler:
  40              	.LFB64:
  41              		.file 1 "Generated_Source\\PSoC5\\RTC_INT.c"
   1:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/RTC_INT.c **** * File Name: RTC_INT.c
   3:Generated_Source\PSoC5/RTC_INT.c **** * Version 2.0
   4:Generated_Source\PSoC5/RTC_INT.c **** *
   5:Generated_Source\PSoC5/RTC_INT.c **** * Description:
   6:Generated_Source\PSoC5/RTC_INT.c **** *  This file contains the Interrupt Service Routine (ISR) for the RTC component.
   7:Generated_Source\PSoC5/RTC_INT.c **** *  This interrupt routine has entry pointes to overflow on time or date.
   8:Generated_Source\PSoC5/RTC_INT.c **** *
   9:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  10:Generated_Source\PSoC5/RTC_INT.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/RTC_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/RTC_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/RTC_INT.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/RTC_INT.c **** 
  16:Generated_Source\PSoC5/RTC_INT.c **** #include "RTC.h"
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 2


  17:Generated_Source\PSoC5/RTC_INT.c **** #include "CyLib.h"
  18:Generated_Source\PSoC5/RTC_INT.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/RTC_INT.c **** 
  20:Generated_Source\PSoC5/RTC_INT.c **** /* Function Prototypes */
  21:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EverySecondHandler(void);
  22:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMinuteHandler(void);
  23:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryHourHandler(void);
  24:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryDayHandler(void);
  25:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryWeekHandler(void);
  26:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMonthHandler(void);
  27:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryYearHandler(void);
  28:Generated_Source\PSoC5/RTC_INT.c **** 
  29:Generated_Source\PSoC5/RTC_INT.c **** 
  30:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  31:Generated_Source\PSoC5/RTC_INT.c **** *  Place your includes, defines and code here
  32:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  33:Generated_Source\PSoC5/RTC_INT.c **** /* `#START RTC_ISR_DEFINITION` */
  34:Generated_Source\PSoC5/RTC_INT.c **** 
  35:Generated_Source\PSoC5/RTC_INT.c **** #include "notoriOS.h"
  36:Generated_Source\PSoC5/RTC_INT.c **** 
  37:Generated_Source\PSoC5/RTC_INT.c **** /* `#END` */
  38:Generated_Source\PSoC5/RTC_INT.c **** 
  39:Generated_Source\PSoC5/RTC_INT.c **** 
  40:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  41:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EverySecondHandler
  42:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  43:Generated_Source\PSoC5/RTC_INT.c **** *
  44:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  45:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every second.
  46:Generated_Source\PSoC5/RTC_INT.c **** *
  47:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
  48:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  49:Generated_Source\PSoC5/RTC_INT.c **** *
  50:Generated_Source\PSoC5/RTC_INT.c **** * Return:
  51:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  52:Generated_Source\PSoC5/RTC_INT.c **** *
  53:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  54:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EverySecondHandler(void)
  55:Generated_Source\PSoC5/RTC_INT.c **** {
  42              		.loc 1 55 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
  51              		.cfi_def_cfa_register 7
  56:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every second handler code here. */
  57:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_SECOND_HANDLER_CODE` */
  58:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_SECOND);
  52              		.loc 1 58 0
  53 0004 0020     		movs	r0, #0
  54 0006 FFF7FEFF 		bl	AyoItsTime
  59:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
  60:Generated_Source\PSoC5/RTC_INT.c ****     
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 3


  61:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_SECOND_HANDLER_CALLBACK
  62:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EverySecondHandler_Callback();
  63:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_SECOND_HANDLER_CALLBACK */
  64:Generated_Source\PSoC5/RTC_INT.c **** }
  55              		.loc 1 64 0
  56 000a 00BF     		nop
  57 000c 80BD     		pop	{r7, pc}
  58              		.cfi_endproc
  59              	.LFE64:
  60              		.size	RTC_EverySecondHandler, .-RTC_EverySecondHandler
  61 000e 00BF     		.section	.text.RTC_EveryMinuteHandler,"ax",%progbits
  62              		.align	2
  63              		.thumb
  64              		.thumb_func
  65              		.type	RTC_EveryMinuteHandler, %function
  66              	RTC_EveryMinuteHandler:
  67              	.LFB65:
  65:Generated_Source\PSoC5/RTC_INT.c **** 
  66:Generated_Source\PSoC5/RTC_INT.c **** 
  67:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  68:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryMinuteHandler
  69:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  70:Generated_Source\PSoC5/RTC_INT.c **** *
  71:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  72:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every minute.
  73:Generated_Source\PSoC5/RTC_INT.c **** *
  74:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
  75:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  76:Generated_Source\PSoC5/RTC_INT.c **** *
  77:Generated_Source\PSoC5/RTC_INT.c **** * Return:
  78:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  79:Generated_Source\PSoC5/RTC_INT.c **** *
  80:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  81:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMinuteHandler(void)
  82:Generated_Source\PSoC5/RTC_INT.c **** {
  68              		.loc 1 82 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72 0000 80B5     		push	{r7, lr}
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 7, -8
  75              		.cfi_offset 14, -4
  76 0002 00AF     		add	r7, sp, #0
  77              		.cfi_def_cfa_register 7
  83:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every minute handler code here. */
  84:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_MINUTE_HANDLER_CODE` */
  85:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_MINUTE);
  78              		.loc 1 85 0
  79 0004 0120     		movs	r0, #1
  80 0006 FFF7FEFF 		bl	AyoItsTime
  86:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
  87:Generated_Source\PSoC5/RTC_INT.c **** 
  88:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_MINUTE_HANDLER_CALLBACK
  89:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryMinuteHandler_Callback();
  90:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_MINUTE_HANDLER_CALLBACK */    
  91:Generated_Source\PSoC5/RTC_INT.c **** }
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 4


  81              		.loc 1 91 0
  82 000a 00BF     		nop
  83 000c 80BD     		pop	{r7, pc}
  84              		.cfi_endproc
  85              	.LFE65:
  86              		.size	RTC_EveryMinuteHandler, .-RTC_EveryMinuteHandler
  87 000e 00BF     		.section	.text.RTC_EveryHourHandler,"ax",%progbits
  88              		.align	2
  89              		.thumb
  90              		.thumb_func
  91              		.type	RTC_EveryHourHandler, %function
  92              	RTC_EveryHourHandler:
  93              	.LFB66:
  92:Generated_Source\PSoC5/RTC_INT.c **** 
  93:Generated_Source\PSoC5/RTC_INT.c **** 
  94:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  95:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryHourHandler
  96:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  97:Generated_Source\PSoC5/RTC_INT.c **** *
  98:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  99:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every hour.
 100:Generated_Source\PSoC5/RTC_INT.c **** *
 101:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 102:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 103:Generated_Source\PSoC5/RTC_INT.c **** *
 104:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 105:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 106:Generated_Source\PSoC5/RTC_INT.c **** *
 107:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 108:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryHourHandler(void)
 109:Generated_Source\PSoC5/RTC_INT.c **** {
  94              		.loc 1 109 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98 0000 80B5     		push	{r7, lr}
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 7, -8
 101              		.cfi_offset 14, -4
 102 0002 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
 110:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every hour handler code here. */
 111:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_HOUR_HANDLER_CODE` */
 112:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_HOUR);
 104              		.loc 1 112 0
 105 0004 0220     		movs	r0, #2
 106 0006 FFF7FEFF 		bl	AyoItsTime
 113:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 114:Generated_Source\PSoC5/RTC_INT.c ****     
 115:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_HOUR_HANDLER_CALLBACK
 116:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryHourHandler_Callback();
 117:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_HOUR_HANDLER_CALLBACK */
 118:Generated_Source\PSoC5/RTC_INT.c **** }
 107              		.loc 1 118 0
 108 000a 00BF     		nop
 109 000c 80BD     		pop	{r7, pc}
 110              		.cfi_endproc
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 5


 111              	.LFE66:
 112              		.size	RTC_EveryHourHandler, .-RTC_EveryHourHandler
 113 000e 00BF     		.section	.text.RTC_EveryDayHandler,"ax",%progbits
 114              		.align	2
 115              		.thumb
 116              		.thumb_func
 117              		.type	RTC_EveryDayHandler, %function
 118              	RTC_EveryDayHandler:
 119              	.LFB67:
 119:Generated_Source\PSoC5/RTC_INT.c **** 
 120:Generated_Source\PSoC5/RTC_INT.c **** 
 121:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 122:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryDayHandler
 123:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 124:Generated_Source\PSoC5/RTC_INT.c **** *
 125:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 126:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every day.
 127:Generated_Source\PSoC5/RTC_INT.c **** *
 128:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 129:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 130:Generated_Source\PSoC5/RTC_INT.c **** *
 131:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 132:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 133:Generated_Source\PSoC5/RTC_INT.c **** *
 134:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 135:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryDayHandler(void)
 136:Generated_Source\PSoC5/RTC_INT.c **** {
 120              		.loc 1 136 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124 0000 80B5     		push	{r7, lr}
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 7, -8
 127              		.cfi_offset 14, -4
 128 0002 00AF     		add	r7, sp, #0
 129              		.cfi_def_cfa_register 7
 137:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your everyday handler code here. */
 138:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_DAY_HANDLER_CODE` */
 139:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_DAY);
 130              		.loc 1 139 0
 131 0004 0320     		movs	r0, #3
 132 0006 FFF7FEFF 		bl	AyoItsTime
 140:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 141:Generated_Source\PSoC5/RTC_INT.c ****     
 142:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_DAY_HANDLER_CALLBACK
 143:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryDayHandler_Callback();
 144:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_DAY_HANDLER_CALLBACK */
 145:Generated_Source\PSoC5/RTC_INT.c **** }
 133              		.loc 1 145 0
 134 000a 00BF     		nop
 135 000c 80BD     		pop	{r7, pc}
 136              		.cfi_endproc
 137              	.LFE67:
 138              		.size	RTC_EveryDayHandler, .-RTC_EveryDayHandler
 139 000e 00BF     		.section	.text.RTC_EveryWeekHandler,"ax",%progbits
 140              		.align	2
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 6


 141              		.thumb
 142              		.thumb_func
 143              		.type	RTC_EveryWeekHandler, %function
 144              	RTC_EveryWeekHandler:
 145              	.LFB68:
 146:Generated_Source\PSoC5/RTC_INT.c **** 
 147:Generated_Source\PSoC5/RTC_INT.c **** 
 148:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 149:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryWeekHandler
 150:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 151:Generated_Source\PSoC5/RTC_INT.c **** *
 152:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 153:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every week.
 154:Generated_Source\PSoC5/RTC_INT.c **** *
 155:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 156:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 157:Generated_Source\PSoC5/RTC_INT.c **** *
 158:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 159:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 160:Generated_Source\PSoC5/RTC_INT.c **** *
 161:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 162:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryWeekHandler(void)
 163:Generated_Source\PSoC5/RTC_INT.c **** {
 146              		.loc 1 163 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 1, uses_anonymous_args = 0
 150 0000 80B5     		push	{r7, lr}
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 00AF     		add	r7, sp, #0
 155              		.cfi_def_cfa_register 7
 164:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every week handler code here. */
 165:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_WEEK_HANDLER_CODE` */
 166:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_WEEK);
 156              		.loc 1 166 0
 157 0004 0420     		movs	r0, #4
 158 0006 FFF7FEFF 		bl	AyoItsTime
 167:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 168:Generated_Source\PSoC5/RTC_INT.c **** 
 169:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_WEEK_HANDLER_CALLBACK
 170:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryWeekHandler_Callback();
 171:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_WEEK_HANDLER_CALLBACK */
 172:Generated_Source\PSoC5/RTC_INT.c **** }
 159              		.loc 1 172 0
 160 000a 00BF     		nop
 161 000c 80BD     		pop	{r7, pc}
 162              		.cfi_endproc
 163              	.LFE68:
 164              		.size	RTC_EveryWeekHandler, .-RTC_EveryWeekHandler
 165 000e 00BF     		.section	.text.RTC_EveryMonthHandler,"ax",%progbits
 166              		.align	2
 167              		.thumb
 168              		.thumb_func
 169              		.type	RTC_EveryMonthHandler, %function
 170              	RTC_EveryMonthHandler:
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 7


 171              	.LFB69:
 173:Generated_Source\PSoC5/RTC_INT.c **** 
 174:Generated_Source\PSoC5/RTC_INT.c **** 
 175:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 176:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryMonthHandler
 177:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 178:Generated_Source\PSoC5/RTC_INT.c **** *
 179:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 180:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every month.
 181:Generated_Source\PSoC5/RTC_INT.c **** *
 182:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 183:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 184:Generated_Source\PSoC5/RTC_INT.c **** *
 185:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 186:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 187:Generated_Source\PSoC5/RTC_INT.c **** *
 188:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 189:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMonthHandler(void)
 190:Generated_Source\PSoC5/RTC_INT.c **** {
 172              		.loc 1 190 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176 0000 80B5     		push	{r7, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 7, -8
 179              		.cfi_offset 14, -4
 180 0002 00AF     		add	r7, sp, #0
 181              		.cfi_def_cfa_register 7
 191:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every month handler code here. */
 192:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_MONTH_HANDLER_CODE` */
 193:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_MONTH);
 182              		.loc 1 193 0
 183 0004 0520     		movs	r0, #5
 184 0006 FFF7FEFF 		bl	AyoItsTime
 194:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 195:Generated_Source\PSoC5/RTC_INT.c ****     
 196:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_MONTH_HANDLER_CALLBACK
 197:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryMonthHandler_Callback();
 198:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_MONTH_HANDLER_CALLBACK */
 199:Generated_Source\PSoC5/RTC_INT.c **** }
 185              		.loc 1 199 0
 186 000a 00BF     		nop
 187 000c 80BD     		pop	{r7, pc}
 188              		.cfi_endproc
 189              	.LFE69:
 190              		.size	RTC_EveryMonthHandler, .-RTC_EveryMonthHandler
 191 000e 00BF     		.section	.text.RTC_EveryYearHandler,"ax",%progbits
 192              		.align	2
 193              		.thumb
 194              		.thumb_func
 195              		.type	RTC_EveryYearHandler, %function
 196              	RTC_EveryYearHandler:
 197              	.LFB70:
 200:Generated_Source\PSoC5/RTC_INT.c **** 
 201:Generated_Source\PSoC5/RTC_INT.c **** 
 202:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 8


 203:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryYearHandler
 204:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 205:Generated_Source\PSoC5/RTC_INT.c **** *
 206:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 207:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every year.
 208:Generated_Source\PSoC5/RTC_INT.c **** *
 209:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 210:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 211:Generated_Source\PSoC5/RTC_INT.c **** *
 212:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 213:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 214:Generated_Source\PSoC5/RTC_INT.c **** *
 215:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 216:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryYearHandler(void)
 217:Generated_Source\PSoC5/RTC_INT.c **** {
 198              		.loc 1 217 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202 0000 80B5     		push	{r7, lr}
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 7, -8
 205              		.cfi_offset 14, -4
 206 0002 00AF     		add	r7, sp, #0
 207              		.cfi_def_cfa_register 7
 218:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every year handler code here. */
 219:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_YEAR_HANDLER_CODE` */
 220:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_YEAR);
 208              		.loc 1 220 0
 209 0004 0620     		movs	r0, #6
 210 0006 FFF7FEFF 		bl	AyoItsTime
 221:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 222:Generated_Source\PSoC5/RTC_INT.c **** 
 223:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_YEAR_HANDLER_CALLBACK
 224:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryYearHandler_Callback();
 225:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_YEAR_HANDLER_CALLBACK */    
 226:Generated_Source\PSoC5/RTC_INT.c **** }
 211              		.loc 1 226 0
 212 000a 00BF     		nop
 213 000c 80BD     		pop	{r7, pc}
 214              		.cfi_endproc
 215              	.LFE70:
 216              		.size	RTC_EveryYearHandler, .-RTC_EveryYearHandler
 217 000e 00BF     		.section	.text.RTC_ISR,"ax",%progbits
 218              		.align	2
 219              		.global	RTC_ISR
 220              		.thumb
 221              		.thumb_func
 222              		.type	RTC_ISR, %function
 223              	RTC_ISR:
 224              	.LFB71:
 227:Generated_Source\PSoC5/RTC_INT.c **** 
 228:Generated_Source\PSoC5/RTC_INT.c **** 
 229:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/RTC_INT.c **** * Function Name: RTC_ISR
 231:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 232:Generated_Source\PSoC5/RTC_INT.c **** *
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 9


 233:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 234:Generated_Source\PSoC5/RTC_INT.c **** *  This ISR is executed on 1PPS (one pulse per second) event.
 235:Generated_Source\PSoC5/RTC_INT.c **** *  Global interrupt must be enabled to invoke this ISR.
 236:Generated_Source\PSoC5/RTC_INT.c **** *  This interrupt trigs every second.
 237:Generated_Source\PSoC5/RTC_INT.c **** *
 238:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 239:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 240:Generated_Source\PSoC5/RTC_INT.c **** *
 241:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 242:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 243:Generated_Source\PSoC5/RTC_INT.c **** *
 244:Generated_Source\PSoC5/RTC_INT.c **** * Global variables:
 245:Generated_Source\PSoC5/RTC_INT.c **** * RTC_currentTimeDate, RTC_dstTimeDateStart,
 246:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstTimeDateStop, RTC_dstTimeDateStart,
 247:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_alarmCfgTimeDate, RTC_statusDateTime,
 248:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStartStatus, RTC_dstStartStatus,
 249:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStopStatus, RTC_alarmCurStatus: global
 250:Generated_Source\PSoC5/RTC_INT.c **** *  variables are used for the time/date, DST and alarm update procedure.
 251:Generated_Source\PSoC5/RTC_INT.c **** *
 252:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstTimeDateStart and RTC_currentTimeDate:
 253:Generated_Source\PSoC5/RTC_INT.c **** *  are modified with the updated values.
 254:Generated_Source\PSoC5/RTC_INT.c **** *
 255:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_statusDateTime, RTC_dstStartStatus,
 256:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStartStatus, RTC_dstStopStatus,
 257:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_alarmCurStatus: global variables could be modified while
 258:Generated_Source\PSoC5/RTC_INT.c **** *  current time/date is updated.
 259:Generated_Source\PSoC5/RTC_INT.c **** *
 260:Generated_Source\PSoC5/RTC_INT.c **** * Side Effects:
 261:Generated_Source\PSoC5/RTC_INT.c **** *  Clears all interrupt status bits (react_int, limact_int, onepps_int, ctw_int,
 262:Generated_Source\PSoC5/RTC_INT.c **** *  and  ftw_int) in Power Manager Interrupt Status Register. If an interrupt
 263:Generated_Source\PSoC5/RTC_INT.c **** *  gets generated at the same time as a clear, the bit will remain set (which
 264:Generated_Source\PSoC5/RTC_INT.c **** *  causes another interrupt).
 265:Generated_Source\PSoC5/RTC_INT.c **** *
 266:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 267:Generated_Source\PSoC5/RTC_INT.c **** CY_ISR(RTC_ISR)
 268:Generated_Source\PSoC5/RTC_INT.c **** {
 225              		.loc 1 268 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 8
 228              		@ frame_needed = 1, uses_anonymous_args = 0
 229 0000 80B5     		push	{r7, lr}
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 7, -8
 232              		.cfi_offset 14, -4
 233 0002 82B0     		sub	sp, sp, #8
 234              		.cfi_def_cfa_offset 16
 235 0004 00AF     		add	r7, sp, #0
 236              		.cfi_def_cfa_register 7
 269:Generated_Source\PSoC5/RTC_INT.c ****     uint8 RTC_tmp;
 270:Generated_Source\PSoC5/RTC_INT.c **** 
 271:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_ISR_ENTRY_CALLBACK
 272:Generated_Source\PSoC5/RTC_INT.c ****         RTC_ISR_EntryCallback();
 273:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_ISR_ENTRY_CALLBACK */
 274:Generated_Source\PSoC5/RTC_INT.c ****     
 275:Generated_Source\PSoC5/RTC_INT.c ****     /* Clear OPPS interrupt status flag */
 276:Generated_Source\PSoC5/RTC_INT.c ****     (void) CyPmReadStatus(CY_PM_ONEPPS_INT);
 237              		.loc 1 276 0
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 10


 238 0006 0420     		movs	r0, #4
 239 0008 FFF7FEFF 		bl	CyPmReadStatus
 277:Generated_Source\PSoC5/RTC_INT.c **** 
 278:Generated_Source\PSoC5/RTC_INT.c ****     /* Increment seconds counter */
 279:Generated_Source\PSoC5/RTC_INT.c ****     RTC_currentTimeDate.Sec++;
 240              		.loc 1 279 0
 241 000c 9E4B     		ldr	r3, .L48
 242 000e 1B78     		ldrb	r3, [r3]
 243 0010 DBB2     		uxtb	r3, r3
 244 0012 0133     		adds	r3, r3, #1
 245 0014 DAB2     		uxtb	r2, r3
 246 0016 9C4B     		ldr	r3, .L48
 247 0018 1A70     		strb	r2, [r3]
 280:Generated_Source\PSoC5/RTC_INT.c **** 
 281:Generated_Source\PSoC5/RTC_INT.c ****     /* Check if minute elapsed */
 282:Generated_Source\PSoC5/RTC_INT.c ****     if(RTC_currentTimeDate.Sec > RTC_MINUTE_ELAPSED)
 248              		.loc 1 282 0
 249 001a 9B4B     		ldr	r3, .L48
 250 001c 1B78     		ldrb	r3, [r3]
 251 001e DBB2     		uxtb	r3, r3
 252 0020 3B2B     		cmp	r3, #59
 253 0022 40F2A682 		bls	.L9
 283:Generated_Source\PSoC5/RTC_INT.c ****     {
 284:Generated_Source\PSoC5/RTC_INT.c ****         /* Inc Min */
 285:Generated_Source\PSoC5/RTC_INT.c ****         RTC_currentTimeDate.Min++;
 254              		.loc 1 285 0
 255 0026 984B     		ldr	r3, .L48
 256 0028 5B78     		ldrb	r3, [r3, #1]
 257 002a DBB2     		uxtb	r3, r3
 258 002c 0133     		adds	r3, r3, #1
 259 002e DAB2     		uxtb	r2, r3
 260 0030 954B     		ldr	r3, .L48
 261 0032 5A70     		strb	r2, [r3, #1]
 286:Generated_Source\PSoC5/RTC_INT.c **** 
 287:Generated_Source\PSoC5/RTC_INT.c ****         /* Clear Sec */
 288:Generated_Source\PSoC5/RTC_INT.c ****         RTC_currentTimeDate.Sec = 0u;
 262              		.loc 1 288 0
 263 0034 944B     		ldr	r3, .L48
 264 0036 0022     		movs	r2, #0
 265 0038 1A70     		strb	r2, [r3]
 289:Generated_Source\PSoC5/RTC_INT.c **** 
 290:Generated_Source\PSoC5/RTC_INT.c ****         if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 266              		.loc 1 290 0
 267 003a 934B     		ldr	r3, .L48
 268 003c 5B78     		ldrb	r3, [r3, #1]
 269 003e DBB2     		uxtb	r3, r3
 270 0040 3B2B     		cmp	r3, #59
 271 0042 40F24682 		bls	.L10
 291:Generated_Source\PSoC5/RTC_INT.c ****         {
 292:Generated_Source\PSoC5/RTC_INT.c ****             /* Inc HOUR */
 293:Generated_Source\PSoC5/RTC_INT.c ****             RTC_currentTimeDate.Hour++;
 272              		.loc 1 293 0
 273 0046 904B     		ldr	r3, .L48
 274 0048 9B78     		ldrb	r3, [r3, #2]
 275 004a DBB2     		uxtb	r3, r3
 276 004c 0133     		adds	r3, r3, #1
 277 004e DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 11


 278 0050 8D4B     		ldr	r3, .L48
 279 0052 9A70     		strb	r2, [r3, #2]
 294:Generated_Source\PSoC5/RTC_INT.c **** 
 295:Generated_Source\PSoC5/RTC_INT.c ****             /* Clear Min */
 296:Generated_Source\PSoC5/RTC_INT.c ****             RTC_currentTimeDate.Min = 0u;
 280              		.loc 1 296 0
 281 0054 8C4B     		ldr	r3, .L48
 282 0056 0022     		movs	r2, #0
 283 0058 5A70     		strb	r2, [r3, #1]
 297:Generated_Source\PSoC5/RTC_INT.c **** 
 298:Generated_Source\PSoC5/RTC_INT.c ****             /* Day roll over */
 299:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 284              		.loc 1 299 0
 285 005a 8B4B     		ldr	r3, .L48
 286 005c 9B78     		ldrb	r3, [r3, #2]
 287 005e DBB2     		uxtb	r3, r3
 288 0060 172B     		cmp	r3, #23
 289 0062 40F2DD81 		bls	.L11
 300:Generated_Source\PSoC5/RTC_INT.c ****             {
 301:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfMonth */
 302:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfMonth++;
 290              		.loc 1 302 0
 291 0066 884B     		ldr	r3, .L48
 292 0068 1B79     		ldrb	r3, [r3, #4]
 293 006a DBB2     		uxtb	r3, r3
 294 006c 0133     		adds	r3, r3, #1
 295 006e DAB2     		uxtb	r2, r3
 296 0070 854B     		ldr	r3, .L48
 297 0072 1A71     		strb	r2, [r3, #4]
 303:Generated_Source\PSoC5/RTC_INT.c **** 
 304:Generated_Source\PSoC5/RTC_INT.c ****                 /* Clear Hour */
 305:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.Hour = 0u;
 298              		.loc 1 305 0
 299 0074 844B     		ldr	r3, .L48
 300 0076 0022     		movs	r2, #0
 301 0078 9A70     		strb	r2, [r3, #2]
 306:Generated_Source\PSoC5/RTC_INT.c **** 
 307:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfYear */
 308:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfYear++;
 302              		.loc 1 308 0
 303 007a 834B     		ldr	r3, .L48
 304 007c DB88     		ldrh	r3, [r3, #6]	@ movhi
 305 007e 9BB2     		uxth	r3, r3
 306 0080 0133     		adds	r3, r3, #1
 307 0082 9AB2     		uxth	r2, r3
 308 0084 804B     		ldr	r3, .L48
 309 0086 DA80     		strh	r2, [r3, #6]	@ movhi
 309:Generated_Source\PSoC5/RTC_INT.c **** 
 310:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfWeek */
 311:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfWeek++;
 310              		.loc 1 311 0
 311 0088 7F4B     		ldr	r3, .L48
 312 008a DB78     		ldrb	r3, [r3, #3]
 313 008c DBB2     		uxtb	r3, r3
 314 008e 0133     		adds	r3, r3, #1
 315 0090 DAB2     		uxtb	r2, r3
 316 0092 7D4B     		ldr	r3, .L48
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 12


 317 0094 DA70     		strb	r2, [r3, #3]
 312:Generated_Source\PSoC5/RTC_INT.c **** 
 313:Generated_Source\PSoC5/RTC_INT.c ****                 /* Check DayOfWeek */
 314:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
 318              		.loc 1 314 0
 319 0096 7C4B     		ldr	r3, .L48
 320 0098 DB78     		ldrb	r3, [r3, #3]
 321 009a DBB2     		uxtb	r3, r3
 322 009c 072B     		cmp	r3, #7
 323 009e 02D9     		bls	.L12
 315:Generated_Source\PSoC5/RTC_INT.c ****                 {
 316:Generated_Source\PSoC5/RTC_INT.c ****                     /* start new week */
 317:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.DayOfWeek = 1u;
 324              		.loc 1 317 0
 325 00a0 794B     		ldr	r3, .L48
 326 00a2 0122     		movs	r2, #1
 327 00a4 DA70     		strb	r2, [r3, #3]
 328              	.L12:
 318:Generated_Source\PSoC5/RTC_INT.c ****                 }
 319:Generated_Source\PSoC5/RTC_INT.c **** 
 320:Generated_Source\PSoC5/RTC_INT.c ****                 /* Day of month roll over.
 321:Generated_Source\PSoC5/RTC_INT.c ****                 * Check if day of month greater than 29 in February of leap year or
 322:Generated_Source\PSoC5/RTC_INT.c ****                 * if day of month greater than 28 NOT in February of NON leap year or
 323:Generated_Source\PSoC5/RTC_INT.c ****                 * if day of month greater than it should be in every month in non leap year
 324:Generated_Source\PSoC5/RTC_INT.c ****                 */
 325:Generated_Source\PSoC5/RTC_INT.c ****                 if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 329              		.loc 1 325 0
 330 00a6 794B     		ldr	r3, .L48+4
 331 00a8 1B78     		ldrb	r3, [r3]
 332 00aa DBB2     		uxtb	r3, r3
 333 00ac 03F00203 		and	r3, r3, #2
 334 00b0 002B     		cmp	r3, #0
 335 00b2 11D0     		beq	.L13
 326:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 336              		.loc 1 326 0 discriminator 1
 337 00b4 744B     		ldr	r3, .L48
 338 00b6 1B7A     		ldrb	r3, [r3, #8]
 339 00b8 DBB2     		uxtb	r3, r3
 325:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 340              		.loc 1 325 0 discriminator 1
 341 00ba 022B     		cmp	r3, #2
 342 00bc 0CD1     		bne	.L13
 327:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 343              		.loc 1 327 0
 344 00be 724B     		ldr	r3, .L48
 345 00c0 1B79     		ldrb	r3, [r3, #4]
 346 00c2 DBB2     		uxtb	r3, r3
 347 00c4 1946     		mov	r1, r3
 328:Generated_Source\PSoC5/RTC_INT.c ****                              (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 348              		.loc 1 328 0
 349 00c6 704B     		ldr	r3, .L48
 350 00c8 1B7A     		ldrb	r3, [r3, #8]
 351 00ca DBB2     		uxtb	r3, r3
 352 00cc 013B     		subs	r3, r3, #1
 353 00ce 704A     		ldr	r2, .L48+8
 354 00d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 355 00d2 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 13


 326:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 356              		.loc 1 326 0
 357 00d4 9942     		cmp	r1, r3
 358 00d6 2AD8     		bhi	.L14
 359              	.L13:
 329:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY))  &&
 360              		.loc 1 329 0
 361 00d8 6C4B     		ldr	r3, .L48+4
 362 00da 1B78     		ldrb	r3, [r3]
 363 00dc DBB2     		uxtb	r3, r3
 364 00de 03F00203 		and	r3, r3, #2
 328:Generated_Source\PSoC5/RTC_INT.c ****                              (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 365              		.loc 1 328 0
 366 00e2 002B     		cmp	r3, #0
 367 00e4 0FD0     		beq	.L15
 330:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month != RTC_FEBRUARY) &&
 368              		.loc 1 330 0
 369 00e6 684B     		ldr	r3, .L48
 370 00e8 1B7A     		ldrb	r3, [r3, #8]
 371 00ea DBB2     		uxtb	r3, r3
 329:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY))  &&
 372              		.loc 1 329 0
 373 00ec 022B     		cmp	r3, #2
 374 00ee 0AD0     		beq	.L15
 331:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 375              		.loc 1 331 0
 376 00f0 654B     		ldr	r3, .L48
 377 00f2 1B79     		ldrb	r3, [r3, #4]
 378 00f4 DAB2     		uxtb	r2, r3
 332:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 379              		.loc 1 332 0
 380 00f6 644B     		ldr	r3, .L48
 381 00f8 1B7A     		ldrb	r3, [r3, #8]
 382 00fa DBB2     		uxtb	r3, r3
 383 00fc 013B     		subs	r3, r3, #1
 384 00fe 6449     		ldr	r1, .L48+8
 385 0100 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 330:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month != RTC_FEBRUARY) &&
 386              		.loc 1 330 0
 387 0102 9A42     		cmp	r2, r3
 388 0104 13D8     		bhi	.L14
 389              	.L15:
 333:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY))  &&
 390              		.loc 1 333 0
 391 0106 614B     		ldr	r3, .L48+4
 392 0108 1B78     		ldrb	r3, [r3]
 393 010a DBB2     		uxtb	r3, r3
 394 010c 03F00203 		and	r3, r3, #2
 332:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 395              		.loc 1 332 0
 396 0110 002B     		cmp	r3, #0
 397 0112 40F0F480 		bne	.L16
 334:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 398              		.loc 1 334 0
 399 0116 5C4B     		ldr	r3, .L48
 400 0118 1B79     		ldrb	r3, [r3, #4]
 401 011a DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 14


 335:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
 402              		.loc 1 335 0
 403 011c 5A4B     		ldr	r3, .L48
 404 011e 1B7A     		ldrb	r3, [r3, #8]
 405 0120 DBB2     		uxtb	r3, r3
 406 0122 013B     		subs	r3, r3, #1
 407 0124 5A49     		ldr	r1, .L48+8
 408 0126 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 333:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY))  &&
 409              		.loc 1 333 0
 410 0128 9A42     		cmp	r2, r3
 411 012a 40F2E880 		bls	.L16
 412              	.L14:
 336:Generated_Source\PSoC5/RTC_INT.c ****                 {
 337:Generated_Source\PSoC5/RTC_INT.c ****                     /* Inc Month */
 338:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.Month++;
 413              		.loc 1 338 0
 414 012e 564B     		ldr	r3, .L48
 415 0130 1B7A     		ldrb	r3, [r3, #8]
 416 0132 DBB2     		uxtb	r3, r3
 417 0134 0133     		adds	r3, r3, #1
 418 0136 DAB2     		uxtb	r2, r3
 419 0138 534B     		ldr	r3, .L48
 420 013a 1A72     		strb	r2, [r3, #8]
 339:Generated_Source\PSoC5/RTC_INT.c **** 
 340:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set first day of month */
 341:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.DayOfMonth = 1u;
 421              		.loc 1 341 0
 422 013c 524B     		ldr	r3, .L48
 423 013e 0122     		movs	r2, #1
 424 0140 1A71     		strb	r2, [r3, #4]
 342:Generated_Source\PSoC5/RTC_INT.c **** 
 343:Generated_Source\PSoC5/RTC_INT.c ****                     /* Year roll over */
 344:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 425              		.loc 1 344 0
 426 0142 514B     		ldr	r3, .L48
 427 0144 1B7A     		ldrb	r3, [r3, #8]
 428 0146 DBB2     		uxtb	r3, r3
 429 0148 0C2B     		cmp	r3, #12
 430 014a 40F28580 		bls	.L17
 345:Generated_Source\PSoC5/RTC_INT.c ****                     {
 346:Generated_Source\PSoC5/RTC_INT.c ****                         /* Inc Year */
 347:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.Year++;
 431              		.loc 1 347 0
 432 014e 4E4B     		ldr	r3, .L48
 433 0150 5B89     		ldrh	r3, [r3, #10]	@ movhi
 434 0152 9BB2     		uxth	r3, r3
 435 0154 0133     		adds	r3, r3, #1
 436 0156 9AB2     		uxth	r2, r3
 437 0158 4B4B     		ldr	r3, .L48
 438 015a 5A81     		strh	r2, [r3, #10]	@ movhi
 348:Generated_Source\PSoC5/RTC_INT.c **** 
 349:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set first month of year */
 350:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.Month = 1u;
 439              		.loc 1 350 0
 440 015c 4A4B     		ldr	r3, .L48
 441 015e 0122     		movs	r2, #1
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 15


 442 0160 1A72     		strb	r2, [r3, #8]
 351:Generated_Source\PSoC5/RTC_INT.c **** 
 352:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set first day of year */
 353:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.DayOfYear = 1u;
 443              		.loc 1 353 0
 444 0162 494B     		ldr	r3, .L48
 445 0164 0122     		movs	r2, #1
 446 0166 DA80     		strh	r2, [r3, #6]	@ movhi
 354:Generated_Source\PSoC5/RTC_INT.c **** 
 355:Generated_Source\PSoC5/RTC_INT.c ****                         /* Is this year leap */
 356:Generated_Source\PSoC5/RTC_INT.c ****                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 447              		.loc 1 356 0
 448 0168 474B     		ldr	r3, .L48
 449 016a 5B89     		ldrh	r3, [r3, #10]	@ movhi
 450 016c 9BB2     		uxth	r3, r3
 451 016e 494A     		ldr	r2, .L48+12
 452 0170 A2FB0312 		umull	r1, r2, r2, r3
 453 0174 D209     		lsrs	r2, r2, #7
 454 0176 4FF4C871 		mov	r1, #400
 455 017a 01FB02F2 		mul	r2, r1, r2
 456 017e 9B1A     		subs	r3, r3, r2
 457 0180 9BB2     		uxth	r3, r3
 458 0182 002B     		cmp	r3, #0
 459 0184 15D0     		beq	.L18
 460              		.loc 1 356 0 is_stmt 0 discriminator 1
 461 0186 404B     		ldr	r3, .L48
 462 0188 5B89     		ldrh	r3, [r3, #10]	@ movhi
 463 018a 9BB2     		uxth	r3, r3
 464 018c 03F00303 		and	r3, r3, #3
 465 0190 9BB2     		uxth	r3, r3
 466 0192 002B     		cmp	r3, #0
 467 0194 16D1     		bne	.L19
 468              		.loc 1 356 0 discriminator 2
 469 0196 3C4B     		ldr	r3, .L48
 470 0198 5B89     		ldrh	r3, [r3, #10]	@ movhi
 471 019a 9BB2     		uxth	r3, r3
 472 019c 3D4A     		ldr	r2, .L48+12
 473 019e A2FB0312 		umull	r1, r2, r2, r3
 474 01a2 5209     		lsrs	r2, r2, #5
 475 01a4 6421     		movs	r1, #100
 476 01a6 01FB02F2 		mul	r2, r1, r2
 477 01aa 9B1A     		subs	r3, r3, r2
 478 01ac 9BB2     		uxth	r3, r3
 479 01ae 002B     		cmp	r3, #0
 480 01b0 08D0     		beq	.L19
 481              	.L18:
 357:Generated_Source\PSoC5/RTC_INT.c ****                         {
 358:Generated_Source\PSoC5/RTC_INT.c ****                             /* Set leap year flag */
 359:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime |= RTC_STATUS_LY;
 482              		.loc 1 359 0 is_stmt 1
 483 01b2 364B     		ldr	r3, .L48+4
 484 01b4 1B78     		ldrb	r3, [r3]
 485 01b6 DBB2     		uxtb	r3, r3
 486 01b8 43F00203 		orr	r3, r3, #2
 487 01bc DAB2     		uxtb	r2, r3
 488 01be 334B     		ldr	r3, .L48+4
 489 01c0 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 16


 490 01c2 07E0     		b	.L20
 491              	.L19:
 360:Generated_Source\PSoC5/RTC_INT.c ****                         }
 361:Generated_Source\PSoC5/RTC_INT.c ****                         else    /* not leap year */
 362:Generated_Source\PSoC5/RTC_INT.c ****                         {
 363:Generated_Source\PSoC5/RTC_INT.c ****                             /* Clear leap year */
 364:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 492              		.loc 1 364 0
 493 01c4 314B     		ldr	r3, .L48+4
 494 01c6 1B78     		ldrb	r3, [r3]
 495 01c8 DBB2     		uxtb	r3, r3
 496 01ca 23F00203 		bic	r3, r3, #2
 497 01ce DAB2     		uxtb	r2, r3
 498 01d0 2E4B     		ldr	r3, .L48+4
 499 01d2 1A70     		strb	r2, [r3]
 500              	.L20:
 365:Generated_Source\PSoC5/RTC_INT.c ****                         }
 366:Generated_Source\PSoC5/RTC_INT.c **** 
 367:Generated_Source\PSoC5/RTC_INT.c ****                         /* Alarm YEAR */
 368:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 501              		.loc 1 368 0
 502 01d4 304B     		ldr	r3, .L48+16
 503 01d6 1B78     		ldrb	r3, [r3]
 504 01d8 DBB2     		uxtb	r3, r3
 505 01da 5BB2     		sxtb	r3, r3
 506 01dc 002B     		cmp	r3, #0
 507 01de 18DA     		bge	.L21
 369:Generated_Source\PSoC5/RTC_INT.c ****                                                              RTC_ALARM_YEAR_MASK))
 370:Generated_Source\PSoC5/RTC_INT.c ****                         {
 371:Generated_Source\PSoC5/RTC_INT.c ****                             /* Years match */
 372:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 508              		.loc 1 372 0
 509 01e0 2E4B     		ldr	r3, .L48+20
 510 01e2 5B89     		ldrh	r3, [r3, #10]	@ movhi
 511 01e4 9AB2     		uxth	r2, r3
 512 01e6 284B     		ldr	r3, .L48
 513 01e8 5B89     		ldrh	r3, [r3, #10]	@ movhi
 514 01ea 9BB2     		uxth	r3, r3
 515 01ec 9A42     		cmp	r2, r3
 516 01ee 08D1     		bne	.L22
 373:Generated_Source\PSoC5/RTC_INT.c ****                             {
 374:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Rise year alarm */
 375:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 517              		.loc 1 375 0
 518 01f0 2B4B     		ldr	r3, .L48+24
 519 01f2 1B78     		ldrb	r3, [r3]
 520 01f4 DBB2     		uxtb	r3, r3
 521 01f6 63F07F03 		orn	r3, r3, #127
 522 01fa DAB2     		uxtb	r2, r3
 523 01fc 284B     		ldr	r3, .L48+24
 524 01fe 1A70     		strb	r2, [r3]
 525 0200 07E0     		b	.L21
 526              	.L22:
 376:Generated_Source\PSoC5/RTC_INT.c ****                             }
 377:Generated_Source\PSoC5/RTC_INT.c ****                             else    /* Years do not match */
 378:Generated_Source\PSoC5/RTC_INT.c ****                             {
 379:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Clear year alarm */
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 17


 380:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 527              		.loc 1 380 0
 528 0202 274B     		ldr	r3, .L48+24
 529 0204 1B78     		ldrb	r3, [r3]
 530 0206 DBB2     		uxtb	r3, r3
 531 0208 03F07F03 		and	r3, r3, #127
 532 020c DAB2     		uxtb	r2, r3
 533 020e 244B     		ldr	r3, .L48+24
 534 0210 1A70     		strb	r2, [r3]
 535              	.L21:
 381:Generated_Source\PSoC5/RTC_INT.c ****                             }
 382:Generated_Source\PSoC5/RTC_INT.c ****                         } /* do not alarm year */
 383:Generated_Source\PSoC5/RTC_INT.c **** 
 384:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set Alarm flag event */
 385:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_tmp = RTC_alarmCfgMask;
 536              		.loc 1 385 0
 537 0212 214B     		ldr	r3, .L48+16
 538 0214 1B78     		ldrb	r3, [r3]
 539 0216 FB71     		strb	r3, [r7, #7]
 386:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_SET_ALARM(RTC_tmp,
 540              		.loc 1 386 0
 541 0218 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 542 021a 002B     		cmp	r3, #0
 543 021c 13D0     		beq	.L23
 544              		.loc 1 386 0 is_stmt 0 discriminator 1
 545 021e 204B     		ldr	r3, .L48+24
 546 0220 1B78     		ldrb	r3, [r3]
 547 0222 DAB2     		uxtb	r2, r3
 548 0224 FB79     		ldrb	r3, [r7, #7]
 549 0226 1340     		ands	r3, r3, r2
 550 0228 DBB2     		uxtb	r3, r3
 551 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 552 022c 9A42     		cmp	r2, r3
 553 022e 0AD1     		bne	.L23
 554              		.loc 1 386 0 discriminator 2
 555 0230 164B     		ldr	r3, .L48+4
 556 0232 1B78     		ldrb	r3, [r3]
 557 0234 DBB2     		uxtb	r3, r3
 558 0236 43F00803 		orr	r3, r3, #8
 559 023a DAB2     		uxtb	r2, r3
 560 023c 134B     		ldr	r3, .L48+4
 561 023e 1A70     		strb	r2, [r3]
 562 0240 174B     		ldr	r3, .L48+24
 563 0242 0022     		movs	r2, #0
 564 0244 1A70     		strb	r2, [r3]
 565              	.L23:
 387:Generated_Source\PSoC5/RTC_INT.c ****                                                    RTC_alarmCurStatus,
 388:Generated_Source\PSoC5/RTC_INT.c ****                                                    RTC_statusDateTime);
 389:Generated_Source\PSoC5/RTC_INT.c **** 
 390:Generated_Source\PSoC5/RTC_INT.c ****                         /* Every Year */
 391:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 566              		.loc 1 391 0 is_stmt 1
 567 0246 174B     		ldr	r3, .L48+28
 568 0248 1B78     		ldrb	r3, [r3]
 569 024a DBB2     		uxtb	r3, r3
 570 024c 03F04003 		and	r3, r3, #64
 571 0250 002B     		cmp	r3, #0
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 18


 572 0252 01D0     		beq	.L17
 392:Generated_Source\PSoC5/RTC_INT.c ****                                                              RTC_INTERVAL_YEAR_MASK))
 393:Generated_Source\PSoC5/RTC_INT.c ****                         {
 394:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_EveryYearHandler();
 573              		.loc 1 394 0
 574 0254 FFF7FEFF 		bl	RTC_EveryYearHandler
 575              	.L17:
 395:Generated_Source\PSoC5/RTC_INT.c ****                         }
 396:Generated_Source\PSoC5/RTC_INT.c **** 
 397:Generated_Source\PSoC5/RTC_INT.c ****                     } /* Month > 12 */
 398:Generated_Source\PSoC5/RTC_INT.c **** 
 399:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm MONTH */
 400:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 576              		.loc 1 400 0
 577 0258 0F4B     		ldr	r3, .L48+16
 578 025a 1B78     		ldrb	r3, [r3]
 579 025c DBB2     		uxtb	r3, r3
 580 025e 03F04003 		and	r3, r3, #64
 581 0262 002B     		cmp	r3, #0
 582 0264 28D0     		beq	.L24
 401:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_MONTH_MASK))
 402:Generated_Source\PSoC5/RTC_INT.c ****                     {
 403:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 583              		.loc 1 403 0
 584 0266 0D4B     		ldr	r3, .L48+20
 585 0268 1B7A     		ldrb	r3, [r3, #8]
 586 026a DAB2     		uxtb	r2, r3
 587 026c 064B     		ldr	r3, .L48
 588 026e 1B7A     		ldrb	r3, [r3, #8]
 589 0270 DBB2     		uxtb	r3, r3
 590 0272 9A42     		cmp	r2, r3
 591 0274 18D1     		bne	.L25
 404:Generated_Source\PSoC5/RTC_INT.c ****                         {
 405:Generated_Source\PSoC5/RTC_INT.c ****                             /* Set month alarm */
 406:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 592              		.loc 1 406 0
 593 0276 0A4B     		ldr	r3, .L48+24
 594 0278 1B78     		ldrb	r3, [r3]
 595 027a DBB2     		uxtb	r3, r3
 596 027c 43F04003 		orr	r3, r3, #64
 597 0280 DAB2     		uxtb	r2, r3
 598 0282 074B     		ldr	r3, .L48+24
 599 0284 1A70     		strb	r2, [r3]
 600 0286 17E0     		b	.L24
 601              	.L49:
 602              		.align	2
 603              	.L48:
 604 0288 00000000 		.word	RTC_currentTimeDate
 605 028c 00000000 		.word	RTC_statusDateTime
 606 0290 00000000 		.word	RTC_daysInMonths
 607 0294 1F85EB51 		.word	1374389535
 608 0298 00000000 		.word	RTC_alarmCfgMask
 609 029c 00000000 		.word	RTC_alarmCfgTimeDate
 610 02a0 00000000 		.word	RTC_alarmCurStatus
 611 02a4 00000000 		.word	RTC_intervalCfgMask
 612              	.L25:
 407:Generated_Source\PSoC5/RTC_INT.c ****                         }
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 19


 408:Generated_Source\PSoC5/RTC_INT.c ****                         else
 409:Generated_Source\PSoC5/RTC_INT.c ****                         {
 410:Generated_Source\PSoC5/RTC_INT.c ****                             /* Clear month alarm */
 411:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 613              		.loc 1 411 0
 614 02a8 964B     		ldr	r3, .L50
 615 02aa 1B78     		ldrb	r3, [r3]
 616 02ac DBB2     		uxtb	r3, r3
 617 02ae 23F04003 		bic	r3, r3, #64
 618 02b2 DAB2     		uxtb	r2, r3
 619 02b4 934B     		ldr	r3, .L50
 620 02b6 1A70     		strb	r2, [r3]
 621              	.L24:
 412:Generated_Source\PSoC5/RTC_INT.c ****                         }
 413:Generated_Source\PSoC5/RTC_INT.c ****                     }   /* Month alarm is masked */
 414:Generated_Source\PSoC5/RTC_INT.c **** 
 415:Generated_Source\PSoC5/RTC_INT.c ****                     #if (1u == RTC_DST_FUNC_ENABLE)
 416:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
 417:Generated_Source\PSoC5/RTC_INT.c ****                         {
 418:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus |= RTC_DST_MONTH;
 419:Generated_Source\PSoC5/RTC_INT.c ****                         }
 420:Generated_Source\PSoC5/RTC_INT.c ****                         else
 421:Generated_Source\PSoC5/RTC_INT.c ****                         {
 422:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
 423:Generated_Source\PSoC5/RTC_INT.c ****                         }
 424:Generated_Source\PSoC5/RTC_INT.c **** 
 425:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_dstTimeDateStart.Month == RTC_currentTimeDate.Month)
 426:Generated_Source\PSoC5/RTC_INT.c ****                         {
 427:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus |= RTC_DST_MONTH;
 428:Generated_Source\PSoC5/RTC_INT.c ****                         }
 429:Generated_Source\PSoC5/RTC_INT.c ****                         else
 430:Generated_Source\PSoC5/RTC_INT.c ****                         {
 431:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus &= (uint8)(~RTC_DST_MONTH);
 432:Generated_Source\PSoC5/RTC_INT.c ****                         }
 433:Generated_Source\PSoC5/RTC_INT.c ****                     #endif /* 1u == RTC_DST_FUNC_ENABLE */
 434:Generated_Source\PSoC5/RTC_INT.c **** 
 435:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set Alarm flag event */
 436:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_tmp = RTC_alarmCfgMask;
 622              		.loc 1 436 0
 623 02b8 934B     		ldr	r3, .L50+4
 624 02ba 1B78     		ldrb	r3, [r3]
 625 02bc FB71     		strb	r3, [r7, #7]
 437:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_SET_ALARM(RTC_tmp,
 626              		.loc 1 437 0
 627 02be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 628 02c0 002B     		cmp	r3, #0
 629 02c2 13D0     		beq	.L26
 630              		.loc 1 437 0 is_stmt 0 discriminator 1
 631 02c4 8F4B     		ldr	r3, .L50
 632 02c6 1B78     		ldrb	r3, [r3]
 633 02c8 DAB2     		uxtb	r2, r3
 634 02ca FB79     		ldrb	r3, [r7, #7]
 635 02cc 1340     		ands	r3, r3, r2
 636 02ce DBB2     		uxtb	r3, r3
 637 02d0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 638 02d2 9A42     		cmp	r2, r3
 639 02d4 0AD1     		bne	.L26
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 20


 640              		.loc 1 437 0 discriminator 2
 641 02d6 8D4B     		ldr	r3, .L50+8
 642 02d8 1B78     		ldrb	r3, [r3]
 643 02da DBB2     		uxtb	r3, r3
 644 02dc 43F00803 		orr	r3, r3, #8
 645 02e0 DAB2     		uxtb	r2, r3
 646 02e2 8A4B     		ldr	r3, .L50+8
 647 02e4 1A70     		strb	r2, [r3]
 648 02e6 874B     		ldr	r3, .L50
 649 02e8 0022     		movs	r2, #0
 650 02ea 1A70     		strb	r2, [r3]
 651              	.L26:
 438:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_alarmCurStatus,
 439:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_statusDateTime);
 440:Generated_Source\PSoC5/RTC_INT.c **** 
 441:Generated_Source\PSoC5/RTC_INT.c ****                     /* Every Month */
 442:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 652              		.loc 1 442 0 is_stmt 1
 653 02ec 884B     		ldr	r3, .L50+12
 654 02ee 1B78     		ldrb	r3, [r3]
 655 02f0 DBB2     		uxtb	r3, r3
 656 02f2 03F02003 		and	r3, r3, #32
 657 02f6 002B     		cmp	r3, #0
 658 02f8 01D0     		beq	.L16
 443:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_INTERVAL_MONTH_MASK))
 444:Generated_Source\PSoC5/RTC_INT.c ****                     {
 445:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_EveryMonthHandler();
 659              		.loc 1 445 0
 660 02fa FFF7FEFF 		bl	RTC_EveryMonthHandler
 661              	.L16:
 446:Generated_Source\PSoC5/RTC_INT.c ****                     }
 447:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day roll over */
 448:Generated_Source\PSoC5/RTC_INT.c **** 
 449:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFWEEK */
 450:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 662              		.loc 1 450 0
 663 02fe 824B     		ldr	r3, .L50+4
 664 0300 1B78     		ldrb	r3, [r3]
 665 0302 DBB2     		uxtb	r3, r3
 666 0304 03F00803 		and	r3, r3, #8
 667 0308 002B     		cmp	r3, #0
 668 030a 18D0     		beq	.L27
 451:Generated_Source\PSoC5/RTC_INT.c ****                                                      RTC_ALARM_DAYOFWEEK_MASK))
 452:Generated_Source\PSoC5/RTC_INT.c ****                 {
 453:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 669              		.loc 1 453 0
 670 030c 814B     		ldr	r3, .L50+16
 671 030e DB78     		ldrb	r3, [r3, #3]
 672 0310 DAB2     		uxtb	r2, r3
 673 0312 814B     		ldr	r3, .L50+20
 674 0314 DB78     		ldrb	r3, [r3, #3]
 675 0316 DBB2     		uxtb	r3, r3
 676 0318 9A42     		cmp	r2, r3
 677 031a 08D1     		bne	.L28
 454:Generated_Source\PSoC5/RTC_INT.c ****                     {
 455:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of week alarm */
 456:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 21


 678              		.loc 1 456 0
 679 031c 794B     		ldr	r3, .L50
 680 031e 1B78     		ldrb	r3, [r3]
 681 0320 DBB2     		uxtb	r3, r3
 682 0322 43F00803 		orr	r3, r3, #8
 683 0326 DAB2     		uxtb	r2, r3
 684 0328 764B     		ldr	r3, .L50
 685 032a 1A70     		strb	r2, [r3]
 686 032c 07E0     		b	.L27
 687              	.L28:
 457:Generated_Source\PSoC5/RTC_INT.c ****                     }
 458:Generated_Source\PSoC5/RTC_INT.c ****                     else
 459:Generated_Source\PSoC5/RTC_INT.c ****                     {
 460:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of week alarm */
 461:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 688              		.loc 1 461 0
 689 032e 754B     		ldr	r3, .L50
 690 0330 1B78     		ldrb	r3, [r3]
 691 0332 DBB2     		uxtb	r3, r3
 692 0334 23F00803 		bic	r3, r3, #8
 693 0338 DAB2     		uxtb	r2, r3
 694 033a 724B     		ldr	r3, .L50
 695 033c 1A70     		strb	r2, [r3]
 696              	.L27:
 462:Generated_Source\PSoC5/RTC_INT.c ****                     }
 463:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of week alarm is masked */
 464:Generated_Source\PSoC5/RTC_INT.c **** 
 465:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFYEAR */
 466:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 697              		.loc 1 466 0
 698 033e 724B     		ldr	r3, .L50+4
 699 0340 1B78     		ldrb	r3, [r3]
 700 0342 DBB2     		uxtb	r3, r3
 701 0344 03F02003 		and	r3, r3, #32
 702 0348 002B     		cmp	r3, #0
 703 034a 18D0     		beq	.L29
 467:Generated_Source\PSoC5/RTC_INT.c ****                                                      RTC_ALARM_DAYOFYEAR_MASK))
 468:Generated_Source\PSoC5/RTC_INT.c ****                 {
 469:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 704              		.loc 1 469 0
 705 034c 714B     		ldr	r3, .L50+16
 706 034e DB88     		ldrh	r3, [r3, #6]	@ movhi
 707 0350 9AB2     		uxth	r2, r3
 708 0352 714B     		ldr	r3, .L50+20
 709 0354 DB88     		ldrh	r3, [r3, #6]	@ movhi
 710 0356 9BB2     		uxth	r3, r3
 711 0358 9A42     		cmp	r2, r3
 712 035a 08D1     		bne	.L30
 470:Generated_Source\PSoC5/RTC_INT.c ****                     {
 471:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of year alarm */
 472:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 713              		.loc 1 472 0
 714 035c 694B     		ldr	r3, .L50
 715 035e 1B78     		ldrb	r3, [r3]
 716 0360 DBB2     		uxtb	r3, r3
 717 0362 43F02003 		orr	r3, r3, #32
 718 0366 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 22


 719 0368 664B     		ldr	r3, .L50
 720 036a 1A70     		strb	r2, [r3]
 721 036c 07E0     		b	.L29
 722              	.L30:
 473:Generated_Source\PSoC5/RTC_INT.c ****                     }
 474:Generated_Source\PSoC5/RTC_INT.c ****                     else
 475:Generated_Source\PSoC5/RTC_INT.c ****                     {
 476:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of year alarm */
 477:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 723              		.loc 1 477 0
 724 036e 654B     		ldr	r3, .L50
 725 0370 1B78     		ldrb	r3, [r3]
 726 0372 DBB2     		uxtb	r3, r3
 727 0374 23F02003 		bic	r3, r3, #32
 728 0378 DAB2     		uxtb	r2, r3
 729 037a 624B     		ldr	r3, .L50
 730 037c 1A70     		strb	r2, [r3]
 731              	.L29:
 478:Generated_Source\PSoC5/RTC_INT.c ****                     }
 479:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of year alarm is masked */
 480:Generated_Source\PSoC5/RTC_INT.c **** 
 481:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFMONTH */
 482:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 732              		.loc 1 482 0
 733 037e 624B     		ldr	r3, .L50+4
 734 0380 1B78     		ldrb	r3, [r3]
 735 0382 DBB2     		uxtb	r3, r3
 736 0384 03F01003 		and	r3, r3, #16
 737 0388 002B     		cmp	r3, #0
 738 038a 18D0     		beq	.L31
 483:Generated_Source\PSoC5/RTC_INT.c ****                          RTC_ALARM_DAYOFMONTH_MASK))
 484:Generated_Source\PSoC5/RTC_INT.c ****                 {
 485:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 739              		.loc 1 485 0
 740 038c 614B     		ldr	r3, .L50+16
 741 038e 1B79     		ldrb	r3, [r3, #4]
 742 0390 DAB2     		uxtb	r2, r3
 743 0392 614B     		ldr	r3, .L50+20
 744 0394 1B79     		ldrb	r3, [r3, #4]
 745 0396 DBB2     		uxtb	r3, r3
 746 0398 9A42     		cmp	r2, r3
 747 039a 08D1     		bne	.L32
 486:Generated_Source\PSoC5/RTC_INT.c ****                     {
 487:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of month alarm */
 488:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 748              		.loc 1 488 0
 749 039c 594B     		ldr	r3, .L50
 750 039e 1B78     		ldrb	r3, [r3]
 751 03a0 DBB2     		uxtb	r3, r3
 752 03a2 43F01003 		orr	r3, r3, #16
 753 03a6 DAB2     		uxtb	r2, r3
 754 03a8 564B     		ldr	r3, .L50
 755 03aa 1A70     		strb	r2, [r3]
 756 03ac 07E0     		b	.L31
 757              	.L32:
 489:Generated_Source\PSoC5/RTC_INT.c ****                     }
 490:Generated_Source\PSoC5/RTC_INT.c ****                     else
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 23


 491:Generated_Source\PSoC5/RTC_INT.c ****                     {
 492:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of month alarm */
 493:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 758              		.loc 1 493 0
 759 03ae 554B     		ldr	r3, .L50
 760 03b0 1B78     		ldrb	r3, [r3]
 761 03b2 DBB2     		uxtb	r3, r3
 762 03b4 23F01003 		bic	r3, r3, #16
 763 03b8 DAB2     		uxtb	r2, r3
 764 03ba 524B     		ldr	r3, .L50
 765 03bc 1A70     		strb	r2, [r3]
 766              	.L31:
 494:Generated_Source\PSoC5/RTC_INT.c ****                     }
 495:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of month alarm is masked */
 496:Generated_Source\PSoC5/RTC_INT.c **** 
 497:Generated_Source\PSoC5/RTC_INT.c ****                 #if (1u == RTC_DST_FUNC_ENABLE)
 498:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_dstTimeDateStop.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 499:Generated_Source\PSoC5/RTC_INT.c ****                     {
 500:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
 501:Generated_Source\PSoC5/RTC_INT.c ****                     }
 502:Generated_Source\PSoC5/RTC_INT.c ****                     else
 503:Generated_Source\PSoC5/RTC_INT.c ****                     {
 504:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 505:Generated_Source\PSoC5/RTC_INT.c ****                     }
 506:Generated_Source\PSoC5/RTC_INT.c **** 
 507:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_dstTimeDateStart.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 508:Generated_Source\PSoC5/RTC_INT.c ****                     {
 509:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStartStatus |= RTC_DST_DAYOFMONTH;
 510:Generated_Source\PSoC5/RTC_INT.c ****                     }
 511:Generated_Source\PSoC5/RTC_INT.c ****                     else
 512:Generated_Source\PSoC5/RTC_INT.c ****                     {
 513:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStartStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 514:Generated_Source\PSoC5/RTC_INT.c ****                     }
 515:Generated_Source\PSoC5/RTC_INT.c ****                 #endif /* 1u == RTC_DST_FUNC_ENABLE */
 516:Generated_Source\PSoC5/RTC_INT.c **** 
 517:Generated_Source\PSoC5/RTC_INT.c ****                 /* Set Alarm flag event */
 518:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_tmp = RTC_alarmCfgMask;
 767              		.loc 1 518 0
 768 03be 524B     		ldr	r3, .L50+4
 769 03c0 1B78     		ldrb	r3, [r3]
 770 03c2 FB71     		strb	r3, [r7, #7]
 519:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_SET_ALARM(RTC_tmp,
 771              		.loc 1 519 0
 772 03c4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 773 03c6 002B     		cmp	r3, #0
 774 03c8 13D0     		beq	.L33
 775              		.loc 1 519 0 is_stmt 0 discriminator 1
 776 03ca 4E4B     		ldr	r3, .L50
 777 03cc 1B78     		ldrb	r3, [r3]
 778 03ce DAB2     		uxtb	r2, r3
 779 03d0 FB79     		ldrb	r3, [r7, #7]
 780 03d2 1340     		ands	r3, r3, r2
 781 03d4 DBB2     		uxtb	r3, r3
 782 03d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 783 03d8 9A42     		cmp	r2, r3
 784 03da 0AD1     		bne	.L33
 785              		.loc 1 519 0 discriminator 2
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 24


 786 03dc 4B4B     		ldr	r3, .L50+8
 787 03de 1B78     		ldrb	r3, [r3]
 788 03e0 DBB2     		uxtb	r3, r3
 789 03e2 43F00803 		orr	r3, r3, #8
 790 03e6 DAB2     		uxtb	r2, r3
 791 03e8 484B     		ldr	r3, .L50+8
 792 03ea 1A70     		strb	r2, [r3]
 793 03ec 454B     		ldr	r3, .L50
 794 03ee 0022     		movs	r2, #0
 795 03f0 1A70     		strb	r2, [r3]
 796              	.L33:
 520:Generated_Source\PSoC5/RTC_INT.c ****                                            RTC_alarmCurStatus,
 521:Generated_Source\PSoC5/RTC_INT.c ****                                            RTC_statusDateTime);
 522:Generated_Source\PSoC5/RTC_INT.c **** 
 523:Generated_Source\PSoC5/RTC_INT.c ****                 /* Every Day */
 524:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 797              		.loc 1 524 0 is_stmt 1
 798 03f2 474B     		ldr	r3, .L50+12
 799 03f4 1B78     		ldrb	r3, [r3]
 800 03f6 DBB2     		uxtb	r3, r3
 801 03f8 03F00803 		and	r3, r3, #8
 802 03fc 002B     		cmp	r3, #0
 803 03fe 01D0     		beq	.L34
 525:Generated_Source\PSoC5/RTC_INT.c ****                          RTC_INTERVAL_DAY_MASK))
 526:Generated_Source\PSoC5/RTC_INT.c ****                 {
 527:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_EveryDayHandler();
 804              		.loc 1 527 0
 805 0400 FFF7FEFF 		bl	RTC_EveryDayHandler
 806              	.L34:
 528:Generated_Source\PSoC5/RTC_INT.c ****                 }
 529:Generated_Source\PSoC5/RTC_INT.c **** 
 530:Generated_Source\PSoC5/RTC_INT.c ****                 if(1u == RTC_currentTimeDate.DayOfWeek)
 807              		.loc 1 530 0
 808 0404 444B     		ldr	r3, .L50+20
 809 0406 DB78     		ldrb	r3, [r3, #3]
 810 0408 DBB2     		uxtb	r3, r3
 811 040a 012B     		cmp	r3, #1
 812 040c 08D1     		bne	.L11
 531:Generated_Source\PSoC5/RTC_INT.c ****                 {
 532:Generated_Source\PSoC5/RTC_INT.c ****                     /* Every Week */
 533:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 813              		.loc 1 533 0
 814 040e 404B     		ldr	r3, .L50+12
 815 0410 1B78     		ldrb	r3, [r3]
 816 0412 DBB2     		uxtb	r3, r3
 817 0414 03F01003 		and	r3, r3, #16
 818 0418 002B     		cmp	r3, #0
 819 041a 01D0     		beq	.L11
 534:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_INTERVAL_WEEK_MASK))
 535:Generated_Source\PSoC5/RTC_INT.c ****                     {
 536:Generated_Source\PSoC5/RTC_INT.c ****                        RTC_EveryWeekHandler();
 820              		.loc 1 536 0
 821 041c FFF7FEFF 		bl	RTC_EveryWeekHandler
 822              	.L11:
 537:Generated_Source\PSoC5/RTC_INT.c ****                     }
 538:Generated_Source\PSoC5/RTC_INT.c ****                 }
 539:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 25


 540:Generated_Source\PSoC5/RTC_INT.c ****             } /* End of day roll over */
 541:Generated_Source\PSoC5/RTC_INT.c **** 
 542:Generated_Source\PSoC5/RTC_INT.c ****             /* Status set PM/AM flag */
 543:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 823              		.loc 1 543 0
 824 0420 3D4B     		ldr	r3, .L50+20
 825 0422 9B78     		ldrb	r3, [r3, #2]
 826 0424 DBB2     		uxtb	r3, r3
 827 0426 0B2B     		cmp	r3, #11
 828 0428 08D8     		bhi	.L35
 544:Generated_Source\PSoC5/RTC_INT.c ****             {
 545:Generated_Source\PSoC5/RTC_INT.c ****                 /* AM Hour 00:00-11:59, flag zero */
 546:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 829              		.loc 1 546 0
 830 042a 384B     		ldr	r3, .L50+8
 831 042c 1B78     		ldrb	r3, [r3]
 832 042e DBB2     		uxtb	r3, r3
 833 0430 23F00403 		bic	r3, r3, #4
 834 0434 DAB2     		uxtb	r2, r3
 835 0436 354B     		ldr	r3, .L50+8
 836 0438 1A70     		strb	r2, [r3]
 837 043a 07E0     		b	.L36
 838              	.L35:
 547:Generated_Source\PSoC5/RTC_INT.c ****             }
 548:Generated_Source\PSoC5/RTC_INT.c ****             else
 549:Generated_Source\PSoC5/RTC_INT.c ****             {
 550:Generated_Source\PSoC5/RTC_INT.c ****                 /* PM Hour 12:00-23:59, flag set */
 551:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_statusDateTime |= RTC_STATUS_AM_PM;
 839              		.loc 1 551 0
 840 043c 334B     		ldr	r3, .L50+8
 841 043e 1B78     		ldrb	r3, [r3]
 842 0440 DBB2     		uxtb	r3, r3
 843 0442 43F00403 		orr	r3, r3, #4
 844 0446 DAB2     		uxtb	r2, r3
 845 0448 304B     		ldr	r3, .L50+8
 846 044a 1A70     		strb	r2, [r3]
 847              	.L36:
 552:Generated_Source\PSoC5/RTC_INT.c ****             }
 553:Generated_Source\PSoC5/RTC_INT.c **** 
 554:Generated_Source\PSoC5/RTC_INT.c ****             #if (1u == RTC_DST_FUNC_ENABLE)
 555:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_dstTimeDateStop.Hour == RTC_currentTimeDate.Hour)
 556:Generated_Source\PSoC5/RTC_INT.c ****                 {
 557:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStopStatus |= RTC_DST_HOUR;
 558:Generated_Source\PSoC5/RTC_INT.c ****                 }
 559:Generated_Source\PSoC5/RTC_INT.c ****                 else
 560:Generated_Source\PSoC5/RTC_INT.c ****                 {
 561:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStopStatus &= (uint8)(~RTC_DST_HOUR);
 562:Generated_Source\PSoC5/RTC_INT.c ****                 }
 563:Generated_Source\PSoC5/RTC_INT.c **** 
 564:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_dstTimeDateStart.Hour == RTC_currentTimeDate.Hour)
 565:Generated_Source\PSoC5/RTC_INT.c ****                 {
 566:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStartStatus |= RTC_DST_HOUR;
 567:Generated_Source\PSoC5/RTC_INT.c ****                 }
 568:Generated_Source\PSoC5/RTC_INT.c ****                 else
 569:Generated_Source\PSoC5/RTC_INT.c ****                 {
 570:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_dstStartStatus &= (uint8)(~RTC_DST_HOUR);
 571:Generated_Source\PSoC5/RTC_INT.c ****                 }
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 26


 572:Generated_Source\PSoC5/RTC_INT.c **** 
 573:Generated_Source\PSoC5/RTC_INT.c ****                 /* DST Enable ? */
 574:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_dstModeType, RTC_DST_ENABLE))
 575:Generated_Source\PSoC5/RTC_INT.c ****                 {
 576:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_statusDateTime, RTC_STATUS_DST))
 577:Generated_Source\PSoC5/RTC_INT.c ****                     {
 578:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_dstStopStatus, RTC_DST_HOUR |
 579:Generated_Source\PSoC5/RTC_INT.c ****                                                        RTC_DST_DAYOFMONTH | RTC_DST_MONTH))
 580:Generated_Source\PSoC5/RTC_INT.c ****                         {
 581:Generated_Source\PSoC5/RTC_INT.c ****                             /* Substruct from current value of minutes, number of minutes
 582:Generated_Source\PSoC5/RTC_INT.c ****                             * in DST offset which is out of complete hour
 583:Generated_Source\PSoC5/RTC_INT.c ****                             */
 584:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Min -=
 585:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 586:Generated_Source\PSoC5/RTC_INT.c **** 
 587:Generated_Source\PSoC5/RTC_INT.c ****                             /* Is minute value negative? */
 588:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 589:Generated_Source\PSoC5/RTC_INT.c ****                             {
 590:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Convert to the positive.
 591:Generated_Source\PSoC5/RTC_INT.c ****                                 * HOUR_ELAPSED -     (~currentTimeDate.Min    ) ==
 592:Generated_Source\PSoC5/RTC_INT.c ****                                 * HOUR_ELAPSED + 1 - (~currentTimeDate.Min + 1)
 593:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 594:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Min = RTC_HOUR_ELAPSED -
 595:Generated_Source\PSoC5/RTC_INT.c ****                                                              ((uint8)(~RTC_currentTimeDate.Min));
 596:Generated_Source\PSoC5/RTC_INT.c **** 
 597:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour--;
 598:Generated_Source\PSoC5/RTC_INT.c ****                             }
 599:Generated_Source\PSoC5/RTC_INT.c **** 
 600:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Hour -= RTC_dstOffsetMin /
 601:Generated_Source\PSoC5/RTC_INT.c ****                                                                      (RTC_HOUR_ELAPSED + 1u);
 602:Generated_Source\PSoC5/RTC_INT.c **** 
 603:Generated_Source\PSoC5/RTC_INT.c ****                             /* Day roll over
 604:Generated_Source\PSoC5/RTC_INT.c ****                             * Is hour value negative? */
 605:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 606:Generated_Source\PSoC5/RTC_INT.c ****                             {
 607:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Convert to the positive.
 608:Generated_Source\PSoC5/RTC_INT.c ****                                 * DAY_ELAPSED - (~currentTimeDate.Hour) ==
 609:Generated_Source\PSoC5/RTC_INT.c ****                                 * DAY_ELAPSED + 1 - (~currentTimeDate.Hour + 1)
 610:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 611:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour = RTC_DAY_ELAPSED -
 612:Generated_Source\PSoC5/RTC_INT.c ****                                                               ((uint8)(~RTC_currentTimeDate.Hour));
 613:Generated_Source\PSoC5/RTC_INT.c **** 
 614:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Status set PM/AM flag */
 615:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 616:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 617:Generated_Source\PSoC5/RTC_INT.c ****                                     /* AM Hour 00:00-11:59, flag zero */
 618:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 619:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 620:Generated_Source\PSoC5/RTC_INT.c ****                                 else
 621:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 622:Generated_Source\PSoC5/RTC_INT.c ****                                     /* PM Hour 12:00-23:59, flag set */
 623:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime |= RTC_STATUS_AM_PM;
 624:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 625:Generated_Source\PSoC5/RTC_INT.c **** 
 626:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfMonth--;
 627:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfYear--;
 628:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfWeek--;
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 27


 629:Generated_Source\PSoC5/RTC_INT.c **** 
 630:Generated_Source\PSoC5/RTC_INT.c ****                                 if(0u == RTC_currentTimeDate.DayOfWeek)
 631:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 632:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfWeek = RTC_DAYS_IN_WEEK;
 633:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 634:Generated_Source\PSoC5/RTC_INT.c **** 
 635:Generated_Source\PSoC5/RTC_INT.c ****                                 if(0u == RTC_currentTimeDate.DayOfMonth)
 636:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 637:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.Month--;
 638:Generated_Source\PSoC5/RTC_INT.c ****                                     if(0u == RTC_currentTimeDate.Month)
 639:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 640:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Month = RTC_DECEMBER;
 641:Generated_Source\PSoC5/RTC_INT.c **** 
 642:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.DayOfMonth =
 643:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 644:Generated_Source\PSoC5/RTC_INT.c **** 
 645:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Year--;
 646:Generated_Source\PSoC5/RTC_INT.c **** 
 647:Generated_Source\PSoC5/RTC_INT.c ****                                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 648:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 649:Generated_Source\PSoC5/RTC_INT.c ****                                             /* LP - true, else - false */
 650:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime |= RTC_STATUS_LY;
 651:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfYear =
 652:Generated_Source\PSoC5/RTC_INT.c ****                                                                                     RTC_DAYS_IN_LEA
 653:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 654:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 655:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 656:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 657:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfYear = RTC_DAYS_IN_YEAR;
 658:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 659:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_EveryYearHandler();
 660:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 661:Generated_Source\PSoC5/RTC_INT.c ****                                     else
 662:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 663:Generated_Source\PSoC5/RTC_INT.c ****                                         /* Day of month roll over.
 664:Generated_Source\PSoC5/RTC_INT.c ****                                         * Check if day of month February 29 of leap year
 665:Generated_Source\PSoC5/RTC_INT.c ****                                         */
 666:Generated_Source\PSoC5/RTC_INT.c ****                                         if((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 667:Generated_Source\PSoC5/RTC_INT.c ****                                             (RTC_currentTimeDate.Month == RTC_FEBRUARY))
 668:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 669:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfMonth =
 670:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u]
 671:Generated_Source\PSoC5/RTC_INT.c ****                                             + 1u;
 672:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 673:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 674:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 675:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfMonth =
 676:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 677:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 678:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 679:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_EveryMonthHandler();
 680:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 681:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_EveryDayHandler();
 682:Generated_Source\PSoC5/RTC_INT.c ****                             }
 683:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_DST);
 684:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus = 0u;
 685:Generated_Source\PSoC5/RTC_INT.c ****                         }
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 28


 686:Generated_Source\PSoC5/RTC_INT.c ****                     }
 687:Generated_Source\PSoC5/RTC_INT.c ****                     else
 688:Generated_Source\PSoC5/RTC_INT.c ****                     {
 689:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_dstStartStatus,
 690:Generated_Source\PSoC5/RTC_INT.c ****                                                       (RTC_DST_HOUR | RTC_DST_DAYOFMONTH |
 691:Generated_Source\PSoC5/RTC_INT.c ****                                                        RTC_DST_MONTH)))
 692:Generated_Source\PSoC5/RTC_INT.c ****                         {
 693:Generated_Source\PSoC5/RTC_INT.c ****                             /* Add Hour and Min */
 694:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Min +=
 695:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 696:Generated_Source\PSoC5/RTC_INT.c **** 
 697:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 698:Generated_Source\PSoC5/RTC_INT.c ****                             {
 699:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Adjust Min */
 700:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Min -= (RTC_HOUR_ELAPSED + 1u);
 701:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour++;
 702:Generated_Source\PSoC5/RTC_INT.c ****                             }
 703:Generated_Source\PSoC5/RTC_INT.c **** 
 704:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Hour += RTC_dstOffsetMin /
 705:Generated_Source\PSoC5/RTC_INT.c ****                                                                      (RTC_HOUR_ELAPSED + 1u);
 706:Generated_Source\PSoC5/RTC_INT.c **** 
 707:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 708:Generated_Source\PSoC5/RTC_INT.c ****                             {
 709:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Adjust hour, add day */
 710:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour -= (RTC_DAY_ELAPSED + 1u);
 711:Generated_Source\PSoC5/RTC_INT.c **** 
 712:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Status set PM/AM flag */
 713:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 714:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 715:Generated_Source\PSoC5/RTC_INT.c ****                                     /* AM Hour 00:00-11:59, flag zero */
 716:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 717:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 718:Generated_Source\PSoC5/RTC_INT.c ****                                 else
 719:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 720:Generated_Source\PSoC5/RTC_INT.c ****                                     /* PM Hour 12:00-23:59, flag set */
 721:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime |= RTC_STATUS_AM_PM;
 722:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 723:Generated_Source\PSoC5/RTC_INT.c **** 
 724:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfMonth++;
 725:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfYear++;
 726:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfWeek++;
 727:Generated_Source\PSoC5/RTC_INT.c **** 
 728:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
 729:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 730:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfWeek = 1u;
 731:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 732:Generated_Source\PSoC5/RTC_INT.c **** 
 733:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Day of month roll over.
 734:Generated_Source\PSoC5/RTC_INT.c ****                                 * Check if day of month greater than 29 in February of leap year or
 735:Generated_Source\PSoC5/RTC_INT.c ****                                 * if day of month greater than 28 NOT in February of NON leap year 
 736:Generated_Source\PSoC5/RTC_INT.c ****                                 * if day of month greater than it should be in every month in non l
 737:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 738:Generated_Source\PSoC5/RTC_INT.c ****                                 if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 739:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 740:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 741:Generated_Source\PSoC5/RTC_INT.c ****                                   (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 742:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 29


 743:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month != RTC_FEBRUARY)  &&
 744:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 745:Generated_Source\PSoC5/RTC_INT.c ****                                      RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 746:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY)) &&
 747:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 748:Generated_Source\PSoC5/RTC_INT.c ****                                      RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
 749:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 750:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.Month++;
 751:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfMonth = 1u;
 752:Generated_Source\PSoC5/RTC_INT.c ****                                     if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 753:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 754:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Month = RTC_JANUARY;
 755:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Year++;
 756:Generated_Source\PSoC5/RTC_INT.c **** 
 757:Generated_Source\PSoC5/RTC_INT.c ****                                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 758:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 759:Generated_Source\PSoC5/RTC_INT.c ****                                             /* LP - true, else - false */
 760:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime |= RTC_STATUS_LY;
 761:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 762:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 763:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 764:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 765:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 766:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.DayOfYear = 1u;
 767:Generated_Source\PSoC5/RTC_INT.c **** 
 768:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_EveryYearHandler();
 769:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 770:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_EveryMonthHandler();
 771:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 772:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_EveryDayHandler();
 773:Generated_Source\PSoC5/RTC_INT.c ****                             }
 774:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime |= RTC_STATUS_DST;
 775:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus = 0u;
 776:Generated_Source\PSoC5/RTC_INT.c **** 
 777:Generated_Source\PSoC5/RTC_INT.c ****                             /* Month */
 778:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
 779:Generated_Source\PSoC5/RTC_INT.c ****                             {
 780:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus |= RTC_DST_MONTH;
 781:Generated_Source\PSoC5/RTC_INT.c ****                             }
 782:Generated_Source\PSoC5/RTC_INT.c ****                             else
 783:Generated_Source\PSoC5/RTC_INT.c ****                             {
 784:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
 785:Generated_Source\PSoC5/RTC_INT.c ****                             }
 786:Generated_Source\PSoC5/RTC_INT.c **** 
 787:Generated_Source\PSoC5/RTC_INT.c ****                             /* DayOfMonth */
 788:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_dstTimeDateStop.DayOfMonth ==
 789:Generated_Source\PSoC5/RTC_INT.c ****                                                                             RTC_currentTimeDate.Day
 790:Generated_Source\PSoC5/RTC_INT.c ****                             {
 791:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
 792:Generated_Source\PSoC5/RTC_INT.c ****                             }
 793:Generated_Source\PSoC5/RTC_INT.c ****                             else
 794:Generated_Source\PSoC5/RTC_INT.c ****                             {
 795:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 796:Generated_Source\PSoC5/RTC_INT.c ****                             }
 797:Generated_Source\PSoC5/RTC_INT.c ****                         }
 798:Generated_Source\PSoC5/RTC_INT.c ****                     }
 799:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 30


 800:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFWEEK */
 801:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 802:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFWEEK_MASK))
 803:Generated_Source\PSoC5/RTC_INT.c ****                     {
 804:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 805:Generated_Source\PSoC5/RTC_INT.c ****                         {
 806:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 807:Generated_Source\PSoC5/RTC_INT.c ****                         }
 808:Generated_Source\PSoC5/RTC_INT.c ****                         else
 809:Generated_Source\PSoC5/RTC_INT.c ****                         {
 810:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 811:Generated_Source\PSoC5/RTC_INT.c ****                         }
 812:Generated_Source\PSoC5/RTC_INT.c ****                     }
 813:Generated_Source\PSoC5/RTC_INT.c **** 
 814:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFYEAR */
 815:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 816:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFYEAR_MASK))
 817:Generated_Source\PSoC5/RTC_INT.c ****                     {
 818:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 819:Generated_Source\PSoC5/RTC_INT.c ****                         {
 820:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 821:Generated_Source\PSoC5/RTC_INT.c ****                         }
 822:Generated_Source\PSoC5/RTC_INT.c ****                         else
 823:Generated_Source\PSoC5/RTC_INT.c ****                         {
 824:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 825:Generated_Source\PSoC5/RTC_INT.c ****                         }
 826:Generated_Source\PSoC5/RTC_INT.c ****                     }
 827:Generated_Source\PSoC5/RTC_INT.c **** 
 828:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFMONTH */
 829:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 830:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFMONTH_MASK))
 831:Generated_Source\PSoC5/RTC_INT.c ****                     {
 832:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 833:Generated_Source\PSoC5/RTC_INT.c ****                         {
 834:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 835:Generated_Source\PSoC5/RTC_INT.c ****                         }
 836:Generated_Source\PSoC5/RTC_INT.c ****                         else
 837:Generated_Source\PSoC5/RTC_INT.c ****                         {
 838:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 839:Generated_Source\PSoC5/RTC_INT.c ****                         }
 840:Generated_Source\PSoC5/RTC_INT.c ****                     }
 841:Generated_Source\PSoC5/RTC_INT.c **** 
 842:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm MONTH */
 843:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 844:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_MONTH_MASK))
 845:Generated_Source\PSoC5/RTC_INT.c ****                     {
 846:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 847:Generated_Source\PSoC5/RTC_INT.c ****                         {
 848:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 849:Generated_Source\PSoC5/RTC_INT.c ****                         }
 850:Generated_Source\PSoC5/RTC_INT.c ****                         else
 851:Generated_Source\PSoC5/RTC_INT.c ****                         {
 852:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 853:Generated_Source\PSoC5/RTC_INT.c ****                         }
 854:Generated_Source\PSoC5/RTC_INT.c ****                     }
 855:Generated_Source\PSoC5/RTC_INT.c **** 
 856:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm YEAR */
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 31


 857:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 858:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_YEAR_MASK))
 859:Generated_Source\PSoC5/RTC_INT.c ****                     {
 860:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 861:Generated_Source\PSoC5/RTC_INT.c ****                         {
 862:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 863:Generated_Source\PSoC5/RTC_INT.c ****                         }
 864:Generated_Source\PSoC5/RTC_INT.c ****                         else
 865:Generated_Source\PSoC5/RTC_INT.c ****                         {
 866:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 867:Generated_Source\PSoC5/RTC_INT.c ****                         }
 868:Generated_Source\PSoC5/RTC_INT.c ****                     }
 869:Generated_Source\PSoC5/RTC_INT.c **** 
 870:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set Alarm flag event */
 871:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_tmp = RTC_alarmCfgMask;
 872:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_SET_ALARM(RTC_tmp,
 873:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_alarmCurStatus,
 874:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_statusDateTime);
 875:Generated_Source\PSoC5/RTC_INT.c ****                 }
 876:Generated_Source\PSoC5/RTC_INT.c ****             #endif /* 1u == RTC_DST_FUNC_ENABLE */
 877:Generated_Source\PSoC5/RTC_INT.c **** 
 878:Generated_Source\PSoC5/RTC_INT.c ****             /* Alarm HOUR */
 879:Generated_Source\PSoC5/RTC_INT.c ****             if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_HOUR_MASK))
 848              		.loc 1 879 0
 849 044c 2E4B     		ldr	r3, .L50+4
 850 044e 1B78     		ldrb	r3, [r3]
 851 0450 DBB2     		uxtb	r3, r3
 852 0452 03F00403 		and	r3, r3, #4
 853 0456 002B     		cmp	r3, #0
 854 0458 18D0     		beq	.L37
 880:Generated_Source\PSoC5/RTC_INT.c ****             {
 881:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_alarmCfgTimeDate.Hour == RTC_currentTimeDate.Hour)
 855              		.loc 1 881 0
 856 045a 2E4B     		ldr	r3, .L50+16
 857 045c 9B78     		ldrb	r3, [r3, #2]
 858 045e DAB2     		uxtb	r2, r3
 859 0460 2D4B     		ldr	r3, .L50+20
 860 0462 9B78     		ldrb	r3, [r3, #2]
 861 0464 DBB2     		uxtb	r3, r3
 862 0466 9A42     		cmp	r2, r3
 863 0468 08D1     		bne	.L38
 882:Generated_Source\PSoC5/RTC_INT.c ****                 {
 883:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_alarmCurStatus |= RTC_ALARM_HOUR_MASK;
 864              		.loc 1 883 0
 865 046a 264B     		ldr	r3, .L50
 866 046c 1B78     		ldrb	r3, [r3]
 867 046e DBB2     		uxtb	r3, r3
 868 0470 43F00403 		orr	r3, r3, #4
 869 0474 DAB2     		uxtb	r2, r3
 870 0476 234B     		ldr	r3, .L50
 871 0478 1A70     		strb	r2, [r3]
 872 047a 07E0     		b	.L37
 873              	.L38:
 884:Generated_Source\PSoC5/RTC_INT.c ****                 }
 885:Generated_Source\PSoC5/RTC_INT.c ****                 else
 886:Generated_Source\PSoC5/RTC_INT.c ****                 {
 887:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_HOUR_MASK);
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 32


 874              		.loc 1 887 0
 875 047c 214B     		ldr	r3, .L50
 876 047e 1B78     		ldrb	r3, [r3]
 877 0480 DBB2     		uxtb	r3, r3
 878 0482 23F00403 		bic	r3, r3, #4
 879 0486 DAB2     		uxtb	r2, r3
 880 0488 1E4B     		ldr	r3, .L50
 881 048a 1A70     		strb	r2, [r3]
 882              	.L37:
 888:Generated_Source\PSoC5/RTC_INT.c ****                 }
 889:Generated_Source\PSoC5/RTC_INT.c ****             }
 890:Generated_Source\PSoC5/RTC_INT.c **** 
 891:Generated_Source\PSoC5/RTC_INT.c ****             /* Set Alarm flag event */
 892:Generated_Source\PSoC5/RTC_INT.c ****             RTC_tmp = RTC_alarmCfgMask;
 883              		.loc 1 892 0
 884 048c 1E4B     		ldr	r3, .L50+4
 885 048e 1B78     		ldrb	r3, [r3]
 886 0490 FB71     		strb	r3, [r7, #7]
 893:Generated_Source\PSoC5/RTC_INT.c ****             RTC_SET_ALARM(RTC_tmp,
 887              		.loc 1 893 0
 888 0492 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 889 0494 002B     		cmp	r3, #0
 890 0496 13D0     		beq	.L39
 891              		.loc 1 893 0 is_stmt 0 discriminator 1
 892 0498 1A4B     		ldr	r3, .L50
 893 049a 1B78     		ldrb	r3, [r3]
 894 049c DAB2     		uxtb	r2, r3
 895 049e FB79     		ldrb	r3, [r7, #7]
 896 04a0 1340     		ands	r3, r3, r2
 897 04a2 DBB2     		uxtb	r3, r3
 898 04a4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 899 04a6 9A42     		cmp	r2, r3
 900 04a8 0AD1     		bne	.L39
 901              		.loc 1 893 0 discriminator 2
 902 04aa 184B     		ldr	r3, .L50+8
 903 04ac 1B78     		ldrb	r3, [r3]
 904 04ae DBB2     		uxtb	r3, r3
 905 04b0 43F00803 		orr	r3, r3, #8
 906 04b4 DAB2     		uxtb	r2, r3
 907 04b6 154B     		ldr	r3, .L50+8
 908 04b8 1A70     		strb	r2, [r3]
 909 04ba 124B     		ldr	r3, .L50
 910 04bc 0022     		movs	r2, #0
 911 04be 1A70     		strb	r2, [r3]
 912              	.L39:
 894:Generated_Source\PSoC5/RTC_INT.c ****                                        RTC_alarmCurStatus,
 895:Generated_Source\PSoC5/RTC_INT.c ****                                        RTC_statusDateTime);
 896:Generated_Source\PSoC5/RTC_INT.c **** 
 897:Generated_Source\PSoC5/RTC_INT.c ****             /* Every Hour */
 898:Generated_Source\PSoC5/RTC_INT.c ****             if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_HOUR_MASK))
 913              		.loc 1 898 0 is_stmt 1
 914 04c0 134B     		ldr	r3, .L50+12
 915 04c2 1B78     		ldrb	r3, [r3]
 916 04c4 DBB2     		uxtb	r3, r3
 917 04c6 03F00403 		and	r3, r3, #4
 918 04ca 002B     		cmp	r3, #0
 919 04cc 01D0     		beq	.L10
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 33


 899:Generated_Source\PSoC5/RTC_INT.c ****             {
 900:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_EveryHourHandler();
 920              		.loc 1 900 0
 921 04ce FFF7FEFF 		bl	RTC_EveryHourHandler
 922              	.L10:
 901:Generated_Source\PSoC5/RTC_INT.c ****             }
 902:Generated_Source\PSoC5/RTC_INT.c ****         } /* Min > 59 = Hour */
 903:Generated_Source\PSoC5/RTC_INT.c **** 
 904:Generated_Source\PSoC5/RTC_INT.c ****         /* Alarm MIN */
 905:Generated_Source\PSoC5/RTC_INT.c ****         if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_MIN_MASK))
 923              		.loc 1 905 0
 924 04d2 0D4B     		ldr	r3, .L50+4
 925 04d4 1B78     		ldrb	r3, [r3]
 926 04d6 DBB2     		uxtb	r3, r3
 927 04d8 03F00203 		and	r3, r3, #2
 928 04dc 002B     		cmp	r3, #0
 929 04de 25D0     		beq	.L40
 906:Generated_Source\PSoC5/RTC_INT.c ****         {
 907:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_alarmCfgTimeDate.Min == RTC_currentTimeDate.Min)
 930              		.loc 1 907 0
 931 04e0 0C4B     		ldr	r3, .L50+16
 932 04e2 5B78     		ldrb	r3, [r3, #1]
 933 04e4 DAB2     		uxtb	r2, r3
 934 04e6 0C4B     		ldr	r3, .L50+20
 935 04e8 5B78     		ldrb	r3, [r3, #1]
 936 04ea DBB2     		uxtb	r3, r3
 937 04ec 9A42     		cmp	r2, r3
 938 04ee 15D1     		bne	.L41
 908:Generated_Source\PSoC5/RTC_INT.c ****             {
 909:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_alarmCurStatus |= RTC_ALARM_MIN_MASK;
 939              		.loc 1 909 0
 940 04f0 044B     		ldr	r3, .L50
 941 04f2 1B78     		ldrb	r3, [r3]
 942 04f4 DBB2     		uxtb	r3, r3
 943 04f6 43F00203 		orr	r3, r3, #2
 944 04fa DAB2     		uxtb	r2, r3
 945 04fc 014B     		ldr	r3, .L50
 946 04fe 1A70     		strb	r2, [r3]
 947 0500 14E0     		b	.L40
 948              	.L51:
 949 0502 00BF     		.align	2
 950              	.L50:
 951 0504 00000000 		.word	RTC_alarmCurStatus
 952 0508 00000000 		.word	RTC_alarmCfgMask
 953 050c 00000000 		.word	RTC_statusDateTime
 954 0510 00000000 		.word	RTC_intervalCfgMask
 955 0514 00000000 		.word	RTC_alarmCfgTimeDate
 956 0518 00000000 		.word	RTC_currentTimeDate
 957              	.L41:
 910:Generated_Source\PSoC5/RTC_INT.c ****             }
 911:Generated_Source\PSoC5/RTC_INT.c ****             else
 912:Generated_Source\PSoC5/RTC_INT.c ****             {
 913:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MIN_MASK);
 958              		.loc 1 913 0
 959 051c 384B     		ldr	r3, .L52
 960 051e 1B78     		ldrb	r3, [r3]
 961 0520 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 34


 962 0522 23F00203 		bic	r3, r3, #2
 963 0526 DAB2     		uxtb	r2, r3
 964 0528 354B     		ldr	r3, .L52
 965 052a 1A70     		strb	r2, [r3]
 966              	.L40:
 914:Generated_Source\PSoC5/RTC_INT.c ****             }
 915:Generated_Source\PSoC5/RTC_INT.c ****         }
 916:Generated_Source\PSoC5/RTC_INT.c **** 
 917:Generated_Source\PSoC5/RTC_INT.c ****         /* Set Alarm flag event */
 918:Generated_Source\PSoC5/RTC_INT.c ****         RTC_tmp = RTC_alarmCfgMask;
 967              		.loc 1 918 0
 968 052c 354B     		ldr	r3, .L52+4
 969 052e 1B78     		ldrb	r3, [r3]
 970 0530 FB71     		strb	r3, [r7, #7]
 919:Generated_Source\PSoC5/RTC_INT.c ****         RTC_SET_ALARM(RTC_tmp,
 971              		.loc 1 919 0
 972 0532 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 973 0534 002B     		cmp	r3, #0
 974 0536 13D0     		beq	.L42
 975              		.loc 1 919 0 is_stmt 0 discriminator 1
 976 0538 314B     		ldr	r3, .L52
 977 053a 1B78     		ldrb	r3, [r3]
 978 053c DAB2     		uxtb	r2, r3
 979 053e FB79     		ldrb	r3, [r7, #7]
 980 0540 1340     		ands	r3, r3, r2
 981 0542 DBB2     		uxtb	r3, r3
 982 0544 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 983 0546 9A42     		cmp	r2, r3
 984 0548 0AD1     		bne	.L42
 985              		.loc 1 919 0 discriminator 2
 986 054a 2F4B     		ldr	r3, .L52+8
 987 054c 1B78     		ldrb	r3, [r3]
 988 054e DBB2     		uxtb	r3, r3
 989 0550 43F00803 		orr	r3, r3, #8
 990 0554 DAB2     		uxtb	r2, r3
 991 0556 2C4B     		ldr	r3, .L52+8
 992 0558 1A70     		strb	r2, [r3]
 993 055a 294B     		ldr	r3, .L52
 994 055c 0022     		movs	r2, #0
 995 055e 1A70     		strb	r2, [r3]
 996              	.L42:
 920:Generated_Source\PSoC5/RTC_INT.c ****                                    RTC_alarmCurStatus,
 921:Generated_Source\PSoC5/RTC_INT.c ****                                    RTC_statusDateTime);
 922:Generated_Source\PSoC5/RTC_INT.c **** 
 923:Generated_Source\PSoC5/RTC_INT.c ****         /* Every Min */
 924:Generated_Source\PSoC5/RTC_INT.c ****         if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_MIN_MASK))
 997              		.loc 1 924 0 is_stmt 1
 998 0560 2A4B     		ldr	r3, .L52+12
 999 0562 1B78     		ldrb	r3, [r3]
 1000 0564 DBB2     		uxtb	r3, r3
 1001 0566 03F00203 		and	r3, r3, #2
 1002 056a 002B     		cmp	r3, #0
 1003 056c 01D0     		beq	.L9
 925:Generated_Source\PSoC5/RTC_INT.c ****         {
 926:Generated_Source\PSoC5/RTC_INT.c ****             RTC_EveryMinuteHandler();
 1004              		.loc 1 926 0
 1005 056e FFF7FEFF 		bl	RTC_EveryMinuteHandler
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 35


 1006              	.L9:
 927:Generated_Source\PSoC5/RTC_INT.c ****         }
 928:Generated_Source\PSoC5/RTC_INT.c ****     } /* Sec */
 929:Generated_Source\PSoC5/RTC_INT.c **** 
 930:Generated_Source\PSoC5/RTC_INT.c ****     /* Alarm SEC */
 931:Generated_Source\PSoC5/RTC_INT.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_SEC_MASK))
 1007              		.loc 1 931 0
 1008 0572 244B     		ldr	r3, .L52+4
 1009 0574 1B78     		ldrb	r3, [r3]
 1010 0576 DBB2     		uxtb	r3, r3
 1011 0578 03F00103 		and	r3, r3, #1
 1012 057c 002B     		cmp	r3, #0
 1013 057e 18D0     		beq	.L43
 932:Generated_Source\PSoC5/RTC_INT.c ****     {
 933:Generated_Source\PSoC5/RTC_INT.c ****         if(RTC_alarmCfgTimeDate.Sec == RTC_currentTimeDate.Sec)
 1014              		.loc 1 933 0
 1015 0580 234B     		ldr	r3, .L52+16
 1016 0582 1B78     		ldrb	r3, [r3]
 1017 0584 DAB2     		uxtb	r2, r3
 1018 0586 234B     		ldr	r3, .L52+20
 1019 0588 1B78     		ldrb	r3, [r3]
 1020 058a DBB2     		uxtb	r3, r3
 1021 058c 9A42     		cmp	r2, r3
 1022 058e 08D1     		bne	.L44
 934:Generated_Source\PSoC5/RTC_INT.c ****         {
 935:Generated_Source\PSoC5/RTC_INT.c ****             RTC_alarmCurStatus |= RTC_ALARM_SEC_MASK;
 1023              		.loc 1 935 0
 1024 0590 1B4B     		ldr	r3, .L52
 1025 0592 1B78     		ldrb	r3, [r3]
 1026 0594 DBB2     		uxtb	r3, r3
 1027 0596 43F00103 		orr	r3, r3, #1
 1028 059a DAB2     		uxtb	r2, r3
 1029 059c 184B     		ldr	r3, .L52
 1030 059e 1A70     		strb	r2, [r3]
 1031 05a0 07E0     		b	.L43
 1032              	.L44:
 936:Generated_Source\PSoC5/RTC_INT.c ****         }
 937:Generated_Source\PSoC5/RTC_INT.c ****         else
 938:Generated_Source\PSoC5/RTC_INT.c ****         {
 939:Generated_Source\PSoC5/RTC_INT.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_SEC_MASK);
 1033              		.loc 1 939 0
 1034 05a2 174B     		ldr	r3, .L52
 1035 05a4 1B78     		ldrb	r3, [r3]
 1036 05a6 DBB2     		uxtb	r3, r3
 1037 05a8 23F00103 		bic	r3, r3, #1
 1038 05ac DAB2     		uxtb	r2, r3
 1039 05ae 144B     		ldr	r3, .L52
 1040 05b0 1A70     		strb	r2, [r3]
 1041              	.L43:
 940:Generated_Source\PSoC5/RTC_INT.c ****         }
 941:Generated_Source\PSoC5/RTC_INT.c ****     }
 942:Generated_Source\PSoC5/RTC_INT.c **** 
 943:Generated_Source\PSoC5/RTC_INT.c ****     /* Set Alarm flag event */
 944:Generated_Source\PSoC5/RTC_INT.c ****     RTC_tmp = RTC_alarmCfgMask;
 1042              		.loc 1 944 0
 1043 05b2 144B     		ldr	r3, .L52+4
 1044 05b4 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 36


 1045 05b6 FB71     		strb	r3, [r7, #7]
 945:Generated_Source\PSoC5/RTC_INT.c ****     RTC_SET_ALARM(RTC_tmp, RTC_alarmCurStatus, RTC_statusDateTime);
 1046              		.loc 1 945 0
 1047 05b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1048 05ba 002B     		cmp	r3, #0
 1049 05bc 13D0     		beq	.L45
 1050              		.loc 1 945 0 is_stmt 0 discriminator 1
 1051 05be 104B     		ldr	r3, .L52
 1052 05c0 1B78     		ldrb	r3, [r3]
 1053 05c2 DAB2     		uxtb	r2, r3
 1054 05c4 FB79     		ldrb	r3, [r7, #7]
 1055 05c6 1340     		ands	r3, r3, r2
 1056 05c8 DBB2     		uxtb	r3, r3
 1057 05ca FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1058 05cc 9A42     		cmp	r2, r3
 1059 05ce 0AD1     		bne	.L45
 1060              		.loc 1 945 0 discriminator 2
 1061 05d0 0D4B     		ldr	r3, .L52+8
 1062 05d2 1B78     		ldrb	r3, [r3]
 1063 05d4 DBB2     		uxtb	r3, r3
 1064 05d6 43F00803 		orr	r3, r3, #8
 1065 05da DAB2     		uxtb	r2, r3
 1066 05dc 0A4B     		ldr	r3, .L52+8
 1067 05de 1A70     		strb	r2, [r3]
 1068 05e0 074B     		ldr	r3, .L52
 1069 05e2 0022     		movs	r2, #0
 1070 05e4 1A70     		strb	r2, [r3]
 1071              	.L45:
 946:Generated_Source\PSoC5/RTC_INT.c **** 
 947:Generated_Source\PSoC5/RTC_INT.c ****     /* Execute every second handler if needed */
 948:Generated_Source\PSoC5/RTC_INT.c ****     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_SEC_MASK))
 1072              		.loc 1 948 0 is_stmt 1
 1073 05e6 094B     		ldr	r3, .L52+12
 1074 05e8 1B78     		ldrb	r3, [r3]
 1075 05ea DBB2     		uxtb	r3, r3
 1076 05ec 03F00103 		and	r3, r3, #1
 1077 05f0 002B     		cmp	r3, #0
 1078 05f2 01D0     		beq	.L47
 949:Generated_Source\PSoC5/RTC_INT.c ****     {
 950:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EverySecondHandler();
 1079              		.loc 1 950 0
 1080 05f4 FFF7FEFF 		bl	RTC_EverySecondHandler
 1081              	.L47:
 951:Generated_Source\PSoC5/RTC_INT.c ****     }
 952:Generated_Source\PSoC5/RTC_INT.c ****     
 953:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_ISR_EXIT_CALLBACK
 954:Generated_Source\PSoC5/RTC_INT.c ****         RTC_ISR_ExitCallback();
 955:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_ISR_EXIT_CALLBACK */
 956:Generated_Source\PSoC5/RTC_INT.c **** }
 1082              		.loc 1 956 0
 1083 05f8 00BF     		nop
 1084 05fa 0837     		adds	r7, r7, #8
 1085              		.cfi_def_cfa_offset 8
 1086 05fc BD46     		mov	sp, r7
 1087              		.cfi_def_cfa_register 13
 1088              		@ sp needed
 1089 05fe 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 37


 1090              	.L53:
 1091              		.align	2
 1092              	.L52:
 1093 0600 00000000 		.word	RTC_alarmCurStatus
 1094 0604 00000000 		.word	RTC_alarmCfgMask
 1095 0608 00000000 		.word	RTC_statusDateTime
 1096 060c 00000000 		.word	RTC_intervalCfgMask
 1097 0610 00000000 		.word	RTC_alarmCfgTimeDate
 1098 0614 00000000 		.word	RTC_currentTimeDate
 1099              		.cfi_endproc
 1100              	.LFE71:
 1101              		.size	RTC_ISR, .-RTC_ISR
 1102              		.text
 1103              	.Letext0:
 1104              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 1105              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 1106              		.file 4 "Generated_Source\\PSoC5\\cytypes.h"
 1107              		.file 5 "Generated_Source\\PSoC5\\RTC.h"
 1108              		.file 6 "./modem.h"
 1109              		.file 7 "./data.h"
 1110              		.file 8 "./notoriOS.h"
 1111              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 1112              		.section	.debug_info,"",%progbits
 1113              	.Ldebug_info0:
 1114 0000 DF040000 		.4byte	0x4df
 1115 0004 0400     		.2byte	0x4
 1116 0006 00000000 		.4byte	.Ldebug_abbrev0
 1117 000a 04       		.byte	0x4
 1118 000b 01       		.uleb128 0x1
 1119 000c 5C000000 		.4byte	.LASF72
 1120 0010 0C       		.byte	0xc
 1121 0011 D5030000 		.4byte	.LASF73
 1122 0015 40040000 		.4byte	.LASF74
 1123 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1124 001d 00000000 		.4byte	0
 1125 0021 00000000 		.4byte	.Ldebug_line0
 1126 0025 02       		.uleb128 0x2
 1127 0026 01       		.byte	0x1
 1128 0027 06       		.byte	0x6
 1129 0028 47020000 		.4byte	.LASF0
 1130 002c 02       		.uleb128 0x2
 1131 002d 01       		.byte	0x1
 1132 002e 08       		.byte	0x8
 1133 002f 01020000 		.4byte	.LASF1
 1134 0033 02       		.uleb128 0x2
 1135 0034 02       		.byte	0x2
 1136 0035 05       		.byte	0x5
 1137 0036 41000000 		.4byte	.LASF2
 1138 003a 02       		.uleb128 0x2
 1139 003b 02       		.byte	0x2
 1140 003c 07       		.byte	0x7
 1141 003d BF020000 		.4byte	.LASF3
 1142 0041 03       		.uleb128 0x3
 1143 0042 CB030000 		.4byte	.LASF9
 1144 0046 02       		.byte	0x2
 1145 0047 3F       		.byte	0x3f
 1146 0048 4C000000 		.4byte	0x4c
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 38


 1147 004c 02       		.uleb128 0x2
 1148 004d 04       		.byte	0x4
 1149 004e 05       		.byte	0x5
 1150 004f A2010000 		.4byte	.LASF4
 1151 0053 02       		.uleb128 0x2
 1152 0054 04       		.byte	0x4
 1153 0055 07       		.byte	0x7
 1154 0056 76030000 		.4byte	.LASF5
 1155 005a 02       		.uleb128 0x2
 1156 005b 08       		.byte	0x8
 1157 005c 05       		.byte	0x5
 1158 005d 82010000 		.4byte	.LASF6
 1159 0061 02       		.uleb128 0x2
 1160 0062 08       		.byte	0x8
 1161 0063 07       		.byte	0x7
 1162 0064 68020000 		.4byte	.LASF7
 1163 0068 04       		.uleb128 0x4
 1164 0069 04       		.byte	0x4
 1165 006a 05       		.byte	0x5
 1166 006b 696E7400 		.ascii	"int\000"
 1167 006f 02       		.uleb128 0x2
 1168 0070 04       		.byte	0x4
 1169 0071 07       		.byte	0x7
 1170 0072 93020000 		.4byte	.LASF8
 1171 0076 03       		.uleb128 0x3
 1172 0077 0E030000 		.4byte	.LASF10
 1173 007b 03       		.byte	0x3
 1174 007c 2C       		.byte	0x2c
 1175 007d 41000000 		.4byte	0x41
 1176 0081 05       		.uleb128 0x5
 1177 0082 4E010000 		.4byte	.LASF11
 1178 0086 04       		.byte	0x4
 1179 0087 E401     		.2byte	0x1e4
 1180 0089 2C000000 		.4byte	0x2c
 1181 008d 05       		.uleb128 0x5
 1182 008e 2D010000 		.4byte	.LASF12
 1183 0092 04       		.byte	0x4
 1184 0093 E501     		.2byte	0x1e5
 1185 0095 3A000000 		.4byte	0x3a
 1186 0099 05       		.uleb128 0x5
 1187 009a 88030000 		.4byte	.LASF13
 1188 009e 04       		.byte	0x4
 1189 009f E901     		.2byte	0x1e9
 1190 00a1 4C000000 		.4byte	0x4c
 1191 00a5 02       		.uleb128 0x2
 1192 00a6 04       		.byte	0x4
 1193 00a7 04       		.byte	0x4
 1194 00a8 72010000 		.4byte	.LASF14
 1195 00ac 02       		.uleb128 0x2
 1196 00ad 08       		.byte	0x8
 1197 00ae 04       		.byte	0x4
 1198 00af 8E030000 		.4byte	.LASF15
 1199 00b3 02       		.uleb128 0x2
 1200 00b4 01       		.byte	0x1
 1201 00b5 08       		.byte	0x8
 1202 00b6 90010000 		.4byte	.LASF16
 1203 00ba 06       		.uleb128 0x6
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 39


 1204 00bb 81000000 		.4byte	0x81
 1205 00bf 07       		.uleb128 0x7
 1206 00c0 0C       		.byte	0xc
 1207 00c1 05       		.byte	0x5
 1208 00c2 30       		.byte	0x30
 1209 00c3 28010000 		.4byte	0x128
 1210 00c7 08       		.uleb128 0x8
 1211 00c8 53656300 		.ascii	"Sec\000"
 1212 00cc 05       		.byte	0x5
 1213 00cd 32       		.byte	0x32
 1214 00ce 81000000 		.4byte	0x81
 1215 00d2 00       		.byte	0
 1216 00d3 08       		.uleb128 0x8
 1217 00d4 4D696E00 		.ascii	"Min\000"
 1218 00d8 05       		.byte	0x5
 1219 00d9 33       		.byte	0x33
 1220 00da 81000000 		.4byte	0x81
 1221 00de 01       		.byte	0x1
 1222 00df 09       		.uleb128 0x9
 1223 00e0 04010000 		.4byte	.LASF17
 1224 00e4 05       		.byte	0x5
 1225 00e5 34       		.byte	0x34
 1226 00e6 81000000 		.4byte	0x81
 1227 00ea 02       		.byte	0x2
 1228 00eb 09       		.uleb128 0x9
 1229 00ec 78010000 		.4byte	.LASF18
 1230 00f0 05       		.byte	0x5
 1231 00f1 35       		.byte	0x35
 1232 00f2 81000000 		.4byte	0x81
 1233 00f6 03       		.byte	0x3
 1234 00f7 09       		.uleb128 0x9
 1235 00f8 41030000 		.4byte	.LASF19
 1236 00fc 05       		.byte	0x5
 1237 00fd 36       		.byte	0x36
 1238 00fe 81000000 		.4byte	0x81
 1239 0102 04       		.byte	0x4
 1240 0103 09       		.uleb128 0x9
 1241 0104 98040000 		.4byte	.LASF20
 1242 0108 05       		.byte	0x5
 1243 0109 37       		.byte	0x37
 1244 010a 8D000000 		.4byte	0x8d
 1245 010e 06       		.byte	0x6
 1246 010f 09       		.uleb128 0x9
 1247 0110 EF010000 		.4byte	.LASF21
 1248 0114 05       		.byte	0x5
 1249 0115 38       		.byte	0x38
 1250 0116 81000000 		.4byte	0x81
 1251 011a 08       		.byte	0x8
 1252 011b 09       		.uleb128 0x9
 1253 011c CC010000 		.4byte	.LASF22
 1254 0120 05       		.byte	0x5
 1255 0121 39       		.byte	0x39
 1256 0122 8D000000 		.4byte	0x8d
 1257 0126 0A       		.byte	0xa
 1258 0127 00       		.byte	0
 1259 0128 03       		.uleb128 0x3
 1260 0129 1E040000 		.4byte	.LASF23
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 40


 1261 012d 05       		.byte	0x5
 1262 012e 3A       		.byte	0x3a
 1263 012f 33010000 		.4byte	0x133
 1264 0133 06       		.uleb128 0x6
 1265 0134 BF000000 		.4byte	0xbf
 1266 0138 02       		.uleb128 0x2
 1267 0139 08       		.byte	0x8
 1268 013a 04       		.byte	0x4
 1269 013b F5010000 		.4byte	.LASF24
 1270 013f 02       		.uleb128 0x2
 1271 0140 04       		.byte	0x4
 1272 0141 07       		.byte	0x7
 1273 0142 4B000000 		.4byte	.LASF25
 1274 0146 0A       		.uleb128 0xa
 1275 0147 B3000000 		.4byte	0xb3
 1276 014b 56010000 		.4byte	0x156
 1277 014f 0B       		.uleb128 0xb
 1278 0150 3F010000 		.4byte	0x13f
 1279 0154 17       		.byte	0x17
 1280 0155 00       		.byte	0
 1281 0156 07       		.uleb128 0x7
 1282 0157 3C       		.byte	0x3c
 1283 0158 06       		.byte	0x6
 1284 0159 2C       		.byte	0x2c
 1285 015a 83010000 		.4byte	0x183
 1286 015e 09       		.uleb128 0x9
 1287 015f 1A000000 		.4byte	.LASF26
 1288 0163 06       		.byte	0x6
 1289 0164 2D       		.byte	0x2d
 1290 0165 83010000 		.4byte	0x183
 1291 0169 00       		.byte	0
 1292 016a 09       		.uleb128 0x9
 1293 016b 00000000 		.4byte	.LASF27
 1294 016f 06       		.byte	0x6
 1295 0170 2E       		.byte	0x2e
 1296 0171 83010000 		.4byte	0x183
 1297 0175 14       		.byte	0x14
 1298 0176 09       		.uleb128 0x9
 1299 0177 09030000 		.4byte	.LASF28
 1300 017b 06       		.byte	0x6
 1301 017c 2F       		.byte	0x2f
 1302 017d 83010000 		.4byte	0x183
 1303 0181 28       		.byte	0x28
 1304 0182 00       		.byte	0
 1305 0183 0A       		.uleb128 0xa
 1306 0184 B3000000 		.4byte	0xb3
 1307 0188 93010000 		.4byte	0x193
 1308 018c 0B       		.uleb128 0xb
 1309 018d 3F010000 		.4byte	0x13f
 1310 0191 13       		.byte	0x13
 1311 0192 00       		.byte	0
 1312 0193 03       		.uleb128 0x3
 1313 0194 95010000 		.4byte	.LASF29
 1314 0198 06       		.byte	0x6
 1315 0199 30       		.byte	0x30
 1316 019a 56010000 		.4byte	0x156
 1317 019e 07       		.uleb128 0x7
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 41


 1318 019f 0C       		.byte	0xc
 1319 01a0 06       		.byte	0x6
 1320 01a1 32       		.byte	0x32
 1321 01a2 D6010000 		.4byte	0x1d6
 1322 01a6 09       		.uleb128 0x9
 1323 01a7 93040000 		.4byte	.LASF30
 1324 01ab 06       		.byte	0x6
 1325 01ac 33       		.byte	0x33
 1326 01ad 81000000 		.4byte	0x81
 1327 01b1 00       		.byte	0
 1328 01b2 08       		.uleb128 0x8
 1329 01b3 737100   		.ascii	"sq\000"
 1330 01b6 06       		.byte	0x6
 1331 01b7 34       		.byte	0x34
 1332 01b8 81000000 		.4byte	0x81
 1333 01bc 01       		.byte	0x1
 1334 01bd 09       		.uleb128 0x9
 1335 01be D2020000 		.4byte	.LASF31
 1336 01c2 06       		.byte	0x6
 1337 01c3 35       		.byte	0x35
 1338 01c4 68000000 		.4byte	0x68
 1339 01c8 04       		.byte	0x4
 1340 01c9 09       		.uleb128 0x9
 1341 01ca F6020000 		.4byte	.LASF32
 1342 01ce 06       		.byte	0x6
 1343 01cf 36       		.byte	0x36
 1344 01d0 68000000 		.4byte	0x68
 1345 01d4 08       		.byte	0x8
 1346 01d5 00       		.byte	0
 1347 01d6 03       		.uleb128 0x3
 1348 01d7 1E030000 		.4byte	.LASF33
 1349 01db 06       		.byte	0x6
 1350 01dc 37       		.byte	0x37
 1351 01dd 9E010000 		.4byte	0x19e
 1352 01e1 07       		.uleb128 0x7
 1353 01e2 2C       		.byte	0x2c
 1354 01e3 07       		.byte	0x7
 1355 01e4 0F       		.byte	0xf
 1356 01e5 0E020000 		.4byte	0x20e
 1357 01e9 08       		.uleb128 0x8
 1358 01ea 6B657900 		.ascii	"key\000"
 1359 01ee 07       		.byte	0x7
 1360 01ef 10       		.byte	0x10
 1361 01f0 83010000 		.4byte	0x183
 1362 01f4 00       		.byte	0
 1363 01f5 09       		.uleb128 0x9
 1364 01f6 27010000 		.4byte	.LASF34
 1365 01fa 07       		.byte	0x7
 1366 01fb 11       		.byte	0x11
 1367 01fc 83010000 		.4byte	0x183
 1368 0200 14       		.byte	0x14
 1369 0201 09       		.uleb128 0x9
 1370 0202 68010000 		.4byte	.LASF35
 1371 0206 07       		.byte	0x7
 1372 0207 12       		.byte	0x12
 1373 0208 99000000 		.4byte	0x99
 1374 020c 28       		.byte	0x28
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 42


 1375 020d 00       		.byte	0
 1376 020e 03       		.uleb128 0x3
 1377 020f A0020000 		.4byte	.LASF36
 1378 0213 07       		.byte	0x7
 1379 0214 13       		.byte	0x13
 1380 0215 E1010000 		.4byte	0x1e1
 1381 0219 07       		.uleb128 0x7
 1382 021a 1C       		.byte	0x1c
 1383 021b 08       		.byte	0x8
 1384 021c 37       		.byte	0x37
 1385 021d 3A020000 		.4byte	0x23a
 1386 0221 09       		.uleb128 0x9
 1387 0222 AB010000 		.4byte	.LASF37
 1388 0226 08       		.byte	0x8
 1389 0227 39       		.byte	0x39
 1390 0228 3A020000 		.4byte	0x23a
 1391 022c 00       		.byte	0
 1392 022d 09       		.uleb128 0x9
 1393 022e 09010000 		.4byte	.LASF38
 1394 0232 08       		.byte	0x8
 1395 0233 3A       		.byte	0x3a
 1396 0234 46010000 		.4byte	0x146
 1397 0238 04       		.byte	0x4
 1398 0239 00       		.byte	0
 1399 023a 0C       		.uleb128 0xc
 1400 023b 04       		.byte	0x4
 1401 023c 93010000 		.4byte	0x193
 1402 0240 03       		.uleb128 0x3
 1403 0241 B4020000 		.4byte	.LASF39
 1404 0245 08       		.byte	0x8
 1405 0246 3C       		.byte	0x3c
 1406 0247 19020000 		.4byte	0x219
 1407 024b 0D       		.uleb128 0xd
 1408 024c 4401     		.2byte	0x144
 1409 024e 08       		.byte	0x8
 1410 024f 3F       		.byte	0x3f
 1411 0250 9E020000 		.4byte	0x29e
 1412 0254 09       		.uleb128 0x9
 1413 0255 F6030000 		.4byte	.LASF40
 1414 0259 08       		.byte	0x8
 1415 025a 42       		.byte	0x42
 1416 025b 83010000 		.4byte	0x183
 1417 025f 00       		.byte	0
 1418 0260 09       		.uleb128 0x9
 1419 0261 54000000 		.4byte	.LASF41
 1420 0265 08       		.byte	0x8
 1421 0266 44       		.byte	0x44
 1422 0267 9E020000 		.4byte	0x29e
 1423 026b 14       		.byte	0x14
 1424 026c 09       		.uleb128 0x9
 1425 026d 34010000 		.4byte	.LASF42
 1426 0271 08       		.byte	0x8
 1427 0272 45       		.byte	0x45
 1428 0273 68000000 		.4byte	0x68
 1429 0277 78       		.byte	0x78
 1430 0278 09       		.uleb128 0x9
 1431 0279 60010000 		.4byte	.LASF43
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 43


 1432 027d 08       		.byte	0x8
 1433 027e 46       		.byte	0x46
 1434 027f AE020000 		.4byte	0x2ae
 1435 0283 7C       		.byte	0x7c
 1436 0284 09       		.uleb128 0x9
 1437 0285 6E030000 		.4byte	.LASF44
 1438 0289 08       		.byte	0x8
 1439 028a 47       		.byte	0x47
 1440 028b 9E020000 		.4byte	0x29e
 1441 028f AE       		.byte	0xae
 1442 0290 0E       		.uleb128 0xe
 1443 0291 54010000 		.4byte	.LASF45
 1444 0295 08       		.byte	0x8
 1445 0296 48       		.byte	0x48
 1446 0297 AE020000 		.4byte	0x2ae
 1447 029b 1201     		.2byte	0x112
 1448 029d 00       		.byte	0
 1449 029e 0A       		.uleb128 0xa
 1450 029f B3000000 		.4byte	0xb3
 1451 02a3 AE020000 		.4byte	0x2ae
 1452 02a7 0B       		.uleb128 0xb
 1453 02a8 3F010000 		.4byte	0x13f
 1454 02ac 63       		.byte	0x63
 1455 02ad 00       		.byte	0
 1456 02ae 0A       		.uleb128 0xa
 1457 02af B3000000 		.4byte	0xb3
 1458 02b3 BE020000 		.4byte	0x2be
 1459 02b7 0B       		.uleb128 0xb
 1460 02b8 3F010000 		.4byte	0x13f
 1461 02bc 31       		.byte	0x31
 1462 02bd 00       		.byte	0
 1463 02be 03       		.uleb128 0x3
 1464 02bf 32000000 		.4byte	.LASF46
 1465 02c3 08       		.byte	0x8
 1466 02c4 4B       		.byte	0x4b
 1467 02c5 4B020000 		.4byte	0x24b
 1468 02c9 0F       		.uleb128 0xf
 1469 02ca 95030000 		.4byte	.LASF47
 1470 02ce 01       		.byte	0x1
 1471 02cf 36       		.byte	0x36
 1472 02d0 00000000 		.4byte	.LFB64
 1473 02d4 0E000000 		.4byte	.LFE64-.LFB64
 1474 02d8 01       		.uleb128 0x1
 1475 02d9 9C       		.byte	0x9c
 1476 02da 0F       		.uleb128 0xf
 1477 02db 57030000 		.4byte	.LASF48
 1478 02df 01       		.byte	0x1
 1479 02e0 51       		.byte	0x51
 1480 02e1 00000000 		.4byte	.LFB65
 1481 02e5 0E000000 		.4byte	.LFE65-.LFB65
 1482 02e9 01       		.uleb128 0x1
 1483 02ea 9C       		.byte	0x9c
 1484 02eb 0F       		.uleb128 0xf
 1485 02ec 2C030000 		.4byte	.LASF49
 1486 02f0 01       		.byte	0x1
 1487 02f1 6C       		.byte	0x6c
 1488 02f2 00000000 		.4byte	.LFB66
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 44


 1489 02f6 0E000000 		.4byte	.LFE66-.LFB66
 1490 02fa 01       		.uleb128 0x1
 1491 02fb 9C       		.byte	0x9c
 1492 02fc 0F       		.uleb128 0xf
 1493 02fd D1010000 		.4byte	.LASF50
 1494 0301 01       		.byte	0x1
 1495 0302 87       		.byte	0x87
 1496 0303 00000000 		.4byte	.LFB67
 1497 0307 0E000000 		.4byte	.LFE67-.LFB67
 1498 030b 01       		.uleb128 0x1
 1499 030c 9C       		.byte	0x9c
 1500 030d 0F       		.uleb128 0xf
 1501 030e EA000000 		.4byte	.LASF51
 1502 0312 01       		.byte	0x1
 1503 0313 A2       		.byte	0xa2
 1504 0314 00000000 		.4byte	.LFB68
 1505 0318 0E000000 		.4byte	.LFE68-.LFB68
 1506 031c 01       		.uleb128 0x1
 1507 031d 9C       		.byte	0x9c
 1508 031e 0F       		.uleb128 0xf
 1509 031f B6010000 		.4byte	.LASF52
 1510 0323 01       		.byte	0x1
 1511 0324 BD       		.byte	0xbd
 1512 0325 00000000 		.4byte	.LFB69
 1513 0329 0E000000 		.4byte	.LFE69-.LFB69
 1514 032d 01       		.uleb128 0x1
 1515 032e 9C       		.byte	0x9c
 1516 032f 0F       		.uleb128 0xf
 1517 0330 53020000 		.4byte	.LASF53
 1518 0334 01       		.byte	0x1
 1519 0335 D8       		.byte	0xd8
 1520 0336 00000000 		.4byte	.LFB70
 1521 033a 0E000000 		.4byte	.LFE70-.LFB70
 1522 033e 01       		.uleb128 0x1
 1523 033f 9C       		.byte	0x9c
 1524 0340 10       		.uleb128 0x10
 1525 0341 AC020000 		.4byte	.LASF75
 1526 0345 01       		.byte	0x1
 1527 0346 0B01     		.2byte	0x10b
 1528 0348 00000000 		.4byte	.LFB71
 1529 034c 18060000 		.4byte	.LFE71-.LFB71
 1530 0350 01       		.uleb128 0x1
 1531 0351 9C       		.byte	0x9c
 1532 0352 66030000 		.4byte	0x366
 1533 0356 11       		.uleb128 0x11
 1534 0357 16030000 		.4byte	.LASF76
 1535 035b 01       		.byte	0x1
 1536 035c 0D01     		.2byte	0x10d
 1537 035e 81000000 		.4byte	0x81
 1538 0362 02       		.uleb128 0x2
 1539 0363 91       		.byte	0x91
 1540 0364 77       		.sleb128 -9
 1541 0365 00       		.byte	0
 1542 0366 12       		.uleb128 0x12
 1543 0367 26020000 		.4byte	.LASF54
 1544 036b 05       		.byte	0x5
 1545 036c 2D01     		.2byte	0x12d
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 45


 1546 036e 28010000 		.4byte	0x128
 1547 0372 12       		.uleb128 0x12
 1548 0373 7F020000 		.4byte	.LASF55
 1549 0377 05       		.byte	0x5
 1550 0378 2E01     		.2byte	0x12e
 1551 037a 28010000 		.4byte	0x128
 1552 037e 12       		.uleb128 0x12
 1553 037f 09000000 		.4byte	.LASF56
 1554 0383 05       		.byte	0x5
 1555 0384 3901     		.2byte	0x139
 1556 0386 BA000000 		.4byte	0xba
 1557 038a 12       		.uleb128 0x12
 1558 038b FE030000 		.4byte	.LASF57
 1559 038f 05       		.byte	0x5
 1560 0390 3A01     		.2byte	0x13a
 1561 0392 BA000000 		.4byte	0xba
 1562 0396 12       		.uleb128 0x12
 1563 0397 2C040000 		.4byte	.LASF58
 1564 039b 05       		.byte	0x5
 1565 039c 3B01     		.2byte	0x13b
 1566 039e BA000000 		.4byte	0xba
 1567 03a2 12       		.uleb128 0x12
 1568 03a3 B8030000 		.4byte	.LASF59
 1569 03a7 05       		.byte	0x5
 1570 03a8 3C01     		.2byte	0x13c
 1571 03aa BA000000 		.4byte	0xba
 1572 03ae 0A       		.uleb128 0xa
 1573 03af BE030000 		.4byte	0x3be
 1574 03b3 BE030000 		.4byte	0x3be
 1575 03b7 0B       		.uleb128 0xb
 1576 03b8 3F010000 		.4byte	0x13f
 1577 03bc 0B       		.byte	0xb
 1578 03bd 00       		.byte	0
 1579 03be 13       		.uleb128 0x13
 1580 03bf 81000000 		.4byte	0x81
 1581 03c3 12       		.uleb128 0x12
 1582 03c4 21000000 		.4byte	.LASF60
 1583 03c8 05       		.byte	0x5
 1584 03c9 3E01     		.2byte	0x13e
 1585 03cb CF030000 		.4byte	0x3cf
 1586 03cf 13       		.uleb128 0x13
 1587 03d0 AE030000 		.4byte	0x3ae
 1588 03d4 12       		.uleb128 0x12
 1589 03d5 11040000 		.4byte	.LASF61
 1590 03d9 09       		.byte	0x9
 1591 03da 1207     		.2byte	0x712
 1592 03dc E0030000 		.4byte	0x3e0
 1593 03e0 06       		.uleb128 0x6
 1594 03e1 76000000 		.4byte	0x76
 1595 03e5 14       		.uleb128 0x14
 1596 03e6 3B020000 		.4byte	.LASF62
 1597 03ea 06       		.byte	0x6
 1598 03eb 15       		.byte	0x15
 1599 03ec 81000000 		.4byte	0x81
 1600 03f0 05       		.uleb128 0x5
 1601 03f1 03       		.byte	0x3
 1602 03f2 00000000 		.4byte	modem_state
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 46


 1603 03f6 14       		.uleb128 0x14
 1604 03f7 0F020000 		.4byte	.LASF63
 1605 03fb 06       		.byte	0x6
 1606 03fc 45       		.byte	0x45
 1607 03fd 99000000 		.4byte	0x99
 1608 0401 05       		.uleb128 0x5
 1609 0402 03       		.byte	0x3
 1610 0403 00000000 		.4byte	modem_start_time_stamp
 1611 0407 14       		.uleb128 0x14
 1612 0408 AB010000 		.4byte	.LASF37
 1613 040c 06       		.byte	0x6
 1614 040d 46       		.byte	0x46
 1615 040e 93010000 		.4byte	0x193
 1616 0412 05       		.uleb128 0x5
 1617 0413 03       		.byte	0x3
 1618 0414 00000000 		.4byte	modem_info
 1619 0418 14       		.uleb128 0x14
 1620 0419 AC030000 		.4byte	.LASF64
 1621 041d 06       		.byte	0x6
 1622 041e 47       		.byte	0x47
 1623 041f D6010000 		.4byte	0x1d6
 1624 0423 05       		.uleb128 0x5
 1625 0424 03       		.byte	0x3
 1626 0425 00000000 		.4byte	modem_stats
 1627 0429 14       		.uleb128 0x14
 1628 042a 3C010000 		.4byte	.LASF65
 1629 042e 07       		.byte	0x7
 1630 042f 1D       		.byte	0x1d
 1631 0430 8D000000 		.4byte	0x8d
 1632 0434 05       		.uleb128 0x5
 1633 0435 03       		.byte	0x3
 1634 0436 00000000 		.4byte	dataPointsInStack
 1635 043a 0A       		.uleb128 0xa
 1636 043b 0E020000 		.4byte	0x20e
 1637 043f 4A040000 		.4byte	0x44a
 1638 0443 0B       		.uleb128 0xb
 1639 0444 3F010000 		.4byte	0x13f
 1640 0448 63       		.byte	0x63
 1641 0449 00       		.byte	0
 1642 044a 14       		.uleb128 0x14
 1643 044b FF000000 		.4byte	.LASF66
 1644 044f 07       		.byte	0x7
 1645 0450 1E       		.byte	0x1e
 1646 0451 3A040000 		.4byte	0x43a
 1647 0455 05       		.uleb128 0x5
 1648 0456 03       		.byte	0x3
 1649 0457 00000000 		.4byte	data
 1650 045b 0A       		.uleb128 0xa
 1651 045c B3000000 		.4byte	0xb3
 1652 0460 6C040000 		.4byte	0x46c
 1653 0464 15       		.uleb128 0x15
 1654 0465 3F010000 		.4byte	0x13f
 1655 0469 E703     		.2byte	0x3e7
 1656 046b 00       		.byte	0
 1657 046c 14       		.uleb128 0x14
 1658 046d 86040000 		.4byte	.LASF67
 1659 0471 08       		.byte	0x8
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 47


 1660 0472 16       		.byte	0x16
 1661 0473 5B040000 		.4byte	0x45b
 1662 0477 05       		.uleb128 0x5
 1663 0478 03       		.byte	0x3
 1664 0479 00000000 		.4byte	http_request
 1665 047d 0A       		.uleb128 0xa
 1666 047e B3000000 		.4byte	0xb3
 1667 0482 8E040000 		.4byte	0x48e
 1668 0486 15       		.uleb128 0x15
 1669 0487 3F010000 		.4byte	0x13f
 1670 048b 571B     		.2byte	0x1b57
 1671 048d 00       		.byte	0
 1672 048e 14       		.uleb128 0x14
 1673 048f E5010000 		.4byte	.LASF68
 1674 0493 08       		.byte	0x8
 1675 0494 17       		.byte	0x17
 1676 0495 7D040000 		.4byte	0x47d
 1677 0499 05       		.uleb128 0x5
 1678 049a 03       		.byte	0x3
 1679 049b 00000000 		.4byte	http_body
 1680 049f 0A       		.uleb128 0xa
 1681 04a0 B3000000 		.4byte	0xb3
 1682 04a4 AF040000 		.4byte	0x4af
 1683 04a8 0B       		.uleb128 0xb
 1684 04a9 3F010000 		.4byte	0x13f
 1685 04ad C7       		.byte	0xc7
 1686 04ae 00       		.byte	0
 1687 04af 14       		.uleb128 0x14
 1688 04b0 4C030000 		.4byte	.LASF69
 1689 04b4 08       		.byte	0x8
 1690 04b5 18       		.byte	0x18
 1691 04b6 9F040000 		.4byte	0x49f
 1692 04ba 05       		.uleb128 0x5
 1693 04bb 03       		.byte	0x3
 1694 04bc 00000000 		.4byte	http_route
 1695 04c0 14       		.uleb128 0x14
 1696 04c1 EA020000 		.4byte	.LASF70
 1697 04c5 08       		.byte	0x8
 1698 04c6 3D       		.byte	0x3d
 1699 04c7 40020000 		.4byte	0x240
 1700 04cb 05       		.uleb128 0x5
 1701 04cc 03       		.byte	0x3
 1702 04cd 00000000 		.4byte	system_info
 1703 04d1 14       		.uleb128 0x14
 1704 04d2 17010000 		.4byte	.LASF71
 1705 04d6 08       		.byte	0x8
 1706 04d7 4C       		.byte	0x4c
 1707 04d8 BE020000 		.4byte	0x2be
 1708 04dc 05       		.uleb128 0x5
 1709 04dd 03       		.byte	0x3
 1710 04de 00000000 		.4byte	system_settings
 1711 04e2 00       		.byte	0
 1712              		.section	.debug_abbrev,"",%progbits
 1713              	.Ldebug_abbrev0:
 1714 0000 01       		.uleb128 0x1
 1715 0001 11       		.uleb128 0x11
 1716 0002 01       		.byte	0x1
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 48


 1717 0003 25       		.uleb128 0x25
 1718 0004 0E       		.uleb128 0xe
 1719 0005 13       		.uleb128 0x13
 1720 0006 0B       		.uleb128 0xb
 1721 0007 03       		.uleb128 0x3
 1722 0008 0E       		.uleb128 0xe
 1723 0009 1B       		.uleb128 0x1b
 1724 000a 0E       		.uleb128 0xe
 1725 000b 55       		.uleb128 0x55
 1726 000c 17       		.uleb128 0x17
 1727 000d 11       		.uleb128 0x11
 1728 000e 01       		.uleb128 0x1
 1729 000f 10       		.uleb128 0x10
 1730 0010 17       		.uleb128 0x17
 1731 0011 00       		.byte	0
 1732 0012 00       		.byte	0
 1733 0013 02       		.uleb128 0x2
 1734 0014 24       		.uleb128 0x24
 1735 0015 00       		.byte	0
 1736 0016 0B       		.uleb128 0xb
 1737 0017 0B       		.uleb128 0xb
 1738 0018 3E       		.uleb128 0x3e
 1739 0019 0B       		.uleb128 0xb
 1740 001a 03       		.uleb128 0x3
 1741 001b 0E       		.uleb128 0xe
 1742 001c 00       		.byte	0
 1743 001d 00       		.byte	0
 1744 001e 03       		.uleb128 0x3
 1745 001f 16       		.uleb128 0x16
 1746 0020 00       		.byte	0
 1747 0021 03       		.uleb128 0x3
 1748 0022 0E       		.uleb128 0xe
 1749 0023 3A       		.uleb128 0x3a
 1750 0024 0B       		.uleb128 0xb
 1751 0025 3B       		.uleb128 0x3b
 1752 0026 0B       		.uleb128 0xb
 1753 0027 49       		.uleb128 0x49
 1754 0028 13       		.uleb128 0x13
 1755 0029 00       		.byte	0
 1756 002a 00       		.byte	0
 1757 002b 04       		.uleb128 0x4
 1758 002c 24       		.uleb128 0x24
 1759 002d 00       		.byte	0
 1760 002e 0B       		.uleb128 0xb
 1761 002f 0B       		.uleb128 0xb
 1762 0030 3E       		.uleb128 0x3e
 1763 0031 0B       		.uleb128 0xb
 1764 0032 03       		.uleb128 0x3
 1765 0033 08       		.uleb128 0x8
 1766 0034 00       		.byte	0
 1767 0035 00       		.byte	0
 1768 0036 05       		.uleb128 0x5
 1769 0037 16       		.uleb128 0x16
 1770 0038 00       		.byte	0
 1771 0039 03       		.uleb128 0x3
 1772 003a 0E       		.uleb128 0xe
 1773 003b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 49


 1774 003c 0B       		.uleb128 0xb
 1775 003d 3B       		.uleb128 0x3b
 1776 003e 05       		.uleb128 0x5
 1777 003f 49       		.uleb128 0x49
 1778 0040 13       		.uleb128 0x13
 1779 0041 00       		.byte	0
 1780 0042 00       		.byte	0
 1781 0043 06       		.uleb128 0x6
 1782 0044 35       		.uleb128 0x35
 1783 0045 00       		.byte	0
 1784 0046 49       		.uleb128 0x49
 1785 0047 13       		.uleb128 0x13
 1786 0048 00       		.byte	0
 1787 0049 00       		.byte	0
 1788 004a 07       		.uleb128 0x7
 1789 004b 13       		.uleb128 0x13
 1790 004c 01       		.byte	0x1
 1791 004d 0B       		.uleb128 0xb
 1792 004e 0B       		.uleb128 0xb
 1793 004f 3A       		.uleb128 0x3a
 1794 0050 0B       		.uleb128 0xb
 1795 0051 3B       		.uleb128 0x3b
 1796 0052 0B       		.uleb128 0xb
 1797 0053 01       		.uleb128 0x1
 1798 0054 13       		.uleb128 0x13
 1799 0055 00       		.byte	0
 1800 0056 00       		.byte	0
 1801 0057 08       		.uleb128 0x8
 1802 0058 0D       		.uleb128 0xd
 1803 0059 00       		.byte	0
 1804 005a 03       		.uleb128 0x3
 1805 005b 08       		.uleb128 0x8
 1806 005c 3A       		.uleb128 0x3a
 1807 005d 0B       		.uleb128 0xb
 1808 005e 3B       		.uleb128 0x3b
 1809 005f 0B       		.uleb128 0xb
 1810 0060 49       		.uleb128 0x49
 1811 0061 13       		.uleb128 0x13
 1812 0062 38       		.uleb128 0x38
 1813 0063 0B       		.uleb128 0xb
 1814 0064 00       		.byte	0
 1815 0065 00       		.byte	0
 1816 0066 09       		.uleb128 0x9
 1817 0067 0D       		.uleb128 0xd
 1818 0068 00       		.byte	0
 1819 0069 03       		.uleb128 0x3
 1820 006a 0E       		.uleb128 0xe
 1821 006b 3A       		.uleb128 0x3a
 1822 006c 0B       		.uleb128 0xb
 1823 006d 3B       		.uleb128 0x3b
 1824 006e 0B       		.uleb128 0xb
 1825 006f 49       		.uleb128 0x49
 1826 0070 13       		.uleb128 0x13
 1827 0071 38       		.uleb128 0x38
 1828 0072 0B       		.uleb128 0xb
 1829 0073 00       		.byte	0
 1830 0074 00       		.byte	0
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 50


 1831 0075 0A       		.uleb128 0xa
 1832 0076 01       		.uleb128 0x1
 1833 0077 01       		.byte	0x1
 1834 0078 49       		.uleb128 0x49
 1835 0079 13       		.uleb128 0x13
 1836 007a 01       		.uleb128 0x1
 1837 007b 13       		.uleb128 0x13
 1838 007c 00       		.byte	0
 1839 007d 00       		.byte	0
 1840 007e 0B       		.uleb128 0xb
 1841 007f 21       		.uleb128 0x21
 1842 0080 00       		.byte	0
 1843 0081 49       		.uleb128 0x49
 1844 0082 13       		.uleb128 0x13
 1845 0083 2F       		.uleb128 0x2f
 1846 0084 0B       		.uleb128 0xb
 1847 0085 00       		.byte	0
 1848 0086 00       		.byte	0
 1849 0087 0C       		.uleb128 0xc
 1850 0088 0F       		.uleb128 0xf
 1851 0089 00       		.byte	0
 1852 008a 0B       		.uleb128 0xb
 1853 008b 0B       		.uleb128 0xb
 1854 008c 49       		.uleb128 0x49
 1855 008d 13       		.uleb128 0x13
 1856 008e 00       		.byte	0
 1857 008f 00       		.byte	0
 1858 0090 0D       		.uleb128 0xd
 1859 0091 13       		.uleb128 0x13
 1860 0092 01       		.byte	0x1
 1861 0093 0B       		.uleb128 0xb
 1862 0094 05       		.uleb128 0x5
 1863 0095 3A       		.uleb128 0x3a
 1864 0096 0B       		.uleb128 0xb
 1865 0097 3B       		.uleb128 0x3b
 1866 0098 0B       		.uleb128 0xb
 1867 0099 01       		.uleb128 0x1
 1868 009a 13       		.uleb128 0x13
 1869 009b 00       		.byte	0
 1870 009c 00       		.byte	0
 1871 009d 0E       		.uleb128 0xe
 1872 009e 0D       		.uleb128 0xd
 1873 009f 00       		.byte	0
 1874 00a0 03       		.uleb128 0x3
 1875 00a1 0E       		.uleb128 0xe
 1876 00a2 3A       		.uleb128 0x3a
 1877 00a3 0B       		.uleb128 0xb
 1878 00a4 3B       		.uleb128 0x3b
 1879 00a5 0B       		.uleb128 0xb
 1880 00a6 49       		.uleb128 0x49
 1881 00a7 13       		.uleb128 0x13
 1882 00a8 38       		.uleb128 0x38
 1883 00a9 05       		.uleb128 0x5
 1884 00aa 00       		.byte	0
 1885 00ab 00       		.byte	0
 1886 00ac 0F       		.uleb128 0xf
 1887 00ad 2E       		.uleb128 0x2e
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 51


 1888 00ae 00       		.byte	0
 1889 00af 03       		.uleb128 0x3
 1890 00b0 0E       		.uleb128 0xe
 1891 00b1 3A       		.uleb128 0x3a
 1892 00b2 0B       		.uleb128 0xb
 1893 00b3 3B       		.uleb128 0x3b
 1894 00b4 0B       		.uleb128 0xb
 1895 00b5 27       		.uleb128 0x27
 1896 00b6 19       		.uleb128 0x19
 1897 00b7 11       		.uleb128 0x11
 1898 00b8 01       		.uleb128 0x1
 1899 00b9 12       		.uleb128 0x12
 1900 00ba 06       		.uleb128 0x6
 1901 00bb 40       		.uleb128 0x40
 1902 00bc 18       		.uleb128 0x18
 1903 00bd 9642     		.uleb128 0x2116
 1904 00bf 19       		.uleb128 0x19
 1905 00c0 00       		.byte	0
 1906 00c1 00       		.byte	0
 1907 00c2 10       		.uleb128 0x10
 1908 00c3 2E       		.uleb128 0x2e
 1909 00c4 01       		.byte	0x1
 1910 00c5 3F       		.uleb128 0x3f
 1911 00c6 19       		.uleb128 0x19
 1912 00c7 03       		.uleb128 0x3
 1913 00c8 0E       		.uleb128 0xe
 1914 00c9 3A       		.uleb128 0x3a
 1915 00ca 0B       		.uleb128 0xb
 1916 00cb 3B       		.uleb128 0x3b
 1917 00cc 05       		.uleb128 0x5
 1918 00cd 27       		.uleb128 0x27
 1919 00ce 19       		.uleb128 0x19
 1920 00cf 11       		.uleb128 0x11
 1921 00d0 01       		.uleb128 0x1
 1922 00d1 12       		.uleb128 0x12
 1923 00d2 06       		.uleb128 0x6
 1924 00d3 40       		.uleb128 0x40
 1925 00d4 18       		.uleb128 0x18
 1926 00d5 9642     		.uleb128 0x2116
 1927 00d7 19       		.uleb128 0x19
 1928 00d8 01       		.uleb128 0x1
 1929 00d9 13       		.uleb128 0x13
 1930 00da 00       		.byte	0
 1931 00db 00       		.byte	0
 1932 00dc 11       		.uleb128 0x11
 1933 00dd 34       		.uleb128 0x34
 1934 00de 00       		.byte	0
 1935 00df 03       		.uleb128 0x3
 1936 00e0 0E       		.uleb128 0xe
 1937 00e1 3A       		.uleb128 0x3a
 1938 00e2 0B       		.uleb128 0xb
 1939 00e3 3B       		.uleb128 0x3b
 1940 00e4 05       		.uleb128 0x5
 1941 00e5 49       		.uleb128 0x49
 1942 00e6 13       		.uleb128 0x13
 1943 00e7 02       		.uleb128 0x2
 1944 00e8 18       		.uleb128 0x18
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 52


 1945 00e9 00       		.byte	0
 1946 00ea 00       		.byte	0
 1947 00eb 12       		.uleb128 0x12
 1948 00ec 34       		.uleb128 0x34
 1949 00ed 00       		.byte	0
 1950 00ee 03       		.uleb128 0x3
 1951 00ef 0E       		.uleb128 0xe
 1952 00f0 3A       		.uleb128 0x3a
 1953 00f1 0B       		.uleb128 0xb
 1954 00f2 3B       		.uleb128 0x3b
 1955 00f3 05       		.uleb128 0x5
 1956 00f4 49       		.uleb128 0x49
 1957 00f5 13       		.uleb128 0x13
 1958 00f6 3F       		.uleb128 0x3f
 1959 00f7 19       		.uleb128 0x19
 1960 00f8 3C       		.uleb128 0x3c
 1961 00f9 19       		.uleb128 0x19
 1962 00fa 00       		.byte	0
 1963 00fb 00       		.byte	0
 1964 00fc 13       		.uleb128 0x13
 1965 00fd 26       		.uleb128 0x26
 1966 00fe 00       		.byte	0
 1967 00ff 49       		.uleb128 0x49
 1968 0100 13       		.uleb128 0x13
 1969 0101 00       		.byte	0
 1970 0102 00       		.byte	0
 1971 0103 14       		.uleb128 0x14
 1972 0104 34       		.uleb128 0x34
 1973 0105 00       		.byte	0
 1974 0106 03       		.uleb128 0x3
 1975 0107 0E       		.uleb128 0xe
 1976 0108 3A       		.uleb128 0x3a
 1977 0109 0B       		.uleb128 0xb
 1978 010a 3B       		.uleb128 0x3b
 1979 010b 0B       		.uleb128 0xb
 1980 010c 49       		.uleb128 0x49
 1981 010d 13       		.uleb128 0x13
 1982 010e 3F       		.uleb128 0x3f
 1983 010f 19       		.uleb128 0x19
 1984 0110 02       		.uleb128 0x2
 1985 0111 18       		.uleb128 0x18
 1986 0112 00       		.byte	0
 1987 0113 00       		.byte	0
 1988 0114 15       		.uleb128 0x15
 1989 0115 21       		.uleb128 0x21
 1990 0116 00       		.byte	0
 1991 0117 49       		.uleb128 0x49
 1992 0118 13       		.uleb128 0x13
 1993 0119 2F       		.uleb128 0x2f
 1994 011a 05       		.uleb128 0x5
 1995 011b 00       		.byte	0
 1996 011c 00       		.byte	0
 1997 011d 00       		.byte	0
 1998              		.section	.debug_aranges,"",%progbits
 1999 0000 54000000 		.4byte	0x54
 2000 0004 0200     		.2byte	0x2
 2001 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 53


 2002 000a 04       		.byte	0x4
 2003 000b 00       		.byte	0
 2004 000c 0000     		.2byte	0
 2005 000e 0000     		.2byte	0
 2006 0010 00000000 		.4byte	.LFB64
 2007 0014 0E000000 		.4byte	.LFE64-.LFB64
 2008 0018 00000000 		.4byte	.LFB65
 2009 001c 0E000000 		.4byte	.LFE65-.LFB65
 2010 0020 00000000 		.4byte	.LFB66
 2011 0024 0E000000 		.4byte	.LFE66-.LFB66
 2012 0028 00000000 		.4byte	.LFB67
 2013 002c 0E000000 		.4byte	.LFE67-.LFB67
 2014 0030 00000000 		.4byte	.LFB68
 2015 0034 0E000000 		.4byte	.LFE68-.LFB68
 2016 0038 00000000 		.4byte	.LFB69
 2017 003c 0E000000 		.4byte	.LFE69-.LFB69
 2018 0040 00000000 		.4byte	.LFB70
 2019 0044 0E000000 		.4byte	.LFE70-.LFB70
 2020 0048 00000000 		.4byte	.LFB71
 2021 004c 18060000 		.4byte	.LFE71-.LFB71
 2022 0050 00000000 		.4byte	0
 2023 0054 00000000 		.4byte	0
 2024              		.section	.debug_ranges,"",%progbits
 2025              	.Ldebug_ranges0:
 2026 0000 00000000 		.4byte	.LFB64
 2027 0004 0E000000 		.4byte	.LFE64
 2028 0008 00000000 		.4byte	.LFB65
 2029 000c 0E000000 		.4byte	.LFE65
 2030 0010 00000000 		.4byte	.LFB66
 2031 0014 0E000000 		.4byte	.LFE66
 2032 0018 00000000 		.4byte	.LFB67
 2033 001c 0E000000 		.4byte	.LFE67
 2034 0020 00000000 		.4byte	.LFB68
 2035 0024 0E000000 		.4byte	.LFE68
 2036 0028 00000000 		.4byte	.LFB69
 2037 002c 0E000000 		.4byte	.LFE69
 2038 0030 00000000 		.4byte	.LFB70
 2039 0034 0E000000 		.4byte	.LFE70
 2040 0038 00000000 		.4byte	.LFB71
 2041 003c 18060000 		.4byte	.LFE71
 2042 0040 00000000 		.4byte	0
 2043 0044 00000000 		.4byte	0
 2044              		.section	.debug_line,"",%progbits
 2045              	.Ldebug_line0:
 2046 0000 E2020000 		.section	.debug_str,"MS",%progbits,1
 2046      02008101 
 2046      00000201 
 2046      FB0E0D00 
 2046      01010101 
 2047              	.LASF27:
 2048 0000 6D6F6465 		.ascii	"model_id\000"
 2048      6C5F6964 
 2048      00
 2049              	.LASF56:
 2050 0009 5254435F 		.ascii	"RTC_alarmCfgMask\000"
 2050      616C6172 
 2050      6D436667 
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 54


 2050      4D61736B 
 2050      00
 2051              	.LASF26:
 2052 001a 73696D5F 		.ascii	"sim_id\000"
 2052      696400
 2053              	.LASF60:
 2054 0021 5254435F 		.ascii	"RTC_daysInMonths\000"
 2054      64617973 
 2054      496E4D6F 
 2054      6E746873 
 2054      00
 2055              	.LASF46:
 2056 0032 7379735F 		.ascii	"sys_settings_t\000"
 2056      73657474 
 2056      696E6773 
 2056      5F7400
 2057              	.LASF2:
 2058 0041 73686F72 		.ascii	"short int\000"
 2058      7420696E 
 2058      7400
 2059              	.LASF25:
 2060 004b 73697A65 		.ascii	"sizetype\000"
 2060      74797065 
 2060      00
 2061              	.LASF41:
 2062 0054 65705F68 		.ascii	"ep_host\000"
 2062      6F737400 
 2063              	.LASF72:
 2064 005c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2064      43313120 
 2064      352E342E 
 2064      31203230 
 2064      31363036 
 2065 008f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2065      20726576 
 2065      6973696F 
 2065      6E203233 
 2065      37373135 
 2066 00c2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2066      66756E63 
 2066      74696F6E 
 2066      2D736563 
 2066      74696F6E 
 2067              	.LASF51:
 2068 00ea 5254435F 		.ascii	"RTC_EveryWeekHandler\000"
 2068      45766572 
 2068      79576565 
 2068      6B48616E 
 2068      646C6572 
 2069              	.LASF66:
 2070 00ff 64617461 		.ascii	"data\000"
 2070      00
 2071              	.LASF17:
 2072 0104 486F7572 		.ascii	"Hour\000"
 2072      00
 2073              	.LASF38:
 2074 0109 63686970 		.ascii	"chip_uniqueId\000"
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 55


 2074      5F756E69 
 2074      71756549 
 2074      6400
 2075              	.LASF71:
 2076 0117 73797374 		.ascii	"system_settings\000"
 2076      656D5F73 
 2076      65747469 
 2076      6E677300 
 2077              	.LASF34:
 2078 0127 76616C75 		.ascii	"value\000"
 2078      6500
 2079              	.LASF12:
 2080 012d 75696E74 		.ascii	"uint16\000"
 2080      313600
 2081              	.LASF42:
 2082 0134 65705F70 		.ascii	"ep_port\000"
 2082      6F727400 
 2083              	.LASF65:
 2084 013c 64617461 		.ascii	"dataPointsInStack\000"
 2084      506F696E 
 2084      7473496E 
 2084      53746163 
 2084      6B00
 2085              	.LASF11:
 2086 014e 75696E74 		.ascii	"uint8\000"
 2086      3800
 2087              	.LASF45:
 2088 0154 65705F64 		.ascii	"ep_database\000"
 2088      61746162 
 2088      61736500 
 2089              	.LASF43:
 2090 0160 65705F75 		.ascii	"ep_user\000"
 2090      73657200 
 2091              	.LASF35:
 2092 0168 74696D65 		.ascii	"timeStamp\000"
 2092      5374616D 
 2092      7000
 2093              	.LASF14:
 2094 0172 666C6F61 		.ascii	"float\000"
 2094      7400
 2095              	.LASF18:
 2096 0178 4461794F 		.ascii	"DayOfWeek\000"
 2096      66576565 
 2096      6B00
 2097              	.LASF6:
 2098 0182 6C6F6E67 		.ascii	"long long int\000"
 2098      206C6F6E 
 2098      6720696E 
 2098      7400
 2099              	.LASF16:
 2100 0190 63686172 		.ascii	"char\000"
 2100      00
 2101              	.LASF29:
 2102 0195 6D6F6465 		.ascii	"modem_info_t\000"
 2102      6D5F696E 
 2102      666F5F74 
 2102      00
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 56


 2103              	.LASF4:
 2104 01a2 6C6F6E67 		.ascii	"long int\000"
 2104      20696E74 
 2104      00
 2105              	.LASF37:
 2106 01ab 6D6F6465 		.ascii	"modem_info\000"
 2106      6D5F696E 
 2106      666F00
 2107              	.LASF52:
 2108 01b6 5254435F 		.ascii	"RTC_EveryMonthHandler\000"
 2108      45766572 
 2108      794D6F6E 
 2108      74684861 
 2108      6E646C65 
 2109              	.LASF22:
 2110 01cc 59656172 		.ascii	"Year\000"
 2110      00
 2111              	.LASF50:
 2112 01d1 5254435F 		.ascii	"RTC_EveryDayHandler\000"
 2112      45766572 
 2112      79446179 
 2112      48616E64 
 2112      6C657200 
 2113              	.LASF68:
 2114 01e5 68747470 		.ascii	"http_body\000"
 2114      5F626F64 
 2114      7900
 2115              	.LASF21:
 2116 01ef 4D6F6E74 		.ascii	"Month\000"
 2116      6800
 2117              	.LASF24:
 2118 01f5 6C6F6E67 		.ascii	"long double\000"
 2118      20646F75 
 2118      626C6500 
 2119              	.LASF1:
 2120 0201 756E7369 		.ascii	"unsigned char\000"
 2120      676E6564 
 2120      20636861 
 2120      7200
 2121              	.LASF63:
 2122 020f 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2122      6D5F7374 
 2122      6172745F 
 2122      74696D65 
 2122      5F737461 
 2123              	.LASF54:
 2124 0226 5254435F 		.ascii	"RTC_alarmCfgTimeDate\000"
 2124      616C6172 
 2124      6D436667 
 2124      54696D65 
 2124      44617465 
 2125              	.LASF62:
 2126 023b 6D6F6465 		.ascii	"modem_state\000"
 2126      6D5F7374 
 2126      61746500 
 2127              	.LASF0:
 2128 0247 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 57


 2128      65642063 
 2128      68617200 
 2129              	.LASF53:
 2130 0253 5254435F 		.ascii	"RTC_EveryYearHandler\000"
 2130      45766572 
 2130      79596561 
 2130      7248616E 
 2130      646C6572 
 2131              	.LASF7:
 2132 0268 6C6F6E67 		.ascii	"long long unsigned int\000"
 2132      206C6F6E 
 2132      6720756E 
 2132      7369676E 
 2132      65642069 
 2133              	.LASF55:
 2134 027f 5254435F 		.ascii	"RTC_currentTimeDate\000"
 2134      63757272 
 2134      656E7454 
 2134      696D6544 
 2134      61746500 
 2135              	.LASF8:
 2136 0293 756E7369 		.ascii	"unsigned int\000"
 2136      676E6564 
 2136      20696E74 
 2136      00
 2137              	.LASF36:
 2138 02a0 6B65795F 		.ascii	"key_value_t\000"
 2138      76616C75 
 2138      655F7400 
 2139              	.LASF75:
 2140 02ac 5254435F 		.ascii	"RTC_ISR\000"
 2140      49535200 
 2141              	.LASF39:
 2142 02b4 7379735F 		.ascii	"sys_info_t\000"
 2142      696E666F 
 2142      5F7400
 2143              	.LASF3:
 2144 02bf 73686F72 		.ascii	"short unsigned int\000"
 2144      7420756E 
 2144      7369676E 
 2144      65642069 
 2144      6E7400
 2145              	.LASF31:
 2146 02d2 74696D65 		.ascii	"time_to_network_connect\000"
 2146      5F746F5F 
 2146      6E657477 
 2146      6F726B5F 
 2146      636F6E6E 
 2147              	.LASF70:
 2148 02ea 73797374 		.ascii	"system_info\000"
 2148      656D5F69 
 2148      6E666F00 
 2149              	.LASF32:
 2150 02f6 74696D65 		.ascii	"time_to_acquire_ip\000"
 2150      5F746F5F 
 2150      61637175 
 2150      6972655F 
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 58


 2150      697000
 2151              	.LASF28:
 2152 0309 696D6569 		.ascii	"imei\000"
 2152      00
 2153              	.LASF10:
 2154 030e 696E7433 		.ascii	"int32_t\000"
 2154      325F7400 
 2155              	.LASF76:
 2156 0316 5254435F 		.ascii	"RTC_tmp\000"
 2156      746D7000 
 2157              	.LASF33:
 2158 031e 6D6F6465 		.ascii	"modem_stats_t\000"
 2158      6D5F7374 
 2158      6174735F 
 2158      7400
 2159              	.LASF49:
 2160 032c 5254435F 		.ascii	"RTC_EveryHourHandler\000"
 2160      45766572 
 2160      79486F75 
 2160      7248616E 
 2160      646C6572 
 2161              	.LASF19:
 2162 0341 4461794F 		.ascii	"DayOfMonth\000"
 2162      664D6F6E 
 2162      746800
 2163              	.LASF69:
 2164 034c 68747470 		.ascii	"http_route\000"
 2164      5F726F75 
 2164      746500
 2165              	.LASF48:
 2166 0357 5254435F 		.ascii	"RTC_EveryMinuteHandler\000"
 2166      45766572 
 2166      794D696E 
 2166      75746548 
 2166      616E646C 
 2167              	.LASF44:
 2168 036e 65705F70 		.ascii	"ep_pswd\000"
 2168      73776400 
 2169              	.LASF5:
 2170 0376 6C6F6E67 		.ascii	"long unsigned int\000"
 2170      20756E73 
 2170      69676E65 
 2170      6420696E 
 2170      7400
 2171              	.LASF13:
 2172 0388 696E7433 		.ascii	"int32\000"
 2172      3200
 2173              	.LASF15:
 2174 038e 646F7562 		.ascii	"double\000"
 2174      6C6500
 2175              	.LASF47:
 2176 0395 5254435F 		.ascii	"RTC_EverySecondHandler\000"
 2176      45766572 
 2176      79536563 
 2176      6F6E6448 
 2176      616E646C 
 2177              	.LASF64:
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 59


 2178 03ac 6D6F6465 		.ascii	"modem_stats\000"
 2178      6D5F7374 
 2178      61747300 
 2179              	.LASF59:
 2180 03b8 5254435F 		.ascii	"RTC_statusDateTime\000"
 2180      73746174 
 2180      75734461 
 2180      74655469 
 2180      6D6500
 2181              	.LASF9:
 2182 03cb 5F5F696E 		.ascii	"__int32_t\000"
 2182      7433325F 
 2182      7400
 2183              	.LASF73:
 2184 03d5 47656E65 		.ascii	"Generated_Source\\PSoC5\\RTC_INT.c\000"
 2184      72617465 
 2184      645F536F 
 2184      75726365 
 2184      5C50536F 
 2185              	.LASF40:
 2186 03f6 6E6F6465 		.ascii	"node_id\000"
 2186      5F696400 
 2187              	.LASF57:
 2188 03fe 5254435F 		.ascii	"RTC_alarmCurStatus\000"
 2188      616C6172 
 2188      6D437572 
 2188      53746174 
 2188      757300
 2189              	.LASF61:
 2190 0411 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2190      52784275 
 2190      66666572 
 2190      00
 2191              	.LASF23:
 2192 041e 5254435F 		.ascii	"RTC_TIME_DATE\000"
 2192      54494D45 
 2192      5F444154 
 2192      4500
 2193              	.LASF58:
 2194 042c 5254435F 		.ascii	"RTC_intervalCfgMask\000"
 2194      696E7465 
 2194      7276616C 
 2194      4366674D 
 2194      61736B00 
 2195              	.LASF74:
 2196 0440 433A5C55 		.ascii	"C:\\Users\\hyfi_admin\\Documents\\GitHub\\notoriOS\\"
 2196      73657273 
 2196      5C687966 
 2196      695F6164 
 2196      6D696E5C 
 2197 046e 6E6F746F 		.ascii	"notoriOS\\notoriOS.cydsn\000"
 2197      72694F53 
 2197      5C6E6F74 
 2197      6F72694F 
 2197      532E6379 
 2198              	.LASF67:
 2199 0486 68747470 		.ascii	"http_request\000"
ARM GAS  C:\Users\HYFI_A~1\AppData\Local\Temp\cckwhaI8.s 			page 60


 2199      5F726571 
 2199      75657374 
 2199      00
 2200              	.LASF30:
 2201 0493 72737369 		.ascii	"rssi\000"
 2201      00
 2202              	.LASF20:
 2203 0498 4461794F 		.ascii	"DayOfYear\000"
 2203      66596561 
 2203      7200
 2204              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
