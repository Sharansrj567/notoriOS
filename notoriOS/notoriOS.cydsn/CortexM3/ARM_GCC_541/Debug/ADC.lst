ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ADC_convDone
  20              		.bss
  21              		.type	ADC_convDone, %object
  22              		.size	ADC_convDone, 1
  23              	ADC_convDone:
  24 0000 00       		.space	1
  25              		.global	ADC_stopConversion
  26              		.type	ADC_stopConversion, %object
  27              		.size	ADC_stopConversion, 1
  28              	ADC_stopConversion:
  29 0001 00       		.space	1
  30              		.global	ADC_initVar
  31              		.type	ADC_initVar, %object
  32              		.size	ADC_initVar, 1
  33              	ADC_initVar:
  34 0002 00       		.space	1
  35              		.global	ADC_started
  36              		.type	ADC_started, %object
  37              		.size	ADC_started, 1
  38              	ADC_started:
  39 0003 00       		.space	1
  40              		.global	ADC_Config
  41              		.data
  42              		.type	ADC_Config, %object
  43              		.size	ADC_Config, 1
  44              	ADC_Config:
  45 0000 01       		.byte	1
  46              		.comm	ADC_Offset,4,4
  47              		.comm	ADC_CountsPerVolt,4,4
  48              		.bss
  49              		.align	2
  50              	ADC_gcor:
  51 0004 00000000 		.space	16
  51      00000000 
  51      00000000 
  51      00000000 
  52              		.section	.text.ADC_Init,"ax",%progbits
  53              		.align	2
  54              		.global	ADC_Init
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 2


  55              		.thumb
  56              		.thumb_func
  57              		.type	ADC_Init, %function
  58              	ADC_Init:
  59              	.LFB0:
  60              		.file 1 "Generated_Source\\PSoC5\\ADC.c"
   1:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC5/ADC.c **** * Version 3.20
   4:Generated_Source\PSoC5/ADC.c **** *
   5:Generated_Source\PSoC5/ADC.c **** * Description:
   6:Generated_Source\PSoC5/ADC.c **** *  This file provides the source code to the API for the Delta-Sigma ADC
   7:Generated_Source\PSoC5/ADC.c **** *  Component.
   8:Generated_Source\PSoC5/ADC.c **** *
   9:Generated_Source\PSoC5/ADC.c **** * Note:
  10:Generated_Source\PSoC5/ADC.c **** *
  11:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC5/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/ADC.c **** 
  18:Generated_Source\PSoC5/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC5/ADC.c **** 
  20:Generated_Source\PSoC5/ADC.c **** #if(ADC_DEFAULT_INTERNAL_CLK)
  21:Generated_Source\PSoC5/ADC.c ****     #include "ADC_theACLK.h"
  22:Generated_Source\PSoC5/ADC.c **** #endif /* ADC_DEFAULT_INTERNAL_CLK */
  23:Generated_Source\PSoC5/ADC.c **** 
  24:Generated_Source\PSoC5/ADC.c **** #include "ADC_Ext_CP_Clk.h"
  25:Generated_Source\PSoC5/ADC.c **** 
  26:Generated_Source\PSoC5/ADC.c **** #if(ADC_DEFAULT_INPUT_MODE)
  27:Generated_Source\PSoC5/ADC.c ****     #include "ADC_AMux.h"
  28:Generated_Source\PSoC5/ADC.c **** #endif /* ADC_DEFAULT_INPUT_MODE */
  29:Generated_Source\PSoC5/ADC.c **** 
  30:Generated_Source\PSoC5/ADC.c **** 
  31:Generated_Source\PSoC5/ADC.c **** /***************************************
  32:Generated_Source\PSoC5/ADC.c **** * Global data allocation
  33:Generated_Source\PSoC5/ADC.c **** ***************************************/
  34:Generated_Source\PSoC5/ADC.c **** 
  35:Generated_Source\PSoC5/ADC.c **** /* Software flag for checking conversion completed or not */
  36:Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_convDone = 0u;
  37:Generated_Source\PSoC5/ADC.c **** 
  38:Generated_Source\PSoC5/ADC.c **** /* Software flag to stop conversion for single sample conversion mode
  39:Generated_Source\PSoC5/ADC.c **** *   with resolution above 16 bits 
  40:Generated_Source\PSoC5/ADC.c **** */
  41:Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_stopConversion = 0u;
  42:Generated_Source\PSoC5/ADC.c **** 
  43:Generated_Source\PSoC5/ADC.c **** /* To run the initialization block only at the start up */
  44:Generated_Source\PSoC5/ADC.c **** uint8 ADC_initVar = 0u;
  45:Generated_Source\PSoC5/ADC.c **** 
  46:Generated_Source\PSoC5/ADC.c **** /* To check whether ADC started or not before switching the configuration */
  47:Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_started = 0u;
  48:Generated_Source\PSoC5/ADC.c **** 
  49:Generated_Source\PSoC5/ADC.c **** /* Flag to hold ADC config number. By default active config is 1. */
  50:Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_Config = 1u;
  51:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 3


  52:Generated_Source\PSoC5/ADC.c **** volatile int32 ADC_Offset;
  53:Generated_Source\PSoC5/ADC.c **** volatile int32 ADC_CountsPerVolt;
  54:Generated_Source\PSoC5/ADC.c **** 
  55:Generated_Source\PSoC5/ADC.c **** 
  56:Generated_Source\PSoC5/ADC.c **** /***************************************
  57:Generated_Source\PSoC5/ADC.c **** * Local data allocation
  58:Generated_Source\PSoC5/ADC.c **** ***************************************/
  59:Generated_Source\PSoC5/ADC.c **** 
  60:Generated_Source\PSoC5/ADC.c **** /* The array with precalculated gain compensation coefficients */
  61:Generated_Source\PSoC5/ADC.c **** static ADC_GCOR_STRUCT ADC_gcor[ADC_DEFAULT_NUM_CONFIGS];
  62:Generated_Source\PSoC5/ADC.c **** 
  63:Generated_Source\PSoC5/ADC.c **** 
  64:Generated_Source\PSoC5/ADC.c **** 
  65:Generated_Source\PSoC5/ADC.c **** /***************************************
  66:Generated_Source\PSoC5/ADC.c **** * Forward function references
  67:Generated_Source\PSoC5/ADC.c **** ***************************************/
  68:Generated_Source\PSoC5/ADC.c **** static void ADC_InitConfig(uint8 config) ;
  69:Generated_Source\PSoC5/ADC.c **** static void ADC_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGain, 
  70:Generated_Source\PSoC5/ADC.c ****                             uint8 resolution, uint8 config) ;
  71:Generated_Source\PSoC5/ADC.c **** static void ADC_SetDSMRef0Reg(uint8 value) ;
  72:Generated_Source\PSoC5/ADC.c **** 
  73:Generated_Source\PSoC5/ADC.c **** 
  74:Generated_Source\PSoC5/ADC.c **** /******************************************************************************
  75:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Init
  76:Generated_Source\PSoC5/ADC.c **** *******************************************************************************
  77:Generated_Source\PSoC5/ADC.c **** *
  78:Generated_Source\PSoC5/ADC.c **** * Summary:
  79:Generated_Source\PSoC5/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  80:Generated_Source\PSoC5/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  81:Generated_Source\PSoC5/ADC.c **** * ADC_Start().
  82:Generated_Source\PSoC5/ADC.c **** *
  83:Generated_Source\PSoC5/ADC.c **** *
  84:Generated_Source\PSoC5/ADC.c **** * Parameters:
  85:Generated_Source\PSoC5/ADC.c **** *  None
  86:Generated_Source\PSoC5/ADC.c **** *
  87:Generated_Source\PSoC5/ADC.c **** * Return:
  88:Generated_Source\PSoC5/ADC.c **** *  None
  89:Generated_Source\PSoC5/ADC.c **** *
  90:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
  91:Generated_Source\PSoC5/ADC.c **** void ADC_Init(void) 
  92:Generated_Source\PSoC5/ADC.c **** {
  61              		.loc 1 92 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65 0000 80B5     		push	{r7, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 7, -8
  68              		.cfi_offset 14, -4
  69 0002 82B0     		sub	sp, sp, #8
  70              		.cfi_def_cfa_offset 16
  71 0004 02AF     		add	r7, sp, #8
  72              		.cfi_def_cfa 7, 8
  93:Generated_Source\PSoC5/ADC.c **** 
  94:Generated_Source\PSoC5/ADC.c ****     ADC_Config = 1u;
  73              		.loc 1 94 0
  74 0006 414B     		ldr	r3, .L2
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 4


  75 0008 0122     		movs	r2, #1
  76 000a 1A70     		strb	r2, [r3]
  95:Generated_Source\PSoC5/ADC.c ****     ADC_convDone = 0u;
  77              		.loc 1 95 0
  78 000c 404B     		ldr	r3, .L2+4
  79 000e 0022     		movs	r2, #0
  80 0010 1A70     		strb	r2, [r3]
  96:Generated_Source\PSoC5/ADC.c **** 
  97:Generated_Source\PSoC5/ADC.c ****     ADC_Ext_CP_Clk_SetMode(CYCLK_DUTY);
  81              		.loc 1 97 0
  82 0012 1020     		movs	r0, #16
  83 0014 FFF7FEFF 		bl	ADC_Ext_CP_Clk_SetModeRegister
  98:Generated_Source\PSoC5/ADC.c **** 
  99:Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 100:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 101:Generated_Source\PSoC5/ADC.c ****         ADC_theACLK_SetMode(CYCLK_DUTY);
  84              		.loc 1 101 0
  85 0018 1020     		movs	r0, #16
  86 001a FFF7FEFF 		bl	ADC_theACLK_SetModeRegister
 102:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 103:Generated_Source\PSoC5/ADC.c **** 
 104:Generated_Source\PSoC5/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 105:Generated_Source\PSoC5/ADC.c ****         /* Set interrupt priority */
 106:Generated_Source\PSoC5/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  87              		.loc 1 106 0
  88 001e 0721     		movs	r1, #7
  89 0020 1D20     		movs	r0, #29
  90 0022 FFF7FEFF 		bl	CyIntSetPriority
 107:Generated_Source\PSoC5/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 108:Generated_Source\PSoC5/ADC.c **** 
 109:Generated_Source\PSoC5/ADC.c ****     /* Init static registers with common configuration */
 110:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_DEM0_REG    = ADC_CFG1_DSM_DEM0;
  91              		.loc 1 110 0
  92 0026 3B4B     		ldr	r3, .L2+8
  93 0028 0422     		movs	r2, #4
  94 002a 1A70     		strb	r2, [r3]
 111:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_DEM1_REG    = ADC_CFG1_DSM_DEM1;
  95              		.loc 1 111 0
  96 002c 3A4B     		ldr	r3, .L2+12
  97 002e 0022     		movs	r2, #0
  98 0030 1A70     		strb	r2, [r3]
 112:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_MISC_REG    = ADC_CFG1_DSM_MISC;
  99              		.loc 1 112 0
 100 0032 3A4B     		ldr	r3, .L2+16
 101 0034 0022     		movs	r2, #0
 102 0036 1A70     		strb	r2, [r3]
 113:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CLK_REG    |= ADC_CFG1_DSM_CLK;
 103              		.loc 1 113 0
 104 0038 394A     		ldr	r2, .L2+20
 105 003a 394B     		ldr	r3, .L2+20
 106 003c 1B78     		ldrb	r3, [r3]
 107 003e DBB2     		uxtb	r3, r3
 108 0040 43F01803 		orr	r3, r3, #24
 109 0044 DBB2     		uxtb	r3, r3
 110 0046 1370     		strb	r3, [r2]
 114:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF1_REG    = ADC_CFG1_DSM_REF1;
 111              		.loc 1 114 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 5


 112 0048 364B     		ldr	r3, .L2+24
 113 004a 0022     		movs	r2, #0
 114 004c 1A70     		strb	r2, [r3]
 115:Generated_Source\PSoC5/ADC.c **** 
 116:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_OUT0_REG    = ADC_CFG1_DSM_OUT0;
 115              		.loc 1 116 0
 116 004e 364B     		ldr	r3, .L2+28
 117 0050 0022     		movs	r2, #0
 118 0052 1A70     		strb	r2, [r3]
 117:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_OUT1_REG    = ADC_CFG1_DSM_OUT1;
 119              		.loc 1 117 0
 120 0054 354B     		ldr	r3, .L2+32
 121 0056 0022     		movs	r2, #0
 122 0058 1A70     		strb	r2, [r3]
 118:Generated_Source\PSoC5/ADC.c **** 
 119:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR0_REG     = ADC_CFG1_DSM_CR0;
 123              		.loc 1 119 0
 124 005a 354B     		ldr	r3, .L2+36
 125 005c 0A22     		movs	r2, #10
 126 005e 1A70     		strb	r2, [r3]
 120:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR1_REG     = ADC_CFG1_DSM_CR1;
 127              		.loc 1 120 0
 128 0060 344B     		ldr	r3, .L2+40
 129 0062 0022     		movs	r2, #0
 130 0064 1A70     		strb	r2, [r3]
 121:Generated_Source\PSoC5/ADC.c **** #if(ADC_MI_ENABLE != 0u) /* Enable Modulator Input */
 122:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR3_REG     |= ADC_DSM_MODBIT_EN;
 123:Generated_Source\PSoC5/ADC.c **** #else
 124:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR3_REG     = ADC_CFG1_DSM_CR3;
 131              		.loc 1 124 0
 132 0066 344B     		ldr	r3, .L2+44
 133 0068 0022     		movs	r2, #0
 134 006a 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/ADC.c **** #endif /* ADC_MI_ENABLE != 0u*/    
 126:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR8_REG     = ADC_CFG1_DSM_CR8;
 135              		.loc 1 126 0
 136 006c 334B     		ldr	r3, .L2+48
 137 006e 5B22     		movs	r2, #91
 138 0070 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR9_REG     = ADC_CFG1_DSM_CR9;
 139              		.loc 1 127 0
 140 0072 334B     		ldr	r3, .L2+52
 141 0074 5E22     		movs	r2, #94
 142 0076 1A70     		strb	r2, [r3]
 128:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR13_REG    = ADC_CFG1_DSM_CR13;
 143              		.loc 1 128 0
 144 0078 324B     		ldr	r3, .L2+56
 145 007a 0022     		movs	r2, #0
 146 007c 1A70     		strb	r2, [r3]
 129:Generated_Source\PSoC5/ADC.c **** 
 130:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG      = ADC_CFG1_DEC_SR;
 147              		.loc 1 130 0
 148 007e 324B     		ldr	r3, .L2+60
 149 0080 1422     		movs	r2, #20
 150 0082 1A70     		strb	r2, [r3]
 131:Generated_Source\PSoC5/ADC.c **** 
 132:Generated_Source\PSoC5/ADC.c ****     /* Calculate Gain compensation coefficients for all configurations */
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 6


 133:Generated_Source\PSoC5/ADC.c ****     ADC_GainCompensation(ADC_CFG1_INPUT_RANGE,
 151              		.loc 1 133 0
 152 0084 0123     		movs	r3, #1
 153 0086 0093     		str	r3, [sp]
 154 0088 1423     		movs	r3, #20
 155 008a 4FF40042 		mov	r2, #32768
 156 008e 47F60271 		movw	r1, #32514
 157 0092 0320     		movs	r0, #3
 158 0094 FFF7FEFF 		bl	ADC_GainCompensation
 134:Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_IDEAL_DEC_GAIN,
 135:Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_IDEAL_ODDDEC_GAIN,
 136:Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_RESOLUTION,
 137:Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1);
 138:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 1)
 139:Generated_Source\PSoC5/ADC.c ****         ADC_GainCompensation(ADC_CFG2_INPUT_RANGE,
 159              		.loc 1 139 0
 160 0098 0223     		movs	r3, #2
 161 009a 0093     		str	r3, [sp]
 162 009c 1023     		movs	r3, #16
 163 009e 4FF40042 		mov	r2, #32768
 164 00a2 49F2DA01 		movw	r1, #37082
 165 00a6 0020     		movs	r0, #0
 166 00a8 FFF7FEFF 		bl	ADC_GainCompensation
 140:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_IDEAL_DEC_GAIN,
 141:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_IDEAL_ODDDEC_GAIN,
 142:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_RESOLUTION,
 143:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2);
 144:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 1 */
 145:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 2)
 146:Generated_Source\PSoC5/ADC.c ****         ADC_GainCompensation(ADC_CFG3_INPUT_RANGE,
 167              		.loc 1 146 0
 168 00ac 0323     		movs	r3, #3
 169 00ae 0093     		str	r3, [sp]
 170 00b0 1023     		movs	r3, #16
 171 00b2 4FF40042 		mov	r2, #32768
 172 00b6 49F2DA01 		movw	r1, #37082
 173 00ba 0020     		movs	r0, #0
 174 00bc FFF7FEFF 		bl	ADC_GainCompensation
 147:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3_IDEAL_DEC_GAIN,
 148:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3_IDEAL_ODDDEC_GAIN,
 149:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3_RESOLUTION,
 150:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3);
 151:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 2 */
 152:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 3)
 153:Generated_Source\PSoC5/ADC.c ****         ADC_GainCompensation(ADC_CFG4_INPUT_RANGE,
 175              		.loc 1 153 0
 176 00c0 0423     		movs	r3, #4
 177 00c2 0093     		str	r3, [sp]
 178 00c4 1023     		movs	r3, #16
 179 00c6 4FF40042 		mov	r2, #32768
 180 00ca 49F2DA01 		movw	r1, #37082
 181 00ce 0020     		movs	r0, #0
 182 00d0 FFF7FEFF 		bl	ADC_GainCompensation
 154:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4_IDEAL_DEC_GAIN,
 155:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4_IDEAL_ODDDEC_GAIN,
 156:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4_RESOLUTION,
 157:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4);
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 7


 158:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 3 */
 159:Generated_Source\PSoC5/ADC.c **** 
 160:Generated_Source\PSoC5/ADC.c ****     /* Set GCOR register for config1 */
 161:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_GVAL_REG = ADC_gcor[ADC_Config - 1u].gval;
 183              		.loc 1 161 0
 184 00d4 1D4A     		ldr	r2, .L2+64
 185 00d6 0D4B     		ldr	r3, .L2
 186 00d8 1B78     		ldrb	r3, [r3]
 187 00da DBB2     		uxtb	r3, r3
 188 00dc 013B     		subs	r3, r3, #1
 189 00de 1C49     		ldr	r1, .L2+68
 190 00e0 9B00     		lsls	r3, r3, #2
 191 00e2 0B44     		add	r3, r3, r1
 192 00e4 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 193 00e6 1370     		strb	r3, [r2]
 162:Generated_Source\PSoC5/ADC.c ****     CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, ADC_gcor[ADC_Config - 1u].gcor);
 194              		.loc 1 162 0
 195 00e8 1A4A     		ldr	r2, .L2+72
 196 00ea 084B     		ldr	r3, .L2
 197 00ec 1B78     		ldrb	r3, [r3]
 198 00ee DBB2     		uxtb	r3, r3
 199 00f0 013B     		subs	r3, r3, #1
 200 00f2 1749     		ldr	r1, .L2+68
 201 00f4 31F82330 		ldrh	r3, [r1, r3, lsl #2]
 202 00f8 1380     		strh	r3, [r2]	@ movhi
 163:Generated_Source\PSoC5/ADC.c **** 
 164:Generated_Source\PSoC5/ADC.c ****     /* Initialize the registers with default customizer settings for config1 */
 165:Generated_Source\PSoC5/ADC.c ****     ADC_InitConfig(ADC_Config);
 203              		.loc 1 165 0
 204 00fa 044B     		ldr	r3, .L2
 205 00fc 1B78     		ldrb	r3, [r3]
 206 00fe DBB2     		uxtb	r3, r3
 207 0100 1846     		mov	r0, r3
 208 0102 FFF7FEFF 		bl	ADC_InitConfig
 166:Generated_Source\PSoC5/ADC.c **** }
 209              		.loc 1 166 0
 210 0106 00BF     		nop
 211 0108 BD46     		mov	sp, r7
 212              		.cfi_def_cfa_register 13
 213              		@ sp needed
 214 010a 80BD     		pop	{r7, pc}
 215              	.L3:
 216              		.align	2
 217              	.L2:
 218 010c 00000000 		.word	ADC_Config
 219 0110 00000000 		.word	ADC_convDone
 220 0114 96580040 		.word	1073764502
 221 0118 97580040 		.word	1073764503
 222 011c 9E580040 		.word	1073764510
 223 0120 075B0040 		.word	1073765127
 224 0124 93580040 		.word	1073764499
 225 0128 885B0040 		.word	1073765256
 226 012c 895B0040 		.word	1073765257
 227 0130 80580040 		.word	1073764480
 228 0134 81580040 		.word	1073764481
 229 0138 83580040 		.word	1073764483
 230 013c 88580040 		.word	1073764488
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 8


 231 0140 89580040 		.word	1073764489
 232 0144 8D580040 		.word	1073764493
 233 0148 014E0040 		.word	1073761793
 234 014c 0E4E0040 		.word	1073761806
 235 0150 04000000 		.word	ADC_gcor
 236 0154 0C4E0040 		.word	1073761804
 237              		.cfi_endproc
 238              	.LFE0:
 239              		.size	ADC_Init, .-ADC_Init
 240              		.section	.text.ADC_Enable,"ax",%progbits
 241              		.align	2
 242              		.global	ADC_Enable
 243              		.thumb
 244              		.thumb_func
 245              		.type	ADC_Enable, %function
 246              	ADC_Enable:
 247              	.LFB1:
 167:Generated_Source\PSoC5/ADC.c **** 
 168:Generated_Source\PSoC5/ADC.c **** 
 169:Generated_Source\PSoC5/ADC.c **** /******************************************************************************
 170:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Enable
 171:Generated_Source\PSoC5/ADC.c **** *******************************************************************************
 172:Generated_Source\PSoC5/ADC.c **** *
 173:Generated_Source\PSoC5/ADC.c **** * Summary:
 174:Generated_Source\PSoC5/ADC.c **** *  Enables the ADC DelSig block operation.
 175:Generated_Source\PSoC5/ADC.c **** *
 176:Generated_Source\PSoC5/ADC.c **** *
 177:Generated_Source\PSoC5/ADC.c **** * Parameters:
 178:Generated_Source\PSoC5/ADC.c **** *  None
 179:Generated_Source\PSoC5/ADC.c **** *
 180:Generated_Source\PSoC5/ADC.c **** * Return:
 181:Generated_Source\PSoC5/ADC.c **** *  None
 182:Generated_Source\PSoC5/ADC.c **** *
 183:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 184:Generated_Source\PSoC5/ADC.c **** void ADC_Enable(void) 
 185:Generated_Source\PSoC5/ADC.c **** {
 248              		.loc 1 185 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 8
 251              		@ frame_needed = 1, uses_anonymous_args = 0
 252 0000 80B5     		push	{r7, lr}
 253              		.cfi_def_cfa_offset 8
 254              		.cfi_offset 7, -8
 255              		.cfi_offset 14, -4
 256 0002 82B0     		sub	sp, sp, #8
 257              		.cfi_def_cfa_offset 16
 258 0004 00AF     		add	r7, sp, #0
 259              		.cfi_def_cfa_register 7
 186:Generated_Source\PSoC5/ADC.c **** 	uint8 config;
 187:Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
 188:Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 260              		.loc 1 188 0
 261 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 262 000a 0346     		mov	r3, r0
 263 000c FB71     		strb	r3, [r7, #7]
 189:Generated_Source\PSoC5/ADC.c **** 
 190:Generated_Source\PSoC5/ADC.c ****     /* Read volatile variable to the local variable */
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 9


 191:Generated_Source\PSoC5/ADC.c ****     config = ADC_Config;
 264              		.loc 1 191 0
 265 000e 444B     		ldr	r3, .L5
 266 0010 1B78     		ldrb	r3, [r3]
 267 0012 BB71     		strb	r3, [r7, #6]
 192:Generated_Source\PSoC5/ADC.c ****     
 193:Generated_Source\PSoC5/ADC.c ****     /* Enable active mode power for ADC */
 194:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DEC_REG |= ADC_ACT_PWR_DEC_EN;
 268              		.loc 1 194 0
 269 0014 434A     		ldr	r2, .L5+4
 270 0016 434B     		ldr	r3, .L5+4
 271 0018 1B78     		ldrb	r3, [r3]
 272 001a DBB2     		uxtb	r3, r3
 273 001c 43F00103 		orr	r3, r3, #1
 274 0020 DBB2     		uxtb	r3, r3
 275 0022 1370     		strb	r3, [r2]
 195:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DSM_REG |= ADC_ACT_PWR_DSM_EN;
 276              		.loc 1 195 0
 277 0024 3F4A     		ldr	r2, .L5+4
 278 0026 3F4B     		ldr	r3, .L5+4
 279 0028 1B78     		ldrb	r3, [r3]
 280 002a DBB2     		uxtb	r3, r3
 281 002c 43F01003 		orr	r3, r3, #16
 282 0030 DBB2     		uxtb	r3, r3
 283 0032 1370     		strb	r3, [r2]
 196:Generated_Source\PSoC5/ADC.c **** 
 197:Generated_Source\PSoC5/ADC.c ****      /* Enable alternative active mode power for ADC */
 198:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DEC_REG |= ADC_STBY_PWR_DEC_EN;
 284              		.loc 1 198 0
 285 0034 3C4A     		ldr	r2, .L5+8
 286 0036 3C4B     		ldr	r3, .L5+8
 287 0038 1B78     		ldrb	r3, [r3]
 288 003a DBB2     		uxtb	r3, r3
 289 003c 43F00103 		orr	r3, r3, #1
 290 0040 DBB2     		uxtb	r3, r3
 291 0042 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DSM_REG |= ADC_STBY_PWR_DSM_EN;
 292              		.loc 1 199 0
 293 0044 384A     		ldr	r2, .L5+8
 294 0046 384B     		ldr	r3, .L5+8
 295 0048 1B78     		ldrb	r3, [r3]
 296 004a DBB2     		uxtb	r3, r3
 297 004c 43F01003 		orr	r3, r3, #16
 298 0050 DBB2     		uxtb	r3, r3
 299 0052 1370     		strb	r3, [r2]
 200:Generated_Source\PSoC5/ADC.c **** 
 201:Generated_Source\PSoC5/ADC.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
 202:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= ADC_IGNORE_PRESA1;
 300              		.loc 1 202 0
 301 0054 354A     		ldr	r2, .L5+12
 302 0056 354B     		ldr	r3, .L5+12
 303 0058 1B78     		ldrb	r3, [r3]
 304 005a DBB2     		uxtb	r3, r3
 305 005c 43F00203 		orr	r3, r3, #2
 306 0060 DBB2     		uxtb	r3, r3
 307 0062 1370     		strb	r3, [r2]
 203:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= ADC_IGNORE_PRESA2;
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 10


 308              		.loc 1 203 0
 309 0064 324A     		ldr	r2, .L5+16
 310 0066 324B     		ldr	r3, .L5+16
 311 0068 1B78     		ldrb	r3, [r3]
 312 006a DBB2     		uxtb	r3, r3
 313 006c 43F00203 		orr	r3, r3, #2
 314 0070 DBB2     		uxtb	r3, r3
 315 0072 1370     		strb	r3, [r2]
 204:Generated_Source\PSoC5/ADC.c **** 
 205:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR17_REG |= (ADC_DSM_EN_BUF_VREF | ADC_DSM_EN_BUF_VCM);
 316              		.loc 1 205 0
 317 0074 2F4A     		ldr	r2, .L5+20
 318 0076 2F4B     		ldr	r3, .L5+20
 319 0078 1B78     		ldrb	r3, [r3]
 320 007a DBB2     		uxtb	r3, r3
 321 007c 43F00303 		orr	r3, r3, #3
 322 0080 DBB2     		uxtb	r3, r3
 323 0082 1370     		strb	r3, [r2]
 206:Generated_Source\PSoC5/ADC.c **** 
 207:Generated_Source\PSoC5/ADC.c ****     /* Code to disable the REFBUF0 if reference chosen is External ref */
 208:Generated_Source\PSoC5/ADC.c ****     #if (((ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P03) || \
 209:Generated_Source\PSoC5/ADC.c ****           (ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P32)) || \
 210:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 1) && \
 211:Generated_Source\PSoC5/ADC.c ****           ((ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P03) ||  \
 212:Generated_Source\PSoC5/ADC.c ****            (ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P32))) || \
 213:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 2) && \
 214:Generated_Source\PSoC5/ADC.c ****           ((ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P03) ||  \
 215:Generated_Source\PSoC5/ADC.c ****            (ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P32))) || \
 216:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 3) && \
 217:Generated_Source\PSoC5/ADC.c ****           ((ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P03) || \
 218:Generated_Source\PSoC5/ADC.c ****            (ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P32))))
 219:Generated_Source\PSoC5/ADC.c ****         if (((config == 1u) &&
 220:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P03) ||
 221:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P32))) ||
 222:Generated_Source\PSoC5/ADC.c ****             ((config == 2u) &&
 223:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P03) ||
 224:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P32))) ||
 225:Generated_Source\PSoC5/ADC.c ****             ((config == 3u) &&
 226:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P03) ||
 227:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P32))) ||
 228:Generated_Source\PSoC5/ADC.c ****             ((config == 4u) &&
 229:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P03) ||
 230:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P32))))
 231:Generated_Source\PSoC5/ADC.c ****         {
 232:Generated_Source\PSoC5/ADC.c ****             /* Disable the REFBUF0 */
 233:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG &= (uint8)~ADC_DSM_EN_BUF_VREF;
 234:Generated_Source\PSoC5/ADC.c ****         }
 235:Generated_Source\PSoC5/ADC.c ****     #endif /* External ref */
 236:Generated_Source\PSoC5/ADC.c **** 
 237:Generated_Source\PSoC5/ADC.c ****     #if (((ADC_CFG1_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) || \
 238:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 1) && \
 239:Generated_Source\PSoC5/ADC.c ****           (ADC_CFG2_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)) || \
 240:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 2) && \
 241:Generated_Source\PSoC5/ADC.c ****           (ADC_CFG3_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)) || \
 242:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 3) && \
 243:Generated_Source\PSoC5/ADC.c ****           (ADC_CFG4_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF))))
 244:Generated_Source\PSoC5/ADC.c ****         if(((config == 1u) &&
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 11


 245:Generated_Source\PSoC5/ADC.c ****             (ADC_CFG1_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 246:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG1_REFERENCE != ADC_EXT_REF_ON_P03) &&
 247:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG1_REFERENCE != ADC_EXT_REF_ON_P32))) ||
 248:Generated_Source\PSoC5/ADC.c ****              ((config == 2u) &&
 249:Generated_Source\PSoC5/ADC.c ****               (ADC_CFG2_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 250:Generated_Source\PSoC5/ADC.c ****              ((ADC_CFG2_REFERENCE != ADC_EXT_REF_ON_P03) &&
 251:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_REFERENCE != ADC_EXT_REF_ON_P32))) ||
 252:Generated_Source\PSoC5/ADC.c ****              ((config == 3u) &&
 253:Generated_Source\PSoC5/ADC.c ****               (ADC_CFG3_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 254:Generated_Source\PSoC5/ADC.c ****              ((ADC_CFG3_REFERENCE != ADC_EXT_REF_ON_P03) &&
 255:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_REFERENCE != ADC_EXT_REF_ON_P32))) ||
 256:Generated_Source\PSoC5/ADC.c ****              ((config == 4u) &&
 257:Generated_Source\PSoC5/ADC.c ****               (ADC_CFG4_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 258:Generated_Source\PSoC5/ADC.c ****              ((ADC_CFG4_REFERENCE != ADC_EXT_REF_ON_P03) &&
 259:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_REFERENCE != ADC_EXT_REF_ON_P32))))
 260:Generated_Source\PSoC5/ADC.c ****         {
 261:Generated_Source\PSoC5/ADC.c ****             /* Enable the REFBUF1 */
 262:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF0_REG |= ADC_DSM_EN_BUF_VREF_INN;
 263:Generated_Source\PSoC5/ADC.c ****         }
 264:Generated_Source\PSoC5/ADC.c ****     #endif /* VSSA_TO_2VREF */
 265:Generated_Source\PSoC5/ADC.c ****     if(config != 0u)
 266:Generated_Source\PSoC5/ADC.c ****     {
 267:Generated_Source\PSoC5/ADC.c ****         /* Suppress compiler warning */
 268:Generated_Source\PSoC5/ADC.c ****     }
 269:Generated_Source\PSoC5/ADC.c **** 
 270:Generated_Source\PSoC5/ADC.c ****     /* Wait for 3 microseconds */
 271:Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
 324              		.loc 1 271 0
 325 0084 0320     		movs	r0, #3
 326 0086 FFF7FEFF 		bl	CyDelayUs
 272:Generated_Source\PSoC5/ADC.c **** 
 273:Generated_Source\PSoC5/ADC.c ****     /* Enable the press circuit */
 274:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~ADC_IGNORE_PRESA1;
 327              		.loc 1 274 0
 328 008a 284A     		ldr	r2, .L5+12
 329 008c 274B     		ldr	r3, .L5+12
 330 008e 1B78     		ldrb	r3, [r3]
 331 0090 DBB2     		uxtb	r3, r3
 332 0092 23F00203 		bic	r3, r3, #2
 333 0096 DBB2     		uxtb	r3, r3
 334 0098 1370     		strb	r3, [r2]
 275:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~ADC_IGNORE_PRESA2;
 335              		.loc 1 275 0
 336 009a 254A     		ldr	r2, .L5+16
 337 009c 244B     		ldr	r3, .L5+16
 338 009e 1B78     		ldrb	r3, [r3]
 339 00a0 DBB2     		uxtb	r3, r3
 340 00a2 23F00203 		bic	r3, r3, #2
 341 00a6 DBB2     		uxtb	r3, r3
 342 00a8 1370     		strb	r3, [r2]
 276:Generated_Source\PSoC5/ADC.c **** 
 277:Generated_Source\PSoC5/ADC.c ****     /* Enable negative pumps for DSM  */
 278:Generated_Source\PSoC5/ADC.c ****     ADC_PUMP_CR1_REG  |= ( ADC_PUMP_CR1_CLKSEL | ADC_PUMP_CR1_FORCE );
 343              		.loc 1 278 0
 344 00aa 234A     		ldr	r2, .L5+24
 345 00ac 224B     		ldr	r3, .L5+24
 346 00ae 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 12


 347 00b0 DBB2     		uxtb	r3, r3
 348 00b2 43F00603 		orr	r3, r3, #6
 349 00b6 DBB2     		uxtb	r3, r3
 350 00b8 1370     		strb	r3, [r2]
 279:Generated_Source\PSoC5/ADC.c **** 
 280:Generated_Source\PSoC5/ADC.c ****     /* Enable Modulator Chopping if required */
 281:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR2_REG = ADC_CFG1_DSM_CR2;
 351              		.loc 1 281 0
 352 00ba 204B     		ldr	r3, .L5+28
 353 00bc 7A22     		movs	r2, #122
 354 00be 1A70     		strb	r2, [r3]
 282:Generated_Source\PSoC5/ADC.c **** 
 283:Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 284:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 285:Generated_Source\PSoC5/ADC.c ****         ADC_PWRMGR_CLK_REG |= ADC_ACT_PWR_CLK_EN;
 355              		.loc 1 285 0
 356 00c0 1F4A     		ldr	r2, .L5+32
 357 00c2 1F4B     		ldr	r3, .L5+32
 358 00c4 1B78     		ldrb	r3, [r3]
 359 00c6 DBB2     		uxtb	r3, r3
 360 00c8 43F00103 		orr	r3, r3, #1
 361 00cc DBB2     		uxtb	r3, r3
 362 00ce 1370     		strb	r3, [r2]
 286:Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG |= ADC_STBY_PWR_CLK_EN;
 363              		.loc 1 286 0
 364 00d0 1C4A     		ldr	r2, .L5+36
 365 00d2 1C4B     		ldr	r3, .L5+36
 366 00d4 1B78     		ldrb	r3, [r3]
 367 00d6 DBB2     		uxtb	r3, r3
 368 00d8 43F00103 		orr	r3, r3, #1
 369 00dc DBB2     		uxtb	r3, r3
 370 00de 1370     		strb	r3, [r2]
 287:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 288:Generated_Source\PSoC5/ADC.c **** 
 289:Generated_Source\PSoC5/ADC.c ****     /* Enable the active and alternate active power for charge pump clock */
 290:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_CHARGE_PUMP_CLK_REG |= ADC_ACT_PWR_CHARGE_PUMP_CLK_EN;
 371              		.loc 1 290 0
 372 00e0 194A     		ldr	r2, .L5+40
 373 00e2 194B     		ldr	r3, .L5+40
 374 00e4 1B78     		ldrb	r3, [r3]
 375 00e6 DBB2     		uxtb	r3, r3
 376 00e8 43F00203 		orr	r3, r3, #2
 377 00ec DBB2     		uxtb	r3, r3
 378 00ee 1370     		strb	r3, [r2]
 291:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG |= ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 379              		.loc 1 291 0
 380 00f0 164A     		ldr	r2, .L5+44
 381 00f2 164B     		ldr	r3, .L5+44
 382 00f4 1B78     		ldrb	r3, [r3]
 383 00f6 DBB2     		uxtb	r3, r3
 384 00f8 43F00203 		orr	r3, r3, #2
 385 00fc DBB2     		uxtb	r3, r3
 386 00fe 1370     		strb	r3, [r2]
 292:Generated_Source\PSoC5/ADC.c **** 
 293:Generated_Source\PSoC5/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 294:Generated_Source\PSoC5/ADC.c ****         /* Clear a pending interrupt */
 295:Generated_Source\PSoC5/ADC.c ****         CyIntClearPending(ADC_INTC_NUMBER);
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 13


 387              		.loc 1 295 0
 388 0100 134B     		ldr	r3, .L5+48
 389 0102 4FF00052 		mov	r2, #536870912
 390 0106 1A60     		str	r2, [r3]
 296:Generated_Source\PSoC5/ADC.c ****         /* Enable interrupt */
 297:Generated_Source\PSoC5/ADC.c ****         CyIntEnable(ADC_INTC_NUMBER);
 391              		.loc 1 297 0
 392 0108 124B     		ldr	r3, .L5+52
 393 010a 4FF00052 		mov	r2, #536870912
 394 010e 1A60     		str	r2, [r3]
 298:Generated_Source\PSoC5/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 299:Generated_Source\PSoC5/ADC.c **** 
 300:Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 395              		.loc 1 300 0
 396 0110 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 397 0112 1846     		mov	r0, r3
 398 0114 FFF7FEFF 		bl	CyExitCriticalSection
 301:Generated_Source\PSoC5/ADC.c **** 
 302:Generated_Source\PSoC5/ADC.c **** }
 399              		.loc 1 302 0
 400 0118 00BF     		nop
 401 011a 0837     		adds	r7, r7, #8
 402              		.cfi_def_cfa_offset 8
 403 011c BD46     		mov	sp, r7
 404              		.cfi_def_cfa_register 13
 405              		@ sp needed
 406 011e 80BD     		pop	{r7, pc}
 407              	.L6:
 408              		.align	2
 409              	.L5:
 410 0120 00000000 		.word	ADC_Config
 411 0124 AA430040 		.word	1073759146
 412 0128 BA430040 		.word	1073759162
 413 012c F8460040 		.word	1073759992
 414 0130 F9460040 		.word	1073759993
 415 0134 91580040 		.word	1073764497
 416 0138 77580040 		.word	1073764471
 417 013c 82580040 		.word	1073764482
 418 0140 A1430040 		.word	1073759137
 419 0144 B1430040 		.word	1073759153
 420 0148 A2430040 		.word	1073759138
 421 014c B2430040 		.word	1073759154
 422 0150 80E200E0 		.word	-536812928
 423 0154 00E100E0 		.word	-536813312
 424              		.cfi_endproc
 425              	.LFE1:
 426              		.size	ADC_Enable, .-ADC_Enable
 427              		.section	.text.ADC_Start,"ax",%progbits
 428              		.align	2
 429              		.global	ADC_Start
 430              		.thumb
 431              		.thumb_func
 432              		.type	ADC_Start, %function
 433              	ADC_Start:
 434              	.LFB2:
 303:Generated_Source\PSoC5/ADC.c **** 
 304:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 14


 305:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Start
 307:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 308:Generated_Source\PSoC5/ADC.c **** *
 309:Generated_Source\PSoC5/ADC.c **** * Summary:
 310:Generated_Source\PSoC5/ADC.c **** *  Performs all required initialization for this component and enables
 311:Generated_Source\PSoC5/ADC.c **** *  the power. It configure all the register the first time it is called.
 312:Generated_Source\PSoC5/ADC.c **** *  Subsequent calls of the Start function only enable the ADC and turn
 313:Generated_Source\PSoC5/ADC.c **** *  on the power. If multiple configurations are selected, it will
 314:Generated_Source\PSoC5/ADC.c **** *  configure the ADC for configuration 1 by default, unless the
 315:Generated_Source\PSoC5/ADC.c **** *  ADC_SelectConfiguration( ) function has been called to change
 316:Generated_Source\PSoC5/ADC.c **** *  the default setting.
 317:Generated_Source\PSoC5/ADC.c **** *
 318:Generated_Source\PSoC5/ADC.c **** * Parameters:
 319:Generated_Source\PSoC5/ADC.c **** *  None
 320:Generated_Source\PSoC5/ADC.c **** *
 321:Generated_Source\PSoC5/ADC.c **** * Return:
 322:Generated_Source\PSoC5/ADC.c **** *  None
 323:Generated_Source\PSoC5/ADC.c **** *
 324:Generated_Source\PSoC5/ADC.c **** * Global variables:
 325:Generated_Source\PSoC5/ADC.c **** *  ADC_initVar:  Used to check the initial configuration,
 326:Generated_Source\PSoC5/ADC.c **** *  modified when this function is called for the first time.
 327:Generated_Source\PSoC5/ADC.c **** *
 328:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 329:Generated_Source\PSoC5/ADC.c **** void ADC_Start(void) 
 330:Generated_Source\PSoC5/ADC.c **** {
 435              		.loc 1 330 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 1, uses_anonymous_args = 0
 439 0000 80B5     		push	{r7, lr}
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 7, -8
 442              		.cfi_offset 14, -4
 443 0002 00AF     		add	r7, sp, #0
 444              		.cfi_def_cfa_register 7
 331:Generated_Source\PSoC5/ADC.c ****     if(ADC_initVar == 0u)
 445              		.loc 1 331 0
 446 0004 084B     		ldr	r3, .L10
 447 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 448 0008 002B     		cmp	r3, #0
 449 000a 09D1     		bne	.L8
 332:Generated_Source\PSoC5/ADC.c ****     {
 333:Generated_Source\PSoC5/ADC.c ****         if(ADC_started == 0u)
 450              		.loc 1 333 0
 451 000c 074B     		ldr	r3, .L10+4
 452 000e 1B78     		ldrb	r3, [r3]
 453 0010 DBB2     		uxtb	r3, r3
 454 0012 002B     		cmp	r3, #0
 455 0014 01D1     		bne	.L9
 334:Generated_Source\PSoC5/ADC.c ****         {
 335:Generated_Source\PSoC5/ADC.c ****             ADC_Init();
 456              		.loc 1 335 0
 457 0016 FFF7FEFF 		bl	ADC_Init
 458              	.L9:
 336:Generated_Source\PSoC5/ADC.c ****         }
 337:Generated_Source\PSoC5/ADC.c ****         ADC_initVar = 1u;
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 15


 459              		.loc 1 337 0
 460 001a 034B     		ldr	r3, .L10
 461 001c 0122     		movs	r2, #1
 462 001e 1A70     		strb	r2, [r3]
 463              	.L8:
 338:Generated_Source\PSoC5/ADC.c ****     }
 339:Generated_Source\PSoC5/ADC.c **** 
 340:Generated_Source\PSoC5/ADC.c ****     /* Enable the ADC */
 341:Generated_Source\PSoC5/ADC.c ****     ADC_Enable();
 464              		.loc 1 341 0
 465 0020 FFF7FEFF 		bl	ADC_Enable
 342:Generated_Source\PSoC5/ADC.c **** }
 466              		.loc 1 342 0
 467 0024 00BF     		nop
 468 0026 80BD     		pop	{r7, pc}
 469              	.L11:
 470              		.align	2
 471              	.L10:
 472 0028 00000000 		.word	ADC_initVar
 473 002c 00000000 		.word	ADC_started
 474              		.cfi_endproc
 475              	.LFE2:
 476              		.size	ADC_Start, .-ADC_Start
 477              		.section	.text.ADC_Stop,"ax",%progbits
 478              		.align	2
 479              		.global	ADC_Stop
 480              		.thumb
 481              		.thumb_func
 482              		.type	ADC_Stop, %function
 483              	ADC_Stop:
 484              	.LFB3:
 343:Generated_Source\PSoC5/ADC.c **** 
 344:Generated_Source\PSoC5/ADC.c **** 
 345:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 346:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Stop
 347:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 348:Generated_Source\PSoC5/ADC.c **** *
 349:Generated_Source\PSoC5/ADC.c **** * Summary:
 350:Generated_Source\PSoC5/ADC.c **** *  This function stops and powers down the ADC component and the internal
 351:Generated_Source\PSoC5/ADC.c **** *  clock if the external clock is not selected. If an external clock is
 352:Generated_Source\PSoC5/ADC.c **** *  used, it is up to the designer to power down the external clock it
 353:Generated_Source\PSoC5/ADC.c **** *  required.
 354:Generated_Source\PSoC5/ADC.c **** *
 355:Generated_Source\PSoC5/ADC.c **** * Parameters:
 356:Generated_Source\PSoC5/ADC.c **** *  None
 357:Generated_Source\PSoC5/ADC.c **** *
 358:Generated_Source\PSoC5/ADC.c **** * Return:
 359:Generated_Source\PSoC5/ADC.c **** *  None
 360:Generated_Source\PSoC5/ADC.c **** *
 361:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 362:Generated_Source\PSoC5/ADC.c **** void ADC_Stop(void) 
 363:Generated_Source\PSoC5/ADC.c **** {
 485              		.loc 1 363 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 8
 488              		@ frame_needed = 1, uses_anonymous_args = 0
 489 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 16


 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 7, -8
 492              		.cfi_offset 14, -4
 493 0002 82B0     		sub	sp, sp, #8
 494              		.cfi_def_cfa_offset 16
 495 0004 00AF     		add	r7, sp, #0
 496              		.cfi_def_cfa_register 7
 364:Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
 365:Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 497              		.loc 1 365 0
 498 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 499 000a 0346     		mov	r3, r0
 500 000c FB71     		strb	r3, [r7, #7]
 366:Generated_Source\PSoC5/ADC.c **** 
 367:Generated_Source\PSoC5/ADC.c ****     /* Stop conversions */
 368:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG &= (uint8)~ADC_DEC_START_CONV;
 501              		.loc 1 368 0
 502 000e 4D4A     		ldr	r2, .L13
 503 0010 4C4B     		ldr	r3, .L13
 504 0012 1B78     		ldrb	r3, [r3]
 505 0014 DBB2     		uxtb	r3, r3
 506 0016 23F00103 		bic	r3, r3, #1
 507 001a DBB2     		uxtb	r3, r3
 508 001c 1370     		strb	r3, [r2]
 369:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |=  ADC_DEC_INTR_CLEAR;
 509              		.loc 1 369 0
 510 001e 4A4A     		ldr	r2, .L13+4
 511 0020 494B     		ldr	r3, .L13+4
 512 0022 1B78     		ldrb	r3, [r3]
 513 0024 DBB2     		uxtb	r3, r3
 514 0026 43F00403 		orr	r3, r3, #4
 515 002a DBB2     		uxtb	r3, r3
 516 002c 1370     		strb	r3, [r2]
 370:Generated_Source\PSoC5/ADC.c **** 
 371:Generated_Source\PSoC5/ADC.c ****     /* Disable PRES, Disable power to VCMBUF0, REFBUF0 and REFBUF1,
 372:Generated_Source\PSoC5/ADC.c ****        enable PRES */
 373:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= ADC_IGNORE_PRESA1;
 517              		.loc 1 373 0
 518 002e 474A     		ldr	r2, .L13+8
 519 0030 464B     		ldr	r3, .L13+8
 520 0032 1B78     		ldrb	r3, [r3]
 521 0034 DBB2     		uxtb	r3, r3
 522 0036 43F00203 		orr	r3, r3, #2
 523 003a DBB2     		uxtb	r3, r3
 524 003c 1370     		strb	r3, [r2]
 374:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= ADC_IGNORE_PRESA2;
 525              		.loc 1 374 0
 526 003e 444A     		ldr	r2, .L13+12
 527 0040 434B     		ldr	r3, .L13+12
 528 0042 1B78     		ldrb	r3, [r3]
 529 0044 DBB2     		uxtb	r3, r3
 530 0046 43F00203 		orr	r3, r3, #2
 531 004a DBB2     		uxtb	r3, r3
 532 004c 1370     		strb	r3, [r2]
 375:Generated_Source\PSoC5/ADC.c **** 
 376:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR17_REG &= (uint8)~(ADC_DSM_EN_BUF_VREF | ADC_DSM_EN_BUF_VCM);
 533              		.loc 1 376 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 17


 534 004e 414A     		ldr	r2, .L13+16
 535 0050 404B     		ldr	r3, .L13+16
 536 0052 1B78     		ldrb	r3, [r3]
 537 0054 DBB2     		uxtb	r3, r3
 538 0056 23F00303 		bic	r3, r3, #3
 539 005a DBB2     		uxtb	r3, r3
 540 005c 1370     		strb	r3, [r2]
 377:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF0_REG &= (uint8)~ADC_DSM_EN_BUF_VREF_INN;
 541              		.loc 1 377 0
 542 005e 3E4A     		ldr	r2, .L13+20
 543 0060 3D4B     		ldr	r3, .L13+20
 544 0062 1B78     		ldrb	r3, [r3]
 545 0064 DBB2     		uxtb	r3, r3
 546 0066 23F00803 		bic	r3, r3, #8
 547 006a DBB2     		uxtb	r3, r3
 548 006c 1370     		strb	r3, [r2]
 378:Generated_Source\PSoC5/ADC.c **** 
 379:Generated_Source\PSoC5/ADC.c ****     /* Wait for 3 microseconds. */
 380:Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
 549              		.loc 1 380 0
 550 006e 0320     		movs	r0, #3
 551 0070 FFF7FEFF 		bl	CyDelayUs
 381:Generated_Source\PSoC5/ADC.c **** 
 382:Generated_Source\PSoC5/ADC.c ****     /* Enable the press circuit */
 383:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~ADC_IGNORE_PRESA1;
 552              		.loc 1 383 0
 553 0074 354A     		ldr	r2, .L13+8
 554 0076 354B     		ldr	r3, .L13+8
 555 0078 1B78     		ldrb	r3, [r3]
 556 007a DBB2     		uxtb	r3, r3
 557 007c 23F00203 		bic	r3, r3, #2
 558 0080 DBB2     		uxtb	r3, r3
 559 0082 1370     		strb	r3, [r2]
 384:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~ADC_IGNORE_PRESA2;
 560              		.loc 1 384 0
 561 0084 324A     		ldr	r2, .L13+12
 562 0086 324B     		ldr	r3, .L13+12
 563 0088 1B78     		ldrb	r3, [r3]
 564 008a DBB2     		uxtb	r3, r3
 565 008c 23F00203 		bic	r3, r3, #2
 566 0090 DBB2     		uxtb	r3, r3
 567 0092 1370     		strb	r3, [r2]
 385:Generated_Source\PSoC5/ADC.c **** 
 386:Generated_Source\PSoC5/ADC.c ****     /* Disable power to the ADC */
 387:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DSM_REG &= (uint8)~ADC_ACT_PWR_DSM_EN;
 568              		.loc 1 387 0
 569 0094 314A     		ldr	r2, .L13+24
 570 0096 314B     		ldr	r3, .L13+24
 571 0098 1B78     		ldrb	r3, [r3]
 572 009a DBB2     		uxtb	r3, r3
 573 009c 23F01003 		bic	r3, r3, #16
 574 00a0 DBB2     		uxtb	r3, r3
 575 00a2 1370     		strb	r3, [r2]
 388:Generated_Source\PSoC5/ADC.c **** 
 389:Generated_Source\PSoC5/ADC.c ****     /* Disable power to Decimator block */
 390:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DEC_REG &= (uint8)~ADC_ACT_PWR_DEC_EN;
 576              		.loc 1 390 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 18


 577 00a4 2D4A     		ldr	r2, .L13+24
 578 00a6 2D4B     		ldr	r3, .L13+24
 579 00a8 1B78     		ldrb	r3, [r3]
 580 00aa DBB2     		uxtb	r3, r3
 581 00ac 23F00103 		bic	r3, r3, #1
 582 00b0 DBB2     		uxtb	r3, r3
 583 00b2 1370     		strb	r3, [r2]
 391:Generated_Source\PSoC5/ADC.c **** 
 392:Generated_Source\PSoC5/ADC.c ****     /* Disable alternative active power to the ADC */
 393:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DEC_REG &= (uint8)~ADC_STBY_PWR_DEC_EN;
 584              		.loc 1 393 0
 585 00b4 2A4A     		ldr	r2, .L13+28
 586 00b6 2A4B     		ldr	r3, .L13+28
 587 00b8 1B78     		ldrb	r3, [r3]
 588 00ba DBB2     		uxtb	r3, r3
 589 00bc 23F00103 		bic	r3, r3, #1
 590 00c0 DBB2     		uxtb	r3, r3
 591 00c2 1370     		strb	r3, [r2]
 394:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DSM_REG &= (uint8)~ADC_STBY_PWR_DSM_EN;
 592              		.loc 1 394 0
 593 00c4 264A     		ldr	r2, .L13+28
 594 00c6 264B     		ldr	r3, .L13+28
 595 00c8 1B78     		ldrb	r3, [r3]
 596 00ca DBB2     		uxtb	r3, r3
 597 00cc 23F01003 		bic	r3, r3, #16
 598 00d0 DBB2     		uxtb	r3, r3
 599 00d2 1370     		strb	r3, [r2]
 395:Generated_Source\PSoC5/ADC.c **** 
 396:Generated_Source\PSoC5/ADC.c ****    /* Disable negative pumps for DSM  */
 397:Generated_Source\PSoC5/ADC.c ****     ADC_PUMP_CR1_REG &= (uint8)~(ADC_PUMP_CR1_CLKSEL | ADC_PUMP_CR1_FORCE );
 600              		.loc 1 397 0
 601 00d4 234A     		ldr	r2, .L13+32
 602 00d6 234B     		ldr	r3, .L13+32
 603 00d8 1B78     		ldrb	r3, [r3]
 604 00da DBB2     		uxtb	r3, r3
 605 00dc 23F00603 		bic	r3, r3, #6
 606 00e0 DBB2     		uxtb	r3, r3
 607 00e2 1370     		strb	r3, [r2]
 398:Generated_Source\PSoC5/ADC.c **** 
 399:Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 400:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 401:Generated_Source\PSoC5/ADC.c ****         ADC_PWRMGR_CLK_REG &= (uint8)~ADC_ACT_PWR_CLK_EN;
 608              		.loc 1 401 0
 609 00e4 204A     		ldr	r2, .L13+36
 610 00e6 204B     		ldr	r3, .L13+36
 611 00e8 1B78     		ldrb	r3, [r3]
 612 00ea DBB2     		uxtb	r3, r3
 613 00ec 23F00103 		bic	r3, r3, #1
 614 00f0 DBB2     		uxtb	r3, r3
 615 00f2 1370     		strb	r3, [r2]
 402:Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_STBY_PWR_CLK_EN;
 616              		.loc 1 402 0
 617 00f4 1D4A     		ldr	r2, .L13+40
 618 00f6 1D4B     		ldr	r3, .L13+40
 619 00f8 1B78     		ldrb	r3, [r3]
 620 00fa DBB2     		uxtb	r3, r3
 621 00fc 23F00103 		bic	r3, r3, #1
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 19


 622 0100 DBB2     		uxtb	r3, r3
 623 0102 1370     		strb	r3, [r2]
 403:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 404:Generated_Source\PSoC5/ADC.c **** 
 405:Generated_Source\PSoC5/ADC.c ****     /* Disable Modulator Chopping */
 406:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR2_REG &= (uint8)~ADC_DSM_MOD_CHOP_EN;
 624              		.loc 1 406 0
 625 0104 1A4A     		ldr	r2, .L13+44
 626 0106 1A4B     		ldr	r3, .L13+44
 627 0108 1B78     		ldrb	r3, [r3]
 628 010a DBB2     		uxtb	r3, r3
 629 010c 23F00803 		bic	r3, r3, #8
 630 0110 DBB2     		uxtb	r3, r3
 631 0112 1370     		strb	r3, [r2]
 407:Generated_Source\PSoC5/ADC.c ****     /* Disable power to charge pump clock */
 408:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ADC_ACT_PWR_CHARGE_PUMP_CLK_EN;
 632              		.loc 1 408 0
 633 0114 174A     		ldr	r2, .L13+48
 634 0116 174B     		ldr	r3, .L13+48
 635 0118 1B78     		ldrb	r3, [r3]
 636 011a DBB2     		uxtb	r3, r3
 637 011c 23F00203 		bic	r3, r3, #2
 638 0120 DBB2     		uxtb	r3, r3
 639 0122 1370     		strb	r3, [r2]
 409:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 640              		.loc 1 409 0
 641 0124 144A     		ldr	r2, .L13+52
 642 0126 144B     		ldr	r3, .L13+52
 643 0128 1B78     		ldrb	r3, [r3]
 644 012a DBB2     		uxtb	r3, r3
 645 012c 23F00203 		bic	r3, r3, #2
 646 0130 DBB2     		uxtb	r3, r3
 647 0132 1370     		strb	r3, [r2]
 410:Generated_Source\PSoC5/ADC.c ****     
 411:Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 648              		.loc 1 411 0
 649 0134 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 650 0136 1846     		mov	r0, r3
 651 0138 FFF7FEFF 		bl	CyExitCriticalSection
 412:Generated_Source\PSoC5/ADC.c **** }
 652              		.loc 1 412 0
 653 013c 00BF     		nop
 654 013e 0837     		adds	r7, r7, #8
 655              		.cfi_def_cfa_offset 8
 656 0140 BD46     		mov	sp, r7
 657              		.cfi_def_cfa_register 13
 658              		@ sp needed
 659 0142 80BD     		pop	{r7, pc}
 660              	.L14:
 661              		.align	2
 662              	.L13:
 663 0144 004E0040 		.word	1073761792
 664 0148 014E0040 		.word	1073761793
 665 014c F8460040 		.word	1073759992
 666 0150 F9460040 		.word	1073759993
 667 0154 91580040 		.word	1073764497
 668 0158 92580040 		.word	1073764498
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 20


 669 015c AA430040 		.word	1073759146
 670 0160 BA430040 		.word	1073759162
 671 0164 77580040 		.word	1073764471
 672 0168 A1430040 		.word	1073759137
 673 016c B1430040 		.word	1073759153
 674 0170 82580040 		.word	1073764482
 675 0174 A2430040 		.word	1073759138
 676 0178 B2430040 		.word	1073759154
 677              		.cfi_endproc
 678              	.LFE3:
 679              		.size	ADC_Stop, .-ADC_Stop
 680              		.section	.text.ADC_SetBufferGain,"ax",%progbits
 681              		.align	2
 682              		.global	ADC_SetBufferGain
 683              		.thumb
 684              		.thumb_func
 685              		.type	ADC_SetBufferGain, %function
 686              	ADC_SetBufferGain:
 687              	.LFB4:
 413:Generated_Source\PSoC5/ADC.c **** 
 414:Generated_Source\PSoC5/ADC.c **** 
 415:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetBufferGain
 417:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 418:Generated_Source\PSoC5/ADC.c **** *
 419:Generated_Source\PSoC5/ADC.c **** * Summary:
 420:Generated_Source\PSoC5/ADC.c **** *  Sets input buffer gain.
 421:Generated_Source\PSoC5/ADC.c **** *
 422:Generated_Source\PSoC5/ADC.c **** * Parameters:
 423:Generated_Source\PSoC5/ADC.c **** *  gain:  Two bit value to select a gain of 1, 2, 4, or 8.
 424:Generated_Source\PSoC5/ADC.c **** *
 425:Generated_Source\PSoC5/ADC.c **** * Return:
 426:Generated_Source\PSoC5/ADC.c **** *  None
 427:Generated_Source\PSoC5/ADC.c **** *
 428:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 429:Generated_Source\PSoC5/ADC.c **** void ADC_SetBufferGain(uint8 gain) 
 430:Generated_Source\PSoC5/ADC.c **** {
 688              		.loc 1 430 0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 16
 691              		@ frame_needed = 1, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 693 0000 80B4     		push	{r7}
 694              		.cfi_def_cfa_offset 4
 695              		.cfi_offset 7, -4
 696 0002 85B0     		sub	sp, sp, #20
 697              		.cfi_def_cfa_offset 24
 698 0004 00AF     		add	r7, sp, #0
 699              		.cfi_def_cfa_register 7
 700 0006 0346     		mov	r3, r0
 701 0008 FB71     		strb	r3, [r7, #7]
 431:Generated_Source\PSoC5/ADC.c ****     uint8 tmpReg;
 432:Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_DSM_BUF1_REG & (uint8)~ADC_DSM_GAIN_MASK;
 702              		.loc 1 432 0
 703 000a 0B4B     		ldr	r3, .L16
 704 000c 1B78     		ldrb	r3, [r3]
 705 000e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 21


 706 0010 23F00C03 		bic	r3, r3, #12
 707 0014 FB73     		strb	r3, [r7, #15]
 433:Generated_Source\PSoC5/ADC.c ****     tmpReg |= (uint8)(gain << ADC_DSM_GAIN_SHIFT) & ADC_DSM_GAIN_MASK;
 708              		.loc 1 433 0
 709 0016 FB79     		ldrb	r3, [r7, #7]
 710 0018 9B00     		lsls	r3, r3, #2
 711 001a DBB2     		uxtb	r3, r3
 712 001c 03F00C03 		and	r3, r3, #12
 713 0020 DAB2     		uxtb	r2, r3
 714 0022 FB7B     		ldrb	r3, [r7, #15]
 715 0024 1343     		orrs	r3, r3, r2
 716 0026 FB73     		strb	r3, [r7, #15]
 434:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_BUF1_REG = tmpReg;
 717              		.loc 1 434 0
 718 0028 034A     		ldr	r2, .L16
 719 002a FB7B     		ldrb	r3, [r7, #15]
 720 002c 1370     		strb	r3, [r2]
 435:Generated_Source\PSoC5/ADC.c **** }
 721              		.loc 1 435 0
 722 002e 00BF     		nop
 723 0030 1437     		adds	r7, r7, #20
 724              		.cfi_def_cfa_offset 4
 725 0032 BD46     		mov	sp, r7
 726              		.cfi_def_cfa_register 13
 727              		@ sp needed
 728 0034 80BC     		pop	{r7}
 729              		.cfi_restore 7
 730              		.cfi_def_cfa_offset 0
 731 0036 7047     		bx	lr
 732              	.L17:
 733              		.align	2
 734              	.L16:
 735 0038 9B580040 		.word	1073764507
 736              		.cfi_endproc
 737              	.LFE4:
 738              		.size	ADC_SetBufferGain, .-ADC_SetBufferGain
 739              		.section	.text.ADC_SetCoherency,"ax",%progbits
 740              		.align	2
 741              		.global	ADC_SetCoherency
 742              		.thumb
 743              		.thumb_func
 744              		.type	ADC_SetCoherency, %function
 745              	ADC_SetCoherency:
 746              	.LFB5:
 436:Generated_Source\PSoC5/ADC.c **** 
 437:Generated_Source\PSoC5/ADC.c **** 
 438:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 439:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetCoherency
 440:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 441:Generated_Source\PSoC5/ADC.c **** *
 442:Generated_Source\PSoC5/ADC.c **** * Summary:
 443:Generated_Source\PSoC5/ADC.c **** *  This function allows the user to change which of the ADC's 3 word
 444:Generated_Source\PSoC5/ADC.c **** *  result will trigger a coherency unlock. The ADC's result will not be
 445:Generated_Source\PSoC5/ADC.c **** *  updated until the set byte is read either by the ADC or DMA. 
 446:Generated_Source\PSoC5/ADC.c **** *  By default the LSB is the coherency byte for right alignment data format. 
 447:Generated_Source\PSoC5/ADC.c **** *  The middle or high byte is set automatically depend on left alignment 
 448:Generated_Source\PSoC5/ADC.c **** *  configuration for DMA data transfer.
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 22


 449:Generated_Source\PSoC5/ADC.c **** *  If DMA or if a custom API requires different byte to be read the last,
 450:Generated_Source\PSoC5/ADC.c **** *  this API should be used to set the last byte of the ADC result that is read. 
 451:Generated_Source\PSoC5/ADC.c **** *  If a multibyte read is performed either by DMA or the ARM processor, the
 452:Generated_Source\PSoC5/ADC.c **** *  coherency can be set to any byte in the last word read.
 453:Generated_Source\PSoC5/ADC.c **** *
 454:Generated_Source\PSoC5/ADC.c **** * Parameters:
 455:Generated_Source\PSoC5/ADC.c **** *  coherency:  Two bit value to set the coherency bit.
 456:Generated_Source\PSoC5/ADC.c **** *           00-Coherency checking off
 457:Generated_Source\PSoC5/ADC.c **** *           01-low byte is key byte
 458:Generated_Source\PSoC5/ADC.c **** *           02-middle byte is the key byte
 459:Generated_Source\PSoC5/ADC.c **** *           03-high byte is the key byte
 460:Generated_Source\PSoC5/ADC.c **** *
 461:Generated_Source\PSoC5/ADC.c **** * Return:
 462:Generated_Source\PSoC5/ADC.c **** *  None
 463:Generated_Source\PSoC5/ADC.c **** *
 464:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 465:Generated_Source\PSoC5/ADC.c **** void ADC_SetCoherency(uint8 coherency) 
 466:Generated_Source\PSoC5/ADC.c **** {
 747              		.loc 1 466 0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 16
 750              		@ frame_needed = 1, uses_anonymous_args = 0
 751              		@ link register save eliminated.
 752 0000 80B4     		push	{r7}
 753              		.cfi_def_cfa_offset 4
 754              		.cfi_offset 7, -4
 755 0002 85B0     		sub	sp, sp, #20
 756              		.cfi_def_cfa_offset 24
 757 0004 00AF     		add	r7, sp, #0
 758              		.cfi_def_cfa_register 7
 759 0006 0346     		mov	r3, r0
 760 0008 FB71     		strb	r3, [r7, #7]
 467:Generated_Source\PSoC5/ADC.c ****     uint8 tmpReg;
 468:Generated_Source\PSoC5/ADC.c **** 
 469:Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_DEC_COHER_REG & (uint8)~ADC_DEC_SAMP_KEY_MASK;
 761              		.loc 1 469 0
 762 000a 0A4B     		ldr	r3, .L19
 763 000c 1B78     		ldrb	r3, [r3]
 764 000e DBB2     		uxtb	r3, r3
 765 0010 23F00303 		bic	r3, r3, #3
 766 0014 FB73     		strb	r3, [r7, #15]
 470:Generated_Source\PSoC5/ADC.c ****     tmpReg |= coherency & ADC_DEC_SAMP_KEY_MASK;
 767              		.loc 1 470 0
 768 0016 FB79     		ldrb	r3, [r7, #7]
 769 0018 03F00303 		and	r3, r3, #3
 770 001c DAB2     		uxtb	r2, r3
 771 001e FB7B     		ldrb	r3, [r7, #15]
 772 0020 1343     		orrs	r3, r3, r2
 773 0022 FB73     		strb	r3, [r7, #15]
 471:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_COHER_REG = tmpReg;
 774              		.loc 1 471 0
 775 0024 034A     		ldr	r2, .L19
 776 0026 FB7B     		ldrb	r3, [r7, #15]
 777 0028 1370     		strb	r3, [r2]
 472:Generated_Source\PSoC5/ADC.c **** }
 778              		.loc 1 472 0
 779 002a 00BF     		nop
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 23


 780 002c 1437     		adds	r7, r7, #20
 781              		.cfi_def_cfa_offset 4
 782 002e BD46     		mov	sp, r7
 783              		.cfi_def_cfa_register 13
 784              		@ sp needed
 785 0030 80BC     		pop	{r7}
 786              		.cfi_restore 7
 787              		.cfi_def_cfa_offset 0
 788 0032 7047     		bx	lr
 789              	.L20:
 790              		.align	2
 791              	.L19:
 792 0034 144E0040 		.word	1073761812
 793              		.cfi_endproc
 794              	.LFE5:
 795              		.size	ADC_SetCoherency, .-ADC_SetCoherency
 796              		.global	__aeabi_ui2f
 797              		.global	__aeabi_fdiv
 798              		.global	__aeabi_fmul
 799              		.global	__aeabi_f2d
 800              		.global	__aeabi_dcmpgt
 801              		.global	__aeabi_f2uiz
 802              		.section	.text.ADC_SetGCOR,"ax",%progbits
 803              		.align	2
 804              		.global	ADC_SetGCOR
 805              		.thumb
 806              		.thumb_func
 807              		.type	ADC_SetGCOR, %function
 808              	ADC_SetGCOR:
 809              	.LFB6:
 473:Generated_Source\PSoC5/ADC.c **** 
 474:Generated_Source\PSoC5/ADC.c **** 
 475:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 476:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetGCOR
 477:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 478:Generated_Source\PSoC5/ADC.c **** *
 479:Generated_Source\PSoC5/ADC.c **** * Summary:
 480:Generated_Source\PSoC5/ADC.c **** *  Calculates a new GCOR value and writes it into the GCOR register. 
 481:Generated_Source\PSoC5/ADC.c **** *  The GCOR value is a 16-bit value that represents a gain of 0 to 2. 
 482:Generated_Source\PSoC5/ADC.c **** *  The ADC result is multiplied by this value before it is placed in the ADC 
 483:Generated_Source\PSoC5/ADC.c **** *  output registers. The numerical format for the GCOR value is:
 484:Generated_Source\PSoC5/ADC.c **** *  0x0000 -> 0.000
 485:Generated_Source\PSoC5/ADC.c **** *  0x8000 -> 1.000
 486:Generated_Source\PSoC5/ADC.c **** *  0xFFFF -> 1.99997
 487:Generated_Source\PSoC5/ADC.c **** *  When executing the function, the old GCOR value is multiplied by
 488:Generated_Source\PSoC5/ADC.c **** *  gainAdjust and reloaded into the GCOR register.
 489:Generated_Source\PSoC5/ADC.c **** *
 490:Generated_Source\PSoC5/ADC.c **** * Parameters:
 491:Generated_Source\PSoC5/ADC.c **** *  gainAdjust:  floating point value to set GCOR registers.
 492:Generated_Source\PSoC5/ADC.c **** *
 493:Generated_Source\PSoC5/ADC.c **** * Return:
 494:Generated_Source\PSoC5/ADC.c **** *  uint8: 0 - if GCOR value is within the expected range.
 495:Generated_Source\PSoC5/ADC.c **** *         1 - the correction value is outside GCOR value range of
 496:Generated_Source\PSoC5/ADC.c **** *             0.00 to 1.9999.
 497:Generated_Source\PSoC5/ADC.c **** *
 498:Generated_Source\PSoC5/ADC.c **** * Side Effects:  The GVAL register is set to the amount of valid bits in the
 499:Generated_Source\PSoC5/ADC.c **** *                GCOR  register minus one. If GVAL is 15 (0x0F), all 16 bits
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 24


 500:Generated_Source\PSoC5/ADC.c **** *                of the GCOR registers will be valid. If for example GVAL is
 501:Generated_Source\PSoC5/ADC.c **** *                11 (0x0B) only 12 bits will be valid. The least 4 bits will
 502:Generated_Source\PSoC5/ADC.c **** *                be lost when the GCOR value is shifted 4 places to the right.
 503:Generated_Source\PSoC5/ADC.c **** *
 504:Generated_Source\PSoC5/ADC.c **** ******************************************************************************/
 505:Generated_Source\PSoC5/ADC.c **** uint8 ADC_SetGCOR(float32 gainAdjust) 
 506:Generated_Source\PSoC5/ADC.c **** {
 810              		.loc 1 506 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 16
 813              		@ frame_needed = 1, uses_anonymous_args = 0
 814 0000 80B5     		push	{r7, lr}
 815              		.cfi_def_cfa_offset 8
 816              		.cfi_offset 7, -8
 817              		.cfi_offset 14, -4
 818 0002 84B0     		sub	sp, sp, #16
 819              		.cfi_def_cfa_offset 24
 820 0004 00AF     		add	r7, sp, #0
 821              		.cfi_def_cfa_register 7
 822 0006 7860     		str	r0, [r7, #4]	@ float
 507:Generated_Source\PSoC5/ADC.c ****     uint16 tmpReg;
 508:Generated_Source\PSoC5/ADC.c ****     uint8 status;
 509:Generated_Source\PSoC5/ADC.c ****     float32 tmpValue;
 510:Generated_Source\PSoC5/ADC.c **** 
 511:Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_gcor[ADC_Config - 1u].gcor;
 823              		.loc 1 511 0
 824 0008 254B     		ldr	r3, .L28+8
 825 000a 1B78     		ldrb	r3, [r3]
 826 000c DBB2     		uxtb	r3, r3
 827 000e 013B     		subs	r3, r3, #1
 828 0010 244A     		ldr	r2, .L28+12
 829 0012 32F82330 		ldrh	r3, [r2, r3, lsl #2]	@ movhi
 830 0016 BB81     		strh	r3, [r7, #12]	@ movhi
 512:Generated_Source\PSoC5/ADC.c ****     tmpValue = ((float32)tmpReg / (float32)ADC_IDEAL_GAIN_CONST);
 831              		.loc 1 512 0
 832 0018 BB89     		ldrh	r3, [r7, #12]
 833 001a 1846     		mov	r0, r3
 834 001c FFF7FEFF 		bl	__aeabi_ui2f
 835 0020 0346     		mov	r3, r0
 836 0022 4FF08E41 		mov	r1, #1191182336
 837 0026 1846     		mov	r0, r3
 838 0028 FFF7FEFF 		bl	__aeabi_fdiv
 839 002c 0346     		mov	r3, r0
 840 002e BB60     		str	r3, [r7, #8]	@ float
 513:Generated_Source\PSoC5/ADC.c ****     tmpValue = tmpValue * gainAdjust;
 841              		.loc 1 513 0
 842 0030 7968     		ldr	r1, [r7, #4]	@ float
 843 0032 B868     		ldr	r0, [r7, #8]	@ float
 844 0034 FFF7FEFF 		bl	__aeabi_fmul
 845 0038 0346     		mov	r3, r0
 846 003a BB60     		str	r3, [r7, #8]	@ float
 514:Generated_Source\PSoC5/ADC.c **** 
 515:Generated_Source\PSoC5/ADC.c ****     if (tmpValue > 1.9999)
 847              		.loc 1 515 0
 848 003c B868     		ldr	r0, [r7, #8]	@ float
 849 003e FFF7FEFF 		bl	__aeabi_f2d
 850 0042 15A3     		adr	r3, .L28
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 25


 851 0044 D3E90023 		ldrd	r2, [r3]
 852 0048 FFF7FEFF 		bl	__aeabi_dcmpgt
 853 004c 0346     		mov	r3, r0
 854 004e 002B     		cmp	r3, #0
 855 0050 02D0     		beq	.L27
 516:Generated_Source\PSoC5/ADC.c ****     {
 517:Generated_Source\PSoC5/ADC.c ****         status = 1u;
 856              		.loc 1 517 0
 857 0052 0123     		movs	r3, #1
 858 0054 FB73     		strb	r3, [r7, #15]
 859 0056 18E0     		b	.L24
 860              	.L27:
 518:Generated_Source\PSoC5/ADC.c ****     }
 519:Generated_Source\PSoC5/ADC.c ****     else
 520:Generated_Source\PSoC5/ADC.c ****     {
 521:Generated_Source\PSoC5/ADC.c ****         tmpValue *= (float32)ADC_IDEAL_GAIN_CONST;
 861              		.loc 1 521 0
 862 0058 4FF08E41 		mov	r1, #1191182336
 863 005c B868     		ldr	r0, [r7, #8]	@ float
 864 005e FFF7FEFF 		bl	__aeabi_fmul
 865 0062 0346     		mov	r3, r0
 866 0064 BB60     		str	r3, [r7, #8]	@ float
 522:Generated_Source\PSoC5/ADC.c **** 		tmpReg = (uint16)tmpValue;
 867              		.loc 1 522 0
 868 0066 B868     		ldr	r0, [r7, #8]	@ float
 869 0068 FFF7FEFF 		bl	__aeabi_f2uiz
 870 006c 0346     		mov	r3, r0
 871 006e BB81     		strh	r3, [r7, #12]	@ movhi
 523:Generated_Source\PSoC5/ADC.c ****         CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, tmpReg);
 872              		.loc 1 523 0
 873 0070 0D4A     		ldr	r2, .L28+16
 874 0072 BB89     		ldrh	r3, [r7, #12]	@ movhi
 875 0074 1380     		strh	r3, [r2]	@ movhi
 524:Generated_Source\PSoC5/ADC.c ****         /* Update gain array to be used by SelectConfiguration() API */
 525:Generated_Source\PSoC5/ADC.c ****        ADC_gcor[ADC_Config - 1u].gcor = tmpReg;
 876              		.loc 1 525 0
 877 0076 0A4B     		ldr	r3, .L28+8
 878 0078 1B78     		ldrb	r3, [r3]
 879 007a DBB2     		uxtb	r3, r3
 880 007c 013B     		subs	r3, r3, #1
 881 007e 0949     		ldr	r1, .L28+12
 882 0080 BA89     		ldrh	r2, [r7, #12]	@ movhi
 883 0082 21F82320 		strh	r2, [r1, r3, lsl #2]	@ movhi
 526:Generated_Source\PSoC5/ADC.c **** 
 527:Generated_Source\PSoC5/ADC.c ****         status = 0u;
 884              		.loc 1 527 0
 885 0086 0023     		movs	r3, #0
 886 0088 FB73     		strb	r3, [r7, #15]
 887              	.L24:
 528:Generated_Source\PSoC5/ADC.c **** 
 529:Generated_Source\PSoC5/ADC.c ****     }
 530:Generated_Source\PSoC5/ADC.c ****     return(status);
 888              		.loc 1 530 0
 889 008a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 531:Generated_Source\PSoC5/ADC.c **** }
 890              		.loc 1 531 0
 891 008c 1846     		mov	r0, r3
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 26


 892 008e 1037     		adds	r7, r7, #16
 893              		.cfi_def_cfa_offset 8
 894 0090 BD46     		mov	sp, r7
 895              		.cfi_def_cfa_register 13
 896              		@ sp needed
 897 0092 80BD     		pop	{r7, pc}
 898              	.L29:
 899 0094 AFF30080 		.align	3
 900              	.L28:
 901 0098 8F537424 		.word	611603343
 902 009c 97FFFF3F 		.word	1073741719
 903 00a0 00000000 		.word	ADC_Config
 904 00a4 04000000 		.word	ADC_gcor
 905 00a8 0C4E0040 		.word	1073761804
 906              		.cfi_endproc
 907              	.LFE6:
 908              		.size	ADC_SetGCOR, .-ADC_SetGCOR
 909              		.section	.text.ADC_ReadGCOR,"ax",%progbits
 910              		.align	2
 911              		.global	ADC_ReadGCOR
 912              		.thumb
 913              		.thumb_func
 914              		.type	ADC_ReadGCOR, %function
 915              	ADC_ReadGCOR:
 916              	.LFB7:
 532:Generated_Source\PSoC5/ADC.c **** 
 533:Generated_Source\PSoC5/ADC.c **** 
 534:Generated_Source\PSoC5/ADC.c **** /******************************************************************************
 535:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_ReadGCOR
 536:Generated_Source\PSoC5/ADC.c **** *******************************************************************************
 537:Generated_Source\PSoC5/ADC.c **** *
 538:Generated_Source\PSoC5/ADC.c **** * Summary:
 539:Generated_Source\PSoC5/ADC.c **** *  This API returns the current GCOR register value, normalized based on the
 540:Generated_Source\PSoC5/ADC.c **** *  GVAL register settings.
 541:Generated_Source\PSoC5/ADC.c **** *  For example, if the GCOR value is 0x0812 and the GVAL register is set to 
 542:Generated_Source\PSoC5/ADC.c **** *  11 (0x0B) then the returned value will be shifted by for bits to the left.
 543:Generated_Source\PSoC5/ADC.c **** *  (Actual GCOR value = 0x0812, returned value = 0x8120)
 544:Generated_Source\PSoC5/ADC.c **** *
 545:Generated_Source\PSoC5/ADC.c **** * Parameters:
 546:Generated_Source\PSoC5/ADC.c **** *  None
 547:Generated_Source\PSoC5/ADC.c **** *
 548:Generated_Source\PSoC5/ADC.c **** * Return:
 549:Generated_Source\PSoC5/ADC.c **** *  uint16:  Normalized GCOR value.
 550:Generated_Source\PSoC5/ADC.c **** *
 551:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 552:Generated_Source\PSoC5/ADC.c **** uint16 ADC_ReadGCOR(void) 
 553:Generated_Source\PSoC5/ADC.c **** {
 917              		.loc 1 553 0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 8
 920              		@ frame_needed = 1, uses_anonymous_args = 0
 921              		@ link register save eliminated.
 922 0000 80B4     		push	{r7}
 923              		.cfi_def_cfa_offset 4
 924              		.cfi_offset 7, -4
 925 0002 83B0     		sub	sp, sp, #12
 926              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 27


 927 0004 00AF     		add	r7, sp, #0
 928              		.cfi_def_cfa_register 7
 554:Generated_Source\PSoC5/ADC.c ****     uint8 gValue;
 555:Generated_Source\PSoC5/ADC.c ****     uint16 gcorValue;
 556:Generated_Source\PSoC5/ADC.c **** 
 557:Generated_Source\PSoC5/ADC.c ****     gValue = ADC_DEC_GVAL_REG;
 929              		.loc 1 557 0
 930 0006 0B4B     		ldr	r3, .L33
 931 0008 1B78     		ldrb	r3, [r3]
 932 000a 7B71     		strb	r3, [r7, #5]
 558:Generated_Source\PSoC5/ADC.c ****     gcorValue = CY_GET_REG16(ADC_DEC_GCOR_16B_PTR);
 933              		.loc 1 558 0
 934 000c 0A4B     		ldr	r3, .L33+4
 935 000e 1B88     		ldrh	r3, [r3]	@ movhi
 936 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 559:Generated_Source\PSoC5/ADC.c **** 
 560:Generated_Source\PSoC5/ADC.c ****     if (gValue < ADC_MAX_GVAL)
 937              		.loc 1 560 0
 938 0012 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 939 0014 0E2B     		cmp	r3, #14
 940 0016 06D8     		bhi	.L31
 561:Generated_Source\PSoC5/ADC.c ****     {
 562:Generated_Source\PSoC5/ADC.c ****         gcorValue <<= ADC_MAX_GVAL - gValue;
 941              		.loc 1 562 0
 942 0018 FA88     		ldrh	r2, [r7, #6]
 943 001a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 944 001c C3F10F03 		rsb	r3, r3, #15
 945 0020 02FA03F3 		lsl	r3, r2, r3
 946 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 947              	.L31:
 563:Generated_Source\PSoC5/ADC.c ****     }
 564:Generated_Source\PSoC5/ADC.c **** 
 565:Generated_Source\PSoC5/ADC.c ****     return gcorValue;
 948              		.loc 1 565 0
 949 0026 FB88     		ldrh	r3, [r7, #6]
 566:Generated_Source\PSoC5/ADC.c **** }
 950              		.loc 1 566 0
 951 0028 1846     		mov	r0, r3
 952 002a 0C37     		adds	r7, r7, #12
 953              		.cfi_def_cfa_offset 4
 954 002c BD46     		mov	sp, r7
 955              		.cfi_def_cfa_register 13
 956              		@ sp needed
 957 002e 80BC     		pop	{r7}
 958              		.cfi_restore 7
 959              		.cfi_def_cfa_offset 0
 960 0030 7047     		bx	lr
 961              	.L34:
 962 0032 00BF     		.align	2
 963              	.L33:
 964 0034 0E4E0040 		.word	1073761806
 965 0038 0C4E0040 		.word	1073761804
 966              		.cfi_endproc
 967              	.LFE7:
 968              		.size	ADC_ReadGCOR, .-ADC_ReadGCOR
 969              		.section	.text.ADC_StartConvert,"ax",%progbits
 970              		.align	2
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 28


 971              		.global	ADC_StartConvert
 972              		.thumb
 973              		.thumb_func
 974              		.type	ADC_StartConvert, %function
 975              	ADC_StartConvert:
 976              	.LFB8:
 567:Generated_Source\PSoC5/ADC.c **** 
 568:Generated_Source\PSoC5/ADC.c **** 
 569:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 570:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_StartConvert
 571:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 572:Generated_Source\PSoC5/ADC.c **** *
 573:Generated_Source\PSoC5/ADC.c **** * Summary:
 574:Generated_Source\PSoC5/ADC.c **** *  Forces the ADC to initiate a conversion. If in the "Single Sample"
 575:Generated_Source\PSoC5/ADC.c **** *  mode, one conversion will be performed then the ADC will halt. If in
 576:Generated_Source\PSoC5/ADC.c **** *  one of the other three conversion modes, the ADC will run
 577:Generated_Source\PSoC5/ADC.c **** *  continuously until the ADC_Stop() or ADC_StopConvert() is called.
 578:Generated_Source\PSoC5/ADC.c **** *
 579:Generated_Source\PSoC5/ADC.c **** * Parameters:
 580:Generated_Source\PSoC5/ADC.c **** *  None
 581:Generated_Source\PSoC5/ADC.c **** *
 582:Generated_Source\PSoC5/ADC.c **** * Return:
 583:Generated_Source\PSoC5/ADC.c **** *  None
 584:Generated_Source\PSoC5/ADC.c **** *
 585:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 586:Generated_Source\PSoC5/ADC.c **** void ADC_StartConvert(void) 
 587:Generated_Source\PSoC5/ADC.c **** {
 977              		.loc 1 587 0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 0
 980              		@ frame_needed = 1, uses_anonymous_args = 0
 981              		@ link register save eliminated.
 982 0000 80B4     		push	{r7}
 983              		.cfi_def_cfa_offset 4
 984              		.cfi_offset 7, -4
 985 0002 00AF     		add	r7, sp, #0
 986              		.cfi_def_cfa_register 7
 588:Generated_Source\PSoC5/ADC.c ****     /* Start the conversion */
 589:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG |= ADC_DEC_START_CONV;
 987              		.loc 1 589 0
 988 0004 054A     		ldr	r2, .L36
 989 0006 054B     		ldr	r3, .L36
 990 0008 1B78     		ldrb	r3, [r3]
 991 000a DBB2     		uxtb	r3, r3
 992 000c 43F00103 		orr	r3, r3, #1
 993 0010 DBB2     		uxtb	r3, r3
 994 0012 1370     		strb	r3, [r2]
 590:Generated_Source\PSoC5/ADC.c **** }
 995              		.loc 1 590 0
 996 0014 00BF     		nop
 997 0016 BD46     		mov	sp, r7
 998              		.cfi_def_cfa_register 13
 999              		@ sp needed
 1000 0018 80BC     		pop	{r7}
 1001              		.cfi_restore 7
 1002              		.cfi_def_cfa_offset 0
 1003 001a 7047     		bx	lr
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 29


 1004              	.L37:
 1005              		.align	2
 1006              	.L36:
 1007 001c 004E0040 		.word	1073761792
 1008              		.cfi_endproc
 1009              	.LFE8:
 1010              		.size	ADC_StartConvert, .-ADC_StartConvert
 1011              		.section	.text.ADC_StopConvert,"ax",%progbits
 1012              		.align	2
 1013              		.global	ADC_StopConvert
 1014              		.thumb
 1015              		.thumb_func
 1016              		.type	ADC_StopConvert, %function
 1017              	ADC_StopConvert:
 1018              	.LFB9:
 591:Generated_Source\PSoC5/ADC.c **** 
 592:Generated_Source\PSoC5/ADC.c **** 
 593:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 594:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_StopConvert
 595:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 596:Generated_Source\PSoC5/ADC.c **** *
 597:Generated_Source\PSoC5/ADC.c **** * Summary:
 598:Generated_Source\PSoC5/ADC.c **** *  Forces the ADC to stop all conversions. If the ADC is in the middle of a
 599:Generated_Source\PSoC5/ADC.c **** *  conversion, the ADC will be reset and not provide a result for that partial
 600:Generated_Source\PSoC5/ADC.c **** *  conversion.
 601:Generated_Source\PSoC5/ADC.c **** *
 602:Generated_Source\PSoC5/ADC.c **** * Parameters:
 603:Generated_Source\PSoC5/ADC.c **** *  None
 604:Generated_Source\PSoC5/ADC.c **** *
 605:Generated_Source\PSoC5/ADC.c **** * Return:
 606:Generated_Source\PSoC5/ADC.c **** *  None
 607:Generated_Source\PSoC5/ADC.c **** *
 608:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 609:Generated_Source\PSoC5/ADC.c **** void ADC_StopConvert(void) 
 610:Generated_Source\PSoC5/ADC.c **** {
 1019              		.loc 1 610 0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 1, uses_anonymous_args = 0
 1023              		@ link register save eliminated.
 1024 0000 80B4     		push	{r7}
 1025              		.cfi_def_cfa_offset 4
 1026              		.cfi_offset 7, -4
 1027 0002 00AF     		add	r7, sp, #0
 1028              		.cfi_def_cfa_register 7
 611:Generated_Source\PSoC5/ADC.c ****     /* Stop all conversions */
 612:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG &= (uint8)~ADC_DEC_START_CONV;
 1029              		.loc 1 612 0
 1030 0004 054A     		ldr	r2, .L39
 1031 0006 054B     		ldr	r3, .L39
 1032 0008 1B78     		ldrb	r3, [r3]
 1033 000a DBB2     		uxtb	r3, r3
 1034 000c 23F00103 		bic	r3, r3, #1
 1035 0010 DBB2     		uxtb	r3, r3
 1036 0012 1370     		strb	r3, [r2]
 613:Generated_Source\PSoC5/ADC.c **** }
 1037              		.loc 1 613 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 30


 1038 0014 00BF     		nop
 1039 0016 BD46     		mov	sp, r7
 1040              		.cfi_def_cfa_register 13
 1041              		@ sp needed
 1042 0018 80BC     		pop	{r7}
 1043              		.cfi_restore 7
 1044              		.cfi_def_cfa_offset 0
 1045 001a 7047     		bx	lr
 1046              	.L40:
 1047              		.align	2
 1048              	.L39:
 1049 001c 004E0040 		.word	1073761792
 1050              		.cfi_endproc
 1051              	.LFE9:
 1052              		.size	ADC_StopConvert, .-ADC_StopConvert
 1053              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 1054              		.align	2
 1055              		.global	ADC_IsEndConversion
 1056              		.thumb
 1057              		.thumb_func
 1058              		.type	ADC_IsEndConversion, %function
 1059              	ADC_IsEndConversion:
 1060              	.LFB10:
 614:Generated_Source\PSoC5/ADC.c **** 
 615:Generated_Source\PSoC5/ADC.c **** 
 616:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 617:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_IsEndConversion
 618:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 619:Generated_Source\PSoC5/ADC.c **** *
 620:Generated_Source\PSoC5/ADC.c **** * Summary:
 621:Generated_Source\PSoC5/ADC.c **** *  Checks the status that the most recently started conversion has completed.
 622:Generated_Source\PSoC5/ADC.c **** *  The status is cleared by any of ADC_GetResult8(), ADC_GetResult16() or 
 623:Generated_Source\PSoC5/ADC.c **** *  ADC_GetResult32() API.
 624:Generated_Source\PSoC5/ADC.c **** *  This function provides the programmer with two options. In one mode this 
 625:Generated_Source\PSoC5/ADC.c **** *  function immediately returns with the conversion status. In the other mode,
 626:Generated_Source\PSoC5/ADC.c **** *  the function does not return (blocking) until the conversion has completed.
 627:Generated_Source\PSoC5/ADC.c **** *
 628:Generated_Source\PSoC5/ADC.c **** * Parameters:
 629:Generated_Source\PSoC5/ADC.c **** *  retMode: Check conversion return mode. See the following table for options.
 630:Generated_Source\PSoC5/ADC.c **** *   ADC_RETURN_STATUS -   Immediately returns conversion result
 631:Generated_Source\PSoC5/ADC.c **** *                                      status.
 632:Generated_Source\PSoC5/ADC.c **** *   ADC_WAIT_FOR_RESULT - Does not return until ADC conversion
 633:Generated_Source\PSoC5/ADC.c **** *                                      is complete.
 634:Generated_Source\PSoC5/ADC.c **** *
 635:Generated_Source\PSoC5/ADC.c **** * Return:
 636:Generated_Source\PSoC5/ADC.c **** *  If a nonzero value is returned, the last conversion has completed.
 637:Generated_Source\PSoC5/ADC.c **** *  If the returned value is zero, the ADC is still calculating the last result.
 638:Generated_Source\PSoC5/ADC.c **** *
 639:Generated_Source\PSoC5/ADC.c **** * Global variables:
 640:Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Used to check whether conversion is complete
 641:Generated_Source\PSoC5/ADC.c **** *  or not for single sample mode with resolution is above 16
 642:Generated_Source\PSoC5/ADC.c **** *
 643:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 644:Generated_Source\PSoC5/ADC.c **** uint8 ADC_IsEndConversion(uint8 retMode) 
 645:Generated_Source\PSoC5/ADC.c **** {
 1061              		.loc 1 645 0
 1062              		.cfi_startproc
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 31


 1063              		@ args = 0, pretend = 0, frame = 16
 1064              		@ frame_needed = 1, uses_anonymous_args = 0
 1065              		@ link register save eliminated.
 1066 0000 80B4     		push	{r7}
 1067              		.cfi_def_cfa_offset 4
 1068              		.cfi_offset 7, -4
 1069 0002 85B0     		sub	sp, sp, #20
 1070              		.cfi_def_cfa_offset 24
 1071 0004 00AF     		add	r7, sp, #0
 1072              		.cfi_def_cfa_register 7
 1073 0006 0346     		mov	r3, r0
 1074 0008 FB71     		strb	r3, [r7, #7]
 1075              	.L45:
 646:Generated_Source\PSoC5/ADC.c ****     uint8 status;
 647:Generated_Source\PSoC5/ADC.c **** 
 648:Generated_Source\PSoC5/ADC.c ****     do
 649:Generated_Source\PSoC5/ADC.c ****     {
 650:Generated_Source\PSoC5/ADC.c ****         /* Check for stop convert if conversion mode is Single Sample with
 651:Generated_Source\PSoC5/ADC.c ****         *   resolution above 16 bit
 652:Generated_Source\PSoC5/ADC.c ****         */
 653:Generated_Source\PSoC5/ADC.c ****         if(ADC_stopConversion != 0u)
 1076              		.loc 1 653 0
 1077 000a 0D4B     		ldr	r3, .L47
 1078 000c 1B78     		ldrb	r3, [r3]
 1079 000e DBB2     		uxtb	r3, r3
 1080 0010 002B     		cmp	r3, #0
 1081 0012 03D0     		beq	.L42
 654:Generated_Source\PSoC5/ADC.c ****         {
 655:Generated_Source\PSoC5/ADC.c ****             status = ADC_convDone;
 1082              		.loc 1 655 0
 1083 0014 0B4B     		ldr	r3, .L47+4
 1084 0016 1B78     		ldrb	r3, [r3]
 1085 0018 FB73     		strb	r3, [r7, #15]
 1086 001a 05E0     		b	.L43
 1087              	.L42:
 656:Generated_Source\PSoC5/ADC.c ****         }
 657:Generated_Source\PSoC5/ADC.c ****         else
 658:Generated_Source\PSoC5/ADC.c ****         {
 659:Generated_Source\PSoC5/ADC.c ****             status = ADC_DEC_SR_REG & ADC_DEC_CONV_DONE;
 1088              		.loc 1 659 0
 1089 001c 0A4B     		ldr	r3, .L47+8
 1090 001e 1B78     		ldrb	r3, [r3]
 1091 0020 DBB2     		uxtb	r3, r3
 1092 0022 03F00103 		and	r3, r3, #1
 1093 0026 FB73     		strb	r3, [r7, #15]
 1094              	.L43:
 660:Generated_Source\PSoC5/ADC.c ****         }
 661:Generated_Source\PSoC5/ADC.c ****     }while((status != ADC_DEC_CONV_DONE) && (retMode == ADC_WAIT_FOR_RESULT));
 1095              		.loc 1 661 0
 1096 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1097 002a 012B     		cmp	r3, #1
 1098 002c 02D0     		beq	.L44
 1099              		.loc 1 661 0 is_stmt 0 discriminator 1
 1100 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1101 0030 002B     		cmp	r3, #0
 1102 0032 EAD0     		beq	.L45
 1103              	.L44:
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 32


 662:Generated_Source\PSoC5/ADC.c **** 
 663:Generated_Source\PSoC5/ADC.c ****     return(status);
 1104              		.loc 1 663 0 is_stmt 1
 1105 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 664:Generated_Source\PSoC5/ADC.c **** }
 1106              		.loc 1 664 0
 1107 0036 1846     		mov	r0, r3
 1108 0038 1437     		adds	r7, r7, #20
 1109              		.cfi_def_cfa_offset 4
 1110 003a BD46     		mov	sp, r7
 1111              		.cfi_def_cfa_register 13
 1112              		@ sp needed
 1113 003c 80BC     		pop	{r7}
 1114              		.cfi_restore 7
 1115              		.cfi_def_cfa_offset 0
 1116 003e 7047     		bx	lr
 1117              	.L48:
 1118              		.align	2
 1119              	.L47:
 1120 0040 00000000 		.word	ADC_stopConversion
 1121 0044 00000000 		.word	ADC_convDone
 1122 0048 014E0040 		.word	1073761793
 1123              		.cfi_endproc
 1124              	.LFE10:
 1125              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 1126              		.section	.text.ADC_GetResult8,"ax",%progbits
 1127              		.align	2
 1128              		.global	ADC_GetResult8
 1129              		.thumb
 1130              		.thumb_func
 1131              		.type	ADC_GetResult8, %function
 1132              	ADC_GetResult8:
 1133              	.LFB11:
 665:Generated_Source\PSoC5/ADC.c **** 
 666:Generated_Source\PSoC5/ADC.c **** 
 667:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult8
 669:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC5/ADC.c **** *
 671:Generated_Source\PSoC5/ADC.c **** * Summary:
 672:Generated_Source\PSoC5/ADC.c **** *  This function returns the result of an 8-bit conversion. If the
 673:Generated_Source\PSoC5/ADC.c **** *  resolution is set greater than 8-bits, the LSB of the result will be
 674:Generated_Source\PSoC5/ADC.c **** *  returned. When the ADC is configured for 8-bit single ended mode,
 675:Generated_Source\PSoC5/ADC.c **** *  the ADC_GetResult16() function should be used instead. This
 676:Generated_Source\PSoC5/ADC.c **** *  function returns only signed 8-bit values. The maximum positive
 677:Generated_Source\PSoC5/ADC.c **** *  signed 8-bit value is 127, but in singled ended 8-bit mode, the
 678:Generated_Source\PSoC5/ADC.c **** *  maximum positive value is 255.
 679:Generated_Source\PSoC5/ADC.c **** *
 680:Generated_Source\PSoC5/ADC.c **** * Parameters:
 681:Generated_Source\PSoC5/ADC.c **** *  None
 682:Generated_Source\PSoC5/ADC.c **** *
 683:Generated_Source\PSoC5/ADC.c **** * Return:
 684:Generated_Source\PSoC5/ADC.c **** *  int8: The LSB of the last ADC conversion.
 685:Generated_Source\PSoC5/ADC.c **** *
 686:Generated_Source\PSoC5/ADC.c **** * Global variables:
 687:Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Cleared in single sample mode with resolution
 688:Generated_Source\PSoC5/ADC.c **** *                              above 16 bits
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 33


 689:Generated_Source\PSoC5/ADC.c **** *
 690:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 691:Generated_Source\PSoC5/ADC.c **** int8 ADC_GetResult8( void ) 
 692:Generated_Source\PSoC5/ADC.c **** {
 1134              		.loc 1 692 0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 8
 1137              		@ frame_needed = 1, uses_anonymous_args = 0
 1138              		@ link register save eliminated.
 1139 0000 80B4     		push	{r7}
 1140              		.cfi_def_cfa_offset 4
 1141              		.cfi_offset 7, -4
 1142 0002 83B0     		sub	sp, sp, #12
 1143              		.cfi_def_cfa_offset 16
 1144 0004 00AF     		add	r7, sp, #0
 1145              		.cfi_def_cfa_register 7
 693:Generated_Source\PSoC5/ADC.c ****     int8 result;
 694:Generated_Source\PSoC5/ADC.c ****     uint8 coherency;
 695:Generated_Source\PSoC5/ADC.c **** 
 696:Generated_Source\PSoC5/ADC.c ****     /* Read active coherency configuration */
 697:Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 1146              		.loc 1 697 0
 1147 0006 124B     		ldr	r3, .L54
 1148 0008 1B78     		ldrb	r3, [r3]
 1149 000a DBB2     		uxtb	r3, r3
 1150 000c 03F00303 		and	r3, r3, #3
 1151 0010 FB71     		strb	r3, [r7, #7]
 698:Generated_Source\PSoC5/ADC.c **** 
 699:Generated_Source\PSoC5/ADC.c ****     result = (int8)ADC_DEC_SAMP_REG;
 1152              		.loc 1 699 0
 1153 0012 104B     		ldr	r3, .L54+4
 1154 0014 1B78     		ldrb	r3, [r3]
 1155 0016 DBB2     		uxtb	r3, r3
 1156 0018 BB71     		strb	r3, [r7, #6]
 700:Generated_Source\PSoC5/ADC.c **** 
 701:Generated_Source\PSoC5/ADC.c ****     if(coherency == ADC_DEC_SAMP_KEY_MID)
 1157              		.loc 1 701 0
 1158 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1159 001c 022B     		cmp	r3, #2
 1160 001e 02D1     		bne	.L50
 702:Generated_Source\PSoC5/ADC.c ****     {   /* Dummy read of the middle byte to unlock the coherency */
 703:Generated_Source\PSoC5/ADC.c ****         (void)ADC_DEC_SAMPM_REG;
 1161              		.loc 1 703 0
 1162 0020 0D4B     		ldr	r3, .L54+8
 1163 0022 1B78     		ldrb	r3, [r3]
 1164 0024 04E0     		b	.L51
 1165              	.L50:
 704:Generated_Source\PSoC5/ADC.c ****     }
 705:Generated_Source\PSoC5/ADC.c ****     else  if(coherency == ADC_DEC_SAMP_KEY_HIGH)
 1166              		.loc 1 705 0
 1167 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1168 0028 032B     		cmp	r3, #3
 1169 002a 01D1     		bne	.L51
 706:Generated_Source\PSoC5/ADC.c ****     {   /* Dummy read of the MSB byte to unlock the coherency */
 707:Generated_Source\PSoC5/ADC.c ****         (void)ADC_DEC_SAMPH_REG;
 1170              		.loc 1 707 0
 1171 002c 0B4B     		ldr	r3, .L54+12
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 34


 1172 002e 1B78     		ldrb	r3, [r3]
 1173              	.L51:
 708:Generated_Source\PSoC5/ADC.c ****     }
 709:Generated_Source\PSoC5/ADC.c ****     else /*No action required for other coherency */
 710:Generated_Source\PSoC5/ADC.c ****     {
 711:Generated_Source\PSoC5/ADC.c ****     }
 712:Generated_Source\PSoC5/ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 713:Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 1174              		.loc 1 713 0
 1175 0030 0B4B     		ldr	r3, .L54+16
 1176 0032 1B78     		ldrb	r3, [r3]
 1177 0034 DBB2     		uxtb	r3, r3
 1178 0036 002B     		cmp	r3, #0
 1179 0038 02D0     		beq	.L52
 714:Generated_Source\PSoC5/ADC.c ****     {
 715:Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 1180              		.loc 1 715 0
 1181 003a 0A4B     		ldr	r3, .L54+20
 1182 003c 0022     		movs	r2, #0
 1183 003e 1A70     		strb	r2, [r3]
 1184              	.L52:
 716:Generated_Source\PSoC5/ADC.c ****     }
 717:Generated_Source\PSoC5/ADC.c ****     return (result);
 1185              		.loc 1 717 0
 1186 0040 97F90630 		ldrsb	r3, [r7, #6]
 718:Generated_Source\PSoC5/ADC.c **** }
 1187              		.loc 1 718 0
 1188 0044 1846     		mov	r0, r3
 1189 0046 0C37     		adds	r7, r7, #12
 1190              		.cfi_def_cfa_offset 4
 1191 0048 BD46     		mov	sp, r7
 1192              		.cfi_def_cfa_register 13
 1193              		@ sp needed
 1194 004a 80BC     		pop	{r7}
 1195              		.cfi_restore 7
 1196              		.cfi_def_cfa_offset 0
 1197 004c 7047     		bx	lr
 1198              	.L55:
 1199 004e 00BF     		.align	2
 1200              	.L54:
 1201 0050 144E0040 		.word	1073761812
 1202 0054 104E0040 		.word	1073761808
 1203 0058 114E0040 		.word	1073761809
 1204 005c 124E0040 		.word	1073761810
 1205 0060 00000000 		.word	ADC_stopConversion
 1206 0064 00000000 		.word	ADC_convDone
 1207              		.cfi_endproc
 1208              	.LFE11:
 1209              		.size	ADC_GetResult8, .-ADC_GetResult8
 1210              		.section	.text.ADC_GetResult16,"ax",%progbits
 1211              		.align	2
 1212              		.global	ADC_GetResult16
 1213              		.thumb
 1214              		.thumb_func
 1215              		.type	ADC_GetResult16, %function
 1216              	ADC_GetResult16:
 1217              	.LFB12:
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 35


 719:Generated_Source\PSoC5/ADC.c **** 
 720:Generated_Source\PSoC5/ADC.c **** 
 721:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 722:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult16
 723:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 724:Generated_Source\PSoC5/ADC.c **** *
 725:Generated_Source\PSoC5/ADC.c **** * Summary:
 726:Generated_Source\PSoC5/ADC.c **** *  Returns a 16-bit result for a conversion with a result that has a
 727:Generated_Source\PSoC5/ADC.c **** *  resolution of 8 to 16 bits. If the resolution is set greater than 16-bits,
 728:Generated_Source\PSoC5/ADC.c **** *  it will return the 16 least significant bits of the result. When the ADC
 729:Generated_Source\PSoC5/ADC.c **** *  is configured for 16-bit single ended mode, the ADC_GetResult32()
 730:Generated_Source\PSoC5/ADC.c **** *  function should be used instead. This function returns only signed
 731:Generated_Source\PSoC5/ADC.c **** *  16-bit result, which allows a maximum positive value of 32767, not 65535.
 732:Generated_Source\PSoC5/ADC.c **** *  This function supports different coherency settings.
 733:Generated_Source\PSoC5/ADC.c **** *
 734:Generated_Source\PSoC5/ADC.c **** * Parameters:
 735:Generated_Source\PSoC5/ADC.c **** *   void
 736:Generated_Source\PSoC5/ADC.c **** *
 737:Generated_Source\PSoC5/ADC.c **** * Return:
 738:Generated_Source\PSoC5/ADC.c **** *  int16:  ADC result.
 739:Generated_Source\PSoC5/ADC.c **** *
 740:Generated_Source\PSoC5/ADC.c **** * Global variables:
 741:Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Cleared in single sample mode with resolution
 742:Generated_Source\PSoC5/ADC.c **** *                              above 16 bits
 743:Generated_Source\PSoC5/ADC.c **** *
 744:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 745:Generated_Source\PSoC5/ADC.c **** int16 ADC_GetResult16(void) 
 746:Generated_Source\PSoC5/ADC.c **** {
 1218              		.loc 1 746 0
 1219              		.cfi_startproc
 1220              		@ args = 0, pretend = 0, frame = 8
 1221              		@ frame_needed = 1, uses_anonymous_args = 0
 1222              		@ link register save eliminated.
 1223 0000 80B4     		push	{r7}
 1224              		.cfi_def_cfa_offset 4
 1225              		.cfi_offset 7, -4
 1226 0002 83B0     		sub	sp, sp, #12
 1227              		.cfi_def_cfa_offset 16
 1228 0004 00AF     		add	r7, sp, #0
 1229              		.cfi_def_cfa_register 7
 747:Generated_Source\PSoC5/ADC.c ****     uint16 result;
 748:Generated_Source\PSoC5/ADC.c ****     uint8 coherency;
 749:Generated_Source\PSoC5/ADC.c **** 
 750:Generated_Source\PSoC5/ADC.c ****     /* Read active coherency configuration */
 751:Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 1230              		.loc 1 751 0
 1231 0006 174B     		ldr	r3, .L61
 1232 0008 1B78     		ldrb	r3, [r3]
 1233 000a DBB2     		uxtb	r3, r3
 1234 000c 03F00303 		and	r3, r3, #3
 1235 0010 7B71     		strb	r3, [r7, #5]
 752:Generated_Source\PSoC5/ADC.c **** 
 753:Generated_Source\PSoC5/ADC.c ****     if(coherency <= ADC_DEC_SAMP_KEY_LOW)
 1236              		.loc 1 753 0
 1237 0012 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1238 0014 012B     		cmp	r3, #1
 1239 0016 03D8     		bhi	.L57
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 36


 754:Generated_Source\PSoC5/ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 755:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 756:Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMPM_REG;
 757:Generated_Source\PSoC5/ADC.c ****             result = (result << 8u) | ADC_DEC_SAMP_REG;
 758:Generated_Source\PSoC5/ADC.c ****         #else
 759:Generated_Source\PSoC5/ADC.c ****             result = (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 1240              		.loc 1 759 0
 1241 0018 134B     		ldr	r3, .L61+4
 1242 001a 1B88     		ldrh	r3, [r3]	@ movhi
 1243 001c FB80     		strh	r3, [r7, #6]	@ movhi
 1244 001e 11E0     		b	.L58
 1245              	.L57:
 760:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 761:Generated_Source\PSoC5/ADC.c ****     }
 762:Generated_Source\PSoC5/ADC.c ****     else /* MID or HIGH */
 763:Generated_Source\PSoC5/ADC.c ****     {   /* Read middle byte at the end */
 764:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 765:Generated_Source\PSoC5/ADC.c ****             result = (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 766:Generated_Source\PSoC5/ADC.c ****         #else
 767:Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMP_REG;
 1246              		.loc 1 767 0
 1247 0020 114B     		ldr	r3, .L61+4
 1248 0022 1B78     		ldrb	r3, [r3]
 1249 0024 DBB2     		uxtb	r3, r3
 1250 0026 FB80     		strh	r3, [r7, #6]	@ movhi
 768:Generated_Source\PSoC5/ADC.c ****             result |=  (uint16)((uint16)ADC_DEC_SAMPM_REG << 8u);
 1251              		.loc 1 768 0
 1252 0028 104B     		ldr	r3, .L61+8
 1253 002a 1B78     		ldrb	r3, [r3]
 1254 002c DBB2     		uxtb	r3, r3
 1255 002e 9BB2     		uxth	r3, r3
 1256 0030 1B02     		lsls	r3, r3, #8
 1257 0032 9AB2     		uxth	r2, r3
 1258 0034 FB88     		ldrh	r3, [r7, #6]	@ movhi
 1259 0036 1343     		orrs	r3, r3, r2
 1260 0038 FB80     		strh	r3, [r7, #6]	@ movhi
 769:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 770:Generated_Source\PSoC5/ADC.c ****         if(coherency == ADC_DEC_SAMP_KEY_HIGH)
 1261              		.loc 1 770 0
 1262 003a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1263 003c 032B     		cmp	r3, #3
 1264 003e 01D1     		bne	.L58
 771:Generated_Source\PSoC5/ADC.c ****         {   /* Dummy read of the MSB byte to unlock the coherency */
 772:Generated_Source\PSoC5/ADC.c ****             (void)ADC_DEC_SAMPH_REG;
 1265              		.loc 1 772 0
 1266 0040 0B4B     		ldr	r3, .L61+12
 1267 0042 1B78     		ldrb	r3, [r3]
 1268              	.L58:
 773:Generated_Source\PSoC5/ADC.c ****         }
 774:Generated_Source\PSoC5/ADC.c ****     }
 775:Generated_Source\PSoC5/ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 776:Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 1269              		.loc 1 776 0
 1270 0044 0B4B     		ldr	r3, .L61+16
 1271 0046 1B78     		ldrb	r3, [r3]
 1272 0048 DBB2     		uxtb	r3, r3
 1273 004a 002B     		cmp	r3, #0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 37


 1274 004c 02D0     		beq	.L59
 777:Generated_Source\PSoC5/ADC.c ****     {
 778:Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 1275              		.loc 1 778 0
 1276 004e 0A4B     		ldr	r3, .L61+20
 1277 0050 0022     		movs	r2, #0
 1278 0052 1A70     		strb	r2, [r3]
 1279              	.L59:
 779:Generated_Source\PSoC5/ADC.c ****     }
 780:Generated_Source\PSoC5/ADC.c **** 
 781:Generated_Source\PSoC5/ADC.c ****     return ((int16)result);
 1280              		.loc 1 781 0
 1281 0054 B7F90630 		ldrsh	r3, [r7, #6]
 782:Generated_Source\PSoC5/ADC.c **** }
 1282              		.loc 1 782 0
 1283 0058 1846     		mov	r0, r3
 1284 005a 0C37     		adds	r7, r7, #12
 1285              		.cfi_def_cfa_offset 4
 1286 005c BD46     		mov	sp, r7
 1287              		.cfi_def_cfa_register 13
 1288              		@ sp needed
 1289 005e 80BC     		pop	{r7}
 1290              		.cfi_restore 7
 1291              		.cfi_def_cfa_offset 0
 1292 0060 7047     		bx	lr
 1293              	.L62:
 1294 0062 00BF     		.align	2
 1295              	.L61:
 1296 0064 144E0040 		.word	1073761812
 1297 0068 104E0040 		.word	1073761808
 1298 006c 114E0040 		.word	1073761809
 1299 0070 124E0040 		.word	1073761810
 1300 0074 00000000 		.word	ADC_stopConversion
 1301 0078 00000000 		.word	ADC_convDone
 1302              		.cfi_endproc
 1303              	.LFE12:
 1304              		.size	ADC_GetResult16, .-ADC_GetResult16
 1305              		.section	.text.ADC_GetResult32,"ax",%progbits
 1306              		.align	2
 1307              		.global	ADC_GetResult32
 1308              		.thumb
 1309              		.thumb_func
 1310              		.type	ADC_GetResult32, %function
 1311              	ADC_GetResult32:
 1312              	.LFB13:
 783:Generated_Source\PSoC5/ADC.c **** 
 784:Generated_Source\PSoC5/ADC.c **** 
 785:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 786:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult32
 787:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 788:Generated_Source\PSoC5/ADC.c **** *
 789:Generated_Source\PSoC5/ADC.c **** * Summary:
 790:Generated_Source\PSoC5/ADC.c **** *  Returns a 32-bit result for a conversion with a result that has a
 791:Generated_Source\PSoC5/ADC.c **** *  resolution of 8 to 20 bits.
 792:Generated_Source\PSoC5/ADC.c **** *  This function supports different coherency settings.
 793:Generated_Source\PSoC5/ADC.c **** *
 794:Generated_Source\PSoC5/ADC.c **** * Parameters:
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 38


 795:Generated_Source\PSoC5/ADC.c **** *  None
 796:Generated_Source\PSoC5/ADC.c **** *
 797:Generated_Source\PSoC5/ADC.c **** * Return:
 798:Generated_Source\PSoC5/ADC.c **** *  int32: Result of the last ADC conversion.
 799:Generated_Source\PSoC5/ADC.c **** *
 800:Generated_Source\PSoC5/ADC.c **** * Global variables:
 801:Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Cleared in single sample mode with resolution
 802:Generated_Source\PSoC5/ADC.c **** *                              above 16 bits
 803:Generated_Source\PSoC5/ADC.c **** *
 804:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 805:Generated_Source\PSoC5/ADC.c **** int32 ADC_GetResult32(void) 
 806:Generated_Source\PSoC5/ADC.c **** {
 1313              		.loc 1 806 0
 1314              		.cfi_startproc
 1315              		@ args = 0, pretend = 0, frame = 8
 1316              		@ frame_needed = 1, uses_anonymous_args = 0
 1317              		@ link register save eliminated.
 1318 0000 80B4     		push	{r7}
 1319              		.cfi_def_cfa_offset 4
 1320              		.cfi_offset 7, -4
 1321 0002 83B0     		sub	sp, sp, #12
 1322              		.cfi_def_cfa_offset 16
 1323 0004 00AF     		add	r7, sp, #0
 1324              		.cfi_def_cfa_register 7
 807:Generated_Source\PSoC5/ADC.c ****     uint32 result;
 808:Generated_Source\PSoC5/ADC.c ****     uint8 coherency;
 809:Generated_Source\PSoC5/ADC.c ****     #if (CY_PSOC3)
 810:Generated_Source\PSoC5/ADC.c **** 	    uint16 tmp;
 811:Generated_Source\PSoC5/ADC.c ****     #endif /* CY_PSOC3 */
 812:Generated_Source\PSoC5/ADC.c **** 
 813:Generated_Source\PSoC5/ADC.c ****     /* Read active coherency configuration */
 814:Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 1325              		.loc 1 814 0
 1326 0006 224B     		ldr	r3, .L69
 1327 0008 1B78     		ldrb	r3, [r3]
 1328 000a DBB2     		uxtb	r3, r3
 1329 000c 03F00303 		and	r3, r3, #3
 1330 0010 FB70     		strb	r3, [r7, #3]
 815:Generated_Source\PSoC5/ADC.c **** 
 816:Generated_Source\PSoC5/ADC.c ****     if(coherency <= ADC_DEC_SAMP_KEY_LOW)
 1331              		.loc 1 816 0
 1332 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1333 0014 012B     		cmp	r3, #1
 1334 0016 0BD8     		bhi	.L64
 817:Generated_Source\PSoC5/ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 818:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 819:Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMPH_REG;
 820:Generated_Source\PSoC5/ADC.c ****             if((result & 0x80u) != 0u)
 821:Generated_Source\PSoC5/ADC.c ****             {   /* Sign extend */
 822:Generated_Source\PSoC5/ADC.c ****                 result |= 0xFF00u;
 823:Generated_Source\PSoC5/ADC.c ****             }
 824:Generated_Source\PSoC5/ADC.c ****             result = (result << 8u) | ADC_DEC_SAMPM_REG;
 825:Generated_Source\PSoC5/ADC.c ****             result = (result << 8u) | ADC_DEC_SAMP_REG;
 826:Generated_Source\PSoC5/ADC.c ****         #else
 827:Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR);
 1335              		.loc 1 827 0
 1336 0018 1E4B     		ldr	r3, .L69+4
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 39


 1337 001a 1B88     		ldrh	r3, [r3]	@ movhi
 1338 001c 9BB2     		uxth	r3, r3
 1339 001e 7B60     		str	r3, [r7, #4]
 828:Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 1340              		.loc 1 828 0
 1341 0020 7B68     		ldr	r3, [r7, #4]
 1342 0022 1B04     		lsls	r3, r3, #16
 1343 0024 1C4A     		ldr	r2, .L69+8
 1344 0026 1288     		ldrh	r2, [r2]	@ movhi
 1345 0028 92B2     		uxth	r2, r2
 1346 002a 1343     		orrs	r3, r3, r2
 1347 002c 7B60     		str	r3, [r7, #4]
 1348 002e 20E0     		b	.L65
 1349              	.L64:
 829:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 830:Generated_Source\PSoC5/ADC.c ****     }
 831:Generated_Source\PSoC5/ADC.c ****     else if(coherency == ADC_DEC_SAMP_KEY_MID)
 1350              		.loc 1 831 0
 1351 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1352 0032 022B     		cmp	r3, #2
 1353 0034 12D1     		bne	.L66
 832:Generated_Source\PSoC5/ADC.c ****     {   /* Read middle byte at the end */
 833:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 834:Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMPH_REG;
 835:Generated_Source\PSoC5/ADC.c ****             if((result & 0x80u) != 0u)
 836:Generated_Source\PSoC5/ADC.c ****             {   /* Sign extend */
 837:Generated_Source\PSoC5/ADC.c ****                 result |= 0xFF00u;
 838:Generated_Source\PSoC5/ADC.c ****             }
 839:Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 840:Generated_Source\PSoC5/ADC.c ****         #else
 841:Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR);
 1354              		.loc 1 841 0
 1355 0036 174B     		ldr	r3, .L69+4
 1356 0038 1B88     		ldrh	r3, [r3]	@ movhi
 1357 003a 9BB2     		uxth	r3, r3
 1358 003c 7B60     		str	r3, [r7, #4]
 842:Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | ADC_DEC_SAMP_REG;
 1359              		.loc 1 842 0
 1360 003e 7B68     		ldr	r3, [r7, #4]
 1361 0040 1B04     		lsls	r3, r3, #16
 1362 0042 154A     		ldr	r2, .L69+8
 1363 0044 1278     		ldrb	r2, [r2]
 1364 0046 D2B2     		uxtb	r2, r2
 1365 0048 1343     		orrs	r3, r3, r2
 1366 004a 7B60     		str	r3, [r7, #4]
 843:Generated_Source\PSoC5/ADC.c ****             result |=  (uint32)((uint32)ADC_DEC_SAMPM_REG << 8u);
 1367              		.loc 1 843 0
 1368 004c 134B     		ldr	r3, .L69+12
 1369 004e 1B78     		ldrb	r3, [r3]
 1370 0050 DBB2     		uxtb	r3, r3
 1371 0052 1B02     		lsls	r3, r3, #8
 1372 0054 7A68     		ldr	r2, [r7, #4]
 1373 0056 1343     		orrs	r3, r3, r2
 1374 0058 7B60     		str	r3, [r7, #4]
 1375 005a 0AE0     		b	.L65
 1376              	.L66:
 844:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 40


 845:Generated_Source\PSoC5/ADC.c ****     }
 846:Generated_Source\PSoC5/ADC.c ****     else /*ADC_DEC_SAMP_KEY_HIGH */
 847:Generated_Source\PSoC5/ADC.c ****     {
 848:Generated_Source\PSoC5/ADC.c ****         /* Read MSB byte at the end */
 849:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 850:Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMP_16B_PTR);
 851:Generated_Source\PSoC5/ADC.c **** 			tmp = ADC_DEC_SAMPH_REG;
 852:Generated_Source\PSoC5/ADC.c ****             if((tmp & 0x80u) != 0u)
 853:Generated_Source\PSoC5/ADC.c ****             {   /* Sign extend */
 854:Generated_Source\PSoC5/ADC.c ****                 tmp |= 0xFF00u;
 855:Generated_Source\PSoC5/ADC.c ****             }
 856:Generated_Source\PSoC5/ADC.c ****             result |= (uint32)tmp << 16u;
 857:Generated_Source\PSoC5/ADC.c ****         #else
 858:Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMP_16B_PTR);
 1377              		.loc 1 858 0
 1378 005c 0E4B     		ldr	r3, .L69+8
 1379 005e 1B88     		ldrh	r3, [r3]	@ movhi
 1380 0060 9BB2     		uxth	r3, r3
 1381 0062 7B60     		str	r3, [r7, #4]
 859:Generated_Source\PSoC5/ADC.c ****             result |= (uint32)((uint32)CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR) << 16u);
 1382              		.loc 1 859 0
 1383 0064 0B4B     		ldr	r3, .L69+4
 1384 0066 1B88     		ldrh	r3, [r3]	@ movhi
 1385 0068 9BB2     		uxth	r3, r3
 1386 006a 1B04     		lsls	r3, r3, #16
 1387 006c 7A68     		ldr	r2, [r7, #4]
 1388 006e 1343     		orrs	r3, r3, r2
 1389 0070 7B60     		str	r3, [r7, #4]
 1390              	.L65:
 860:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 861:Generated_Source\PSoC5/ADC.c ****     }
 862:Generated_Source\PSoC5/ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 863:Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 1391              		.loc 1 863 0
 1392 0072 0B4B     		ldr	r3, .L69+16
 1393 0074 1B78     		ldrb	r3, [r3]
 1394 0076 DBB2     		uxtb	r3, r3
 1395 0078 002B     		cmp	r3, #0
 1396 007a 02D0     		beq	.L67
 864:Generated_Source\PSoC5/ADC.c ****     {
 865:Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 1397              		.loc 1 865 0
 1398 007c 094B     		ldr	r3, .L69+20
 1399 007e 0022     		movs	r2, #0
 1400 0080 1A70     		strb	r2, [r3]
 1401              	.L67:
 866:Generated_Source\PSoC5/ADC.c ****     }
 867:Generated_Source\PSoC5/ADC.c **** 
 868:Generated_Source\PSoC5/ADC.c ****     return ((int32)result);
 1402              		.loc 1 868 0
 1403 0082 7B68     		ldr	r3, [r7, #4]
 869:Generated_Source\PSoC5/ADC.c **** }
 1404              		.loc 1 869 0
 1405 0084 1846     		mov	r0, r3
 1406 0086 0C37     		adds	r7, r7, #12
 1407              		.cfi_def_cfa_offset 4
 1408 0088 BD46     		mov	sp, r7
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 41


 1409              		.cfi_def_cfa_register 13
 1410              		@ sp needed
 1411 008a 80BC     		pop	{r7}
 1412              		.cfi_restore 7
 1413              		.cfi_def_cfa_offset 0
 1414 008c 7047     		bx	lr
 1415              	.L70:
 1416 008e 00BF     		.align	2
 1417              	.L69:
 1418 0090 144E0040 		.word	1073761812
 1419 0094 124E0040 		.word	1073761810
 1420 0098 104E0040 		.word	1073761808
 1421 009c 114E0040 		.word	1073761809
 1422 00a0 00000000 		.word	ADC_stopConversion
 1423 00a4 00000000 		.word	ADC_convDone
 1424              		.cfi_endproc
 1425              	.LFE13:
 1426              		.size	ADC_GetResult32, .-ADC_GetResult32
 1427              		.section	.text.ADC_SetOffset,"ax",%progbits
 1428              		.align	2
 1429              		.global	ADC_SetOffset
 1430              		.thumb
 1431              		.thumb_func
 1432              		.type	ADC_SetOffset, %function
 1433              	ADC_SetOffset:
 1434              	.LFB14:
 870:Generated_Source\PSoC5/ADC.c **** 
 871:Generated_Source\PSoC5/ADC.c **** 
 872:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 873:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetOffset
 874:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 875:Generated_Source\PSoC5/ADC.c **** *
 876:Generated_Source\PSoC5/ADC.c **** * Summary:
 877:Generated_Source\PSoC5/ADC.c **** *  Sets the ADC offset which is used by the functions ADC_CountsTo_uVolts, 
 878:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, and ADC_CountsTo_Volts to subtract the offset from the 
 879:Generated_Source\PSoC5/ADC.c **** *  given reading before calculating the voltage conversion.
 880:Generated_Source\PSoC5/ADC.c **** *
 881:Generated_Source\PSoC5/ADC.c **** * Parameters:
 882:Generated_Source\PSoC5/ADC.c **** *  int32:  This value is a measured value when the inputs are shorted or 
 883:Generated_Source\PSoC5/ADC.c **** *          connected to the same input voltage.
 884:Generated_Source\PSoC5/ADC.c **** *
 885:Generated_Source\PSoC5/ADC.c **** * Return:
 886:Generated_Source\PSoC5/ADC.c **** *  None
 887:Generated_Source\PSoC5/ADC.c **** *
 888:Generated_Source\PSoC5/ADC.c **** * Global variables:
 889:Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset. This
 890:Generated_Source\PSoC5/ADC.c **** *  variable is used for offset calibration purpose.
 891:Generated_Source\PSoC5/ADC.c **** *
 892:Generated_Source\PSoC5/ADC.c **** * Side Effects:
 893:Generated_Source\PSoC5/ADC.c **** *  Affects the ADC_CountsTo_Volts,
 894:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, ADC_CountsTo_uVolts functions
 895:Generated_Source\PSoC5/ADC.c **** *  by subtracting the given offset.
 896:Generated_Source\PSoC5/ADC.c **** *
 897:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/ADC.c **** void ADC_SetOffset(int32 offset) 
 899:Generated_Source\PSoC5/ADC.c **** {
 1435              		.loc 1 899 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 42


 1436              		.cfi_startproc
 1437              		@ args = 0, pretend = 0, frame = 8
 1438              		@ frame_needed = 1, uses_anonymous_args = 0
 1439              		@ link register save eliminated.
 1440 0000 80B4     		push	{r7}
 1441              		.cfi_def_cfa_offset 4
 1442              		.cfi_offset 7, -4
 1443 0002 83B0     		sub	sp, sp, #12
 1444              		.cfi_def_cfa_offset 16
 1445 0004 00AF     		add	r7, sp, #0
 1446              		.cfi_def_cfa_register 7
 1447 0006 7860     		str	r0, [r7, #4]
 900:Generated_Source\PSoC5/ADC.c **** 
 901:Generated_Source\PSoC5/ADC.c ****     ADC_Offset = offset;
 1448              		.loc 1 901 0
 1449 0008 034A     		ldr	r2, .L72
 1450 000a 7B68     		ldr	r3, [r7, #4]
 1451 000c 1360     		str	r3, [r2]
 902:Generated_Source\PSoC5/ADC.c **** }
 1452              		.loc 1 902 0
 1453 000e 00BF     		nop
 1454 0010 0C37     		adds	r7, r7, #12
 1455              		.cfi_def_cfa_offset 4
 1456 0012 BD46     		mov	sp, r7
 1457              		.cfi_def_cfa_register 13
 1458              		@ sp needed
 1459 0014 80BC     		pop	{r7}
 1460              		.cfi_restore 7
 1461              		.cfi_def_cfa_offset 0
 1462 0016 7047     		bx	lr
 1463              	.L73:
 1464              		.align	2
 1465              	.L72:
 1466 0018 00000000 		.word	ADC_Offset
 1467              		.cfi_endproc
 1468              	.LFE14:
 1469              		.size	ADC_SetOffset, .-ADC_SetOffset
 1470              		.section	.text.ADC_SetGain,"ax",%progbits
 1471              		.align	2
 1472              		.global	ADC_SetGain
 1473              		.thumb
 1474              		.thumb_func
 1475              		.type	ADC_SetGain, %function
 1476              	ADC_SetGain:
 1477              	.LFB15:
 903:Generated_Source\PSoC5/ADC.c **** 
 904:Generated_Source\PSoC5/ADC.c **** 
 905:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 906:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetGain
 907:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 908:Generated_Source\PSoC5/ADC.c **** *
 909:Generated_Source\PSoC5/ADC.c **** * Summary:
 910:Generated_Source\PSoC5/ADC.c **** *  Sets the ADC gain in counts per volt for the voltage conversion
 911:Generated_Source\PSoC5/ADC.c **** *  functions below. This value is set by default by the reference and
 912:Generated_Source\PSoC5/ADC.c **** *  input range settings. It should only be used to further calibrate the
 913:Generated_Source\PSoC5/ADC.c **** *  ADC with a known input or if an external reference is used. This
 914:Generated_Source\PSoC5/ADC.c **** *  function may also be used to calibrate an entire signal chain, not
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 43


 915:Generated_Source\PSoC5/ADC.c **** *  just the ADC.
 916:Generated_Source\PSoC5/ADC.c **** *
 917:Generated_Source\PSoC5/ADC.c **** * Parameters:
 918:Generated_Source\PSoC5/ADC.c **** *  int32: ADC gain in counts per volt.
 919:Generated_Source\PSoC5/ADC.c **** *
 920:Generated_Source\PSoC5/ADC.c **** * Return:
 921:Generated_Source\PSoC5/ADC.c **** *  None
 922:Generated_Source\PSoC5/ADC.c **** *
 923:Generated_Source\PSoC5/ADC.c **** * Global variables:
 924:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  modified to set the ADC gain in counts
 925:Generated_Source\PSoC5/ADC.c **** *   per volt.
 926:Generated_Source\PSoC5/ADC.c **** *
 927:Generated_Source\PSoC5/ADC.c **** * Side Effects:
 928:Generated_Source\PSoC5/ADC.c **** *  Affects the ADC_CountsTo_Volts,
 929:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, ADC_CountsTo_uVolts functions
 930:Generated_Source\PSoC5/ADC.c **** *  supplying the correct conversion between ADC counts and voltage.
 931:Generated_Source\PSoC5/ADC.c **** *
 932:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 933:Generated_Source\PSoC5/ADC.c **** void ADC_SetGain(int32 adcGain) 
 934:Generated_Source\PSoC5/ADC.c **** {
 1478              		.loc 1 934 0
 1479              		.cfi_startproc
 1480              		@ args = 0, pretend = 0, frame = 8
 1481              		@ frame_needed = 1, uses_anonymous_args = 0
 1482              		@ link register save eliminated.
 1483 0000 80B4     		push	{r7}
 1484              		.cfi_def_cfa_offset 4
 1485              		.cfi_offset 7, -4
 1486 0002 83B0     		sub	sp, sp, #12
 1487              		.cfi_def_cfa_offset 16
 1488 0004 00AF     		add	r7, sp, #0
 1489              		.cfi_def_cfa_register 7
 1490 0006 7860     		str	r0, [r7, #4]
 935:Generated_Source\PSoC5/ADC.c ****     ADC_CountsPerVolt = adcGain;
 1491              		.loc 1 935 0
 1492 0008 034A     		ldr	r2, .L75
 1493 000a 7B68     		ldr	r3, [r7, #4]
 1494 000c 1360     		str	r3, [r2]
 936:Generated_Source\PSoC5/ADC.c **** }
 1495              		.loc 1 936 0
 1496 000e 00BF     		nop
 1497 0010 0C37     		adds	r7, r7, #12
 1498              		.cfi_def_cfa_offset 4
 1499 0012 BD46     		mov	sp, r7
 1500              		.cfi_def_cfa_register 13
 1501              		@ sp needed
 1502 0014 80BC     		pop	{r7}
 1503              		.cfi_restore 7
 1504              		.cfi_def_cfa_offset 0
 1505 0016 7047     		bx	lr
 1506              	.L76:
 1507              		.align	2
 1508              	.L75:
 1509 0018 00000000 		.word	ADC_CountsPerVolt
 1510              		.cfi_endproc
 1511              	.LFE15:
 1512              		.size	ADC_SetGain, .-ADC_SetGain
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 44


 1513              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 1514              		.align	2
 1515              		.global	ADC_CountsTo_mVolts
 1516              		.thumb
 1517              		.thumb_func
 1518              		.type	ADC_CountsTo_mVolts, %function
 1519              	ADC_CountsTo_mVolts:
 1520              	.LFB16:
 937:Generated_Source\PSoC5/ADC.c **** 
 938:Generated_Source\PSoC5/ADC.c **** 
 939:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 940:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_mVolts
 941:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 942:Generated_Source\PSoC5/ADC.c **** *
 943:Generated_Source\PSoC5/ADC.c **** * Summary:
 944:Generated_Source\PSoC5/ADC.c **** *  Converts the ADC counts output to mVolts as a 16-bit integer. For
 945:Generated_Source\PSoC5/ADC.c **** *  example, if the ADC measured 0.534 volts, the return value would
 946:Generated_Source\PSoC5/ADC.c **** *  be 534 mVolts.
 947:Generated_Source\PSoC5/ADC.c **** *
 948:Generated_Source\PSoC5/ADC.c **** * Parameters:
 949:Generated_Source\PSoC5/ADC.c **** *  int32: adcCounts Result from the ADC conversion.
 950:Generated_Source\PSoC5/ADC.c **** *
 951:Generated_Source\PSoC5/ADC.c **** * Return:
 952:Generated_Source\PSoC5/ADC.c **** *  int16:  Result in mVolts
 953:Generated_Source\PSoC5/ADC.c **** *
 954:Generated_Source\PSoC5/ADC.c **** * Global variables:
 955:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  used to convert ADC counts to mVolts.
 956:Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Used as the offset while converting ADC counts
 957:Generated_Source\PSoC5/ADC.c **** *   to mVolts.
 958:Generated_Source\PSoC5/ADC.c **** *
 959:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 960:Generated_Source\PSoC5/ADC.c **** int16 ADC_CountsTo_mVolts(int32 adcCounts) 
 961:Generated_Source\PSoC5/ADC.c **** {
 1521              		.loc 1 961 0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 16
 1524              		@ frame_needed = 1, uses_anonymous_args = 0
 1525              		@ link register save eliminated.
 1526 0000 80B4     		push	{r7}
 1527              		.cfi_def_cfa_offset 4
 1528              		.cfi_offset 7, -4
 1529 0002 85B0     		sub	sp, sp, #20
 1530              		.cfi_def_cfa_offset 24
 1531 0004 00AF     		add	r7, sp, #0
 1532              		.cfi_def_cfa_register 7
 1533 0006 7860     		str	r0, [r7, #4]
 962:Generated_Source\PSoC5/ADC.c **** 
 963:Generated_Source\PSoC5/ADC.c ****     int16 mVolts;
 964:Generated_Source\PSoC5/ADC.c **** 
 965:Generated_Source\PSoC5/ADC.c ****     /* Convert adcCounts to the right align if left option selected */
 966:Generated_Source\PSoC5/ADC.c ****     #if(ADC_CFG1_DEC_DIV != 0)
 967:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG1)
 968:Generated_Source\PSoC5/ADC.c ****         {
 969:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG1_DEC_DIV;
 970:Generated_Source\PSoC5/ADC.c ****         }
 971:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG1_DEC_DIV */
 972:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG2_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 1))
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 45


 973:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG2)
 974:Generated_Source\PSoC5/ADC.c ****         {
 975:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG2_DEC_DIV;
 976:Generated_Source\PSoC5/ADC.c ****         }
 977:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
 978:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG3_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 2))
 979:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG3)
 980:Generated_Source\PSoC5/ADC.c ****         {
 981:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG3_DEC_DIV;
 982:Generated_Source\PSoC5/ADC.c ****         }
 983:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
 984:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG4_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 3))
 985:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG4)
 986:Generated_Source\PSoC5/ADC.c ****         {
 987:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG4_DEC_DIV;
 988:Generated_Source\PSoC5/ADC.c ****         }
 989:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
 990:Generated_Source\PSoC5/ADC.c **** 
 991:Generated_Source\PSoC5/ADC.c ****     /* Subtract ADC offset */
 992:Generated_Source\PSoC5/ADC.c ****     adcCounts -= ADC_Offset;
 1534              		.loc 1 992 0
 1535 0008 0A4B     		ldr	r3, .L79
 1536 000a 1B68     		ldr	r3, [r3]
 1537 000c 7A68     		ldr	r2, [r7, #4]
 1538 000e D31A     		subs	r3, r2, r3
 1539 0010 7B60     		str	r3, [r7, #4]
 993:Generated_Source\PSoC5/ADC.c **** 
 994:Generated_Source\PSoC5/ADC.c ****     mVolts = (int16)(( adcCounts * ADC_1MV_COUNTS ) / ADC_CountsPerVolt) ;
 1540              		.loc 1 994 0
 1541 0012 7B68     		ldr	r3, [r7, #4]
 1542 0014 4FF47A72 		mov	r2, #1000
 1543 0018 02FB03F2 		mul	r2, r2, r3
 1544 001c 064B     		ldr	r3, .L79+4
 1545 001e 1B68     		ldr	r3, [r3]
 1546 0020 92FBF3F3 		sdiv	r3, r2, r3
 1547 0024 FB81     		strh	r3, [r7, #14]	@ movhi
 995:Generated_Source\PSoC5/ADC.c **** 
 996:Generated_Source\PSoC5/ADC.c ****     return(mVolts);
 1548              		.loc 1 996 0
 1549 0026 B7F90E30 		ldrsh	r3, [r7, #14]
 997:Generated_Source\PSoC5/ADC.c **** }
 1550              		.loc 1 997 0
 1551 002a 1846     		mov	r0, r3
 1552 002c 1437     		adds	r7, r7, #20
 1553              		.cfi_def_cfa_offset 4
 1554 002e BD46     		mov	sp, r7
 1555              		.cfi_def_cfa_register 13
 1556              		@ sp needed
 1557 0030 80BC     		pop	{r7}
 1558              		.cfi_restore 7
 1559              		.cfi_def_cfa_offset 0
 1560 0032 7047     		bx	lr
 1561              	.L80:
 1562              		.align	2
 1563              	.L79:
 1564 0034 00000000 		.word	ADC_Offset
 1565 0038 00000000 		.word	ADC_CountsPerVolt
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 46


 1566              		.cfi_endproc
 1567              	.LFE16:
 1568              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1569              		.global	__aeabi_i2f
 1570              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1571              		.align	2
 1572              		.global	ADC_CountsTo_Volts
 1573              		.thumb
 1574              		.thumb_func
 1575              		.type	ADC_CountsTo_Volts, %function
 1576              	ADC_CountsTo_Volts:
 1577              	.LFB17:
 998:Generated_Source\PSoC5/ADC.c **** 
 999:Generated_Source\PSoC5/ADC.c **** 
1000:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1001:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_Volts
1002:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1003:Generated_Source\PSoC5/ADC.c **** *
1004:Generated_Source\PSoC5/ADC.c **** * Summary:
1005:Generated_Source\PSoC5/ADC.c **** *  Converts the ADC output to Volts as a floating point number. For
1006:Generated_Source\PSoC5/ADC.c **** *  example, if the ADC measure a voltage of 1.2345 Volts, the
1007:Generated_Source\PSoC5/ADC.c **** *  returned result would be +1.2345 Volts.
1008:Generated_Source\PSoC5/ADC.c **** *
1009:Generated_Source\PSoC5/ADC.c **** * Parameters:
1010:Generated_Source\PSoC5/ADC.c **** *  int32 adcCounts:  Result from the ADC conversion.
1011:Generated_Source\PSoC5/ADC.c **** *
1012:Generated_Source\PSoC5/ADC.c **** * Return:
1013:Generated_Source\PSoC5/ADC.c **** *  float32: Result in Volts
1014:Generated_Source\PSoC5/ADC.c **** *
1015:Generated_Source\PSoC5/ADC.c **** * Global variables:
1016:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  used to convert to Volts.
1017:Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Used as the offset while converting ADC counts
1018:Generated_Source\PSoC5/ADC.c **** *   to Volts.
1019:Generated_Source\PSoC5/ADC.c **** *
1020:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1021:Generated_Source\PSoC5/ADC.c **** float32 ADC_CountsTo_Volts(int32 adcCounts) 
1022:Generated_Source\PSoC5/ADC.c **** {
 1578              		.loc 1 1022 0
 1579              		.cfi_startproc
 1580              		@ args = 0, pretend = 0, frame = 16
 1581              		@ frame_needed = 1, uses_anonymous_args = 0
 1582 0000 90B5     		push	{r4, r7, lr}
 1583              		.cfi_def_cfa_offset 12
 1584              		.cfi_offset 4, -12
 1585              		.cfi_offset 7, -8
 1586              		.cfi_offset 14, -4
 1587 0002 85B0     		sub	sp, sp, #20
 1588              		.cfi_def_cfa_offset 32
 1589 0004 00AF     		add	r7, sp, #0
 1590              		.cfi_def_cfa_register 7
 1591 0006 7860     		str	r0, [r7, #4]
1023:Generated_Source\PSoC5/ADC.c **** 
1024:Generated_Source\PSoC5/ADC.c ****     float32 Volts;
1025:Generated_Source\PSoC5/ADC.c **** 
1026:Generated_Source\PSoC5/ADC.c ****     /* Convert adcCounts to the right align if left option selected */
1027:Generated_Source\PSoC5/ADC.c ****     #if(ADC_CFG1_DEC_DIV != 0)
1028:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG1)
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 47


1029:Generated_Source\PSoC5/ADC.c ****         {
1030:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG1_DEC_DIV;
1031:Generated_Source\PSoC5/ADC.c ****         }
1032:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG1_DEC_DIV */
1033:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG2_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 1))
1034:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG2)
1035:Generated_Source\PSoC5/ADC.c ****         {
1036:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG2_DEC_DIV;
1037:Generated_Source\PSoC5/ADC.c ****         }
1038:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
1039:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG3_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 2))
1040:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG3)
1041:Generated_Source\PSoC5/ADC.c ****         {
1042:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG3_DEC_DIV;
1043:Generated_Source\PSoC5/ADC.c ****         }
1044:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
1045:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG4_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 3))
1046:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG4)
1047:Generated_Source\PSoC5/ADC.c ****         {
1048:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG4_DEC_DIV;
1049:Generated_Source\PSoC5/ADC.c ****         }
1050:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
1051:Generated_Source\PSoC5/ADC.c **** 
1052:Generated_Source\PSoC5/ADC.c ****     /* Subtract ADC offset */
1053:Generated_Source\PSoC5/ADC.c ****     adcCounts -= ADC_Offset;
 1592              		.loc 1 1053 0
 1593 0008 0C4B     		ldr	r3, .L83
 1594 000a 1B68     		ldr	r3, [r3]
 1595 000c 7A68     		ldr	r2, [r7, #4]
 1596 000e D31A     		subs	r3, r2, r3
 1597 0010 7B60     		str	r3, [r7, #4]
1054:Generated_Source\PSoC5/ADC.c **** 
1055:Generated_Source\PSoC5/ADC.c ****     Volts = (float32)adcCounts / (float32)ADC_CountsPerVolt;
 1598              		.loc 1 1055 0
 1599 0012 7868     		ldr	r0, [r7, #4]
 1600 0014 FFF7FEFF 		bl	__aeabi_i2f
 1601 0018 0446     		mov	r4, r0
 1602 001a 094B     		ldr	r3, .L83+4
 1603 001c 1B68     		ldr	r3, [r3]
 1604 001e 1846     		mov	r0, r3
 1605 0020 FFF7FEFF 		bl	__aeabi_i2f
 1606 0024 0346     		mov	r3, r0
 1607 0026 1946     		mov	r1, r3
 1608 0028 2046     		mov	r0, r4
 1609 002a FFF7FEFF 		bl	__aeabi_fdiv
 1610 002e 0346     		mov	r3, r0
 1611 0030 FB60     		str	r3, [r7, #12]	@ float
1056:Generated_Source\PSoC5/ADC.c **** 
1057:Generated_Source\PSoC5/ADC.c ****     return( Volts );
 1612              		.loc 1 1057 0
 1613 0032 FB68     		ldr	r3, [r7, #12]	@ float
1058:Generated_Source\PSoC5/ADC.c **** }
 1614              		.loc 1 1058 0
 1615 0034 1846     		mov	r0, r3
 1616 0036 1437     		adds	r7, r7, #20
 1617              		.cfi_def_cfa_offset 12
 1618 0038 BD46     		mov	sp, r7
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 48


 1619              		.cfi_def_cfa_register 13
 1620              		@ sp needed
 1621 003a 90BD     		pop	{r4, r7, pc}
 1622              	.L84:
 1623              		.align	2
 1624              	.L83:
 1625 003c 00000000 		.word	ADC_Offset
 1626 0040 00000000 		.word	ADC_CountsPerVolt
 1627              		.cfi_endproc
 1628              	.LFE17:
 1629              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1630              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1631              		.align	2
 1632              		.global	ADC_CountsTo_uVolts
 1633              		.thumb
 1634              		.thumb_func
 1635              		.type	ADC_CountsTo_uVolts, %function
 1636              	ADC_CountsTo_uVolts:
 1637              	.LFB18:
1059:Generated_Source\PSoC5/ADC.c **** 
1060:Generated_Source\PSoC5/ADC.c **** 
1061:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1062:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_uVolts
1063:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1064:Generated_Source\PSoC5/ADC.c **** *
1065:Generated_Source\PSoC5/ADC.c **** * Summary:
1066:Generated_Source\PSoC5/ADC.c **** *  Converts the ADC output to uVolts as a 32-bit integer. For example,
1067:Generated_Source\PSoC5/ADC.c **** *  if the ADC measured -0.02345 Volts, the return value would be -23450 uVolts.
1068:Generated_Source\PSoC5/ADC.c **** *
1069:Generated_Source\PSoC5/ADC.c **** * Parameters:
1070:Generated_Source\PSoC5/ADC.c **** *  int32 adcCounts: Result from the ADC conversion.
1071:Generated_Source\PSoC5/ADC.c **** *
1072:Generated_Source\PSoC5/ADC.c **** * Return:
1073:Generated_Source\PSoC5/ADC.c **** *  int32:  Result in uVolts
1074:Generated_Source\PSoC5/ADC.c **** *
1075:Generated_Source\PSoC5/ADC.c **** * Global variables:
1076:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  used to convert ADC counts to mVolts.
1077:Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Used as the offset while converting ADC counts
1078:Generated_Source\PSoC5/ADC.c **** *   to mVolts.
1079:Generated_Source\PSoC5/ADC.c **** *
1080:Generated_Source\PSoC5/ADC.c **** * Theory:
1081:Generated_Source\PSoC5/ADC.c **** *  Care must be taken to not exceed the maximum value for a 31 bit signed
1082:Generated_Source\PSoC5/ADC.c **** *  number in the conversion to uVolts and at the same time not lose resolution.
1083:Generated_Source\PSoC5/ADC.c **** *
1084:Generated_Source\PSoC5/ADC.c **** *  uVolts = ((A * adcCounts) / ((int32)ADC_CountsPerVolt / B));
1085:Generated_Source\PSoC5/ADC.c **** *
1086:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1087:Generated_Source\PSoC5/ADC.c **** int32 ADC_CountsTo_uVolts(int32 adcCounts) 
1088:Generated_Source\PSoC5/ADC.c **** {
 1638              		.loc 1 1088 0
 1639              		.cfi_startproc
 1640              		@ args = 0, pretend = 0, frame = 24
 1641              		@ frame_needed = 1, uses_anonymous_args = 0
 1642              		@ link register save eliminated.
 1643 0000 80B4     		push	{r7}
 1644              		.cfi_def_cfa_offset 4
 1645              		.cfi_offset 7, -4
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 49


 1646 0002 87B0     		sub	sp, sp, #28
 1647              		.cfi_def_cfa_offset 32
 1648 0004 00AF     		add	r7, sp, #0
 1649              		.cfi_def_cfa_register 7
 1650 0006 7860     		str	r0, [r7, #4]
1089:Generated_Source\PSoC5/ADC.c **** 
1090:Generated_Source\PSoC5/ADC.c ****     int32 uVolts;
1091:Generated_Source\PSoC5/ADC.c ****     int32 coefA;
1092:Generated_Source\PSoC5/ADC.c ****     int32 coefB;
1093:Generated_Source\PSoC5/ADC.c ****     uint8 resolution;
1094:Generated_Source\PSoC5/ADC.c **** 
1095:Generated_Source\PSoC5/ADC.c ****     /* Set the resolution based on the configuration */
1096:Generated_Source\PSoC5/ADC.c ****     /* Convert adcCounts to the right align if left option selected */
1097:Generated_Source\PSoC5/ADC.c ****     if (ADC_Config == ADC_CFG1)
 1651              		.loc 1 1097 0
 1652 0008 274B     		ldr	r3, .L96
 1653 000a 1B78     		ldrb	r3, [r3]
 1654 000c DBB2     		uxtb	r3, r3
 1655 000e 012B     		cmp	r3, #1
 1656 0010 02D1     		bne	.L86
1098:Generated_Source\PSoC5/ADC.c ****     {
1099:Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG1_RESOLUTION;
 1657              		.loc 1 1099 0
 1658 0012 1423     		movs	r3, #20
 1659 0014 FB73     		strb	r3, [r7, #15]
 1660 0016 11E0     		b	.L87
 1661              	.L86:
1100:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG1_DEC_DIV != 0)
1101:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG1_DEC_DIV;
1102:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG1_DEC_DIV */
1103:Generated_Source\PSoC5/ADC.c ****     }
1104:Generated_Source\PSoC5/ADC.c ****     else if (ADC_Config == ADC_CFG2)
 1662              		.loc 1 1104 0
 1663 0018 234B     		ldr	r3, .L96
 1664 001a 1B78     		ldrb	r3, [r3]
 1665 001c DBB2     		uxtb	r3, r3
 1666 001e 022B     		cmp	r3, #2
 1667 0020 02D1     		bne	.L88
1105:Generated_Source\PSoC5/ADC.c ****     {
1106:Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG2_RESOLUTION;
 1668              		.loc 1 1106 0
 1669 0022 1023     		movs	r3, #16
 1670 0024 FB73     		strb	r3, [r7, #15]
 1671 0026 09E0     		b	.L87
 1672              	.L88:
1107:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG2_DEC_DIV != 0)
1108:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG2_DEC_DIV;
1109:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG2_DEC_DIV */
1110:Generated_Source\PSoC5/ADC.c ****     }
1111:Generated_Source\PSoC5/ADC.c ****     else if (ADC_Config == ADC_CFG3)
 1673              		.loc 1 1111 0
 1674 0028 1F4B     		ldr	r3, .L96
 1675 002a 1B78     		ldrb	r3, [r3]
 1676 002c DBB2     		uxtb	r3, r3
 1677 002e 032B     		cmp	r3, #3
 1678 0030 02D1     		bne	.L89
1112:Generated_Source\PSoC5/ADC.c ****     {
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 50


1113:Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG3_RESOLUTION;
 1679              		.loc 1 1113 0
 1680 0032 1023     		movs	r3, #16
 1681 0034 FB73     		strb	r3, [r7, #15]
 1682 0036 01E0     		b	.L87
 1683              	.L89:
1114:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG3_DEC_DIV != 0)
1115:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG3_DEC_DIV;
1116:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG3_DEC_DIV */
1117:Generated_Source\PSoC5/ADC.c ****     }
1118:Generated_Source\PSoC5/ADC.c ****     else
1119:Generated_Source\PSoC5/ADC.c ****     {
1120:Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG4_RESOLUTION;
 1684              		.loc 1 1120 0
 1685 0038 1023     		movs	r3, #16
 1686 003a FB73     		strb	r3, [r7, #15]
 1687              	.L87:
1121:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG4_DEC_DIV != 0)
1122:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG4_DEC_DIV;
1123:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG4_DEC_DIV */
1124:Generated_Source\PSoC5/ADC.c ****     }
1125:Generated_Source\PSoC5/ADC.c **** 
1126:Generated_Source\PSoC5/ADC.c ****     switch (resolution)
 1688              		.loc 1 1126 0
 1689 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1690 003e 102B     		cmp	r3, #16
 1691 0040 02D0     		beq	.L91
 1692 0042 142B     		cmp	r3, #20
 1693 0044 06D0     		beq	.L92
 1694 0046 0CE0     		b	.L95
 1695              	.L91:
1127:Generated_Source\PSoC5/ADC.c ****     {
1128:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_12) || \
1129:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_12) || \
1130:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_12) || \
1131:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_12) )
1132:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_12:
1133:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_2;
1134:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_2;
1135:Generated_Source\PSoC5/ADC.c ****                 break;
1136:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_12 */    
1137:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_13) || \
1138:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_13) || \
1139:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_13) || \
1140:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_13) )
1141:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_13:
1142:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_4;
1143:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_4;
1144:Generated_Source\PSoC5/ADC.c ****                 break;
1145:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_13 */    
1146:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_14) || \
1147:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_14) || \
1148:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_14) || \
1149:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_14) )
1150:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_14:
1151:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_8;
1152:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_8;
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 51


1153:Generated_Source\PSoC5/ADC.c ****                 break;
1154:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_14 */    
1155:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_15) || \
1156:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_15) || \
1157:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_15) || \
1158:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_15) )
1159:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_15:
1160:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_16;
1161:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_16;
1162:Generated_Source\PSoC5/ADC.c ****                 break;
1163:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_15 */    
1164:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_16) || \
1165:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_16) || \
1166:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_16) || \
1167:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_16) )
1168:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_16:
1169:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_32;
 1696              		.loc 1 1169 0
 1697 0048 47F61223 		movw	r3, #31250
 1698 004c 7B61     		str	r3, [r7, #20]
1170:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_32;
 1699              		.loc 1 1170 0
 1700 004e 2023     		movs	r3, #32
 1701 0050 3B61     		str	r3, [r7, #16]
1171:Generated_Source\PSoC5/ADC.c ****                 break;
 1702              		.loc 1 1171 0
 1703 0052 0BE0     		b	.L93
 1704              	.L92:
1172:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_16 */    
1173:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_17) || \
1174:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_17) || \
1175:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_17) || \
1176:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_17) )
1177:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_17:
1178:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_64;
1179:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_64;
1180:Generated_Source\PSoC5/ADC.c ****                 break;
1181:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_17 */    
1182:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_18) || \
1183:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_18) || \
1184:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_18) || \
1185:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_18) )
1186:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_18:
1187:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_125;
1188:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_125;
1189:Generated_Source\PSoC5/ADC.c ****                 break;
1190:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_18 */    
1191:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_19) || \
1192:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_19) || \
1193:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_19) || \
1194:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_19) )
1195:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_19:
1196:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_250;
1197:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_250;
1198:Generated_Source\PSoC5/ADC.c ****                 break;
1199:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_19 */    
1200:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_20) || \
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 52


1201:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_20) || \
1202:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_20) || \
1203:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_20) )
1204:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_20:
1205:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_500;
 1705              		.loc 1 1205 0
 1706 0054 4FF4FA63 		mov	r3, #2000
 1707 0058 7B61     		str	r3, [r7, #20]
1206:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_500;
 1708              		.loc 1 1206 0
 1709 005a 4FF4FA73 		mov	r3, #500
 1710 005e 3B61     		str	r3, [r7, #16]
1207:Generated_Source\PSoC5/ADC.c ****                 break;
 1711              		.loc 1 1207 0
 1712 0060 04E0     		b	.L93
 1713              	.L95:
1208:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_20 */    
1209:Generated_Source\PSoC5/ADC.c ****         default:    /* resolution < 12 */
1210:Generated_Source\PSoC5/ADC.c ****             /* 11 bits ADC + 2^20(1048576) = 31 bits */
1211:Generated_Source\PSoC5/ADC.c ****             coefA = ADC_1UV_COUNTS;
 1714              		.loc 1 1211 0
 1715 0062 124B     		ldr	r3, .L96+4
 1716 0064 7B61     		str	r3, [r7, #20]
1212:Generated_Source\PSoC5/ADC.c ****             coefB = ADC_DIVISOR_1;
 1717              		.loc 1 1212 0
 1718 0066 0123     		movs	r3, #1
 1719 0068 3B61     		str	r3, [r7, #16]
1213:Generated_Source\PSoC5/ADC.c ****             break;
 1720              		.loc 1 1213 0
 1721 006a 00BF     		nop
 1722              	.L93:
1214:Generated_Source\PSoC5/ADC.c ****     }
1215:Generated_Source\PSoC5/ADC.c ****     coefB = ADC_CountsPerVolt / coefB;
 1723              		.loc 1 1215 0
 1724 006c 104B     		ldr	r3, .L96+8
 1725 006e 1A68     		ldr	r2, [r3]
 1726 0070 3B69     		ldr	r3, [r7, #16]
 1727 0072 92FBF3F3 		sdiv	r3, r2, r3
 1728 0076 3B61     		str	r3, [r7, #16]
1216:Generated_Source\PSoC5/ADC.c ****     uVolts = ((coefA * adcCounts) / coefB) - ((coefA * ADC_Offset) / coefB);
 1729              		.loc 1 1216 0
 1730 0078 7B69     		ldr	r3, [r7, #20]
 1731 007a 7A68     		ldr	r2, [r7, #4]
 1732 007c 02FB03F2 		mul	r2, r2, r3
 1733 0080 3B69     		ldr	r3, [r7, #16]
 1734 0082 92FBF3F2 		sdiv	r2, r2, r3
 1735 0086 0B4B     		ldr	r3, .L96+12
 1736 0088 1B68     		ldr	r3, [r3]
 1737 008a 7969     		ldr	r1, [r7, #20]
 1738 008c 01FB03F1 		mul	r1, r1, r3
 1739 0090 3B69     		ldr	r3, [r7, #16]
 1740 0092 91FBF3F3 		sdiv	r3, r1, r3
 1741 0096 D31A     		subs	r3, r2, r3
 1742 0098 BB60     		str	r3, [r7, #8]
1217:Generated_Source\PSoC5/ADC.c **** 
1218:Generated_Source\PSoC5/ADC.c ****     return( uVolts );
 1743              		.loc 1 1218 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 53


 1744 009a BB68     		ldr	r3, [r7, #8]
1219:Generated_Source\PSoC5/ADC.c **** }
 1745              		.loc 1 1219 0
 1746 009c 1846     		mov	r0, r3
 1747 009e 1C37     		adds	r7, r7, #28
 1748              		.cfi_def_cfa_offset 4
 1749 00a0 BD46     		mov	sp, r7
 1750              		.cfi_def_cfa_register 13
 1751              		@ sp needed
 1752 00a2 80BC     		pop	{r7}
 1753              		.cfi_restore 7
 1754              		.cfi_def_cfa_offset 0
 1755 00a4 7047     		bx	lr
 1756              	.L97:
 1757 00a6 00BF     		.align	2
 1758              	.L96:
 1759 00a8 00000000 		.word	ADC_Config
 1760 00ac 40420F00 		.word	1000000
 1761 00b0 00000000 		.word	ADC_CountsPerVolt
 1762 00b4 00000000 		.word	ADC_Offset
 1763              		.cfi_endproc
 1764              	.LFE18:
 1765              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1766              		.section	.text.ADC_InitConfig,"ax",%progbits
 1767              		.align	2
 1768              		.thumb
 1769              		.thumb_func
 1770              		.type	ADC_InitConfig, %function
 1771              	ADC_InitConfig:
 1772              	.LFB19:
1220:Generated_Source\PSoC5/ADC.c **** 
1221:Generated_Source\PSoC5/ADC.c **** 
1222:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1223:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_InitConfig(uint8 config)
1224:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1225:Generated_Source\PSoC5/ADC.c **** *
1226:Generated_Source\PSoC5/ADC.c **** * Summary:
1227:Generated_Source\PSoC5/ADC.c **** *  Initializes all registers based on customizer settings
1228:Generated_Source\PSoC5/ADC.c **** *
1229:Generated_Source\PSoC5/ADC.c **** * Parameters:
1230:Generated_Source\PSoC5/ADC.c **** *   void
1231:Generated_Source\PSoC5/ADC.c **** *
1232:Generated_Source\PSoC5/ADC.c **** * Return:
1233:Generated_Source\PSoC5/ADC.c **** *  None
1234:Generated_Source\PSoC5/ADC.c **** *
1235:Generated_Source\PSoC5/ADC.c **** * Global variables:
1236:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  Used to set the default counts per volt.
1237:Generated_Source\PSoC5/ADC.c **** *
1238:Generated_Source\PSoC5/ADC.c **** * Side Effects: Rewrites the coherency set by ADC_SetCoherency()
1239:Generated_Source\PSoC5/ADC.c **** *   API to the default value.
1240:Generated_Source\PSoC5/ADC.c **** *
1241:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1242:Generated_Source\PSoC5/ADC.c **** static void ADC_InitConfig(uint8 config) 
1243:Generated_Source\PSoC5/ADC.c **** {
 1773              		.loc 1 1243 0
 1774              		.cfi_startproc
 1775              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 54


 1776              		@ frame_needed = 1, uses_anonymous_args = 0
 1777 0000 80B5     		push	{r7, lr}
 1778              		.cfi_def_cfa_offset 8
 1779              		.cfi_offset 7, -8
 1780              		.cfi_offset 14, -4
 1781 0002 82B0     		sub	sp, sp, #8
 1782              		.cfi_def_cfa_offset 16
 1783 0004 00AF     		add	r7, sp, #0
 1784              		.cfi_def_cfa_register 7
 1785 0006 0346     		mov	r3, r0
 1786 0008 FB71     		strb	r3, [r7, #7]
1244:Generated_Source\PSoC5/ADC.c ****     ADC_stopConversion = 0u;
 1787              		.loc 1 1244 0
 1788 000a C24B     		ldr	r3, .L104
 1789 000c 0022     		movs	r2, #0
 1790 000e 1A70     		strb	r2, [r3]
1245:Generated_Source\PSoC5/ADC.c **** 
1246:Generated_Source\PSoC5/ADC.c ****     if (config == 1u)
 1791              		.loc 1 1246 0
 1792 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1793 0012 012B     		cmp	r3, #1
 1794 0014 68D1     		bne	.L99
1247:Generated_Source\PSoC5/ADC.c ****     {
1248:Generated_Source\PSoC5/ADC.c ****         /* Default Config */
1249:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_CR_REG      = ADC_CFG1_DEC_CR;
 1795              		.loc 1 1249 0
 1796 0016 C04B     		ldr	r3, .L104+4
 1797 0018 7C22     		movs	r2, #124
 1798 001a 1A70     		strb	r2, [r3]
1250:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_SHIFT1_REG  = ADC_CFG1_DEC_SHIFT1;
 1799              		.loc 1 1250 0
 1800 001c BF4B     		ldr	r3, .L104+8
 1801 001e 0022     		movs	r2, #0
 1802 0020 1A70     		strb	r2, [r3]
1251:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_SHIFT2_REG  = ADC_CFG1_DEC_SHIFT2;
 1803              		.loc 1 1251 0
 1804 0022 BF4B     		ldr	r3, .L104+12
 1805 0024 0922     		movs	r2, #9
 1806 0026 1A70     		strb	r2, [r3]
1252:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR2_REG     = ADC_CFG1_DEC_DR2;
 1807              		.loc 1 1252 0
 1808 0028 BE4B     		ldr	r3, .L104+16
 1809 002a 7F22     		movs	r2, #127
 1810 002c 1A70     		strb	r2, [r3]
1253:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR2H_REG    = ADC_CFG1_DEC_DR2H;
 1811              		.loc 1 1253 0
 1812 002e BE4B     		ldr	r3, .L104+20
 1813 0030 0022     		movs	r2, #0
 1814 0032 1A70     		strb	r2, [r3]
1254:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR1_REG     = ADC_CFG1_DEC_DR1;
 1815              		.loc 1 1254 0
 1816 0034 BD4B     		ldr	r3, .L104+24
 1817 0036 7F22     		movs	r2, #127
 1818 0038 1A70     		strb	r2, [r3]
1255:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCOR_REG    = ADC_CFG1_DEC_OCOR;
 1819              		.loc 1 1255 0
 1820 003a BD4B     		ldr	r3, .L104+28
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 55


 1821 003c 0022     		movs	r2, #0
 1822 003e 1A70     		strb	r2, [r3]
1256:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCORM_REG   = ADC_CFG1_DEC_OCORM;
 1823              		.loc 1 1256 0
 1824 0040 BC4B     		ldr	r3, .L104+32
 1825 0042 0022     		movs	r2, #0
 1826 0044 1A70     		strb	r2, [r3]
1257:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCORH_REG   = ADC_CFG1_DEC_OCORH;
 1827              		.loc 1 1257 0
 1828 0046 BC4B     		ldr	r3, .L104+36
 1829 0048 0022     		movs	r2, #0
 1830 004a 1A70     		strb	r2, [r3]
1258:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_COHER_REG   = ADC_CFG1_DEC_COHER;
 1831              		.loc 1 1258 0
 1832 004c BB4B     		ldr	r3, .L104+40
 1833 004e 0122     		movs	r2, #1
 1834 0050 1A70     		strb	r2, [r3]
1259:Generated_Source\PSoC5/ADC.c **** 
1260:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR4_REG     = ADC_CFG1_DSM_CR4;
 1835              		.loc 1 1260 0
 1836 0052 BB4B     		ldr	r3, .L104+44
 1837 0054 5022     		movs	r2, #80
 1838 0056 1A70     		strb	r2, [r3]
1261:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR5_REG     = ADC_CFG1_DSM_CR5;
 1839              		.loc 1 1261 0
 1840 0058 BA4B     		ldr	r3, .L104+48
 1841 005a 0722     		movs	r2, #7
 1842 005c 1A70     		strb	r2, [r3]
1262:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR6_REG     = ADC_CFG1_DSM_CR6;
 1843              		.loc 1 1262 0
 1844 005e BA4B     		ldr	r3, .L104+52
 1845 0060 2922     		movs	r2, #41
 1846 0062 1A70     		strb	r2, [r3]
1263:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR7_REG     = ADC_CFG1_DSM_CR7;
 1847              		.loc 1 1263 0
 1848 0064 B94B     		ldr	r3, .L104+56
 1849 0066 0022     		movs	r2, #0
 1850 0068 1A70     		strb	r2, [r3]
1264:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR10_REG    = ADC_CFG1_DSM_CR10;
 1851              		.loc 1 1264 0
 1852 006a B94B     		ldr	r3, .L104+60
 1853 006c 5522     		movs	r2, #85
 1854 006e 1A70     		strb	r2, [r3]
1265:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR11_REG    = ADC_CFG1_DSM_CR11;
 1855              		.loc 1 1265 0
 1856 0070 B84B     		ldr	r3, .L104+64
 1857 0072 5A22     		movs	r2, #90
 1858 0074 1A70     		strb	r2, [r3]
1266:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR12_REG    = ADC_CFG1_DSM_CR12;
 1859              		.loc 1 1266 0
 1860 0076 B84B     		ldr	r3, .L104+68
 1861 0078 0022     		movs	r2, #0
 1862 007a 1A70     		strb	r2, [r3]
1267:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR14_REG    = ADC_CFG1_DSM_CR14;
 1863              		.loc 1 1267 0
 1864 007c B74B     		ldr	r3, .L104+72
 1865 007e 0222     		movs	r2, #2
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 56


 1866 0080 1A70     		strb	r2, [r3]
1268:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR15_REG    = ADC_CFG1_DSM_CR15;
 1867              		.loc 1 1268 0
 1868 0082 B74B     		ldr	r3, .L104+76
 1869 0084 1222     		movs	r2, #18
 1870 0086 1A70     		strb	r2, [r3]
1269:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR16_REG    = ADC_CFG1_DSM_CR16;
 1871              		.loc 1 1269 0
 1872 0088 B64B     		ldr	r3, .L104+80
 1873 008a 2822     		movs	r2, #40
 1874 008c 1A70     		strb	r2, [r3]
1270:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR17_REG    = ADC_CFG1_DSM_CR17;
 1875              		.loc 1 1270 0
 1876 008e B64B     		ldr	r3, .L104+84
 1877 0090 EB22     		movs	r2, #235
 1878 0092 1A70     		strb	r2, [r3]
1271:Generated_Source\PSoC5/ADC.c ****         /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1272:Generated_Source\PSoC5/ADC.c ****         ADC_SetDSMRef0Reg(ADC_CFG1_DSM_REF0);
 1879              		.loc 1 1272 0
 1880 0094 4420     		movs	r0, #68
 1881 0096 FFF7FEFF 		bl	ADC_SetDSMRef0Reg
1273:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_REF2_REG    = ADC_CFG1_DSM_REF2;
 1882              		.loc 1 1273 0
 1883 009a B44B     		ldr	r3, .L104+88
 1884 009c 5822     		movs	r2, #88
 1885 009e 1A70     		strb	r2, [r3]
1274:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_REF3_REG    = ADC_CFG1_DSM_REF3;
 1886              		.loc 1 1274 0
 1887 00a0 B34B     		ldr	r3, .L104+92
 1888 00a2 0022     		movs	r2, #0
 1889 00a4 1A70     		strb	r2, [r3]
1275:Generated_Source\PSoC5/ADC.c **** 
1276:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF0_REG    = ADC_CFG1_DSM_BUF0;
 1890              		.loc 1 1276 0
 1891 00a6 B34B     		ldr	r3, .L104+96
 1892 00a8 0522     		movs	r2, #5
 1893 00aa 1A70     		strb	r2, [r3]
1277:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF1_REG    = ADC_CFG1_DSM_BUF1;
 1894              		.loc 1 1277 0
 1895 00ac B24B     		ldr	r3, .L104+100
 1896 00ae 0222     		movs	r2, #2
 1897 00b0 1A70     		strb	r2, [r3]
1278:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF2_REG    = ADC_CFG1_DSM_BUF2;
 1898              		.loc 1 1278 0
 1899 00b2 B24B     		ldr	r3, .L104+104
 1900 00b4 0022     		movs	r2, #0
 1901 00b6 1A70     		strb	r2, [r3]
1279:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF3_REG    = ADC_CFG1_DSM_BUF3;
 1902              		.loc 1 1279 0
 1903 00b8 B14B     		ldr	r3, .L104+108
 1904 00ba 0022     		movs	r2, #0
 1905 00bc 1A70     		strb	r2, [r3]
1280:Generated_Source\PSoC5/ADC.c **** 
1281:Generated_Source\PSoC5/ADC.c ****         /* To select either Vssa or Vref to -ve input of DSM depending on
1282:Generated_Source\PSoC5/ADC.c ****         *  the input  range selected.
1283:Generated_Source\PSoC5/ADC.c ****         */
1284:Generated_Source\PSoC5/ADC.c ****         #if(ADC_DEFAULT_INPUT_MODE)
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 57


1285:Generated_Source\PSoC5/ADC.c ****             #if (ADC_CFG1_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1286:Generated_Source\PSoC5/ADC.c ****                 ADC_AMux_Select(1u);
1287:Generated_Source\PSoC5/ADC.c ****             #else
1288:Generated_Source\PSoC5/ADC.c ****                 ADC_AMux_Select(0u);
 1906              		.loc 1 1288 0
 1907 00be 0020     		movs	r0, #0
 1908 00c0 FFF7FEFF 		bl	ADC_AMux_Select
1289:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_IR_VSSA_TO_2VREF) */
1290:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_DEFAULT_INPUT_MODE */
1291:Generated_Source\PSoC5/ADC.c **** 
1292:Generated_Source\PSoC5/ADC.c ****         /* Set the Conversion stop if resolution is above 16 bit and conversion
1293:Generated_Source\PSoC5/ADC.c ****         *   mode is Single sample
1294:Generated_Source\PSoC5/ADC.c ****         */
1295:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG1_RESOLUTION > 16 && \
1296:Generated_Source\PSoC5/ADC.c ****             ADC_CFG1_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1297:Generated_Source\PSoC5/ADC.c ****             ADC_stopConversion = 1u;
 1909              		.loc 1 1297 0
 1910 00c4 934B     		ldr	r3, .L104
 1911 00c6 0122     		movs	r2, #1
 1912 00c8 1A70     		strb	r2, [r3]
1298:Generated_Source\PSoC5/ADC.c ****         #endif /* Single sample with resolution above 16 bits. */
1299:Generated_Source\PSoC5/ADC.c **** 
1300:Generated_Source\PSoC5/ADC.c ****         ADC_CountsPerVolt = (int32)ADC_CFG1_COUNTS_PER_VOLT;
 1913              		.loc 1 1300 0
 1914 00ca AE4B     		ldr	r3, .L104+112
 1915 00cc AE4A     		ldr	r2, .L104+116
 1916 00ce 1A60     		str	r2, [r3]
1301:Generated_Source\PSoC5/ADC.c **** 
1302:Generated_Source\PSoC5/ADC.c ****         ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG1_CP_CLK_DIVIDER, 1u);
 1917              		.loc 1 1302 0
 1918 00d0 0121     		movs	r1, #1
 1919 00d2 0220     		movs	r0, #2
 1920 00d4 FFF7FEFF 		bl	ADC_Ext_CP_Clk_SetDividerRegister
1303:Generated_Source\PSoC5/ADC.c **** 
1304:Generated_Source\PSoC5/ADC.c ****         /* This is only valid if there is an internal clock */
1305:Generated_Source\PSoC5/ADC.c ****         #if(ADC_DEFAULT_INTERNAL_CLK)
1306:Generated_Source\PSoC5/ADC.c ****             ADC_theACLK_SetDividerRegister(ADC_CFG1_ADC_CLK_DIVIDER, 1u);
 1921              		.loc 1 1306 0
 1922 00d8 0121     		movs	r1, #1
 1923 00da 0D20     		movs	r0, #13
 1924 00dc FFF7FEFF 		bl	ADC_theACLK_SetDividerRegister
1307:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_DEFAULT_INTERNAL_CLK */
1308:Generated_Source\PSoC5/ADC.c **** 
1309:Generated_Source\PSoC5/ADC.c ****         #if(ADC_IRQ_REMOVE == 0u)
1310:Generated_Source\PSoC5/ADC.c ****             /* Set interrupt vector */
1311:Generated_Source\PSoC5/ADC.c ****             (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR1);
 1925              		.loc 1 1311 0
 1926 00e0 AA49     		ldr	r1, .L104+120
 1927 00e2 1D20     		movs	r0, #29
 1928 00e4 FFF7FEFF 		bl	CyIntSetVector
 1929              	.L99:
1312:Generated_Source\PSoC5/ADC.c ****         #endif   /* End ADC_IRQ_REMOVE */
1313:Generated_Source\PSoC5/ADC.c ****     }
1314:Generated_Source\PSoC5/ADC.c **** 
1315:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 1)
1316:Generated_Source\PSoC5/ADC.c ****         if(config == 2u)
 1930              		.loc 1 1316 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 58


 1931 00e8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1932 00ea 022B     		cmp	r3, #2
 1933 00ec 66D1     		bne	.L100
1317:Generated_Source\PSoC5/ADC.c ****         {
1318:Generated_Source\PSoC5/ADC.c ****             /* Second Config */
1319:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_CR_REG      = ADC_CFG2_DEC_CR;
 1934              		.loc 1 1319 0
 1935 00ee 8A4B     		ldr	r3, .L104+4
 1936 00f0 3822     		movs	r2, #56
 1937 00f2 1A70     		strb	r2, [r3]
1320:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG2_DEC_SHIFT1;
 1938              		.loc 1 1320 0
 1939 00f4 894B     		ldr	r3, .L104+8
 1940 00f6 0422     		movs	r2, #4
 1941 00f8 1A70     		strb	r2, [r3]
1321:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG2_DEC_SHIFT2;
 1942              		.loc 1 1321 0
 1943 00fa 894B     		ldr	r3, .L104+12
 1944 00fc 0622     		movs	r2, #6
 1945 00fe 1A70     		strb	r2, [r3]
1322:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG2_DEC_DR2;
 1946              		.loc 1 1322 0
 1947 0100 884B     		ldr	r3, .L104+16
 1948 0102 0022     		movs	r2, #0
 1949 0104 1A70     		strb	r2, [r3]
1323:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG2_DEC_DR2H;
 1950              		.loc 1 1323 0
 1951 0106 884B     		ldr	r3, .L104+20
 1952 0108 0022     		movs	r2, #0
 1953 010a 1A70     		strb	r2, [r3]
1324:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG2_DEC_DR1;
 1954              		.loc 1 1324 0
 1955 010c 874B     		ldr	r3, .L104+24
 1956 010e 3F22     		movs	r2, #63
 1957 0110 1A70     		strb	r2, [r3]
1325:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG2_DEC_OCOR;
 1958              		.loc 1 1325 0
 1959 0112 874B     		ldr	r3, .L104+28
 1960 0114 0022     		movs	r2, #0
 1961 0116 1A70     		strb	r2, [r3]
1326:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG2_DEC_OCORM;
 1962              		.loc 1 1326 0
 1963 0118 864B     		ldr	r3, .L104+32
 1964 011a 0022     		movs	r2, #0
 1965 011c 1A70     		strb	r2, [r3]
1327:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG2_DEC_OCORH;
 1966              		.loc 1 1327 0
 1967 011e 864B     		ldr	r3, .L104+36
 1968 0120 0022     		movs	r2, #0
 1969 0122 1A70     		strb	r2, [r3]
1328:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG2_DEC_COHER;
 1970              		.loc 1 1328 0
 1971 0124 854B     		ldr	r3, .L104+40
 1972 0126 0122     		movs	r2, #1
 1973 0128 1A70     		strb	r2, [r3]
1329:Generated_Source\PSoC5/ADC.c **** 
1330:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR4_REG     = ADC_CFG2_DSM_CR4;
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 59


 1974              		.loc 1 1330 0
 1975 012a 854B     		ldr	r3, .L104+44
 1976 012c 5022     		movs	r2, #80
 1977 012e 1A70     		strb	r2, [r3]
1331:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG2_DSM_CR5;
 1978              		.loc 1 1331 0
 1979 0130 844B     		ldr	r3, .L104+48
 1980 0132 2722     		movs	r2, #39
 1981 0134 1A70     		strb	r2, [r3]
1332:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG2_DSM_CR6;
 1982              		.loc 1 1332 0
 1983 0136 844B     		ldr	r3, .L104+52
 1984 0138 2C22     		movs	r2, #44
 1985 013a 1A70     		strb	r2, [r3]
1333:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG2_DSM_CR7;
 1986              		.loc 1 1333 0
 1987 013c 834B     		ldr	r3, .L104+56
 1988 013e 0022     		movs	r2, #0
 1989 0140 1A70     		strb	r2, [r3]
1334:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG2_DSM_CR10;
 1990              		.loc 1 1334 0
 1991 0142 834B     		ldr	r3, .L104+60
 1992 0144 5522     		movs	r2, #85
 1993 0146 1A70     		strb	r2, [r3]
1335:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG2_DSM_CR11;
 1994              		.loc 1 1335 0
 1995 0148 824B     		ldr	r3, .L104+64
 1996 014a 5A22     		movs	r2, #90
 1997 014c 1A70     		strb	r2, [r3]
1336:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG2_DSM_CR12;
 1998              		.loc 1 1336 0
 1999 014e 824B     		ldr	r3, .L104+68
 2000 0150 0522     		movs	r2, #5
 2001 0152 1A70     		strb	r2, [r3]
1337:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG2_DSM_CR14;
 2002              		.loc 1 1337 0
 2003 0154 814B     		ldr	r3, .L104+72
 2004 0156 0122     		movs	r2, #1
 2005 0158 1A70     		strb	r2, [r3]
1338:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG2_DSM_CR15;
 2006              		.loc 1 1338 0
 2007 015a 814B     		ldr	r3, .L104+76
 2008 015c 1122     		movs	r2, #17
 2009 015e 1A70     		strb	r2, [r3]
1339:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG2_DSM_CR16;
 2010              		.loc 1 1339 0
 2011 0160 804B     		ldr	r3, .L104+80
 2012 0162 1922     		movs	r2, #25
 2013 0164 1A70     		strb	r2, [r3]
1340:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG2_DSM_CR17;
 2014              		.loc 1 1340 0
 2015 0166 804B     		ldr	r3, .L104+84
 2016 0168 9722     		movs	r2, #151
 2017 016a 1A70     		strb	r2, [r3]
1341:Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS cirucit */
1342:Generated_Source\PSoC5/ADC.c ****             ADC_SetDSMRef0Reg(ADC_CFG2_DSM_REF0);
 2018              		.loc 1 1342 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 60


 2019 016c 4420     		movs	r0, #68
 2020 016e FFF7FEFF 		bl	ADC_SetDSMRef0Reg
1343:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG2_DSM_REF2;
 2021              		.loc 1 1343 0
 2022 0172 7E4B     		ldr	r3, .L104+88
 2023 0174 5822     		movs	r2, #88
 2024 0176 1A70     		strb	r2, [r3]
1344:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG2_DSM_REF3;
 2025              		.loc 1 1344 0
 2026 0178 7D4B     		ldr	r3, .L104+92
 2027 017a 0022     		movs	r2, #0
 2028 017c 1A70     		strb	r2, [r3]
1345:Generated_Source\PSoC5/ADC.c **** 
1346:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF0_REG    = ADC_CFG2_DSM_BUF0;
 2029              		.loc 1 1346 0
 2030 017e 7D4B     		ldr	r3, .L104+96
 2031 0180 0522     		movs	r2, #5
 2032 0182 1A70     		strb	r2, [r3]
1347:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG2_DSM_BUF1;
 2033              		.loc 1 1347 0
 2034 0184 7C4B     		ldr	r3, .L104+100
 2035 0186 0222     		movs	r2, #2
 2036 0188 1A70     		strb	r2, [r3]
1348:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG2_DSM_BUF2;
 2037              		.loc 1 1348 0
 2038 018a 7C4B     		ldr	r3, .L104+104
 2039 018c 0022     		movs	r2, #0
 2040 018e 1A70     		strb	r2, [r3]
1349:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG2_DSM_BUF3;
 2041              		.loc 1 1349 0
 2042 0190 7B4B     		ldr	r3, .L104+108
 2043 0192 0022     		movs	r2, #0
 2044 0194 1A70     		strb	r2, [r3]
1350:Generated_Source\PSoC5/ADC.c **** 
1351:Generated_Source\PSoC5/ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1352:Generated_Source\PSoC5/ADC.c ****             *  the input range selected.
1353:Generated_Source\PSoC5/ADC.c ****             */
1354:Generated_Source\PSoC5/ADC.c **** 
1355:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INPUT_MODE)
1356:Generated_Source\PSoC5/ADC.c ****                 #if (ADC_CFG2_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1357:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(1u);
1358:Generated_Source\PSoC5/ADC.c ****                 #else
1359:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(0u);
 2045              		.loc 1 1359 0
 2046 0196 0020     		movs	r0, #0
 2047 0198 FFF7FEFF 		bl	ADC_AMux_Select
1360:Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
1361:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INPUT_MODE */
1362:Generated_Source\PSoC5/ADC.c **** 
1363:Generated_Source\PSoC5/ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1364:Generated_Source\PSoC5/ADC.c ****             *   conversion mode is Single sample
1365:Generated_Source\PSoC5/ADC.c ****             */
1366:Generated_Source\PSoC5/ADC.c ****             #if(ADC_CFG2_RESOLUTION > 16 && \
1367:Generated_Source\PSoC5/ADC.c ****                 ADC_CFG2_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1368:Generated_Source\PSoC5/ADC.c ****                 ADC_stopConversion = 1u;
1369:Generated_Source\PSoC5/ADC.c ****             #endif /* Single sample with resolution above 16 bits. */
1370:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 61


1371:Generated_Source\PSoC5/ADC.c ****             ADC_CountsPerVolt = (int32)ADC_CFG2_COUNTS_PER_VOLT;
 2048              		.loc 1 1371 0
 2049 019c 794B     		ldr	r3, .L104+112
 2050 019e 4FF47A42 		mov	r2, #64000
 2051 01a2 1A60     		str	r2, [r3]
1372:Generated_Source\PSoC5/ADC.c **** 
1373:Generated_Source\PSoC5/ADC.c ****             ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG2_CP_CLK_DIVIDER, 1u);
 2052              		.loc 1 1373 0
 2053 01a4 0121     		movs	r1, #1
 2054 01a6 0820     		movs	r0, #8
 2055 01a8 FFF7FEFF 		bl	ADC_Ext_CP_Clk_SetDividerRegister
1374:Generated_Source\PSoC5/ADC.c **** 
1375:Generated_Source\PSoC5/ADC.c ****             /* This is only valid if there is an internal clock */
1376:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INTERNAL_CLK)
1377:Generated_Source\PSoC5/ADC.c ****                 ADC_theACLK_SetDividerRegister(ADC_CFG2_ADC_CLK_DIVIDER, 1u);
 2056              		.loc 1 1377 0
 2057 01ac 0121     		movs	r1, #1
 2058 01ae 2520     		movs	r0, #37
 2059 01b0 FFF7FEFF 		bl	ADC_theACLK_SetDividerRegister
1378:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
1379:Generated_Source\PSoC5/ADC.c **** 
1380:Generated_Source\PSoC5/ADC.c ****             #if(ADC_IRQ_REMOVE == 0u)
1381:Generated_Source\PSoC5/ADC.c ****                 /* Set interrupt vector */
1382:Generated_Source\PSoC5/ADC.c ****                 (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR2);
 2060              		.loc 1 1382 0
 2061 01b4 7649     		ldr	r1, .L104+124
 2062 01b6 1D20     		movs	r0, #29
 2063 01b8 FFF7FEFF 		bl	CyIntSetVector
 2064              	.L100:
1383:Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
1384:Generated_Source\PSoC5/ADC.c ****         }
1385:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 1 */
1386:Generated_Source\PSoC5/ADC.c **** 
1387:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 2)
1388:Generated_Source\PSoC5/ADC.c ****         if(config == 3u)
 2065              		.loc 1 1388 0
 2066 01bc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2067 01be 032B     		cmp	r3, #3
 2068 01c0 66D1     		bne	.L101
1389:Generated_Source\PSoC5/ADC.c ****         {
1390:Generated_Source\PSoC5/ADC.c ****             /* Third Config */
1391:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_CR_REG      = ADC_CFG3_DEC_CR;
 2069              		.loc 1 1391 0
 2070 01c2 554B     		ldr	r3, .L104+4
 2071 01c4 3822     		movs	r2, #56
 2072 01c6 1A70     		strb	r2, [r3]
1392:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG3_DEC_SHIFT1;
 2073              		.loc 1 1392 0
 2074 01c8 544B     		ldr	r3, .L104+8
 2075 01ca 0422     		movs	r2, #4
 2076 01cc 1A70     		strb	r2, [r3]
1393:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG3_DEC_SHIFT2;
 2077              		.loc 1 1393 0
 2078 01ce 544B     		ldr	r3, .L104+12
 2079 01d0 0622     		movs	r2, #6
 2080 01d2 1A70     		strb	r2, [r3]
1394:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG3_DEC_DR2;
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 62


 2081              		.loc 1 1394 0
 2082 01d4 534B     		ldr	r3, .L104+16
 2083 01d6 0022     		movs	r2, #0
 2084 01d8 1A70     		strb	r2, [r3]
1395:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG3_DEC_DR2H;
 2085              		.loc 1 1395 0
 2086 01da 534B     		ldr	r3, .L104+20
 2087 01dc 0022     		movs	r2, #0
 2088 01de 1A70     		strb	r2, [r3]
1396:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG3_DEC_DR1;
 2089              		.loc 1 1396 0
 2090 01e0 524B     		ldr	r3, .L104+24
 2091 01e2 3F22     		movs	r2, #63
 2092 01e4 1A70     		strb	r2, [r3]
1397:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG3_DEC_OCOR;
 2093              		.loc 1 1397 0
 2094 01e6 524B     		ldr	r3, .L104+28
 2095 01e8 0022     		movs	r2, #0
 2096 01ea 1A70     		strb	r2, [r3]
1398:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG3_DEC_OCORM;
 2097              		.loc 1 1398 0
 2098 01ec 514B     		ldr	r3, .L104+32
 2099 01ee 0022     		movs	r2, #0
 2100 01f0 1A70     		strb	r2, [r3]
1399:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG3_DEC_OCORH;
 2101              		.loc 1 1399 0
 2102 01f2 514B     		ldr	r3, .L104+36
 2103 01f4 0022     		movs	r2, #0
 2104 01f6 1A70     		strb	r2, [r3]
1400:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG3_DEC_COHER;
 2105              		.loc 1 1400 0
 2106 01f8 504B     		ldr	r3, .L104+40
 2107 01fa 0122     		movs	r2, #1
 2108 01fc 1A70     		strb	r2, [r3]
1401:Generated_Source\PSoC5/ADC.c **** 
1402:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR4_REG     = ADC_CFG3_DSM_CR4;
 2109              		.loc 1 1402 0
 2110 01fe 504B     		ldr	r3, .L104+44
 2111 0200 5022     		movs	r2, #80
 2112 0202 1A70     		strb	r2, [r3]
1403:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG3_DSM_CR5;
 2113              		.loc 1 1403 0
 2114 0204 4F4B     		ldr	r3, .L104+48
 2115 0206 2722     		movs	r2, #39
 2116 0208 1A70     		strb	r2, [r3]
1404:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG3_DSM_CR6;
 2117              		.loc 1 1404 0
 2118 020a 4F4B     		ldr	r3, .L104+52
 2119 020c 2C22     		movs	r2, #44
 2120 020e 1A70     		strb	r2, [r3]
1405:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG3_DSM_CR7;
 2121              		.loc 1 1405 0
 2122 0210 4E4B     		ldr	r3, .L104+56
 2123 0212 0022     		movs	r2, #0
 2124 0214 1A70     		strb	r2, [r3]
1406:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG3_DSM_CR10;
 2125              		.loc 1 1406 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 63


 2126 0216 4E4B     		ldr	r3, .L104+60
 2127 0218 5522     		movs	r2, #85
 2128 021a 1A70     		strb	r2, [r3]
1407:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG3_DSM_CR11;
 2129              		.loc 1 1407 0
 2130 021c 4D4B     		ldr	r3, .L104+64
 2131 021e 5A22     		movs	r2, #90
 2132 0220 1A70     		strb	r2, [r3]
1408:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG3_DSM_CR12;
 2133              		.loc 1 1408 0
 2134 0222 4D4B     		ldr	r3, .L104+68
 2135 0224 0522     		movs	r2, #5
 2136 0226 1A70     		strb	r2, [r3]
1409:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG3_DSM_CR14;
 2137              		.loc 1 1409 0
 2138 0228 4C4B     		ldr	r3, .L104+72
 2139 022a 0122     		movs	r2, #1
 2140 022c 1A70     		strb	r2, [r3]
1410:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG3_DSM_CR15;
 2141              		.loc 1 1410 0
 2142 022e 4C4B     		ldr	r3, .L104+76
 2143 0230 1122     		movs	r2, #17
 2144 0232 1A70     		strb	r2, [r3]
1411:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG3_DSM_CR16;
 2145              		.loc 1 1411 0
 2146 0234 4B4B     		ldr	r3, .L104+80
 2147 0236 1922     		movs	r2, #25
 2148 0238 1A70     		strb	r2, [r3]
1412:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG3_DSM_CR17;
 2149              		.loc 1 1412 0
 2150 023a 4B4B     		ldr	r3, .L104+84
 2151 023c 9722     		movs	r2, #151
 2152 023e 1A70     		strb	r2, [r3]
1413:Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1414:Generated_Source\PSoC5/ADC.c ****             ADC_SetDSMRef0Reg(ADC_CFG3_DSM_REF0);
 2153              		.loc 1 1414 0
 2154 0240 4420     		movs	r0, #68
 2155 0242 FFF7FEFF 		bl	ADC_SetDSMRef0Reg
1415:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG3_DSM_REF2;
 2156              		.loc 1 1415 0
 2157 0246 494B     		ldr	r3, .L104+88
 2158 0248 5822     		movs	r2, #88
 2159 024a 1A70     		strb	r2, [r3]
1416:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG3_DSM_REF3;
 2160              		.loc 1 1416 0
 2161 024c 484B     		ldr	r3, .L104+92
 2162 024e 0022     		movs	r2, #0
 2163 0250 1A70     		strb	r2, [r3]
1417:Generated_Source\PSoC5/ADC.c **** 
1418:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF0_REG    = ADC_CFG3_DSM_BUF0;
 2164              		.loc 1 1418 0
 2165 0252 484B     		ldr	r3, .L104+96
 2166 0254 0522     		movs	r2, #5
 2167 0256 1A70     		strb	r2, [r3]
1419:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG3_DSM_BUF1;
 2168              		.loc 1 1419 0
 2169 0258 474B     		ldr	r3, .L104+100
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 64


 2170 025a 0222     		movs	r2, #2
 2171 025c 1A70     		strb	r2, [r3]
1420:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG3_DSM_BUF2;
 2172              		.loc 1 1420 0
 2173 025e 474B     		ldr	r3, .L104+104
 2174 0260 0022     		movs	r2, #0
 2175 0262 1A70     		strb	r2, [r3]
1421:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG3_DSM_BUF3;
 2176              		.loc 1 1421 0
 2177 0264 464B     		ldr	r3, .L104+108
 2178 0266 0022     		movs	r2, #0
 2179 0268 1A70     		strb	r2, [r3]
1422:Generated_Source\PSoC5/ADC.c **** 
1423:Generated_Source\PSoC5/ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1424:Generated_Source\PSoC5/ADC.c ****             *  the input range selected.
1425:Generated_Source\PSoC5/ADC.c ****             */
1426:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INPUT_MODE)
1427:Generated_Source\PSoC5/ADC.c ****                 #if (ADC_CFG3_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1428:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(1u);
1429:Generated_Source\PSoC5/ADC.c ****                 #else
1430:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(0u);
 2180              		.loc 1 1430 0
 2181 026a 0020     		movs	r0, #0
 2182 026c FFF7FEFF 		bl	ADC_AMux_Select
1431:Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
1432:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INPUT_MODE */
1433:Generated_Source\PSoC5/ADC.c **** 
1434:Generated_Source\PSoC5/ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1435:Generated_Source\PSoC5/ADC.c ****                conversion  mode is Single sample */
1436:Generated_Source\PSoC5/ADC.c ****             #if(ADC_CFG3_RESOLUTION > 16 && \
1437:Generated_Source\PSoC5/ADC.c ****                 ADC_CFG3_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1438:Generated_Source\PSoC5/ADC.c ****                 ADC_stopConversion = 1u;
1439:Generated_Source\PSoC5/ADC.c ****             #endif /* Single sample with resolution above 16 bits */
1440:Generated_Source\PSoC5/ADC.c **** 
1441:Generated_Source\PSoC5/ADC.c ****             ADC_CountsPerVolt = (int32)ADC_CFG3_COUNTS_PER_VOLT;
 2183              		.loc 1 1441 0
 2184 0270 444B     		ldr	r3, .L104+112
 2185 0272 4FF47A42 		mov	r2, #64000
 2186 0276 1A60     		str	r2, [r3]
1442:Generated_Source\PSoC5/ADC.c **** 
1443:Generated_Source\PSoC5/ADC.c ****             ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG3_CP_CLK_DIVIDER, 1u);
 2187              		.loc 1 1443 0
 2188 0278 0121     		movs	r1, #1
 2189 027a 0820     		movs	r0, #8
 2190 027c FFF7FEFF 		bl	ADC_Ext_CP_Clk_SetDividerRegister
1444:Generated_Source\PSoC5/ADC.c **** 
1445:Generated_Source\PSoC5/ADC.c ****             /* This is only valid if there is an internal clock */
1446:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INTERNAL_CLK)
1447:Generated_Source\PSoC5/ADC.c ****                 ADC_theACLK_SetDividerRegister(ADC_CFG3_ADC_CLK_DIVIDER, 1u);
 2191              		.loc 1 1447 0
 2192 0280 0121     		movs	r1, #1
 2193 0282 2520     		movs	r0, #37
 2194 0284 FFF7FEFF 		bl	ADC_theACLK_SetDividerRegister
1448:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
1449:Generated_Source\PSoC5/ADC.c **** 
1450:Generated_Source\PSoC5/ADC.c ****             #if(ADC_IRQ_REMOVE == 0u)
1451:Generated_Source\PSoC5/ADC.c ****                 /* Set interrupt vector */
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 65


1452:Generated_Source\PSoC5/ADC.c ****                 (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR3);
 2195              		.loc 1 1452 0
 2196 0288 4249     		ldr	r1, .L104+128
 2197 028a 1D20     		movs	r0, #29
 2198 028c FFF7FEFF 		bl	CyIntSetVector
 2199              	.L101:
1453:Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
1454:Generated_Source\PSoC5/ADC.c ****         }
1455:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 2 */
1456:Generated_Source\PSoC5/ADC.c **** 
1457:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 3)
1458:Generated_Source\PSoC5/ADC.c ****         if (config == 4u)
 2200              		.loc 1 1458 0
 2201 0290 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2202 0292 042B     		cmp	r3, #4
 2203 0294 40F0AB80 		bne	.L103
1459:Generated_Source\PSoC5/ADC.c ****         {
1460:Generated_Source\PSoC5/ADC.c ****             /* Fourth Config */
1461:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_CR_REG      = ADC_CFG4_DEC_CR;
 2204              		.loc 1 1461 0
 2205 0298 1F4B     		ldr	r3, .L104+4
 2206 029a 3822     		movs	r2, #56
 2207 029c 1A70     		strb	r2, [r3]
1462:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG4_DEC_SHIFT1;
 2208              		.loc 1 1462 0
 2209 029e 1F4B     		ldr	r3, .L104+8
 2210 02a0 0422     		movs	r2, #4
 2211 02a2 1A70     		strb	r2, [r3]
1463:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG4_DEC_SHIFT2;
 2212              		.loc 1 1463 0
 2213 02a4 1E4B     		ldr	r3, .L104+12
 2214 02a6 0622     		movs	r2, #6
 2215 02a8 1A70     		strb	r2, [r3]
1464:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG4_DEC_DR2;
 2216              		.loc 1 1464 0
 2217 02aa 1E4B     		ldr	r3, .L104+16
 2218 02ac 0022     		movs	r2, #0
 2219 02ae 1A70     		strb	r2, [r3]
1465:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG4_DEC_DR2H;
 2220              		.loc 1 1465 0
 2221 02b0 1D4B     		ldr	r3, .L104+20
 2222 02b2 0022     		movs	r2, #0
 2223 02b4 1A70     		strb	r2, [r3]
1466:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG4_DEC_DR1;
 2224              		.loc 1 1466 0
 2225 02b6 1D4B     		ldr	r3, .L104+24
 2226 02b8 3F22     		movs	r2, #63
 2227 02ba 1A70     		strb	r2, [r3]
1467:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG4_DEC_OCOR;
 2228              		.loc 1 1467 0
 2229 02bc 1C4B     		ldr	r3, .L104+28
 2230 02be 0022     		movs	r2, #0
 2231 02c0 1A70     		strb	r2, [r3]
1468:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG4_DEC_OCORM;
 2232              		.loc 1 1468 0
 2233 02c2 1C4B     		ldr	r3, .L104+32
 2234 02c4 0022     		movs	r2, #0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 66


 2235 02c6 1A70     		strb	r2, [r3]
1469:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG4_DEC_OCORH;
 2236              		.loc 1 1469 0
 2237 02c8 1B4B     		ldr	r3, .L104+36
 2238 02ca 0022     		movs	r2, #0
 2239 02cc 1A70     		strb	r2, [r3]
1470:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG4_DEC_COHER;
 2240              		.loc 1 1470 0
 2241 02ce 1B4B     		ldr	r3, .L104+40
 2242 02d0 0122     		movs	r2, #1
 2243 02d2 1A70     		strb	r2, [r3]
1471:Generated_Source\PSoC5/ADC.c **** 
1472:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR4_REG     = ADC_CFG4_DSM_CR4;
 2244              		.loc 1 1472 0
 2245 02d4 1A4B     		ldr	r3, .L104+44
 2246 02d6 5022     		movs	r2, #80
 2247 02d8 1A70     		strb	r2, [r3]
1473:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG4_DSM_CR5;
 2248              		.loc 1 1473 0
 2249 02da 1A4B     		ldr	r3, .L104+48
 2250 02dc 2722     		movs	r2, #39
 2251 02de 1A70     		strb	r2, [r3]
1474:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG4_DSM_CR6;
 2252              		.loc 1 1474 0
 2253 02e0 194B     		ldr	r3, .L104+52
 2254 02e2 2C22     		movs	r2, #44
 2255 02e4 1A70     		strb	r2, [r3]
1475:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG4_DSM_CR7;
 2256              		.loc 1 1475 0
 2257 02e6 194B     		ldr	r3, .L104+56
 2258 02e8 0022     		movs	r2, #0
 2259 02ea 1A70     		strb	r2, [r3]
1476:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG4_DSM_CR10;
 2260              		.loc 1 1476 0
 2261 02ec 184B     		ldr	r3, .L104+60
 2262 02ee 5522     		movs	r2, #85
 2263 02f0 1A70     		strb	r2, [r3]
1477:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG4_DSM_CR11;
 2264              		.loc 1 1477 0
 2265 02f2 184B     		ldr	r3, .L104+64
 2266 02f4 5A22     		movs	r2, #90
 2267 02f6 1A70     		strb	r2, [r3]
1478:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG4_DSM_CR12;
 2268              		.loc 1 1478 0
 2269 02f8 174B     		ldr	r3, .L104+68
 2270 02fa 0522     		movs	r2, #5
 2271 02fc 1A70     		strb	r2, [r3]
1479:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG4_DSM_CR14;
 2272              		.loc 1 1479 0
 2273 02fe 174B     		ldr	r3, .L104+72
 2274 0300 0122     		movs	r2, #1
 2275 0302 1A70     		strb	r2, [r3]
1480:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG4_DSM_CR15;
 2276              		.loc 1 1480 0
 2277 0304 164B     		ldr	r3, .L104+76
 2278 0306 1122     		movs	r2, #17
 2279 0308 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 67


1481:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG4_DSM_CR16;
 2280              		.loc 1 1481 0
 2281 030a 164B     		ldr	r3, .L104+80
 2282 030c 1922     		movs	r2, #25
 2283 030e 1A70     		strb	r2, [r3]
 2284 0310 42E0     		b	.L105
 2285              	.L106:
 2286 0312 00BF     		.align	2
 2287              	.L104:
 2288 0314 00000000 		.word	ADC_stopConversion
 2289 0318 004E0040 		.word	1073761792
 2290 031c 024E0040 		.word	1073761794
 2291 0320 034E0040 		.word	1073761795
 2292 0324 044E0040 		.word	1073761796
 2293 0328 054E0040 		.word	1073761797
 2294 032c 064E0040 		.word	1073761798
 2295 0330 084E0040 		.word	1073761800
 2296 0334 094E0040 		.word	1073761801
 2297 0338 0A4E0040 		.word	1073761802
 2298 033c 144E0040 		.word	1073761812
 2299 0340 84580040 		.word	1073764484
 2300 0344 85580040 		.word	1073764485
 2301 0348 86580040 		.word	1073764486
 2302 034c 87580040 		.word	1073764487
 2303 0350 8A580040 		.word	1073764490
 2304 0354 8B580040 		.word	1073764491
 2305 0358 8C580040 		.word	1073764492
 2306 035c 8E580040 		.word	1073764494
 2307 0360 8F580040 		.word	1073764495
 2308 0364 90580040 		.word	1073764496
 2309 0368 91580040 		.word	1073764497
 2310 036c 94580040 		.word	1073764500
 2311 0370 95580040 		.word	1073764501
 2312 0374 9A580040 		.word	1073764506
 2313 0378 9B580040 		.word	1073764507
 2314 037c 9C580040 		.word	1073764508
 2315 0380 9D580040 		.word	1073764509
 2316 0384 00000000 		.word	ADC_CountsPerVolt
 2317 0388 AB9A0200 		.word	170667
 2318 038c 00000000 		.word	ADC_ISR1
 2319 0390 00000000 		.word	ADC_ISR2
 2320 0394 00000000 		.word	ADC_ISR3
 2321              	.L105:
1482:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG4_DSM_CR17;
 2322              		.loc 1 1482 0
 2323 0398 174B     		ldr	r3, .L107
 2324 039a 9722     		movs	r2, #151
 2325 039c 1A70     		strb	r2, [r3]
1483:Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1484:Generated_Source\PSoC5/ADC.c ****             ADC_SetDSMRef0Reg(ADC_CFG4_DSM_REF0);
 2326              		.loc 1 1484 0
 2327 039e 4420     		movs	r0, #68
 2328 03a0 FFF7FEFF 		bl	ADC_SetDSMRef0Reg
1485:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG4_DSM_REF2;
 2329              		.loc 1 1485 0
 2330 03a4 154B     		ldr	r3, .L107+4
 2331 03a6 5822     		movs	r2, #88
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 68


 2332 03a8 1A70     		strb	r2, [r3]
1486:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG4_DSM_REF3;
 2333              		.loc 1 1486 0
 2334 03aa 154B     		ldr	r3, .L107+8
 2335 03ac 0022     		movs	r2, #0
 2336 03ae 1A70     		strb	r2, [r3]
1487:Generated_Source\PSoC5/ADC.c **** 
1488:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF0_REG    = ADC_CFG4_DSM_BUF0;
 2337              		.loc 1 1488 0
 2338 03b0 144B     		ldr	r3, .L107+12
 2339 03b2 0522     		movs	r2, #5
 2340 03b4 1A70     		strb	r2, [r3]
1489:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG4_DSM_BUF1;
 2341              		.loc 1 1489 0
 2342 03b6 144B     		ldr	r3, .L107+16
 2343 03b8 0222     		movs	r2, #2
 2344 03ba 1A70     		strb	r2, [r3]
1490:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG4_DSM_BUF2;
 2345              		.loc 1 1490 0
 2346 03bc 134B     		ldr	r3, .L107+20
 2347 03be 0022     		movs	r2, #0
 2348 03c0 1A70     		strb	r2, [r3]
1491:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG4_DSM_BUF3;
 2349              		.loc 1 1491 0
 2350 03c2 134B     		ldr	r3, .L107+24
 2351 03c4 0022     		movs	r2, #0
 2352 03c6 1A70     		strb	r2, [r3]
1492:Generated_Source\PSoC5/ADC.c **** 
1493:Generated_Source\PSoC5/ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1494:Generated_Source\PSoC5/ADC.c ****             *  the input range selected.
1495:Generated_Source\PSoC5/ADC.c ****             */
1496:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INPUT_MODE)
1497:Generated_Source\PSoC5/ADC.c ****                 #if (ADC_CFG4_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1498:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(1u);
1499:Generated_Source\PSoC5/ADC.c ****                 #else
1500:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(0u);
 2353              		.loc 1 1500 0
 2354 03c8 0020     		movs	r0, #0
 2355 03ca FFF7FEFF 		bl	ADC_AMux_Select
1501:Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
1502:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INPUT_MODE */
1503:Generated_Source\PSoC5/ADC.c **** 
1504:Generated_Source\PSoC5/ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1505:Generated_Source\PSoC5/ADC.c ****                conversion mode is Single sample */
1506:Generated_Source\PSoC5/ADC.c ****             #if(ADC_CFG4_RESOLUTION > 16 && \
1507:Generated_Source\PSoC5/ADC.c ****                 ADC_CFG4_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1508:Generated_Source\PSoC5/ADC.c ****                 ADC_stopConversion = 1u;
1509:Generated_Source\PSoC5/ADC.c ****             #endif /* Single sample with resolution above 16 bits */
1510:Generated_Source\PSoC5/ADC.c **** 
1511:Generated_Source\PSoC5/ADC.c ****             ADC_CountsPerVolt = (int32)ADC_CFG4_COUNTS_PER_VOLT;
 2356              		.loc 1 1511 0
 2357 03ce 114B     		ldr	r3, .L107+28
 2358 03d0 4FF47A42 		mov	r2, #64000
 2359 03d4 1A60     		str	r2, [r3]
1512:Generated_Source\PSoC5/ADC.c **** 
1513:Generated_Source\PSoC5/ADC.c ****             ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG4_CP_CLK_DIVIDER, 1u);
 2360              		.loc 1 1513 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 69


 2361 03d6 0121     		movs	r1, #1
 2362 03d8 0820     		movs	r0, #8
 2363 03da FFF7FEFF 		bl	ADC_Ext_CP_Clk_SetDividerRegister
1514:Generated_Source\PSoC5/ADC.c **** 
1515:Generated_Source\PSoC5/ADC.c ****             /* This is only valid if there is an internal clock */
1516:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INTERNAL_CLK)
1517:Generated_Source\PSoC5/ADC.c ****                 ADC_theACLK_SetDividerRegister(ADC_CFG4_ADC_CLK_DIVIDER, 1u);
 2364              		.loc 1 1517 0
 2365 03de 0121     		movs	r1, #1
 2366 03e0 2520     		movs	r0, #37
 2367 03e2 FFF7FEFF 		bl	ADC_theACLK_SetDividerRegister
1518:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
1519:Generated_Source\PSoC5/ADC.c **** 
1520:Generated_Source\PSoC5/ADC.c ****             #if(ADC_IRQ_REMOVE == 0u)
1521:Generated_Source\PSoC5/ADC.c ****                 /* Set interrupt vector */
1522:Generated_Source\PSoC5/ADC.c ****                 (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR4);
 2368              		.loc 1 1522 0
 2369 03e6 0C49     		ldr	r1, .L107+32
 2370 03e8 1D20     		movs	r0, #29
 2371 03ea FFF7FEFF 		bl	CyIntSetVector
 2372              	.L103:
1523:Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
1524:Generated_Source\PSoC5/ADC.c ****         }
1525:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 3 */
1526:Generated_Source\PSoC5/ADC.c **** }
 2373              		.loc 1 1526 0
 2374 03ee 00BF     		nop
 2375 03f0 0837     		adds	r7, r7, #8
 2376              		.cfi_def_cfa_offset 8
 2377 03f2 BD46     		mov	sp, r7
 2378              		.cfi_def_cfa_register 13
 2379              		@ sp needed
 2380 03f4 80BD     		pop	{r7, pc}
 2381              	.L108:
 2382 03f6 00BF     		.align	2
 2383              	.L107:
 2384 03f8 91580040 		.word	1073764497
 2385 03fc 94580040 		.word	1073764500
 2386 0400 95580040 		.word	1073764501
 2387 0404 9A580040 		.word	1073764506
 2388 0408 9B580040 		.word	1073764507
 2389 040c 9C580040 		.word	1073764508
 2390 0410 9D580040 		.word	1073764509
 2391 0414 00000000 		.word	ADC_CountsPerVolt
 2392 0418 00000000 		.word	ADC_ISR4
 2393              		.cfi_endproc
 2394              	.LFE19:
 2395              		.size	ADC_InitConfig, .-ADC_InitConfig
 2396              		.section	.text.ADC_SelectConfiguration,"ax",%progbits
 2397              		.align	2
 2398              		.global	ADC_SelectConfiguration
 2399              		.thumb
 2400              		.thumb_func
 2401              		.type	ADC_SelectConfiguration, %function
 2402              	ADC_SelectConfiguration:
 2403              	.LFB20:
1527:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 70


1528:Generated_Source\PSoC5/ADC.c **** 
1529:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1530:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SelectCofiguration
1531:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1532:Generated_Source\PSoC5/ADC.c **** *
1533:Generated_Source\PSoC5/ADC.c **** * Summary:
1534:Generated_Source\PSoC5/ADC.c **** *  Sets one of up to four ADC configurations. Before setting the new
1535:Generated_Source\PSoC5/ADC.c **** *  configuration, the ADC is stopped and powered down. After setting
1536:Generated_Source\PSoC5/ADC.c **** *  the new configuration, the ADC can be powered and conversion
1537:Generated_Source\PSoC5/ADC.c **** *  can be restarted depending up on the value of second parameter
1538:Generated_Source\PSoC5/ADC.c **** *  restart. If the value of this parameter is 1, then ADC will be
1539:Generated_Source\PSoC5/ADC.c **** *  restarted. If this value is zero, then user must call ADC_Start
1540:Generated_Source\PSoC5/ADC.c **** *  and ADC_StartConvert() to restart the conversion.
1541:Generated_Source\PSoC5/ADC.c **** *
1542:Generated_Source\PSoC5/ADC.c **** * Parameters:
1543:Generated_Source\PSoC5/ADC.c **** *  config:  configuration user wants to select.
1544:Generated_Source\PSoC5/ADC.c **** *           Valid range: 1..4
1545:Generated_Source\PSoC5/ADC.c **** *  restart:  Restart option. 1 means start the ADC and restart the conversion.
1546:Generated_Source\PSoC5/ADC.c **** *                            0 means do not start the ADC and conversion.
1547:Generated_Source\PSoC5/ADC.c **** *
1548:Generated_Source\PSoC5/ADC.c **** * Return:
1549:Generated_Source\PSoC5/ADC.c **** *  None
1550:Generated_Source\PSoC5/ADC.c **** *
1551:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1552:Generated_Source\PSoC5/ADC.c **** void ADC_SelectConfiguration(uint8 config, uint8 restart)
1553:Generated_Source\PSoC5/ADC.c ****                                               
1554:Generated_Source\PSoC5/ADC.c **** {
 2404              		.loc 1 1554 0
 2405              		.cfi_startproc
 2406              		@ args = 0, pretend = 0, frame = 8
 2407              		@ frame_needed = 1, uses_anonymous_args = 0
 2408 0000 80B5     		push	{r7, lr}
 2409              		.cfi_def_cfa_offset 8
 2410              		.cfi_offset 7, -8
 2411              		.cfi_offset 14, -4
 2412 0002 82B0     		sub	sp, sp, #8
 2413              		.cfi_def_cfa_offset 16
 2414 0004 00AF     		add	r7, sp, #0
 2415              		.cfi_def_cfa_register 7
 2416 0006 0346     		mov	r3, r0
 2417 0008 0A46     		mov	r2, r1
 2418 000a FB71     		strb	r3, [r7, #7]
 2419 000c 1346     		mov	r3, r2
 2420 000e BB71     		strb	r3, [r7, #6]
1555:Generated_Source\PSoC5/ADC.c ****     /* Check whether the configuration number is valid or not */
1556:Generated_Source\PSoC5/ADC.c ****     if((config > 0u) && (config <= ADC_DEFAULT_NUM_CONFIGS))
 2421              		.loc 1 1556 0
 2422 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2423 0012 002B     		cmp	r3, #0
 2424 0014 29D0     		beq	.L110
 2425              		.loc 1 1556 0 is_stmt 0 discriminator 1
 2426 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2427 0018 042B     		cmp	r3, #4
 2428 001a 26D8     		bhi	.L110
1557:Generated_Source\PSoC5/ADC.c ****     {
1558:Generated_Source\PSoC5/ADC.c ****         /* Set the flag to ensure Start() API doesn't override the 
1559:Generated_Source\PSoC5/ADC.c **** 		*  selected configuration
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 71


1560:Generated_Source\PSoC5/ADC.c **** 		*/
1561:Generated_Source\PSoC5/ADC.c ****         if(ADC_initVar == 0u)
 2429              		.loc 1 1561 0 is_stmt 1
 2430 001c 164B     		ldr	r3, .L114
 2431 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2432 0020 002B     		cmp	r3, #0
 2433 0022 02D1     		bne	.L111
1562:Generated_Source\PSoC5/ADC.c ****         {
1563:Generated_Source\PSoC5/ADC.c ****             ADC_started = 1u;
 2434              		.loc 1 1563 0
 2435 0024 154B     		ldr	r3, .L114+4
 2436 0026 0122     		movs	r2, #1
 2437 0028 1A70     		strb	r2, [r3]
 2438              	.L111:
1564:Generated_Source\PSoC5/ADC.c ****         }
1565:Generated_Source\PSoC5/ADC.c **** 
1566:Generated_Source\PSoC5/ADC.c ****         /* Update the config flag */
1567:Generated_Source\PSoC5/ADC.c ****         ADC_Config = config;
 2439              		.loc 1 1567 0
 2440 002a 154A     		ldr	r2, .L114+8
 2441 002c FB79     		ldrb	r3, [r7, #7]
 2442 002e 1370     		strb	r3, [r2]
1568:Generated_Source\PSoC5/ADC.c **** 
1569:Generated_Source\PSoC5/ADC.c ****         /* Stop the ADC  */
1570:Generated_Source\PSoC5/ADC.c ****         ADC_Stop();
 2443              		.loc 1 1570 0
 2444 0030 FFF7FEFF 		bl	ADC_Stop
1571:Generated_Source\PSoC5/ADC.c **** 
1572:Generated_Source\PSoC5/ADC.c ****         /* Set the  ADC registers based on the configuration */
1573:Generated_Source\PSoC5/ADC.c ****         ADC_InitConfig(config);
 2445              		.loc 1 1573 0
 2446 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2447 0036 1846     		mov	r0, r3
 2448 0038 FFF7FEFF 		bl	ADC_InitConfig
1574:Generated_Source\PSoC5/ADC.c **** 
1575:Generated_Source\PSoC5/ADC.c ****         /* Compensate the gain */
1576:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_GVAL_REG = ADC_gcor[config - 1u].gval;
 2449              		.loc 1 1576 0
 2450 003c 114A     		ldr	r2, .L114+12
 2451 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2452 0040 013B     		subs	r3, r3, #1
 2453 0042 1149     		ldr	r1, .L114+16
 2454 0044 9B00     		lsls	r3, r3, #2
 2455 0046 0B44     		add	r3, r3, r1
 2456 0048 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2457 004a 1370     		strb	r3, [r2]
1577:Generated_Source\PSoC5/ADC.c ****         CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, ADC_gcor[config - 1u].gcor);
 2458              		.loc 1 1577 0
 2459 004c 0F4A     		ldr	r2, .L114+20
 2460 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2461 0050 013B     		subs	r3, r3, #1
 2462 0052 0D49     		ldr	r1, .L114+16
 2463 0054 31F82330 		ldrh	r3, [r1, r3, lsl #2]
 2464 0058 1380     		strh	r3, [r2]	@ movhi
1578:Generated_Source\PSoC5/ADC.c **** 
1579:Generated_Source\PSoC5/ADC.c ****         if(restart == 1u)
 2465              		.loc 1 1579 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 72


 2466 005a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2467 005c 012B     		cmp	r3, #1
 2468 005e 07D1     		bne	.L113
1580:Generated_Source\PSoC5/ADC.c ****         {
1581:Generated_Source\PSoC5/ADC.c ****             /* Restart the ADC */
1582:Generated_Source\PSoC5/ADC.c ****             ADC_Start();
 2469              		.loc 1 1582 0
 2470 0060 FFF7FEFF 		bl	ADC_Start
1583:Generated_Source\PSoC5/ADC.c **** 
1584:Generated_Source\PSoC5/ADC.c ****             /* Restart the ADC conversion */
1585:Generated_Source\PSoC5/ADC.c ****             ADC_StartConvert();
 2471              		.loc 1 1585 0
 2472 0064 FFF7FEFF 		bl	ADC_StartConvert
1579:Generated_Source\PSoC5/ADC.c ****         {
 2473              		.loc 1 1579 0
 2474 0068 02E0     		b	.L113
 2475              	.L110:
1586:Generated_Source\PSoC5/ADC.c ****         }
1587:Generated_Source\PSoC5/ADC.c ****     }
1588:Generated_Source\PSoC5/ADC.c ****     else
1589:Generated_Source\PSoC5/ADC.c ****     {
1590:Generated_Source\PSoC5/ADC.c ****         /* Halt CPU in debug mode if config is out of valid range */
1591:Generated_Source\PSoC5/ADC.c ****         CYASSERT(0u != 0u);
 2476              		.loc 1 1591 0 discriminator 1
 2477 006a 0020     		movs	r0, #0
 2478 006c FFF7FEFF 		bl	CyHalt
 2479              	.L113:
1592:Generated_Source\PSoC5/ADC.c ****     }
1593:Generated_Source\PSoC5/ADC.c **** }
 2480              		.loc 1 1593 0
 2481 0070 00BF     		nop
 2482 0072 0837     		adds	r7, r7, #8
 2483              		.cfi_def_cfa_offset 8
 2484 0074 BD46     		mov	sp, r7
 2485              		.cfi_def_cfa_register 13
 2486              		@ sp needed
 2487 0076 80BD     		pop	{r7, pc}
 2488              	.L115:
 2489              		.align	2
 2490              	.L114:
 2491 0078 00000000 		.word	ADC_initVar
 2492 007c 00000000 		.word	ADC_started
 2493 0080 00000000 		.word	ADC_Config
 2494 0084 0E4E0040 		.word	1073761806
 2495 0088 04000000 		.word	ADC_gcor
 2496 008c 0C4E0040 		.word	1073761804
 2497              		.cfi_endproc
 2498              	.LFE20:
 2499              		.size	ADC_SelectConfiguration, .-ADC_SelectConfiguration
 2500              		.section	.text.ADC_GainCompensation,"ax",%progbits
 2501              		.align	2
 2502              		.thumb
 2503              		.thumb_func
 2504              		.type	ADC_GainCompensation, %function
 2505              	ADC_GainCompensation:
 2506              	.LFB21:
1594:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 73


1595:Generated_Source\PSoC5/ADC.c **** 
1596:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1597:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GainCompensation
1598:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1599:Generated_Source\PSoC5/ADC.c **** *
1600:Generated_Source\PSoC5/ADC.c **** * Summary:
1601:Generated_Source\PSoC5/ADC.c **** *  This API calculates the trim value and then store this to gcor structure.
1602:Generated_Source\PSoC5/ADC.c **** *
1603:Generated_Source\PSoC5/ADC.c **** * Parameters:
1604:Generated_Source\PSoC5/ADC.c **** *  inputRange:  input range for which trim value is to be calculated.
1605:Generated_Source\PSoC5/ADC.c **** *  IdealDecGain:  Ideal Decimator gain for the selected resolution and
1606:Generated_Source\PSoC5/ADC.c **** *                 conversion  mode.
1607:Generated_Source\PSoC5/ADC.c **** *  IdealOddDecGain:  Ideal odd decimation gain for the selected resolution and
1608:Generated_Source\PSoC5/ADC.c ****                      conversion mode.
1609:Generated_Source\PSoC5/ADC.c **** *  resolution:  Resolution to select the proper flash location for trim value.
1610:Generated_Source\PSoC5/ADC.c **** *  config:      Specifies the configuration number
1611:Generated_Source\PSoC5/ADC.c **** *               Valid range: 1..4
1612:Generated_Source\PSoC5/ADC.c **** *
1613:Generated_Source\PSoC5/ADC.c **** * Return:
1614:Generated_Source\PSoC5/ADC.c **** *  None
1615:Generated_Source\PSoC5/ADC.c **** *
1616:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1617:Generated_Source\PSoC5/ADC.c **** static void ADC_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGain,
1618:Generated_Source\PSoC5/ADC.c ****                               uint8 resolution, uint8 config) 
1619:Generated_Source\PSoC5/ADC.c **** {
 2507              		.loc 1 1619 0
 2508              		.cfi_startproc
 2509              		@ args = 4, pretend = 0, frame = 24
 2510              		@ frame_needed = 1, uses_anonymous_args = 0
 2511 0000 90B5     		push	{r4, r7, lr}
 2512              		.cfi_def_cfa_offset 12
 2513              		.cfi_offset 4, -12
 2514              		.cfi_offset 7, -8
 2515              		.cfi_offset 14, -4
 2516 0002 87B0     		sub	sp, sp, #28
 2517              		.cfi_def_cfa_offset 40
 2518 0004 00AF     		add	r7, sp, #0
 2519              		.cfi_def_cfa_register 7
 2520 0006 0446     		mov	r4, r0
 2521 0008 0846     		mov	r0, r1
 2522 000a 1146     		mov	r1, r2
 2523 000c 1A46     		mov	r2, r3
 2524 000e 2346     		mov	r3, r4
 2525 0010 FB71     		strb	r3, [r7, #7]
 2526 0012 0346     		mov	r3, r0	@ movhi
 2527 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 2528 0016 0B46     		mov	r3, r1	@ movhi
 2529 0018 7B80     		strh	r3, [r7, #2]	@ movhi
 2530 001a 1346     		mov	r3, r2
 2531 001c BB71     		strb	r3, [r7, #6]
1620:Generated_Source\PSoC5/ADC.c ****     int8 flash;
1621:Generated_Source\PSoC5/ADC.c **** 	int32 normalised;
1622:Generated_Source\PSoC5/ADC.c **** 	uint16 gcorValue;
1623:Generated_Source\PSoC5/ADC.c ****     uint32 gcorTmp;
1624:Generated_Source\PSoC5/ADC.c **** 
1625:Generated_Source\PSoC5/ADC.c ****     if((config > 0u) && (config <= ADC_DEFAULT_NUM_CONFIGS))
 2532              		.loc 1 1625 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 74


 2533 001e 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2534 0022 002B     		cmp	r3, #0
 2535 0024 00F08B80 		beq	.L117
 2536              		.loc 1 1625 0 is_stmt 0 discriminator 1
 2537 0028 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2538 002c 042B     		cmp	r3, #4
 2539 002e 00F28680 		bhi	.L117
1626:Generated_Source\PSoC5/ADC.c ****     {
1627:Generated_Source\PSoC5/ADC.c ****         switch(inputRange)
 2540              		.loc 1 1627 0 is_stmt 1
 2541 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2542 0034 013B     		subs	r3, r3, #1
 2543 0036 092B     		cmp	r3, #9
 2544 0038 4AD8     		bhi	.L118
 2545 003a 01A2     		adr	r2, .L120
 2546 003c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2547              		.p2align 2
 2548              	.L120:
 2549 0040 69000000 		.word	.L119+1
 2550 0044 D1000000 		.word	.L118+1
 2551 0048 D1000000 		.word	.L118+1
 2552 004c 69000000 		.word	.L119+1
 2553 0050 D1000000 		.word	.L118+1
 2554 0054 D1000000 		.word	.L118+1
 2555 0058 83000000 		.word	.L121+1
 2556 005c 9D000000 		.word	.L122+1
 2557 0060 D1000000 		.word	.L118+1
 2558 0064 B7000000 		.word	.L123+1
 2559              		.p2align 1
 2560              	.L119:
1628:Generated_Source\PSoC5/ADC.c ****         {
1629:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_DIFF:
1630:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VSSA_TO_2VREF:
1631:Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1632:Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
 2561              		.loc 1 1632 0
 2562 0068 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2563 006a 0F2B     		cmp	r3, #15
 2564 006c 04D9     		bls	.L124
1633:Generated_Source\PSoC5/ADC.c ****                 {
1634:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_DIFF_16_20;
 2565              		.loc 1 1634 0
 2566 006e 374B     		ldr	r3, .L136
 2567 0070 1B78     		ldrb	r3, [r3]
 2568 0072 DBB2     		uxtb	r3, r3
 2569 0074 FB75     		strb	r3, [r7, #23]
1635:Generated_Source\PSoC5/ADC.c ****                 }
1636:Generated_Source\PSoC5/ADC.c ****                 else
1637:Generated_Source\PSoC5/ADC.c ****                 {
1638:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_DIFF_8_15;
1639:Generated_Source\PSoC5/ADC.c ****                 }
1640:Generated_Source\PSoC5/ADC.c ****                 break;
 2570              		.loc 1 1640 0
 2571 0076 2EE0     		b	.L126
 2572              	.L124:
1638:Generated_Source\PSoC5/ADC.c ****                 }
 2573              		.loc 1 1638 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 75


 2574 0078 354B     		ldr	r3, .L136+4
 2575 007a 1B78     		ldrb	r3, [r3]
 2576 007c DBB2     		uxtb	r3, r3
 2577 007e FB75     		strb	r3, [r7, #23]
 2578              		.loc 1 1640 0
 2579 0080 29E0     		b	.L126
 2580              	.L121:
1641:Generated_Source\PSoC5/ADC.c **** 
1642:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_2_DIFF:
1643:Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1644:Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
 2581              		.loc 1 1644 0
 2582 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2583 0084 0F2B     		cmp	r3, #15
 2584 0086 04D9     		bls	.L127
1645:Generated_Source\PSoC5/ADC.c ****                 {
1646:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_2_DIFF_16_20;
 2585              		.loc 1 1646 0
 2586 0088 324B     		ldr	r3, .L136+8
 2587 008a 1B78     		ldrb	r3, [r3]
 2588 008c DBB2     		uxtb	r3, r3
 2589 008e FB75     		strb	r3, [r7, #23]
1647:Generated_Source\PSoC5/ADC.c ****                 }
1648:Generated_Source\PSoC5/ADC.c ****                 else
1649:Generated_Source\PSoC5/ADC.c ****                 {
1650:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_2_DIFF_8_15;
1651:Generated_Source\PSoC5/ADC.c ****                 }
1652:Generated_Source\PSoC5/ADC.c ****                 break;
 2590              		.loc 1 1652 0
 2591 0090 21E0     		b	.L126
 2592              	.L127:
1650:Generated_Source\PSoC5/ADC.c ****                 }
 2593              		.loc 1 1650 0
 2594 0092 314B     		ldr	r3, .L136+12
 2595 0094 1B78     		ldrb	r3, [r3]
 2596 0096 DBB2     		uxtb	r3, r3
 2597 0098 FB75     		strb	r3, [r7, #23]
 2598              		.loc 1 1652 0
 2599 009a 1CE0     		b	.L126
 2600              	.L122:
1653:Generated_Source\PSoC5/ADC.c **** 
1654:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_4_DIFF:
1655:Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1656:Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
 2601              		.loc 1 1656 0
 2602 009c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2603 009e 0F2B     		cmp	r3, #15
 2604 00a0 04D9     		bls	.L129
1657:Generated_Source\PSoC5/ADC.c ****                 {
1658:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_4_DIFF_16_20;
 2605              		.loc 1 1658 0
 2606 00a2 2E4B     		ldr	r3, .L136+16
 2607 00a4 1B78     		ldrb	r3, [r3]
 2608 00a6 DBB2     		uxtb	r3, r3
 2609 00a8 FB75     		strb	r3, [r7, #23]
1659:Generated_Source\PSoC5/ADC.c ****                 }
1660:Generated_Source\PSoC5/ADC.c ****                 else
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 76


1661:Generated_Source\PSoC5/ADC.c ****                 {
1662:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_4_DIFF_8_15;
1663:Generated_Source\PSoC5/ADC.c ****                 }
1664:Generated_Source\PSoC5/ADC.c ****                 break;
 2610              		.loc 1 1664 0
 2611 00aa 14E0     		b	.L126
 2612              	.L129:
1662:Generated_Source\PSoC5/ADC.c ****                 }
 2613              		.loc 1 1662 0
 2614 00ac 2C4B     		ldr	r3, .L136+20
 2615 00ae 1B78     		ldrb	r3, [r3]
 2616 00b0 DBB2     		uxtb	r3, r3
 2617 00b2 FB75     		strb	r3, [r7, #23]
 2618              		.loc 1 1664 0
 2619 00b4 0FE0     		b	.L126
 2620              	.L123:
1665:Generated_Source\PSoC5/ADC.c **** 
1666:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_16_DIFF:
1667:Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1668:Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
 2621              		.loc 1 1668 0
 2622 00b6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2623 00b8 0F2B     		cmp	r3, #15
 2624 00ba 04D9     		bls	.L131
1669:Generated_Source\PSoC5/ADC.c ****                 {
1670:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_16_DIFF_16_20;
 2625              		.loc 1 1670 0
 2626 00bc 294B     		ldr	r3, .L136+24
 2627 00be 1B78     		ldrb	r3, [r3]
 2628 00c0 DBB2     		uxtb	r3, r3
 2629 00c2 FB75     		strb	r3, [r7, #23]
1671:Generated_Source\PSoC5/ADC.c ****                 }
1672:Generated_Source\PSoC5/ADC.c ****                 else
1673:Generated_Source\PSoC5/ADC.c ****                 {
1674:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_16_DIFF_8_15;
1675:Generated_Source\PSoC5/ADC.c ****                 }
1676:Generated_Source\PSoC5/ADC.c ****                 break;
 2630              		.loc 1 1676 0
 2631 00c4 07E0     		b	.L126
 2632              	.L131:
1674:Generated_Source\PSoC5/ADC.c ****                 }
 2633              		.loc 1 1674 0
 2634 00c6 284B     		ldr	r3, .L136+28
 2635 00c8 1B78     		ldrb	r3, [r3]
 2636 00ca DBB2     		uxtb	r3, r3
 2637 00cc FB75     		strb	r3, [r7, #23]
 2638              		.loc 1 1676 0
 2639 00ce 02E0     		b	.L126
 2640              	.L118:
1677:Generated_Source\PSoC5/ADC.c **** 
1678:Generated_Source\PSoC5/ADC.c ****             default:
1679:Generated_Source\PSoC5/ADC.c ****                 flash = 0;
 2641              		.loc 1 1679 0
 2642 00d0 0023     		movs	r3, #0
 2643 00d2 FB75     		strb	r3, [r7, #23]
1680:Generated_Source\PSoC5/ADC.c ****                 break;
 2644              		.loc 1 1680 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 77


 2645 00d4 00BF     		nop
 2646              	.L126:
1681:Generated_Source\PSoC5/ADC.c ****         }
1682:Generated_Source\PSoC5/ADC.c **** 
1683:Generated_Source\PSoC5/ADC.c ****         /* Add two values */
1684:Generated_Source\PSoC5/ADC.c **** 		normalised = (int32)idealDecGain + ((int32)flash * 32);
 2647              		.loc 1 1684 0
 2648 00d6 BA88     		ldrh	r2, [r7, #4]
 2649 00d8 97F91730 		ldrsb	r3, [r7, #23]
 2650 00dc 5B01     		lsls	r3, r3, #5
 2651 00de 1344     		add	r3, r3, r2
 2652 00e0 3B61     		str	r3, [r7, #16]
1685:Generated_Source\PSoC5/ADC.c ****         gcorTmp = (uint32)normalised * (uint32)idealOddDecGain;
 2653              		.loc 1 1685 0
 2654 00e2 7B88     		ldrh	r3, [r7, #2]
 2655 00e4 3A69     		ldr	r2, [r7, #16]
 2656 00e6 02FB03F3 		mul	r3, r2, r3
 2657 00ea FB60     		str	r3, [r7, #12]
1686:Generated_Source\PSoC5/ADC.c ****         gcorValue = (uint16)(gcorTmp / ADC_IDEAL_GAIN_CONST);
 2658              		.loc 1 1686 0
 2659 00ec FB68     		ldr	r3, [r7, #12]
 2660 00ee DB0B     		lsrs	r3, r3, #15
 2661 00f0 BB82     		strh	r3, [r7, #20]	@ movhi
1687:Generated_Source\PSoC5/ADC.c **** 
1688:Generated_Source\PSoC5/ADC.c ****         if (resolution < (ADC_MAX_GVAL - 1u))
 2662              		.loc 1 1688 0
 2663 00f2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2664 00f4 0D2B     		cmp	r3, #13
 2665 00f6 12D8     		bhi	.L133
1689:Generated_Source\PSoC5/ADC.c ****         {
1690:Generated_Source\PSoC5/ADC.c ****             gcorValue = (gcorValue >> (ADC_MAX_GVAL - (resolution + 1u)));
 2666              		.loc 1 1690 0
 2667 00f8 BA8A     		ldrh	r2, [r7, #20]
 2668 00fa BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2669 00fc C3F10E03 		rsb	r3, r3, #14
 2670 0100 42FA03F3 		asr	r3, r2, r3
 2671 0104 BB82     		strh	r3, [r7, #20]	@ movhi
1691:Generated_Source\PSoC5/ADC.c ****             ADC_gcor[config - 1u].gval = (resolution + 1u);
 2672              		.loc 1 1691 0
 2673 0106 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2674 010a 013B     		subs	r3, r3, #1
 2675 010c BA79     		ldrb	r2, [r7, #6]
 2676 010e 0132     		adds	r2, r2, #1
 2677 0110 D1B2     		uxtb	r1, r2
 2678 0112 164A     		ldr	r2, .L136+32
 2679 0114 9B00     		lsls	r3, r3, #2
 2680 0116 1344     		add	r3, r3, r2
 2681 0118 0A46     		mov	r2, r1
 2682 011a 9A70     		strb	r2, [r3, #2]
 2683 011c 07E0     		b	.L134
 2684              	.L133:
1692:Generated_Source\PSoC5/ADC.c ****         }
1693:Generated_Source\PSoC5/ADC.c ****         else
1694:Generated_Source\PSoC5/ADC.c ****         {
1695:Generated_Source\PSoC5/ADC.c ****             /* Use all 16 bits */
1696:Generated_Source\PSoC5/ADC.c ****             ADC_gcor[config - 1u].gval = ADC_MAX_GVAL;
 2685              		.loc 1 1696 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 78


 2686 011e 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2687 0122 013B     		subs	r3, r3, #1
 2688 0124 114A     		ldr	r2, .L136+32
 2689 0126 9B00     		lsls	r3, r3, #2
 2690 0128 1344     		add	r3, r3, r2
 2691 012a 0F22     		movs	r2, #15
 2692 012c 9A70     		strb	r2, [r3, #2]
 2693              	.L134:
1697:Generated_Source\PSoC5/ADC.c ****         }
1698:Generated_Source\PSoC5/ADC.c **** 
1699:Generated_Source\PSoC5/ADC.c ****         /* Save the gain correction register value */
1700:Generated_Source\PSoC5/ADC.c ****         ADC_gcor[config - 1u].gcor = gcorValue;
 2694              		.loc 1 1700 0
 2695 012e 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2696 0132 013B     		subs	r3, r3, #1
 2697 0134 0D49     		ldr	r1, .L136+32
 2698 0136 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 2699 0138 21F82320 		strh	r2, [r1, r3, lsl #2]	@ movhi
 2700 013c 02E0     		b	.L135
 2701              	.L117:
1701:Generated_Source\PSoC5/ADC.c ****     }
1702:Generated_Source\PSoC5/ADC.c ****     else
1703:Generated_Source\PSoC5/ADC.c ****     {
1704:Generated_Source\PSoC5/ADC.c ****         /* Halt CPU in debug mode if config is out of valid range */
1705:Generated_Source\PSoC5/ADC.c ****         CYASSERT(0u != 0u);
 2702              		.loc 1 1705 0 discriminator 1
 2703 013e 0020     		movs	r0, #0
 2704 0140 FFF7FEFF 		bl	CyHalt
 2705              	.L135:
1706:Generated_Source\PSoC5/ADC.c ****     }
1707:Generated_Source\PSoC5/ADC.c **** }
 2706              		.loc 1 1707 0
 2707 0144 00BF     		nop
 2708 0146 1C37     		adds	r7, r7, #28
 2709              		.cfi_def_cfa_offset 12
 2710 0148 BD46     		mov	sp, r7
 2711              		.cfi_def_cfa_register 13
 2712              		@ sp needed
 2713 014a 90BD     		pop	{r4, r7, pc}
 2714              	.L137:
 2715              		.align	2
 2716              	.L136:
 2717 014c 18010049 		.word	1224737048
 2718 0150 1C010049 		.word	1224737052
 2719 0154 19010049 		.word	1224737049
 2720 0158 1D010049 		.word	1224737053
 2721 015c 1A010049 		.word	1224737050
 2722 0160 1E010049 		.word	1224737054
 2723 0164 1B010049 		.word	1224737051
 2724 0168 1F010049 		.word	1224737055
 2725 016c 04000000 		.word	ADC_gcor
 2726              		.cfi_endproc
 2727              	.LFE21:
 2728              		.size	ADC_GainCompensation, .-ADC_GainCompensation
 2729              		.section	.text.ADC_SetDSMRef0Reg,"ax",%progbits
 2730              		.align	2
 2731              		.thumb
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 79


 2732              		.thumb_func
 2733              		.type	ADC_SetDSMRef0Reg, %function
 2734              	ADC_SetDSMRef0Reg:
 2735              	.LFB22:
1708:Generated_Source\PSoC5/ADC.c **** 
1709:Generated_Source\PSoC5/ADC.c **** 
1710:Generated_Source\PSoC5/ADC.c **** /******************************************************************************
1711:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetDSMRef0Reg(uint8)
1712:Generated_Source\PSoC5/ADC.c **** ******************************************************************************
1713:Generated_Source\PSoC5/ADC.c **** *
1714:Generated_Source\PSoC5/ADC.c **** * Summary:
1715:Generated_Source\PSoC5/ADC.c **** *  This API sets the DSM_REF0 register. This is written for internal use.
1716:Generated_Source\PSoC5/ADC.c **** *
1717:Generated_Source\PSoC5/ADC.c **** * Parameters:
1718:Generated_Source\PSoC5/ADC.c **** *  value:  Value to be written to DSM_REF0 register.
1719:Generated_Source\PSoC5/ADC.c **** *
1720:Generated_Source\PSoC5/ADC.c **** * Return:
1721:Generated_Source\PSoC5/ADC.c **** *  None
1722:Generated_Source\PSoC5/ADC.c **** *
1723:Generated_Source\PSoC5/ADC.c **** ******************************************************************************/
1724:Generated_Source\PSoC5/ADC.c **** static void ADC_SetDSMRef0Reg(uint8 value) 
1725:Generated_Source\PSoC5/ADC.c **** {
 2736              		.loc 1 1725 0
 2737              		.cfi_startproc
 2738              		@ args = 0, pretend = 0, frame = 16
 2739              		@ frame_needed = 1, uses_anonymous_args = 0
 2740 0000 80B5     		push	{r7, lr}
 2741              		.cfi_def_cfa_offset 8
 2742              		.cfi_offset 7, -8
 2743              		.cfi_offset 14, -4
 2744 0002 84B0     		sub	sp, sp, #16
 2745              		.cfi_def_cfa_offset 24
 2746 0004 00AF     		add	r7, sp, #0
 2747              		.cfi_def_cfa_register 7
 2748 0006 0346     		mov	r3, r0
 2749 0008 FB71     		strb	r3, [r7, #7]
1726:Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
1727:Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 2750              		.loc 1 1727 0
 2751 000a FFF7FEFF 		bl	CyEnterCriticalSection
 2752 000e 0346     		mov	r3, r0
 2753 0010 FB73     		strb	r3, [r7, #15]
1728:Generated_Source\PSoC5/ADC.c **** 
1729:Generated_Source\PSoC5/ADC.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
1730:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= (ADC_IGNORE_PRESA1 | ADC_IGNORE_PRESD1);
 2754              		.loc 1 1730 0
 2755 0012 174A     		ldr	r2, .L139
 2756 0014 164B     		ldr	r3, .L139
 2757 0016 1B78     		ldrb	r3, [r3]
 2758 0018 DBB2     		uxtb	r3, r3
 2759 001a 43F00303 		orr	r3, r3, #3
 2760 001e DBB2     		uxtb	r3, r3
 2761 0020 1370     		strb	r3, [r2]
1731:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= (ADC_IGNORE_PRESA2 | ADC_IGNORE_PRESD2);
 2762              		.loc 1 1731 0
 2763 0022 144A     		ldr	r2, .L139+4
 2764 0024 134B     		ldr	r3, .L139+4
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 80


 2765 0026 1B78     		ldrb	r3, [r3]
 2766 0028 DBB2     		uxtb	r3, r3
 2767 002a 43F00303 		orr	r3, r3, #3
 2768 002e DBB2     		uxtb	r3, r3
 2769 0030 1370     		strb	r3, [r2]
1732:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF0_REG = value;
 2770              		.loc 1 1732 0
 2771 0032 114A     		ldr	r2, .L139+8
 2772 0034 FB79     		ldrb	r3, [r7, #7]
 2773 0036 1370     		strb	r3, [r2]
1733:Generated_Source\PSoC5/ADC.c **** 
1734:Generated_Source\PSoC5/ADC.c ****     /* Wait for 3 microseconds */
1735:Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
 2774              		.loc 1 1735 0
 2775 0038 0320     		movs	r0, #3
 2776 003a FFF7FEFF 		bl	CyDelayUs
1736:Generated_Source\PSoC5/ADC.c ****     /* Enable the press circuit */
1737:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~(ADC_IGNORE_PRESA1 | ADC_IGNORE_PRESD1);
 2777              		.loc 1 1737 0
 2778 003e 0C4A     		ldr	r2, .L139
 2779 0040 0B4B     		ldr	r3, .L139
 2780 0042 1B78     		ldrb	r3, [r3]
 2781 0044 DBB2     		uxtb	r3, r3
 2782 0046 23F00303 		bic	r3, r3, #3
 2783 004a DBB2     		uxtb	r3, r3
 2784 004c 1370     		strb	r3, [r2]
1738:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~(ADC_IGNORE_PRESA2 | ADC_IGNORE_PRESD2);
 2785              		.loc 1 1738 0
 2786 004e 094A     		ldr	r2, .L139+4
 2787 0050 084B     		ldr	r3, .L139+4
 2788 0052 1B78     		ldrb	r3, [r3]
 2789 0054 DBB2     		uxtb	r3, r3
 2790 0056 23F00303 		bic	r3, r3, #3
 2791 005a DBB2     		uxtb	r3, r3
 2792 005c 1370     		strb	r3, [r2]
1739:Generated_Source\PSoC5/ADC.c **** 
1740:Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 2793              		.loc 1 1740 0
 2794 005e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2795 0060 1846     		mov	r0, r3
 2796 0062 FFF7FEFF 		bl	CyExitCriticalSection
1741:Generated_Source\PSoC5/ADC.c **** }
 2797              		.loc 1 1741 0
 2798 0066 00BF     		nop
 2799 0068 1037     		adds	r7, r7, #16
 2800              		.cfi_def_cfa_offset 8
 2801 006a BD46     		mov	sp, r7
 2802              		.cfi_def_cfa_register 13
 2803              		@ sp needed
 2804 006c 80BD     		pop	{r7, pc}
 2805              	.L140:
 2806 006e 00BF     		.align	2
 2807              	.L139:
 2808 0070 F8460040 		.word	1073759992
 2809 0074 F9460040 		.word	1073759993
 2810 0078 92580040 		.word	1073764498
 2811              		.cfi_endproc
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 81


 2812              	.LFE22:
 2813              		.size	ADC_SetDSMRef0Reg, .-ADC_SetDSMRef0Reg
 2814              		.section	.text.ADC_Read8,"ax",%progbits
 2815              		.align	2
 2816              		.global	ADC_Read8
 2817              		.thumb
 2818              		.thumb_func
 2819              		.type	ADC_Read8, %function
 2820              	ADC_Read8:
 2821              	.LFB23:
1742:Generated_Source\PSoC5/ADC.c **** 
1743:Generated_Source\PSoC5/ADC.c **** 
1744:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1745:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Read8
1746:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1747:Generated_Source\PSoC5/ADC.c **** *
1748:Generated_Source\PSoC5/ADC.c **** * Summary:
1749:Generated_Source\PSoC5/ADC.c **** *  This function simplifies getting results from the ADC when only a
1750:Generated_Source\PSoC5/ADC.c **** *  single reading is required. When called, it will start ADC
1751:Generated_Source\PSoC5/ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1752:Generated_Source\PSoC5/ADC.c **** *  conversion and return the result. This is a blocking function and will
1753:Generated_Source\PSoC5/ADC.c **** *  not return until the result is ready.
1754:Generated_Source\PSoC5/ADC.c **** *
1755:Generated_Source\PSoC5/ADC.c **** * Parameters:
1756:Generated_Source\PSoC5/ADC.c **** *  None
1757:Generated_Source\PSoC5/ADC.c **** *
1758:Generated_Source\PSoC5/ADC.c **** * Return:
1759:Generated_Source\PSoC5/ADC.c **** *  int8:  ADC result.
1760:Generated_Source\PSoC5/ADC.c **** *
1761:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1762:Generated_Source\PSoC5/ADC.c **** int8 ADC_Read8(void) 
1763:Generated_Source\PSoC5/ADC.c **** {
 2822              		.loc 1 1763 0
 2823              		.cfi_startproc
 2824              		@ args = 0, pretend = 0, frame = 8
 2825              		@ frame_needed = 1, uses_anonymous_args = 0
 2826 0000 80B5     		push	{r7, lr}
 2827              		.cfi_def_cfa_offset 8
 2828              		.cfi_offset 7, -8
 2829              		.cfi_offset 14, -4
 2830 0002 82B0     		sub	sp, sp, #8
 2831              		.cfi_def_cfa_offset 16
 2832 0004 00AF     		add	r7, sp, #0
 2833              		.cfi_def_cfa_register 7
1764:Generated_Source\PSoC5/ADC.c ****     int8 result;
1765:Generated_Source\PSoC5/ADC.c **** 
1766:Generated_Source\PSoC5/ADC.c ****     /* Clear pending conversion done status */
1767:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |= ADC_DEC_INTR_CLEAR;
 2834              		.loc 1 1767 0
 2835 0006 0C4A     		ldr	r2, .L143
 2836 0008 0B4B     		ldr	r3, .L143
 2837 000a 1B78     		ldrb	r3, [r3]
 2838 000c DBB2     		uxtb	r3, r3
 2839 000e 43F00403 		orr	r3, r3, #4
 2840 0012 DBB2     		uxtb	r3, r3
 2841 0014 1370     		strb	r3, [r2]
1768:Generated_Source\PSoC5/ADC.c ****     ADC_StartConvert();
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 82


 2842              		.loc 1 1768 0
 2843 0016 FFF7FEFF 		bl	ADC_StartConvert
1769:Generated_Source\PSoC5/ADC.c ****     (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 2844              		.loc 1 1769 0
 2845 001a 0020     		movs	r0, #0
 2846 001c FFF7FEFF 		bl	ADC_IsEndConversion
1770:Generated_Source\PSoC5/ADC.c ****      result = ADC_GetResult8();
 2847              		.loc 1 1770 0
 2848 0020 FFF7FEFF 		bl	ADC_GetResult8
 2849 0024 0346     		mov	r3, r0
 2850 0026 FB71     		strb	r3, [r7, #7]
1771:Generated_Source\PSoC5/ADC.c ****     ADC_StopConvert();
 2851              		.loc 1 1771 0
 2852 0028 FFF7FEFF 		bl	ADC_StopConvert
1772:Generated_Source\PSoC5/ADC.c ****     
1773:Generated_Source\PSoC5/ADC.c ****      return(result);
 2853              		.loc 1 1773 0
 2854 002c 97F90730 		ldrsb	r3, [r7, #7]
1774:Generated_Source\PSoC5/ADC.c **** }
 2855              		.loc 1 1774 0
 2856 0030 1846     		mov	r0, r3
 2857 0032 0837     		adds	r7, r7, #8
 2858              		.cfi_def_cfa_offset 8
 2859 0034 BD46     		mov	sp, r7
 2860              		.cfi_def_cfa_register 13
 2861              		@ sp needed
 2862 0036 80BD     		pop	{r7, pc}
 2863              	.L144:
 2864              		.align	2
 2865              	.L143:
 2866 0038 014E0040 		.word	1073761793
 2867              		.cfi_endproc
 2868              	.LFE23:
 2869              		.size	ADC_Read8, .-ADC_Read8
 2870              		.section	.text.ADC_Read16,"ax",%progbits
 2871              		.align	2
 2872              		.global	ADC_Read16
 2873              		.thumb
 2874              		.thumb_func
 2875              		.type	ADC_Read16, %function
 2876              	ADC_Read16:
 2877              	.LFB24:
1775:Generated_Source\PSoC5/ADC.c **** 
1776:Generated_Source\PSoC5/ADC.c **** 
1777:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1778:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Read16
1779:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1780:Generated_Source\PSoC5/ADC.c **** *
1781:Generated_Source\PSoC5/ADC.c **** * Summary:
1782:Generated_Source\PSoC5/ADC.c **** *  This function simplifies getting results from the ADC when only a
1783:Generated_Source\PSoC5/ADC.c **** *  single reading is required. When called, it will start ADC
1784:Generated_Source\PSoC5/ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1785:Generated_Source\PSoC5/ADC.c **** *  conversion and return the result. This is a blocking function and will
1786:Generated_Source\PSoC5/ADC.c **** *  not return until the result is ready.
1787:Generated_Source\PSoC5/ADC.c **** *
1788:Generated_Source\PSoC5/ADC.c **** * Parameters:
1789:Generated_Source\PSoC5/ADC.c **** *   void
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 83


1790:Generated_Source\PSoC5/ADC.c **** *
1791:Generated_Source\PSoC5/ADC.c **** * Return:
1792:Generated_Source\PSoC5/ADC.c **** *  int16:  ADC result.
1793:Generated_Source\PSoC5/ADC.c **** *
1794:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1795:Generated_Source\PSoC5/ADC.c **** int16 ADC_Read16(void) 
1796:Generated_Source\PSoC5/ADC.c **** {
 2878              		.loc 1 1796 0
 2879              		.cfi_startproc
 2880              		@ args = 0, pretend = 0, frame = 8
 2881              		@ frame_needed = 1, uses_anonymous_args = 0
 2882 0000 80B5     		push	{r7, lr}
 2883              		.cfi_def_cfa_offset 8
 2884              		.cfi_offset 7, -8
 2885              		.cfi_offset 14, -4
 2886 0002 82B0     		sub	sp, sp, #8
 2887              		.cfi_def_cfa_offset 16
 2888 0004 00AF     		add	r7, sp, #0
 2889              		.cfi_def_cfa_register 7
1797:Generated_Source\PSoC5/ADC.c ****     int16 result;
1798:Generated_Source\PSoC5/ADC.c **** 
1799:Generated_Source\PSoC5/ADC.c ****     /* Clear pending conversion done status */
1800:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |= ADC_DEC_INTR_CLEAR;
 2890              		.loc 1 1800 0
 2891 0006 0C4A     		ldr	r2, .L147
 2892 0008 0B4B     		ldr	r3, .L147
 2893 000a 1B78     		ldrb	r3, [r3]
 2894 000c DBB2     		uxtb	r3, r3
 2895 000e 43F00403 		orr	r3, r3, #4
 2896 0012 DBB2     		uxtb	r3, r3
 2897 0014 1370     		strb	r3, [r2]
1801:Generated_Source\PSoC5/ADC.c ****     ADC_StartConvert();
 2898              		.loc 1 1801 0
 2899 0016 FFF7FEFF 		bl	ADC_StartConvert
1802:Generated_Source\PSoC5/ADC.c ****     (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 2900              		.loc 1 1802 0
 2901 001a 0020     		movs	r0, #0
 2902 001c FFF7FEFF 		bl	ADC_IsEndConversion
1803:Generated_Source\PSoC5/ADC.c ****      result = ADC_GetResult16();
 2903              		.loc 1 1803 0
 2904 0020 FFF7FEFF 		bl	ADC_GetResult16
 2905 0024 0346     		mov	r3, r0
 2906 0026 FB80     		strh	r3, [r7, #6]	@ movhi
1804:Generated_Source\PSoC5/ADC.c ****     ADC_StopConvert();
 2907              		.loc 1 1804 0
 2908 0028 FFF7FEFF 		bl	ADC_StopConvert
1805:Generated_Source\PSoC5/ADC.c ****     
1806:Generated_Source\PSoC5/ADC.c ****      return(result);
 2909              		.loc 1 1806 0
 2910 002c B7F90630 		ldrsh	r3, [r7, #6]
1807:Generated_Source\PSoC5/ADC.c **** }
 2911              		.loc 1 1807 0
 2912 0030 1846     		mov	r0, r3
 2913 0032 0837     		adds	r7, r7, #8
 2914              		.cfi_def_cfa_offset 8
 2915 0034 BD46     		mov	sp, r7
 2916              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 84


 2917              		@ sp needed
 2918 0036 80BD     		pop	{r7, pc}
 2919              	.L148:
 2920              		.align	2
 2921              	.L147:
 2922 0038 014E0040 		.word	1073761793
 2923              		.cfi_endproc
 2924              	.LFE24:
 2925              		.size	ADC_Read16, .-ADC_Read16
 2926              		.section	.text.ADC_Read32,"ax",%progbits
 2927              		.align	2
 2928              		.global	ADC_Read32
 2929              		.thumb
 2930              		.thumb_func
 2931              		.type	ADC_Read32, %function
 2932              	ADC_Read32:
 2933              	.LFB25:
1808:Generated_Source\PSoC5/ADC.c **** 
1809:Generated_Source\PSoC5/ADC.c **** 
1810:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1811:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Read32
1812:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1813:Generated_Source\PSoC5/ADC.c **** *
1814:Generated_Source\PSoC5/ADC.c **** * Summary:
1815:Generated_Source\PSoC5/ADC.c **** *  This function simplifies getting results from the ADC when only a
1816:Generated_Source\PSoC5/ADC.c **** *  single reading is required. When called, it will start ADC
1817:Generated_Source\PSoC5/ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1818:Generated_Source\PSoC5/ADC.c **** *  conversion and return the result. This is a blocking function and will
1819:Generated_Source\PSoC5/ADC.c **** *  not return until the result is ready.
1820:Generated_Source\PSoC5/ADC.c **** *
1821:Generated_Source\PSoC5/ADC.c **** * Parameters:
1822:Generated_Source\PSoC5/ADC.c **** *  None
1823:Generated_Source\PSoC5/ADC.c **** *
1824:Generated_Source\PSoC5/ADC.c **** * Return:
1825:Generated_Source\PSoC5/ADC.c **** *  int32: ADC result.
1826:Generated_Source\PSoC5/ADC.c **** *
1827:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1828:Generated_Source\PSoC5/ADC.c **** int32 ADC_Read32(void) 
1829:Generated_Source\PSoC5/ADC.c **** {
 2934              		.loc 1 1829 0
 2935              		.cfi_startproc
 2936              		@ args = 0, pretend = 0, frame = 8
 2937              		@ frame_needed = 1, uses_anonymous_args = 0
 2938 0000 80B5     		push	{r7, lr}
 2939              		.cfi_def_cfa_offset 8
 2940              		.cfi_offset 7, -8
 2941              		.cfi_offset 14, -4
 2942 0002 82B0     		sub	sp, sp, #8
 2943              		.cfi_def_cfa_offset 16
 2944 0004 00AF     		add	r7, sp, #0
 2945              		.cfi_def_cfa_register 7
1830:Generated_Source\PSoC5/ADC.c ****     int32 result;
1831:Generated_Source\PSoC5/ADC.c ****     
1832:Generated_Source\PSoC5/ADC.c ****     /* Clear pending conversion done status */
1833:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |= ADC_DEC_INTR_CLEAR;
 2946              		.loc 1 1833 0
 2947 0006 0B4A     		ldr	r2, .L151
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 85


 2948 0008 0A4B     		ldr	r3, .L151
 2949 000a 1B78     		ldrb	r3, [r3]
 2950 000c DBB2     		uxtb	r3, r3
 2951 000e 43F00403 		orr	r3, r3, #4
 2952 0012 DBB2     		uxtb	r3, r3
 2953 0014 1370     		strb	r3, [r2]
1834:Generated_Source\PSoC5/ADC.c ****     ADC_StartConvert();
 2954              		.loc 1 1834 0
 2955 0016 FFF7FEFF 		bl	ADC_StartConvert
1835:Generated_Source\PSoC5/ADC.c ****     (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 2956              		.loc 1 1835 0
 2957 001a 0020     		movs	r0, #0
 2958 001c FFF7FEFF 		bl	ADC_IsEndConversion
1836:Generated_Source\PSoC5/ADC.c ****      result = ADC_GetResult32();
 2959              		.loc 1 1836 0
 2960 0020 FFF7FEFF 		bl	ADC_GetResult32
 2961 0024 7860     		str	r0, [r7, #4]
1837:Generated_Source\PSoC5/ADC.c ****     ADC_StopConvert();
 2962              		.loc 1 1837 0
 2963 0026 FFF7FEFF 		bl	ADC_StopConvert
1838:Generated_Source\PSoC5/ADC.c ****     
1839:Generated_Source\PSoC5/ADC.c ****      return(result);
 2964              		.loc 1 1839 0
 2965 002a 7B68     		ldr	r3, [r7, #4]
1840:Generated_Source\PSoC5/ADC.c **** }
 2966              		.loc 1 1840 0
 2967 002c 1846     		mov	r0, r3
 2968 002e 0837     		adds	r7, r7, #8
 2969              		.cfi_def_cfa_offset 8
 2970 0030 BD46     		mov	sp, r7
 2971              		.cfi_def_cfa_register 13
 2972              		@ sp needed
 2973 0032 80BD     		pop	{r7, pc}
 2974              	.L152:
 2975              		.align	2
 2976              	.L151:
 2977 0034 014E0040 		.word	1073761793
 2978              		.cfi_endproc
 2979              	.LFE25:
 2980              		.size	ADC_Read32, .-ADC_Read32
 2981              		.text
 2982              	.Letext0:
 2983              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 2984              		.file 3 "Generated_Source\\PSoC5\\ADC.h"
 2985              		.section	.debug_info,"",%progbits
 2986              	.Ldebug_info0:
 2987 0000 28070000 		.4byte	0x728
 2988 0004 0400     		.2byte	0x4
 2989 0006 00000000 		.4byte	.Ldebug_abbrev0
 2990 000a 04       		.byte	0x4
 2991 000b 01       		.uleb128 0x1
 2992 000c 5C000000 		.4byte	.LASF90
 2993 0010 0C       		.byte	0xc
 2994 0011 0A010000 		.4byte	.LASF91
 2995 0015 65020000 		.4byte	.LASF92
 2996 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2997 001d 00000000 		.4byte	0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 86


 2998 0021 00000000 		.4byte	.Ldebug_line0
 2999 0025 02       		.uleb128 0x2
 3000 0026 01       		.byte	0x1
 3001 0027 06       		.byte	0x6
 3002 0028 61010000 		.4byte	.LASF0
 3003 002c 02       		.uleb128 0x2
 3004 002d 01       		.byte	0x1
 3005 002e 08       		.byte	0x8
 3006 002f AB030000 		.4byte	.LASF1
 3007 0033 02       		.uleb128 0x2
 3008 0034 02       		.byte	0x2
 3009 0035 05       		.byte	0x5
 3010 0036 D1030000 		.4byte	.LASF2
 3011 003a 02       		.uleb128 0x2
 3012 003b 02       		.byte	0x2
 3013 003c 07       		.byte	0x7
 3014 003d 52020000 		.4byte	.LASF3
 3015 0041 02       		.uleb128 0x2
 3016 0042 04       		.byte	0x4
 3017 0043 05       		.byte	0x5
 3018 0044 A3010000 		.4byte	.LASF4
 3019 0048 02       		.uleb128 0x2
 3020 0049 04       		.byte	0x4
 3021 004a 07       		.byte	0x7
 3022 004b 30020000 		.4byte	.LASF5
 3023 004f 02       		.uleb128 0x2
 3024 0050 08       		.byte	0x8
 3025 0051 05       		.byte	0x5
 3026 0052 53010000 		.4byte	.LASF6
 3027 0056 02       		.uleb128 0x2
 3028 0057 08       		.byte	0x8
 3029 0058 07       		.byte	0x7
 3030 0059 F3000000 		.4byte	.LASF7
 3031 005d 03       		.uleb128 0x3
 3032 005e 04       		.byte	0x4
 3033 005f 05       		.byte	0x5
 3034 0060 696E7400 		.ascii	"int\000"
 3035 0064 02       		.uleb128 0x2
 3036 0065 04       		.byte	0x4
 3037 0066 07       		.byte	0x7
 3038 0067 1C020000 		.4byte	.LASF8
 3039 006b 04       		.uleb128 0x4
 3040 006c C6010000 		.4byte	.LASF9
 3041 0070 02       		.byte	0x2
 3042 0071 E401     		.2byte	0x1e4
 3043 0073 2C000000 		.4byte	0x2c
 3044 0077 04       		.uleb128 0x4
 3045 0078 00000000 		.4byte	.LASF10
 3046 007c 02       		.byte	0x2
 3047 007d E501     		.2byte	0x1e5
 3048 007f 3A000000 		.4byte	0x3a
 3049 0083 04       		.uleb128 0x4
 3050 0084 E9010000 		.4byte	.LASF11
 3051 0088 02       		.byte	0x2
 3052 0089 E601     		.2byte	0x1e6
 3053 008b 48000000 		.4byte	0x48
 3054 008f 04       		.uleb128 0x4
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 87


 3055 0090 AE020000 		.4byte	.LASF12
 3056 0094 02       		.byte	0x2
 3057 0095 E701     		.2byte	0x1e7
 3058 0097 25000000 		.4byte	0x25
 3059 009b 04       		.uleb128 0x4
 3060 009c A2040000 		.4byte	.LASF13
 3061 00a0 02       		.byte	0x2
 3062 00a1 E801     		.2byte	0x1e8
 3063 00a3 33000000 		.4byte	0x33
 3064 00a7 04       		.uleb128 0x4
 3065 00a8 86010000 		.4byte	.LASF14
 3066 00ac 02       		.byte	0x2
 3067 00ad E901     		.2byte	0x1e9
 3068 00af 41000000 		.4byte	0x41
 3069 00b3 04       		.uleb128 0x4
 3070 00b4 F5020000 		.4byte	.LASF15
 3071 00b8 02       		.byte	0x2
 3072 00b9 EA01     		.2byte	0x1ea
 3073 00bb BF000000 		.4byte	0xbf
 3074 00bf 02       		.uleb128 0x2
 3075 00c0 04       		.byte	0x4
 3076 00c1 04       		.byte	0x4
 3077 00c2 74030000 		.4byte	.LASF16
 3078 00c6 02       		.uleb128 0x2
 3079 00c7 08       		.byte	0x8
 3080 00c8 04       		.byte	0x4
 3081 00c9 CC010000 		.4byte	.LASF17
 3082 00cd 02       		.uleb128 0x2
 3083 00ce 01       		.byte	0x1
 3084 00cf 08       		.byte	0x8
 3085 00d0 0E040000 		.4byte	.LASF18
 3086 00d4 04       		.uleb128 0x4
 3087 00d5 8E030000 		.4byte	.LASF19
 3088 00d9 02       		.byte	0x2
 3089 00da 8E02     		.2byte	0x28e
 3090 00dc E0000000 		.4byte	0xe0
 3091 00e0 05       		.uleb128 0x5
 3092 00e1 6B000000 		.4byte	0x6b
 3093 00e5 04       		.uleb128 0x4
 3094 00e6 C0010000 		.4byte	.LASF20
 3095 00ea 02       		.byte	0x2
 3096 00eb 8F02     		.2byte	0x28f
 3097 00ed F1000000 		.4byte	0xf1
 3098 00f1 05       		.uleb128 0x5
 3099 00f2 77000000 		.4byte	0x77
 3100 00f6 04       		.uleb128 0x4
 3101 00f7 DA020000 		.4byte	.LASF21
 3102 00fb 02       		.byte	0x2
 3103 00fc 9002     		.2byte	0x290
 3104 00fe 02010000 		.4byte	0x102
 3105 0102 05       		.uleb128 0x5
 3106 0103 83000000 		.4byte	0x83
 3107 0107 02       		.uleb128 0x2
 3108 0108 08       		.byte	0x8
 3109 0109 04       		.byte	0x4
 3110 010a 06030000 		.4byte	.LASF22
 3111 010e 02       		.uleb128 0x2
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 88


 3112 010f 04       		.byte	0x4
 3113 0110 07       		.byte	0x7
 3114 0111 FD020000 		.4byte	.LASF23
 3115 0115 06       		.uleb128 0x6
 3116 0116 04       		.byte	0x4
 3117 0117 03       		.byte	0x3
 3118 0118 2F       		.byte	0x2f
 3119 0119 36010000 		.4byte	0x136
 3120 011d 07       		.uleb128 0x7
 3121 011e 57000000 		.4byte	.LASF24
 3122 0122 03       		.byte	0x3
 3123 0123 31       		.byte	0x31
 3124 0124 77000000 		.4byte	0x77
 3125 0128 00       		.byte	0
 3126 0129 07       		.uleb128 0x7
 3127 012a 21040000 		.4byte	.LASF25
 3128 012e 03       		.byte	0x3
 3129 012f 32       		.byte	0x32
 3130 0130 6B000000 		.4byte	0x6b
 3131 0134 02       		.byte	0x2
 3132 0135 00       		.byte	0
 3133 0136 08       		.uleb128 0x8
 3134 0137 42020000 		.4byte	.LASF26
 3135 013b 03       		.byte	0x3
 3136 013c 33       		.byte	0x33
 3137 013d 15010000 		.4byte	0x115
 3138 0141 09       		.uleb128 0x9
 3139 0142 EA000000 		.4byte	.LASF29
 3140 0146 01       		.byte	0x1
 3141 0147 5B       		.byte	0x5b
 3142 0148 00000000 		.4byte	.LFB0
 3143 014c 58010000 		.4byte	.LFE0-.LFB0
 3144 0150 01       		.uleb128 0x1
 3145 0151 9C       		.byte	0x9c
 3146 0152 0A       		.uleb128 0xa
 3147 0153 7F040000 		.4byte	.LASF31
 3148 0157 01       		.byte	0x1
 3149 0158 B8       		.byte	0xb8
 3150 0159 00000000 		.4byte	.LFB1
 3151 015d 58010000 		.4byte	.LFE1-.LFB1
 3152 0161 01       		.uleb128 0x1
 3153 0162 9C       		.byte	0x9c
 3154 0163 84010000 		.4byte	0x184
 3155 0167 0B       		.uleb128 0xb
 3156 0168 1A040000 		.4byte	.LASF27
 3157 016c 01       		.byte	0x1
 3158 016d BA       		.byte	0xba
 3159 016e 6B000000 		.4byte	0x6b
 3160 0172 02       		.uleb128 0x2
 3161 0173 91       		.byte	0x91
 3162 0174 76       		.sleb128 -10
 3163 0175 0B       		.uleb128 0xb
 3164 0176 6E040000 		.4byte	.LASF28
 3165 017a 01       		.byte	0x1
 3166 017b BB       		.byte	0xbb
 3167 017c 6B000000 		.4byte	0x6b
 3168 0180 02       		.uleb128 0x2
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 89


 3169 0181 91       		.byte	0x91
 3170 0182 77       		.sleb128 -9
 3171 0183 00       		.byte	0
 3172 0184 0C       		.uleb128 0xc
 3173 0185 8C010000 		.4byte	.LASF30
 3174 0189 01       		.byte	0x1
 3175 018a 4901     		.2byte	0x149
 3176 018c 00000000 		.4byte	.LFB2
 3177 0190 30000000 		.4byte	.LFE2-.LFB2
 3178 0194 01       		.uleb128 0x1
 3179 0195 9C       		.byte	0x9c
 3180 0196 0D       		.uleb128 0xd
 3181 0197 DB030000 		.4byte	.LASF32
 3182 019b 01       		.byte	0x1
 3183 019c 6A01     		.2byte	0x16a
 3184 019e 00000000 		.4byte	.LFB3
 3185 01a2 7C010000 		.4byte	.LFE3-.LFB3
 3186 01a6 01       		.uleb128 0x1
 3187 01a7 9C       		.byte	0x9c
 3188 01a8 BC010000 		.4byte	0x1bc
 3189 01ac 0E       		.uleb128 0xe
 3190 01ad 6E040000 		.4byte	.LASF28
 3191 01b1 01       		.byte	0x1
 3192 01b2 6C01     		.2byte	0x16c
 3193 01b4 6B000000 		.4byte	0x6b
 3194 01b8 02       		.uleb128 0x2
 3195 01b9 91       		.byte	0x91
 3196 01ba 77       		.sleb128 -9
 3197 01bb 00       		.byte	0
 3198 01bc 0F       		.uleb128 0xf
 3199 01bd 74010000 		.4byte	.LASF33
 3200 01c1 01       		.byte	0x1
 3201 01c2 AD01     		.2byte	0x1ad
 3202 01c4 00000000 		.4byte	.LFB4
 3203 01c8 3C000000 		.4byte	.LFE4-.LFB4
 3204 01cc 01       		.uleb128 0x1
 3205 01cd 9C       		.byte	0x9c
 3206 01ce F1010000 		.4byte	0x1f1
 3207 01d2 10       		.uleb128 0x10
 3208 01d3 63030000 		.4byte	.LASF36
 3209 01d7 01       		.byte	0x1
 3210 01d8 AD01     		.2byte	0x1ad
 3211 01da 6B000000 		.4byte	0x6b
 3212 01de 02       		.uleb128 0x2
 3213 01df 91       		.byte	0x91
 3214 01e0 6F       		.sleb128 -17
 3215 01e1 0E       		.uleb128 0xe
 3216 01e2 C8040000 		.4byte	.LASF34
 3217 01e6 01       		.byte	0x1
 3218 01e7 AF01     		.2byte	0x1af
 3219 01e9 6B000000 		.4byte	0x6b
 3220 01ed 02       		.uleb128 0x2
 3221 01ee 91       		.byte	0x91
 3222 01ef 77       		.sleb128 -9
 3223 01f0 00       		.byte	0
 3224 01f1 0F       		.uleb128 0xf
 3225 01f2 3E040000 		.4byte	.LASF35
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 90


 3226 01f6 01       		.byte	0x1
 3227 01f7 D101     		.2byte	0x1d1
 3228 01f9 00000000 		.4byte	.LFB5
 3229 01fd 38000000 		.4byte	.LFE5-.LFB5
 3230 0201 01       		.uleb128 0x1
 3231 0202 9C       		.byte	0x9c
 3232 0203 26020000 		.4byte	0x226
 3233 0207 10       		.uleb128 0x10
 3234 0208 59030000 		.4byte	.LASF37
 3235 020c 01       		.byte	0x1
 3236 020d D101     		.2byte	0x1d1
 3237 020f 6B000000 		.4byte	0x6b
 3238 0213 02       		.uleb128 0x2
 3239 0214 91       		.byte	0x91
 3240 0215 6F       		.sleb128 -17
 3241 0216 0E       		.uleb128 0xe
 3242 0217 C8040000 		.4byte	.LASF34
 3243 021b 01       		.byte	0x1
 3244 021c D301     		.2byte	0x1d3
 3245 021e 6B000000 		.4byte	0x6b
 3246 0222 02       		.uleb128 0x2
 3247 0223 91       		.byte	0x91
 3248 0224 77       		.sleb128 -9
 3249 0225 00       		.byte	0
 3250 0226 11       		.uleb128 0x11
 3251 0227 12030000 		.4byte	.LASF41
 3252 022b 01       		.byte	0x1
 3253 022c F901     		.2byte	0x1f9
 3254 022e 6B000000 		.4byte	0x6b
 3255 0232 00000000 		.4byte	.LFB6
 3256 0236 AC000000 		.4byte	.LFE6-.LFB6
 3257 023a 01       		.uleb128 0x1
 3258 023b 9C       		.byte	0x9c
 3259 023c 7D020000 		.4byte	0x27d
 3260 0240 10       		.uleb128 0x10
 3261 0241 97040000 		.4byte	.LASF38
 3262 0245 01       		.byte	0x1
 3263 0246 F901     		.2byte	0x1f9
 3264 0248 B3000000 		.4byte	0xb3
 3265 024c 02       		.uleb128 0x2
 3266 024d 91       		.byte	0x91
 3267 024e 6C       		.sleb128 -20
 3268 024f 0E       		.uleb128 0xe
 3269 0250 C8040000 		.4byte	.LASF34
 3270 0254 01       		.byte	0x1
 3271 0255 FB01     		.2byte	0x1fb
 3272 0257 77000000 		.4byte	0x77
 3273 025b 02       		.uleb128 0x2
 3274 025c 91       		.byte	0x91
 3275 025d 74       		.sleb128 -12
 3276 025e 0E       		.uleb128 0xe
 3277 025f 6D010000 		.4byte	.LASF39
 3278 0263 01       		.byte	0x1
 3279 0264 FC01     		.2byte	0x1fc
 3280 0266 6B000000 		.4byte	0x6b
 3281 026a 02       		.uleb128 0x2
 3282 026b 91       		.byte	0x91
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 91


 3283 026c 77       		.sleb128 -9
 3284 026d 0E       		.uleb128 0xe
 3285 026e 2E040000 		.4byte	.LASF40
 3286 0272 01       		.byte	0x1
 3287 0273 FD01     		.2byte	0x1fd
 3288 0275 B3000000 		.4byte	0xb3
 3289 0279 02       		.uleb128 0x2
 3290 027a 91       		.byte	0x91
 3291 027b 70       		.sleb128 -16
 3292 027c 00       		.byte	0
 3293 027d 12       		.uleb128 0x12
 3294 027e 8A040000 		.4byte	.LASF42
 3295 0282 01       		.byte	0x1
 3296 0283 2802     		.2byte	0x228
 3297 0285 77000000 		.4byte	0x77
 3298 0289 00000000 		.4byte	.LFB7
 3299 028d 3C000000 		.4byte	.LFE7-.LFB7
 3300 0291 01       		.uleb128 0x1
 3301 0292 9C       		.byte	0x9c
 3302 0293 B6020000 		.4byte	0x2b6
 3303 0297 0E       		.uleb128 0xe
 3304 0298 13040000 		.4byte	.LASF43
 3305 029c 01       		.byte	0x1
 3306 029d 2A02     		.2byte	0x22a
 3307 029f 6B000000 		.4byte	0x6b
 3308 02a3 02       		.uleb128 0x2
 3309 02a4 91       		.byte	0x91
 3310 02a5 75       		.sleb128 -11
 3311 02a6 0E       		.uleb128 0xe
 3312 02a7 C3020000 		.4byte	.LASF44
 3313 02ab 01       		.byte	0x1
 3314 02ac 2B02     		.2byte	0x22b
 3315 02ae 77000000 		.4byte	0x77
 3316 02b2 02       		.uleb128 0x2
 3317 02b3 91       		.byte	0x91
 3318 02b4 76       		.sleb128 -10
 3319 02b5 00       		.byte	0
 3320 02b6 13       		.uleb128 0x13
 3321 02b7 32010000 		.4byte	.LASF45
 3322 02bb 01       		.byte	0x1
 3323 02bc 4A02     		.2byte	0x24a
 3324 02be 00000000 		.4byte	.LFB8
 3325 02c2 20000000 		.4byte	.LFE8-.LFB8
 3326 02c6 01       		.uleb128 0x1
 3327 02c7 9C       		.byte	0x9c
 3328 02c8 13       		.uleb128 0x13
 3329 02c9 B3020000 		.4byte	.LASF46
 3330 02cd 01       		.byte	0x1
 3331 02ce 6102     		.2byte	0x261
 3332 02d0 00000000 		.4byte	.LFB9
 3333 02d4 20000000 		.4byte	.LFE9-.LFB9
 3334 02d8 01       		.uleb128 0x1
 3335 02d9 9C       		.byte	0x9c
 3336 02da 12       		.uleb128 0x12
 3337 02db 1E030000 		.4byte	.LASF47
 3338 02df 01       		.byte	0x1
 3339 02e0 8402     		.2byte	0x284
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 92


 3340 02e2 6B000000 		.4byte	0x6b
 3341 02e6 00000000 		.4byte	.LFB10
 3342 02ea 4C000000 		.4byte	.LFE10-.LFB10
 3343 02ee 01       		.uleb128 0x1
 3344 02ef 9C       		.byte	0x9c
 3345 02f0 13030000 		.4byte	0x313
 3346 02f4 10       		.uleb128 0x10
 3347 02f5 14020000 		.4byte	.LASF48
 3348 02f9 01       		.byte	0x1
 3349 02fa 8402     		.2byte	0x284
 3350 02fc 6B000000 		.4byte	0x6b
 3351 0300 02       		.uleb128 0x2
 3352 0301 91       		.byte	0x91
 3353 0302 6F       		.sleb128 -17
 3354 0303 0E       		.uleb128 0xe
 3355 0304 6D010000 		.4byte	.LASF39
 3356 0308 01       		.byte	0x1
 3357 0309 8602     		.2byte	0x286
 3358 030b 6B000000 		.4byte	0x6b
 3359 030f 02       		.uleb128 0x2
 3360 0310 91       		.byte	0x91
 3361 0311 77       		.sleb128 -9
 3362 0312 00       		.byte	0
 3363 0313 12       		.uleb128 0x12
 3364 0314 4A030000 		.4byte	.LASF49
 3365 0318 01       		.byte	0x1
 3366 0319 B302     		.2byte	0x2b3
 3367 031b 8F000000 		.4byte	0x8f
 3368 031f 00000000 		.4byte	.LFB11
 3369 0323 68000000 		.4byte	.LFE11-.LFB11
 3370 0327 01       		.uleb128 0x1
 3371 0328 9C       		.byte	0x9c
 3372 0329 4C030000 		.4byte	0x34c
 3373 032d 0E       		.uleb128 0xe
 3374 032e CF040000 		.4byte	.LASF50
 3375 0332 01       		.byte	0x1
 3376 0333 B502     		.2byte	0x2b5
 3377 0335 8F000000 		.4byte	0x8f
 3378 0339 02       		.uleb128 0x2
 3379 033a 91       		.byte	0x91
 3380 033b 76       		.sleb128 -10
 3381 033c 0E       		.uleb128 0xe
 3382 033d 59030000 		.4byte	.LASF37
 3383 0341 01       		.byte	0x1
 3384 0342 B602     		.2byte	0x2b6
 3385 0344 6B000000 		.4byte	0x6b
 3386 0348 02       		.uleb128 0x2
 3387 0349 91       		.byte	0x91
 3388 034a 77       		.sleb128 -9
 3389 034b 00       		.byte	0
 3390 034c 12       		.uleb128 0x12
 3391 034d D6040000 		.4byte	.LASF51
 3392 0351 01       		.byte	0x1
 3393 0352 E902     		.2byte	0x2e9
 3394 0354 9B000000 		.4byte	0x9b
 3395 0358 00000000 		.4byte	.LFB12
 3396 035c 7C000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 93


 3397 0360 01       		.uleb128 0x1
 3398 0361 9C       		.byte	0x9c
 3399 0362 85030000 		.4byte	0x385
 3400 0366 0E       		.uleb128 0xe
 3401 0367 CF040000 		.4byte	.LASF50
 3402 036b 01       		.byte	0x1
 3403 036c EB02     		.2byte	0x2eb
 3404 036e 77000000 		.4byte	0x77
 3405 0372 02       		.uleb128 0x2
 3406 0373 91       		.byte	0x91
 3407 0374 76       		.sleb128 -10
 3408 0375 0E       		.uleb128 0xe
 3409 0376 59030000 		.4byte	.LASF37
 3410 037a 01       		.byte	0x1
 3411 037b EC02     		.2byte	0x2ec
 3412 037d 6B000000 		.4byte	0x6b
 3413 0381 02       		.uleb128 0x2
 3414 0382 91       		.byte	0x91
 3415 0383 75       		.sleb128 -11
 3416 0384 00       		.byte	0
 3417 0385 12       		.uleb128 0x12
 3418 0386 D3010000 		.4byte	.LASF52
 3419 038a 01       		.byte	0x1
 3420 038b 2503     		.2byte	0x325
 3421 038d A7000000 		.4byte	0xa7
 3422 0391 00000000 		.4byte	.LFB13
 3423 0395 A8000000 		.4byte	.LFE13-.LFB13
 3424 0399 01       		.uleb128 0x1
 3425 039a 9C       		.byte	0x9c
 3426 039b BE030000 		.4byte	0x3be
 3427 039f 0E       		.uleb128 0xe
 3428 03a0 CF040000 		.4byte	.LASF50
 3429 03a4 01       		.byte	0x1
 3430 03a5 2703     		.2byte	0x327
 3431 03a7 83000000 		.4byte	0x83
 3432 03ab 02       		.uleb128 0x2
 3433 03ac 91       		.byte	0x91
 3434 03ad 74       		.sleb128 -12
 3435 03ae 0E       		.uleb128 0xe
 3436 03af 59030000 		.4byte	.LASF37
 3437 03b3 01       		.byte	0x1
 3438 03b4 2803     		.2byte	0x328
 3439 03b6 6B000000 		.4byte	0x6b
 3440 03ba 02       		.uleb128 0x2
 3441 03bb 91       		.byte	0x91
 3442 03bc 73       		.sleb128 -13
 3443 03bd 00       		.byte	0
 3444 03be 0F       		.uleb128 0xf
 3445 03bf A8040000 		.4byte	.LASF53
 3446 03c3 01       		.byte	0x1
 3447 03c4 8203     		.2byte	0x382
 3448 03c6 00000000 		.4byte	.LFB14
 3449 03ca 1C000000 		.4byte	.LFE14-.LFB14
 3450 03ce 01       		.uleb128 0x1
 3451 03cf 9C       		.byte	0x9c
 3452 03d0 E4030000 		.4byte	0x3e4
 3453 03d4 10       		.uleb128 0x10
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 94


 3454 03d5 37040000 		.4byte	.LASF54
 3455 03d9 01       		.byte	0x1
 3456 03da 8203     		.2byte	0x382
 3457 03dc A7000000 		.4byte	0xa7
 3458 03e0 02       		.uleb128 0x2
 3459 03e1 91       		.byte	0x91
 3460 03e2 74       		.sleb128 -12
 3461 03e3 00       		.byte	0
 3462 03e4 0F       		.uleb128 0xf
 3463 03e5 68030000 		.4byte	.LASF55
 3464 03e9 01       		.byte	0x1
 3465 03ea A503     		.2byte	0x3a5
 3466 03ec 00000000 		.4byte	.LFB15
 3467 03f0 1C000000 		.4byte	.LFE15-.LFB15
 3468 03f4 01       		.uleb128 0x1
 3469 03f5 9C       		.byte	0x9c
 3470 03f6 0A040000 		.4byte	0x40a
 3471 03fa 10       		.uleb128 0x10
 3472 03fb 07000000 		.4byte	.LASF56
 3473 03ff 01       		.byte	0x1
 3474 0400 A503     		.2byte	0x3a5
 3475 0402 A7000000 		.4byte	0xa7
 3476 0406 02       		.uleb128 0x2
 3477 0407 91       		.byte	0x91
 3478 0408 74       		.sleb128 -12
 3479 0409 00       		.byte	0
 3480 040a 12       		.uleb128 0x12
 3481 040b 7A030000 		.4byte	.LASF57
 3482 040f 01       		.byte	0x1
 3483 0410 C003     		.2byte	0x3c0
 3484 0412 9B000000 		.4byte	0x9b
 3485 0416 00000000 		.4byte	.LFB16
 3486 041a 3C000000 		.4byte	.LFE16-.LFB16
 3487 041e 01       		.uleb128 0x1
 3488 041f 9C       		.byte	0x9c
 3489 0420 43040000 		.4byte	0x443
 3490 0424 10       		.uleb128 0x10
 3491 0425 59040000 		.4byte	.LASF58
 3492 0429 01       		.byte	0x1
 3493 042a C003     		.2byte	0x3c0
 3494 042c A7000000 		.4byte	0xa7
 3495 0430 02       		.uleb128 0x2
 3496 0431 91       		.byte	0x91
 3497 0432 6C       		.sleb128 -20
 3498 0433 0E       		.uleb128 0xe
 3499 0434 CD020000 		.4byte	.LASF59
 3500 0438 01       		.byte	0x1
 3501 0439 C303     		.2byte	0x3c3
 3502 043b 9B000000 		.4byte	0x9b
 3503 043f 02       		.uleb128 0x2
 3504 0440 91       		.byte	0x91
 3505 0441 76       		.sleb128 -10
 3506 0442 00       		.byte	0
 3507 0443 11       		.uleb128 0x11
 3508 0444 1A000000 		.4byte	.LASF60
 3509 0448 01       		.byte	0x1
 3510 0449 FD03     		.2byte	0x3fd
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 95


 3511 044b B3000000 		.4byte	0xb3
 3512 044f 00000000 		.4byte	.LFB17
 3513 0453 44000000 		.4byte	.LFE17-.LFB17
 3514 0457 01       		.uleb128 0x1
 3515 0458 9C       		.byte	0x9c
 3516 0459 7C040000 		.4byte	0x47c
 3517 045d 10       		.uleb128 0x10
 3518 045e 59040000 		.4byte	.LASF58
 3519 0462 01       		.byte	0x1
 3520 0463 FD03     		.2byte	0x3fd
 3521 0465 A7000000 		.4byte	0xa7
 3522 0469 02       		.uleb128 0x2
 3523 046a 91       		.byte	0x91
 3524 046b 64       		.sleb128 -28
 3525 046c 0E       		.uleb128 0xe
 3526 046d E3010000 		.4byte	.LASF61
 3527 0471 01       		.byte	0x1
 3528 0472 0004     		.2byte	0x400
 3529 0474 B3000000 		.4byte	0xb3
 3530 0478 02       		.uleb128 0x2
 3531 0479 91       		.byte	0x91
 3532 047a 6C       		.sleb128 -20
 3533 047b 00       		.byte	0
 3534 047c 12       		.uleb128 0x12
 3535 047d AC010000 		.4byte	.LASF62
 3536 0481 01       		.byte	0x1
 3537 0482 3F04     		.2byte	0x43f
 3538 0484 A7000000 		.4byte	0xa7
 3539 0488 00000000 		.4byte	.LFB18
 3540 048c B8000000 		.4byte	.LFE18-.LFB18
 3541 0490 01       		.uleb128 0x1
 3542 0491 9C       		.byte	0x9c
 3543 0492 E2040000 		.4byte	0x4e2
 3544 0496 10       		.uleb128 0x10
 3545 0497 59040000 		.4byte	.LASF58
 3546 049b 01       		.byte	0x1
 3547 049c 3F04     		.2byte	0x43f
 3548 049e A7000000 		.4byte	0xa7
 3549 04a2 02       		.uleb128 0x2
 3550 04a3 91       		.byte	0x91
 3551 04a4 64       		.sleb128 -28
 3552 04a5 0E       		.uleb128 0xe
 3553 04a6 29020000 		.4byte	.LASF63
 3554 04aa 01       		.byte	0x1
 3555 04ab 4204     		.2byte	0x442
 3556 04ad A7000000 		.4byte	0xa7
 3557 04b1 02       		.uleb128 0x2
 3558 04b2 91       		.byte	0x91
 3559 04b3 68       		.sleb128 -24
 3560 04b4 0E       		.uleb128 0xe
 3561 04b5 02040000 		.4byte	.LASF64
 3562 04b9 01       		.byte	0x1
 3563 04ba 4304     		.2byte	0x443
 3564 04bc A7000000 		.4byte	0xa7
 3565 04c0 02       		.uleb128 0x2
 3566 04c1 91       		.byte	0x91
 3567 04c2 74       		.sleb128 -12
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 96


 3568 04c3 0E       		.uleb128 0xe
 3569 04c4 08040000 		.4byte	.LASF65
 3570 04c8 01       		.byte	0x1
 3571 04c9 4404     		.2byte	0x444
 3572 04cb A7000000 		.4byte	0xa7
 3573 04cf 02       		.uleb128 0x2
 3574 04d0 91       		.byte	0x91
 3575 04d1 70       		.sleb128 -16
 3576 04d2 0E       		.uleb128 0xe
 3577 04d3 EC030000 		.4byte	.LASF66
 3578 04d7 01       		.byte	0x1
 3579 04d8 4504     		.2byte	0x445
 3580 04da 6B000000 		.4byte	0x6b
 3581 04de 02       		.uleb128 0x2
 3582 04df 91       		.byte	0x91
 3583 04e0 6F       		.sleb128 -17
 3584 04e1 00       		.byte	0
 3585 04e2 14       		.uleb128 0x14
 3586 04e3 3B030000 		.4byte	.LASF69
 3587 04e7 01       		.byte	0x1
 3588 04e8 DA04     		.2byte	0x4da
 3589 04ea 00000000 		.4byte	.LFB19
 3590 04ee 1C040000 		.4byte	.LFE19-.LFB19
 3591 04f2 01       		.uleb128 0x1
 3592 04f3 9C       		.byte	0x9c
 3593 04f4 08050000 		.4byte	0x508
 3594 04f8 10       		.uleb128 0x10
 3595 04f9 1A040000 		.4byte	.LASF27
 3596 04fd 01       		.byte	0x1
 3597 04fe DA04     		.2byte	0x4da
 3598 0500 6B000000 		.4byte	0x6b
 3599 0504 02       		.uleb128 0x2
 3600 0505 91       		.byte	0x91
 3601 0506 77       		.sleb128 -9
 3602 0507 00       		.byte	0
 3603 0508 0D       		.uleb128 0xd
 3604 0509 B9030000 		.4byte	.LASF67
 3605 050d 01       		.byte	0x1
 3606 050e 1006     		.2byte	0x610
 3607 0510 00000000 		.4byte	.LFB20
 3608 0514 90000000 		.4byte	.LFE20-.LFB20
 3609 0518 01       		.uleb128 0x1
 3610 0519 9C       		.byte	0x9c
 3611 051a 3D050000 		.4byte	0x53d
 3612 051e 10       		.uleb128 0x10
 3613 051f 1A040000 		.4byte	.LASF27
 3614 0523 01       		.byte	0x1
 3615 0524 1006     		.2byte	0x610
 3616 0526 6B000000 		.4byte	0x6b
 3617 052a 02       		.uleb128 0x2
 3618 052b 91       		.byte	0x91
 3619 052c 77       		.sleb128 -9
 3620 052d 10       		.uleb128 0x10
 3621 052e 26040000 		.4byte	.LASF68
 3622 0532 01       		.byte	0x1
 3623 0533 1006     		.2byte	0x610
 3624 0535 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 97


 3625 0539 02       		.uleb128 0x2
 3626 053a 91       		.byte	0x91
 3627 053b 76       		.sleb128 -10
 3628 053c 00       		.byte	0
 3629 053d 14       		.uleb128 0x14
 3630 053e E0020000 		.4byte	.LASF70
 3631 0542 01       		.byte	0x1
 3632 0543 5106     		.2byte	0x651
 3633 0545 00000000 		.4byte	.LFB21
 3634 0549 70010000 		.4byte	.LFE21-.LFB21
 3635 054d 01       		.uleb128 0x1
 3636 054e 9C       		.byte	0x9c
 3637 054f DB050000 		.4byte	0x5db
 3638 0553 10       		.uleb128 0x10
 3639 0554 0F000000 		.4byte	.LASF71
 3640 0558 01       		.byte	0x1
 3641 0559 5106     		.2byte	0x651
 3642 055b 6B000000 		.4byte	0x6b
 3643 055f 02       		.uleb128 0x2
 3644 0560 91       		.byte	0x91
 3645 0561 5F       		.sleb128 -33
 3646 0562 10       		.uleb128 0x10
 3647 0563 93030000 		.4byte	.LASF72
 3648 0567 01       		.byte	0x1
 3649 0568 5106     		.2byte	0x651
 3650 056a 77000000 		.4byte	0x77
 3651 056e 02       		.uleb128 0x2
 3652 056f 91       		.byte	0x91
 3653 0570 5C       		.sleb128 -36
 3654 0571 10       		.uleb128 0x10
 3655 0572 43010000 		.4byte	.LASF73
 3656 0576 01       		.byte	0x1
 3657 0577 5106     		.2byte	0x651
 3658 0579 77000000 		.4byte	0x77
 3659 057d 02       		.uleb128 0x2
 3660 057e 91       		.byte	0x91
 3661 057f 5A       		.sleb128 -38
 3662 0580 10       		.uleb128 0x10
 3663 0581 EC030000 		.4byte	.LASF66
 3664 0585 01       		.byte	0x1
 3665 0586 5206     		.2byte	0x652
 3666 0588 6B000000 		.4byte	0x6b
 3667 058c 02       		.uleb128 0x2
 3668 058d 91       		.byte	0x91
 3669 058e 5E       		.sleb128 -34
 3670 058f 10       		.uleb128 0x10
 3671 0590 1A040000 		.4byte	.LASF27
 3672 0594 01       		.byte	0x1
 3673 0595 5206     		.2byte	0x652
 3674 0597 6B000000 		.4byte	0x6b
 3675 059b 02       		.uleb128 0x2
 3676 059c 91       		.byte	0x91
 3677 059d 00       		.sleb128 0
 3678 059e 0E       		.uleb128 0xe
 3679 059f D4020000 		.4byte	.LASF74
 3680 05a3 01       		.byte	0x1
 3681 05a4 5406     		.2byte	0x654
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 98


 3682 05a6 8F000000 		.4byte	0x8f
 3683 05aa 02       		.uleb128 0x2
 3684 05ab 91       		.byte	0x91
 3685 05ac 6F       		.sleb128 -17
 3686 05ad 0E       		.uleb128 0xe
 3687 05ae A0030000 		.4byte	.LASF75
 3688 05b2 01       		.byte	0x1
 3689 05b3 5506     		.2byte	0x655
 3690 05b5 A7000000 		.4byte	0xa7
 3691 05b9 02       		.uleb128 0x2
 3692 05ba 91       		.byte	0x91
 3693 05bb 68       		.sleb128 -24
 3694 05bc 0E       		.uleb128 0xe
 3695 05bd C3020000 		.4byte	.LASF44
 3696 05c1 01       		.byte	0x1
 3697 05c2 5606     		.2byte	0x656
 3698 05c4 77000000 		.4byte	0x77
 3699 05c8 02       		.uleb128 0x2
 3700 05c9 91       		.byte	0x91
 3701 05ca 6C       		.sleb128 -20
 3702 05cb 0E       		.uleb128 0xe
 3703 05cc E4030000 		.4byte	.LASF76
 3704 05d0 01       		.byte	0x1
 3705 05d1 5706     		.2byte	0x657
 3706 05d3 83000000 		.4byte	0x83
 3707 05d7 02       		.uleb128 0x2
 3708 05d8 91       		.byte	0x91
 3709 05d9 64       		.sleb128 -28
 3710 05da 00       		.byte	0
 3711 05db 14       		.uleb128 0x14
 3712 05dc FC010000 		.4byte	.LASF77
 3713 05e0 01       		.byte	0x1
 3714 05e1 BC06     		.2byte	0x6bc
 3715 05e3 00000000 		.4byte	.LFB22
 3716 05e7 7C000000 		.4byte	.LFE22-.LFB22
 3717 05eb 01       		.uleb128 0x1
 3718 05ec 9C       		.byte	0x9c
 3719 05ed 10060000 		.4byte	0x610
 3720 05f1 10       		.uleb128 0x10
 3721 05f2 0E020000 		.4byte	.LASF78
 3722 05f6 01       		.byte	0x1
 3723 05f7 BC06     		.2byte	0x6bc
 3724 05f9 6B000000 		.4byte	0x6b
 3725 05fd 02       		.uleb128 0x2
 3726 05fe 91       		.byte	0x91
 3727 05ff 6F       		.sleb128 -17
 3728 0600 0E       		.uleb128 0xe
 3729 0601 6E040000 		.4byte	.LASF28
 3730 0605 01       		.byte	0x1
 3731 0606 BE06     		.2byte	0x6be
 3732 0608 6B000000 		.4byte	0x6b
 3733 060c 02       		.uleb128 0x2
 3734 060d 91       		.byte	0x91
 3735 060e 77       		.sleb128 -9
 3736 060f 00       		.byte	0
 3737 0610 11       		.uleb128 0x11
 3738 0611 4F040000 		.4byte	.LASF79
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 99


 3739 0615 01       		.byte	0x1
 3740 0616 E206     		.2byte	0x6e2
 3741 0618 8F000000 		.4byte	0x8f
 3742 061c 00000000 		.4byte	.LFB23
 3743 0620 3C000000 		.4byte	.LFE23-.LFB23
 3744 0624 01       		.uleb128 0x1
 3745 0625 9C       		.byte	0x9c
 3746 0626 3A060000 		.4byte	0x63a
 3747 062a 0E       		.uleb128 0xe
 3748 062b CF040000 		.4byte	.LASF50
 3749 062f 01       		.byte	0x1
 3750 0630 E406     		.2byte	0x6e4
 3751 0632 8F000000 		.4byte	0x8f
 3752 0636 02       		.uleb128 0x2
 3753 0637 91       		.byte	0x91
 3754 0638 77       		.sleb128 -9
 3755 0639 00       		.byte	0
 3756 063a 11       		.uleb128 0x11
 3757 063b 4C000000 		.4byte	.LASF80
 3758 063f 01       		.byte	0x1
 3759 0640 0307     		.2byte	0x703
 3760 0642 9B000000 		.4byte	0x9b
 3761 0646 00000000 		.4byte	.LFB24
 3762 064a 3C000000 		.4byte	.LFE24-.LFB24
 3763 064e 01       		.uleb128 0x1
 3764 064f 9C       		.byte	0x9c
 3765 0650 64060000 		.4byte	0x664
 3766 0654 0E       		.uleb128 0xe
 3767 0655 CF040000 		.4byte	.LASF50
 3768 0659 01       		.byte	0x1
 3769 065a 0507     		.2byte	0x705
 3770 065c 9B000000 		.4byte	0x9b
 3771 0660 02       		.uleb128 0x2
 3772 0661 91       		.byte	0x91
 3773 0662 76       		.sleb128 -10
 3774 0663 00       		.byte	0
 3775 0664 11       		.uleb128 0x11
 3776 0665 63040000 		.4byte	.LASF81
 3777 0669 01       		.byte	0x1
 3778 066a 2407     		.2byte	0x724
 3779 066c A7000000 		.4byte	0xa7
 3780 0670 00000000 		.4byte	.LFB25
 3781 0674 38000000 		.4byte	.LFE25-.LFB25
 3782 0678 01       		.uleb128 0x1
 3783 0679 9C       		.byte	0x9c
 3784 067a 8E060000 		.4byte	0x68e
 3785 067e 0E       		.uleb128 0xe
 3786 067f CF040000 		.4byte	.LASF50
 3787 0683 01       		.byte	0x1
 3788 0684 2607     		.2byte	0x726
 3789 0686 A7000000 		.4byte	0xa7
 3790 068a 02       		.uleb128 0x2
 3791 068b 91       		.byte	0x91
 3792 068c 74       		.sleb128 -12
 3793 068d 00       		.byte	0
 3794 068e 15       		.uleb128 0x15
 3795 068f 36010000 		.4byte	0x136
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 100


 3796 0693 9E060000 		.4byte	0x69e
 3797 0697 16       		.uleb128 0x16
 3798 0698 0E010000 		.4byte	0x10e
 3799 069c 03       		.byte	0x3
 3800 069d 00       		.byte	0
 3801 069e 0B       		.uleb128 0xb
 3802 069f 32030000 		.4byte	.LASF82
 3803 06a3 01       		.byte	0x1
 3804 06a4 3D       		.byte	0x3d
 3805 06a5 8E060000 		.4byte	0x68e
 3806 06a9 05       		.uleb128 0x5
 3807 06aa 03       		.byte	0x3
 3808 06ab 04000000 		.4byte	ADC_gcor
 3809 06af 17       		.uleb128 0x17
 3810 06b0 F0010000 		.4byte	.LASF83
 3811 06b4 01       		.byte	0x1
 3812 06b5 2C       		.byte	0x2c
 3813 06b6 6B000000 		.4byte	0x6b
 3814 06ba 05       		.uleb128 0x5
 3815 06bb 03       		.byte	0x3
 3816 06bc 00000000 		.4byte	ADC_initVar
 3817 06c0 17       		.uleb128 0x17
 3818 06c1 96010000 		.4byte	.LASF84
 3819 06c5 01       		.byte	0x1
 3820 06c6 24       		.byte	0x24
 3821 06c7 E0000000 		.4byte	0xe0
 3822 06cb 05       		.uleb128 0x5
 3823 06cc 03       		.byte	0x3
 3824 06cd 00000000 		.4byte	ADC_convDone
 3825 06d1 17       		.uleb128 0x17
 3826 06d2 2D000000 		.4byte	.LASF85
 3827 06d6 01       		.byte	0x1
 3828 06d7 29       		.byte	0x29
 3829 06d8 E0000000 		.4byte	0xe0
 3830 06dc 05       		.uleb128 0x5
 3831 06dd 03       		.byte	0x3
 3832 06de 00000000 		.4byte	ADC_stopConversion
 3833 06e2 17       		.uleb128 0x17
 3834 06e3 40000000 		.4byte	.LASF86
 3835 06e7 01       		.byte	0x1
 3836 06e8 2F       		.byte	0x2f
 3837 06e9 E0000000 		.4byte	0xe0
 3838 06ed 05       		.uleb128 0x5
 3839 06ee 03       		.byte	0x3
 3840 06ef 00000000 		.4byte	ADC_started
 3841 06f3 17       		.uleb128 0x17
 3842 06f4 27010000 		.4byte	.LASF87
 3843 06f8 01       		.byte	0x1
 3844 06f9 32       		.byte	0x32
 3845 06fa E0000000 		.4byte	0xe0
 3846 06fe 05       		.uleb128 0x5
 3847 06ff 03       		.byte	0x3
 3848 0700 00000000 		.4byte	ADC_Config
 3849 0704 17       		.uleb128 0x17
 3850 0705 F7030000 		.4byte	.LASF88
 3851 0709 01       		.byte	0x1
 3852 070a 34       		.byte	0x34
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 101


 3853 070b 15070000 		.4byte	0x715
 3854 070f 05       		.uleb128 0x5
 3855 0710 03       		.byte	0x3
 3856 0711 00000000 		.4byte	ADC_Offset
 3857 0715 05       		.uleb128 0x5
 3858 0716 A7000000 		.4byte	0xa7
 3859 071a 17       		.uleb128 0x17
 3860 071b B6040000 		.4byte	.LASF89
 3861 071f 01       		.byte	0x1
 3862 0720 35       		.byte	0x35
 3863 0721 15070000 		.4byte	0x715
 3864 0725 05       		.uleb128 0x5
 3865 0726 03       		.byte	0x3
 3866 0727 00000000 		.4byte	ADC_CountsPerVolt
 3867 072b 00       		.byte	0
 3868              		.section	.debug_abbrev,"",%progbits
 3869              	.Ldebug_abbrev0:
 3870 0000 01       		.uleb128 0x1
 3871 0001 11       		.uleb128 0x11
 3872 0002 01       		.byte	0x1
 3873 0003 25       		.uleb128 0x25
 3874 0004 0E       		.uleb128 0xe
 3875 0005 13       		.uleb128 0x13
 3876 0006 0B       		.uleb128 0xb
 3877 0007 03       		.uleb128 0x3
 3878 0008 0E       		.uleb128 0xe
 3879 0009 1B       		.uleb128 0x1b
 3880 000a 0E       		.uleb128 0xe
 3881 000b 55       		.uleb128 0x55
 3882 000c 17       		.uleb128 0x17
 3883 000d 11       		.uleb128 0x11
 3884 000e 01       		.uleb128 0x1
 3885 000f 10       		.uleb128 0x10
 3886 0010 17       		.uleb128 0x17
 3887 0011 00       		.byte	0
 3888 0012 00       		.byte	0
 3889 0013 02       		.uleb128 0x2
 3890 0014 24       		.uleb128 0x24
 3891 0015 00       		.byte	0
 3892 0016 0B       		.uleb128 0xb
 3893 0017 0B       		.uleb128 0xb
 3894 0018 3E       		.uleb128 0x3e
 3895 0019 0B       		.uleb128 0xb
 3896 001a 03       		.uleb128 0x3
 3897 001b 0E       		.uleb128 0xe
 3898 001c 00       		.byte	0
 3899 001d 00       		.byte	0
 3900 001e 03       		.uleb128 0x3
 3901 001f 24       		.uleb128 0x24
 3902 0020 00       		.byte	0
 3903 0021 0B       		.uleb128 0xb
 3904 0022 0B       		.uleb128 0xb
 3905 0023 3E       		.uleb128 0x3e
 3906 0024 0B       		.uleb128 0xb
 3907 0025 03       		.uleb128 0x3
 3908 0026 08       		.uleb128 0x8
 3909 0027 00       		.byte	0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 102


 3910 0028 00       		.byte	0
 3911 0029 04       		.uleb128 0x4
 3912 002a 16       		.uleb128 0x16
 3913 002b 00       		.byte	0
 3914 002c 03       		.uleb128 0x3
 3915 002d 0E       		.uleb128 0xe
 3916 002e 3A       		.uleb128 0x3a
 3917 002f 0B       		.uleb128 0xb
 3918 0030 3B       		.uleb128 0x3b
 3919 0031 05       		.uleb128 0x5
 3920 0032 49       		.uleb128 0x49
 3921 0033 13       		.uleb128 0x13
 3922 0034 00       		.byte	0
 3923 0035 00       		.byte	0
 3924 0036 05       		.uleb128 0x5
 3925 0037 35       		.uleb128 0x35
 3926 0038 00       		.byte	0
 3927 0039 49       		.uleb128 0x49
 3928 003a 13       		.uleb128 0x13
 3929 003b 00       		.byte	0
 3930 003c 00       		.byte	0
 3931 003d 06       		.uleb128 0x6
 3932 003e 13       		.uleb128 0x13
 3933 003f 01       		.byte	0x1
 3934 0040 0B       		.uleb128 0xb
 3935 0041 0B       		.uleb128 0xb
 3936 0042 3A       		.uleb128 0x3a
 3937 0043 0B       		.uleb128 0xb
 3938 0044 3B       		.uleb128 0x3b
 3939 0045 0B       		.uleb128 0xb
 3940 0046 01       		.uleb128 0x1
 3941 0047 13       		.uleb128 0x13
 3942 0048 00       		.byte	0
 3943 0049 00       		.byte	0
 3944 004a 07       		.uleb128 0x7
 3945 004b 0D       		.uleb128 0xd
 3946 004c 00       		.byte	0
 3947 004d 03       		.uleb128 0x3
 3948 004e 0E       		.uleb128 0xe
 3949 004f 3A       		.uleb128 0x3a
 3950 0050 0B       		.uleb128 0xb
 3951 0051 3B       		.uleb128 0x3b
 3952 0052 0B       		.uleb128 0xb
 3953 0053 49       		.uleb128 0x49
 3954 0054 13       		.uleb128 0x13
 3955 0055 38       		.uleb128 0x38
 3956 0056 0B       		.uleb128 0xb
 3957 0057 00       		.byte	0
 3958 0058 00       		.byte	0
 3959 0059 08       		.uleb128 0x8
 3960 005a 16       		.uleb128 0x16
 3961 005b 00       		.byte	0
 3962 005c 03       		.uleb128 0x3
 3963 005d 0E       		.uleb128 0xe
 3964 005e 3A       		.uleb128 0x3a
 3965 005f 0B       		.uleb128 0xb
 3966 0060 3B       		.uleb128 0x3b
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 103


 3967 0061 0B       		.uleb128 0xb
 3968 0062 49       		.uleb128 0x49
 3969 0063 13       		.uleb128 0x13
 3970 0064 00       		.byte	0
 3971 0065 00       		.byte	0
 3972 0066 09       		.uleb128 0x9
 3973 0067 2E       		.uleb128 0x2e
 3974 0068 00       		.byte	0
 3975 0069 3F       		.uleb128 0x3f
 3976 006a 19       		.uleb128 0x19
 3977 006b 03       		.uleb128 0x3
 3978 006c 0E       		.uleb128 0xe
 3979 006d 3A       		.uleb128 0x3a
 3980 006e 0B       		.uleb128 0xb
 3981 006f 3B       		.uleb128 0x3b
 3982 0070 0B       		.uleb128 0xb
 3983 0071 27       		.uleb128 0x27
 3984 0072 19       		.uleb128 0x19
 3985 0073 11       		.uleb128 0x11
 3986 0074 01       		.uleb128 0x1
 3987 0075 12       		.uleb128 0x12
 3988 0076 06       		.uleb128 0x6
 3989 0077 40       		.uleb128 0x40
 3990 0078 18       		.uleb128 0x18
 3991 0079 9642     		.uleb128 0x2116
 3992 007b 19       		.uleb128 0x19
 3993 007c 00       		.byte	0
 3994 007d 00       		.byte	0
 3995 007e 0A       		.uleb128 0xa
 3996 007f 2E       		.uleb128 0x2e
 3997 0080 01       		.byte	0x1
 3998 0081 3F       		.uleb128 0x3f
 3999 0082 19       		.uleb128 0x19
 4000 0083 03       		.uleb128 0x3
 4001 0084 0E       		.uleb128 0xe
 4002 0085 3A       		.uleb128 0x3a
 4003 0086 0B       		.uleb128 0xb
 4004 0087 3B       		.uleb128 0x3b
 4005 0088 0B       		.uleb128 0xb
 4006 0089 27       		.uleb128 0x27
 4007 008a 19       		.uleb128 0x19
 4008 008b 11       		.uleb128 0x11
 4009 008c 01       		.uleb128 0x1
 4010 008d 12       		.uleb128 0x12
 4011 008e 06       		.uleb128 0x6
 4012 008f 40       		.uleb128 0x40
 4013 0090 18       		.uleb128 0x18
 4014 0091 9642     		.uleb128 0x2116
 4015 0093 19       		.uleb128 0x19
 4016 0094 01       		.uleb128 0x1
 4017 0095 13       		.uleb128 0x13
 4018 0096 00       		.byte	0
 4019 0097 00       		.byte	0
 4020 0098 0B       		.uleb128 0xb
 4021 0099 34       		.uleb128 0x34
 4022 009a 00       		.byte	0
 4023 009b 03       		.uleb128 0x3
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 104


 4024 009c 0E       		.uleb128 0xe
 4025 009d 3A       		.uleb128 0x3a
 4026 009e 0B       		.uleb128 0xb
 4027 009f 3B       		.uleb128 0x3b
 4028 00a0 0B       		.uleb128 0xb
 4029 00a1 49       		.uleb128 0x49
 4030 00a2 13       		.uleb128 0x13
 4031 00a3 02       		.uleb128 0x2
 4032 00a4 18       		.uleb128 0x18
 4033 00a5 00       		.byte	0
 4034 00a6 00       		.byte	0
 4035 00a7 0C       		.uleb128 0xc
 4036 00a8 2E       		.uleb128 0x2e
 4037 00a9 00       		.byte	0
 4038 00aa 3F       		.uleb128 0x3f
 4039 00ab 19       		.uleb128 0x19
 4040 00ac 03       		.uleb128 0x3
 4041 00ad 0E       		.uleb128 0xe
 4042 00ae 3A       		.uleb128 0x3a
 4043 00af 0B       		.uleb128 0xb
 4044 00b0 3B       		.uleb128 0x3b
 4045 00b1 05       		.uleb128 0x5
 4046 00b2 27       		.uleb128 0x27
 4047 00b3 19       		.uleb128 0x19
 4048 00b4 11       		.uleb128 0x11
 4049 00b5 01       		.uleb128 0x1
 4050 00b6 12       		.uleb128 0x12
 4051 00b7 06       		.uleb128 0x6
 4052 00b8 40       		.uleb128 0x40
 4053 00b9 18       		.uleb128 0x18
 4054 00ba 9642     		.uleb128 0x2116
 4055 00bc 19       		.uleb128 0x19
 4056 00bd 00       		.byte	0
 4057 00be 00       		.byte	0
 4058 00bf 0D       		.uleb128 0xd
 4059 00c0 2E       		.uleb128 0x2e
 4060 00c1 01       		.byte	0x1
 4061 00c2 3F       		.uleb128 0x3f
 4062 00c3 19       		.uleb128 0x19
 4063 00c4 03       		.uleb128 0x3
 4064 00c5 0E       		.uleb128 0xe
 4065 00c6 3A       		.uleb128 0x3a
 4066 00c7 0B       		.uleb128 0xb
 4067 00c8 3B       		.uleb128 0x3b
 4068 00c9 05       		.uleb128 0x5
 4069 00ca 27       		.uleb128 0x27
 4070 00cb 19       		.uleb128 0x19
 4071 00cc 11       		.uleb128 0x11
 4072 00cd 01       		.uleb128 0x1
 4073 00ce 12       		.uleb128 0x12
 4074 00cf 06       		.uleb128 0x6
 4075 00d0 40       		.uleb128 0x40
 4076 00d1 18       		.uleb128 0x18
 4077 00d2 9642     		.uleb128 0x2116
 4078 00d4 19       		.uleb128 0x19
 4079 00d5 01       		.uleb128 0x1
 4080 00d6 13       		.uleb128 0x13
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 105


 4081 00d7 00       		.byte	0
 4082 00d8 00       		.byte	0
 4083 00d9 0E       		.uleb128 0xe
 4084 00da 34       		.uleb128 0x34
 4085 00db 00       		.byte	0
 4086 00dc 03       		.uleb128 0x3
 4087 00dd 0E       		.uleb128 0xe
 4088 00de 3A       		.uleb128 0x3a
 4089 00df 0B       		.uleb128 0xb
 4090 00e0 3B       		.uleb128 0x3b
 4091 00e1 05       		.uleb128 0x5
 4092 00e2 49       		.uleb128 0x49
 4093 00e3 13       		.uleb128 0x13
 4094 00e4 02       		.uleb128 0x2
 4095 00e5 18       		.uleb128 0x18
 4096 00e6 00       		.byte	0
 4097 00e7 00       		.byte	0
 4098 00e8 0F       		.uleb128 0xf
 4099 00e9 2E       		.uleb128 0x2e
 4100 00ea 01       		.byte	0x1
 4101 00eb 3F       		.uleb128 0x3f
 4102 00ec 19       		.uleb128 0x19
 4103 00ed 03       		.uleb128 0x3
 4104 00ee 0E       		.uleb128 0xe
 4105 00ef 3A       		.uleb128 0x3a
 4106 00f0 0B       		.uleb128 0xb
 4107 00f1 3B       		.uleb128 0x3b
 4108 00f2 05       		.uleb128 0x5
 4109 00f3 27       		.uleb128 0x27
 4110 00f4 19       		.uleb128 0x19
 4111 00f5 11       		.uleb128 0x11
 4112 00f6 01       		.uleb128 0x1
 4113 00f7 12       		.uleb128 0x12
 4114 00f8 06       		.uleb128 0x6
 4115 00f9 40       		.uleb128 0x40
 4116 00fa 18       		.uleb128 0x18
 4117 00fb 9742     		.uleb128 0x2117
 4118 00fd 19       		.uleb128 0x19
 4119 00fe 01       		.uleb128 0x1
 4120 00ff 13       		.uleb128 0x13
 4121 0100 00       		.byte	0
 4122 0101 00       		.byte	0
 4123 0102 10       		.uleb128 0x10
 4124 0103 05       		.uleb128 0x5
 4125 0104 00       		.byte	0
 4126 0105 03       		.uleb128 0x3
 4127 0106 0E       		.uleb128 0xe
 4128 0107 3A       		.uleb128 0x3a
 4129 0108 0B       		.uleb128 0xb
 4130 0109 3B       		.uleb128 0x3b
 4131 010a 05       		.uleb128 0x5
 4132 010b 49       		.uleb128 0x49
 4133 010c 13       		.uleb128 0x13
 4134 010d 02       		.uleb128 0x2
 4135 010e 18       		.uleb128 0x18
 4136 010f 00       		.byte	0
 4137 0110 00       		.byte	0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 106


 4138 0111 11       		.uleb128 0x11
 4139 0112 2E       		.uleb128 0x2e
 4140 0113 01       		.byte	0x1
 4141 0114 3F       		.uleb128 0x3f
 4142 0115 19       		.uleb128 0x19
 4143 0116 03       		.uleb128 0x3
 4144 0117 0E       		.uleb128 0xe
 4145 0118 3A       		.uleb128 0x3a
 4146 0119 0B       		.uleb128 0xb
 4147 011a 3B       		.uleb128 0x3b
 4148 011b 05       		.uleb128 0x5
 4149 011c 27       		.uleb128 0x27
 4150 011d 19       		.uleb128 0x19
 4151 011e 49       		.uleb128 0x49
 4152 011f 13       		.uleb128 0x13
 4153 0120 11       		.uleb128 0x11
 4154 0121 01       		.uleb128 0x1
 4155 0122 12       		.uleb128 0x12
 4156 0123 06       		.uleb128 0x6
 4157 0124 40       		.uleb128 0x40
 4158 0125 18       		.uleb128 0x18
 4159 0126 9642     		.uleb128 0x2116
 4160 0128 19       		.uleb128 0x19
 4161 0129 01       		.uleb128 0x1
 4162 012a 13       		.uleb128 0x13
 4163 012b 00       		.byte	0
 4164 012c 00       		.byte	0
 4165 012d 12       		.uleb128 0x12
 4166 012e 2E       		.uleb128 0x2e
 4167 012f 01       		.byte	0x1
 4168 0130 3F       		.uleb128 0x3f
 4169 0131 19       		.uleb128 0x19
 4170 0132 03       		.uleb128 0x3
 4171 0133 0E       		.uleb128 0xe
 4172 0134 3A       		.uleb128 0x3a
 4173 0135 0B       		.uleb128 0xb
 4174 0136 3B       		.uleb128 0x3b
 4175 0137 05       		.uleb128 0x5
 4176 0138 27       		.uleb128 0x27
 4177 0139 19       		.uleb128 0x19
 4178 013a 49       		.uleb128 0x49
 4179 013b 13       		.uleb128 0x13
 4180 013c 11       		.uleb128 0x11
 4181 013d 01       		.uleb128 0x1
 4182 013e 12       		.uleb128 0x12
 4183 013f 06       		.uleb128 0x6
 4184 0140 40       		.uleb128 0x40
 4185 0141 18       		.uleb128 0x18
 4186 0142 9742     		.uleb128 0x2117
 4187 0144 19       		.uleb128 0x19
 4188 0145 01       		.uleb128 0x1
 4189 0146 13       		.uleb128 0x13
 4190 0147 00       		.byte	0
 4191 0148 00       		.byte	0
 4192 0149 13       		.uleb128 0x13
 4193 014a 2E       		.uleb128 0x2e
 4194 014b 00       		.byte	0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 107


 4195 014c 3F       		.uleb128 0x3f
 4196 014d 19       		.uleb128 0x19
 4197 014e 03       		.uleb128 0x3
 4198 014f 0E       		.uleb128 0xe
 4199 0150 3A       		.uleb128 0x3a
 4200 0151 0B       		.uleb128 0xb
 4201 0152 3B       		.uleb128 0x3b
 4202 0153 05       		.uleb128 0x5
 4203 0154 27       		.uleb128 0x27
 4204 0155 19       		.uleb128 0x19
 4205 0156 11       		.uleb128 0x11
 4206 0157 01       		.uleb128 0x1
 4207 0158 12       		.uleb128 0x12
 4208 0159 06       		.uleb128 0x6
 4209 015a 40       		.uleb128 0x40
 4210 015b 18       		.uleb128 0x18
 4211 015c 9742     		.uleb128 0x2117
 4212 015e 19       		.uleb128 0x19
 4213 015f 00       		.byte	0
 4214 0160 00       		.byte	0
 4215 0161 14       		.uleb128 0x14
 4216 0162 2E       		.uleb128 0x2e
 4217 0163 01       		.byte	0x1
 4218 0164 03       		.uleb128 0x3
 4219 0165 0E       		.uleb128 0xe
 4220 0166 3A       		.uleb128 0x3a
 4221 0167 0B       		.uleb128 0xb
 4222 0168 3B       		.uleb128 0x3b
 4223 0169 05       		.uleb128 0x5
 4224 016a 27       		.uleb128 0x27
 4225 016b 19       		.uleb128 0x19
 4226 016c 11       		.uleb128 0x11
 4227 016d 01       		.uleb128 0x1
 4228 016e 12       		.uleb128 0x12
 4229 016f 06       		.uleb128 0x6
 4230 0170 40       		.uleb128 0x40
 4231 0171 18       		.uleb128 0x18
 4232 0172 9642     		.uleb128 0x2116
 4233 0174 19       		.uleb128 0x19
 4234 0175 01       		.uleb128 0x1
 4235 0176 13       		.uleb128 0x13
 4236 0177 00       		.byte	0
 4237 0178 00       		.byte	0
 4238 0179 15       		.uleb128 0x15
 4239 017a 01       		.uleb128 0x1
 4240 017b 01       		.byte	0x1
 4241 017c 49       		.uleb128 0x49
 4242 017d 13       		.uleb128 0x13
 4243 017e 01       		.uleb128 0x1
 4244 017f 13       		.uleb128 0x13
 4245 0180 00       		.byte	0
 4246 0181 00       		.byte	0
 4247 0182 16       		.uleb128 0x16
 4248 0183 21       		.uleb128 0x21
 4249 0184 00       		.byte	0
 4250 0185 49       		.uleb128 0x49
 4251 0186 13       		.uleb128 0x13
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 108


 4252 0187 2F       		.uleb128 0x2f
 4253 0188 0B       		.uleb128 0xb
 4254 0189 00       		.byte	0
 4255 018a 00       		.byte	0
 4256 018b 17       		.uleb128 0x17
 4257 018c 34       		.uleb128 0x34
 4258 018d 00       		.byte	0
 4259 018e 03       		.uleb128 0x3
 4260 018f 0E       		.uleb128 0xe
 4261 0190 3A       		.uleb128 0x3a
 4262 0191 0B       		.uleb128 0xb
 4263 0192 3B       		.uleb128 0x3b
 4264 0193 0B       		.uleb128 0xb
 4265 0194 49       		.uleb128 0x49
 4266 0195 13       		.uleb128 0x13
 4267 0196 3F       		.uleb128 0x3f
 4268 0197 19       		.uleb128 0x19
 4269 0198 02       		.uleb128 0x2
 4270 0199 18       		.uleb128 0x18
 4271 019a 00       		.byte	0
 4272 019b 00       		.byte	0
 4273 019c 00       		.byte	0
 4274              		.section	.debug_aranges,"",%progbits
 4275 0000 E4000000 		.4byte	0xe4
 4276 0004 0200     		.2byte	0x2
 4277 0006 00000000 		.4byte	.Ldebug_info0
 4278 000a 04       		.byte	0x4
 4279 000b 00       		.byte	0
 4280 000c 0000     		.2byte	0
 4281 000e 0000     		.2byte	0
 4282 0010 00000000 		.4byte	.LFB0
 4283 0014 58010000 		.4byte	.LFE0-.LFB0
 4284 0018 00000000 		.4byte	.LFB1
 4285 001c 58010000 		.4byte	.LFE1-.LFB1
 4286 0020 00000000 		.4byte	.LFB2
 4287 0024 30000000 		.4byte	.LFE2-.LFB2
 4288 0028 00000000 		.4byte	.LFB3
 4289 002c 7C010000 		.4byte	.LFE3-.LFB3
 4290 0030 00000000 		.4byte	.LFB4
 4291 0034 3C000000 		.4byte	.LFE4-.LFB4
 4292 0038 00000000 		.4byte	.LFB5
 4293 003c 38000000 		.4byte	.LFE5-.LFB5
 4294 0040 00000000 		.4byte	.LFB6
 4295 0044 AC000000 		.4byte	.LFE6-.LFB6
 4296 0048 00000000 		.4byte	.LFB7
 4297 004c 3C000000 		.4byte	.LFE7-.LFB7
 4298 0050 00000000 		.4byte	.LFB8
 4299 0054 20000000 		.4byte	.LFE8-.LFB8
 4300 0058 00000000 		.4byte	.LFB9
 4301 005c 20000000 		.4byte	.LFE9-.LFB9
 4302 0060 00000000 		.4byte	.LFB10
 4303 0064 4C000000 		.4byte	.LFE10-.LFB10
 4304 0068 00000000 		.4byte	.LFB11
 4305 006c 68000000 		.4byte	.LFE11-.LFB11
 4306 0070 00000000 		.4byte	.LFB12
 4307 0074 7C000000 		.4byte	.LFE12-.LFB12
 4308 0078 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 109


 4309 007c A8000000 		.4byte	.LFE13-.LFB13
 4310 0080 00000000 		.4byte	.LFB14
 4311 0084 1C000000 		.4byte	.LFE14-.LFB14
 4312 0088 00000000 		.4byte	.LFB15
 4313 008c 1C000000 		.4byte	.LFE15-.LFB15
 4314 0090 00000000 		.4byte	.LFB16
 4315 0094 3C000000 		.4byte	.LFE16-.LFB16
 4316 0098 00000000 		.4byte	.LFB17
 4317 009c 44000000 		.4byte	.LFE17-.LFB17
 4318 00a0 00000000 		.4byte	.LFB18
 4319 00a4 B8000000 		.4byte	.LFE18-.LFB18
 4320 00a8 00000000 		.4byte	.LFB19
 4321 00ac 1C040000 		.4byte	.LFE19-.LFB19
 4322 00b0 00000000 		.4byte	.LFB20
 4323 00b4 90000000 		.4byte	.LFE20-.LFB20
 4324 00b8 00000000 		.4byte	.LFB21
 4325 00bc 70010000 		.4byte	.LFE21-.LFB21
 4326 00c0 00000000 		.4byte	.LFB22
 4327 00c4 7C000000 		.4byte	.LFE22-.LFB22
 4328 00c8 00000000 		.4byte	.LFB23
 4329 00cc 3C000000 		.4byte	.LFE23-.LFB23
 4330 00d0 00000000 		.4byte	.LFB24
 4331 00d4 3C000000 		.4byte	.LFE24-.LFB24
 4332 00d8 00000000 		.4byte	.LFB25
 4333 00dc 38000000 		.4byte	.LFE25-.LFB25
 4334 00e0 00000000 		.4byte	0
 4335 00e4 00000000 		.4byte	0
 4336              		.section	.debug_ranges,"",%progbits
 4337              	.Ldebug_ranges0:
 4338 0000 00000000 		.4byte	.LFB0
 4339 0004 58010000 		.4byte	.LFE0
 4340 0008 00000000 		.4byte	.LFB1
 4341 000c 58010000 		.4byte	.LFE1
 4342 0010 00000000 		.4byte	.LFB2
 4343 0014 30000000 		.4byte	.LFE2
 4344 0018 00000000 		.4byte	.LFB3
 4345 001c 7C010000 		.4byte	.LFE3
 4346 0020 00000000 		.4byte	.LFB4
 4347 0024 3C000000 		.4byte	.LFE4
 4348 0028 00000000 		.4byte	.LFB5
 4349 002c 38000000 		.4byte	.LFE5
 4350 0030 00000000 		.4byte	.LFB6
 4351 0034 AC000000 		.4byte	.LFE6
 4352 0038 00000000 		.4byte	.LFB7
 4353 003c 3C000000 		.4byte	.LFE7
 4354 0040 00000000 		.4byte	.LFB8
 4355 0044 20000000 		.4byte	.LFE8
 4356 0048 00000000 		.4byte	.LFB9
 4357 004c 20000000 		.4byte	.LFE9
 4358 0050 00000000 		.4byte	.LFB10
 4359 0054 4C000000 		.4byte	.LFE10
 4360 0058 00000000 		.4byte	.LFB11
 4361 005c 68000000 		.4byte	.LFE11
 4362 0060 00000000 		.4byte	.LFB12
 4363 0064 7C000000 		.4byte	.LFE12
 4364 0068 00000000 		.4byte	.LFB13
 4365 006c A8000000 		.4byte	.LFE13
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 110


 4366 0070 00000000 		.4byte	.LFB14
 4367 0074 1C000000 		.4byte	.LFE14
 4368 0078 00000000 		.4byte	.LFB15
 4369 007c 1C000000 		.4byte	.LFE15
 4370 0080 00000000 		.4byte	.LFB16
 4371 0084 3C000000 		.4byte	.LFE16
 4372 0088 00000000 		.4byte	.LFB17
 4373 008c 44000000 		.4byte	.LFE17
 4374 0090 00000000 		.4byte	.LFB18
 4375 0094 B8000000 		.4byte	.LFE18
 4376 0098 00000000 		.4byte	.LFB19
 4377 009c 1C040000 		.4byte	.LFE19
 4378 00a0 00000000 		.4byte	.LFB20
 4379 00a4 90000000 		.4byte	.LFE20
 4380 00a8 00000000 		.4byte	.LFB21
 4381 00ac 70010000 		.4byte	.LFE21
 4382 00b0 00000000 		.4byte	.LFB22
 4383 00b4 7C000000 		.4byte	.LFE22
 4384 00b8 00000000 		.4byte	.LFB23
 4385 00bc 3C000000 		.4byte	.LFE23
 4386 00c0 00000000 		.4byte	.LFB24
 4387 00c4 3C000000 		.4byte	.LFE24
 4388 00c8 00000000 		.4byte	.LFB25
 4389 00cc 38000000 		.4byte	.LFE25
 4390 00d0 00000000 		.4byte	0
 4391 00d4 00000000 		.4byte	0
 4392              		.section	.debug_line,"",%progbits
 4393              	.Ldebug_line0:
 4394 0000 C5030000 		.section	.debug_str,"MS",%progbits,1
 4394      02004900 
 4394      00000201 
 4394      FB0E0D00 
 4394      01010101 
 4395              	.LASF10:
 4396 0000 75696E74 		.ascii	"uint16\000"
 4396      313600
 4397              	.LASF56:
 4398 0007 61646347 		.ascii	"adcGain\000"
 4398      61696E00 
 4399              	.LASF71:
 4400 000f 696E7075 		.ascii	"inputRange\000"
 4400      7452616E 
 4400      676500
 4401              	.LASF60:
 4402 001a 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 4402      436F756E 
 4402      7473546F 
 4402      5F566F6C 
 4402      747300
 4403              	.LASF85:
 4404 002d 4144435F 		.ascii	"ADC_stopConversion\000"
 4404      73746F70 
 4404      436F6E76 
 4404      65727369 
 4404      6F6E00
 4405              	.LASF86:
 4406 0040 4144435F 		.ascii	"ADC_started\000"
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 111


 4406      73746172 
 4406      74656400 
 4407              	.LASF80:
 4408 004c 4144435F 		.ascii	"ADC_Read16\000"
 4408      52656164 
 4408      313600
 4409              	.LASF24:
 4410 0057 67636F72 		.ascii	"gcor\000"
 4410      00
 4411              	.LASF90:
 4412 005c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4412      43313120 
 4412      352E342E 
 4412      31203230 
 4412      31363036 
 4413 008f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4413      20726576 
 4413      6973696F 
 4413      6E203233 
 4413      37373135 
 4414 00c2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4414      66756E63 
 4414      74696F6E 
 4414      2D736563 
 4414      74696F6E 
 4415              	.LASF29:
 4416 00ea 4144435F 		.ascii	"ADC_Init\000"
 4416      496E6974 
 4416      00
 4417              	.LASF7:
 4418 00f3 6C6F6E67 		.ascii	"long long unsigned int\000"
 4418      206C6F6E 
 4418      6720756E 
 4418      7369676E 
 4418      65642069 
 4419              	.LASF91:
 4420 010a 47656E65 		.ascii	"Generated_Source\\PSoC5\\ADC.c\000"
 4420      72617465 
 4420      645F536F 
 4420      75726365 
 4420      5C50536F 
 4421              	.LASF87:
 4422 0127 4144435F 		.ascii	"ADC_Config\000"
 4422      436F6E66 
 4422      696700
 4423              	.LASF45:
 4424 0132 4144435F 		.ascii	"ADC_StartConvert\000"
 4424      53746172 
 4424      74436F6E 
 4424      76657274 
 4424      00
 4425              	.LASF73:
 4426 0143 69646561 		.ascii	"idealOddDecGain\000"
 4426      6C4F6464 
 4426      44656347 
 4426      61696E00 
 4427              	.LASF6:
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 112


 4428 0153 6C6F6E67 		.ascii	"long long int\000"
 4428      206C6F6E 
 4428      6720696E 
 4428      7400
 4429              	.LASF0:
 4430 0161 7369676E 		.ascii	"signed char\000"
 4430      65642063 
 4430      68617200 
 4431              	.LASF39:
 4432 016d 73746174 		.ascii	"status\000"
 4432      757300
 4433              	.LASF33:
 4434 0174 4144435F 		.ascii	"ADC_SetBufferGain\000"
 4434      53657442 
 4434      75666665 
 4434      72476169 
 4434      6E00
 4435              	.LASF14:
 4436 0186 696E7433 		.ascii	"int32\000"
 4436      3200
 4437              	.LASF30:
 4438 018c 4144435F 		.ascii	"ADC_Start\000"
 4438      53746172 
 4438      7400
 4439              	.LASF84:
 4440 0196 4144435F 		.ascii	"ADC_convDone\000"
 4440      636F6E76 
 4440      446F6E65 
 4440      00
 4441              	.LASF4:
 4442 01a3 6C6F6E67 		.ascii	"long int\000"
 4442      20696E74 
 4442      00
 4443              	.LASF62:
 4444 01ac 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 4444      436F756E 
 4444      7473546F 
 4444      5F75566F 
 4444      6C747300 
 4445              	.LASF20:
 4446 01c0 72656731 		.ascii	"reg16\000"
 4446      3600
 4447              	.LASF9:
 4448 01c6 75696E74 		.ascii	"uint8\000"
 4448      3800
 4449              	.LASF17:
 4450 01cc 646F7562 		.ascii	"double\000"
 4450      6C6500
 4451              	.LASF52:
 4452 01d3 4144435F 		.ascii	"ADC_GetResult32\000"
 4452      47657452 
 4452      6573756C 
 4452      74333200 
 4453              	.LASF61:
 4454 01e3 566F6C74 		.ascii	"Volts\000"
 4454      7300
 4455              	.LASF11:
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 113


 4456 01e9 75696E74 		.ascii	"uint32\000"
 4456      333200
 4457              	.LASF83:
 4458 01f0 4144435F 		.ascii	"ADC_initVar\000"
 4458      696E6974 
 4458      56617200 
 4459              	.LASF77:
 4460 01fc 4144435F 		.ascii	"ADC_SetDSMRef0Reg\000"
 4460      53657444 
 4460      534D5265 
 4460      66305265 
 4460      6700
 4461              	.LASF78:
 4462 020e 76616C75 		.ascii	"value\000"
 4462      6500
 4463              	.LASF48:
 4464 0214 7265744D 		.ascii	"retMode\000"
 4464      6F646500 
 4465              	.LASF8:
 4466 021c 756E7369 		.ascii	"unsigned int\000"
 4466      676E6564 
 4466      20696E74 
 4466      00
 4467              	.LASF63:
 4468 0229 75566F6C 		.ascii	"uVolts\000"
 4468      747300
 4469              	.LASF5:
 4470 0230 6C6F6E67 		.ascii	"long unsigned int\000"
 4470      20756E73 
 4470      69676E65 
 4470      6420696E 
 4470      7400
 4471              	.LASF26:
 4472 0242 4144435F 		.ascii	"ADC_GCOR_STRUCT\000"
 4472      47434F52 
 4472      5F535452 
 4472      55435400 
 4473              	.LASF3:
 4474 0252 73686F72 		.ascii	"short unsigned int\000"
 4474      7420756E 
 4474      7369676E 
 4474      65642069 
 4474      6E7400
 4475              	.LASF92:
 4476 0265 433A5C55 		.ascii	"C:\\Users\\bk\\Documents\\GitHub\\Open Storm\\notor"
 4476      73657273 
 4476      5C626B5C 
 4476      446F6375 
 4476      6D656E74 
 4477 0292 694F535C 		.ascii	"iOS\\notoriOS\\notoriOS.cydsn\000"
 4477      6E6F746F 
 4477      72694F53 
 4477      5C6E6F74 
 4477      6F72694F 
 4478              	.LASF12:
 4479 02ae 696E7438 		.ascii	"int8\000"
 4479      00
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 114


 4480              	.LASF46:
 4481 02b3 4144435F 		.ascii	"ADC_StopConvert\000"
 4481      53746F70 
 4481      436F6E76 
 4481      65727400 
 4482              	.LASF44:
 4483 02c3 67636F72 		.ascii	"gcorValue\000"
 4483      56616C75 
 4483      6500
 4484              	.LASF59:
 4485 02cd 6D566F6C 		.ascii	"mVolts\000"
 4485      747300
 4486              	.LASF74:
 4487 02d4 666C6173 		.ascii	"flash\000"
 4487      6800
 4488              	.LASF21:
 4489 02da 72656733 		.ascii	"reg32\000"
 4489      3200
 4490              	.LASF70:
 4491 02e0 4144435F 		.ascii	"ADC_GainCompensation\000"
 4491      4761696E 
 4491      436F6D70 
 4491      656E7361 
 4491      74696F6E 
 4492              	.LASF15:
 4493 02f5 666C6F61 		.ascii	"float32\000"
 4493      74333200 
 4494              	.LASF23:
 4495 02fd 73697A65 		.ascii	"sizetype\000"
 4495      74797065 
 4495      00
 4496              	.LASF22:
 4497 0306 6C6F6E67 		.ascii	"long double\000"
 4497      20646F75 
 4497      626C6500 
 4498              	.LASF41:
 4499 0312 4144435F 		.ascii	"ADC_SetGCOR\000"
 4499      53657447 
 4499      434F5200 
 4500              	.LASF47:
 4501 031e 4144435F 		.ascii	"ADC_IsEndConversion\000"
 4501      4973456E 
 4501      64436F6E 
 4501      76657273 
 4501      696F6E00 
 4502              	.LASF82:
 4503 0332 4144435F 		.ascii	"ADC_gcor\000"
 4503      67636F72 
 4503      00
 4504              	.LASF69:
 4505 033b 4144435F 		.ascii	"ADC_InitConfig\000"
 4505      496E6974 
 4505      436F6E66 
 4505      696700
 4506              	.LASF49:
 4507 034a 4144435F 		.ascii	"ADC_GetResult8\000"
 4507      47657452 
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 115


 4507      6573756C 
 4507      743800
 4508              	.LASF37:
 4509 0359 636F6865 		.ascii	"coherency\000"
 4509      72656E63 
 4509      7900
 4510              	.LASF36:
 4511 0363 6761696E 		.ascii	"gain\000"
 4511      00
 4512              	.LASF55:
 4513 0368 4144435F 		.ascii	"ADC_SetGain\000"
 4513      53657447 
 4513      61696E00 
 4514              	.LASF16:
 4515 0374 666C6F61 		.ascii	"float\000"
 4515      7400
 4516              	.LASF57:
 4517 037a 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 4517      436F756E 
 4517      7473546F 
 4517      5F6D566F 
 4517      6C747300 
 4518              	.LASF19:
 4519 038e 72656738 		.ascii	"reg8\000"
 4519      00
 4520              	.LASF72:
 4521 0393 69646561 		.ascii	"idealDecGain\000"
 4521      6C446563 
 4521      4761696E 
 4521      00
 4522              	.LASF75:
 4523 03a0 6E6F726D 		.ascii	"normalised\000"
 4523      616C6973 
 4523      656400
 4524              	.LASF1:
 4525 03ab 756E7369 		.ascii	"unsigned char\000"
 4525      676E6564 
 4525      20636861 
 4525      7200
 4526              	.LASF67:
 4527 03b9 4144435F 		.ascii	"ADC_SelectConfiguration\000"
 4527      53656C65 
 4527      6374436F 
 4527      6E666967 
 4527      75726174 
 4528              	.LASF2:
 4529 03d1 73686F72 		.ascii	"short int\000"
 4529      7420696E 
 4529      7400
 4530              	.LASF32:
 4531 03db 4144435F 		.ascii	"ADC_Stop\000"
 4531      53746F70 
 4531      00
 4532              	.LASF76:
 4533 03e4 67636F72 		.ascii	"gcorTmp\000"
 4533      546D7000 
 4534              	.LASF66:
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 116


 4535 03ec 7265736F 		.ascii	"resolution\000"
 4535      6C757469 
 4535      6F6E00
 4536              	.LASF88:
 4537 03f7 4144435F 		.ascii	"ADC_Offset\000"
 4537      4F666673 
 4537      657400
 4538              	.LASF64:
 4539 0402 636F6566 		.ascii	"coefA\000"
 4539      4100
 4540              	.LASF65:
 4541 0408 636F6566 		.ascii	"coefB\000"
 4541      4200
 4542              	.LASF18:
 4543 040e 63686172 		.ascii	"char\000"
 4543      00
 4544              	.LASF43:
 4545 0413 6756616C 		.ascii	"gValue\000"
 4545      756500
 4546              	.LASF27:
 4547 041a 636F6E66 		.ascii	"config\000"
 4547      696700
 4548              	.LASF25:
 4549 0421 6776616C 		.ascii	"gval\000"
 4549      00
 4550              	.LASF68:
 4551 0426 72657374 		.ascii	"restart\000"
 4551      61727400 
 4552              	.LASF40:
 4553 042e 746D7056 		.ascii	"tmpValue\000"
 4553      616C7565 
 4553      00
 4554              	.LASF54:
 4555 0437 6F666673 		.ascii	"offset\000"
 4555      657400
 4556              	.LASF35:
 4557 043e 4144435F 		.ascii	"ADC_SetCoherency\000"
 4557      53657443 
 4557      6F686572 
 4557      656E6379 
 4557      00
 4558              	.LASF79:
 4559 044f 4144435F 		.ascii	"ADC_Read8\000"
 4559      52656164 
 4559      3800
 4560              	.LASF58:
 4561 0459 61646343 		.ascii	"adcCounts\000"
 4561      6F756E74 
 4561      7300
 4562              	.LASF81:
 4563 0463 4144435F 		.ascii	"ADC_Read32\000"
 4563      52656164 
 4563      333200
 4564              	.LASF28:
 4565 046e 656E6162 		.ascii	"enableInterrupts\000"
 4565      6C65496E 
 4565      74657272 
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccxSrMEb.s 			page 117


 4565      75707473 
 4565      00
 4566              	.LASF31:
 4567 047f 4144435F 		.ascii	"ADC_Enable\000"
 4567      456E6162 
 4567      6C6500
 4568              	.LASF42:
 4569 048a 4144435F 		.ascii	"ADC_ReadGCOR\000"
 4569      52656164 
 4569      47434F52 
 4569      00
 4570              	.LASF38:
 4571 0497 6761696E 		.ascii	"gainAdjust\000"
 4571      41646A75 
 4571      737400
 4572              	.LASF13:
 4573 04a2 696E7431 		.ascii	"int16\000"
 4573      3600
 4574              	.LASF53:
 4575 04a8 4144435F 		.ascii	"ADC_SetOffset\000"
 4575      5365744F 
 4575      66667365 
 4575      7400
 4576              	.LASF89:
 4577 04b6 4144435F 		.ascii	"ADC_CountsPerVolt\000"
 4577      436F756E 
 4577      74735065 
 4577      72566F6C 
 4577      7400
 4578              	.LASF34:
 4579 04c8 746D7052 		.ascii	"tmpReg\000"
 4579      656700
 4580              	.LASF50:
 4581 04cf 72657375 		.ascii	"result\000"
 4581      6C7400
 4582              	.LASF51:
 4583 04d6 4144435F 		.ascii	"ADC_GetResult16\000"
 4583      47657452 
 4583      6573756C 
 4583      74313600 
 4584              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
