ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	debug_string,100,4
  20              		.syntax unified
  21              		.global _printf_float
  22              		.thumb
  23              		.syntax unified
  24              		.comm	alarmMeasure,6,4
  25              		.comm	timeToMeasure,1,1
  26              		.comm	alarmMeasure2,6,4
  27              		.comm	timeToMeasure2,1,1
  28              		.section	.text.Wakeup_ISR,"ax",%progbits
  29              		.align	2
  30              		.global	Wakeup_ISR
  31              		.thumb
  32              		.thumb_func
  33              		.type	Wakeup_ISR, %function
  34              	Wakeup_ISR:
  35              	.LFB64:
  36              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * OPEN-STORM.ORG
   4:main.c        ****  * notoriOS
   5:main.c        ****  * A non-premptive operating system for node.
   6:main.c        ****  *
   7:main.c        ****  * "To all the teachers that told me I'd never amount to nothin"
   8:main.c        ****  *      -Notorious BIG (1994)
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** #include "project.h"
  13:main.c        **** #include "notoriOS.h"
  14:main.c        **** #include "level_sensor.h"
  15:main.c        **** #include "sd_card.h"
  16:main.c        **** #include "voltages.h"
  17:main.c        **** #include "debug.h"
  18:main.c        **** 
  19:main.c        **** 
  20:main.c        **** 
  21:main.c        **** 
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 2


  22:main.c        **** 
  23:main.c        **** 
  24:main.c        **** //global variables
  25:main.c        **** alarm alarmMeasure;
  26:main.c        **** uint8 timeToMeasure;
  27:main.c        **** alarm alarmMeasure2;
  28:main.c        **** uint8 timeToMeasure2;
  29:main.c        **** 
  30:main.c        **** 
  31:main.c        **** // This function must always be called (when the Sleep Timer's interrupt
  32:main.c        **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  33:main.c        **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  34:main.c        **** // of the ILO) after CTW event occurred.
  35:main.c        **** CY_ISR(Wakeup_ISR) {
  37              		.loc 1 35 0
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 0
  40              		@ frame_needed = 1, uses_anonymous_args = 0
  41 0000 80B5     		push	{r7, lr}
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  36:main.c        ****     SleepTimer_GetStatus();
  47              		.loc 1 36 0
  48 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  37:main.c        **** }
  49              		.loc 1 37 0
  50 0008 00BF     		nop
  51 000a 80BD     		pop	{r7, pc}
  52              		.cfi_endproc
  53              	.LFE64:
  54              		.size	Wakeup_ISR, .-Wakeup_ISR
  55              		.section	.text.ReadyOrNot,"ax",%progbits
  56              		.align	2
  57              		.global	ReadyOrNot
  58              		.thumb
  59              		.thumb_func
  60              		.type	ReadyOrNot, %function
  61              	ReadyOrNot:
  62              	.LFB65:
  38:main.c        **** 
  39:main.c        **** 
  40:main.c        **** // ==============================================
  41:main.c        **** // Ready or not, here I come, you can't hide
  42:main.c        **** // Gonna find you and take it slowly
  43:main.c        **** //      - The Fugees (1996)
  44:main.c        **** //
  45:main.c        **** // Initialize and critical hardware or routines 
  46:main.c        **** // ==============================================
  47:main.c        **** void ReadyOrNot()
  48:main.c        **** {
  63              		.loc 1 48 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 8
  66              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 3


  67 0000 90B5     		push	{r4, r7, lr}
  68              		.cfi_def_cfa_offset 12
  69              		.cfi_offset 4, -12
  70              		.cfi_offset 7, -8
  71              		.cfi_offset 14, -4
  72 0002 83B0     		sub	sp, sp, #12
  73              		.cfi_def_cfa_offset 24
  74 0004 00AF     		add	r7, sp, #0
  75              		.cfi_def_cfa_register 7
  49:main.c        ****     
  50:main.c        ****     isr_SleepTimer_StartEx(Wakeup_ISR);// Start Sleep ISR
  76              		.loc 1 50 0
  77 0006 1048     		ldr	r0, .L3
  78 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
  51:main.c        ****     SleepTimer_Start();             // Start SleepTimer Component
  79              		.loc 1 51 0
  80 000c FFF7FEFF 		bl	SleepTimer_Start
  52:main.c        ****     
  53:main.c        ****     RTC_WriteIntervalMask(0b11111111);
  81              		.loc 1 53 0
  82 0010 FF20     		movs	r0, #255
  83 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  54:main.c        ****     RTC_Start();
  84              		.loc 1 54 0
  85 0016 FFF7FEFF 		bl	RTC_Start
  55:main.c        ****     debug_start();
  86              		.loc 1 55 0
  87 001a FFF7FEFF 		bl	debug_start
  56:main.c        ****     
  57:main.c        ****     alarmMeasure = CreateAlarm(2,ALARM_TYPE_SECOND,ALARM_TYPE_CONTINUOUS);
  88              		.loc 1 57 0
  89 001e 0B4C     		ldr	r4, .L3+4
  90 0020 3846     		mov	r0, r7
  91 0022 0723     		movs	r3, #7
  92 0024 0022     		movs	r2, #0
  93 0026 0221     		movs	r1, #2
  94 0028 FFF7FEFF 		bl	CreateAlarm
  95 002c 2246     		mov	r2, r4
  96 002e 3B46     		mov	r3, r7
  97 0030 1968     		ldr	r1, [r3]	@ unaligned
  98 0032 1160     		str	r1, [r2]	@ unaligned
  99 0034 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 100 0036 9380     		strh	r3, [r2, #4]	@ unaligned
  58:main.c        ****     timeToMeasure = 0;
 101              		.loc 1 58 0
 102 0038 054B     		ldr	r3, .L3+8
 103 003a 0022     		movs	r2, #0
 104 003c 1A70     		strb	r2, [r3]
  59:main.c        ****     //alarmMeasure2 = CreateAlarm(10,ALARM_TYPE_SECOND,ALARM_TYPE_CONTINUOUS);
  60:main.c        ****     //timeToMeasure = 0;
  61:main.c        ****     
  62:main.c        ****     
  63:main.c        **** }
 105              		.loc 1 63 0
 106 003e 00BF     		nop
 107 0040 0C37     		adds	r7, r7, #12
 108              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 4


 109 0042 BD46     		mov	sp, r7
 110              		.cfi_def_cfa_register 13
 111              		@ sp needed
 112 0044 90BD     		pop	{r4, r7, pc}
 113              	.L4:
 114 0046 00BF     		.align	2
 115              	.L3:
 116 0048 00000000 		.word	Wakeup_ISR
 117 004c 00000000 		.word	alarmMeasure
 118 0050 00000000 		.word	timeToMeasure
 119              		.cfi_endproc
 120              	.LFE65:
 121              		.size	ReadyOrNot, .-ReadyOrNot
 122              		.section	.rodata
 123              		.align	2
 124              	.LC0:
 125 0000 4C696768 		.ascii	"Light ON\000"
 125      74204F4E 
 125      00
 126 0009 000000   		.align	2
 127              	.LC1:
 128 000c 4C696768 		.ascii	"Light Off\000"
 128      74204F66 
 128      6600
 129              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 130              		.align	2
 131              		.global	WorkWorkWorkWorkWorkWork
 132              		.thumb
 133              		.thumb_func
 134              		.type	WorkWorkWorkWorkWorkWork, %function
 135              	WorkWorkWorkWorkWorkWork:
 136              	.LFB66:
  64:main.c        **** 
  65:main.c        **** // ==============================================
  66:main.c        **** // You see me I be work, work, work, work, work, work 
  67:main.c        **** //      - Rhiana, feat Drake (2016)
  68:main.c        **** //
  69:main.c        **** // Prorcesses core tasks
  70:main.c        **** // ==============================================
  71:main.c        **** int WorkWorkWorkWorkWorkWork()
  72:main.c        **** {
 137              		.loc 1 72 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 1, uses_anonymous_args = 0
 141 0000 80B5     		push	{r7, lr}
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 7, -8
 144              		.cfi_offset 14, -4
 145 0002 00AF     		add	r7, sp, #0
 146              		.cfi_def_cfa_register 7
  73:main.c        ****    
  74:main.c        ****     if(timeToMeasure){
 147              		.loc 1 74 0
 148 0004 0C4B     		ldr	r3, .L8
 149 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 150 0008 002B     		cmp	r3, #0
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 5


 151 000a 11D0     		beq	.L6
  75:main.c        ****        
  76:main.c        **** 
  77:main.c        ****        printNotif("Light ON");
 152              		.loc 1 77 0
 153 000c 0B48     		ldr	r0, .L8+4
 154 000e FFF7FEFF 		bl	printNotif
  78:main.c        ****        
  79:main.c        ****        LED_Write(1u);
 155              		.loc 1 79 0
 156 0012 0120     		movs	r0, #1
 157 0014 FFF7FEFF 		bl	LED_Write
  80:main.c        ****        CyDelay(100u);
 158              		.loc 1 80 0
 159 0018 6420     		movs	r0, #100
 160 001a FFF7FEFF 		bl	CyDelay
  81:main.c        ****        LED_Write(0u);
 161              		.loc 1 81 0
 162 001e 0020     		movs	r0, #0
 163 0020 FFF7FEFF 		bl	LED_Write
  82:main.c        ****        timeToMeasure = 0u;
 164              		.loc 1 82 0
 165 0024 044B     		ldr	r3, .L8
 166 0026 0022     		movs	r2, #0
 167 0028 1A70     		strb	r2, [r3]
  83:main.c        ****        printNotif("Light Off");
 168              		.loc 1 83 0
 169 002a 0548     		ldr	r0, .L8+8
 170 002c FFF7FEFF 		bl	printNotif
 171              	.L6:
  84:main.c        ****        
  85:main.c        ****        
  86:main.c        ****     }
  87:main.c        ****     //if(timeToMeasure2){
  88:main.c        ****         //dosomething
  89:main.c        ****     //}
  90:main.c        ****     
  91:main.c        ****     return 0;   
 172              		.loc 1 91 0
 173 0030 0023     		movs	r3, #0
  92:main.c        **** }
 174              		.loc 1 92 0
 175 0032 1846     		mov	r0, r3
 176 0034 80BD     		pop	{r7, pc}
 177              	.L9:
 178 0036 00BF     		.align	2
 179              	.L8:
 180 0038 00000000 		.word	timeToMeasure
 181 003c 00000000 		.word	.LC0
 182 0040 0C000000 		.word	.LC1
 183              		.cfi_endproc
 184              	.LFE66:
 185              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 186              		.section	.text.LayBack,"ax",%progbits
 187              		.align	2
 188              		.global	LayBack
 189              		.thumb
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 6


 190              		.thumb_func
 191              		.type	LayBack, %function
 192              	LayBack:
 193              	.LFB67:
  93:main.c        **** 
  94:main.c        **** 
  95:main.c        **** // ==============================================
  96:main.c        **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
  97:main.c        **** //      - Snoop Dogg (1993)
  98:main.c        **** //
  99:main.c        **** // Put all hardware to sleep and go into low power mode to conserve Amps
 100:main.c        **** // ==============================================
 101:main.c        **** void LayBack()
 102:main.c        **** {
 194              		.loc 1 102 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 1, uses_anonymous_args = 0
 198 0000 80B5     		push	{r7, lr}
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 7, -8
 201              		.cfi_offset 14, -4
 202 0002 00AF     		add	r7, sp, #0
 203              		.cfi_def_cfa_register 7
 103:main.c        ****     
 104:main.c        ****     debug_sleep();
 204              		.loc 1 104 0
 205 0004 FFF7FEFF 		bl	debug_sleep
 105:main.c        ****     // Prepares system clocks for the Sleep mode
 106:main.c        ****     CyPmSaveClocks();
 206              		.loc 1 106 0
 207 0008 FFF7FEFF 		bl	CyPmSaveClocks
 107:main.c        ****     
 108:main.c        ****     // Switch to the Sleep Mode for the other devices:
 109:main.c        ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 110:main.c        ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 111:main.c        ****      //  - If real-time clock is used, it will also wake the device
 112:main.c        ****     //CyPmHibernate();
 113:main.c        ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW);
 208              		.loc 1 113 0
 209 000c 4FF40061 		mov	r1, #2048
 210 0010 0020     		movs	r0, #0
 211 0012 FFF7FEFF 		bl	CyPmSleep
 114:main.c        ****   
 115:main.c        ****     // Restore clock configuration
 116:main.c        ****     CyPmRestoreClocks();
 212              		.loc 1 116 0
 213 0016 FFF7FEFF 		bl	CyPmRestoreClocks
 117:main.c        ****     debug_wakeup();
 214              		.loc 1 117 0
 215 001a FFF7FEFF 		bl	debug_wakeup
 118:main.c        ****     
 119:main.c        **** }
 216              		.loc 1 119 0
 217 001e 00BF     		nop
 218 0020 80BD     		pop	{r7, pc}
 219              		.cfi_endproc
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 7


 220              	.LFE67:
 221              		.size	LayBack, .-LayBack
 222 0022 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 223              		.align	2
 224              		.global	AyoItsTime
 225              		.thumb
 226              		.thumb_func
 227              		.type	AyoItsTime, %function
 228              	AyoItsTime:
 229              	.LFB68:
 120:main.c        **** 
 121:main.c        **** 
 122:main.c        **** // ==============================================
 123:main.c        **** // I never sleep, 'cause sleep is the cousin of death
 124:main.c        **** //      - NAS (1994)
 125:main.c        **** //
 126:main.c        **** // This is the scheduler. It's called from various interrupts and timers,
 127:main.c        **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 128:main.c        **** // It will add tasks to the work queue,
 129:main.c        **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 130:main.c        **** // ==============================================
 131:main.c        **** void AyoItsTime(uint8 alarmType)
 132:main.c        **** {
 230              		.loc 1 132 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 8
 233              		@ frame_needed = 1, uses_anonymous_args = 0
 234 0000 80B5     		push	{r7, lr}
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 7, -8
 237              		.cfi_offset 14, -4
 238 0002 82B0     		sub	sp, sp, #8
 239              		.cfi_def_cfa_offset 16
 240 0004 00AF     		add	r7, sp, #0
 241              		.cfi_def_cfa_register 7
 242 0006 0346     		mov	r3, r0
 243 0008 FB71     		strb	r3, [r7, #7]
 133:main.c        **** 
 134:main.c        ****     if(AlarmReady(&alarmMeasure,alarmType))
 244              		.loc 1 134 0
 245 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 246 000c 1946     		mov	r1, r3
 247 000e 0C48     		ldr	r0, .L15
 248 0010 FFF7FEFF 		bl	AlarmReady
 249 0014 0346     		mov	r3, r0
 250 0016 002B     		cmp	r3, #0
 251 0018 02D0     		beq	.L12
 135:main.c        ****     {
 136:main.c        ****          //create new task and pass off to workworkworkworkwork()
 137:main.c        ****         //pass off to work work
 138:main.c        ****         timeToMeasure = 1u;
 252              		.loc 1 138 0
 253 001a 0A4B     		ldr	r3, .L15+4
 254 001c 0122     		movs	r2, #1
 255 001e 1A70     		strb	r2, [r3]
 256              	.L12:
 139:main.c        ****     }
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 8


 140:main.c        ****     if(AlarmReady(&alarmMeasure2,alarmType))
 257              		.loc 1 140 0
 258 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 259 0022 1946     		mov	r1, r3
 260 0024 0848     		ldr	r0, .L15+8
 261 0026 FFF7FEFF 		bl	AlarmReady
 262 002a 0346     		mov	r3, r0
 263 002c 002B     		cmp	r3, #0
 264 002e 02D0     		beq	.L14
 141:main.c        ****     {
 142:main.c        ****          //create new task and pass off to workworkworkworkwork()
 143:main.c        ****         //pass off to work work
 144:main.c        ****         timeToMeasure2 = 1u;
 265              		.loc 1 144 0
 266 0030 064B     		ldr	r3, .L15+12
 267 0032 0122     		movs	r2, #1
 268 0034 1A70     		strb	r2, [r3]
 269              	.L14:
 145:main.c        ****     }
 146:main.c        ****     
 147:main.c        **** }
 270              		.loc 1 147 0
 271 0036 00BF     		nop
 272 0038 0837     		adds	r7, r7, #8
 273              		.cfi_def_cfa_offset 8
 274 003a BD46     		mov	sp, r7
 275              		.cfi_def_cfa_register 13
 276              		@ sp needed
 277 003c 80BD     		pop	{r7, pc}
 278              	.L16:
 279 003e 00BF     		.align	2
 280              	.L15:
 281 0040 00000000 		.word	alarmMeasure
 282 0044 00000000 		.word	timeToMeasure
 283 0048 00000000 		.word	alarmMeasure2
 284 004c 00000000 		.word	timeToMeasure2
 285              		.cfi_endproc
 286              	.LFE68:
 287              		.size	AyoItsTime, .-AyoItsTime
 288              		.section	.text.AlarmReady,"ax",%progbits
 289              		.align	2
 290              		.global	AlarmReady
 291              		.thumb
 292              		.thumb_func
 293              		.type	AlarmReady, %function
 294              	AlarmReady:
 295              	.LFB69:
 148:main.c        ****         
 149:main.c        **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 150:main.c        **** {
 296              		.loc 1 150 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 8
 299              		@ frame_needed = 1, uses_anonymous_args = 0
 300 0000 80B5     		push	{r7, lr}
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 7, -8
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 9


 303              		.cfi_offset 14, -4
 304 0002 82B0     		sub	sp, sp, #8
 305              		.cfi_def_cfa_offset 16
 306 0004 00AF     		add	r7, sp, #0
 307              		.cfi_def_cfa_register 7
 308 0006 7860     		str	r0, [r7, #4]
 309 0008 0B46     		mov	r3, r1
 310 000a FB70     		strb	r3, [r7, #3]
 151:main.c        ****     alarmToBeUpdated->currentCountDownValue--;
 311              		.loc 1 151 0
 312 000c 7B68     		ldr	r3, [r7, #4]
 313 000e 5B88     		ldrh	r3, [r3, #2]	@ movhi
 314 0010 9BB2     		uxth	r3, r3
 315 0012 013B     		subs	r3, r3, #1
 316 0014 9AB2     		uxth	r2, r3
 317 0016 7B68     		ldr	r3, [r7, #4]
 318 0018 5A80     		strh	r2, [r3, #2]	@ movhi
 152:main.c        ****     if(alarmToBeUpdated->currentCountDownValue == 0){
 319              		.loc 1 152 0
 320 001a 7B68     		ldr	r3, [r7, #4]
 321 001c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 322 001e 9BB2     		uxth	r3, r3
 323 0020 002B     		cmp	r3, #0
 324 0022 04D1     		bne	.L18
 153:main.c        ****         ResetAlarm(alarmToBeUpdated);
 325              		.loc 1 153 0
 326 0024 7868     		ldr	r0, [r7, #4]
 327 0026 FFF7FEFF 		bl	ResetAlarm
 154:main.c        ****         return 1u;
 328              		.loc 1 154 0
 329 002a 0123     		movs	r3, #1
 330 002c 09E0     		b	.L19
 331              	.L18:
 155:main.c        ****     } 
 156:main.c        ****     else if(alarmToBeUpdated->countDownResetCondition == alarmType){
 332              		.loc 1 156 0
 333 002e 7B68     		ldr	r3, [r7, #4]
 334 0030 5B79     		ldrb	r3, [r3, #5]
 335 0032 DBB2     		uxtb	r3, r3
 336 0034 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 337 0036 9A42     		cmp	r2, r3
 338 0038 02D1     		bne	.L20
 157:main.c        ****         ResetAlarm(alarmToBeUpdated);
 339              		.loc 1 157 0
 340 003a 7868     		ldr	r0, [r7, #4]
 341 003c FFF7FEFF 		bl	ResetAlarm
 342              	.L20:
 158:main.c        ****     }
 159:main.c        ****     
 160:main.c        ****     return 0u;
 343              		.loc 1 160 0
 344 0040 0023     		movs	r3, #0
 345              	.L19:
 161:main.c        **** }
 346              		.loc 1 161 0
 347 0042 1846     		mov	r0, r3
 348 0044 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 10


 349              		.cfi_def_cfa_offset 8
 350 0046 BD46     		mov	sp, r7
 351              		.cfi_def_cfa_register 13
 352              		@ sp needed
 353 0048 80BD     		pop	{r7, pc}
 354              		.cfi_endproc
 355              	.LFE69:
 356              		.size	AlarmReady, .-AlarmReady
 357 004a 00BF     		.section	.text.ResetAlarm,"ax",%progbits
 358              		.align	2
 359              		.global	ResetAlarm
 360              		.thumb
 361              		.thumb_func
 362              		.type	ResetAlarm, %function
 363              	ResetAlarm:
 364              	.LFB70:
 162:main.c        **** 
 163:main.c        **** void ResetAlarm(alarm * alarmToBeReset)
 164:main.c        **** {
 365              		.loc 1 164 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 8
 368              		@ frame_needed = 1, uses_anonymous_args = 0
 369              		@ link register save eliminated.
 370 0000 80B4     		push	{r7}
 371              		.cfi_def_cfa_offset 4
 372              		.cfi_offset 7, -4
 373 0002 83B0     		sub	sp, sp, #12
 374              		.cfi_def_cfa_offset 16
 375 0004 00AF     		add	r7, sp, #0
 376              		.cfi_def_cfa_register 7
 377 0006 7860     		str	r0, [r7, #4]
 165:main.c        ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 378              		.loc 1 165 0
 379 0008 7B68     		ldr	r3, [r7, #4]
 380 000a 1B88     		ldrh	r3, [r3]	@ movhi
 381 000c 9AB2     		uxth	r2, r3
 382 000e 7B68     		ldr	r3, [r7, #4]
 383 0010 5A80     		strh	r2, [r3, #2]	@ movhi
 166:main.c        **** }
 384              		.loc 1 166 0
 385 0012 00BF     		nop
 386 0014 0C37     		adds	r7, r7, #12
 387              		.cfi_def_cfa_offset 4
 388 0016 BD46     		mov	sp, r7
 389              		.cfi_def_cfa_register 13
 390              		@ sp needed
 391 0018 80BC     		pop	{r7}
 392              		.cfi_restore 7
 393              		.cfi_def_cfa_offset 0
 394 001a 7047     		bx	lr
 395              		.cfi_endproc
 396              	.LFE70:
 397              		.size	ResetAlarm, .-ResetAlarm
 398              		.section	.text.CreateAlarm,"ax",%progbits
 399              		.align	2
 400              		.global	CreateAlarm
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 11


 401              		.thumb
 402              		.thumb_func
 403              		.type	CreateAlarm, %function
 404              	CreateAlarm:
 405              	.LFB71:
 167:main.c        **** 
 168:main.c        **** // ==============================================
 169:main.c        **** // Creates a new alarm, which will be handeled by another cutions
 170:main.c        **** // ==============================================
 171:main.c        **** 
 172:main.c        **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 173:main.c        **** {
 406              		.loc 1 173 0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 16
 409              		@ frame_needed = 1, uses_anonymous_args = 0
 410              		@ link register save eliminated.
 411 0000 80B4     		push	{r7}
 412              		.cfi_def_cfa_offset 4
 413              		.cfi_offset 7, -4
 414 0002 85B0     		sub	sp, sp, #20
 415              		.cfi_def_cfa_offset 24
 416 0004 00AF     		add	r7, sp, #0
 417              		.cfi_def_cfa_register 7
 418 0006 7860     		str	r0, [r7, #4]
 419 0008 0846     		mov	r0, r1
 420 000a 1146     		mov	r1, r2
 421 000c 1A46     		mov	r2, r3
 422 000e 0346     		mov	r3, r0	@ movhi
 423 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 424 0012 0B46     		mov	r3, r1
 425 0014 7B70     		strb	r3, [r7, #1]
 426 0016 1346     		mov	r3, r2
 427 0018 3B70     		strb	r3, [r7]
 174:main.c        ****     alarm newAlarm;
 175:main.c        ****     
 176:main.c        ****     newAlarm.countDownValue = countDownValue;
 428              		.loc 1 176 0
 429 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 430 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 177:main.c        ****     newAlarm.countDownType = countDownType;
 431              		.loc 1 177 0
 432 001e 7B78     		ldrb	r3, [r7, #1]
 433 0020 3B73     		strb	r3, [r7, #12]
 178:main.c        ****     newAlarm.countDownResetCondition = countDownResetCondition;
 434              		.loc 1 178 0
 435 0022 3B78     		ldrb	r3, [r7]
 436 0024 7B73     		strb	r3, [r7, #13]
 179:main.c        ****     
 180:main.c        ****     //if you want a reccuring alarm (e.g. resets freshly each hour), then add
 181:main.c        ****     //account for already exprired time using the RTC. Otherwise, set to the countDownValue
 182:main.c        ****     newAlarm.currentCountDownValue = countDownValue;
 437              		.loc 1 182 0
 438 0026 7B88     		ldrh	r3, [r7, #2]	@ movhi
 439 0028 7B81     		strh	r3, [r7, #10]	@ movhi
 183:main.c        ****     
 184:main.c        ****     return newAlarm;
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 12


 440              		.loc 1 184 0
 441 002a 7B68     		ldr	r3, [r7, #4]
 442 002c 1A46     		mov	r2, r3
 443 002e 07F10803 		add	r3, r7, #8
 444 0032 1868     		ldr	r0, [r3]	@ unaligned
 445 0034 1060     		str	r0, [r2]	@ unaligned
 446 0036 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 447 0038 9380     		strh	r3, [r2, #4]	@ unaligned
 185:main.c        ****     
 186:main.c        **** }
 448              		.loc 1 186 0
 449 003a 7868     		ldr	r0, [r7, #4]
 450 003c 1437     		adds	r7, r7, #20
 451              		.cfi_def_cfa_offset 4
 452 003e BD46     		mov	sp, r7
 453              		.cfi_def_cfa_register 13
 454              		@ sp needed
 455 0040 80BC     		pop	{r7}
 456              		.cfi_restore 7
 457              		.cfi_def_cfa_offset 0
 458 0042 7047     		bx	lr
 459              		.cfi_endproc
 460              	.LFE71:
 461              		.size	CreateAlarm, .-CreateAlarm
 462              		.section	.text.test_components,"ax",%progbits
 463              		.align	2
 464              		.global	test_components
 465              		.thumb
 466              		.thumb_func
 467              		.type	test_components, %function
 468              	test_components:
 469              	.LFB72:
 187:main.c        **** 
 188:main.c        **** 
 189:main.c        **** void test_components(){
 470              		.loc 1 189 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 1168
 473              		@ frame_needed = 1, uses_anonymous_args = 0
 474 0000 90B5     		push	{r4, r7, lr}
 475              		.cfi_def_cfa_offset 12
 476              		.cfi_offset 4, -12
 477              		.cfi_offset 7, -8
 478              		.cfi_offset 14, -4
 479 0002 ADF20C6D 		subw	sp, sp, #1548
 480              		.cfi_def_cfa_offset 1560
 481 0006 5EAF     		add	r7, sp, #376
 482              		.cfi_def_cfa 7, 1184
 190:main.c        **** 
 191:main.c        ****     test_t t_level_sensor = level_sensor_test();//test level sensor  
 483              		.loc 1 191 0
 484 0008 07F54273 		add	r3, r7, #776
 485 000c 1846     		mov	r0, r3
 486 000e FFF7FEFF 		bl	level_sensor_test
 192:main.c        ****     printTestStatus(t_level_sensor);
 487              		.loc 1 192 0
 488 0012 07F54274 		add	r4, r7, #776
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 13


 489 0016 6846     		mov	r0, sp
 490 0018 04F11003 		add	r3, r4, #16
 491 001c 40F27112 		movw	r2, #369
 492 0020 1946     		mov	r1, r3
 493 0022 FFF7FEFF 		bl	memcpy
 494 0026 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 495 002a FFF7FEFF 		bl	printTestStatus
 193:main.c        ****     test_t t_sd_card = SD_card_test();
 496              		.loc 1 193 0
 497 002e 07F5C273 		add	r3, r7, #388
 498 0032 1846     		mov	r0, r3
 499 0034 FFF7FEFF 		bl	SD_card_test
 194:main.c        ****     printTestStatus(t_sd_card);
 500              		.loc 1 194 0
 501 0038 07F5C274 		add	r4, r7, #388
 502 003c 6846     		mov	r0, sp
 503 003e 04F11003 		add	r3, r4, #16
 504 0042 40F27112 		movw	r2, #369
 505 0046 1946     		mov	r1, r3
 506 0048 FFF7FEFF 		bl	memcpy
 507 004c 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 508 0050 FFF7FEFF 		bl	printTestStatus
 195:main.c        ****     test_t t_voltages = voltages_test();
 509              		.loc 1 195 0
 510 0054 3B46     		mov	r3, r7
 511 0056 1846     		mov	r0, r3
 512 0058 FFF7FEFF 		bl	voltages_test
 196:main.c        ****     printTestStatus(t_voltages);
 513              		.loc 1 196 0
 514 005c 3C46     		mov	r4, r7
 515 005e 6846     		mov	r0, sp
 516 0060 04F11003 		add	r3, r4, #16
 517 0064 40F27112 		movw	r2, #369
 518 0068 1946     		mov	r1, r3
 519 006a FFF7FEFF 		bl	memcpy
 520 006e 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 521 0072 FFF7FEFF 		bl	printTestStatus
 197:main.c        ****   
 198:main.c        ****     int c = 0;
 522              		.loc 1 198 0
 523 0076 0023     		movs	r3, #0
 524 0078 C7F88C34 		str	r3, [r7, #1164]
 199:main.c        ****     c++;
 525              		.loc 1 199 0
 526 007c D7F88C34 		ldr	r3, [r7, #1164]
 527 0080 0133     		adds	r3, r3, #1
 528 0082 C7F88C34 		str	r3, [r7, #1164]
 200:main.c        ****     //test modem
 201:main.c        ****     //test SD card
 202:main.c        ****     //analog: test battery voltage, solar voltage, and solar current
 203:main.c        ****       
 204:main.c        ****   
 205:main.c        **** }
 529              		.loc 1 205 0
 530 0086 00BF     		nop
 531 0088 07F29447 		addw	r7, r7, #1172
 532              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 14


 533 008c BD46     		mov	sp, r7
 534              		.cfi_def_cfa_register 13
 535              		@ sp needed
 536 008e 90BD     		pop	{r4, r7, pc}
 537              		.cfi_endproc
 538              	.LFE72:
 539              		.size	test_components, .-test_components
 540              		.section	.text.main,"ax",%progbits
 541              		.align	2
 542              		.global	main
 543              		.thumb
 544              		.thumb_func
 545              		.type	main, %function
 546              	main:
 547              	.LFB73:
 206:main.c        **** 
 207:main.c        **** int main(void)
 208:main.c        **** {
 548              		.loc 1 208 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 1, uses_anonymous_args = 0
 552 0000 80B5     		push	{r7, lr}
 553              		.cfi_def_cfa_offset 8
 554              		.cfi_offset 7, -8
 555              		.cfi_offset 14, -4
 556 0002 00AF     		add	r7, sp, #0
 557              		.cfi_def_cfa_register 7
 209:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 558              		.loc 1 209 0
 559              		.syntax unified
 560              	@ 209 "main.c" 1
 561 0004 62B6     		CPSIE   i
 562              	@ 0 "" 2
 210:main.c        **** 
 211:main.c        ****     ReadyOrNot();
 563              		.loc 1 211 0
 564              		.thumb
 565              		.syntax unified
 566 0006 FFF7FEFF 		bl	ReadyOrNot
 212:main.c        ****     
 213:main.c        ****     test_components();
 567              		.loc 1 213 0
 568 000a FFF7FEFF 		bl	test_components
 569              	.L27:
 214:main.c        ****    
 215:main.c        ****     for(;;)
 216:main.c        ****     {
 217:main.c        ****        if( ! WorkWorkWorkWorkWorkWork() )
 570              		.loc 1 217 0
 571 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 572 0012 0346     		mov	r3, r0
 573 0014 002B     		cmp	r3, #0
 574 0016 FAD1     		bne	.L27
 218:main.c        ****        {
 219:main.c        ****             LayBack();
 575              		.loc 1 219 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 15


 576 0018 FFF7FEFF 		bl	LayBack
 220:main.c        ****        }
 221:main.c        ****     }
 577              		.loc 1 221 0
 578 001c F7E7     		b	.L27
 579              		.cfi_endproc
 580              	.LFE73:
 581              		.size	main, .-main
 582 001e 00BF     		.text
 583              	.Letext0:
 584              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 585              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 586              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 587              		.file 5 "notoriOS.h"
 588              		.file 6 "testing.h"
 589              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 590              		.file 8 "debug.h"
 591              		.section	.debug_info,"",%progbits
 592              	.Ldebug_info0:
 593 0000 53030000 		.4byte	0x353
 594 0004 0400     		.2byte	0x4
 595 0006 00000000 		.4byte	.Ldebug_abbrev0
 596 000a 04       		.byte	0x4
 597 000b 01       		.uleb128 0x1
 598 000c 00000000 		.4byte	.LASF48
 599 0010 0C       		.byte	0xc
 600 0011 9D020000 		.4byte	.LASF49
 601 0015 12020000 		.4byte	.LASF50
 602 0019 00000000 		.4byte	.Ldebug_ranges0+0
 603 001d 00000000 		.4byte	0
 604 0021 00000000 		.4byte	.Ldebug_line0
 605 0025 02       		.uleb128 0x2
 606 0026 01       		.byte	0x1
 607 0027 06       		.byte	0x6
 608 0028 23030000 		.4byte	.LASF0
 609 002c 02       		.uleb128 0x2
 610 002d 01       		.byte	0x1
 611 002e 08       		.byte	0x8
 612 002f 3D010000 		.4byte	.LASF1
 613 0033 02       		.uleb128 0x2
 614 0034 02       		.byte	0x2
 615 0035 05       		.byte	0x5
 616 0036 D1020000 		.4byte	.LASF2
 617 003a 02       		.uleb128 0x2
 618 003b 02       		.byte	0x2
 619 003c 07       		.byte	0x7
 620 003d 79010000 		.4byte	.LASF3
 621 0041 03       		.uleb128 0x3
 622 0042 B4000000 		.4byte	.LASF9
 623 0046 02       		.byte	0x2
 624 0047 3F       		.byte	0x3f
 625 0048 4C000000 		.4byte	0x4c
 626 004c 02       		.uleb128 0x2
 627 004d 04       		.byte	0x4
 628 004e 05       		.byte	0x5
 629 004f F4020000 		.4byte	.LASF4
 630 0053 02       		.uleb128 0x2
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 16


 631 0054 04       		.byte	0x4
 632 0055 07       		.byte	0x7
 633 0056 67010000 		.4byte	.LASF5
 634 005a 02       		.uleb128 0x2
 635 005b 08       		.byte	0x8
 636 005c 05       		.byte	0x5
 637 005d 86020000 		.4byte	.LASF6
 638 0061 02       		.uleb128 0x2
 639 0062 08       		.byte	0x8
 640 0063 07       		.byte	0x7
 641 0064 E6010000 		.4byte	.LASF7
 642 0068 04       		.uleb128 0x4
 643 0069 04       		.byte	0x4
 644 006a 05       		.byte	0x5
 645 006b 696E7400 		.ascii	"int\000"
 646 006f 02       		.uleb128 0x2
 647 0070 04       		.byte	0x4
 648 0071 07       		.byte	0x7
 649 0072 CE010000 		.4byte	.LASF8
 650 0076 03       		.uleb128 0x3
 651 0077 BF020000 		.4byte	.LASF10
 652 007b 03       		.byte	0x3
 653 007c 2C       		.byte	0x2c
 654 007d 41000000 		.4byte	0x41
 655 0081 05       		.uleb128 0x5
 656 0082 E9000000 		.4byte	.LASF11
 657 0086 04       		.byte	0x4
 658 0087 E401     		.2byte	0x1e4
 659 0089 2C000000 		.4byte	0x2c
 660 008d 05       		.uleb128 0x5
 661 008e B9010000 		.4byte	.LASF12
 662 0092 04       		.byte	0x4
 663 0093 E501     		.2byte	0x1e5
 664 0095 3A000000 		.4byte	0x3a
 665 0099 02       		.uleb128 0x2
 666 009a 04       		.byte	0x4
 667 009b 04       		.byte	0x4
 668 009c 1C010000 		.4byte	.LASF13
 669 00a0 02       		.uleb128 0x2
 670 00a1 08       		.byte	0x8
 671 00a2 04       		.byte	0x4
 672 00a3 AD010000 		.4byte	.LASF14
 673 00a7 02       		.uleb128 0x2
 674 00a8 01       		.byte	0x1
 675 00a9 08       		.byte	0x8
 676 00aa A4020000 		.4byte	.LASF15
 677 00ae 02       		.uleb128 0x2
 678 00af 08       		.byte	0x8
 679 00b0 04       		.byte	0x4
 680 00b1 08030000 		.4byte	.LASF16
 681 00b5 02       		.uleb128 0x2
 682 00b6 04       		.byte	0x4
 683 00b7 07       		.byte	0x7
 684 00b8 94020000 		.4byte	.LASF17
 685 00bc 06       		.uleb128 0x6
 686 00bd 06       		.byte	0x6
 687 00be 05       		.byte	0x5
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 17


 688 00bf 19       		.byte	0x19
 689 00c0 F5000000 		.4byte	0xf5
 690 00c4 07       		.uleb128 0x7
 691 00c5 4B010000 		.4byte	.LASF18
 692 00c9 05       		.byte	0x5
 693 00ca 1B       		.byte	0x1b
 694 00cb 8D000000 		.4byte	0x8d
 695 00cf 00       		.byte	0
 696 00d0 07       		.uleb128 0x7
 697 00d1 A9020000 		.4byte	.LASF19
 698 00d5 05       		.byte	0x5
 699 00d6 1C       		.byte	0x1c
 700 00d7 8D000000 		.4byte	0x8d
 701 00db 02       		.byte	0x2
 702 00dc 07       		.uleb128 0x7
 703 00dd 9F010000 		.4byte	.LASF20
 704 00e1 05       		.byte	0x5
 705 00e2 1D       		.byte	0x1d
 706 00e3 81000000 		.4byte	0x81
 707 00e7 04       		.byte	0x4
 708 00e8 07       		.uleb128 0x7
 709 00e9 D1000000 		.4byte	.LASF21
 710 00ed 05       		.byte	0x5
 711 00ee 1E       		.byte	0x1e
 712 00ef 81000000 		.4byte	0x81
 713 00f3 05       		.byte	0x5
 714 00f4 00       		.byte	0
 715 00f5 03       		.uleb128 0x3
 716 00f6 8C010000 		.4byte	.LASF22
 717 00fa 05       		.byte	0x5
 718 00fb 20       		.byte	0x20
 719 00fc 00010000 		.4byte	0x100
 720 0100 08       		.uleb128 0x8
 721 0101 BC000000 		.4byte	0xbc
 722 0105 09       		.uleb128 0x9
 723 0106 8101     		.2byte	0x181
 724 0108 06       		.byte	0x6
 725 0109 0A       		.byte	0xa
 726 010a 33010000 		.4byte	0x133
 727 010e 07       		.uleb128 0x7
 728 010f EA020000 		.4byte	.LASF23
 729 0113 06       		.byte	0x6
 730 0114 0B       		.byte	0xb
 731 0115 33010000 		.4byte	0x133
 732 0119 00       		.byte	0
 733 011a 07       		.uleb128 0x7
 734 011b EF000000 		.4byte	.LASF24
 735 011f 06       		.byte	0x6
 736 0120 0C       		.byte	0xc
 737 0121 81000000 		.4byte	0x81
 738 0125 80       		.byte	0x80
 739 0126 07       		.uleb128 0x7
 740 0127 FD010000 		.4byte	.LASF25
 741 012b 06       		.byte	0x6
 742 012c 0D       		.byte	0xd
 743 012d 43010000 		.4byte	0x143
 744 0131 81       		.byte	0x81
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 18


 745 0132 00       		.byte	0
 746 0133 0A       		.uleb128 0xa
 747 0134 A7000000 		.4byte	0xa7
 748 0138 43010000 		.4byte	0x143
 749 013c 0B       		.uleb128 0xb
 750 013d B5000000 		.4byte	0xb5
 751 0141 7F       		.byte	0x7f
 752 0142 00       		.byte	0
 753 0143 0A       		.uleb128 0xa
 754 0144 A7000000 		.4byte	0xa7
 755 0148 53010000 		.4byte	0x153
 756 014c 0B       		.uleb128 0xb
 757 014d B5000000 		.4byte	0xb5
 758 0151 FF       		.byte	0xff
 759 0152 00       		.byte	0
 760 0153 03       		.uleb128 0x3
 761 0154 BE000000 		.4byte	.LASF26
 762 0158 06       		.byte	0x6
 763 0159 0E       		.byte	0xe
 764 015a 05010000 		.4byte	0x105
 765 015e 0C       		.uleb128 0xc
 766 015f 5B020000 		.4byte	.LASF27
 767 0163 01       		.byte	0x1
 768 0164 23       		.byte	0x23
 769 0165 00000000 		.4byte	.LFB64
 770 0169 0C000000 		.4byte	.LFE64-.LFB64
 771 016d 01       		.uleb128 0x1
 772 016e 9C       		.byte	0x9c
 773 016f 0D       		.uleb128 0xd
 774 0170 FD020000 		.4byte	.LASF29
 775 0174 01       		.byte	0x1
 776 0175 2F       		.byte	0x2f
 777 0176 00000000 		.4byte	.LFB65
 778 017a 54000000 		.4byte	.LFE65-.LFB65
 779 017e 01       		.uleb128 0x1
 780 017f 9C       		.byte	0x9c
 781 0180 0E       		.uleb128 0xe
 782 0181 8E000000 		.4byte	.LASF28
 783 0185 01       		.byte	0x1
 784 0186 47       		.byte	0x47
 785 0187 68000000 		.4byte	0x68
 786 018b 00000000 		.4byte	.LFB66
 787 018f 44000000 		.4byte	.LFE66-.LFB66
 788 0193 01       		.uleb128 0x1
 789 0194 9C       		.byte	0x9c
 790 0195 0D       		.uleb128 0xd
 791 0196 6F020000 		.4byte	.LASF30
 792 019a 01       		.byte	0x1
 793 019b 65       		.byte	0x65
 794 019c 00000000 		.4byte	.LFB67
 795 01a0 22000000 		.4byte	.LFE67-.LFB67
 796 01a4 01       		.uleb128 0x1
 797 01a5 9C       		.byte	0x9c
 798 01a6 0F       		.uleb128 0xf
 799 01a7 2F030000 		.4byte	.LASF33
 800 01ab 01       		.byte	0x1
 801 01ac 83       		.byte	0x83
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 19


 802 01ad 00000000 		.4byte	.LFB68
 803 01b1 50000000 		.4byte	.LFE68-.LFB68
 804 01b5 01       		.uleb128 0x1
 805 01b6 9C       		.byte	0x9c
 806 01b7 CA010000 		.4byte	0x1ca
 807 01bb 10       		.uleb128 0x10
 808 01bc C7020000 		.4byte	.LASF31
 809 01c0 01       		.byte	0x1
 810 01c1 83       		.byte	0x83
 811 01c2 81000000 		.4byte	0x81
 812 01c6 02       		.uleb128 0x2
 813 01c7 91       		.byte	0x91
 814 01c8 77       		.sleb128 -9
 815 01c9 00       		.byte	0
 816 01ca 11       		.uleb128 0x11
 817 01cb 07010000 		.4byte	.LASF36
 818 01cf 01       		.byte	0x1
 819 01d0 95       		.byte	0x95
 820 01d1 81000000 		.4byte	0x81
 821 01d5 00000000 		.4byte	.LFB69
 822 01d9 4A000000 		.4byte	.LFE69-.LFB69
 823 01dd 01       		.uleb128 0x1
 824 01de 9C       		.byte	0x9c
 825 01df 00020000 		.4byte	0x200
 826 01e3 10       		.uleb128 0x10
 827 01e4 F6000000 		.4byte	.LASF32
 828 01e8 01       		.byte	0x1
 829 01e9 95       		.byte	0x95
 830 01ea 00020000 		.4byte	0x200
 831 01ee 02       		.uleb128 0x2
 832 01ef 91       		.byte	0x91
 833 01f0 74       		.sleb128 -12
 834 01f1 10       		.uleb128 0x10
 835 01f2 C7020000 		.4byte	.LASF31
 836 01f6 01       		.byte	0x1
 837 01f7 95       		.byte	0x95
 838 01f8 81000000 		.4byte	0x81
 839 01fc 02       		.uleb128 0x2
 840 01fd 91       		.byte	0x91
 841 01fe 73       		.sleb128 -13
 842 01ff 00       		.byte	0
 843 0200 12       		.uleb128 0x12
 844 0201 04       		.byte	0x4
 845 0202 F5000000 		.4byte	0xf5
 846 0206 13       		.uleb128 0x13
 847 0207 32010000 		.4byte	.LASF34
 848 020b 01       		.byte	0x1
 849 020c A3       		.byte	0xa3
 850 020d 00000000 		.4byte	.LFB70
 851 0211 1C000000 		.4byte	.LFE70-.LFB70
 852 0215 01       		.uleb128 0x1
 853 0216 9C       		.byte	0x9c
 854 0217 2A020000 		.4byte	0x22a
 855 021b 10       		.uleb128 0x10
 856 021c DB020000 		.4byte	.LASF35
 857 0220 01       		.byte	0x1
 858 0221 A3       		.byte	0xa3
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 20


 859 0222 00020000 		.4byte	0x200
 860 0226 02       		.uleb128 0x2
 861 0227 91       		.byte	0x91
 862 0228 74       		.sleb128 -12
 863 0229 00       		.byte	0
 864 022a 14       		.uleb128 0x14
 865 022b C5000000 		.4byte	.LASF37
 866 022f 01       		.byte	0x1
 867 0230 AC       		.byte	0xac
 868 0231 F5000000 		.4byte	0xf5
 869 0235 00000000 		.4byte	.LFB71
 870 0239 44000000 		.4byte	.LFE71-.LFB71
 871 023d 01       		.uleb128 0x1
 872 023e 9C       		.byte	0x9c
 873 023f 7C020000 		.4byte	0x27c
 874 0243 10       		.uleb128 0x10
 875 0244 4B010000 		.4byte	.LASF18
 876 0248 01       		.byte	0x1
 877 0249 AC       		.byte	0xac
 878 024a 8D000000 		.4byte	0x8d
 879 024e 02       		.uleb128 0x2
 880 024f 91       		.byte	0x91
 881 0250 6A       		.sleb128 -22
 882 0251 10       		.uleb128 0x10
 883 0252 9F010000 		.4byte	.LASF20
 884 0256 01       		.byte	0x1
 885 0257 AC       		.byte	0xac
 886 0258 81000000 		.4byte	0x81
 887 025c 02       		.uleb128 0x2
 888 025d 91       		.byte	0x91
 889 025e 69       		.sleb128 -23
 890 025f 10       		.uleb128 0x10
 891 0260 D1000000 		.4byte	.LASF21
 892 0264 01       		.byte	0x1
 893 0265 AC       		.byte	0xac
 894 0266 81000000 		.4byte	0x81
 895 026a 02       		.uleb128 0x2
 896 026b 91       		.byte	0x91
 897 026c 68       		.sleb128 -24
 898 026d 15       		.uleb128 0x15
 899 026e 66020000 		.4byte	.LASF38
 900 0272 01       		.byte	0x1
 901 0273 AE       		.byte	0xae
 902 0274 F5000000 		.4byte	0xf5
 903 0278 02       		.uleb128 0x2
 904 0279 91       		.byte	0x91
 905 027a 70       		.sleb128 -16
 906 027b 00       		.byte	0
 907 027c 16       		.uleb128 0x16
 908 027d 22010000 		.4byte	.LASF51
 909 0281 01       		.byte	0x1
 910 0282 BD       		.byte	0xbd
 911 0283 00000000 		.4byte	.LFB72
 912 0287 90000000 		.4byte	.LFE72-.LFB72
 913 028b 01       		.uleb128 0x1
 914 028c 9C       		.byte	0x9c
 915 028d CB020000 		.4byte	0x2cb
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 21


 916 0291 15       		.uleb128 0x15
 917 0292 77020000 		.4byte	.LASF39
 918 0296 01       		.byte	0x1
 919 0297 BF       		.byte	0xbf
 920 0298 53010000 		.4byte	0x153
 921 029c 03       		.uleb128 0x3
 922 029d 91       		.byte	0x91
 923 029e E87C     		.sleb128 -408
 924 02a0 15       		.uleb128 0x15
 925 02a1 12010000 		.4byte	.LASF40
 926 02a5 01       		.byte	0x1
 927 02a6 C1       		.byte	0xc1
 928 02a7 53010000 		.4byte	0x153
 929 02ab 03       		.uleb128 0x3
 930 02ac 91       		.byte	0x91
 931 02ad E479     		.sleb128 -796
 932 02af 15       		.uleb128 0x15
 933 02b0 DB010000 		.4byte	.LASF41
 934 02b4 01       		.byte	0x1
 935 02b5 C3       		.byte	0xc3
 936 02b6 53010000 		.4byte	0x153
 937 02ba 03       		.uleb128 0x3
 938 02bb 91       		.byte	0x91
 939 02bc E076     		.sleb128 -1184
 940 02be 17       		.uleb128 0x17
 941 02bf 6300     		.ascii	"c\000"
 942 02c1 01       		.byte	0x1
 943 02c2 C6       		.byte	0xc6
 944 02c3 68000000 		.4byte	0x68
 945 02c7 02       		.uleb128 0x2
 946 02c8 91       		.byte	0x91
 947 02c9 6C       		.sleb128 -20
 948 02ca 00       		.byte	0
 949 02cb 18       		.uleb128 0x18
 950 02cc B4010000 		.4byte	.LASF52
 951 02d0 01       		.byte	0x1
 952 02d1 CF       		.byte	0xcf
 953 02d2 68000000 		.4byte	0x68
 954 02d6 00000000 		.4byte	.LFB73
 955 02da 1E000000 		.4byte	.LFE73-.LFB73
 956 02de 01       		.uleb128 0x1
 957 02df 9C       		.byte	0x9c
 958 02e0 19       		.uleb128 0x19
 959 02e1 92010000 		.4byte	.LASF42
 960 02e5 07       		.byte	0x7
 961 02e6 1207     		.2byte	0x712
 962 02e8 EC020000 		.4byte	0x2ec
 963 02ec 08       		.uleb128 0x8
 964 02ed 76000000 		.4byte	0x76
 965 02f1 0A       		.uleb128 0xa
 966 02f2 A7000000 		.4byte	0xa7
 967 02f6 01030000 		.4byte	0x301
 968 02fa 0B       		.uleb128 0xb
 969 02fb B5000000 		.4byte	0xb5
 970 02ff 63       		.byte	0x63
 971 0300 00       		.byte	0
 972 0301 1A       		.uleb128 0x1a
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 22


 973 0302 A7000000 		.4byte	.LASF43
 974 0306 08       		.byte	0x8
 975 0307 13       		.byte	0x13
 976 0308 F1020000 		.4byte	0x2f1
 977 030c 05       		.uleb128 0x5
 978 030d 03       		.byte	0x3
 979 030e 00000000 		.4byte	debug_string
 980 0312 1A       		.uleb128 0x1a
 981 0313 5A010000 		.4byte	.LASF44
 982 0317 01       		.byte	0x1
 983 0318 19       		.byte	0x19
 984 0319 F5000000 		.4byte	0xf5
 985 031d 05       		.uleb128 0x5
 986 031e 03       		.byte	0x3
 987 031f 00000000 		.4byte	alarmMeasure
 988 0323 1A       		.uleb128 0x1a
 989 0324 04020000 		.4byte	.LASF45
 990 0328 01       		.byte	0x1
 991 0329 1A       		.byte	0x1a
 992 032a 81000000 		.4byte	0x81
 993 032e 05       		.uleb128 0x5
 994 032f 03       		.byte	0x3
 995 0330 00000000 		.4byte	timeToMeasure
 996 0334 1A       		.uleb128 0x1a
 997 0335 C0010000 		.4byte	.LASF46
 998 0339 01       		.byte	0x1
 999 033a 1B       		.byte	0x1b
 1000 033b F5000000 		.4byte	0xf5
 1001 033f 05       		.uleb128 0x5
 1002 0340 03       		.byte	0x3
 1003 0341 00000000 		.4byte	alarmMeasure2
 1004 0345 1A       		.uleb128 0x1a
 1005 0346 14030000 		.4byte	.LASF47
 1006 034a 01       		.byte	0x1
 1007 034b 1C       		.byte	0x1c
 1008 034c 81000000 		.4byte	0x81
 1009 0350 05       		.uleb128 0x5
 1010 0351 03       		.byte	0x3
 1011 0352 00000000 		.4byte	timeToMeasure2
 1012 0356 00       		.byte	0
 1013              		.section	.debug_abbrev,"",%progbits
 1014              	.Ldebug_abbrev0:
 1015 0000 01       		.uleb128 0x1
 1016 0001 11       		.uleb128 0x11
 1017 0002 01       		.byte	0x1
 1018 0003 25       		.uleb128 0x25
 1019 0004 0E       		.uleb128 0xe
 1020 0005 13       		.uleb128 0x13
 1021 0006 0B       		.uleb128 0xb
 1022 0007 03       		.uleb128 0x3
 1023 0008 0E       		.uleb128 0xe
 1024 0009 1B       		.uleb128 0x1b
 1025 000a 0E       		.uleb128 0xe
 1026 000b 55       		.uleb128 0x55
 1027 000c 17       		.uleb128 0x17
 1028 000d 11       		.uleb128 0x11
 1029 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 23


 1030 000f 10       		.uleb128 0x10
 1031 0010 17       		.uleb128 0x17
 1032 0011 00       		.byte	0
 1033 0012 00       		.byte	0
 1034 0013 02       		.uleb128 0x2
 1035 0014 24       		.uleb128 0x24
 1036 0015 00       		.byte	0
 1037 0016 0B       		.uleb128 0xb
 1038 0017 0B       		.uleb128 0xb
 1039 0018 3E       		.uleb128 0x3e
 1040 0019 0B       		.uleb128 0xb
 1041 001a 03       		.uleb128 0x3
 1042 001b 0E       		.uleb128 0xe
 1043 001c 00       		.byte	0
 1044 001d 00       		.byte	0
 1045 001e 03       		.uleb128 0x3
 1046 001f 16       		.uleb128 0x16
 1047 0020 00       		.byte	0
 1048 0021 03       		.uleb128 0x3
 1049 0022 0E       		.uleb128 0xe
 1050 0023 3A       		.uleb128 0x3a
 1051 0024 0B       		.uleb128 0xb
 1052 0025 3B       		.uleb128 0x3b
 1053 0026 0B       		.uleb128 0xb
 1054 0027 49       		.uleb128 0x49
 1055 0028 13       		.uleb128 0x13
 1056 0029 00       		.byte	0
 1057 002a 00       		.byte	0
 1058 002b 04       		.uleb128 0x4
 1059 002c 24       		.uleb128 0x24
 1060 002d 00       		.byte	0
 1061 002e 0B       		.uleb128 0xb
 1062 002f 0B       		.uleb128 0xb
 1063 0030 3E       		.uleb128 0x3e
 1064 0031 0B       		.uleb128 0xb
 1065 0032 03       		.uleb128 0x3
 1066 0033 08       		.uleb128 0x8
 1067 0034 00       		.byte	0
 1068 0035 00       		.byte	0
 1069 0036 05       		.uleb128 0x5
 1070 0037 16       		.uleb128 0x16
 1071 0038 00       		.byte	0
 1072 0039 03       		.uleb128 0x3
 1073 003a 0E       		.uleb128 0xe
 1074 003b 3A       		.uleb128 0x3a
 1075 003c 0B       		.uleb128 0xb
 1076 003d 3B       		.uleb128 0x3b
 1077 003e 05       		.uleb128 0x5
 1078 003f 49       		.uleb128 0x49
 1079 0040 13       		.uleb128 0x13
 1080 0041 00       		.byte	0
 1081 0042 00       		.byte	0
 1082 0043 06       		.uleb128 0x6
 1083 0044 13       		.uleb128 0x13
 1084 0045 01       		.byte	0x1
 1085 0046 0B       		.uleb128 0xb
 1086 0047 0B       		.uleb128 0xb
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 24


 1087 0048 3A       		.uleb128 0x3a
 1088 0049 0B       		.uleb128 0xb
 1089 004a 3B       		.uleb128 0x3b
 1090 004b 0B       		.uleb128 0xb
 1091 004c 01       		.uleb128 0x1
 1092 004d 13       		.uleb128 0x13
 1093 004e 00       		.byte	0
 1094 004f 00       		.byte	0
 1095 0050 07       		.uleb128 0x7
 1096 0051 0D       		.uleb128 0xd
 1097 0052 00       		.byte	0
 1098 0053 03       		.uleb128 0x3
 1099 0054 0E       		.uleb128 0xe
 1100 0055 3A       		.uleb128 0x3a
 1101 0056 0B       		.uleb128 0xb
 1102 0057 3B       		.uleb128 0x3b
 1103 0058 0B       		.uleb128 0xb
 1104 0059 49       		.uleb128 0x49
 1105 005a 13       		.uleb128 0x13
 1106 005b 38       		.uleb128 0x38
 1107 005c 0B       		.uleb128 0xb
 1108 005d 00       		.byte	0
 1109 005e 00       		.byte	0
 1110 005f 08       		.uleb128 0x8
 1111 0060 35       		.uleb128 0x35
 1112 0061 00       		.byte	0
 1113 0062 49       		.uleb128 0x49
 1114 0063 13       		.uleb128 0x13
 1115 0064 00       		.byte	0
 1116 0065 00       		.byte	0
 1117 0066 09       		.uleb128 0x9
 1118 0067 13       		.uleb128 0x13
 1119 0068 01       		.byte	0x1
 1120 0069 0B       		.uleb128 0xb
 1121 006a 05       		.uleb128 0x5
 1122 006b 3A       		.uleb128 0x3a
 1123 006c 0B       		.uleb128 0xb
 1124 006d 3B       		.uleb128 0x3b
 1125 006e 0B       		.uleb128 0xb
 1126 006f 01       		.uleb128 0x1
 1127 0070 13       		.uleb128 0x13
 1128 0071 00       		.byte	0
 1129 0072 00       		.byte	0
 1130 0073 0A       		.uleb128 0xa
 1131 0074 01       		.uleb128 0x1
 1132 0075 01       		.byte	0x1
 1133 0076 49       		.uleb128 0x49
 1134 0077 13       		.uleb128 0x13
 1135 0078 01       		.uleb128 0x1
 1136 0079 13       		.uleb128 0x13
 1137 007a 00       		.byte	0
 1138 007b 00       		.byte	0
 1139 007c 0B       		.uleb128 0xb
 1140 007d 21       		.uleb128 0x21
 1141 007e 00       		.byte	0
 1142 007f 49       		.uleb128 0x49
 1143 0080 13       		.uleb128 0x13
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 25


 1144 0081 2F       		.uleb128 0x2f
 1145 0082 0B       		.uleb128 0xb
 1146 0083 00       		.byte	0
 1147 0084 00       		.byte	0
 1148 0085 0C       		.uleb128 0xc
 1149 0086 2E       		.uleb128 0x2e
 1150 0087 00       		.byte	0
 1151 0088 3F       		.uleb128 0x3f
 1152 0089 19       		.uleb128 0x19
 1153 008a 03       		.uleb128 0x3
 1154 008b 0E       		.uleb128 0xe
 1155 008c 3A       		.uleb128 0x3a
 1156 008d 0B       		.uleb128 0xb
 1157 008e 3B       		.uleb128 0x3b
 1158 008f 0B       		.uleb128 0xb
 1159 0090 27       		.uleb128 0x27
 1160 0091 19       		.uleb128 0x19
 1161 0092 11       		.uleb128 0x11
 1162 0093 01       		.uleb128 0x1
 1163 0094 12       		.uleb128 0x12
 1164 0095 06       		.uleb128 0x6
 1165 0096 40       		.uleb128 0x40
 1166 0097 18       		.uleb128 0x18
 1167 0098 9642     		.uleb128 0x2116
 1168 009a 19       		.uleb128 0x19
 1169 009b 00       		.byte	0
 1170 009c 00       		.byte	0
 1171 009d 0D       		.uleb128 0xd
 1172 009e 2E       		.uleb128 0x2e
 1173 009f 00       		.byte	0
 1174 00a0 3F       		.uleb128 0x3f
 1175 00a1 19       		.uleb128 0x19
 1176 00a2 03       		.uleb128 0x3
 1177 00a3 0E       		.uleb128 0xe
 1178 00a4 3A       		.uleb128 0x3a
 1179 00a5 0B       		.uleb128 0xb
 1180 00a6 3B       		.uleb128 0x3b
 1181 00a7 0B       		.uleb128 0xb
 1182 00a8 11       		.uleb128 0x11
 1183 00a9 01       		.uleb128 0x1
 1184 00aa 12       		.uleb128 0x12
 1185 00ab 06       		.uleb128 0x6
 1186 00ac 40       		.uleb128 0x40
 1187 00ad 18       		.uleb128 0x18
 1188 00ae 9642     		.uleb128 0x2116
 1189 00b0 19       		.uleb128 0x19
 1190 00b1 00       		.byte	0
 1191 00b2 00       		.byte	0
 1192 00b3 0E       		.uleb128 0xe
 1193 00b4 2E       		.uleb128 0x2e
 1194 00b5 00       		.byte	0
 1195 00b6 3F       		.uleb128 0x3f
 1196 00b7 19       		.uleb128 0x19
 1197 00b8 03       		.uleb128 0x3
 1198 00b9 0E       		.uleb128 0xe
 1199 00ba 3A       		.uleb128 0x3a
 1200 00bb 0B       		.uleb128 0xb
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 26


 1201 00bc 3B       		.uleb128 0x3b
 1202 00bd 0B       		.uleb128 0xb
 1203 00be 49       		.uleb128 0x49
 1204 00bf 13       		.uleb128 0x13
 1205 00c0 11       		.uleb128 0x11
 1206 00c1 01       		.uleb128 0x1
 1207 00c2 12       		.uleb128 0x12
 1208 00c3 06       		.uleb128 0x6
 1209 00c4 40       		.uleb128 0x40
 1210 00c5 18       		.uleb128 0x18
 1211 00c6 9642     		.uleb128 0x2116
 1212 00c8 19       		.uleb128 0x19
 1213 00c9 00       		.byte	0
 1214 00ca 00       		.byte	0
 1215 00cb 0F       		.uleb128 0xf
 1216 00cc 2E       		.uleb128 0x2e
 1217 00cd 01       		.byte	0x1
 1218 00ce 3F       		.uleb128 0x3f
 1219 00cf 19       		.uleb128 0x19
 1220 00d0 03       		.uleb128 0x3
 1221 00d1 0E       		.uleb128 0xe
 1222 00d2 3A       		.uleb128 0x3a
 1223 00d3 0B       		.uleb128 0xb
 1224 00d4 3B       		.uleb128 0x3b
 1225 00d5 0B       		.uleb128 0xb
 1226 00d6 27       		.uleb128 0x27
 1227 00d7 19       		.uleb128 0x19
 1228 00d8 11       		.uleb128 0x11
 1229 00d9 01       		.uleb128 0x1
 1230 00da 12       		.uleb128 0x12
 1231 00db 06       		.uleb128 0x6
 1232 00dc 40       		.uleb128 0x40
 1233 00dd 18       		.uleb128 0x18
 1234 00de 9642     		.uleb128 0x2116
 1235 00e0 19       		.uleb128 0x19
 1236 00e1 01       		.uleb128 0x1
 1237 00e2 13       		.uleb128 0x13
 1238 00e3 00       		.byte	0
 1239 00e4 00       		.byte	0
 1240 00e5 10       		.uleb128 0x10
 1241 00e6 05       		.uleb128 0x5
 1242 00e7 00       		.byte	0
 1243 00e8 03       		.uleb128 0x3
 1244 00e9 0E       		.uleb128 0xe
 1245 00ea 3A       		.uleb128 0x3a
 1246 00eb 0B       		.uleb128 0xb
 1247 00ec 3B       		.uleb128 0x3b
 1248 00ed 0B       		.uleb128 0xb
 1249 00ee 49       		.uleb128 0x49
 1250 00ef 13       		.uleb128 0x13
 1251 00f0 02       		.uleb128 0x2
 1252 00f1 18       		.uleb128 0x18
 1253 00f2 00       		.byte	0
 1254 00f3 00       		.byte	0
 1255 00f4 11       		.uleb128 0x11
 1256 00f5 2E       		.uleb128 0x2e
 1257 00f6 01       		.byte	0x1
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 27


 1258 00f7 3F       		.uleb128 0x3f
 1259 00f8 19       		.uleb128 0x19
 1260 00f9 03       		.uleb128 0x3
 1261 00fa 0E       		.uleb128 0xe
 1262 00fb 3A       		.uleb128 0x3a
 1263 00fc 0B       		.uleb128 0xb
 1264 00fd 3B       		.uleb128 0x3b
 1265 00fe 0B       		.uleb128 0xb
 1266 00ff 27       		.uleb128 0x27
 1267 0100 19       		.uleb128 0x19
 1268 0101 49       		.uleb128 0x49
 1269 0102 13       		.uleb128 0x13
 1270 0103 11       		.uleb128 0x11
 1271 0104 01       		.uleb128 0x1
 1272 0105 12       		.uleb128 0x12
 1273 0106 06       		.uleb128 0x6
 1274 0107 40       		.uleb128 0x40
 1275 0108 18       		.uleb128 0x18
 1276 0109 9642     		.uleb128 0x2116
 1277 010b 19       		.uleb128 0x19
 1278 010c 01       		.uleb128 0x1
 1279 010d 13       		.uleb128 0x13
 1280 010e 00       		.byte	0
 1281 010f 00       		.byte	0
 1282 0110 12       		.uleb128 0x12
 1283 0111 0F       		.uleb128 0xf
 1284 0112 00       		.byte	0
 1285 0113 0B       		.uleb128 0xb
 1286 0114 0B       		.uleb128 0xb
 1287 0115 49       		.uleb128 0x49
 1288 0116 13       		.uleb128 0x13
 1289 0117 00       		.byte	0
 1290 0118 00       		.byte	0
 1291 0119 13       		.uleb128 0x13
 1292 011a 2E       		.uleb128 0x2e
 1293 011b 01       		.byte	0x1
 1294 011c 3F       		.uleb128 0x3f
 1295 011d 19       		.uleb128 0x19
 1296 011e 03       		.uleb128 0x3
 1297 011f 0E       		.uleb128 0xe
 1298 0120 3A       		.uleb128 0x3a
 1299 0121 0B       		.uleb128 0xb
 1300 0122 3B       		.uleb128 0x3b
 1301 0123 0B       		.uleb128 0xb
 1302 0124 27       		.uleb128 0x27
 1303 0125 19       		.uleb128 0x19
 1304 0126 11       		.uleb128 0x11
 1305 0127 01       		.uleb128 0x1
 1306 0128 12       		.uleb128 0x12
 1307 0129 06       		.uleb128 0x6
 1308 012a 40       		.uleb128 0x40
 1309 012b 18       		.uleb128 0x18
 1310 012c 9742     		.uleb128 0x2117
 1311 012e 19       		.uleb128 0x19
 1312 012f 01       		.uleb128 0x1
 1313 0130 13       		.uleb128 0x13
 1314 0131 00       		.byte	0
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 28


 1315 0132 00       		.byte	0
 1316 0133 14       		.uleb128 0x14
 1317 0134 2E       		.uleb128 0x2e
 1318 0135 01       		.byte	0x1
 1319 0136 3F       		.uleb128 0x3f
 1320 0137 19       		.uleb128 0x19
 1321 0138 03       		.uleb128 0x3
 1322 0139 0E       		.uleb128 0xe
 1323 013a 3A       		.uleb128 0x3a
 1324 013b 0B       		.uleb128 0xb
 1325 013c 3B       		.uleb128 0x3b
 1326 013d 0B       		.uleb128 0xb
 1327 013e 27       		.uleb128 0x27
 1328 013f 19       		.uleb128 0x19
 1329 0140 49       		.uleb128 0x49
 1330 0141 13       		.uleb128 0x13
 1331 0142 11       		.uleb128 0x11
 1332 0143 01       		.uleb128 0x1
 1333 0144 12       		.uleb128 0x12
 1334 0145 06       		.uleb128 0x6
 1335 0146 40       		.uleb128 0x40
 1336 0147 18       		.uleb128 0x18
 1337 0148 9742     		.uleb128 0x2117
 1338 014a 19       		.uleb128 0x19
 1339 014b 01       		.uleb128 0x1
 1340 014c 13       		.uleb128 0x13
 1341 014d 00       		.byte	0
 1342 014e 00       		.byte	0
 1343 014f 15       		.uleb128 0x15
 1344 0150 34       		.uleb128 0x34
 1345 0151 00       		.byte	0
 1346 0152 03       		.uleb128 0x3
 1347 0153 0E       		.uleb128 0xe
 1348 0154 3A       		.uleb128 0x3a
 1349 0155 0B       		.uleb128 0xb
 1350 0156 3B       		.uleb128 0x3b
 1351 0157 0B       		.uleb128 0xb
 1352 0158 49       		.uleb128 0x49
 1353 0159 13       		.uleb128 0x13
 1354 015a 02       		.uleb128 0x2
 1355 015b 18       		.uleb128 0x18
 1356 015c 00       		.byte	0
 1357 015d 00       		.byte	0
 1358 015e 16       		.uleb128 0x16
 1359 015f 2E       		.uleb128 0x2e
 1360 0160 01       		.byte	0x1
 1361 0161 3F       		.uleb128 0x3f
 1362 0162 19       		.uleb128 0x19
 1363 0163 03       		.uleb128 0x3
 1364 0164 0E       		.uleb128 0xe
 1365 0165 3A       		.uleb128 0x3a
 1366 0166 0B       		.uleb128 0xb
 1367 0167 3B       		.uleb128 0x3b
 1368 0168 0B       		.uleb128 0xb
 1369 0169 11       		.uleb128 0x11
 1370 016a 01       		.uleb128 0x1
 1371 016b 12       		.uleb128 0x12
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 29


 1372 016c 06       		.uleb128 0x6
 1373 016d 40       		.uleb128 0x40
 1374 016e 18       		.uleb128 0x18
 1375 016f 9642     		.uleb128 0x2116
 1376 0171 19       		.uleb128 0x19
 1377 0172 01       		.uleb128 0x1
 1378 0173 13       		.uleb128 0x13
 1379 0174 00       		.byte	0
 1380 0175 00       		.byte	0
 1381 0176 17       		.uleb128 0x17
 1382 0177 34       		.uleb128 0x34
 1383 0178 00       		.byte	0
 1384 0179 03       		.uleb128 0x3
 1385 017a 08       		.uleb128 0x8
 1386 017b 3A       		.uleb128 0x3a
 1387 017c 0B       		.uleb128 0xb
 1388 017d 3B       		.uleb128 0x3b
 1389 017e 0B       		.uleb128 0xb
 1390 017f 49       		.uleb128 0x49
 1391 0180 13       		.uleb128 0x13
 1392 0181 02       		.uleb128 0x2
 1393 0182 18       		.uleb128 0x18
 1394 0183 00       		.byte	0
 1395 0184 00       		.byte	0
 1396 0185 18       		.uleb128 0x18
 1397 0186 2E       		.uleb128 0x2e
 1398 0187 00       		.byte	0
 1399 0188 3F       		.uleb128 0x3f
 1400 0189 19       		.uleb128 0x19
 1401 018a 03       		.uleb128 0x3
 1402 018b 0E       		.uleb128 0xe
 1403 018c 3A       		.uleb128 0x3a
 1404 018d 0B       		.uleb128 0xb
 1405 018e 3B       		.uleb128 0x3b
 1406 018f 0B       		.uleb128 0xb
 1407 0190 27       		.uleb128 0x27
 1408 0191 19       		.uleb128 0x19
 1409 0192 49       		.uleb128 0x49
 1410 0193 13       		.uleb128 0x13
 1411 0194 11       		.uleb128 0x11
 1412 0195 01       		.uleb128 0x1
 1413 0196 12       		.uleb128 0x12
 1414 0197 06       		.uleb128 0x6
 1415 0198 40       		.uleb128 0x40
 1416 0199 18       		.uleb128 0x18
 1417 019a 9642     		.uleb128 0x2116
 1418 019c 19       		.uleb128 0x19
 1419 019d 00       		.byte	0
 1420 019e 00       		.byte	0
 1421 019f 19       		.uleb128 0x19
 1422 01a0 34       		.uleb128 0x34
 1423 01a1 00       		.byte	0
 1424 01a2 03       		.uleb128 0x3
 1425 01a3 0E       		.uleb128 0xe
 1426 01a4 3A       		.uleb128 0x3a
 1427 01a5 0B       		.uleb128 0xb
 1428 01a6 3B       		.uleb128 0x3b
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 30


 1429 01a7 05       		.uleb128 0x5
 1430 01a8 49       		.uleb128 0x49
 1431 01a9 13       		.uleb128 0x13
 1432 01aa 3F       		.uleb128 0x3f
 1433 01ab 19       		.uleb128 0x19
 1434 01ac 3C       		.uleb128 0x3c
 1435 01ad 19       		.uleb128 0x19
 1436 01ae 00       		.byte	0
 1437 01af 00       		.byte	0
 1438 01b0 1A       		.uleb128 0x1a
 1439 01b1 34       		.uleb128 0x34
 1440 01b2 00       		.byte	0
 1441 01b3 03       		.uleb128 0x3
 1442 01b4 0E       		.uleb128 0xe
 1443 01b5 3A       		.uleb128 0x3a
 1444 01b6 0B       		.uleb128 0xb
 1445 01b7 3B       		.uleb128 0x3b
 1446 01b8 0B       		.uleb128 0xb
 1447 01b9 49       		.uleb128 0x49
 1448 01ba 13       		.uleb128 0x13
 1449 01bb 3F       		.uleb128 0x3f
 1450 01bc 19       		.uleb128 0x19
 1451 01bd 02       		.uleb128 0x2
 1452 01be 18       		.uleb128 0x18
 1453 01bf 00       		.byte	0
 1454 01c0 00       		.byte	0
 1455 01c1 00       		.byte	0
 1456              		.section	.debug_aranges,"",%progbits
 1457 0000 64000000 		.4byte	0x64
 1458 0004 0200     		.2byte	0x2
 1459 0006 00000000 		.4byte	.Ldebug_info0
 1460 000a 04       		.byte	0x4
 1461 000b 00       		.byte	0
 1462 000c 0000     		.2byte	0
 1463 000e 0000     		.2byte	0
 1464 0010 00000000 		.4byte	.LFB64
 1465 0014 0C000000 		.4byte	.LFE64-.LFB64
 1466 0018 00000000 		.4byte	.LFB65
 1467 001c 54000000 		.4byte	.LFE65-.LFB65
 1468 0020 00000000 		.4byte	.LFB66
 1469 0024 44000000 		.4byte	.LFE66-.LFB66
 1470 0028 00000000 		.4byte	.LFB67
 1471 002c 22000000 		.4byte	.LFE67-.LFB67
 1472 0030 00000000 		.4byte	.LFB68
 1473 0034 50000000 		.4byte	.LFE68-.LFB68
 1474 0038 00000000 		.4byte	.LFB69
 1475 003c 4A000000 		.4byte	.LFE69-.LFB69
 1476 0040 00000000 		.4byte	.LFB70
 1477 0044 1C000000 		.4byte	.LFE70-.LFB70
 1478 0048 00000000 		.4byte	.LFB71
 1479 004c 44000000 		.4byte	.LFE71-.LFB71
 1480 0050 00000000 		.4byte	.LFB72
 1481 0054 90000000 		.4byte	.LFE72-.LFB72
 1482 0058 00000000 		.4byte	.LFB73
 1483 005c 1E000000 		.4byte	.LFE73-.LFB73
 1484 0060 00000000 		.4byte	0
 1485 0064 00000000 		.4byte	0
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 31


 1486              		.section	.debug_ranges,"",%progbits
 1487              	.Ldebug_ranges0:
 1488 0000 00000000 		.4byte	.LFB64
 1489 0004 0C000000 		.4byte	.LFE64
 1490 0008 00000000 		.4byte	.LFB65
 1491 000c 54000000 		.4byte	.LFE65
 1492 0010 00000000 		.4byte	.LFB66
 1493 0014 44000000 		.4byte	.LFE66
 1494 0018 00000000 		.4byte	.LFB67
 1495 001c 22000000 		.4byte	.LFE67
 1496 0020 00000000 		.4byte	.LFB68
 1497 0024 50000000 		.4byte	.LFE68
 1498 0028 00000000 		.4byte	.LFB69
 1499 002c 4A000000 		.4byte	.LFE69
 1500 0030 00000000 		.4byte	.LFB70
 1501 0034 1C000000 		.4byte	.LFE70
 1502 0038 00000000 		.4byte	.LFB71
 1503 003c 44000000 		.4byte	.LFE71
 1504 0040 00000000 		.4byte	.LFB72
 1505 0044 90000000 		.4byte	.LFE72
 1506 0048 00000000 		.4byte	.LFB73
 1507 004c 1E000000 		.4byte	.LFE73
 1508 0050 00000000 		.4byte	0
 1509 0054 00000000 		.4byte	0
 1510              		.section	.debug_line,"",%progbits
 1511              	.Ldebug_line0:
 1512 0000 53020000 		.section	.debug_str,"MS",%progbits,1
 1512      02007201 
 1512      00000201 
 1512      FB0E0D00 
 1512      01010101 
 1513              	.LASF48:
 1514 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1514      43313120 
 1514      352E342E 
 1514      31203230 
 1514      31363036 
 1515 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1515      20726576 
 1515      6973696F 
 1515      6E203233 
 1515      37373135 
 1516 0066 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1516      66756E63 
 1516      74696F6E 
 1516      2D736563 
 1516      74696F6E 
 1517              	.LASF28:
 1518 008e 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 1518      576F726B 
 1518      576F726B 
 1518      576F726B 
 1518      576F726B 
 1519              	.LASF43:
 1520 00a7 64656275 		.ascii	"debug_string\000"
 1520      675F7374 
 1520      72696E67 
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 32


 1520      00
 1521              	.LASF9:
 1522 00b4 5F5F696E 		.ascii	"__int32_t\000"
 1522      7433325F 
 1522      7400
 1523              	.LASF26:
 1524 00be 74657374 		.ascii	"test_t\000"
 1524      5F7400
 1525              	.LASF37:
 1526 00c5 43726561 		.ascii	"CreateAlarm\000"
 1526      7465416C 
 1526      61726D00 
 1527              	.LASF21:
 1528 00d1 636F756E 		.ascii	"countDownResetCondition\000"
 1528      74446F77 
 1528      6E526573 
 1528      6574436F 
 1528      6E646974 
 1529              	.LASF11:
 1530 00e9 75696E74 		.ascii	"uint8\000"
 1530      3800
 1531              	.LASF24:
 1532 00ef 73746174 		.ascii	"status\000"
 1532      757300
 1533              	.LASF32:
 1534 00f6 616C6172 		.ascii	"alarmToBeUpdated\000"
 1534      6D546F42 
 1534      65557064 
 1534      61746564 
 1534      00
 1535              	.LASF36:
 1536 0107 416C6172 		.ascii	"AlarmReady\000"
 1536      6D526561 
 1536      647900
 1537              	.LASF40:
 1538 0112 745F7364 		.ascii	"t_sd_card\000"
 1538      5F636172 
 1538      6400
 1539              	.LASF13:
 1540 011c 666C6F61 		.ascii	"float\000"
 1540      7400
 1541              	.LASF51:
 1542 0122 74657374 		.ascii	"test_components\000"
 1542      5F636F6D 
 1542      706F6E65 
 1542      6E747300 
 1543              	.LASF34:
 1544 0132 52657365 		.ascii	"ResetAlarm\000"
 1544      74416C61 
 1544      726D00
 1545              	.LASF1:
 1546 013d 756E7369 		.ascii	"unsigned char\000"
 1546      676E6564 
 1546      20636861 
 1546      7200
 1547              	.LASF18:
 1548 014b 636F756E 		.ascii	"countDownValue\000"
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 33


 1548      74446F77 
 1548      6E56616C 
 1548      756500
 1549              	.LASF44:
 1550 015a 616C6172 		.ascii	"alarmMeasure\000"
 1550      6D4D6561 
 1550      73757265 
 1550      00
 1551              	.LASF5:
 1552 0167 6C6F6E67 		.ascii	"long unsigned int\000"
 1552      20756E73 
 1552      69676E65 
 1552      6420696E 
 1552      7400
 1553              	.LASF3:
 1554 0179 73686F72 		.ascii	"short unsigned int\000"
 1554      7420756E 
 1554      7369676E 
 1554      65642069 
 1554      6E7400
 1555              	.LASF22:
 1556 018c 616C6172 		.ascii	"alarm\000"
 1556      6D00
 1557              	.LASF42:
 1558 0192 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1558      52784275 
 1558      66666572 
 1558      00
 1559              	.LASF20:
 1560 019f 636F756E 		.ascii	"countDownType\000"
 1560      74446F77 
 1560      6E547970 
 1560      6500
 1561              	.LASF14:
 1562 01ad 646F7562 		.ascii	"double\000"
 1562      6C6500
 1563              	.LASF52:
 1564 01b4 6D61696E 		.ascii	"main\000"
 1564      00
 1565              	.LASF12:
 1566 01b9 75696E74 		.ascii	"uint16\000"
 1566      313600
 1567              	.LASF46:
 1568 01c0 616C6172 		.ascii	"alarmMeasure2\000"
 1568      6D4D6561 
 1568      73757265 
 1568      3200
 1569              	.LASF8:
 1570 01ce 756E7369 		.ascii	"unsigned int\000"
 1570      676E6564 
 1570      20696E74 
 1570      00
 1571              	.LASF41:
 1572 01db 745F766F 		.ascii	"t_voltages\000"
 1572      6C746167 
 1572      657300
 1573              	.LASF7:
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 34


 1574 01e6 6C6F6E67 		.ascii	"long long unsigned int\000"
 1574      206C6F6E 
 1574      6720756E 
 1574      7369676E 
 1574      65642069 
 1575              	.LASF25:
 1576 01fd 72656173 		.ascii	"reason\000"
 1576      6F6E00
 1577              	.LASF45:
 1578 0204 74696D65 		.ascii	"timeToMeasure\000"
 1578      546F4D65 
 1578      61737572 
 1578      6500
 1579              	.LASF50:
 1580 0212 433A5C55 		.ascii	"C:\\Users\\bk\\Documents\\GitHub\\Open Storm\\notor"
 1580      73657273 
 1580      5C626B5C 
 1580      446F6375 
 1580      6D656E74 
 1581 023f 694F535C 		.ascii	"iOS\\notoriOS\\notoriOS.cydsn\000"
 1581      6E6F746F 
 1581      72694F53 
 1581      5C6E6F74 
 1581      6F72694F 
 1582              	.LASF27:
 1583 025b 57616B65 		.ascii	"Wakeup_ISR\000"
 1583      75705F49 
 1583      535200
 1584              	.LASF38:
 1585 0266 6E657741 		.ascii	"newAlarm\000"
 1585      6C61726D 
 1585      00
 1586              	.LASF30:
 1587 026f 4C617942 		.ascii	"LayBack\000"
 1587      61636B00 
 1588              	.LASF39:
 1589 0277 745F6C65 		.ascii	"t_level_sensor\000"
 1589      76656C5F 
 1589      73656E73 
 1589      6F7200
 1590              	.LASF6:
 1591 0286 6C6F6E67 		.ascii	"long long int\000"
 1591      206C6F6E 
 1591      6720696E 
 1591      7400
 1592              	.LASF17:
 1593 0294 73697A65 		.ascii	"sizetype\000"
 1593      74797065 
 1593      00
 1594              	.LASF49:
 1595 029d 6D61696E 		.ascii	"main.c\000"
 1595      2E6300
 1596              	.LASF15:
 1597 02a4 63686172 		.ascii	"char\000"
 1597      00
 1598              	.LASF19:
 1599 02a9 63757272 		.ascii	"currentCountDownValue\000"
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9wR9sI.s 			page 35


 1599      656E7443 
 1599      6F756E74 
 1599      446F776E 
 1599      56616C75 
 1600              	.LASF10:
 1601 02bf 696E7433 		.ascii	"int32_t\000"
 1601      325F7400 
 1602              	.LASF31:
 1603 02c7 616C6172 		.ascii	"alarmType\000"
 1603      6D547970 
 1603      6500
 1604              	.LASF2:
 1605 02d1 73686F72 		.ascii	"short int\000"
 1605      7420696E 
 1605      7400
 1606              	.LASF35:
 1607 02db 616C6172 		.ascii	"alarmToBeReset\000"
 1607      6D546F42 
 1607      65526573 
 1607      657400
 1608              	.LASF23:
 1609 02ea 74657374 		.ascii	"test_name\000"
 1609      5F6E616D 
 1609      6500
 1610              	.LASF4:
 1611 02f4 6C6F6E67 		.ascii	"long int\000"
 1611      20696E74 
 1611      00
 1612              	.LASF29:
 1613 02fd 52656164 		.ascii	"ReadyOrNot\000"
 1613      794F724E 
 1613      6F7400
 1614              	.LASF16:
 1615 0308 6C6F6E67 		.ascii	"long double\000"
 1615      20646F75 
 1615      626C6500 
 1616              	.LASF47:
 1617 0314 74696D65 		.ascii	"timeToMeasure2\000"
 1617      546F4D65 
 1617      61737572 
 1617      653200
 1618              	.LASF0:
 1619 0323 7369676E 		.ascii	"signed char\000"
 1619      65642063 
 1619      68617200 
 1620              	.LASF33:
 1621 032f 41796F49 		.ascii	"AyoItsTime\000"
 1621      74735469 
 1621      6D6500
 1622              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
