ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	alarmMeasure,6,4
  20              		.comm	timeToMeasure,1,1
  21              		.comm	alarmMeasure2,6,4
  22              		.comm	timeToMeasure2,1,1
  23              		.section	.text.Wakeup_ISR,"ax",%progbits
  24              		.align	2
  25              		.global	Wakeup_ISR
  26              		.thumb
  27              		.thumb_func
  28              		.type	Wakeup_ISR, %function
  29              	Wakeup_ISR:
  30              	.LFB63:
  31              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * OPEN-STORM.ORG
   4:main.c        ****  * notoriOS
   5:main.c        ****  * A non-premptive operating system for node.
   6:main.c        ****  *
   7:main.c        ****  * "To all the teachers that told me I'd never amount to nothin"
   8:main.c        ****  *      -Notorious BIG (1994)
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** #include "project.h"
  13:main.c        **** #include "notoriOS.h"
  14:main.c        **** #include "level_sensor.h"
  15:main.c        **** #include "sd_card.h"
  16:main.c        **** 
  17:main.c        **** 
  18:main.c        **** //global variables
  19:main.c        **** alarm alarmMeasure;
  20:main.c        **** uint8 timeToMeasure;
  21:main.c        **** alarm alarmMeasure2;
  22:main.c        **** uint8 timeToMeasure2;
  23:main.c        **** 
  24:main.c        **** 
  25:main.c        **** // This function must always be called (when the Sleep Timer's interrupt
  26:main.c        **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 2


  27:main.c        **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  28:main.c        **** // of the ILO) after CTW event occurred.
  29:main.c        **** CY_ISR(Wakeup_ISR) {
  32              		.loc 1 29 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 80B5     		push	{r7, lr}
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 00AF     		add	r7, sp, #0
  41              		.cfi_def_cfa_register 7
  30:main.c        ****     SleepTimer_GetStatus();
  42              		.loc 1 30 0
  43 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  31:main.c        **** }
  44              		.loc 1 31 0
  45 0008 00BF     		nop
  46 000a 80BD     		pop	{r7, pc}
  47              		.cfi_endproc
  48              	.LFE63:
  49              		.size	Wakeup_ISR, .-Wakeup_ISR
  50              		.section	.text.ReadyOrNot,"ax",%progbits
  51              		.align	2
  52              		.global	ReadyOrNot
  53              		.thumb
  54              		.thumb_func
  55              		.type	ReadyOrNot, %function
  56              	ReadyOrNot:
  57              	.LFB64:
  32:main.c        **** 
  33:main.c        **** 
  34:main.c        **** // ==============================================
  35:main.c        **** // Ready or not, here I come, you can't hide
  36:main.c        **** // Gonna find you and take it slowly
  37:main.c        **** //      - The Fugees (1996)
  38:main.c        **** //
  39:main.c        **** // Initialize and critical hardware or routines 
  40:main.c        **** // ==============================================
  41:main.c        **** void ReadyOrNot()
  42:main.c        **** {
  58              		.loc 1 42 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 8
  61              		@ frame_needed = 1, uses_anonymous_args = 0
  62 0000 90B5     		push	{r4, r7, lr}
  63              		.cfi_def_cfa_offset 12
  64              		.cfi_offset 4, -12
  65              		.cfi_offset 7, -8
  66              		.cfi_offset 14, -4
  67 0002 83B0     		sub	sp, sp, #12
  68              		.cfi_def_cfa_offset 24
  69 0004 00AF     		add	r7, sp, #0
  70              		.cfi_def_cfa_register 7
  43:main.c        ****     
  44:main.c        ****     isr_SleepTimer_StartEx(Wakeup_ISR);// Start Sleep ISR
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 3


  71              		.loc 1 44 0
  72 0006 1048     		ldr	r0, .L3
  73 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
  45:main.c        ****     SleepTimer_Start();             // Start SleepTimer Component
  74              		.loc 1 45 0
  75 000c FFF7FEFF 		bl	SleepTimer_Start
  46:main.c        ****     
  47:main.c        ****     RTC_WriteIntervalMask(0b11111111);
  76              		.loc 1 47 0
  77 0010 FF20     		movs	r0, #255
  78 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  48:main.c        ****     RTC_Start();
  79              		.loc 1 48 0
  80 0016 FFF7FEFF 		bl	RTC_Start
  49:main.c        ****     
  50:main.c        ****     alarmMeasure = CreateAlarm(2,ALARM_TYPE_SECOND,ALARM_TYPE_CONTINUOUS);
  81              		.loc 1 50 0
  82 001a 0C4C     		ldr	r4, .L3+4
  83 001c 3846     		mov	r0, r7
  84 001e 0723     		movs	r3, #7
  85 0020 0022     		movs	r2, #0
  86 0022 0221     		movs	r1, #2
  87 0024 FFF7FEFF 		bl	CreateAlarm
  88 0028 2246     		mov	r2, r4
  89 002a 3B46     		mov	r3, r7
  90 002c 1968     		ldr	r1, [r3]	@ unaligned
  91 002e 1160     		str	r1, [r2]	@ unaligned
  92 0030 9B88     		ldrh	r3, [r3, #4]	@ unaligned
  93 0032 9380     		strh	r3, [r2, #4]	@ unaligned
  51:main.c        ****     timeToMeasure = 0;
  94              		.loc 1 51 0
  95 0034 064B     		ldr	r3, .L3+8
  96 0036 0022     		movs	r2, #0
  97 0038 1A70     		strb	r2, [r3]
  52:main.c        ****     //alarmMeasure2 = CreateAlarm(10,ALARM_TYPE_SECOND,ALARM_TYPE_CONTINUOUS);
  53:main.c        ****     //timeToMeasure = 0;
  54:main.c        ****     
  55:main.c        ****     //initilized SD card
  56:main.c        ****     SD_init();
  98              		.loc 1 56 0
  99 003a FFF7FEFF 		bl	SD_init
  57:main.c        ****     
  58:main.c        ****     
  59:main.c        **** }
 100              		.loc 1 59 0
 101 003e 00BF     		nop
 102 0040 0C37     		adds	r7, r7, #12
 103              		.cfi_def_cfa_offset 12
 104 0042 BD46     		mov	sp, r7
 105              		.cfi_def_cfa_register 13
 106              		@ sp needed
 107 0044 90BD     		pop	{r4, r7, pc}
 108              	.L4:
 109 0046 00BF     		.align	2
 110              	.L3:
 111 0048 00000000 		.word	Wakeup_ISR
 112 004c 00000000 		.word	alarmMeasure
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 4


 113 0050 00000000 		.word	timeToMeasure
 114              		.cfi_endproc
 115              	.LFE64:
 116              		.size	ReadyOrNot, .-ReadyOrNot
 117              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 118              		.align	2
 119              		.global	WorkWorkWorkWorkWorkWork
 120              		.thumb
 121              		.thumb_func
 122              		.type	WorkWorkWorkWorkWorkWork, %function
 123              	WorkWorkWorkWorkWorkWork:
 124              	.LFB65:
  60:main.c        **** 
  61:main.c        **** // ==============================================
  62:main.c        **** // You see me I be work, work, work, work, work, work 
  63:main.c        **** //      - Rhiana, feat Drake (2016)
  64:main.c        **** //
  65:main.c        **** // Prorcesses core tasks
  66:main.c        **** // ==============================================
  67:main.c        **** int WorkWorkWorkWorkWorkWork()
  68:main.c        **** {
 125              		.loc 1 68 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 1, uses_anonymous_args = 0
 129 0000 80B5     		push	{r7, lr}
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 7, -8
 132              		.cfi_offset 14, -4
 133 0002 00AF     		add	r7, sp, #0
 134              		.cfi_def_cfa_register 7
  69:main.c        ****    
  70:main.c        ****     if(timeToMeasure){
 135              		.loc 1 70 0
 136 0004 094B     		ldr	r3, .L8
 137 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 138 0008 002B     		cmp	r3, #0
 139 000a 0BD0     		beq	.L6
  71:main.c        ****         //CyDelay(1000u);
  72:main.c        ****        LED_Write(1u);
 140              		.loc 1 72 0
 141 000c 0120     		movs	r0, #1
 142 000e FFF7FEFF 		bl	LED_Write
  73:main.c        ****         CyDelay(100u);
 143              		.loc 1 73 0
 144 0012 6420     		movs	r0, #100
 145 0014 FFF7FEFF 		bl	CyDelay
  74:main.c        ****         LED_Write(0u);
 146              		.loc 1 74 0
 147 0018 0020     		movs	r0, #0
 148 001a FFF7FEFF 		bl	LED_Write
  75:main.c        ****         timeToMeasure = 0u;
 149              		.loc 1 75 0
 150 001e 034B     		ldr	r3, .L8
 151 0020 0022     		movs	r2, #0
 152 0022 1A70     		strb	r2, [r3]
 153              	.L6:
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 5


  76:main.c        ****     }
  77:main.c        ****     //if(timeToMeasure2){
  78:main.c        ****         //dosomething
  79:main.c        ****     //}
  80:main.c        ****     
  81:main.c        ****     return 0;   
 154              		.loc 1 81 0
 155 0024 0023     		movs	r3, #0
  82:main.c        **** }
 156              		.loc 1 82 0
 157 0026 1846     		mov	r0, r3
 158 0028 80BD     		pop	{r7, pc}
 159              	.L9:
 160 002a 00BF     		.align	2
 161              	.L8:
 162 002c 00000000 		.word	timeToMeasure
 163              		.cfi_endproc
 164              	.LFE65:
 165              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 166              		.section	.text.LayBack,"ax",%progbits
 167              		.align	2
 168              		.global	LayBack
 169              		.thumb
 170              		.thumb_func
 171              		.type	LayBack, %function
 172              	LayBack:
 173              	.LFB66:
  83:main.c        **** 
  84:main.c        **** 
  85:main.c        **** // ==============================================
  86:main.c        **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
  87:main.c        **** //      - Snoop Dogg (1993)
  88:main.c        **** //
  89:main.c        **** // Put all hardware to sleep and go into low power mode to conserve Amps
  90:main.c        **** // ==============================================
  91:main.c        **** void LayBack()
  92:main.c        **** {
 174              		.loc 1 92 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178 0000 80B5     		push	{r7, lr}
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 00AF     		add	r7, sp, #0
 183              		.cfi_def_cfa_register 7
  93:main.c        ****     // Prepares system clocks for the Sleep mode
  94:main.c        ****     CyPmSaveClocks();
 184              		.loc 1 94 0
 185 0004 FFF7FEFF 		bl	CyPmSaveClocks
  95:main.c        ****     
  96:main.c        ****     // Switch to the Sleep Mode for the other devices:
  97:main.c        ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
  98:main.c        ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
  99:main.c        ****      //  - If real-time clock is used, it will also wake the device
 100:main.c        ****     //CyPmHibernate();
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 6


 101:main.c        ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW);
 186              		.loc 1 101 0
 187 0008 4FF40061 		mov	r1, #2048
 188 000c 0020     		movs	r0, #0
 189 000e FFF7FEFF 		bl	CyPmSleep
 102:main.c        ****   
 103:main.c        ****     // Restore clock configuration
 104:main.c        ****     CyPmRestoreClocks();
 190              		.loc 1 104 0
 191 0012 FFF7FEFF 		bl	CyPmRestoreClocks
 105:main.c        ****     
 106:main.c        **** }
 192              		.loc 1 106 0
 193 0016 00BF     		nop
 194 0018 80BD     		pop	{r7, pc}
 195              		.cfi_endproc
 196              	.LFE66:
 197              		.size	LayBack, .-LayBack
 198 001a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 199              		.align	2
 200              		.global	AyoItsTime
 201              		.thumb
 202              		.thumb_func
 203              		.type	AyoItsTime, %function
 204              	AyoItsTime:
 205              	.LFB67:
 107:main.c        **** 
 108:main.c        **** 
 109:main.c        **** // ==============================================
 110:main.c        **** // I never sleep, 'cause sleep is the cousin of death
 111:main.c        **** //      - NAS (1994)
 112:main.c        **** //
 113:main.c        **** // This is the scheduler. It's called from various interrupts and timers,
 114:main.c        **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 115:main.c        **** // It will add tasks to the work queue,
 116:main.c        **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 117:main.c        **** // ==============================================
 118:main.c        **** void AyoItsTime(uint8 alarmType)
 119:main.c        **** {
 206              		.loc 1 119 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 8
 209              		@ frame_needed = 1, uses_anonymous_args = 0
 210 0000 80B5     		push	{r7, lr}
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 7, -8
 213              		.cfi_offset 14, -4
 214 0002 82B0     		sub	sp, sp, #8
 215              		.cfi_def_cfa_offset 16
 216 0004 00AF     		add	r7, sp, #0
 217              		.cfi_def_cfa_register 7
 218 0006 0346     		mov	r3, r0
 219 0008 FB71     		strb	r3, [r7, #7]
 120:main.c        **** 
 121:main.c        ****     if(AlarmReady(&alarmMeasure,alarmType))
 220              		.loc 1 121 0
 221 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 7


 222 000c 1946     		mov	r1, r3
 223 000e 0C48     		ldr	r0, .L15
 224 0010 FFF7FEFF 		bl	AlarmReady
 225 0014 0346     		mov	r3, r0
 226 0016 002B     		cmp	r3, #0
 227 0018 02D0     		beq	.L12
 122:main.c        ****     {
 123:main.c        ****          //create new task and pass off to workworkworkworkwork()
 124:main.c        ****         //pass off to work work
 125:main.c        ****         timeToMeasure = 1u;
 228              		.loc 1 125 0
 229 001a 0A4B     		ldr	r3, .L15+4
 230 001c 0122     		movs	r2, #1
 231 001e 1A70     		strb	r2, [r3]
 232              	.L12:
 126:main.c        ****     }
 127:main.c        ****     if(AlarmReady(&alarmMeasure2,alarmType))
 233              		.loc 1 127 0
 234 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 235 0022 1946     		mov	r1, r3
 236 0024 0848     		ldr	r0, .L15+8
 237 0026 FFF7FEFF 		bl	AlarmReady
 238 002a 0346     		mov	r3, r0
 239 002c 002B     		cmp	r3, #0
 240 002e 02D0     		beq	.L14
 128:main.c        ****     {
 129:main.c        ****          //create new task and pass off to workworkworkworkwork()
 130:main.c        ****         //pass off to work work
 131:main.c        ****         timeToMeasure2 = 1u;
 241              		.loc 1 131 0
 242 0030 064B     		ldr	r3, .L15+12
 243 0032 0122     		movs	r2, #1
 244 0034 1A70     		strb	r2, [r3]
 245              	.L14:
 132:main.c        ****     }
 133:main.c        ****     
 134:main.c        **** }
 246              		.loc 1 134 0
 247 0036 00BF     		nop
 248 0038 0837     		adds	r7, r7, #8
 249              		.cfi_def_cfa_offset 8
 250 003a BD46     		mov	sp, r7
 251              		.cfi_def_cfa_register 13
 252              		@ sp needed
 253 003c 80BD     		pop	{r7, pc}
 254              	.L16:
 255 003e 00BF     		.align	2
 256              	.L15:
 257 0040 00000000 		.word	alarmMeasure
 258 0044 00000000 		.word	timeToMeasure
 259 0048 00000000 		.word	alarmMeasure2
 260 004c 00000000 		.word	timeToMeasure2
 261              		.cfi_endproc
 262              	.LFE67:
 263              		.size	AyoItsTime, .-AyoItsTime
 264              		.section	.text.AlarmReady,"ax",%progbits
 265              		.align	2
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 8


 266              		.global	AlarmReady
 267              		.thumb
 268              		.thumb_func
 269              		.type	AlarmReady, %function
 270              	AlarmReady:
 271              	.LFB68:
 135:main.c        ****         
 136:main.c        **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 137:main.c        **** {
 272              		.loc 1 137 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 8
 275              		@ frame_needed = 1, uses_anonymous_args = 0
 276 0000 80B5     		push	{r7, lr}
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 7, -8
 279              		.cfi_offset 14, -4
 280 0002 82B0     		sub	sp, sp, #8
 281              		.cfi_def_cfa_offset 16
 282 0004 00AF     		add	r7, sp, #0
 283              		.cfi_def_cfa_register 7
 284 0006 7860     		str	r0, [r7, #4]
 285 0008 0B46     		mov	r3, r1
 286 000a FB70     		strb	r3, [r7, #3]
 138:main.c        ****     alarmToBeUpdated->currentCountDownValue--;
 287              		.loc 1 138 0
 288 000c 7B68     		ldr	r3, [r7, #4]
 289 000e 5B88     		ldrh	r3, [r3, #2]	@ movhi
 290 0010 9BB2     		uxth	r3, r3
 291 0012 013B     		subs	r3, r3, #1
 292 0014 9AB2     		uxth	r2, r3
 293 0016 7B68     		ldr	r3, [r7, #4]
 294 0018 5A80     		strh	r2, [r3, #2]	@ movhi
 139:main.c        ****     if(alarmToBeUpdated->currentCountDownValue == 0){
 295              		.loc 1 139 0
 296 001a 7B68     		ldr	r3, [r7, #4]
 297 001c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 298 001e 9BB2     		uxth	r3, r3
 299 0020 002B     		cmp	r3, #0
 300 0022 04D1     		bne	.L18
 140:main.c        ****         ResetAlarm(alarmToBeUpdated);
 301              		.loc 1 140 0
 302 0024 7868     		ldr	r0, [r7, #4]
 303 0026 FFF7FEFF 		bl	ResetAlarm
 141:main.c        ****         return 1u;
 304              		.loc 1 141 0
 305 002a 0123     		movs	r3, #1
 306 002c 09E0     		b	.L19
 307              	.L18:
 142:main.c        ****     } 
 143:main.c        ****     else if(alarmToBeUpdated->countDownResetCondition == alarmType){
 308              		.loc 1 143 0
 309 002e 7B68     		ldr	r3, [r7, #4]
 310 0030 5B79     		ldrb	r3, [r3, #5]
 311 0032 DBB2     		uxtb	r3, r3
 312 0034 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 313 0036 9A42     		cmp	r2, r3
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 9


 314 0038 02D1     		bne	.L20
 144:main.c        ****         ResetAlarm(alarmToBeUpdated);
 315              		.loc 1 144 0
 316 003a 7868     		ldr	r0, [r7, #4]
 317 003c FFF7FEFF 		bl	ResetAlarm
 318              	.L20:
 145:main.c        ****     }
 146:main.c        ****     
 147:main.c        ****     return 0u;
 319              		.loc 1 147 0
 320 0040 0023     		movs	r3, #0
 321              	.L19:
 148:main.c        **** }
 322              		.loc 1 148 0
 323 0042 1846     		mov	r0, r3
 324 0044 0837     		adds	r7, r7, #8
 325              		.cfi_def_cfa_offset 8
 326 0046 BD46     		mov	sp, r7
 327              		.cfi_def_cfa_register 13
 328              		@ sp needed
 329 0048 80BD     		pop	{r7, pc}
 330              		.cfi_endproc
 331              	.LFE68:
 332              		.size	AlarmReady, .-AlarmReady
 333 004a 00BF     		.section	.text.ResetAlarm,"ax",%progbits
 334              		.align	2
 335              		.global	ResetAlarm
 336              		.thumb
 337              		.thumb_func
 338              		.type	ResetAlarm, %function
 339              	ResetAlarm:
 340              	.LFB69:
 149:main.c        **** 
 150:main.c        **** void ResetAlarm(alarm * alarmToBeReset)
 151:main.c        **** {
 341              		.loc 1 151 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 8
 344              		@ frame_needed = 1, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346 0000 80B4     		push	{r7}
 347              		.cfi_def_cfa_offset 4
 348              		.cfi_offset 7, -4
 349 0002 83B0     		sub	sp, sp, #12
 350              		.cfi_def_cfa_offset 16
 351 0004 00AF     		add	r7, sp, #0
 352              		.cfi_def_cfa_register 7
 353 0006 7860     		str	r0, [r7, #4]
 152:main.c        ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 354              		.loc 1 152 0
 355 0008 7B68     		ldr	r3, [r7, #4]
 356 000a 1B88     		ldrh	r3, [r3]	@ movhi
 357 000c 9AB2     		uxth	r2, r3
 358 000e 7B68     		ldr	r3, [r7, #4]
 359 0010 5A80     		strh	r2, [r3, #2]	@ movhi
 153:main.c        **** }
 360              		.loc 1 153 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 10


 361 0012 00BF     		nop
 362 0014 0C37     		adds	r7, r7, #12
 363              		.cfi_def_cfa_offset 4
 364 0016 BD46     		mov	sp, r7
 365              		.cfi_def_cfa_register 13
 366              		@ sp needed
 367 0018 80BC     		pop	{r7}
 368              		.cfi_restore 7
 369              		.cfi_def_cfa_offset 0
 370 001a 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE69:
 373              		.size	ResetAlarm, .-ResetAlarm
 374              		.section	.text.CreateAlarm,"ax",%progbits
 375              		.align	2
 376              		.global	CreateAlarm
 377              		.thumb
 378              		.thumb_func
 379              		.type	CreateAlarm, %function
 380              	CreateAlarm:
 381              	.LFB70:
 154:main.c        **** 
 155:main.c        **** // ==============================================
 156:main.c        **** // Creates a new alarm, which will be handeled by another cutions
 157:main.c        **** // ==============================================
 158:main.c        **** 
 159:main.c        **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 160:main.c        **** {
 382              		.loc 1 160 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 16
 385              		@ frame_needed = 1, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 387 0000 80B4     		push	{r7}
 388              		.cfi_def_cfa_offset 4
 389              		.cfi_offset 7, -4
 390 0002 85B0     		sub	sp, sp, #20
 391              		.cfi_def_cfa_offset 24
 392 0004 00AF     		add	r7, sp, #0
 393              		.cfi_def_cfa_register 7
 394 0006 7860     		str	r0, [r7, #4]
 395 0008 0846     		mov	r0, r1
 396 000a 1146     		mov	r1, r2
 397 000c 1A46     		mov	r2, r3
 398 000e 0346     		mov	r3, r0	@ movhi
 399 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 400 0012 0B46     		mov	r3, r1
 401 0014 7B70     		strb	r3, [r7, #1]
 402 0016 1346     		mov	r3, r2
 403 0018 3B70     		strb	r3, [r7]
 161:main.c        ****     alarm newAlarm;
 162:main.c        ****     
 163:main.c        ****     newAlarm.countDownValue = countDownValue;
 404              		.loc 1 163 0
 405 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 406 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 164:main.c        ****     newAlarm.countDownType = countDownType;
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 11


 407              		.loc 1 164 0
 408 001e 7B78     		ldrb	r3, [r7, #1]
 409 0020 3B73     		strb	r3, [r7, #12]
 165:main.c        ****     newAlarm.countDownResetCondition = countDownResetCondition;
 410              		.loc 1 165 0
 411 0022 3B78     		ldrb	r3, [r7]
 412 0024 7B73     		strb	r3, [r7, #13]
 166:main.c        ****     
 167:main.c        ****     //if you want a reccuring alarm (e.g. resets freshly each hour), then add
 168:main.c        ****     //account for already exprired time using the RTC. Otherwise, set to the countDownValue
 169:main.c        ****     newAlarm.currentCountDownValue = countDownValue;
 413              		.loc 1 169 0
 414 0026 7B88     		ldrh	r3, [r7, #2]	@ movhi
 415 0028 7B81     		strh	r3, [r7, #10]	@ movhi
 170:main.c        ****     
 171:main.c        ****     return newAlarm;
 416              		.loc 1 171 0
 417 002a 7B68     		ldr	r3, [r7, #4]
 418 002c 1A46     		mov	r2, r3
 419 002e 07F10803 		add	r3, r7, #8
 420 0032 1868     		ldr	r0, [r3]	@ unaligned
 421 0034 1060     		str	r0, [r2]	@ unaligned
 422 0036 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 423 0038 9380     		strh	r3, [r2, #4]	@ unaligned
 172:main.c        ****     
 173:main.c        **** }
 424              		.loc 1 173 0
 425 003a 7868     		ldr	r0, [r7, #4]
 426 003c 1437     		adds	r7, r7, #20
 427              		.cfi_def_cfa_offset 4
 428 003e BD46     		mov	sp, r7
 429              		.cfi_def_cfa_register 13
 430              		@ sp needed
 431 0040 80BC     		pop	{r7}
 432              		.cfi_restore 7
 433              		.cfi_def_cfa_offset 0
 434 0042 7047     		bx	lr
 435              		.cfi_endproc
 436              	.LFE70:
 437              		.size	CreateAlarm, .-CreateAlarm
 438              		.section	.text.test_components,"ax",%progbits
 439              		.align	2
 440              		.global	test_components
 441              		.thumb
 442              		.thumb_func
 443              		.type	test_components, %function
 444              	test_components:
 445              	.LFB71:
 174:main.c        **** 
 175:main.c        **** 
 176:main.c        **** void test_components(){
 446              		.loc 1 176 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 776
 449              		@ frame_needed = 1, uses_anonymous_args = 0
 450 0000 80B5     		push	{r7, lr}
 451              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 12


 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 ADF5427D 		sub	sp, sp, #776
 455              		.cfi_def_cfa_offset 784
 456 0006 00AF     		add	r7, sp, #0
 457              		.cfi_def_cfa_register 7
 177:main.c        **** 
 178:main.c        ****     test_t t_level_sensor = level_sensor_test();//test level sensor  
 458              		.loc 1 178 0
 459 0008 07F5C273 		add	r3, r7, #388
 460 000c 1846     		mov	r0, r3
 461 000e FFF7FEFF 		bl	level_sensor_test
 179:main.c        ****     test_t t_sd_card = SD_card_test();
 462              		.loc 1 179 0
 463 0012 3B46     		mov	r3, r7
 464 0014 1846     		mov	r0, r3
 465 0016 FFF7FEFF 		bl	SD_card_test
 180:main.c        ****     uint8 i = 0;
 466              		.loc 1 180 0
 467 001a 0023     		movs	r3, #0
 468 001c 87F80733 		strb	r3, [r7, #775]
 181:main.c        ****     i++;
 469              		.loc 1 181 0
 470 0020 97F80733 		ldrb	r3, [r7, #775]	@ zero_extendqisi2
 471 0024 0133     		adds	r3, r3, #1
 472 0026 87F80733 		strb	r3, [r7, #775]
 182:main.c        ****     //test modem
 183:main.c        ****     //test SD card
 184:main.c        ****     //analog: test battery voltage, solar voltage, and solar current
 185:main.c        ****       
 186:main.c        ****   
 187:main.c        **** }
 473              		.loc 1 187 0
 474 002a 00BF     		nop
 475 002c 07F54277 		add	r7, r7, #776
 476              		.cfi_def_cfa_offset 8
 477 0030 BD46     		mov	sp, r7
 478              		.cfi_def_cfa_register 13
 479              		@ sp needed
 480 0032 80BD     		pop	{r7, pc}
 481              		.cfi_endproc
 482              	.LFE71:
 483              		.size	test_components, .-test_components
 484              		.section	.text.main,"ax",%progbits
 485              		.align	2
 486              		.global	main
 487              		.thumb
 488              		.thumb_func
 489              		.type	main, %function
 490              	main:
 491              	.LFB72:
 188:main.c        **** 
 189:main.c        **** int main(void)
 190:main.c        **** {
 492              		.loc 1 190 0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 13


 495              		@ frame_needed = 1, uses_anonymous_args = 0
 496 0000 80B5     		push	{r7, lr}
 497              		.cfi_def_cfa_offset 8
 498              		.cfi_offset 7, -8
 499              		.cfi_offset 14, -4
 500 0002 00AF     		add	r7, sp, #0
 501              		.cfi_def_cfa_register 7
 191:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 502              		.loc 1 191 0
 503              		.syntax unified
 504              	@ 191 "main.c" 1
 505 0004 62B6     		CPSIE   i
 506              	@ 0 "" 2
 192:main.c        **** 
 193:main.c        ****     ReadyOrNot();
 507              		.loc 1 193 0
 508              		.thumb
 509              		.syntax unified
 510 0006 FFF7FEFF 		bl	ReadyOrNot
 194:main.c        ****     
 195:main.c        ****     test_components();
 511              		.loc 1 195 0
 512 000a FFF7FEFF 		bl	test_components
 513              	.L27:
 196:main.c        ****    
 197:main.c        ****     for(;;)
 198:main.c        ****     {
 199:main.c        ****        if( ! WorkWorkWorkWorkWorkWork() )
 514              		.loc 1 199 0
 515 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 516 0012 0346     		mov	r3, r0
 517 0014 002B     		cmp	r3, #0
 518 0016 FAD1     		bne	.L27
 200:main.c        ****        {
 201:main.c        ****             LayBack();
 519              		.loc 1 201 0
 520 0018 FFF7FEFF 		bl	LayBack
 202:main.c        ****        }
 203:main.c        ****     }
 521              		.loc 1 203 0
 522 001c F7E7     		b	.L27
 523              		.cfi_endproc
 524              	.LFE72:
 525              		.size	main, .-main
 526 001e 00BF     		.text
 527              	.Letext0:
 528              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 529              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 530              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 531              		.file 5 "notoriOS.h"
 532              		.file 6 "testing.h"
 533              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 534              		.section	.debug_info,"",%progbits
 535              	.Ldebug_info0:
 536 0000 23030000 		.4byte	0x323
 537 0004 0400     		.2byte	0x4
 538 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 14


 539 000a 04       		.byte	0x4
 540 000b 01       		.uleb128 0x1
 541 000c 00000000 		.4byte	.LASF46
 542 0010 0C       		.byte	0xc
 543 0011 85020000 		.4byte	.LASF47
 544 0015 FA010000 		.4byte	.LASF48
 545 0019 00000000 		.4byte	.Ldebug_ranges0+0
 546 001d 00000000 		.4byte	0
 547 0021 00000000 		.4byte	.Ldebug_line0
 548 0025 02       		.uleb128 0x2
 549 0026 01       		.byte	0x1
 550 0027 06       		.byte	0x6
 551 0028 0B030000 		.4byte	.LASF0
 552 002c 02       		.uleb128 0x2
 553 002d 01       		.byte	0x1
 554 002e 08       		.byte	0x8
 555 002f 30010000 		.4byte	.LASF1
 556 0033 02       		.uleb128 0x2
 557 0034 02       		.byte	0x2
 558 0035 05       		.byte	0x5
 559 0036 B9020000 		.4byte	.LASF2
 560 003a 02       		.uleb128 0x2
 561 003b 02       		.byte	0x2
 562 003c 07       		.byte	0x7
 563 003d 6C010000 		.4byte	.LASF3
 564 0041 03       		.uleb128 0x3
 565 0042 A7000000 		.4byte	.LASF9
 566 0046 02       		.byte	0x2
 567 0047 3F       		.byte	0x3f
 568 0048 4C000000 		.4byte	0x4c
 569 004c 02       		.uleb128 0x2
 570 004d 04       		.byte	0x4
 571 004e 05       		.byte	0x5
 572 004f DC020000 		.4byte	.LASF4
 573 0053 02       		.uleb128 0x2
 574 0054 04       		.byte	0x4
 575 0055 07       		.byte	0x7
 576 0056 5A010000 		.4byte	.LASF5
 577 005a 02       		.uleb128 0x2
 578 005b 08       		.byte	0x8
 579 005c 05       		.byte	0x5
 580 005d 6E020000 		.4byte	.LASF6
 581 0061 02       		.uleb128 0x2
 582 0062 08       		.byte	0x8
 583 0063 07       		.byte	0x7
 584 0064 CE010000 		.4byte	.LASF7
 585 0068 04       		.uleb128 0x4
 586 0069 04       		.byte	0x4
 587 006a 05       		.byte	0x5
 588 006b 696E7400 		.ascii	"int\000"
 589 006f 02       		.uleb128 0x2
 590 0070 04       		.byte	0x4
 591 0071 07       		.byte	0x7
 592 0072 C1010000 		.4byte	.LASF8
 593 0076 03       		.uleb128 0x3
 594 0077 A7020000 		.4byte	.LASF10
 595 007b 03       		.byte	0x3
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 15


 596 007c 2C       		.byte	0x2c
 597 007d 41000000 		.4byte	0x41
 598 0081 05       		.uleb128 0x5
 599 0082 DC000000 		.4byte	.LASF11
 600 0086 04       		.byte	0x4
 601 0087 E401     		.2byte	0x1e4
 602 0089 2C000000 		.4byte	0x2c
 603 008d 05       		.uleb128 0x5
 604 008e AC010000 		.4byte	.LASF12
 605 0092 04       		.byte	0x4
 606 0093 E501     		.2byte	0x1e5
 607 0095 3A000000 		.4byte	0x3a
 608 0099 02       		.uleb128 0x2
 609 009a 04       		.byte	0x4
 610 009b 04       		.byte	0x4
 611 009c 0F010000 		.4byte	.LASF13
 612 00a0 02       		.uleb128 0x2
 613 00a1 08       		.byte	0x8
 614 00a2 04       		.byte	0x4
 615 00a3 A0010000 		.4byte	.LASF14
 616 00a7 02       		.uleb128 0x2
 617 00a8 01       		.byte	0x1
 618 00a9 08       		.byte	0x8
 619 00aa 8C020000 		.4byte	.LASF15
 620 00ae 02       		.uleb128 0x2
 621 00af 08       		.byte	0x8
 622 00b0 04       		.byte	0x4
 623 00b1 F0020000 		.4byte	.LASF16
 624 00b5 02       		.uleb128 0x2
 625 00b6 04       		.byte	0x4
 626 00b7 07       		.byte	0x7
 627 00b8 7C020000 		.4byte	.LASF17
 628 00bc 06       		.uleb128 0x6
 629 00bd 06       		.byte	0x6
 630 00be 05       		.byte	0x5
 631 00bf 18       		.byte	0x18
 632 00c0 F5000000 		.4byte	0xf5
 633 00c4 07       		.uleb128 0x7
 634 00c5 3E010000 		.4byte	.LASF18
 635 00c9 05       		.byte	0x5
 636 00ca 1A       		.byte	0x1a
 637 00cb 8D000000 		.4byte	0x8d
 638 00cf 00       		.byte	0
 639 00d0 07       		.uleb128 0x7
 640 00d1 91020000 		.4byte	.LASF19
 641 00d5 05       		.byte	0x5
 642 00d6 1B       		.byte	0x1b
 643 00d7 8D000000 		.4byte	0x8d
 644 00db 02       		.byte	0x2
 645 00dc 07       		.uleb128 0x7
 646 00dd 92010000 		.4byte	.LASF20
 647 00e1 05       		.byte	0x5
 648 00e2 1C       		.byte	0x1c
 649 00e3 81000000 		.4byte	0x81
 650 00e7 04       		.byte	0x4
 651 00e8 07       		.uleb128 0x7
 652 00e9 C4000000 		.4byte	.LASF21
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 16


 653 00ed 05       		.byte	0x5
 654 00ee 1D       		.byte	0x1d
 655 00ef 81000000 		.4byte	0x81
 656 00f3 05       		.byte	0x5
 657 00f4 00       		.byte	0
 658 00f5 03       		.uleb128 0x3
 659 00f6 7F010000 		.4byte	.LASF22
 660 00fa 05       		.byte	0x5
 661 00fb 1F       		.byte	0x1f
 662 00fc 00010000 		.4byte	0x100
 663 0100 08       		.uleb128 0x8
 664 0101 BC000000 		.4byte	0xbc
 665 0105 09       		.uleb128 0x9
 666 0106 8101     		.2byte	0x181
 667 0108 06       		.byte	0x6
 668 0109 0A       		.byte	0xa
 669 010a 33010000 		.4byte	0x133
 670 010e 07       		.uleb128 0x7
 671 010f D2020000 		.4byte	.LASF23
 672 0113 06       		.byte	0x6
 673 0114 0B       		.byte	0xb
 674 0115 33010000 		.4byte	0x133
 675 0119 00       		.byte	0
 676 011a 07       		.uleb128 0x7
 677 011b E2000000 		.4byte	.LASF24
 678 011f 06       		.byte	0x6
 679 0120 0C       		.byte	0xc
 680 0121 81000000 		.4byte	0x81
 681 0125 80       		.byte	0x80
 682 0126 07       		.uleb128 0x7
 683 0127 E5010000 		.4byte	.LASF25
 684 012b 06       		.byte	0x6
 685 012c 0D       		.byte	0xd
 686 012d 43010000 		.4byte	0x143
 687 0131 81       		.byte	0x81
 688 0132 00       		.byte	0
 689 0133 0A       		.uleb128 0xa
 690 0134 A7000000 		.4byte	0xa7
 691 0138 43010000 		.4byte	0x143
 692 013c 0B       		.uleb128 0xb
 693 013d B5000000 		.4byte	0xb5
 694 0141 7F       		.byte	0x7f
 695 0142 00       		.byte	0
 696 0143 0A       		.uleb128 0xa
 697 0144 A7000000 		.4byte	0xa7
 698 0148 53010000 		.4byte	0x153
 699 014c 0B       		.uleb128 0xb
 700 014d B5000000 		.4byte	0xb5
 701 0151 FF       		.byte	0xff
 702 0152 00       		.byte	0
 703 0153 03       		.uleb128 0x3
 704 0154 B1000000 		.4byte	.LASF26
 705 0158 06       		.byte	0x6
 706 0159 0E       		.byte	0xe
 707 015a 05010000 		.4byte	0x105
 708 015e 0C       		.uleb128 0xc
 709 015f 43020000 		.4byte	.LASF27
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 17


 710 0163 01       		.byte	0x1
 711 0164 1D       		.byte	0x1d
 712 0165 00000000 		.4byte	.LFB63
 713 0169 0C000000 		.4byte	.LFE63-.LFB63
 714 016d 01       		.uleb128 0x1
 715 016e 9C       		.byte	0x9c
 716 016f 0D       		.uleb128 0xd
 717 0170 E5020000 		.4byte	.LASF29
 718 0174 01       		.byte	0x1
 719 0175 29       		.byte	0x29
 720 0176 00000000 		.4byte	.LFB64
 721 017a 54000000 		.4byte	.LFE64-.LFB64
 722 017e 01       		.uleb128 0x1
 723 017f 9C       		.byte	0x9c
 724 0180 0E       		.uleb128 0xe
 725 0181 8E000000 		.4byte	.LASF28
 726 0185 01       		.byte	0x1
 727 0186 43       		.byte	0x43
 728 0187 68000000 		.4byte	0x68
 729 018b 00000000 		.4byte	.LFB65
 730 018f 30000000 		.4byte	.LFE65-.LFB65
 731 0193 01       		.uleb128 0x1
 732 0194 9C       		.byte	0x9c
 733 0195 0D       		.uleb128 0xd
 734 0196 57020000 		.4byte	.LASF30
 735 019a 01       		.byte	0x1
 736 019b 5B       		.byte	0x5b
 737 019c 00000000 		.4byte	.LFB66
 738 01a0 1A000000 		.4byte	.LFE66-.LFB66
 739 01a4 01       		.uleb128 0x1
 740 01a5 9C       		.byte	0x9c
 741 01a6 0F       		.uleb128 0xf
 742 01a7 17030000 		.4byte	.LASF33
 743 01ab 01       		.byte	0x1
 744 01ac 76       		.byte	0x76
 745 01ad 00000000 		.4byte	.LFB67
 746 01b1 50000000 		.4byte	.LFE67-.LFB67
 747 01b5 01       		.uleb128 0x1
 748 01b6 9C       		.byte	0x9c
 749 01b7 CA010000 		.4byte	0x1ca
 750 01bb 10       		.uleb128 0x10
 751 01bc AF020000 		.4byte	.LASF31
 752 01c0 01       		.byte	0x1
 753 01c1 76       		.byte	0x76
 754 01c2 81000000 		.4byte	0x81
 755 01c6 02       		.uleb128 0x2
 756 01c7 91       		.byte	0x91
 757 01c8 77       		.sleb128 -9
 758 01c9 00       		.byte	0
 759 01ca 11       		.uleb128 0x11
 760 01cb FA000000 		.4byte	.LASF36
 761 01cf 01       		.byte	0x1
 762 01d0 88       		.byte	0x88
 763 01d1 81000000 		.4byte	0x81
 764 01d5 00000000 		.4byte	.LFB68
 765 01d9 4A000000 		.4byte	.LFE68-.LFB68
 766 01dd 01       		.uleb128 0x1
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 18


 767 01de 9C       		.byte	0x9c
 768 01df 00020000 		.4byte	0x200
 769 01e3 10       		.uleb128 0x10
 770 01e4 E9000000 		.4byte	.LASF32
 771 01e8 01       		.byte	0x1
 772 01e9 88       		.byte	0x88
 773 01ea 00020000 		.4byte	0x200
 774 01ee 02       		.uleb128 0x2
 775 01ef 91       		.byte	0x91
 776 01f0 74       		.sleb128 -12
 777 01f1 10       		.uleb128 0x10
 778 01f2 AF020000 		.4byte	.LASF31
 779 01f6 01       		.byte	0x1
 780 01f7 88       		.byte	0x88
 781 01f8 81000000 		.4byte	0x81
 782 01fc 02       		.uleb128 0x2
 783 01fd 91       		.byte	0x91
 784 01fe 73       		.sleb128 -13
 785 01ff 00       		.byte	0
 786 0200 12       		.uleb128 0x12
 787 0201 04       		.byte	0x4
 788 0202 F5000000 		.4byte	0xf5
 789 0206 13       		.uleb128 0x13
 790 0207 25010000 		.4byte	.LASF34
 791 020b 01       		.byte	0x1
 792 020c 96       		.byte	0x96
 793 020d 00000000 		.4byte	.LFB69
 794 0211 1C000000 		.4byte	.LFE69-.LFB69
 795 0215 01       		.uleb128 0x1
 796 0216 9C       		.byte	0x9c
 797 0217 2A020000 		.4byte	0x22a
 798 021b 10       		.uleb128 0x10
 799 021c C3020000 		.4byte	.LASF35
 800 0220 01       		.byte	0x1
 801 0221 96       		.byte	0x96
 802 0222 00020000 		.4byte	0x200
 803 0226 02       		.uleb128 0x2
 804 0227 91       		.byte	0x91
 805 0228 74       		.sleb128 -12
 806 0229 00       		.byte	0
 807 022a 14       		.uleb128 0x14
 808 022b B8000000 		.4byte	.LASF37
 809 022f 01       		.byte	0x1
 810 0230 9F       		.byte	0x9f
 811 0231 F5000000 		.4byte	0xf5
 812 0235 00000000 		.4byte	.LFB70
 813 0239 44000000 		.4byte	.LFE70-.LFB70
 814 023d 01       		.uleb128 0x1
 815 023e 9C       		.byte	0x9c
 816 023f 7C020000 		.4byte	0x27c
 817 0243 10       		.uleb128 0x10
 818 0244 3E010000 		.4byte	.LASF18
 819 0248 01       		.byte	0x1
 820 0249 9F       		.byte	0x9f
 821 024a 8D000000 		.4byte	0x8d
 822 024e 02       		.uleb128 0x2
 823 024f 91       		.byte	0x91
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 19


 824 0250 6A       		.sleb128 -22
 825 0251 10       		.uleb128 0x10
 826 0252 92010000 		.4byte	.LASF20
 827 0256 01       		.byte	0x1
 828 0257 9F       		.byte	0x9f
 829 0258 81000000 		.4byte	0x81
 830 025c 02       		.uleb128 0x2
 831 025d 91       		.byte	0x91
 832 025e 69       		.sleb128 -23
 833 025f 10       		.uleb128 0x10
 834 0260 C4000000 		.4byte	.LASF21
 835 0264 01       		.byte	0x1
 836 0265 9F       		.byte	0x9f
 837 0266 81000000 		.4byte	0x81
 838 026a 02       		.uleb128 0x2
 839 026b 91       		.byte	0x91
 840 026c 68       		.sleb128 -24
 841 026d 15       		.uleb128 0x15
 842 026e 4E020000 		.4byte	.LASF38
 843 0272 01       		.byte	0x1
 844 0273 A1       		.byte	0xa1
 845 0274 F5000000 		.4byte	0xf5
 846 0278 02       		.uleb128 0x2
 847 0279 91       		.byte	0x91
 848 027a 70       		.sleb128 -16
 849 027b 00       		.byte	0
 850 027c 16       		.uleb128 0x16
 851 027d 15010000 		.4byte	.LASF49
 852 0281 01       		.byte	0x1
 853 0282 B0       		.byte	0xb0
 854 0283 00000000 		.4byte	.LFB71
 855 0287 34000000 		.4byte	.LFE71-.LFB71
 856 028b 01       		.uleb128 0x1
 857 028c 9C       		.byte	0x9c
 858 028d BC020000 		.4byte	0x2bc
 859 0291 15       		.uleb128 0x15
 860 0292 5F020000 		.4byte	.LASF39
 861 0296 01       		.byte	0x1
 862 0297 B2       		.byte	0xb2
 863 0298 53010000 		.4byte	0x153
 864 029c 03       		.uleb128 0x3
 865 029d 91       		.byte	0x91
 866 029e F47C     		.sleb128 -396
 867 02a0 15       		.uleb128 0x15
 868 02a1 05010000 		.4byte	.LASF40
 869 02a5 01       		.byte	0x1
 870 02a6 B3       		.byte	0xb3
 871 02a7 53010000 		.4byte	0x153
 872 02ab 03       		.uleb128 0x3
 873 02ac 91       		.byte	0x91
 874 02ad F079     		.sleb128 -784
 875 02af 17       		.uleb128 0x17
 876 02b0 6900     		.ascii	"i\000"
 877 02b2 01       		.byte	0x1
 878 02b3 B4       		.byte	0xb4
 879 02b4 81000000 		.4byte	0x81
 880 02b8 02       		.uleb128 0x2
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 20


 881 02b9 91       		.byte	0x91
 882 02ba 77       		.sleb128 -9
 883 02bb 00       		.byte	0
 884 02bc 18       		.uleb128 0x18
 885 02bd A7010000 		.4byte	.LASF50
 886 02c1 01       		.byte	0x1
 887 02c2 BD       		.byte	0xbd
 888 02c3 68000000 		.4byte	0x68
 889 02c7 00000000 		.4byte	.LFB72
 890 02cb 1E000000 		.4byte	.LFE72-.LFB72
 891 02cf 01       		.uleb128 0x1
 892 02d0 9C       		.byte	0x9c
 893 02d1 19       		.uleb128 0x19
 894 02d2 85010000 		.4byte	.LASF41
 895 02d6 07       		.byte	0x7
 896 02d7 1207     		.2byte	0x712
 897 02d9 DD020000 		.4byte	0x2dd
 898 02dd 08       		.uleb128 0x8
 899 02de 76000000 		.4byte	0x76
 900 02e2 1A       		.uleb128 0x1a
 901 02e3 4D010000 		.4byte	.LASF42
 902 02e7 01       		.byte	0x1
 903 02e8 13       		.byte	0x13
 904 02e9 F5000000 		.4byte	0xf5
 905 02ed 05       		.uleb128 0x5
 906 02ee 03       		.byte	0x3
 907 02ef 00000000 		.4byte	alarmMeasure
 908 02f3 1A       		.uleb128 0x1a
 909 02f4 EC010000 		.4byte	.LASF43
 910 02f8 01       		.byte	0x1
 911 02f9 14       		.byte	0x14
 912 02fa 81000000 		.4byte	0x81
 913 02fe 05       		.uleb128 0x5
 914 02ff 03       		.byte	0x3
 915 0300 00000000 		.4byte	timeToMeasure
 916 0304 1A       		.uleb128 0x1a
 917 0305 B3010000 		.4byte	.LASF44
 918 0309 01       		.byte	0x1
 919 030a 15       		.byte	0x15
 920 030b F5000000 		.4byte	0xf5
 921 030f 05       		.uleb128 0x5
 922 0310 03       		.byte	0x3
 923 0311 00000000 		.4byte	alarmMeasure2
 924 0315 1A       		.uleb128 0x1a
 925 0316 FC020000 		.4byte	.LASF45
 926 031a 01       		.byte	0x1
 927 031b 16       		.byte	0x16
 928 031c 81000000 		.4byte	0x81
 929 0320 05       		.uleb128 0x5
 930 0321 03       		.byte	0x3
 931 0322 00000000 		.4byte	timeToMeasure2
 932 0326 00       		.byte	0
 933              		.section	.debug_abbrev,"",%progbits
 934              	.Ldebug_abbrev0:
 935 0000 01       		.uleb128 0x1
 936 0001 11       		.uleb128 0x11
 937 0002 01       		.byte	0x1
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 21


 938 0003 25       		.uleb128 0x25
 939 0004 0E       		.uleb128 0xe
 940 0005 13       		.uleb128 0x13
 941 0006 0B       		.uleb128 0xb
 942 0007 03       		.uleb128 0x3
 943 0008 0E       		.uleb128 0xe
 944 0009 1B       		.uleb128 0x1b
 945 000a 0E       		.uleb128 0xe
 946 000b 55       		.uleb128 0x55
 947 000c 17       		.uleb128 0x17
 948 000d 11       		.uleb128 0x11
 949 000e 01       		.uleb128 0x1
 950 000f 10       		.uleb128 0x10
 951 0010 17       		.uleb128 0x17
 952 0011 00       		.byte	0
 953 0012 00       		.byte	0
 954 0013 02       		.uleb128 0x2
 955 0014 24       		.uleb128 0x24
 956 0015 00       		.byte	0
 957 0016 0B       		.uleb128 0xb
 958 0017 0B       		.uleb128 0xb
 959 0018 3E       		.uleb128 0x3e
 960 0019 0B       		.uleb128 0xb
 961 001a 03       		.uleb128 0x3
 962 001b 0E       		.uleb128 0xe
 963 001c 00       		.byte	0
 964 001d 00       		.byte	0
 965 001e 03       		.uleb128 0x3
 966 001f 16       		.uleb128 0x16
 967 0020 00       		.byte	0
 968 0021 03       		.uleb128 0x3
 969 0022 0E       		.uleb128 0xe
 970 0023 3A       		.uleb128 0x3a
 971 0024 0B       		.uleb128 0xb
 972 0025 3B       		.uleb128 0x3b
 973 0026 0B       		.uleb128 0xb
 974 0027 49       		.uleb128 0x49
 975 0028 13       		.uleb128 0x13
 976 0029 00       		.byte	0
 977 002a 00       		.byte	0
 978 002b 04       		.uleb128 0x4
 979 002c 24       		.uleb128 0x24
 980 002d 00       		.byte	0
 981 002e 0B       		.uleb128 0xb
 982 002f 0B       		.uleb128 0xb
 983 0030 3E       		.uleb128 0x3e
 984 0031 0B       		.uleb128 0xb
 985 0032 03       		.uleb128 0x3
 986 0033 08       		.uleb128 0x8
 987 0034 00       		.byte	0
 988 0035 00       		.byte	0
 989 0036 05       		.uleb128 0x5
 990 0037 16       		.uleb128 0x16
 991 0038 00       		.byte	0
 992 0039 03       		.uleb128 0x3
 993 003a 0E       		.uleb128 0xe
 994 003b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 22


 995 003c 0B       		.uleb128 0xb
 996 003d 3B       		.uleb128 0x3b
 997 003e 05       		.uleb128 0x5
 998 003f 49       		.uleb128 0x49
 999 0040 13       		.uleb128 0x13
 1000 0041 00       		.byte	0
 1001 0042 00       		.byte	0
 1002 0043 06       		.uleb128 0x6
 1003 0044 13       		.uleb128 0x13
 1004 0045 01       		.byte	0x1
 1005 0046 0B       		.uleb128 0xb
 1006 0047 0B       		.uleb128 0xb
 1007 0048 3A       		.uleb128 0x3a
 1008 0049 0B       		.uleb128 0xb
 1009 004a 3B       		.uleb128 0x3b
 1010 004b 0B       		.uleb128 0xb
 1011 004c 01       		.uleb128 0x1
 1012 004d 13       		.uleb128 0x13
 1013 004e 00       		.byte	0
 1014 004f 00       		.byte	0
 1015 0050 07       		.uleb128 0x7
 1016 0051 0D       		.uleb128 0xd
 1017 0052 00       		.byte	0
 1018 0053 03       		.uleb128 0x3
 1019 0054 0E       		.uleb128 0xe
 1020 0055 3A       		.uleb128 0x3a
 1021 0056 0B       		.uleb128 0xb
 1022 0057 3B       		.uleb128 0x3b
 1023 0058 0B       		.uleb128 0xb
 1024 0059 49       		.uleb128 0x49
 1025 005a 13       		.uleb128 0x13
 1026 005b 38       		.uleb128 0x38
 1027 005c 0B       		.uleb128 0xb
 1028 005d 00       		.byte	0
 1029 005e 00       		.byte	0
 1030 005f 08       		.uleb128 0x8
 1031 0060 35       		.uleb128 0x35
 1032 0061 00       		.byte	0
 1033 0062 49       		.uleb128 0x49
 1034 0063 13       		.uleb128 0x13
 1035 0064 00       		.byte	0
 1036 0065 00       		.byte	0
 1037 0066 09       		.uleb128 0x9
 1038 0067 13       		.uleb128 0x13
 1039 0068 01       		.byte	0x1
 1040 0069 0B       		.uleb128 0xb
 1041 006a 05       		.uleb128 0x5
 1042 006b 3A       		.uleb128 0x3a
 1043 006c 0B       		.uleb128 0xb
 1044 006d 3B       		.uleb128 0x3b
 1045 006e 0B       		.uleb128 0xb
 1046 006f 01       		.uleb128 0x1
 1047 0070 13       		.uleb128 0x13
 1048 0071 00       		.byte	0
 1049 0072 00       		.byte	0
 1050 0073 0A       		.uleb128 0xa
 1051 0074 01       		.uleb128 0x1
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 23


 1052 0075 01       		.byte	0x1
 1053 0076 49       		.uleb128 0x49
 1054 0077 13       		.uleb128 0x13
 1055 0078 01       		.uleb128 0x1
 1056 0079 13       		.uleb128 0x13
 1057 007a 00       		.byte	0
 1058 007b 00       		.byte	0
 1059 007c 0B       		.uleb128 0xb
 1060 007d 21       		.uleb128 0x21
 1061 007e 00       		.byte	0
 1062 007f 49       		.uleb128 0x49
 1063 0080 13       		.uleb128 0x13
 1064 0081 2F       		.uleb128 0x2f
 1065 0082 0B       		.uleb128 0xb
 1066 0083 00       		.byte	0
 1067 0084 00       		.byte	0
 1068 0085 0C       		.uleb128 0xc
 1069 0086 2E       		.uleb128 0x2e
 1070 0087 00       		.byte	0
 1071 0088 3F       		.uleb128 0x3f
 1072 0089 19       		.uleb128 0x19
 1073 008a 03       		.uleb128 0x3
 1074 008b 0E       		.uleb128 0xe
 1075 008c 3A       		.uleb128 0x3a
 1076 008d 0B       		.uleb128 0xb
 1077 008e 3B       		.uleb128 0x3b
 1078 008f 0B       		.uleb128 0xb
 1079 0090 27       		.uleb128 0x27
 1080 0091 19       		.uleb128 0x19
 1081 0092 11       		.uleb128 0x11
 1082 0093 01       		.uleb128 0x1
 1083 0094 12       		.uleb128 0x12
 1084 0095 06       		.uleb128 0x6
 1085 0096 40       		.uleb128 0x40
 1086 0097 18       		.uleb128 0x18
 1087 0098 9642     		.uleb128 0x2116
 1088 009a 19       		.uleb128 0x19
 1089 009b 00       		.byte	0
 1090 009c 00       		.byte	0
 1091 009d 0D       		.uleb128 0xd
 1092 009e 2E       		.uleb128 0x2e
 1093 009f 00       		.byte	0
 1094 00a0 3F       		.uleb128 0x3f
 1095 00a1 19       		.uleb128 0x19
 1096 00a2 03       		.uleb128 0x3
 1097 00a3 0E       		.uleb128 0xe
 1098 00a4 3A       		.uleb128 0x3a
 1099 00a5 0B       		.uleb128 0xb
 1100 00a6 3B       		.uleb128 0x3b
 1101 00a7 0B       		.uleb128 0xb
 1102 00a8 11       		.uleb128 0x11
 1103 00a9 01       		.uleb128 0x1
 1104 00aa 12       		.uleb128 0x12
 1105 00ab 06       		.uleb128 0x6
 1106 00ac 40       		.uleb128 0x40
 1107 00ad 18       		.uleb128 0x18
 1108 00ae 9642     		.uleb128 0x2116
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 24


 1109 00b0 19       		.uleb128 0x19
 1110 00b1 00       		.byte	0
 1111 00b2 00       		.byte	0
 1112 00b3 0E       		.uleb128 0xe
 1113 00b4 2E       		.uleb128 0x2e
 1114 00b5 00       		.byte	0
 1115 00b6 3F       		.uleb128 0x3f
 1116 00b7 19       		.uleb128 0x19
 1117 00b8 03       		.uleb128 0x3
 1118 00b9 0E       		.uleb128 0xe
 1119 00ba 3A       		.uleb128 0x3a
 1120 00bb 0B       		.uleb128 0xb
 1121 00bc 3B       		.uleb128 0x3b
 1122 00bd 0B       		.uleb128 0xb
 1123 00be 49       		.uleb128 0x49
 1124 00bf 13       		.uleb128 0x13
 1125 00c0 11       		.uleb128 0x11
 1126 00c1 01       		.uleb128 0x1
 1127 00c2 12       		.uleb128 0x12
 1128 00c3 06       		.uleb128 0x6
 1129 00c4 40       		.uleb128 0x40
 1130 00c5 18       		.uleb128 0x18
 1131 00c6 9642     		.uleb128 0x2116
 1132 00c8 19       		.uleb128 0x19
 1133 00c9 00       		.byte	0
 1134 00ca 00       		.byte	0
 1135 00cb 0F       		.uleb128 0xf
 1136 00cc 2E       		.uleb128 0x2e
 1137 00cd 01       		.byte	0x1
 1138 00ce 3F       		.uleb128 0x3f
 1139 00cf 19       		.uleb128 0x19
 1140 00d0 03       		.uleb128 0x3
 1141 00d1 0E       		.uleb128 0xe
 1142 00d2 3A       		.uleb128 0x3a
 1143 00d3 0B       		.uleb128 0xb
 1144 00d4 3B       		.uleb128 0x3b
 1145 00d5 0B       		.uleb128 0xb
 1146 00d6 27       		.uleb128 0x27
 1147 00d7 19       		.uleb128 0x19
 1148 00d8 11       		.uleb128 0x11
 1149 00d9 01       		.uleb128 0x1
 1150 00da 12       		.uleb128 0x12
 1151 00db 06       		.uleb128 0x6
 1152 00dc 40       		.uleb128 0x40
 1153 00dd 18       		.uleb128 0x18
 1154 00de 9642     		.uleb128 0x2116
 1155 00e0 19       		.uleb128 0x19
 1156 00e1 01       		.uleb128 0x1
 1157 00e2 13       		.uleb128 0x13
 1158 00e3 00       		.byte	0
 1159 00e4 00       		.byte	0
 1160 00e5 10       		.uleb128 0x10
 1161 00e6 05       		.uleb128 0x5
 1162 00e7 00       		.byte	0
 1163 00e8 03       		.uleb128 0x3
 1164 00e9 0E       		.uleb128 0xe
 1165 00ea 3A       		.uleb128 0x3a
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 25


 1166 00eb 0B       		.uleb128 0xb
 1167 00ec 3B       		.uleb128 0x3b
 1168 00ed 0B       		.uleb128 0xb
 1169 00ee 49       		.uleb128 0x49
 1170 00ef 13       		.uleb128 0x13
 1171 00f0 02       		.uleb128 0x2
 1172 00f1 18       		.uleb128 0x18
 1173 00f2 00       		.byte	0
 1174 00f3 00       		.byte	0
 1175 00f4 11       		.uleb128 0x11
 1176 00f5 2E       		.uleb128 0x2e
 1177 00f6 01       		.byte	0x1
 1178 00f7 3F       		.uleb128 0x3f
 1179 00f8 19       		.uleb128 0x19
 1180 00f9 03       		.uleb128 0x3
 1181 00fa 0E       		.uleb128 0xe
 1182 00fb 3A       		.uleb128 0x3a
 1183 00fc 0B       		.uleb128 0xb
 1184 00fd 3B       		.uleb128 0x3b
 1185 00fe 0B       		.uleb128 0xb
 1186 00ff 27       		.uleb128 0x27
 1187 0100 19       		.uleb128 0x19
 1188 0101 49       		.uleb128 0x49
 1189 0102 13       		.uleb128 0x13
 1190 0103 11       		.uleb128 0x11
 1191 0104 01       		.uleb128 0x1
 1192 0105 12       		.uleb128 0x12
 1193 0106 06       		.uleb128 0x6
 1194 0107 40       		.uleb128 0x40
 1195 0108 18       		.uleb128 0x18
 1196 0109 9642     		.uleb128 0x2116
 1197 010b 19       		.uleb128 0x19
 1198 010c 01       		.uleb128 0x1
 1199 010d 13       		.uleb128 0x13
 1200 010e 00       		.byte	0
 1201 010f 00       		.byte	0
 1202 0110 12       		.uleb128 0x12
 1203 0111 0F       		.uleb128 0xf
 1204 0112 00       		.byte	0
 1205 0113 0B       		.uleb128 0xb
 1206 0114 0B       		.uleb128 0xb
 1207 0115 49       		.uleb128 0x49
 1208 0116 13       		.uleb128 0x13
 1209 0117 00       		.byte	0
 1210 0118 00       		.byte	0
 1211 0119 13       		.uleb128 0x13
 1212 011a 2E       		.uleb128 0x2e
 1213 011b 01       		.byte	0x1
 1214 011c 3F       		.uleb128 0x3f
 1215 011d 19       		.uleb128 0x19
 1216 011e 03       		.uleb128 0x3
 1217 011f 0E       		.uleb128 0xe
 1218 0120 3A       		.uleb128 0x3a
 1219 0121 0B       		.uleb128 0xb
 1220 0122 3B       		.uleb128 0x3b
 1221 0123 0B       		.uleb128 0xb
 1222 0124 27       		.uleb128 0x27
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 26


 1223 0125 19       		.uleb128 0x19
 1224 0126 11       		.uleb128 0x11
 1225 0127 01       		.uleb128 0x1
 1226 0128 12       		.uleb128 0x12
 1227 0129 06       		.uleb128 0x6
 1228 012a 40       		.uleb128 0x40
 1229 012b 18       		.uleb128 0x18
 1230 012c 9742     		.uleb128 0x2117
 1231 012e 19       		.uleb128 0x19
 1232 012f 01       		.uleb128 0x1
 1233 0130 13       		.uleb128 0x13
 1234 0131 00       		.byte	0
 1235 0132 00       		.byte	0
 1236 0133 14       		.uleb128 0x14
 1237 0134 2E       		.uleb128 0x2e
 1238 0135 01       		.byte	0x1
 1239 0136 3F       		.uleb128 0x3f
 1240 0137 19       		.uleb128 0x19
 1241 0138 03       		.uleb128 0x3
 1242 0139 0E       		.uleb128 0xe
 1243 013a 3A       		.uleb128 0x3a
 1244 013b 0B       		.uleb128 0xb
 1245 013c 3B       		.uleb128 0x3b
 1246 013d 0B       		.uleb128 0xb
 1247 013e 27       		.uleb128 0x27
 1248 013f 19       		.uleb128 0x19
 1249 0140 49       		.uleb128 0x49
 1250 0141 13       		.uleb128 0x13
 1251 0142 11       		.uleb128 0x11
 1252 0143 01       		.uleb128 0x1
 1253 0144 12       		.uleb128 0x12
 1254 0145 06       		.uleb128 0x6
 1255 0146 40       		.uleb128 0x40
 1256 0147 18       		.uleb128 0x18
 1257 0148 9742     		.uleb128 0x2117
 1258 014a 19       		.uleb128 0x19
 1259 014b 01       		.uleb128 0x1
 1260 014c 13       		.uleb128 0x13
 1261 014d 00       		.byte	0
 1262 014e 00       		.byte	0
 1263 014f 15       		.uleb128 0x15
 1264 0150 34       		.uleb128 0x34
 1265 0151 00       		.byte	0
 1266 0152 03       		.uleb128 0x3
 1267 0153 0E       		.uleb128 0xe
 1268 0154 3A       		.uleb128 0x3a
 1269 0155 0B       		.uleb128 0xb
 1270 0156 3B       		.uleb128 0x3b
 1271 0157 0B       		.uleb128 0xb
 1272 0158 49       		.uleb128 0x49
 1273 0159 13       		.uleb128 0x13
 1274 015a 02       		.uleb128 0x2
 1275 015b 18       		.uleb128 0x18
 1276 015c 00       		.byte	0
 1277 015d 00       		.byte	0
 1278 015e 16       		.uleb128 0x16
 1279 015f 2E       		.uleb128 0x2e
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 27


 1280 0160 01       		.byte	0x1
 1281 0161 3F       		.uleb128 0x3f
 1282 0162 19       		.uleb128 0x19
 1283 0163 03       		.uleb128 0x3
 1284 0164 0E       		.uleb128 0xe
 1285 0165 3A       		.uleb128 0x3a
 1286 0166 0B       		.uleb128 0xb
 1287 0167 3B       		.uleb128 0x3b
 1288 0168 0B       		.uleb128 0xb
 1289 0169 11       		.uleb128 0x11
 1290 016a 01       		.uleb128 0x1
 1291 016b 12       		.uleb128 0x12
 1292 016c 06       		.uleb128 0x6
 1293 016d 40       		.uleb128 0x40
 1294 016e 18       		.uleb128 0x18
 1295 016f 9642     		.uleb128 0x2116
 1296 0171 19       		.uleb128 0x19
 1297 0172 01       		.uleb128 0x1
 1298 0173 13       		.uleb128 0x13
 1299 0174 00       		.byte	0
 1300 0175 00       		.byte	0
 1301 0176 17       		.uleb128 0x17
 1302 0177 34       		.uleb128 0x34
 1303 0178 00       		.byte	0
 1304 0179 03       		.uleb128 0x3
 1305 017a 08       		.uleb128 0x8
 1306 017b 3A       		.uleb128 0x3a
 1307 017c 0B       		.uleb128 0xb
 1308 017d 3B       		.uleb128 0x3b
 1309 017e 0B       		.uleb128 0xb
 1310 017f 49       		.uleb128 0x49
 1311 0180 13       		.uleb128 0x13
 1312 0181 02       		.uleb128 0x2
 1313 0182 18       		.uleb128 0x18
 1314 0183 00       		.byte	0
 1315 0184 00       		.byte	0
 1316 0185 18       		.uleb128 0x18
 1317 0186 2E       		.uleb128 0x2e
 1318 0187 00       		.byte	0
 1319 0188 3F       		.uleb128 0x3f
 1320 0189 19       		.uleb128 0x19
 1321 018a 03       		.uleb128 0x3
 1322 018b 0E       		.uleb128 0xe
 1323 018c 3A       		.uleb128 0x3a
 1324 018d 0B       		.uleb128 0xb
 1325 018e 3B       		.uleb128 0x3b
 1326 018f 0B       		.uleb128 0xb
 1327 0190 27       		.uleb128 0x27
 1328 0191 19       		.uleb128 0x19
 1329 0192 49       		.uleb128 0x49
 1330 0193 13       		.uleb128 0x13
 1331 0194 11       		.uleb128 0x11
 1332 0195 01       		.uleb128 0x1
 1333 0196 12       		.uleb128 0x12
 1334 0197 06       		.uleb128 0x6
 1335 0198 40       		.uleb128 0x40
 1336 0199 18       		.uleb128 0x18
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 28


 1337 019a 9642     		.uleb128 0x2116
 1338 019c 19       		.uleb128 0x19
 1339 019d 00       		.byte	0
 1340 019e 00       		.byte	0
 1341 019f 19       		.uleb128 0x19
 1342 01a0 34       		.uleb128 0x34
 1343 01a1 00       		.byte	0
 1344 01a2 03       		.uleb128 0x3
 1345 01a3 0E       		.uleb128 0xe
 1346 01a4 3A       		.uleb128 0x3a
 1347 01a5 0B       		.uleb128 0xb
 1348 01a6 3B       		.uleb128 0x3b
 1349 01a7 05       		.uleb128 0x5
 1350 01a8 49       		.uleb128 0x49
 1351 01a9 13       		.uleb128 0x13
 1352 01aa 3F       		.uleb128 0x3f
 1353 01ab 19       		.uleb128 0x19
 1354 01ac 3C       		.uleb128 0x3c
 1355 01ad 19       		.uleb128 0x19
 1356 01ae 00       		.byte	0
 1357 01af 00       		.byte	0
 1358 01b0 1A       		.uleb128 0x1a
 1359 01b1 34       		.uleb128 0x34
 1360 01b2 00       		.byte	0
 1361 01b3 03       		.uleb128 0x3
 1362 01b4 0E       		.uleb128 0xe
 1363 01b5 3A       		.uleb128 0x3a
 1364 01b6 0B       		.uleb128 0xb
 1365 01b7 3B       		.uleb128 0x3b
 1366 01b8 0B       		.uleb128 0xb
 1367 01b9 49       		.uleb128 0x49
 1368 01ba 13       		.uleb128 0x13
 1369 01bb 3F       		.uleb128 0x3f
 1370 01bc 19       		.uleb128 0x19
 1371 01bd 02       		.uleb128 0x2
 1372 01be 18       		.uleb128 0x18
 1373 01bf 00       		.byte	0
 1374 01c0 00       		.byte	0
 1375 01c1 00       		.byte	0
 1376              		.section	.debug_aranges,"",%progbits
 1377 0000 64000000 		.4byte	0x64
 1378 0004 0200     		.2byte	0x2
 1379 0006 00000000 		.4byte	.Ldebug_info0
 1380 000a 04       		.byte	0x4
 1381 000b 00       		.byte	0
 1382 000c 0000     		.2byte	0
 1383 000e 0000     		.2byte	0
 1384 0010 00000000 		.4byte	.LFB63
 1385 0014 0C000000 		.4byte	.LFE63-.LFB63
 1386 0018 00000000 		.4byte	.LFB64
 1387 001c 54000000 		.4byte	.LFE64-.LFB64
 1388 0020 00000000 		.4byte	.LFB65
 1389 0024 30000000 		.4byte	.LFE65-.LFB65
 1390 0028 00000000 		.4byte	.LFB66
 1391 002c 1A000000 		.4byte	.LFE66-.LFB66
 1392 0030 00000000 		.4byte	.LFB67
 1393 0034 50000000 		.4byte	.LFE67-.LFB67
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 29


 1394 0038 00000000 		.4byte	.LFB68
 1395 003c 4A000000 		.4byte	.LFE68-.LFB68
 1396 0040 00000000 		.4byte	.LFB69
 1397 0044 1C000000 		.4byte	.LFE69-.LFB69
 1398 0048 00000000 		.4byte	.LFB70
 1399 004c 44000000 		.4byte	.LFE70-.LFB70
 1400 0050 00000000 		.4byte	.LFB71
 1401 0054 34000000 		.4byte	.LFE71-.LFB71
 1402 0058 00000000 		.4byte	.LFB72
 1403 005c 1E000000 		.4byte	.LFE72-.LFB72
 1404 0060 00000000 		.4byte	0
 1405 0064 00000000 		.4byte	0
 1406              		.section	.debug_ranges,"",%progbits
 1407              	.Ldebug_ranges0:
 1408 0000 00000000 		.4byte	.LFB63
 1409 0004 0C000000 		.4byte	.LFE63
 1410 0008 00000000 		.4byte	.LFB64
 1411 000c 54000000 		.4byte	.LFE64
 1412 0010 00000000 		.4byte	.LFB65
 1413 0014 30000000 		.4byte	.LFE65
 1414 0018 00000000 		.4byte	.LFB66
 1415 001c 1A000000 		.4byte	.LFE66
 1416 0020 00000000 		.4byte	.LFB67
 1417 0024 50000000 		.4byte	.LFE67
 1418 0028 00000000 		.4byte	.LFB68
 1419 002c 4A000000 		.4byte	.LFE68
 1420 0030 00000000 		.4byte	.LFB69
 1421 0034 1C000000 		.4byte	.LFE69
 1422 0038 00000000 		.4byte	.LFB70
 1423 003c 44000000 		.4byte	.LFE70
 1424 0040 00000000 		.4byte	.LFB71
 1425 0044 34000000 		.4byte	.LFE71
 1426 0048 00000000 		.4byte	.LFB72
 1427 004c 1E000000 		.4byte	.LFE72
 1428 0050 00000000 		.4byte	0
 1429 0054 00000000 		.4byte	0
 1430              		.section	.debug_line,"",%progbits
 1431              	.Ldebug_line0:
 1432 0000 40020000 		.section	.debug_str,"MS",%progbits,1
 1432      02006701 
 1432      00000201 
 1432      FB0E0D00 
 1432      01010101 
 1433              	.LASF46:
 1434 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1434      43313120 
 1434      352E342E 
 1434      31203230 
 1434      31363036 
 1435 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1435      20726576 
 1435      6973696F 
 1435      6E203233 
 1435      37373135 
 1436 0066 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1436      66756E63 
 1436      74696F6E 
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 30


 1436      2D736563 
 1436      74696F6E 
 1437              	.LASF28:
 1438 008e 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 1438      576F726B 
 1438      576F726B 
 1438      576F726B 
 1438      576F726B 
 1439              	.LASF9:
 1440 00a7 5F5F696E 		.ascii	"__int32_t\000"
 1440      7433325F 
 1440      7400
 1441              	.LASF26:
 1442 00b1 74657374 		.ascii	"test_t\000"
 1442      5F7400
 1443              	.LASF37:
 1444 00b8 43726561 		.ascii	"CreateAlarm\000"
 1444      7465416C 
 1444      61726D00 
 1445              	.LASF21:
 1446 00c4 636F756E 		.ascii	"countDownResetCondition\000"
 1446      74446F77 
 1446      6E526573 
 1446      6574436F 
 1446      6E646974 
 1447              	.LASF11:
 1448 00dc 75696E74 		.ascii	"uint8\000"
 1448      3800
 1449              	.LASF24:
 1450 00e2 73746174 		.ascii	"status\000"
 1450      757300
 1451              	.LASF32:
 1452 00e9 616C6172 		.ascii	"alarmToBeUpdated\000"
 1452      6D546F42 
 1452      65557064 
 1452      61746564 
 1452      00
 1453              	.LASF36:
 1454 00fa 416C6172 		.ascii	"AlarmReady\000"
 1454      6D526561 
 1454      647900
 1455              	.LASF40:
 1456 0105 745F7364 		.ascii	"t_sd_card\000"
 1456      5F636172 
 1456      6400
 1457              	.LASF13:
 1458 010f 666C6F61 		.ascii	"float\000"
 1458      7400
 1459              	.LASF49:
 1460 0115 74657374 		.ascii	"test_components\000"
 1460      5F636F6D 
 1460      706F6E65 
 1460      6E747300 
 1461              	.LASF34:
 1462 0125 52657365 		.ascii	"ResetAlarm\000"
 1462      74416C61 
 1462      726D00
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 31


 1463              	.LASF1:
 1464 0130 756E7369 		.ascii	"unsigned char\000"
 1464      676E6564 
 1464      20636861 
 1464      7200
 1465              	.LASF18:
 1466 013e 636F756E 		.ascii	"countDownValue\000"
 1466      74446F77 
 1466      6E56616C 
 1466      756500
 1467              	.LASF42:
 1468 014d 616C6172 		.ascii	"alarmMeasure\000"
 1468      6D4D6561 
 1468      73757265 
 1468      00
 1469              	.LASF5:
 1470 015a 6C6F6E67 		.ascii	"long unsigned int\000"
 1470      20756E73 
 1470      69676E65 
 1470      6420696E 
 1470      7400
 1471              	.LASF3:
 1472 016c 73686F72 		.ascii	"short unsigned int\000"
 1472      7420756E 
 1472      7369676E 
 1472      65642069 
 1472      6E7400
 1473              	.LASF22:
 1474 017f 616C6172 		.ascii	"alarm\000"
 1474      6D00
 1475              	.LASF41:
 1476 0185 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1476      52784275 
 1476      66666572 
 1476      00
 1477              	.LASF20:
 1478 0192 636F756E 		.ascii	"countDownType\000"
 1478      74446F77 
 1478      6E547970 
 1478      6500
 1479              	.LASF14:
 1480 01a0 646F7562 		.ascii	"double\000"
 1480      6C6500
 1481              	.LASF50:
 1482 01a7 6D61696E 		.ascii	"main\000"
 1482      00
 1483              	.LASF12:
 1484 01ac 75696E74 		.ascii	"uint16\000"
 1484      313600
 1485              	.LASF44:
 1486 01b3 616C6172 		.ascii	"alarmMeasure2\000"
 1486      6D4D6561 
 1486      73757265 
 1486      3200
 1487              	.LASF8:
 1488 01c1 756E7369 		.ascii	"unsigned int\000"
 1488      676E6564 
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 32


 1488      20696E74 
 1488      00
 1489              	.LASF7:
 1490 01ce 6C6F6E67 		.ascii	"long long unsigned int\000"
 1490      206C6F6E 
 1490      6720756E 
 1490      7369676E 
 1490      65642069 
 1491              	.LASF25:
 1492 01e5 72656173 		.ascii	"reason\000"
 1492      6F6E00
 1493              	.LASF43:
 1494 01ec 74696D65 		.ascii	"timeToMeasure\000"
 1494      546F4D65 
 1494      61737572 
 1494      6500
 1495              	.LASF48:
 1496 01fa 433A5C55 		.ascii	"C:\\Users\\bk\\Documents\\GitHub\\Open Storm\\notor"
 1496      73657273 
 1496      5C626B5C 
 1496      446F6375 
 1496      6D656E74 
 1497 0227 694F535C 		.ascii	"iOS\\notoriOS\\notoriOS.cydsn\000"
 1497      6E6F746F 
 1497      72694F53 
 1497      5C6E6F74 
 1497      6F72694F 
 1498              	.LASF27:
 1499 0243 57616B65 		.ascii	"Wakeup_ISR\000"
 1499      75705F49 
 1499      535200
 1500              	.LASF38:
 1501 024e 6E657741 		.ascii	"newAlarm\000"
 1501      6C61726D 
 1501      00
 1502              	.LASF30:
 1503 0257 4C617942 		.ascii	"LayBack\000"
 1503      61636B00 
 1504              	.LASF39:
 1505 025f 745F6C65 		.ascii	"t_level_sensor\000"
 1505      76656C5F 
 1505      73656E73 
 1505      6F7200
 1506              	.LASF6:
 1507 026e 6C6F6E67 		.ascii	"long long int\000"
 1507      206C6F6E 
 1507      6720696E 
 1507      7400
 1508              	.LASF17:
 1509 027c 73697A65 		.ascii	"sizetype\000"
 1509      74797065 
 1509      00
 1510              	.LASF47:
 1511 0285 6D61696E 		.ascii	"main.c\000"
 1511      2E6300
 1512              	.LASF15:
 1513 028c 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccd4Mb88.s 			page 33


 1513      00
 1514              	.LASF19:
 1515 0291 63757272 		.ascii	"currentCountDownValue\000"
 1515      656E7443 
 1515      6F756E74 
 1515      446F776E 
 1515      56616C75 
 1516              	.LASF10:
 1517 02a7 696E7433 		.ascii	"int32_t\000"
 1517      325F7400 
 1518              	.LASF31:
 1519 02af 616C6172 		.ascii	"alarmType\000"
 1519      6D547970 
 1519      6500
 1520              	.LASF2:
 1521 02b9 73686F72 		.ascii	"short int\000"
 1521      7420696E 
 1521      7400
 1522              	.LASF35:
 1523 02c3 616C6172 		.ascii	"alarmToBeReset\000"
 1523      6D546F42 
 1523      65526573 
 1523      657400
 1524              	.LASF23:
 1525 02d2 74657374 		.ascii	"test_name\000"
 1525      5F6E616D 
 1525      6500
 1526              	.LASF4:
 1527 02dc 6C6F6E67 		.ascii	"long int\000"
 1527      20696E74 
 1527      00
 1528              	.LASF29:
 1529 02e5 52656164 		.ascii	"ReadyOrNot\000"
 1529      794F724E 
 1529      6F7400
 1530              	.LASF16:
 1531 02f0 6C6F6E67 		.ascii	"long double\000"
 1531      20646F75 
 1531      626C6500 
 1532              	.LASF45:
 1533 02fc 74696D65 		.ascii	"timeToMeasure2\000"
 1533      546F4D65 
 1533      61737572 
 1533      653200
 1534              	.LASF0:
 1535 030b 7369676E 		.ascii	"signed char\000"
 1535      65642063 
 1535      68617200 
 1536              	.LASF33:
 1537 0317 41796F49 		.ascii	"AyoItsTime\000"
 1537      74735469 
 1537      6D6500
 1538              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
