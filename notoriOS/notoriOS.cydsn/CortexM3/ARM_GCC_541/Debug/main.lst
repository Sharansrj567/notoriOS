ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	debug_string,100,4
  20              		.syntax unified
  21              		.global _printf_float
  22              		.thumb
  23              		.syntax unified
  24              		.comm	alarmMeasure,6,4
  25              		.comm	timeToMeasure,1,1
  26              		.comm	alarmMeasure2,6,4
  27              		.comm	timeToMeasure2,1,1
  28              		.section	.text.Wakeup_ISR,"ax",%progbits
  29              		.align	2
  30              		.global	Wakeup_ISR
  31              		.thumb
  32              		.thumb_func
  33              		.type	Wakeup_ISR, %function
  34              	Wakeup_ISR:
  35              	.LFB64:
  36              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * OPEN-STORM.ORG
   4:main.c        ****  * notoriOS
   5:main.c        ****  * A non-premptive operating system for node.
   6:main.c        ****  *
   7:main.c        ****  * "To all the teachers that told me I'd never amount to nothin"
   8:main.c        ****  *      -Notorious BIG (1994)
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** #include "project.h"
  13:main.c        **** #include "notoriOS.h"
  14:main.c        **** #include "level_sensor.h"
  15:main.c        **** #include "sd_card.h"
  16:main.c        **** #include "voltages.h"
  17:main.c        **** #include "debug.h"
  18:main.c        **** #include "modem.h"
  19:main.c        **** 
  20:main.c        **** 
  21:main.c        **** 
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 2


  22:main.c        **** 
  23:main.c        **** 
  24:main.c        **** 
  25:main.c        **** //global variables
  26:main.c        **** alarm alarmMeasure;
  27:main.c        **** uint8 timeToMeasure;
  28:main.c        **** alarm alarmMeasure2;
  29:main.c        **** uint8 timeToMeasure2;
  30:main.c        **** 
  31:main.c        **** 
  32:main.c        **** // This function must always be called (when the Sleep Timer's interrupt
  33:main.c        **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  34:main.c        **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  35:main.c        **** // of the ILO) after CTW event occurred.
  36:main.c        **** CY_ISR(Wakeup_ISR) {
  37              		.loc 1 36 0
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 0
  40              		@ frame_needed = 1, uses_anonymous_args = 0
  41 0000 80B5     		push	{r7, lr}
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  37:main.c        ****     SleepTimer_GetStatus();
  47              		.loc 1 37 0
  48 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  38:main.c        **** }
  49              		.loc 1 38 0
  50 0008 00BF     		nop
  51 000a 80BD     		pop	{r7, pc}
  52              		.cfi_endproc
  53              	.LFE64:
  54              		.size	Wakeup_ISR, .-Wakeup_ISR
  55              		.section	.text.ReadyOrNot,"ax",%progbits
  56              		.align	2
  57              		.global	ReadyOrNot
  58              		.thumb
  59              		.thumb_func
  60              		.type	ReadyOrNot, %function
  61              	ReadyOrNot:
  62              	.LFB65:
  39:main.c        **** 
  40:main.c        **** 
  41:main.c        **** // ==============================================
  42:main.c        **** // Ready or not, here I come, you can't hide
  43:main.c        **** // Gonna find you and take it slowly
  44:main.c        **** //      - The Fugees (1996)
  45:main.c        **** //
  46:main.c        **** // Initialize and critical hardware or routines 
  47:main.c        **** // ==============================================
  48:main.c        **** void ReadyOrNot()
  49:main.c        **** {
  63              		.loc 1 49 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 3


  66              		@ frame_needed = 1, uses_anonymous_args = 0
  67 0000 90B5     		push	{r4, r7, lr}
  68              		.cfi_def_cfa_offset 12
  69              		.cfi_offset 4, -12
  70              		.cfi_offset 7, -8
  71              		.cfi_offset 14, -4
  72 0002 83B0     		sub	sp, sp, #12
  73              		.cfi_def_cfa_offset 24
  74 0004 00AF     		add	r7, sp, #0
  75              		.cfi_def_cfa_register 7
  50:main.c        ****     
  51:main.c        ****     isr_SleepTimer_StartEx(Wakeup_ISR);// Start Sleep ISR
  76              		.loc 1 51 0
  77 0006 1148     		ldr	r0, .L3
  78 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
  52:main.c        ****     SleepTimer_Start();             // Start SleepTimer Component
  79              		.loc 1 52 0
  80 000c FFF7FEFF 		bl	SleepTimer_Start
  53:main.c        ****     
  54:main.c        ****     RTC_WriteIntervalMask(0b11111111);
  81              		.loc 1 54 0
  82 0010 FF20     		movs	r0, #255
  83 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  55:main.c        ****     RTC_Start();
  84              		.loc 1 55 0
  85 0016 FFF7FEFF 		bl	RTC_Start
  56:main.c        ****     debug_start();
  86              		.loc 1 56 0
  87 001a FFF7FEFF 		bl	debug_start
  57:main.c        ****     
  58:main.c        ****     modem_intilize();
  88              		.loc 1 58 0
  89 001e FFF7FEFF 		bl	modem_intilize
  59:main.c        ****     
  60:main.c        **** 
  61:main.c        ****     
  62:main.c        ****     alarmMeasure = CreateAlarm(2,ALARM_TYPE_SECOND,ALARM_TYPE_CONTINUOUS);
  90              		.loc 1 62 0
  91 0022 0B4C     		ldr	r4, .L3+4
  92 0024 3846     		mov	r0, r7
  93 0026 0723     		movs	r3, #7
  94 0028 0022     		movs	r2, #0
  95 002a 0221     		movs	r1, #2
  96 002c FFF7FEFF 		bl	CreateAlarm
  97 0030 2246     		mov	r2, r4
  98 0032 3B46     		mov	r3, r7
  99 0034 1968     		ldr	r1, [r3]	@ unaligned
 100 0036 1160     		str	r1, [r2]	@ unaligned
 101 0038 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 102 003a 9380     		strh	r3, [r2, #4]	@ unaligned
  63:main.c        ****     timeToMeasure = 0;
 103              		.loc 1 63 0
 104 003c 054B     		ldr	r3, .L3+8
 105 003e 0022     		movs	r2, #0
 106 0040 1A70     		strb	r2, [r3]
  64:main.c        ****     //alarmMeasure2 = CreateAlarm(10,ALARM_TYPE_SECOND,ALARM_TYPE_CONTINUOUS);
  65:main.c        ****     //timeToMeasure = 0;
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 4


  66:main.c        ****     
  67:main.c        ****     
  68:main.c        **** }
 107              		.loc 1 68 0
 108 0042 00BF     		nop
 109 0044 0C37     		adds	r7, r7, #12
 110              		.cfi_def_cfa_offset 12
 111 0046 BD46     		mov	sp, r7
 112              		.cfi_def_cfa_register 13
 113              		@ sp needed
 114 0048 90BD     		pop	{r4, r7, pc}
 115              	.L4:
 116 004a 00BF     		.align	2
 117              	.L3:
 118 004c 00000000 		.word	Wakeup_ISR
 119 0050 00000000 		.word	alarmMeasure
 120 0054 00000000 		.word	timeToMeasure
 121              		.cfi_endproc
 122              	.LFE65:
 123              		.size	ReadyOrNot, .-ReadyOrNot
 124              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 125              		.align	2
 126              		.global	WorkWorkWorkWorkWorkWork
 127              		.thumb
 128              		.thumb_func
 129              		.type	WorkWorkWorkWorkWorkWork, %function
 130              	WorkWorkWorkWorkWorkWork:
 131              	.LFB66:
  69:main.c        **** 
  70:main.c        **** // ==============================================
  71:main.c        **** // You see me I be work, work, work, work, work, work 
  72:main.c        **** //      - Rhiana, feat Drake (2016)
  73:main.c        **** //
  74:main.c        **** // Prorcesses core tasks
  75:main.c        **** // ==============================================
  76:main.c        **** int WorkWorkWorkWorkWorkWork()
  77:main.c        **** {
 132              		.loc 1 77 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 1, uses_anonymous_args = 0
 136 0000 80B5     		push	{r7, lr}
 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 7, -8
 139              		.cfi_offset 14, -4
 140 0002 00AF     		add	r7, sp, #0
 141              		.cfi_def_cfa_register 7
  78:main.c        ****     
  79:main.c        ****     if(timeToMeasure){
 142              		.loc 1 79 0
 143 0004 094B     		ldr	r3, .L8
 144 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 145 0008 002B     		cmp	r3, #0
 146 000a 0BD0     		beq	.L6
  80:main.c        ****        
  81:main.c        **** 
  82:main.c        ****        //printNotif("Light ON");
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 5


  83:main.c        ****        
  84:main.c        ****        LED_Write(1u);
 147              		.loc 1 84 0
 148 000c 0120     		movs	r0, #1
 149 000e FFF7FEFF 		bl	LED_Write
  85:main.c        ****        CyDelay(100u);
 150              		.loc 1 85 0
 151 0012 6420     		movs	r0, #100
 152 0014 FFF7FEFF 		bl	CyDelay
  86:main.c        ****        LED_Write(0u);
 153              		.loc 1 86 0
 154 0018 0020     		movs	r0, #0
 155 001a FFF7FEFF 		bl	LED_Write
  87:main.c        ****        timeToMeasure = 0u;
 156              		.loc 1 87 0
 157 001e 034B     		ldr	r3, .L8
 158 0020 0022     		movs	r2, #0
 159 0022 1A70     		strb	r2, [r3]
 160              	.L6:
  88:main.c        ****     
  89:main.c        ****        //printNotif("Light Off");
  90:main.c        ****        
  91:main.c        ****        
  92:main.c        ****     }
  93:main.c        ****     //if(timeToMeasure2){
  94:main.c        ****         //dosomething
  95:main.c        ****     //}
  96:main.c        ****     
  97:main.c        ****     return 0;   
 161              		.loc 1 97 0
 162 0024 0023     		movs	r3, #0
  98:main.c        **** }
 163              		.loc 1 98 0
 164 0026 1846     		mov	r0, r3
 165 0028 80BD     		pop	{r7, pc}
 166              	.L9:
 167 002a 00BF     		.align	2
 168              	.L8:
 169 002c 00000000 		.word	timeToMeasure
 170              		.cfi_endproc
 171              	.LFE66:
 172              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 173              		.section	.text.LayBack,"ax",%progbits
 174              		.align	2
 175              		.global	LayBack
 176              		.thumb
 177              		.thumb_func
 178              		.type	LayBack, %function
 179              	LayBack:
 180              	.LFB67:
  99:main.c        **** 
 100:main.c        **** 
 101:main.c        **** 
 102:main.c        **** 
 103:main.c        **** // ==============================================
 104:main.c        **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
 105:main.c        **** //      - Snoop Dogg (1993)
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 6


 106:main.c        **** //
 107:main.c        **** // Put all hardware to sleep and go into low power mode to conserve Amps
 108:main.c        **** // ==============================================
 109:main.c        **** void LayBack()
 110:main.c        **** {
 181              		.loc 1 110 0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 1, uses_anonymous_args = 0
 185 0000 80B5     		push	{r7, lr}
 186              		.cfi_def_cfa_offset 8
 187              		.cfi_offset 7, -8
 188              		.cfi_offset 14, -4
 189 0002 00AF     		add	r7, sp, #0
 190              		.cfi_def_cfa_register 7
 111:main.c        ****     
 112:main.c        ****     debug_sleep();
 191              		.loc 1 112 0
 192 0004 FFF7FEFF 		bl	debug_sleep
 113:main.c        ****     // Prepares system clocks for the Sleep mode
 114:main.c        ****     CyPmSaveClocks();
 193              		.loc 1 114 0
 194 0008 FFF7FEFF 		bl	CyPmSaveClocks
 115:main.c        ****     
 116:main.c        ****     // Switch to the Sleep Mode for the other devices:
 117:main.c        ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 118:main.c        ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 119:main.c        ****      //  - If real-time clock is used, it will also wake the device
 120:main.c        ****     //CyPmHibernate();
 121:main.c        ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW);
 195              		.loc 1 121 0
 196 000c 4FF40061 		mov	r1, #2048
 197 0010 0020     		movs	r0, #0
 198 0012 FFF7FEFF 		bl	CyPmSleep
 122:main.c        ****   
 123:main.c        ****     // Restore clock configuration
 124:main.c        ****     CyPmRestoreClocks();
 199              		.loc 1 124 0
 200 0016 FFF7FEFF 		bl	CyPmRestoreClocks
 125:main.c        ****     debug_wakeup();
 201              		.loc 1 125 0
 202 001a FFF7FEFF 		bl	debug_wakeup
 126:main.c        ****     
 127:main.c        **** }
 203              		.loc 1 127 0
 204 001e 00BF     		nop
 205 0020 80BD     		pop	{r7, pc}
 206              		.cfi_endproc
 207              	.LFE67:
 208              		.size	LayBack, .-LayBack
 209 0022 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 210              		.align	2
 211              		.global	AyoItsTime
 212              		.thumb
 213              		.thumb_func
 214              		.type	AyoItsTime, %function
 215              	AyoItsTime:
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 7


 216              	.LFB68:
 128:main.c        **** 
 129:main.c        **** 
 130:main.c        **** // ==============================================
 131:main.c        **** // I never sleep, 'cause sleep is the cousin of death
 132:main.c        **** //      - NAS (1994)
 133:main.c        **** //
 134:main.c        **** // This is the scheduler. It's called from various interrupts and timers,
 135:main.c        **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 136:main.c        **** // It will add tasks to the work queue,
 137:main.c        **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 138:main.c        **** // ==============================================
 139:main.c        **** void AyoItsTime(uint8 alarmType)
 140:main.c        **** {
 217              		.loc 1 140 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 8
 220              		@ frame_needed = 1, uses_anonymous_args = 0
 221 0000 80B5     		push	{r7, lr}
 222              		.cfi_def_cfa_offset 8
 223              		.cfi_offset 7, -8
 224              		.cfi_offset 14, -4
 225 0002 82B0     		sub	sp, sp, #8
 226              		.cfi_def_cfa_offset 16
 227 0004 00AF     		add	r7, sp, #0
 228              		.cfi_def_cfa_register 7
 229 0006 0346     		mov	r3, r0
 230 0008 FB71     		strb	r3, [r7, #7]
 141:main.c        **** 
 142:main.c        ****     if(AlarmReady(&alarmMeasure,alarmType))
 231              		.loc 1 142 0
 232 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 233 000c 1946     		mov	r1, r3
 234 000e 0C48     		ldr	r0, .L15
 235 0010 FFF7FEFF 		bl	AlarmReady
 236 0014 0346     		mov	r3, r0
 237 0016 002B     		cmp	r3, #0
 238 0018 02D0     		beq	.L12
 143:main.c        ****     {
 144:main.c        ****          //create new task and pass off to workworkworkworkwork()
 145:main.c        ****         //pass off to work work
 146:main.c        ****         timeToMeasure = 1u;
 239              		.loc 1 146 0
 240 001a 0A4B     		ldr	r3, .L15+4
 241 001c 0122     		movs	r2, #1
 242 001e 1A70     		strb	r2, [r3]
 243              	.L12:
 147:main.c        ****     }
 148:main.c        ****     if(AlarmReady(&alarmMeasure2,alarmType))
 244              		.loc 1 148 0
 245 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 246 0022 1946     		mov	r1, r3
 247 0024 0848     		ldr	r0, .L15+8
 248 0026 FFF7FEFF 		bl	AlarmReady
 249 002a 0346     		mov	r3, r0
 250 002c 002B     		cmp	r3, #0
 251 002e 02D0     		beq	.L14
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 8


 149:main.c        ****     {
 150:main.c        ****          //create new task and pass off to workworkworkworkwork()
 151:main.c        ****         //pass off to work work
 152:main.c        ****         timeToMeasure2 = 1u;
 252              		.loc 1 152 0
 253 0030 064B     		ldr	r3, .L15+12
 254 0032 0122     		movs	r2, #1
 255 0034 1A70     		strb	r2, [r3]
 256              	.L14:
 153:main.c        ****     }
 154:main.c        ****     
 155:main.c        **** }
 257              		.loc 1 155 0
 258 0036 00BF     		nop
 259 0038 0837     		adds	r7, r7, #8
 260              		.cfi_def_cfa_offset 8
 261 003a BD46     		mov	sp, r7
 262              		.cfi_def_cfa_register 13
 263              		@ sp needed
 264 003c 80BD     		pop	{r7, pc}
 265              	.L16:
 266 003e 00BF     		.align	2
 267              	.L15:
 268 0040 00000000 		.word	alarmMeasure
 269 0044 00000000 		.word	timeToMeasure
 270 0048 00000000 		.word	alarmMeasure2
 271 004c 00000000 		.word	timeToMeasure2
 272              		.cfi_endproc
 273              	.LFE68:
 274              		.size	AyoItsTime, .-AyoItsTime
 275              		.section	.text.AlarmReady,"ax",%progbits
 276              		.align	2
 277              		.global	AlarmReady
 278              		.thumb
 279              		.thumb_func
 280              		.type	AlarmReady, %function
 281              	AlarmReady:
 282              	.LFB69:
 156:main.c        ****         
 157:main.c        **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 158:main.c        **** {
 283              		.loc 1 158 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 8
 286              		@ frame_needed = 1, uses_anonymous_args = 0
 287 0000 80B5     		push	{r7, lr}
 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 7, -8
 290              		.cfi_offset 14, -4
 291 0002 82B0     		sub	sp, sp, #8
 292              		.cfi_def_cfa_offset 16
 293 0004 00AF     		add	r7, sp, #0
 294              		.cfi_def_cfa_register 7
 295 0006 7860     		str	r0, [r7, #4]
 296 0008 0B46     		mov	r3, r1
 297 000a FB70     		strb	r3, [r7, #3]
 159:main.c        ****     alarmToBeUpdated->currentCountDownValue--;
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 9


 298              		.loc 1 159 0
 299 000c 7B68     		ldr	r3, [r7, #4]
 300 000e 5B88     		ldrh	r3, [r3, #2]	@ movhi
 301 0010 9BB2     		uxth	r3, r3
 302 0012 013B     		subs	r3, r3, #1
 303 0014 9AB2     		uxth	r2, r3
 304 0016 7B68     		ldr	r3, [r7, #4]
 305 0018 5A80     		strh	r2, [r3, #2]	@ movhi
 160:main.c        ****     if(alarmToBeUpdated->currentCountDownValue == 0){
 306              		.loc 1 160 0
 307 001a 7B68     		ldr	r3, [r7, #4]
 308 001c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 309 001e 9BB2     		uxth	r3, r3
 310 0020 002B     		cmp	r3, #0
 311 0022 04D1     		bne	.L18
 161:main.c        ****         ResetAlarm(alarmToBeUpdated);
 312              		.loc 1 161 0
 313 0024 7868     		ldr	r0, [r7, #4]
 314 0026 FFF7FEFF 		bl	ResetAlarm
 162:main.c        ****         return 1u;
 315              		.loc 1 162 0
 316 002a 0123     		movs	r3, #1
 317 002c 09E0     		b	.L19
 318              	.L18:
 163:main.c        ****     } 
 164:main.c        ****     else if(alarmToBeUpdated->countDownResetCondition == alarmType){
 319              		.loc 1 164 0
 320 002e 7B68     		ldr	r3, [r7, #4]
 321 0030 5B79     		ldrb	r3, [r3, #5]
 322 0032 DBB2     		uxtb	r3, r3
 323 0034 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 324 0036 9A42     		cmp	r2, r3
 325 0038 02D1     		bne	.L20
 165:main.c        ****         ResetAlarm(alarmToBeUpdated);
 326              		.loc 1 165 0
 327 003a 7868     		ldr	r0, [r7, #4]
 328 003c FFF7FEFF 		bl	ResetAlarm
 329              	.L20:
 166:main.c        ****     }
 167:main.c        ****     
 168:main.c        ****     return 0u;
 330              		.loc 1 168 0
 331 0040 0023     		movs	r3, #0
 332              	.L19:
 169:main.c        **** }
 333              		.loc 1 169 0
 334 0042 1846     		mov	r0, r3
 335 0044 0837     		adds	r7, r7, #8
 336              		.cfi_def_cfa_offset 8
 337 0046 BD46     		mov	sp, r7
 338              		.cfi_def_cfa_register 13
 339              		@ sp needed
 340 0048 80BD     		pop	{r7, pc}
 341              		.cfi_endproc
 342              	.LFE69:
 343              		.size	AlarmReady, .-AlarmReady
 344 004a 00BF     		.section	.text.ResetAlarm,"ax",%progbits
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 10


 345              		.align	2
 346              		.global	ResetAlarm
 347              		.thumb
 348              		.thumb_func
 349              		.type	ResetAlarm, %function
 350              	ResetAlarm:
 351              	.LFB70:
 170:main.c        **** 
 171:main.c        **** void ResetAlarm(alarm * alarmToBeReset)
 172:main.c        **** {
 352              		.loc 1 172 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 8
 355              		@ frame_needed = 1, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 357 0000 80B4     		push	{r7}
 358              		.cfi_def_cfa_offset 4
 359              		.cfi_offset 7, -4
 360 0002 83B0     		sub	sp, sp, #12
 361              		.cfi_def_cfa_offset 16
 362 0004 00AF     		add	r7, sp, #0
 363              		.cfi_def_cfa_register 7
 364 0006 7860     		str	r0, [r7, #4]
 173:main.c        ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 365              		.loc 1 173 0
 366 0008 7B68     		ldr	r3, [r7, #4]
 367 000a 1B88     		ldrh	r3, [r3]	@ movhi
 368 000c 9AB2     		uxth	r2, r3
 369 000e 7B68     		ldr	r3, [r7, #4]
 370 0010 5A80     		strh	r2, [r3, #2]	@ movhi
 174:main.c        **** }
 371              		.loc 1 174 0
 372 0012 00BF     		nop
 373 0014 0C37     		adds	r7, r7, #12
 374              		.cfi_def_cfa_offset 4
 375 0016 BD46     		mov	sp, r7
 376              		.cfi_def_cfa_register 13
 377              		@ sp needed
 378 0018 80BC     		pop	{r7}
 379              		.cfi_restore 7
 380              		.cfi_def_cfa_offset 0
 381 001a 7047     		bx	lr
 382              		.cfi_endproc
 383              	.LFE70:
 384              		.size	ResetAlarm, .-ResetAlarm
 385              		.section	.text.CreateAlarm,"ax",%progbits
 386              		.align	2
 387              		.global	CreateAlarm
 388              		.thumb
 389              		.thumb_func
 390              		.type	CreateAlarm, %function
 391              	CreateAlarm:
 392              	.LFB71:
 175:main.c        **** 
 176:main.c        **** // ==============================================
 177:main.c        **** // Creates a new alarm, which will be handeled by another cutions
 178:main.c        **** // ==============================================
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 11


 179:main.c        **** 
 180:main.c        **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 181:main.c        **** {
 393              		.loc 1 181 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 16
 396              		@ frame_needed = 1, uses_anonymous_args = 0
 397              		@ link register save eliminated.
 398 0000 80B4     		push	{r7}
 399              		.cfi_def_cfa_offset 4
 400              		.cfi_offset 7, -4
 401 0002 85B0     		sub	sp, sp, #20
 402              		.cfi_def_cfa_offset 24
 403 0004 00AF     		add	r7, sp, #0
 404              		.cfi_def_cfa_register 7
 405 0006 7860     		str	r0, [r7, #4]
 406 0008 0846     		mov	r0, r1
 407 000a 1146     		mov	r1, r2
 408 000c 1A46     		mov	r2, r3
 409 000e 0346     		mov	r3, r0	@ movhi
 410 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 411 0012 0B46     		mov	r3, r1
 412 0014 7B70     		strb	r3, [r7, #1]
 413 0016 1346     		mov	r3, r2
 414 0018 3B70     		strb	r3, [r7]
 182:main.c        ****     alarm newAlarm;
 183:main.c        ****     
 184:main.c        ****     newAlarm.countDownValue = countDownValue;
 415              		.loc 1 184 0
 416 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 417 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 185:main.c        ****     newAlarm.countDownType = countDownType;
 418              		.loc 1 185 0
 419 001e 7B78     		ldrb	r3, [r7, #1]
 420 0020 3B73     		strb	r3, [r7, #12]
 186:main.c        ****     newAlarm.countDownResetCondition = countDownResetCondition;
 421              		.loc 1 186 0
 422 0022 3B78     		ldrb	r3, [r7]
 423 0024 7B73     		strb	r3, [r7, #13]
 187:main.c        ****     
 188:main.c        ****     //if you want a reccuring alarm (e.g. resets freshly each hour), then add
 189:main.c        ****     //account for already exprired time using the RTC. Otherwise, set to the countDownValue
 190:main.c        ****     newAlarm.currentCountDownValue = countDownValue;
 424              		.loc 1 190 0
 425 0026 7B88     		ldrh	r3, [r7, #2]	@ movhi
 426 0028 7B81     		strh	r3, [r7, #10]	@ movhi
 191:main.c        ****     
 192:main.c        ****     return newAlarm;
 427              		.loc 1 192 0
 428 002a 7B68     		ldr	r3, [r7, #4]
 429 002c 1A46     		mov	r2, r3
 430 002e 07F10803 		add	r3, r7, #8
 431 0032 1868     		ldr	r0, [r3]	@ unaligned
 432 0034 1060     		str	r0, [r2]	@ unaligned
 433 0036 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 434 0038 9380     		strh	r3, [r2, #4]	@ unaligned
 193:main.c        ****     
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 12


 194:main.c        **** }
 435              		.loc 1 194 0
 436 003a 7868     		ldr	r0, [r7, #4]
 437 003c 1437     		adds	r7, r7, #20
 438              		.cfi_def_cfa_offset 4
 439 003e BD46     		mov	sp, r7
 440              		.cfi_def_cfa_register 13
 441              		@ sp needed
 442 0040 80BC     		pop	{r7}
 443              		.cfi_restore 7
 444              		.cfi_def_cfa_offset 0
 445 0042 7047     		bx	lr
 446              		.cfi_endproc
 447              	.LFE71:
 448              		.size	CreateAlarm, .-CreateAlarm
 449              		.section	.text.ChickityCheckYourselfBeforeYouWreckYourself,"ax",%progbits
 450              		.align	2
 451              		.global	ChickityCheckYourselfBeforeYouWreckYourself
 452              		.thumb
 453              		.thumb_func
 454              		.type	ChickityCheckYourselfBeforeYouWreckYourself, %function
 455              	ChickityCheckYourselfBeforeYouWreckYourself:
 456              	.LFB72:
 195:main.c        **** 
 196:main.c        **** // ==============================================
 197:main.c        **** // Dropping bombs on your moms
 198:main.c        **** //      - Ice Cube (1992)
 199:main.c        **** //
 200:main.c        **** // This is the global testing function, which runs all relevant tests
 201:main.c        **** // If you make a new components, it could be good to call its tester function here 
 202:main.c        **** // ==============================================
 203:main.c        **** void ChickityCheckYourselfBeforeYouWreckYourself(){
 457              		.loc 1 203 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 1168
 460              		@ frame_needed = 1, uses_anonymous_args = 0
 461 0000 90B5     		push	{r4, r7, lr}
 462              		.cfi_def_cfa_offset 12
 463              		.cfi_offset 4, -12
 464              		.cfi_offset 7, -8
 465              		.cfi_offset 14, -4
 466 0002 ADF20C6D 		subw	sp, sp, #1548
 467              		.cfi_def_cfa_offset 1560
 468 0006 5EAF     		add	r7, sp, #376
 469              		.cfi_def_cfa 7, 1184
 204:main.c        **** 
 205:main.c        ****     //modem_startup();
 206:main.c        ****     //modem_stop();
 207:main.c        ****     
 208:main.c        ****     test_t t_level_sensor = level_sensor_test();//test level sensor  
 470              		.loc 1 208 0
 471 0008 07F54273 		add	r3, r7, #776
 472 000c 1846     		mov	r0, r3
 473 000e FFF7FEFF 		bl	level_sensor_test
 209:main.c        ****     printTestStatus(t_level_sensor);
 474              		.loc 1 209 0
 475 0012 07F54274 		add	r4, r7, #776
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 13


 476 0016 6846     		mov	r0, sp
 477 0018 04F11003 		add	r3, r4, #16
 478 001c 40F27112 		movw	r2, #369
 479 0020 1946     		mov	r1, r3
 480 0022 FFF7FEFF 		bl	memcpy
 481 0026 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 482 002a FFF7FEFF 		bl	printTestStatus
 210:main.c        ****     test_t t_sd_card = SD_card_test();
 483              		.loc 1 210 0
 484 002e 07F5C273 		add	r3, r7, #388
 485 0032 1846     		mov	r0, r3
 486 0034 FFF7FEFF 		bl	SD_card_test
 211:main.c        ****     printTestStatus(t_sd_card);
 487              		.loc 1 211 0
 488 0038 07F5C274 		add	r4, r7, #388
 489 003c 6846     		mov	r0, sp
 490 003e 04F11003 		add	r3, r4, #16
 491 0042 40F27112 		movw	r2, #369
 492 0046 1946     		mov	r1, r3
 493 0048 FFF7FEFF 		bl	memcpy
 494 004c 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 495 0050 FFF7FEFF 		bl	printTestStatus
 212:main.c        ****     test_t t_voltages = voltages_test();
 496              		.loc 1 212 0
 497 0054 3B46     		mov	r3, r7
 498 0056 1846     		mov	r0, r3
 499 0058 FFF7FEFF 		bl	voltages_test
 213:main.c        ****     printTestStatus(t_voltages);
 500              		.loc 1 213 0
 501 005c 3C46     		mov	r4, r7
 502 005e 6846     		mov	r0, sp
 503 0060 04F11003 		add	r3, r4, #16
 504 0064 40F27112 		movw	r2, #369
 505 0068 1946     		mov	r1, r3
 506 006a FFF7FEFF 		bl	memcpy
 507 006e 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 508 0072 FFF7FEFF 		bl	printTestStatus
 214:main.c        ****   
 215:main.c        ****     int c = 0;
 509              		.loc 1 215 0
 510 0076 0023     		movs	r3, #0
 511 0078 C7F88C34 		str	r3, [r7, #1164]
 216:main.c        ****     c++;
 512              		.loc 1 216 0
 513 007c D7F88C34 		ldr	r3, [r7, #1164]
 514 0080 0133     		adds	r3, r3, #1
 515 0082 C7F88C34 		str	r3, [r7, #1164]
 217:main.c        ****     //test modem
 218:main.c        ****     //test SD card
 219:main.c        ****     //analog: test battery voltage, solar voltage, and solar current
 220:main.c        ****       
 221:main.c        ****   
 222:main.c        **** }
 516              		.loc 1 222 0
 517 0086 00BF     		nop
 518 0088 07F29447 		addw	r7, r7, #1172
 519              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 14


 520 008c BD46     		mov	sp, r7
 521              		.cfi_def_cfa_register 13
 522              		@ sp needed
 523 008e 90BD     		pop	{r4, r7, pc}
 524              		.cfi_endproc
 525              	.LFE72:
 526              		.size	ChickityCheckYourselfBeforeYouWreckYourself, .-ChickityCheckYourselfBeforeYouWreckYourself
 527              		.section	.text.main,"ax",%progbits
 528              		.align	2
 529              		.global	main
 530              		.thumb
 531              		.thumb_func
 532              		.type	main, %function
 533              	main:
 534              	.LFB73:
 223:main.c        **** 
 224:main.c        **** 
 225:main.c        **** int main(void)
 226:main.c        **** {
 535              		.loc 1 226 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539 0000 80B5     		push	{r7, lr}
 540              		.cfi_def_cfa_offset 8
 541              		.cfi_offset 7, -8
 542              		.cfi_offset 14, -4
 543 0002 00AF     		add	r7, sp, #0
 544              		.cfi_def_cfa_register 7
 227:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 545              		.loc 1 227 0
 546              		.syntax unified
 547              	@ 227 "main.c" 1
 548 0004 62B6     		CPSIE   i
 549              	@ 0 "" 2
 228:main.c        **** 
 229:main.c        ****     ReadyOrNot();
 550              		.loc 1 229 0
 551              		.thumb
 552              		.syntax unified
 553 0006 FFF7FEFF 		bl	ReadyOrNot
 230:main.c        ****     
 231:main.c        ****     //run tests for all components on bootup
 232:main.c        ****     ChickityCheckYourselfBeforeYouWreckYourself();
 554              		.loc 1 232 0
 555 000a FFF7FEFF 		bl	ChickityCheckYourselfBeforeYouWreckYourself
 556              	.L27:
 233:main.c        ****    
 234:main.c        ****     for(;;)
 235:main.c        ****     {
 236:main.c        ****        if( ! WorkWorkWorkWorkWorkWork() )
 557              		.loc 1 236 0
 558 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 559 0012 0346     		mov	r3, r0
 560 0014 002B     		cmp	r3, #0
 561 0016 FAD1     		bne	.L27
 237:main.c        ****        {
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 15


 238:main.c        ****             LayBack();
 562              		.loc 1 238 0
 563 0018 FFF7FEFF 		bl	LayBack
 239:main.c        ****        }
 240:main.c        ****     }
 564              		.loc 1 240 0
 565 001c F7E7     		b	.L27
 566              		.cfi_endproc
 567              	.LFE73:
 568              		.size	main, .-main
 569 001e 00BF     		.text
 570              	.Letext0:
 571              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 572              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 573              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 574              		.file 5 "notoriOS.h"
 575              		.file 6 "testing.h"
 576              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 577              		.file 8 "debug.h"
 578              		.section	.debug_info,"",%progbits
 579              	.Ldebug_info0:
 580 0000 53030000 		.4byte	0x353
 581 0004 0400     		.2byte	0x4
 582 0006 00000000 		.4byte	.Ldebug_abbrev0
 583 000a 04       		.byte	0x4
 584 000b 01       		.uleb128 0x1
 585 000c 00000000 		.4byte	.LASF48
 586 0010 0C       		.byte	0xc
 587 0011 8D020000 		.4byte	.LASF49
 588 0015 22010000 		.4byte	.LASF50
 589 0019 00000000 		.4byte	.Ldebug_ranges0+0
 590 001d 00000000 		.4byte	0
 591 0021 00000000 		.4byte	.Ldebug_line0
 592 0025 02       		.uleb128 0x2
 593 0026 01       		.byte	0x1
 594 0027 06       		.byte	0x6
 595 0028 13030000 		.4byte	.LASF0
 596 002c 02       		.uleb128 0x2
 597 002d 01       		.byte	0x1
 598 002e 08       		.byte	0x8
 599 002f 76010000 		.4byte	.LASF1
 600 0033 02       		.uleb128 0x2
 601 0034 02       		.byte	0x2
 602 0035 05       		.byte	0x5
 603 0036 C1020000 		.4byte	.LASF2
 604 003a 02       		.uleb128 0x2
 605 003b 02       		.byte	0x2
 606 003c 07       		.byte	0x7
 607 003d B2010000 		.4byte	.LASF3
 608 0041 03       		.uleb128 0x3
 609 0042 B4000000 		.4byte	.LASF9
 610 0046 02       		.byte	0x2
 611 0047 3F       		.byte	0x3f
 612 0048 4C000000 		.4byte	0x4c
 613 004c 02       		.uleb128 0x2
 614 004d 04       		.byte	0x4
 615 004e 05       		.byte	0x5
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 16


 616 004f E4020000 		.4byte	.LASF4
 617 0053 02       		.uleb128 0x2
 618 0054 04       		.byte	0x4
 619 0055 07       		.byte	0x7
 620 0056 A0010000 		.4byte	.LASF5
 621 005a 02       		.uleb128 0x2
 622 005b 08       		.byte	0x8
 623 005c 05       		.byte	0x5
 624 005d 76020000 		.4byte	.LASF6
 625 0061 02       		.uleb128 0x2
 626 0062 08       		.byte	0x8
 627 0063 07       		.byte	0x7
 628 0064 1F020000 		.4byte	.LASF7
 629 0068 04       		.uleb128 0x4
 630 0069 04       		.byte	0x4
 631 006a 05       		.byte	0x5
 632 006b 696E7400 		.ascii	"int\000"
 633 006f 02       		.uleb128 0x2
 634 0070 04       		.byte	0x4
 635 0071 07       		.byte	0x7
 636 0072 07020000 		.4byte	.LASF8
 637 0076 03       		.uleb128 0x3
 638 0077 AF020000 		.4byte	.LASF10
 639 007b 03       		.byte	0x3
 640 007c 2C       		.byte	0x2c
 641 007d 41000000 		.4byte	0x41
 642 0081 05       		.uleb128 0x5
 643 0082 E9000000 		.4byte	.LASF11
 644 0086 04       		.byte	0x4
 645 0087 E401     		.2byte	0x1e4
 646 0089 2C000000 		.4byte	0x2c
 647 008d 05       		.uleb128 0x5
 648 008e F2010000 		.4byte	.LASF12
 649 0092 04       		.byte	0x4
 650 0093 E501     		.2byte	0x1e5
 651 0095 3A000000 		.4byte	0x3a
 652 0099 02       		.uleb128 0x2
 653 009a 04       		.byte	0x4
 654 009b 04       		.byte	0x4
 655 009c 1C010000 		.4byte	.LASF13
 656 00a0 02       		.uleb128 0x2
 657 00a1 08       		.byte	0x8
 658 00a2 04       		.byte	0x4
 659 00a3 E6010000 		.4byte	.LASF14
 660 00a7 02       		.uleb128 0x2
 661 00a8 01       		.byte	0x1
 662 00a9 08       		.byte	0x8
 663 00aa 94020000 		.4byte	.LASF15
 664 00ae 02       		.uleb128 0x2
 665 00af 08       		.byte	0x8
 666 00b0 04       		.byte	0x4
 667 00b1 F8020000 		.4byte	.LASF16
 668 00b5 02       		.uleb128 0x2
 669 00b6 04       		.byte	0x4
 670 00b7 07       		.byte	0x7
 671 00b8 84020000 		.4byte	.LASF17
 672 00bc 06       		.uleb128 0x6
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 17


 673 00bd 06       		.byte	0x6
 674 00be 05       		.byte	0x5
 675 00bf 1A       		.byte	0x1a
 676 00c0 F5000000 		.4byte	0xf5
 677 00c4 07       		.uleb128 0x7
 678 00c5 84010000 		.4byte	.LASF18
 679 00c9 05       		.byte	0x5
 680 00ca 1C       		.byte	0x1c
 681 00cb 8D000000 		.4byte	0x8d
 682 00cf 00       		.byte	0
 683 00d0 07       		.uleb128 0x7
 684 00d1 99020000 		.4byte	.LASF19
 685 00d5 05       		.byte	0x5
 686 00d6 1D       		.byte	0x1d
 687 00d7 8D000000 		.4byte	0x8d
 688 00db 02       		.byte	0x2
 689 00dc 07       		.uleb128 0x7
 690 00dd D8010000 		.4byte	.LASF20
 691 00e1 05       		.byte	0x5
 692 00e2 1E       		.byte	0x1e
 693 00e3 81000000 		.4byte	0x81
 694 00e7 04       		.byte	0x4
 695 00e8 07       		.uleb128 0x7
 696 00e9 D1000000 		.4byte	.LASF21
 697 00ed 05       		.byte	0x5
 698 00ee 1F       		.byte	0x1f
 699 00ef 81000000 		.4byte	0x81
 700 00f3 05       		.byte	0x5
 701 00f4 00       		.byte	0
 702 00f5 03       		.uleb128 0x3
 703 00f6 C5010000 		.4byte	.LASF22
 704 00fa 05       		.byte	0x5
 705 00fb 22       		.byte	0x22
 706 00fc 00010000 		.4byte	0x100
 707 0100 08       		.uleb128 0x8
 708 0101 BC000000 		.4byte	0xbc
 709 0105 09       		.uleb128 0x9
 710 0106 8101     		.2byte	0x181
 711 0108 06       		.byte	0x6
 712 0109 0A       		.byte	0xa
 713 010a 33010000 		.4byte	0x133
 714 010e 07       		.uleb128 0x7
 715 010f DA020000 		.4byte	.LASF23
 716 0113 06       		.byte	0x6
 717 0114 0B       		.byte	0xb
 718 0115 33010000 		.4byte	0x133
 719 0119 00       		.byte	0
 720 011a 07       		.uleb128 0x7
 721 011b EF000000 		.4byte	.LASF24
 722 011f 06       		.byte	0x6
 723 0120 0C       		.byte	0xc
 724 0121 81000000 		.4byte	0x81
 725 0125 80       		.byte	0x80
 726 0126 07       		.uleb128 0x7
 727 0127 36020000 		.4byte	.LASF25
 728 012b 06       		.byte	0x6
 729 012c 0D       		.byte	0xd
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 18


 730 012d 43010000 		.4byte	0x143
 731 0131 81       		.byte	0x81
 732 0132 00       		.byte	0
 733 0133 0A       		.uleb128 0xa
 734 0134 A7000000 		.4byte	0xa7
 735 0138 43010000 		.4byte	0x143
 736 013c 0B       		.uleb128 0xb
 737 013d B5000000 		.4byte	0xb5
 738 0141 7F       		.byte	0x7f
 739 0142 00       		.byte	0
 740 0143 0A       		.uleb128 0xa
 741 0144 A7000000 		.4byte	0xa7
 742 0148 53010000 		.4byte	0x153
 743 014c 0B       		.uleb128 0xb
 744 014d B5000000 		.4byte	0xb5
 745 0151 FF       		.byte	0xff
 746 0152 00       		.byte	0
 747 0153 03       		.uleb128 0x3
 748 0154 BE000000 		.4byte	.LASF26
 749 0158 06       		.byte	0x6
 750 0159 0E       		.byte	0xe
 751 015a 05010000 		.4byte	0x105
 752 015e 0C       		.uleb128 0xc
 753 015f 4B020000 		.4byte	.LASF27
 754 0163 01       		.byte	0x1
 755 0164 24       		.byte	0x24
 756 0165 00000000 		.4byte	.LFB64
 757 0169 0C000000 		.4byte	.LFE64-.LFB64
 758 016d 01       		.uleb128 0x1
 759 016e 9C       		.byte	0x9c
 760 016f 0D       		.uleb128 0xd
 761 0170 ED020000 		.4byte	.LASF29
 762 0174 01       		.byte	0x1
 763 0175 30       		.byte	0x30
 764 0176 00000000 		.4byte	.LFB65
 765 017a 58000000 		.4byte	.LFE65-.LFB65
 766 017e 01       		.uleb128 0x1
 767 017f 9C       		.byte	0x9c
 768 0180 0E       		.uleb128 0xe
 769 0181 8E000000 		.4byte	.LASF28
 770 0185 01       		.byte	0x1
 771 0186 4C       		.byte	0x4c
 772 0187 68000000 		.4byte	0x68
 773 018b 00000000 		.4byte	.LFB66
 774 018f 30000000 		.4byte	.LFE66-.LFB66
 775 0193 01       		.uleb128 0x1
 776 0194 9C       		.byte	0x9c
 777 0195 0D       		.uleb128 0xd
 778 0196 5F020000 		.4byte	.LASF30
 779 019a 01       		.byte	0x1
 780 019b 6D       		.byte	0x6d
 781 019c 00000000 		.4byte	.LFB67
 782 01a0 22000000 		.4byte	.LFE67-.LFB67
 783 01a4 01       		.uleb128 0x1
 784 01a5 9C       		.byte	0x9c
 785 01a6 0F       		.uleb128 0xf
 786 01a7 4B030000 		.4byte	.LASF33
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 19


 787 01ab 01       		.byte	0x1
 788 01ac 8B       		.byte	0x8b
 789 01ad 00000000 		.4byte	.LFB68
 790 01b1 50000000 		.4byte	.LFE68-.LFB68
 791 01b5 01       		.uleb128 0x1
 792 01b6 9C       		.byte	0x9c
 793 01b7 CA010000 		.4byte	0x1ca
 794 01bb 10       		.uleb128 0x10
 795 01bc B7020000 		.4byte	.LASF31
 796 01c0 01       		.byte	0x1
 797 01c1 8B       		.byte	0x8b
 798 01c2 81000000 		.4byte	0x81
 799 01c6 02       		.uleb128 0x2
 800 01c7 91       		.byte	0x91
 801 01c8 77       		.sleb128 -9
 802 01c9 00       		.byte	0
 803 01ca 11       		.uleb128 0x11
 804 01cb 07010000 		.4byte	.LASF36
 805 01cf 01       		.byte	0x1
 806 01d0 9D       		.byte	0x9d
 807 01d1 81000000 		.4byte	0x81
 808 01d5 00000000 		.4byte	.LFB69
 809 01d9 4A000000 		.4byte	.LFE69-.LFB69
 810 01dd 01       		.uleb128 0x1
 811 01de 9C       		.byte	0x9c
 812 01df 00020000 		.4byte	0x200
 813 01e3 10       		.uleb128 0x10
 814 01e4 F6000000 		.4byte	.LASF32
 815 01e8 01       		.byte	0x1
 816 01e9 9D       		.byte	0x9d
 817 01ea 00020000 		.4byte	0x200
 818 01ee 02       		.uleb128 0x2
 819 01ef 91       		.byte	0x91
 820 01f0 74       		.sleb128 -12
 821 01f1 10       		.uleb128 0x10
 822 01f2 B7020000 		.4byte	.LASF31
 823 01f6 01       		.byte	0x1
 824 01f7 9D       		.byte	0x9d
 825 01f8 81000000 		.4byte	0x81
 826 01fc 02       		.uleb128 0x2
 827 01fd 91       		.byte	0x91
 828 01fe 73       		.sleb128 -13
 829 01ff 00       		.byte	0
 830 0200 12       		.uleb128 0x12
 831 0201 04       		.byte	0x4
 832 0202 F5000000 		.4byte	0xf5
 833 0206 13       		.uleb128 0x13
 834 0207 6B010000 		.4byte	.LASF34
 835 020b 01       		.byte	0x1
 836 020c AB       		.byte	0xab
 837 020d 00000000 		.4byte	.LFB70
 838 0211 1C000000 		.4byte	.LFE70-.LFB70
 839 0215 01       		.uleb128 0x1
 840 0216 9C       		.byte	0x9c
 841 0217 2A020000 		.4byte	0x22a
 842 021b 10       		.uleb128 0x10
 843 021c CB020000 		.4byte	.LASF35
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 20


 844 0220 01       		.byte	0x1
 845 0221 AB       		.byte	0xab
 846 0222 00020000 		.4byte	0x200
 847 0226 02       		.uleb128 0x2
 848 0227 91       		.byte	0x91
 849 0228 74       		.sleb128 -12
 850 0229 00       		.byte	0
 851 022a 14       		.uleb128 0x14
 852 022b C5000000 		.4byte	.LASF37
 853 022f 01       		.byte	0x1
 854 0230 B4       		.byte	0xb4
 855 0231 F5000000 		.4byte	0xf5
 856 0235 00000000 		.4byte	.LFB71
 857 0239 44000000 		.4byte	.LFE71-.LFB71
 858 023d 01       		.uleb128 0x1
 859 023e 9C       		.byte	0x9c
 860 023f 7C020000 		.4byte	0x27c
 861 0243 10       		.uleb128 0x10
 862 0244 84010000 		.4byte	.LASF18
 863 0248 01       		.byte	0x1
 864 0249 B4       		.byte	0xb4
 865 024a 8D000000 		.4byte	0x8d
 866 024e 02       		.uleb128 0x2
 867 024f 91       		.byte	0x91
 868 0250 6A       		.sleb128 -22
 869 0251 10       		.uleb128 0x10
 870 0252 D8010000 		.4byte	.LASF20
 871 0256 01       		.byte	0x1
 872 0257 B4       		.byte	0xb4
 873 0258 81000000 		.4byte	0x81
 874 025c 02       		.uleb128 0x2
 875 025d 91       		.byte	0x91
 876 025e 69       		.sleb128 -23
 877 025f 10       		.uleb128 0x10
 878 0260 D1000000 		.4byte	.LASF21
 879 0264 01       		.byte	0x1
 880 0265 B4       		.byte	0xb4
 881 0266 81000000 		.4byte	0x81
 882 026a 02       		.uleb128 0x2
 883 026b 91       		.byte	0x91
 884 026c 68       		.sleb128 -24
 885 026d 15       		.uleb128 0x15
 886 026e 56020000 		.4byte	.LASF38
 887 0272 01       		.byte	0x1
 888 0273 B6       		.byte	0xb6
 889 0274 F5000000 		.4byte	0xf5
 890 0278 02       		.uleb128 0x2
 891 0279 91       		.byte	0x91
 892 027a 70       		.sleb128 -16
 893 027b 00       		.byte	0
 894 027c 16       		.uleb128 0x16
 895 027d 1F030000 		.4byte	.LASF51
 896 0281 01       		.byte	0x1
 897 0282 CB       		.byte	0xcb
 898 0283 00000000 		.4byte	.LFB72
 899 0287 90000000 		.4byte	.LFE72-.LFB72
 900 028b 01       		.uleb128 0x1
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 21


 901 028c 9C       		.byte	0x9c
 902 028d CB020000 		.4byte	0x2cb
 903 0291 15       		.uleb128 0x15
 904 0292 67020000 		.4byte	.LASF39
 905 0296 01       		.byte	0x1
 906 0297 D0       		.byte	0xd0
 907 0298 53010000 		.4byte	0x153
 908 029c 03       		.uleb128 0x3
 909 029d 91       		.byte	0x91
 910 029e E87C     		.sleb128 -408
 911 02a0 15       		.uleb128 0x15
 912 02a1 12010000 		.4byte	.LASF40
 913 02a5 01       		.byte	0x1
 914 02a6 D2       		.byte	0xd2
 915 02a7 53010000 		.4byte	0x153
 916 02ab 03       		.uleb128 0x3
 917 02ac 91       		.byte	0x91
 918 02ad E479     		.sleb128 -796
 919 02af 15       		.uleb128 0x15
 920 02b0 14020000 		.4byte	.LASF41
 921 02b4 01       		.byte	0x1
 922 02b5 D4       		.byte	0xd4
 923 02b6 53010000 		.4byte	0x153
 924 02ba 03       		.uleb128 0x3
 925 02bb 91       		.byte	0x91
 926 02bc E076     		.sleb128 -1184
 927 02be 17       		.uleb128 0x17
 928 02bf 6300     		.ascii	"c\000"
 929 02c1 01       		.byte	0x1
 930 02c2 D7       		.byte	0xd7
 931 02c3 68000000 		.4byte	0x68
 932 02c7 02       		.uleb128 0x2
 933 02c8 91       		.byte	0x91
 934 02c9 6C       		.sleb128 -20
 935 02ca 00       		.byte	0
 936 02cb 18       		.uleb128 0x18
 937 02cc ED010000 		.4byte	.LASF52
 938 02d0 01       		.byte	0x1
 939 02d1 E1       		.byte	0xe1
 940 02d2 68000000 		.4byte	0x68
 941 02d6 00000000 		.4byte	.LFB73
 942 02da 1E000000 		.4byte	.LFE73-.LFB73
 943 02de 01       		.uleb128 0x1
 944 02df 9C       		.byte	0x9c
 945 02e0 19       		.uleb128 0x19
 946 02e1 CB010000 		.4byte	.LASF42
 947 02e5 07       		.byte	0x7
 948 02e6 1207     		.2byte	0x712
 949 02e8 EC020000 		.4byte	0x2ec
 950 02ec 08       		.uleb128 0x8
 951 02ed 76000000 		.4byte	0x76
 952 02f1 0A       		.uleb128 0xa
 953 02f2 A7000000 		.4byte	0xa7
 954 02f6 01030000 		.4byte	0x301
 955 02fa 0B       		.uleb128 0xb
 956 02fb B5000000 		.4byte	0xb5
 957 02ff 63       		.byte	0x63
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 22


 958 0300 00       		.byte	0
 959 0301 1A       		.uleb128 0x1a
 960 0302 A7000000 		.4byte	.LASF43
 961 0306 08       		.byte	0x8
 962 0307 17       		.byte	0x17
 963 0308 F1020000 		.4byte	0x2f1
 964 030c 05       		.uleb128 0x5
 965 030d 03       		.byte	0x3
 966 030e 00000000 		.4byte	debug_string
 967 0312 1A       		.uleb128 0x1a
 968 0313 93010000 		.4byte	.LASF44
 969 0317 01       		.byte	0x1
 970 0318 1A       		.byte	0x1a
 971 0319 F5000000 		.4byte	0xf5
 972 031d 05       		.uleb128 0x5
 973 031e 03       		.byte	0x3
 974 031f 00000000 		.4byte	alarmMeasure
 975 0323 1A       		.uleb128 0x1a
 976 0324 3D020000 		.4byte	.LASF45
 977 0328 01       		.byte	0x1
 978 0329 1B       		.byte	0x1b
 979 032a 81000000 		.4byte	0x81
 980 032e 05       		.uleb128 0x5
 981 032f 03       		.byte	0x3
 982 0330 00000000 		.4byte	timeToMeasure
 983 0334 1A       		.uleb128 0x1a
 984 0335 F9010000 		.4byte	.LASF46
 985 0339 01       		.byte	0x1
 986 033a 1C       		.byte	0x1c
 987 033b F5000000 		.4byte	0xf5
 988 033f 05       		.uleb128 0x5
 989 0340 03       		.byte	0x3
 990 0341 00000000 		.4byte	alarmMeasure2
 991 0345 1A       		.uleb128 0x1a
 992 0346 04030000 		.4byte	.LASF47
 993 034a 01       		.byte	0x1
 994 034b 1D       		.byte	0x1d
 995 034c 81000000 		.4byte	0x81
 996 0350 05       		.uleb128 0x5
 997 0351 03       		.byte	0x3
 998 0352 00000000 		.4byte	timeToMeasure2
 999 0356 00       		.byte	0
 1000              		.section	.debug_abbrev,"",%progbits
 1001              	.Ldebug_abbrev0:
 1002 0000 01       		.uleb128 0x1
 1003 0001 11       		.uleb128 0x11
 1004 0002 01       		.byte	0x1
 1005 0003 25       		.uleb128 0x25
 1006 0004 0E       		.uleb128 0xe
 1007 0005 13       		.uleb128 0x13
 1008 0006 0B       		.uleb128 0xb
 1009 0007 03       		.uleb128 0x3
 1010 0008 0E       		.uleb128 0xe
 1011 0009 1B       		.uleb128 0x1b
 1012 000a 0E       		.uleb128 0xe
 1013 000b 55       		.uleb128 0x55
 1014 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 23


 1015 000d 11       		.uleb128 0x11
 1016 000e 01       		.uleb128 0x1
 1017 000f 10       		.uleb128 0x10
 1018 0010 17       		.uleb128 0x17
 1019 0011 00       		.byte	0
 1020 0012 00       		.byte	0
 1021 0013 02       		.uleb128 0x2
 1022 0014 24       		.uleb128 0x24
 1023 0015 00       		.byte	0
 1024 0016 0B       		.uleb128 0xb
 1025 0017 0B       		.uleb128 0xb
 1026 0018 3E       		.uleb128 0x3e
 1027 0019 0B       		.uleb128 0xb
 1028 001a 03       		.uleb128 0x3
 1029 001b 0E       		.uleb128 0xe
 1030 001c 00       		.byte	0
 1031 001d 00       		.byte	0
 1032 001e 03       		.uleb128 0x3
 1033 001f 16       		.uleb128 0x16
 1034 0020 00       		.byte	0
 1035 0021 03       		.uleb128 0x3
 1036 0022 0E       		.uleb128 0xe
 1037 0023 3A       		.uleb128 0x3a
 1038 0024 0B       		.uleb128 0xb
 1039 0025 3B       		.uleb128 0x3b
 1040 0026 0B       		.uleb128 0xb
 1041 0027 49       		.uleb128 0x49
 1042 0028 13       		.uleb128 0x13
 1043 0029 00       		.byte	0
 1044 002a 00       		.byte	0
 1045 002b 04       		.uleb128 0x4
 1046 002c 24       		.uleb128 0x24
 1047 002d 00       		.byte	0
 1048 002e 0B       		.uleb128 0xb
 1049 002f 0B       		.uleb128 0xb
 1050 0030 3E       		.uleb128 0x3e
 1051 0031 0B       		.uleb128 0xb
 1052 0032 03       		.uleb128 0x3
 1053 0033 08       		.uleb128 0x8
 1054 0034 00       		.byte	0
 1055 0035 00       		.byte	0
 1056 0036 05       		.uleb128 0x5
 1057 0037 16       		.uleb128 0x16
 1058 0038 00       		.byte	0
 1059 0039 03       		.uleb128 0x3
 1060 003a 0E       		.uleb128 0xe
 1061 003b 3A       		.uleb128 0x3a
 1062 003c 0B       		.uleb128 0xb
 1063 003d 3B       		.uleb128 0x3b
 1064 003e 05       		.uleb128 0x5
 1065 003f 49       		.uleb128 0x49
 1066 0040 13       		.uleb128 0x13
 1067 0041 00       		.byte	0
 1068 0042 00       		.byte	0
 1069 0043 06       		.uleb128 0x6
 1070 0044 13       		.uleb128 0x13
 1071 0045 01       		.byte	0x1
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 24


 1072 0046 0B       		.uleb128 0xb
 1073 0047 0B       		.uleb128 0xb
 1074 0048 3A       		.uleb128 0x3a
 1075 0049 0B       		.uleb128 0xb
 1076 004a 3B       		.uleb128 0x3b
 1077 004b 0B       		.uleb128 0xb
 1078 004c 01       		.uleb128 0x1
 1079 004d 13       		.uleb128 0x13
 1080 004e 00       		.byte	0
 1081 004f 00       		.byte	0
 1082 0050 07       		.uleb128 0x7
 1083 0051 0D       		.uleb128 0xd
 1084 0052 00       		.byte	0
 1085 0053 03       		.uleb128 0x3
 1086 0054 0E       		.uleb128 0xe
 1087 0055 3A       		.uleb128 0x3a
 1088 0056 0B       		.uleb128 0xb
 1089 0057 3B       		.uleb128 0x3b
 1090 0058 0B       		.uleb128 0xb
 1091 0059 49       		.uleb128 0x49
 1092 005a 13       		.uleb128 0x13
 1093 005b 38       		.uleb128 0x38
 1094 005c 0B       		.uleb128 0xb
 1095 005d 00       		.byte	0
 1096 005e 00       		.byte	0
 1097 005f 08       		.uleb128 0x8
 1098 0060 35       		.uleb128 0x35
 1099 0061 00       		.byte	0
 1100 0062 49       		.uleb128 0x49
 1101 0063 13       		.uleb128 0x13
 1102 0064 00       		.byte	0
 1103 0065 00       		.byte	0
 1104 0066 09       		.uleb128 0x9
 1105 0067 13       		.uleb128 0x13
 1106 0068 01       		.byte	0x1
 1107 0069 0B       		.uleb128 0xb
 1108 006a 05       		.uleb128 0x5
 1109 006b 3A       		.uleb128 0x3a
 1110 006c 0B       		.uleb128 0xb
 1111 006d 3B       		.uleb128 0x3b
 1112 006e 0B       		.uleb128 0xb
 1113 006f 01       		.uleb128 0x1
 1114 0070 13       		.uleb128 0x13
 1115 0071 00       		.byte	0
 1116 0072 00       		.byte	0
 1117 0073 0A       		.uleb128 0xa
 1118 0074 01       		.uleb128 0x1
 1119 0075 01       		.byte	0x1
 1120 0076 49       		.uleb128 0x49
 1121 0077 13       		.uleb128 0x13
 1122 0078 01       		.uleb128 0x1
 1123 0079 13       		.uleb128 0x13
 1124 007a 00       		.byte	0
 1125 007b 00       		.byte	0
 1126 007c 0B       		.uleb128 0xb
 1127 007d 21       		.uleb128 0x21
 1128 007e 00       		.byte	0
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 25


 1129 007f 49       		.uleb128 0x49
 1130 0080 13       		.uleb128 0x13
 1131 0081 2F       		.uleb128 0x2f
 1132 0082 0B       		.uleb128 0xb
 1133 0083 00       		.byte	0
 1134 0084 00       		.byte	0
 1135 0085 0C       		.uleb128 0xc
 1136 0086 2E       		.uleb128 0x2e
 1137 0087 00       		.byte	0
 1138 0088 3F       		.uleb128 0x3f
 1139 0089 19       		.uleb128 0x19
 1140 008a 03       		.uleb128 0x3
 1141 008b 0E       		.uleb128 0xe
 1142 008c 3A       		.uleb128 0x3a
 1143 008d 0B       		.uleb128 0xb
 1144 008e 3B       		.uleb128 0x3b
 1145 008f 0B       		.uleb128 0xb
 1146 0090 27       		.uleb128 0x27
 1147 0091 19       		.uleb128 0x19
 1148 0092 11       		.uleb128 0x11
 1149 0093 01       		.uleb128 0x1
 1150 0094 12       		.uleb128 0x12
 1151 0095 06       		.uleb128 0x6
 1152 0096 40       		.uleb128 0x40
 1153 0097 18       		.uleb128 0x18
 1154 0098 9642     		.uleb128 0x2116
 1155 009a 19       		.uleb128 0x19
 1156 009b 00       		.byte	0
 1157 009c 00       		.byte	0
 1158 009d 0D       		.uleb128 0xd
 1159 009e 2E       		.uleb128 0x2e
 1160 009f 00       		.byte	0
 1161 00a0 3F       		.uleb128 0x3f
 1162 00a1 19       		.uleb128 0x19
 1163 00a2 03       		.uleb128 0x3
 1164 00a3 0E       		.uleb128 0xe
 1165 00a4 3A       		.uleb128 0x3a
 1166 00a5 0B       		.uleb128 0xb
 1167 00a6 3B       		.uleb128 0x3b
 1168 00a7 0B       		.uleb128 0xb
 1169 00a8 11       		.uleb128 0x11
 1170 00a9 01       		.uleb128 0x1
 1171 00aa 12       		.uleb128 0x12
 1172 00ab 06       		.uleb128 0x6
 1173 00ac 40       		.uleb128 0x40
 1174 00ad 18       		.uleb128 0x18
 1175 00ae 9642     		.uleb128 0x2116
 1176 00b0 19       		.uleb128 0x19
 1177 00b1 00       		.byte	0
 1178 00b2 00       		.byte	0
 1179 00b3 0E       		.uleb128 0xe
 1180 00b4 2E       		.uleb128 0x2e
 1181 00b5 00       		.byte	0
 1182 00b6 3F       		.uleb128 0x3f
 1183 00b7 19       		.uleb128 0x19
 1184 00b8 03       		.uleb128 0x3
 1185 00b9 0E       		.uleb128 0xe
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 26


 1186 00ba 3A       		.uleb128 0x3a
 1187 00bb 0B       		.uleb128 0xb
 1188 00bc 3B       		.uleb128 0x3b
 1189 00bd 0B       		.uleb128 0xb
 1190 00be 49       		.uleb128 0x49
 1191 00bf 13       		.uleb128 0x13
 1192 00c0 11       		.uleb128 0x11
 1193 00c1 01       		.uleb128 0x1
 1194 00c2 12       		.uleb128 0x12
 1195 00c3 06       		.uleb128 0x6
 1196 00c4 40       		.uleb128 0x40
 1197 00c5 18       		.uleb128 0x18
 1198 00c6 9642     		.uleb128 0x2116
 1199 00c8 19       		.uleb128 0x19
 1200 00c9 00       		.byte	0
 1201 00ca 00       		.byte	0
 1202 00cb 0F       		.uleb128 0xf
 1203 00cc 2E       		.uleb128 0x2e
 1204 00cd 01       		.byte	0x1
 1205 00ce 3F       		.uleb128 0x3f
 1206 00cf 19       		.uleb128 0x19
 1207 00d0 03       		.uleb128 0x3
 1208 00d1 0E       		.uleb128 0xe
 1209 00d2 3A       		.uleb128 0x3a
 1210 00d3 0B       		.uleb128 0xb
 1211 00d4 3B       		.uleb128 0x3b
 1212 00d5 0B       		.uleb128 0xb
 1213 00d6 27       		.uleb128 0x27
 1214 00d7 19       		.uleb128 0x19
 1215 00d8 11       		.uleb128 0x11
 1216 00d9 01       		.uleb128 0x1
 1217 00da 12       		.uleb128 0x12
 1218 00db 06       		.uleb128 0x6
 1219 00dc 40       		.uleb128 0x40
 1220 00dd 18       		.uleb128 0x18
 1221 00de 9642     		.uleb128 0x2116
 1222 00e0 19       		.uleb128 0x19
 1223 00e1 01       		.uleb128 0x1
 1224 00e2 13       		.uleb128 0x13
 1225 00e3 00       		.byte	0
 1226 00e4 00       		.byte	0
 1227 00e5 10       		.uleb128 0x10
 1228 00e6 05       		.uleb128 0x5
 1229 00e7 00       		.byte	0
 1230 00e8 03       		.uleb128 0x3
 1231 00e9 0E       		.uleb128 0xe
 1232 00ea 3A       		.uleb128 0x3a
 1233 00eb 0B       		.uleb128 0xb
 1234 00ec 3B       		.uleb128 0x3b
 1235 00ed 0B       		.uleb128 0xb
 1236 00ee 49       		.uleb128 0x49
 1237 00ef 13       		.uleb128 0x13
 1238 00f0 02       		.uleb128 0x2
 1239 00f1 18       		.uleb128 0x18
 1240 00f2 00       		.byte	0
 1241 00f3 00       		.byte	0
 1242 00f4 11       		.uleb128 0x11
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 27


 1243 00f5 2E       		.uleb128 0x2e
 1244 00f6 01       		.byte	0x1
 1245 00f7 3F       		.uleb128 0x3f
 1246 00f8 19       		.uleb128 0x19
 1247 00f9 03       		.uleb128 0x3
 1248 00fa 0E       		.uleb128 0xe
 1249 00fb 3A       		.uleb128 0x3a
 1250 00fc 0B       		.uleb128 0xb
 1251 00fd 3B       		.uleb128 0x3b
 1252 00fe 0B       		.uleb128 0xb
 1253 00ff 27       		.uleb128 0x27
 1254 0100 19       		.uleb128 0x19
 1255 0101 49       		.uleb128 0x49
 1256 0102 13       		.uleb128 0x13
 1257 0103 11       		.uleb128 0x11
 1258 0104 01       		.uleb128 0x1
 1259 0105 12       		.uleb128 0x12
 1260 0106 06       		.uleb128 0x6
 1261 0107 40       		.uleb128 0x40
 1262 0108 18       		.uleb128 0x18
 1263 0109 9642     		.uleb128 0x2116
 1264 010b 19       		.uleb128 0x19
 1265 010c 01       		.uleb128 0x1
 1266 010d 13       		.uleb128 0x13
 1267 010e 00       		.byte	0
 1268 010f 00       		.byte	0
 1269 0110 12       		.uleb128 0x12
 1270 0111 0F       		.uleb128 0xf
 1271 0112 00       		.byte	0
 1272 0113 0B       		.uleb128 0xb
 1273 0114 0B       		.uleb128 0xb
 1274 0115 49       		.uleb128 0x49
 1275 0116 13       		.uleb128 0x13
 1276 0117 00       		.byte	0
 1277 0118 00       		.byte	0
 1278 0119 13       		.uleb128 0x13
 1279 011a 2E       		.uleb128 0x2e
 1280 011b 01       		.byte	0x1
 1281 011c 3F       		.uleb128 0x3f
 1282 011d 19       		.uleb128 0x19
 1283 011e 03       		.uleb128 0x3
 1284 011f 0E       		.uleb128 0xe
 1285 0120 3A       		.uleb128 0x3a
 1286 0121 0B       		.uleb128 0xb
 1287 0122 3B       		.uleb128 0x3b
 1288 0123 0B       		.uleb128 0xb
 1289 0124 27       		.uleb128 0x27
 1290 0125 19       		.uleb128 0x19
 1291 0126 11       		.uleb128 0x11
 1292 0127 01       		.uleb128 0x1
 1293 0128 12       		.uleb128 0x12
 1294 0129 06       		.uleb128 0x6
 1295 012a 40       		.uleb128 0x40
 1296 012b 18       		.uleb128 0x18
 1297 012c 9742     		.uleb128 0x2117
 1298 012e 19       		.uleb128 0x19
 1299 012f 01       		.uleb128 0x1
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 28


 1300 0130 13       		.uleb128 0x13
 1301 0131 00       		.byte	0
 1302 0132 00       		.byte	0
 1303 0133 14       		.uleb128 0x14
 1304 0134 2E       		.uleb128 0x2e
 1305 0135 01       		.byte	0x1
 1306 0136 3F       		.uleb128 0x3f
 1307 0137 19       		.uleb128 0x19
 1308 0138 03       		.uleb128 0x3
 1309 0139 0E       		.uleb128 0xe
 1310 013a 3A       		.uleb128 0x3a
 1311 013b 0B       		.uleb128 0xb
 1312 013c 3B       		.uleb128 0x3b
 1313 013d 0B       		.uleb128 0xb
 1314 013e 27       		.uleb128 0x27
 1315 013f 19       		.uleb128 0x19
 1316 0140 49       		.uleb128 0x49
 1317 0141 13       		.uleb128 0x13
 1318 0142 11       		.uleb128 0x11
 1319 0143 01       		.uleb128 0x1
 1320 0144 12       		.uleb128 0x12
 1321 0145 06       		.uleb128 0x6
 1322 0146 40       		.uleb128 0x40
 1323 0147 18       		.uleb128 0x18
 1324 0148 9742     		.uleb128 0x2117
 1325 014a 19       		.uleb128 0x19
 1326 014b 01       		.uleb128 0x1
 1327 014c 13       		.uleb128 0x13
 1328 014d 00       		.byte	0
 1329 014e 00       		.byte	0
 1330 014f 15       		.uleb128 0x15
 1331 0150 34       		.uleb128 0x34
 1332 0151 00       		.byte	0
 1333 0152 03       		.uleb128 0x3
 1334 0153 0E       		.uleb128 0xe
 1335 0154 3A       		.uleb128 0x3a
 1336 0155 0B       		.uleb128 0xb
 1337 0156 3B       		.uleb128 0x3b
 1338 0157 0B       		.uleb128 0xb
 1339 0158 49       		.uleb128 0x49
 1340 0159 13       		.uleb128 0x13
 1341 015a 02       		.uleb128 0x2
 1342 015b 18       		.uleb128 0x18
 1343 015c 00       		.byte	0
 1344 015d 00       		.byte	0
 1345 015e 16       		.uleb128 0x16
 1346 015f 2E       		.uleb128 0x2e
 1347 0160 01       		.byte	0x1
 1348 0161 3F       		.uleb128 0x3f
 1349 0162 19       		.uleb128 0x19
 1350 0163 03       		.uleb128 0x3
 1351 0164 0E       		.uleb128 0xe
 1352 0165 3A       		.uleb128 0x3a
 1353 0166 0B       		.uleb128 0xb
 1354 0167 3B       		.uleb128 0x3b
 1355 0168 0B       		.uleb128 0xb
 1356 0169 11       		.uleb128 0x11
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 29


 1357 016a 01       		.uleb128 0x1
 1358 016b 12       		.uleb128 0x12
 1359 016c 06       		.uleb128 0x6
 1360 016d 40       		.uleb128 0x40
 1361 016e 18       		.uleb128 0x18
 1362 016f 9642     		.uleb128 0x2116
 1363 0171 19       		.uleb128 0x19
 1364 0172 01       		.uleb128 0x1
 1365 0173 13       		.uleb128 0x13
 1366 0174 00       		.byte	0
 1367 0175 00       		.byte	0
 1368 0176 17       		.uleb128 0x17
 1369 0177 34       		.uleb128 0x34
 1370 0178 00       		.byte	0
 1371 0179 03       		.uleb128 0x3
 1372 017a 08       		.uleb128 0x8
 1373 017b 3A       		.uleb128 0x3a
 1374 017c 0B       		.uleb128 0xb
 1375 017d 3B       		.uleb128 0x3b
 1376 017e 0B       		.uleb128 0xb
 1377 017f 49       		.uleb128 0x49
 1378 0180 13       		.uleb128 0x13
 1379 0181 02       		.uleb128 0x2
 1380 0182 18       		.uleb128 0x18
 1381 0183 00       		.byte	0
 1382 0184 00       		.byte	0
 1383 0185 18       		.uleb128 0x18
 1384 0186 2E       		.uleb128 0x2e
 1385 0187 00       		.byte	0
 1386 0188 3F       		.uleb128 0x3f
 1387 0189 19       		.uleb128 0x19
 1388 018a 03       		.uleb128 0x3
 1389 018b 0E       		.uleb128 0xe
 1390 018c 3A       		.uleb128 0x3a
 1391 018d 0B       		.uleb128 0xb
 1392 018e 3B       		.uleb128 0x3b
 1393 018f 0B       		.uleb128 0xb
 1394 0190 27       		.uleb128 0x27
 1395 0191 19       		.uleb128 0x19
 1396 0192 49       		.uleb128 0x49
 1397 0193 13       		.uleb128 0x13
 1398 0194 11       		.uleb128 0x11
 1399 0195 01       		.uleb128 0x1
 1400 0196 12       		.uleb128 0x12
 1401 0197 06       		.uleb128 0x6
 1402 0198 40       		.uleb128 0x40
 1403 0199 18       		.uleb128 0x18
 1404 019a 9642     		.uleb128 0x2116
 1405 019c 19       		.uleb128 0x19
 1406 019d 00       		.byte	0
 1407 019e 00       		.byte	0
 1408 019f 19       		.uleb128 0x19
 1409 01a0 34       		.uleb128 0x34
 1410 01a1 00       		.byte	0
 1411 01a2 03       		.uleb128 0x3
 1412 01a3 0E       		.uleb128 0xe
 1413 01a4 3A       		.uleb128 0x3a
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 30


 1414 01a5 0B       		.uleb128 0xb
 1415 01a6 3B       		.uleb128 0x3b
 1416 01a7 05       		.uleb128 0x5
 1417 01a8 49       		.uleb128 0x49
 1418 01a9 13       		.uleb128 0x13
 1419 01aa 3F       		.uleb128 0x3f
 1420 01ab 19       		.uleb128 0x19
 1421 01ac 3C       		.uleb128 0x3c
 1422 01ad 19       		.uleb128 0x19
 1423 01ae 00       		.byte	0
 1424 01af 00       		.byte	0
 1425 01b0 1A       		.uleb128 0x1a
 1426 01b1 34       		.uleb128 0x34
 1427 01b2 00       		.byte	0
 1428 01b3 03       		.uleb128 0x3
 1429 01b4 0E       		.uleb128 0xe
 1430 01b5 3A       		.uleb128 0x3a
 1431 01b6 0B       		.uleb128 0xb
 1432 01b7 3B       		.uleb128 0x3b
 1433 01b8 0B       		.uleb128 0xb
 1434 01b9 49       		.uleb128 0x49
 1435 01ba 13       		.uleb128 0x13
 1436 01bb 3F       		.uleb128 0x3f
 1437 01bc 19       		.uleb128 0x19
 1438 01bd 02       		.uleb128 0x2
 1439 01be 18       		.uleb128 0x18
 1440 01bf 00       		.byte	0
 1441 01c0 00       		.byte	0
 1442 01c1 00       		.byte	0
 1443              		.section	.debug_aranges,"",%progbits
 1444 0000 64000000 		.4byte	0x64
 1445 0004 0200     		.2byte	0x2
 1446 0006 00000000 		.4byte	.Ldebug_info0
 1447 000a 04       		.byte	0x4
 1448 000b 00       		.byte	0
 1449 000c 0000     		.2byte	0
 1450 000e 0000     		.2byte	0
 1451 0010 00000000 		.4byte	.LFB64
 1452 0014 0C000000 		.4byte	.LFE64-.LFB64
 1453 0018 00000000 		.4byte	.LFB65
 1454 001c 58000000 		.4byte	.LFE65-.LFB65
 1455 0020 00000000 		.4byte	.LFB66
 1456 0024 30000000 		.4byte	.LFE66-.LFB66
 1457 0028 00000000 		.4byte	.LFB67
 1458 002c 22000000 		.4byte	.LFE67-.LFB67
 1459 0030 00000000 		.4byte	.LFB68
 1460 0034 50000000 		.4byte	.LFE68-.LFB68
 1461 0038 00000000 		.4byte	.LFB69
 1462 003c 4A000000 		.4byte	.LFE69-.LFB69
 1463 0040 00000000 		.4byte	.LFB70
 1464 0044 1C000000 		.4byte	.LFE70-.LFB70
 1465 0048 00000000 		.4byte	.LFB71
 1466 004c 44000000 		.4byte	.LFE71-.LFB71
 1467 0050 00000000 		.4byte	.LFB72
 1468 0054 90000000 		.4byte	.LFE72-.LFB72
 1469 0058 00000000 		.4byte	.LFB73
 1470 005c 1E000000 		.4byte	.LFE73-.LFB73
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 31


 1471 0060 00000000 		.4byte	0
 1472 0064 00000000 		.4byte	0
 1473              		.section	.debug_ranges,"",%progbits
 1474              	.Ldebug_ranges0:
 1475 0000 00000000 		.4byte	.LFB64
 1476 0004 0C000000 		.4byte	.LFE64
 1477 0008 00000000 		.4byte	.LFB65
 1478 000c 58000000 		.4byte	.LFE65
 1479 0010 00000000 		.4byte	.LFB66
 1480 0014 30000000 		.4byte	.LFE66
 1481 0018 00000000 		.4byte	.LFB67
 1482 001c 22000000 		.4byte	.LFE67
 1483 0020 00000000 		.4byte	.LFB68
 1484 0024 50000000 		.4byte	.LFE68
 1485 0028 00000000 		.4byte	.LFB69
 1486 002c 4A000000 		.4byte	.LFE69
 1487 0030 00000000 		.4byte	.LFB70
 1488 0034 1C000000 		.4byte	.LFE70
 1489 0038 00000000 		.4byte	.LFB71
 1490 003c 44000000 		.4byte	.LFE71
 1491 0040 00000000 		.4byte	.LFB72
 1492 0044 90000000 		.4byte	.LFE72
 1493 0048 00000000 		.4byte	.LFB73
 1494 004c 1E000000 		.4byte	.LFE73
 1495 0050 00000000 		.4byte	0
 1496 0054 00000000 		.4byte	0
 1497              		.section	.debug_line,"",%progbits
 1498              	.Ldebug_line0:
 1499 0000 54020000 		.section	.debug_str,"MS",%progbits,1
 1499      02007201 
 1499      00000201 
 1499      FB0E0D00 
 1499      01010101 
 1500              	.LASF48:
 1501 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1501      43313120 
 1501      352E342E 
 1501      31203230 
 1501      31363036 
 1502 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1502      20726576 
 1502      6973696F 
 1502      6E203233 
 1502      37373135 
 1503 0066 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1503      66756E63 
 1503      74696F6E 
 1503      2D736563 
 1503      74696F6E 
 1504              	.LASF28:
 1505 008e 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 1505      576F726B 
 1505      576F726B 
 1505      576F726B 
 1505      576F726B 
 1506              	.LASF43:
 1507 00a7 64656275 		.ascii	"debug_string\000"
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 32


 1507      675F7374 
 1507      72696E67 
 1507      00
 1508              	.LASF9:
 1509 00b4 5F5F696E 		.ascii	"__int32_t\000"
 1509      7433325F 
 1509      7400
 1510              	.LASF26:
 1511 00be 74657374 		.ascii	"test_t\000"
 1511      5F7400
 1512              	.LASF37:
 1513 00c5 43726561 		.ascii	"CreateAlarm\000"
 1513      7465416C 
 1513      61726D00 
 1514              	.LASF21:
 1515 00d1 636F756E 		.ascii	"countDownResetCondition\000"
 1515      74446F77 
 1515      6E526573 
 1515      6574436F 
 1515      6E646974 
 1516              	.LASF11:
 1517 00e9 75696E74 		.ascii	"uint8\000"
 1517      3800
 1518              	.LASF24:
 1519 00ef 73746174 		.ascii	"status\000"
 1519      757300
 1520              	.LASF32:
 1521 00f6 616C6172 		.ascii	"alarmToBeUpdated\000"
 1521      6D546F42 
 1521      65557064 
 1521      61746564 
 1521      00
 1522              	.LASF36:
 1523 0107 416C6172 		.ascii	"AlarmReady\000"
 1523      6D526561 
 1523      647900
 1524              	.LASF40:
 1525 0112 745F7364 		.ascii	"t_sd_card\000"
 1525      5F636172 
 1525      6400
 1526              	.LASF13:
 1527 011c 666C6F61 		.ascii	"float\000"
 1527      7400
 1528              	.LASF50:
 1529 0122 433A5C55 		.ascii	"C:\\Users\\bk\\Documents\\GitHub\\Open Storm\\notor"
 1529      73657273 
 1529      5C626B5C 
 1529      446F6375 
 1529      6D656E74 
 1530 014f 694F535C 		.ascii	"iOS\\notoriOS\\notoriOS.cydsn\000"
 1530      6E6F746F 
 1530      72694F53 
 1530      5C6E6F74 
 1530      6F72694F 
 1531              	.LASF34:
 1532 016b 52657365 		.ascii	"ResetAlarm\000"
 1532      74416C61 
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 33


 1532      726D00
 1533              	.LASF1:
 1534 0176 756E7369 		.ascii	"unsigned char\000"
 1534      676E6564 
 1534      20636861 
 1534      7200
 1535              	.LASF18:
 1536 0184 636F756E 		.ascii	"countDownValue\000"
 1536      74446F77 
 1536      6E56616C 
 1536      756500
 1537              	.LASF44:
 1538 0193 616C6172 		.ascii	"alarmMeasure\000"
 1538      6D4D6561 
 1538      73757265 
 1538      00
 1539              	.LASF5:
 1540 01a0 6C6F6E67 		.ascii	"long unsigned int\000"
 1540      20756E73 
 1540      69676E65 
 1540      6420696E 
 1540      7400
 1541              	.LASF3:
 1542 01b2 73686F72 		.ascii	"short unsigned int\000"
 1542      7420756E 
 1542      7369676E 
 1542      65642069 
 1542      6E7400
 1543              	.LASF22:
 1544 01c5 616C6172 		.ascii	"alarm\000"
 1544      6D00
 1545              	.LASF42:
 1546 01cb 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1546      52784275 
 1546      66666572 
 1546      00
 1547              	.LASF20:
 1548 01d8 636F756E 		.ascii	"countDownType\000"
 1548      74446F77 
 1548      6E547970 
 1548      6500
 1549              	.LASF14:
 1550 01e6 646F7562 		.ascii	"double\000"
 1550      6C6500
 1551              	.LASF52:
 1552 01ed 6D61696E 		.ascii	"main\000"
 1552      00
 1553              	.LASF12:
 1554 01f2 75696E74 		.ascii	"uint16\000"
 1554      313600
 1555              	.LASF46:
 1556 01f9 616C6172 		.ascii	"alarmMeasure2\000"
 1556      6D4D6561 
 1556      73757265 
 1556      3200
 1557              	.LASF8:
 1558 0207 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 34


 1558      676E6564 
 1558      20696E74 
 1558      00
 1559              	.LASF41:
 1560 0214 745F766F 		.ascii	"t_voltages\000"
 1560      6C746167 
 1560      657300
 1561              	.LASF7:
 1562 021f 6C6F6E67 		.ascii	"long long unsigned int\000"
 1562      206C6F6E 
 1562      6720756E 
 1562      7369676E 
 1562      65642069 
 1563              	.LASF25:
 1564 0236 72656173 		.ascii	"reason\000"
 1564      6F6E00
 1565              	.LASF45:
 1566 023d 74696D65 		.ascii	"timeToMeasure\000"
 1566      546F4D65 
 1566      61737572 
 1566      6500
 1567              	.LASF27:
 1568 024b 57616B65 		.ascii	"Wakeup_ISR\000"
 1568      75705F49 
 1568      535200
 1569              	.LASF38:
 1570 0256 6E657741 		.ascii	"newAlarm\000"
 1570      6C61726D 
 1570      00
 1571              	.LASF30:
 1572 025f 4C617942 		.ascii	"LayBack\000"
 1572      61636B00 
 1573              	.LASF39:
 1574 0267 745F6C65 		.ascii	"t_level_sensor\000"
 1574      76656C5F 
 1574      73656E73 
 1574      6F7200
 1575              	.LASF6:
 1576 0276 6C6F6E67 		.ascii	"long long int\000"
 1576      206C6F6E 
 1576      6720696E 
 1576      7400
 1577              	.LASF17:
 1578 0284 73697A65 		.ascii	"sizetype\000"
 1578      74797065 
 1578      00
 1579              	.LASF49:
 1580 028d 6D61696E 		.ascii	"main.c\000"
 1580      2E6300
 1581              	.LASF15:
 1582 0294 63686172 		.ascii	"char\000"
 1582      00
 1583              	.LASF19:
 1584 0299 63757272 		.ascii	"currentCountDownValue\000"
 1584      656E7443 
 1584      6F756E74 
 1584      446F776E 
ARM GAS  C:\Users\bk\AppData\Local\Temp\ccMVwOIE.s 			page 35


 1584      56616C75 
 1585              	.LASF10:
 1586 02af 696E7433 		.ascii	"int32_t\000"
 1586      325F7400 
 1587              	.LASF31:
 1588 02b7 616C6172 		.ascii	"alarmType\000"
 1588      6D547970 
 1588      6500
 1589              	.LASF2:
 1590 02c1 73686F72 		.ascii	"short int\000"
 1590      7420696E 
 1590      7400
 1591              	.LASF35:
 1592 02cb 616C6172 		.ascii	"alarmToBeReset\000"
 1592      6D546F42 
 1592      65526573 
 1592      657400
 1593              	.LASF23:
 1594 02da 74657374 		.ascii	"test_name\000"
 1594      5F6E616D 
 1594      6500
 1595              	.LASF4:
 1596 02e4 6C6F6E67 		.ascii	"long int\000"
 1596      20696E74 
 1596      00
 1597              	.LASF29:
 1598 02ed 52656164 		.ascii	"ReadyOrNot\000"
 1598      794F724E 
 1598      6F7400
 1599              	.LASF16:
 1600 02f8 6C6F6E67 		.ascii	"long double\000"
 1600      20646F75 
 1600      626C6500 
 1601              	.LASF47:
 1602 0304 74696D65 		.ascii	"timeToMeasure2\000"
 1602      546F4D65 
 1602      61737572 
 1602      653200
 1603              	.LASF0:
 1604 0313 7369676E 		.ascii	"signed char\000"
 1604      65642063 
 1604      68617200 
 1605              	.LASF51:
 1606 031f 43686963 		.ascii	"ChickityCheckYourselfBeforeYouWreckYourself\000"
 1606      6B697479 
 1606      43686563 
 1606      6B596F75 
 1606      7273656C 
 1607              	.LASF33:
 1608 034b 41796F49 		.ascii	"AyoItsTime\000"
 1608      74735469 
 1608      6D6500
 1609              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
