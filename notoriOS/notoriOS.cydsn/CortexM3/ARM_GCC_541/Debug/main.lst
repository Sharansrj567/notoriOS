ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	alarmMeasure,6,4
  20              		.comm	timeToMeasure,1,1
  21              		.comm	alarmMeasure2,6,4
  22              		.comm	timeToMeasure2,1,1
  23              		.section	.text.Wakeup_ISR,"ax",%progbits
  24              		.align	2
  25              		.global	Wakeup_ISR
  26              		.thumb
  27              		.thumb_func
  28              		.type	Wakeup_ISR, %function
  29              	Wakeup_ISR:
  30              	.LFB63:
  31              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * OPEN-STORM.ORG
   4:main.c        ****  * notoriOS
   5:main.c        ****  * A non-premptive operating system for node.
   6:main.c        ****  *
   7:main.c        ****  * "To all the teachers that told me I'd never amount to nothin"
   8:main.c        ****  *      -Notorious BIG (1994)
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** #include "project.h"
  13:main.c        **** #include "notoriOS.h"
  14:main.c        **** #include "level_sensor.h"
  15:main.c        **** 
  16:main.c        **** 
  17:main.c        **** //global variables
  18:main.c        **** alarm alarmMeasure;
  19:main.c        **** uint8 timeToMeasure;
  20:main.c        **** alarm alarmMeasure2;
  21:main.c        **** uint8 timeToMeasure2;
  22:main.c        **** 
  23:main.c        **** 
  24:main.c        **** // This function must always be called (when the Sleep Timer's interrupt
  25:main.c        **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  26:main.c        **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 2


  27:main.c        **** // of the ILO) after CTW event occurred.
  28:main.c        **** CY_ISR(Wakeup_ISR) {
  32              		.loc 1 28 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 80B5     		push	{r7, lr}
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 00AF     		add	r7, sp, #0
  41              		.cfi_def_cfa_register 7
  29:main.c        ****     SleepTimer_GetStatus();
  42              		.loc 1 29 0
  43 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  30:main.c        **** }
  44              		.loc 1 30 0
  45 0008 00BF     		nop
  46 000a 80BD     		pop	{r7, pc}
  47              		.cfi_endproc
  48              	.LFE63:
  49              		.size	Wakeup_ISR, .-Wakeup_ISR
  50              		.section	.text.ReadyOrNot,"ax",%progbits
  51              		.align	2
  52              		.global	ReadyOrNot
  53              		.thumb
  54              		.thumb_func
  55              		.type	ReadyOrNot, %function
  56              	ReadyOrNot:
  57              	.LFB64:
  31:main.c        **** 
  32:main.c        **** 
  33:main.c        **** // ==============================================
  34:main.c        **** // Ready or not, here I come, you can't hide
  35:main.c        **** // Gonna find you and take it slowly
  36:main.c        **** //      - The Fugees (1996)
  37:main.c        **** //
  38:main.c        **** // Initialize and critical hardware or routines 
  39:main.c        **** // ==============================================
  40:main.c        **** void ReadyOrNot()
  41:main.c        **** {
  58              		.loc 1 41 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 8
  61              		@ frame_needed = 1, uses_anonymous_args = 0
  62 0000 90B5     		push	{r4, r7, lr}
  63              		.cfi_def_cfa_offset 12
  64              		.cfi_offset 4, -12
  65              		.cfi_offset 7, -8
  66              		.cfi_offset 14, -4
  67 0002 83B0     		sub	sp, sp, #12
  68              		.cfi_def_cfa_offset 24
  69 0004 00AF     		add	r7, sp, #0
  70              		.cfi_def_cfa_register 7
  42:main.c        ****     
  43:main.c        ****     isr_SleepTimer_StartEx(Wakeup_ISR);// Start Sleep ISR
  71              		.loc 1 43 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 3


  72 0006 0F48     		ldr	r0, .L3
  73 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
  44:main.c        ****     SleepTimer_Start();             // Start SleepTimer Component
  74              		.loc 1 44 0
  75 000c FFF7FEFF 		bl	SleepTimer_Start
  45:main.c        ****     
  46:main.c        ****     RTC_WriteIntervalMask(0b11111111);
  76              		.loc 1 46 0
  77 0010 FF20     		movs	r0, #255
  78 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  47:main.c        ****     RTC_Start();
  79              		.loc 1 47 0
  80 0016 FFF7FEFF 		bl	RTC_Start
  48:main.c        ****     
  49:main.c        ****     alarmMeasure = CreateAlarm(2,ALARM_TYPE_SECOND,ALARM_TYPE_CONTINUOUS);
  81              		.loc 1 49 0
  82 001a 0B4C     		ldr	r4, .L3+4
  83 001c 3846     		mov	r0, r7
  84 001e 0723     		movs	r3, #7
  85 0020 0022     		movs	r2, #0
  86 0022 0221     		movs	r1, #2
  87 0024 FFF7FEFF 		bl	CreateAlarm
  88 0028 2246     		mov	r2, r4
  89 002a 3B46     		mov	r3, r7
  90 002c 1968     		ldr	r1, [r3]	@ unaligned
  91 002e 1160     		str	r1, [r2]	@ unaligned
  92 0030 9B88     		ldrh	r3, [r3, #4]	@ unaligned
  93 0032 9380     		strh	r3, [r2, #4]	@ unaligned
  50:main.c        ****     timeToMeasure = 0;
  94              		.loc 1 50 0
  95 0034 054B     		ldr	r3, .L3+8
  96 0036 0022     		movs	r2, #0
  97 0038 1A70     		strb	r2, [r3]
  51:main.c        ****     //alarmMeasure2 = CreateAlarm(10,ALARM_TYPE_SECOND,ALARM_TYPE_CONTINUOUS);
  52:main.c        ****     //timeToMeasure = 0;
  53:main.c        ****     
  54:main.c        **** }
  98              		.loc 1 54 0
  99 003a 00BF     		nop
 100 003c 0C37     		adds	r7, r7, #12
 101              		.cfi_def_cfa_offset 12
 102 003e BD46     		mov	sp, r7
 103              		.cfi_def_cfa_register 13
 104              		@ sp needed
 105 0040 90BD     		pop	{r4, r7, pc}
 106              	.L4:
 107 0042 00BF     		.align	2
 108              	.L3:
 109 0044 00000000 		.word	Wakeup_ISR
 110 0048 00000000 		.word	alarmMeasure
 111 004c 00000000 		.word	timeToMeasure
 112              		.cfi_endproc
 113              	.LFE64:
 114              		.size	ReadyOrNot, .-ReadyOrNot
 115              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 116              		.align	2
 117              		.global	WorkWorkWorkWorkWorkWork
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 4


 118              		.thumb
 119              		.thumb_func
 120              		.type	WorkWorkWorkWorkWorkWork, %function
 121              	WorkWorkWorkWorkWorkWork:
 122              	.LFB65:
  55:main.c        **** 
  56:main.c        **** // ==============================================
  57:main.c        **** // You see me I be work, work, work, work, work, work 
  58:main.c        **** //      - Rhiana, feat Drake (2016)
  59:main.c        **** //
  60:main.c        **** // Prorcesses core tasks
  61:main.c        **** // ==============================================
  62:main.c        **** int WorkWorkWorkWorkWorkWork()
  63:main.c        **** {
 123              		.loc 1 63 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 1, uses_anonymous_args = 0
 127 0000 80B5     		push	{r7, lr}
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 7, -8
 130              		.cfi_offset 14, -4
 131 0002 00AF     		add	r7, sp, #0
 132              		.cfi_def_cfa_register 7
  64:main.c        ****    
  65:main.c        ****     if(timeToMeasure){
 133              		.loc 1 65 0
 134 0004 094B     		ldr	r3, .L8
 135 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 136 0008 002B     		cmp	r3, #0
 137 000a 0BD0     		beq	.L6
  66:main.c        ****         //CyDelay(1000u);
  67:main.c        ****        LED_Write(1u);
 138              		.loc 1 67 0
 139 000c 0120     		movs	r0, #1
 140 000e FFF7FEFF 		bl	LED_Write
  68:main.c        ****         CyDelay(100u);
 141              		.loc 1 68 0
 142 0012 6420     		movs	r0, #100
 143 0014 FFF7FEFF 		bl	CyDelay
  69:main.c        ****         LED_Write(0u);
 144              		.loc 1 69 0
 145 0018 0020     		movs	r0, #0
 146 001a FFF7FEFF 		bl	LED_Write
  70:main.c        ****         timeToMeasure = 0u;
 147              		.loc 1 70 0
 148 001e 034B     		ldr	r3, .L8
 149 0020 0022     		movs	r2, #0
 150 0022 1A70     		strb	r2, [r3]
 151              	.L6:
  71:main.c        ****     }
  72:main.c        ****     //if(timeToMeasure2){
  73:main.c        ****         //dosomething
  74:main.c        ****     //}
  75:main.c        ****     
  76:main.c        ****     return 0;   
 152              		.loc 1 76 0
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 5


 153 0024 0023     		movs	r3, #0
  77:main.c        **** }
 154              		.loc 1 77 0
 155 0026 1846     		mov	r0, r3
 156 0028 80BD     		pop	{r7, pc}
 157              	.L9:
 158 002a 00BF     		.align	2
 159              	.L8:
 160 002c 00000000 		.word	timeToMeasure
 161              		.cfi_endproc
 162              	.LFE65:
 163              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 164              		.section	.text.LayBack,"ax",%progbits
 165              		.align	2
 166              		.global	LayBack
 167              		.thumb
 168              		.thumb_func
 169              		.type	LayBack, %function
 170              	LayBack:
 171              	.LFB66:
  78:main.c        **** 
  79:main.c        **** 
  80:main.c        **** // ==============================================
  81:main.c        **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
  82:main.c        **** //      - Snoop Dogg (1993)
  83:main.c        **** //
  84:main.c        **** // Put all hardware to sleep and go into low power mode to conserve Amps
  85:main.c        **** // ==============================================
  86:main.c        **** void LayBack()
  87:main.c        **** {
 172              		.loc 1 87 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176 0000 80B5     		push	{r7, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 7, -8
 179              		.cfi_offset 14, -4
 180 0002 00AF     		add	r7, sp, #0
 181              		.cfi_def_cfa_register 7
  88:main.c        ****     // Prepares system clocks for the Sleep mode
  89:main.c        ****     CyPmSaveClocks();
 182              		.loc 1 89 0
 183 0004 FFF7FEFF 		bl	CyPmSaveClocks
  90:main.c        ****     
  91:main.c        ****     // Switch to the Sleep Mode for the other devices:
  92:main.c        ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
  93:main.c        ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
  94:main.c        ****      //  - If real-time clock is used, it will also wake the device
  95:main.c        ****     //CyPmHibernate();
  96:main.c        ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW);
 184              		.loc 1 96 0
 185 0008 4FF40061 		mov	r1, #2048
 186 000c 0020     		movs	r0, #0
 187 000e FFF7FEFF 		bl	CyPmSleep
  97:main.c        ****   
  98:main.c        ****     // Restore clock configuration
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 6


  99:main.c        ****     CyPmRestoreClocks();
 188              		.loc 1 99 0
 189 0012 FFF7FEFF 		bl	CyPmRestoreClocks
 100:main.c        ****     
 101:main.c        **** }
 190              		.loc 1 101 0
 191 0016 00BF     		nop
 192 0018 80BD     		pop	{r7, pc}
 193              		.cfi_endproc
 194              	.LFE66:
 195              		.size	LayBack, .-LayBack
 196 001a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 197              		.align	2
 198              		.global	AyoItsTime
 199              		.thumb
 200              		.thumb_func
 201              		.type	AyoItsTime, %function
 202              	AyoItsTime:
 203              	.LFB67:
 102:main.c        **** 
 103:main.c        **** 
 104:main.c        **** // ==============================================
 105:main.c        **** // I never sleep, 'cause sleep is the cousin of death
 106:main.c        **** //      - NAS (1994)
 107:main.c        **** //
 108:main.c        **** // This is the scheduler. It's called from various interrupts and timers,
 109:main.c        **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 110:main.c        **** // It will add tasks to the work queue,
 111:main.c        **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 112:main.c        **** // ==============================================
 113:main.c        **** void AyoItsTime(uint8 alarmType)
 114:main.c        **** {
 204              		.loc 1 114 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 8
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208 0000 80B5     		push	{r7, lr}
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 7, -8
 211              		.cfi_offset 14, -4
 212 0002 82B0     		sub	sp, sp, #8
 213              		.cfi_def_cfa_offset 16
 214 0004 00AF     		add	r7, sp, #0
 215              		.cfi_def_cfa_register 7
 216 0006 0346     		mov	r3, r0
 217 0008 FB71     		strb	r3, [r7, #7]
 115:main.c        **** 
 116:main.c        ****     if(AlarmReady(&alarmMeasure,alarmType))
 218              		.loc 1 116 0
 219 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 220 000c 1946     		mov	r1, r3
 221 000e 0C48     		ldr	r0, .L15
 222 0010 FFF7FEFF 		bl	AlarmReady
 223 0014 0346     		mov	r3, r0
 224 0016 002B     		cmp	r3, #0
 225 0018 02D0     		beq	.L12
 117:main.c        ****     {
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 7


 118:main.c        ****          //create new task and pass off to workworkworkworkwork()
 119:main.c        ****         //pass off to work work
 120:main.c        ****         timeToMeasure = 1u;
 226              		.loc 1 120 0
 227 001a 0A4B     		ldr	r3, .L15+4
 228 001c 0122     		movs	r2, #1
 229 001e 1A70     		strb	r2, [r3]
 230              	.L12:
 121:main.c        ****     }
 122:main.c        ****     if(AlarmReady(&alarmMeasure2,alarmType))
 231              		.loc 1 122 0
 232 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 233 0022 1946     		mov	r1, r3
 234 0024 0848     		ldr	r0, .L15+8
 235 0026 FFF7FEFF 		bl	AlarmReady
 236 002a 0346     		mov	r3, r0
 237 002c 002B     		cmp	r3, #0
 238 002e 02D0     		beq	.L14
 123:main.c        ****     {
 124:main.c        ****          //create new task and pass off to workworkworkworkwork()
 125:main.c        ****         //pass off to work work
 126:main.c        ****         timeToMeasure2 = 1u;
 239              		.loc 1 126 0
 240 0030 064B     		ldr	r3, .L15+12
 241 0032 0122     		movs	r2, #1
 242 0034 1A70     		strb	r2, [r3]
 243              	.L14:
 127:main.c        ****     }
 128:main.c        ****     
 129:main.c        **** }
 244              		.loc 1 129 0
 245 0036 00BF     		nop
 246 0038 0837     		adds	r7, r7, #8
 247              		.cfi_def_cfa_offset 8
 248 003a BD46     		mov	sp, r7
 249              		.cfi_def_cfa_register 13
 250              		@ sp needed
 251 003c 80BD     		pop	{r7, pc}
 252              	.L16:
 253 003e 00BF     		.align	2
 254              	.L15:
 255 0040 00000000 		.word	alarmMeasure
 256 0044 00000000 		.word	timeToMeasure
 257 0048 00000000 		.word	alarmMeasure2
 258 004c 00000000 		.word	timeToMeasure2
 259              		.cfi_endproc
 260              	.LFE67:
 261              		.size	AyoItsTime, .-AyoItsTime
 262              		.section	.text.AlarmReady,"ax",%progbits
 263              		.align	2
 264              		.global	AlarmReady
 265              		.thumb
 266              		.thumb_func
 267              		.type	AlarmReady, %function
 268              	AlarmReady:
 269              	.LFB68:
 130:main.c        ****         
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 8


 131:main.c        **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 132:main.c        **** {
 270              		.loc 1 132 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 8
 273              		@ frame_needed = 1, uses_anonymous_args = 0
 274 0000 80B5     		push	{r7, lr}
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 7, -8
 277              		.cfi_offset 14, -4
 278 0002 82B0     		sub	sp, sp, #8
 279              		.cfi_def_cfa_offset 16
 280 0004 00AF     		add	r7, sp, #0
 281              		.cfi_def_cfa_register 7
 282 0006 7860     		str	r0, [r7, #4]
 283 0008 0B46     		mov	r3, r1
 284 000a FB70     		strb	r3, [r7, #3]
 133:main.c        ****     alarmToBeUpdated->currentCountDownValue--;
 285              		.loc 1 133 0
 286 000c 7B68     		ldr	r3, [r7, #4]
 287 000e 5B88     		ldrh	r3, [r3, #2]	@ movhi
 288 0010 9BB2     		uxth	r3, r3
 289 0012 013B     		subs	r3, r3, #1
 290 0014 9AB2     		uxth	r2, r3
 291 0016 7B68     		ldr	r3, [r7, #4]
 292 0018 5A80     		strh	r2, [r3, #2]	@ movhi
 134:main.c        ****     if(alarmToBeUpdated->currentCountDownValue == 0){
 293              		.loc 1 134 0
 294 001a 7B68     		ldr	r3, [r7, #4]
 295 001c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 296 001e 9BB2     		uxth	r3, r3
 297 0020 002B     		cmp	r3, #0
 298 0022 04D1     		bne	.L18
 135:main.c        ****         ResetAlarm(alarmToBeUpdated);
 299              		.loc 1 135 0
 300 0024 7868     		ldr	r0, [r7, #4]
 301 0026 FFF7FEFF 		bl	ResetAlarm
 136:main.c        ****         return 1u;
 302              		.loc 1 136 0
 303 002a 0123     		movs	r3, #1
 304 002c 09E0     		b	.L19
 305              	.L18:
 137:main.c        ****     } 
 138:main.c        ****     else if(alarmToBeUpdated->countDownResetCondition == alarmType){
 306              		.loc 1 138 0
 307 002e 7B68     		ldr	r3, [r7, #4]
 308 0030 5B79     		ldrb	r3, [r3, #5]
 309 0032 DBB2     		uxtb	r3, r3
 310 0034 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 311 0036 9A42     		cmp	r2, r3
 312 0038 02D1     		bne	.L20
 139:main.c        ****         ResetAlarm(alarmToBeUpdated);
 313              		.loc 1 139 0
 314 003a 7868     		ldr	r0, [r7, #4]
 315 003c FFF7FEFF 		bl	ResetAlarm
 316              	.L20:
 140:main.c        ****     }
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 9


 141:main.c        ****     
 142:main.c        ****     return 0u;
 317              		.loc 1 142 0
 318 0040 0023     		movs	r3, #0
 319              	.L19:
 143:main.c        **** }
 320              		.loc 1 143 0
 321 0042 1846     		mov	r0, r3
 322 0044 0837     		adds	r7, r7, #8
 323              		.cfi_def_cfa_offset 8
 324 0046 BD46     		mov	sp, r7
 325              		.cfi_def_cfa_register 13
 326              		@ sp needed
 327 0048 80BD     		pop	{r7, pc}
 328              		.cfi_endproc
 329              	.LFE68:
 330              		.size	AlarmReady, .-AlarmReady
 331 004a 00BF     		.section	.text.ResetAlarm,"ax",%progbits
 332              		.align	2
 333              		.global	ResetAlarm
 334              		.thumb
 335              		.thumb_func
 336              		.type	ResetAlarm, %function
 337              	ResetAlarm:
 338              	.LFB69:
 144:main.c        **** 
 145:main.c        **** void ResetAlarm(alarm * alarmToBeReset)
 146:main.c        **** {
 339              		.loc 1 146 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 8
 342              		@ frame_needed = 1, uses_anonymous_args = 0
 343              		@ link register save eliminated.
 344 0000 80B4     		push	{r7}
 345              		.cfi_def_cfa_offset 4
 346              		.cfi_offset 7, -4
 347 0002 83B0     		sub	sp, sp, #12
 348              		.cfi_def_cfa_offset 16
 349 0004 00AF     		add	r7, sp, #0
 350              		.cfi_def_cfa_register 7
 351 0006 7860     		str	r0, [r7, #4]
 147:main.c        ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 352              		.loc 1 147 0
 353 0008 7B68     		ldr	r3, [r7, #4]
 354 000a 1B88     		ldrh	r3, [r3]	@ movhi
 355 000c 9AB2     		uxth	r2, r3
 356 000e 7B68     		ldr	r3, [r7, #4]
 357 0010 5A80     		strh	r2, [r3, #2]	@ movhi
 148:main.c        **** }
 358              		.loc 1 148 0
 359 0012 00BF     		nop
 360 0014 0C37     		adds	r7, r7, #12
 361              		.cfi_def_cfa_offset 4
 362 0016 BD46     		mov	sp, r7
 363              		.cfi_def_cfa_register 13
 364              		@ sp needed
 365 0018 80BC     		pop	{r7}
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 10


 366              		.cfi_restore 7
 367              		.cfi_def_cfa_offset 0
 368 001a 7047     		bx	lr
 369              		.cfi_endproc
 370              	.LFE69:
 371              		.size	ResetAlarm, .-ResetAlarm
 372              		.section	.text.CreateAlarm,"ax",%progbits
 373              		.align	2
 374              		.global	CreateAlarm
 375              		.thumb
 376              		.thumb_func
 377              		.type	CreateAlarm, %function
 378              	CreateAlarm:
 379              	.LFB70:
 149:main.c        **** 
 150:main.c        **** // ==============================================
 151:main.c        **** // Creates a new alarm, which will be handeled by another cutions
 152:main.c        **** // ==============================================
 153:main.c        **** 
 154:main.c        **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 155:main.c        **** {
 380              		.loc 1 155 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 16
 383              		@ frame_needed = 1, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 385 0000 80B4     		push	{r7}
 386              		.cfi_def_cfa_offset 4
 387              		.cfi_offset 7, -4
 388 0002 85B0     		sub	sp, sp, #20
 389              		.cfi_def_cfa_offset 24
 390 0004 00AF     		add	r7, sp, #0
 391              		.cfi_def_cfa_register 7
 392 0006 7860     		str	r0, [r7, #4]
 393 0008 0846     		mov	r0, r1
 394 000a 1146     		mov	r1, r2
 395 000c 1A46     		mov	r2, r3
 396 000e 0346     		mov	r3, r0	@ movhi
 397 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 398 0012 0B46     		mov	r3, r1
 399 0014 7B70     		strb	r3, [r7, #1]
 400 0016 1346     		mov	r3, r2
 401 0018 3B70     		strb	r3, [r7]
 156:main.c        ****     alarm newAlarm;
 157:main.c        ****     
 158:main.c        ****     newAlarm.countDownValue = countDownValue;
 402              		.loc 1 158 0
 403 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 404 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 159:main.c        ****     newAlarm.countDownType = countDownType;
 405              		.loc 1 159 0
 406 001e 7B78     		ldrb	r3, [r7, #1]
 407 0020 3B73     		strb	r3, [r7, #12]
 160:main.c        ****     newAlarm.countDownResetCondition = countDownResetCondition;
 408              		.loc 1 160 0
 409 0022 3B78     		ldrb	r3, [r7]
 410 0024 7B73     		strb	r3, [r7, #13]
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 11


 161:main.c        ****     
 162:main.c        ****     //if you want a reccuring alarm (e.g. resets freshly each hour), then add
 163:main.c        ****     //account for already exprired time using the RTC. Otherwise, set to the countDownValue
 164:main.c        ****     newAlarm.currentCountDownValue = countDownValue;
 411              		.loc 1 164 0
 412 0026 7B88     		ldrh	r3, [r7, #2]	@ movhi
 413 0028 7B81     		strh	r3, [r7, #10]	@ movhi
 165:main.c        ****     
 166:main.c        ****     return newAlarm;
 414              		.loc 1 166 0
 415 002a 7B68     		ldr	r3, [r7, #4]
 416 002c 1A46     		mov	r2, r3
 417 002e 07F10803 		add	r3, r7, #8
 418 0032 1868     		ldr	r0, [r3]	@ unaligned
 419 0034 1060     		str	r0, [r2]	@ unaligned
 420 0036 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 421 0038 9380     		strh	r3, [r2, #4]	@ unaligned
 167:main.c        ****     
 168:main.c        **** }
 422              		.loc 1 168 0
 423 003a 7868     		ldr	r0, [r7, #4]
 424 003c 1437     		adds	r7, r7, #20
 425              		.cfi_def_cfa_offset 4
 426 003e BD46     		mov	sp, r7
 427              		.cfi_def_cfa_register 13
 428              		@ sp needed
 429 0040 80BC     		pop	{r7}
 430              		.cfi_restore 7
 431              		.cfi_def_cfa_offset 0
 432 0042 7047     		bx	lr
 433              		.cfi_endproc
 434              	.LFE70:
 435              		.size	CreateAlarm, .-CreateAlarm
 436              		.section	.text.test_components,"ax",%progbits
 437              		.align	2
 438              		.global	test_components
 439              		.thumb
 440              		.thumb_func
 441              		.type	test_components, %function
 442              	test_components:
 443              	.LFB71:
 169:main.c        **** 
 170:main.c        **** 
 171:main.c        **** void test_components(){
 444              		.loc 1 171 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 392
 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448 0000 80B5     		push	{r7, lr}
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 7, -8
 451              		.cfi_offset 14, -4
 452 0002 E2B0     		sub	sp, sp, #392
 453              		.cfi_def_cfa_offset 400
 454 0004 00AF     		add	r7, sp, #0
 455              		.cfi_def_cfa_register 7
 172:main.c        **** 
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 12


 173:main.c        ****     test_t t_level_sensor = level_sensor_test();  
 456              		.loc 1 173 0
 457 0006 3B1D     		adds	r3, r7, #4
 458 0008 1846     		mov	r0, r3
 459 000a FFF7FEFF 		bl	level_sensor_test
 174:main.c        ****     uint8 i;
 175:main.c        ****     i++;
 460              		.loc 1 175 0
 461 000e 97F88731 		ldrb	r3, [r7, #391]	@ zero_extendqisi2
 462 0012 0133     		adds	r3, r3, #1
 463 0014 87F88731 		strb	r3, [r7, #391]
 176:main.c        ****     
 177:main.c        ****     
 178:main.c        **** }
 464              		.loc 1 178 0
 465 0018 00BF     		nop
 466 001a 07F5C477 		add	r7, r7, #392
 467              		.cfi_def_cfa_offset 8
 468 001e BD46     		mov	sp, r7
 469              		.cfi_def_cfa_register 13
 470              		@ sp needed
 471 0020 80BD     		pop	{r7, pc}
 472              		.cfi_endproc
 473              	.LFE71:
 474              		.size	test_components, .-test_components
 475 0022 00BF     		.section	.text.main,"ax",%progbits
 476              		.align	2
 477              		.global	main
 478              		.thumb
 479              		.thumb_func
 480              		.type	main, %function
 481              	main:
 482              	.LFB72:
 179:main.c        **** 
 180:main.c        **** int main(void)
 181:main.c        **** {
 483              		.loc 1 181 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 1, uses_anonymous_args = 0
 487 0000 80B5     		push	{r7, lr}
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 7, -8
 490              		.cfi_offset 14, -4
 491 0002 00AF     		add	r7, sp, #0
 492              		.cfi_def_cfa_register 7
 182:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 493              		.loc 1 182 0
 494              		.syntax unified
 495              	@ 182 "main.c" 1
 496 0004 62B6     		CPSIE   i
 497              	@ 0 "" 2
 183:main.c        **** 
 184:main.c        ****     ReadyOrNot();
 498              		.loc 1 184 0
 499              		.thumb
 500              		.syntax unified
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 13


 501 0006 FFF7FEFF 		bl	ReadyOrNot
 185:main.c        ****     
 186:main.c        ****     test_components();
 502              		.loc 1 186 0
 503 000a FFF7FEFF 		bl	test_components
 504              	.L27:
 187:main.c        ****    
 188:main.c        ****     for(;;)
 189:main.c        ****     {
 190:main.c        ****        if( ! WorkWorkWorkWorkWorkWork() )
 505              		.loc 1 190 0
 506 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 507 0012 0346     		mov	r3, r0
 508 0014 002B     		cmp	r3, #0
 509 0016 FAD1     		bne	.L27
 191:main.c        ****        {
 192:main.c        ****             LayBack();
 510              		.loc 1 192 0
 511 0018 FFF7FEFF 		bl	LayBack
 193:main.c        ****        }
 194:main.c        ****     }
 512              		.loc 1 194 0
 513 001c F7E7     		b	.L27
 514              		.cfi_endproc
 515              	.LFE72:
 516              		.size	main, .-main
 517 001e 00BF     		.text
 518              	.Letext0:
 519              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 520              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 521              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 522              		.file 5 "notoriOS.h"
 523              		.file 6 "testing.h"
 524              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 525              		.section	.debug_info,"",%progbits
 526              	.Ldebug_info0:
 527 0000 14030000 		.4byte	0x314
 528 0004 0400     		.2byte	0x4
 529 0006 00000000 		.4byte	.Ldebug_abbrev0
 530 000a 04       		.byte	0x4
 531 000b 01       		.uleb128 0x1
 532 000c 00000000 		.4byte	.LASF45
 533 0010 0C       		.byte	0xc
 534 0011 7B020000 		.4byte	.LASF46
 535 0015 F0010000 		.4byte	.LASF47
 536 0019 00000000 		.4byte	.Ldebug_ranges0+0
 537 001d 00000000 		.4byte	0
 538 0021 00000000 		.4byte	.Ldebug_line0
 539 0025 02       		.uleb128 0x2
 540 0026 01       		.byte	0x1
 541 0027 06       		.byte	0x6
 542 0028 01030000 		.4byte	.LASF0
 543 002c 02       		.uleb128 0x2
 544 002d 01       		.byte	0x1
 545 002e 08       		.byte	0x8
 546 002f 26010000 		.4byte	.LASF1
 547 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 14


 548 0034 02       		.byte	0x2
 549 0035 05       		.byte	0x5
 550 0036 AF020000 		.4byte	.LASF2
 551 003a 02       		.uleb128 0x2
 552 003b 02       		.byte	0x2
 553 003c 07       		.byte	0x7
 554 003d 62010000 		.4byte	.LASF3
 555 0041 03       		.uleb128 0x3
 556 0042 A7000000 		.4byte	.LASF9
 557 0046 02       		.byte	0x2
 558 0047 3F       		.byte	0x3f
 559 0048 4C000000 		.4byte	0x4c
 560 004c 02       		.uleb128 0x2
 561 004d 04       		.byte	0x4
 562 004e 05       		.byte	0x5
 563 004f D2020000 		.4byte	.LASF4
 564 0053 02       		.uleb128 0x2
 565 0054 04       		.byte	0x4
 566 0055 07       		.byte	0x7
 567 0056 50010000 		.4byte	.LASF5
 568 005a 02       		.uleb128 0x2
 569 005b 08       		.byte	0x8
 570 005c 05       		.byte	0x5
 571 005d 64020000 		.4byte	.LASF6
 572 0061 02       		.uleb128 0x2
 573 0062 08       		.byte	0x8
 574 0063 07       		.byte	0x7
 575 0064 C4010000 		.4byte	.LASF7
 576 0068 04       		.uleb128 0x4
 577 0069 04       		.byte	0x4
 578 006a 05       		.byte	0x5
 579 006b 696E7400 		.ascii	"int\000"
 580 006f 02       		.uleb128 0x2
 581 0070 04       		.byte	0x4
 582 0071 07       		.byte	0x7
 583 0072 B7010000 		.4byte	.LASF8
 584 0076 03       		.uleb128 0x3
 585 0077 9D020000 		.4byte	.LASF10
 586 007b 03       		.byte	0x3
 587 007c 2C       		.byte	0x2c
 588 007d 41000000 		.4byte	0x41
 589 0081 05       		.uleb128 0x5
 590 0082 DC000000 		.4byte	.LASF11
 591 0086 04       		.byte	0x4
 592 0087 E401     		.2byte	0x1e4
 593 0089 2C000000 		.4byte	0x2c
 594 008d 05       		.uleb128 0x5
 595 008e A2010000 		.4byte	.LASF12
 596 0092 04       		.byte	0x4
 597 0093 E501     		.2byte	0x1e5
 598 0095 3A000000 		.4byte	0x3a
 599 0099 02       		.uleb128 0x2
 600 009a 04       		.byte	0x4
 601 009b 04       		.byte	0x4
 602 009c 05010000 		.4byte	.LASF13
 603 00a0 02       		.uleb128 0x2
 604 00a1 08       		.byte	0x8
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 15


 605 00a2 04       		.byte	0x4
 606 00a3 96010000 		.4byte	.LASF14
 607 00a7 02       		.uleb128 0x2
 608 00a8 01       		.byte	0x1
 609 00a9 08       		.byte	0x8
 610 00aa 82020000 		.4byte	.LASF15
 611 00ae 02       		.uleb128 0x2
 612 00af 08       		.byte	0x8
 613 00b0 04       		.byte	0x4
 614 00b1 E6020000 		.4byte	.LASF16
 615 00b5 02       		.uleb128 0x2
 616 00b6 04       		.byte	0x4
 617 00b7 07       		.byte	0x7
 618 00b8 72020000 		.4byte	.LASF17
 619 00bc 06       		.uleb128 0x6
 620 00bd 06       		.byte	0x6
 621 00be 05       		.byte	0x5
 622 00bf 18       		.byte	0x18
 623 00c0 F5000000 		.4byte	0xf5
 624 00c4 07       		.uleb128 0x7
 625 00c5 34010000 		.4byte	.LASF18
 626 00c9 05       		.byte	0x5
 627 00ca 1A       		.byte	0x1a
 628 00cb 8D000000 		.4byte	0x8d
 629 00cf 00       		.byte	0
 630 00d0 07       		.uleb128 0x7
 631 00d1 87020000 		.4byte	.LASF19
 632 00d5 05       		.byte	0x5
 633 00d6 1B       		.byte	0x1b
 634 00d7 8D000000 		.4byte	0x8d
 635 00db 02       		.byte	0x2
 636 00dc 07       		.uleb128 0x7
 637 00dd 88010000 		.4byte	.LASF20
 638 00e1 05       		.byte	0x5
 639 00e2 1C       		.byte	0x1c
 640 00e3 81000000 		.4byte	0x81
 641 00e7 04       		.byte	0x4
 642 00e8 07       		.uleb128 0x7
 643 00e9 C4000000 		.4byte	.LASF21
 644 00ed 05       		.byte	0x5
 645 00ee 1D       		.byte	0x1d
 646 00ef 81000000 		.4byte	0x81
 647 00f3 05       		.byte	0x5
 648 00f4 00       		.byte	0
 649 00f5 03       		.uleb128 0x3
 650 00f6 75010000 		.4byte	.LASF22
 651 00fa 05       		.byte	0x5
 652 00fb 1F       		.byte	0x1f
 653 00fc 00010000 		.4byte	0x100
 654 0100 08       		.uleb128 0x8
 655 0101 BC000000 		.4byte	0xbc
 656 0105 09       		.uleb128 0x9
 657 0106 8101     		.2byte	0x181
 658 0108 06       		.byte	0x6
 659 0109 08       		.byte	0x8
 660 010a 33010000 		.4byte	0x133
 661 010e 07       		.uleb128 0x7
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 16


 662 010f C8020000 		.4byte	.LASF23
 663 0113 06       		.byte	0x6
 664 0114 09       		.byte	0x9
 665 0115 33010000 		.4byte	0x133
 666 0119 00       		.byte	0
 667 011a 07       		.uleb128 0x7
 668 011b E2000000 		.4byte	.LASF24
 669 011f 06       		.byte	0x6
 670 0120 0A       		.byte	0xa
 671 0121 81000000 		.4byte	0x81
 672 0125 80       		.byte	0x80
 673 0126 07       		.uleb128 0x7
 674 0127 DB010000 		.4byte	.LASF25
 675 012b 06       		.byte	0x6
 676 012c 0B       		.byte	0xb
 677 012d 43010000 		.4byte	0x143
 678 0131 81       		.byte	0x81
 679 0132 00       		.byte	0
 680 0133 0A       		.uleb128 0xa
 681 0134 A7000000 		.4byte	0xa7
 682 0138 43010000 		.4byte	0x143
 683 013c 0B       		.uleb128 0xb
 684 013d B5000000 		.4byte	0xb5
 685 0141 7F       		.byte	0x7f
 686 0142 00       		.byte	0
 687 0143 0A       		.uleb128 0xa
 688 0144 A7000000 		.4byte	0xa7
 689 0148 53010000 		.4byte	0x153
 690 014c 0B       		.uleb128 0xb
 691 014d B5000000 		.4byte	0xb5
 692 0151 FF       		.byte	0xff
 693 0152 00       		.byte	0
 694 0153 03       		.uleb128 0x3
 695 0154 B1000000 		.4byte	.LASF26
 696 0158 06       		.byte	0x6
 697 0159 0C       		.byte	0xc
 698 015a 05010000 		.4byte	0x105
 699 015e 0C       		.uleb128 0xc
 700 015f 39020000 		.4byte	.LASF27
 701 0163 01       		.byte	0x1
 702 0164 1C       		.byte	0x1c
 703 0165 00000000 		.4byte	.LFB63
 704 0169 0C000000 		.4byte	.LFE63-.LFB63
 705 016d 01       		.uleb128 0x1
 706 016e 9C       		.byte	0x9c
 707 016f 0D       		.uleb128 0xd
 708 0170 DB020000 		.4byte	.LASF29
 709 0174 01       		.byte	0x1
 710 0175 28       		.byte	0x28
 711 0176 00000000 		.4byte	.LFB64
 712 017a 50000000 		.4byte	.LFE64-.LFB64
 713 017e 01       		.uleb128 0x1
 714 017f 9C       		.byte	0x9c
 715 0180 0E       		.uleb128 0xe
 716 0181 8E000000 		.4byte	.LASF28
 717 0185 01       		.byte	0x1
 718 0186 3E       		.byte	0x3e
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 17


 719 0187 68000000 		.4byte	0x68
 720 018b 00000000 		.4byte	.LFB65
 721 018f 30000000 		.4byte	.LFE65-.LFB65
 722 0193 01       		.uleb128 0x1
 723 0194 9C       		.byte	0x9c
 724 0195 0D       		.uleb128 0xd
 725 0196 4D020000 		.4byte	.LASF30
 726 019a 01       		.byte	0x1
 727 019b 56       		.byte	0x56
 728 019c 00000000 		.4byte	.LFB66
 729 01a0 1A000000 		.4byte	.LFE66-.LFB66
 730 01a4 01       		.uleb128 0x1
 731 01a5 9C       		.byte	0x9c
 732 01a6 0F       		.uleb128 0xf
 733 01a7 0D030000 		.4byte	.LASF33
 734 01ab 01       		.byte	0x1
 735 01ac 71       		.byte	0x71
 736 01ad 00000000 		.4byte	.LFB67
 737 01b1 50000000 		.4byte	.LFE67-.LFB67
 738 01b5 01       		.uleb128 0x1
 739 01b6 9C       		.byte	0x9c
 740 01b7 CA010000 		.4byte	0x1ca
 741 01bb 10       		.uleb128 0x10
 742 01bc A5020000 		.4byte	.LASF31
 743 01c0 01       		.byte	0x1
 744 01c1 71       		.byte	0x71
 745 01c2 81000000 		.4byte	0x81
 746 01c6 02       		.uleb128 0x2
 747 01c7 91       		.byte	0x91
 748 01c8 77       		.sleb128 -9
 749 01c9 00       		.byte	0
 750 01ca 11       		.uleb128 0x11
 751 01cb FA000000 		.4byte	.LASF36
 752 01cf 01       		.byte	0x1
 753 01d0 83       		.byte	0x83
 754 01d1 81000000 		.4byte	0x81
 755 01d5 00000000 		.4byte	.LFB68
 756 01d9 4A000000 		.4byte	.LFE68-.LFB68
 757 01dd 01       		.uleb128 0x1
 758 01de 9C       		.byte	0x9c
 759 01df 00020000 		.4byte	0x200
 760 01e3 10       		.uleb128 0x10
 761 01e4 E9000000 		.4byte	.LASF32
 762 01e8 01       		.byte	0x1
 763 01e9 83       		.byte	0x83
 764 01ea 00020000 		.4byte	0x200
 765 01ee 02       		.uleb128 0x2
 766 01ef 91       		.byte	0x91
 767 01f0 74       		.sleb128 -12
 768 01f1 10       		.uleb128 0x10
 769 01f2 A5020000 		.4byte	.LASF31
 770 01f6 01       		.byte	0x1
 771 01f7 83       		.byte	0x83
 772 01f8 81000000 		.4byte	0x81
 773 01fc 02       		.uleb128 0x2
 774 01fd 91       		.byte	0x91
 775 01fe 73       		.sleb128 -13
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 18


 776 01ff 00       		.byte	0
 777 0200 12       		.uleb128 0x12
 778 0201 04       		.byte	0x4
 779 0202 F5000000 		.4byte	0xf5
 780 0206 13       		.uleb128 0x13
 781 0207 1B010000 		.4byte	.LASF34
 782 020b 01       		.byte	0x1
 783 020c 91       		.byte	0x91
 784 020d 00000000 		.4byte	.LFB69
 785 0211 1C000000 		.4byte	.LFE69-.LFB69
 786 0215 01       		.uleb128 0x1
 787 0216 9C       		.byte	0x9c
 788 0217 2A020000 		.4byte	0x22a
 789 021b 10       		.uleb128 0x10
 790 021c B9020000 		.4byte	.LASF35
 791 0220 01       		.byte	0x1
 792 0221 91       		.byte	0x91
 793 0222 00020000 		.4byte	0x200
 794 0226 02       		.uleb128 0x2
 795 0227 91       		.byte	0x91
 796 0228 74       		.sleb128 -12
 797 0229 00       		.byte	0
 798 022a 14       		.uleb128 0x14
 799 022b B8000000 		.4byte	.LASF37
 800 022f 01       		.byte	0x1
 801 0230 9A       		.byte	0x9a
 802 0231 F5000000 		.4byte	0xf5
 803 0235 00000000 		.4byte	.LFB70
 804 0239 44000000 		.4byte	.LFE70-.LFB70
 805 023d 01       		.uleb128 0x1
 806 023e 9C       		.byte	0x9c
 807 023f 7C020000 		.4byte	0x27c
 808 0243 10       		.uleb128 0x10
 809 0244 34010000 		.4byte	.LASF18
 810 0248 01       		.byte	0x1
 811 0249 9A       		.byte	0x9a
 812 024a 8D000000 		.4byte	0x8d
 813 024e 02       		.uleb128 0x2
 814 024f 91       		.byte	0x91
 815 0250 6A       		.sleb128 -22
 816 0251 10       		.uleb128 0x10
 817 0252 88010000 		.4byte	.LASF20
 818 0256 01       		.byte	0x1
 819 0257 9A       		.byte	0x9a
 820 0258 81000000 		.4byte	0x81
 821 025c 02       		.uleb128 0x2
 822 025d 91       		.byte	0x91
 823 025e 69       		.sleb128 -23
 824 025f 10       		.uleb128 0x10
 825 0260 C4000000 		.4byte	.LASF21
 826 0264 01       		.byte	0x1
 827 0265 9A       		.byte	0x9a
 828 0266 81000000 		.4byte	0x81
 829 026a 02       		.uleb128 0x2
 830 026b 91       		.byte	0x91
 831 026c 68       		.sleb128 -24
 832 026d 15       		.uleb128 0x15
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 19


 833 026e 44020000 		.4byte	.LASF38
 834 0272 01       		.byte	0x1
 835 0273 9C       		.byte	0x9c
 836 0274 F5000000 		.4byte	0xf5
 837 0278 02       		.uleb128 0x2
 838 0279 91       		.byte	0x91
 839 027a 70       		.sleb128 -16
 840 027b 00       		.byte	0
 841 027c 16       		.uleb128 0x16
 842 027d 0B010000 		.4byte	.LASF48
 843 0281 01       		.byte	0x1
 844 0282 AB       		.byte	0xab
 845 0283 00000000 		.4byte	.LFB71
 846 0287 22000000 		.4byte	.LFE71-.LFB71
 847 028b 01       		.uleb128 0x1
 848 028c 9C       		.byte	0x9c
 849 028d AD020000 		.4byte	0x2ad
 850 0291 15       		.uleb128 0x15
 851 0292 55020000 		.4byte	.LASF39
 852 0296 01       		.byte	0x1
 853 0297 AD       		.byte	0xad
 854 0298 53010000 		.4byte	0x153
 855 029c 03       		.uleb128 0x3
 856 029d 91       		.byte	0x91
 857 029e F47C     		.sleb128 -396
 858 02a0 17       		.uleb128 0x17
 859 02a1 6900     		.ascii	"i\000"
 860 02a3 01       		.byte	0x1
 861 02a4 AE       		.byte	0xae
 862 02a5 81000000 		.4byte	0x81
 863 02a9 02       		.uleb128 0x2
 864 02aa 91       		.byte	0x91
 865 02ab 77       		.sleb128 -9
 866 02ac 00       		.byte	0
 867 02ad 18       		.uleb128 0x18
 868 02ae 9D010000 		.4byte	.LASF49
 869 02b2 01       		.byte	0x1
 870 02b3 B4       		.byte	0xb4
 871 02b4 68000000 		.4byte	0x68
 872 02b8 00000000 		.4byte	.LFB72
 873 02bc 1E000000 		.4byte	.LFE72-.LFB72
 874 02c0 01       		.uleb128 0x1
 875 02c1 9C       		.byte	0x9c
 876 02c2 19       		.uleb128 0x19
 877 02c3 7B010000 		.4byte	.LASF40
 878 02c7 07       		.byte	0x7
 879 02c8 1207     		.2byte	0x712
 880 02ca CE020000 		.4byte	0x2ce
 881 02ce 08       		.uleb128 0x8
 882 02cf 76000000 		.4byte	0x76
 883 02d3 1A       		.uleb128 0x1a
 884 02d4 43010000 		.4byte	.LASF41
 885 02d8 01       		.byte	0x1
 886 02d9 12       		.byte	0x12
 887 02da F5000000 		.4byte	0xf5
 888 02de 05       		.uleb128 0x5
 889 02df 03       		.byte	0x3
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 20


 890 02e0 00000000 		.4byte	alarmMeasure
 891 02e4 1A       		.uleb128 0x1a
 892 02e5 E2010000 		.4byte	.LASF42
 893 02e9 01       		.byte	0x1
 894 02ea 13       		.byte	0x13
 895 02eb 81000000 		.4byte	0x81
 896 02ef 05       		.uleb128 0x5
 897 02f0 03       		.byte	0x3
 898 02f1 00000000 		.4byte	timeToMeasure
 899 02f5 1A       		.uleb128 0x1a
 900 02f6 A9010000 		.4byte	.LASF43
 901 02fa 01       		.byte	0x1
 902 02fb 14       		.byte	0x14
 903 02fc F5000000 		.4byte	0xf5
 904 0300 05       		.uleb128 0x5
 905 0301 03       		.byte	0x3
 906 0302 00000000 		.4byte	alarmMeasure2
 907 0306 1A       		.uleb128 0x1a
 908 0307 F2020000 		.4byte	.LASF44
 909 030b 01       		.byte	0x1
 910 030c 15       		.byte	0x15
 911 030d 81000000 		.4byte	0x81
 912 0311 05       		.uleb128 0x5
 913 0312 03       		.byte	0x3
 914 0313 00000000 		.4byte	timeToMeasure2
 915 0317 00       		.byte	0
 916              		.section	.debug_abbrev,"",%progbits
 917              	.Ldebug_abbrev0:
 918 0000 01       		.uleb128 0x1
 919 0001 11       		.uleb128 0x11
 920 0002 01       		.byte	0x1
 921 0003 25       		.uleb128 0x25
 922 0004 0E       		.uleb128 0xe
 923 0005 13       		.uleb128 0x13
 924 0006 0B       		.uleb128 0xb
 925 0007 03       		.uleb128 0x3
 926 0008 0E       		.uleb128 0xe
 927 0009 1B       		.uleb128 0x1b
 928 000a 0E       		.uleb128 0xe
 929 000b 55       		.uleb128 0x55
 930 000c 17       		.uleb128 0x17
 931 000d 11       		.uleb128 0x11
 932 000e 01       		.uleb128 0x1
 933 000f 10       		.uleb128 0x10
 934 0010 17       		.uleb128 0x17
 935 0011 00       		.byte	0
 936 0012 00       		.byte	0
 937 0013 02       		.uleb128 0x2
 938 0014 24       		.uleb128 0x24
 939 0015 00       		.byte	0
 940 0016 0B       		.uleb128 0xb
 941 0017 0B       		.uleb128 0xb
 942 0018 3E       		.uleb128 0x3e
 943 0019 0B       		.uleb128 0xb
 944 001a 03       		.uleb128 0x3
 945 001b 0E       		.uleb128 0xe
 946 001c 00       		.byte	0
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 21


 947 001d 00       		.byte	0
 948 001e 03       		.uleb128 0x3
 949 001f 16       		.uleb128 0x16
 950 0020 00       		.byte	0
 951 0021 03       		.uleb128 0x3
 952 0022 0E       		.uleb128 0xe
 953 0023 3A       		.uleb128 0x3a
 954 0024 0B       		.uleb128 0xb
 955 0025 3B       		.uleb128 0x3b
 956 0026 0B       		.uleb128 0xb
 957 0027 49       		.uleb128 0x49
 958 0028 13       		.uleb128 0x13
 959 0029 00       		.byte	0
 960 002a 00       		.byte	0
 961 002b 04       		.uleb128 0x4
 962 002c 24       		.uleb128 0x24
 963 002d 00       		.byte	0
 964 002e 0B       		.uleb128 0xb
 965 002f 0B       		.uleb128 0xb
 966 0030 3E       		.uleb128 0x3e
 967 0031 0B       		.uleb128 0xb
 968 0032 03       		.uleb128 0x3
 969 0033 08       		.uleb128 0x8
 970 0034 00       		.byte	0
 971 0035 00       		.byte	0
 972 0036 05       		.uleb128 0x5
 973 0037 16       		.uleb128 0x16
 974 0038 00       		.byte	0
 975 0039 03       		.uleb128 0x3
 976 003a 0E       		.uleb128 0xe
 977 003b 3A       		.uleb128 0x3a
 978 003c 0B       		.uleb128 0xb
 979 003d 3B       		.uleb128 0x3b
 980 003e 05       		.uleb128 0x5
 981 003f 49       		.uleb128 0x49
 982 0040 13       		.uleb128 0x13
 983 0041 00       		.byte	0
 984 0042 00       		.byte	0
 985 0043 06       		.uleb128 0x6
 986 0044 13       		.uleb128 0x13
 987 0045 01       		.byte	0x1
 988 0046 0B       		.uleb128 0xb
 989 0047 0B       		.uleb128 0xb
 990 0048 3A       		.uleb128 0x3a
 991 0049 0B       		.uleb128 0xb
 992 004a 3B       		.uleb128 0x3b
 993 004b 0B       		.uleb128 0xb
 994 004c 01       		.uleb128 0x1
 995 004d 13       		.uleb128 0x13
 996 004e 00       		.byte	0
 997 004f 00       		.byte	0
 998 0050 07       		.uleb128 0x7
 999 0051 0D       		.uleb128 0xd
 1000 0052 00       		.byte	0
 1001 0053 03       		.uleb128 0x3
 1002 0054 0E       		.uleb128 0xe
 1003 0055 3A       		.uleb128 0x3a
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 22


 1004 0056 0B       		.uleb128 0xb
 1005 0057 3B       		.uleb128 0x3b
 1006 0058 0B       		.uleb128 0xb
 1007 0059 49       		.uleb128 0x49
 1008 005a 13       		.uleb128 0x13
 1009 005b 38       		.uleb128 0x38
 1010 005c 0B       		.uleb128 0xb
 1011 005d 00       		.byte	0
 1012 005e 00       		.byte	0
 1013 005f 08       		.uleb128 0x8
 1014 0060 35       		.uleb128 0x35
 1015 0061 00       		.byte	0
 1016 0062 49       		.uleb128 0x49
 1017 0063 13       		.uleb128 0x13
 1018 0064 00       		.byte	0
 1019 0065 00       		.byte	0
 1020 0066 09       		.uleb128 0x9
 1021 0067 13       		.uleb128 0x13
 1022 0068 01       		.byte	0x1
 1023 0069 0B       		.uleb128 0xb
 1024 006a 05       		.uleb128 0x5
 1025 006b 3A       		.uleb128 0x3a
 1026 006c 0B       		.uleb128 0xb
 1027 006d 3B       		.uleb128 0x3b
 1028 006e 0B       		.uleb128 0xb
 1029 006f 01       		.uleb128 0x1
 1030 0070 13       		.uleb128 0x13
 1031 0071 00       		.byte	0
 1032 0072 00       		.byte	0
 1033 0073 0A       		.uleb128 0xa
 1034 0074 01       		.uleb128 0x1
 1035 0075 01       		.byte	0x1
 1036 0076 49       		.uleb128 0x49
 1037 0077 13       		.uleb128 0x13
 1038 0078 01       		.uleb128 0x1
 1039 0079 13       		.uleb128 0x13
 1040 007a 00       		.byte	0
 1041 007b 00       		.byte	0
 1042 007c 0B       		.uleb128 0xb
 1043 007d 21       		.uleb128 0x21
 1044 007e 00       		.byte	0
 1045 007f 49       		.uleb128 0x49
 1046 0080 13       		.uleb128 0x13
 1047 0081 2F       		.uleb128 0x2f
 1048 0082 0B       		.uleb128 0xb
 1049 0083 00       		.byte	0
 1050 0084 00       		.byte	0
 1051 0085 0C       		.uleb128 0xc
 1052 0086 2E       		.uleb128 0x2e
 1053 0087 00       		.byte	0
 1054 0088 3F       		.uleb128 0x3f
 1055 0089 19       		.uleb128 0x19
 1056 008a 03       		.uleb128 0x3
 1057 008b 0E       		.uleb128 0xe
 1058 008c 3A       		.uleb128 0x3a
 1059 008d 0B       		.uleb128 0xb
 1060 008e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 23


 1061 008f 0B       		.uleb128 0xb
 1062 0090 27       		.uleb128 0x27
 1063 0091 19       		.uleb128 0x19
 1064 0092 11       		.uleb128 0x11
 1065 0093 01       		.uleb128 0x1
 1066 0094 12       		.uleb128 0x12
 1067 0095 06       		.uleb128 0x6
 1068 0096 40       		.uleb128 0x40
 1069 0097 18       		.uleb128 0x18
 1070 0098 9642     		.uleb128 0x2116
 1071 009a 19       		.uleb128 0x19
 1072 009b 00       		.byte	0
 1073 009c 00       		.byte	0
 1074 009d 0D       		.uleb128 0xd
 1075 009e 2E       		.uleb128 0x2e
 1076 009f 00       		.byte	0
 1077 00a0 3F       		.uleb128 0x3f
 1078 00a1 19       		.uleb128 0x19
 1079 00a2 03       		.uleb128 0x3
 1080 00a3 0E       		.uleb128 0xe
 1081 00a4 3A       		.uleb128 0x3a
 1082 00a5 0B       		.uleb128 0xb
 1083 00a6 3B       		.uleb128 0x3b
 1084 00a7 0B       		.uleb128 0xb
 1085 00a8 11       		.uleb128 0x11
 1086 00a9 01       		.uleb128 0x1
 1087 00aa 12       		.uleb128 0x12
 1088 00ab 06       		.uleb128 0x6
 1089 00ac 40       		.uleb128 0x40
 1090 00ad 18       		.uleb128 0x18
 1091 00ae 9642     		.uleb128 0x2116
 1092 00b0 19       		.uleb128 0x19
 1093 00b1 00       		.byte	0
 1094 00b2 00       		.byte	0
 1095 00b3 0E       		.uleb128 0xe
 1096 00b4 2E       		.uleb128 0x2e
 1097 00b5 00       		.byte	0
 1098 00b6 3F       		.uleb128 0x3f
 1099 00b7 19       		.uleb128 0x19
 1100 00b8 03       		.uleb128 0x3
 1101 00b9 0E       		.uleb128 0xe
 1102 00ba 3A       		.uleb128 0x3a
 1103 00bb 0B       		.uleb128 0xb
 1104 00bc 3B       		.uleb128 0x3b
 1105 00bd 0B       		.uleb128 0xb
 1106 00be 49       		.uleb128 0x49
 1107 00bf 13       		.uleb128 0x13
 1108 00c0 11       		.uleb128 0x11
 1109 00c1 01       		.uleb128 0x1
 1110 00c2 12       		.uleb128 0x12
 1111 00c3 06       		.uleb128 0x6
 1112 00c4 40       		.uleb128 0x40
 1113 00c5 18       		.uleb128 0x18
 1114 00c6 9642     		.uleb128 0x2116
 1115 00c8 19       		.uleb128 0x19
 1116 00c9 00       		.byte	0
 1117 00ca 00       		.byte	0
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 24


 1118 00cb 0F       		.uleb128 0xf
 1119 00cc 2E       		.uleb128 0x2e
 1120 00cd 01       		.byte	0x1
 1121 00ce 3F       		.uleb128 0x3f
 1122 00cf 19       		.uleb128 0x19
 1123 00d0 03       		.uleb128 0x3
 1124 00d1 0E       		.uleb128 0xe
 1125 00d2 3A       		.uleb128 0x3a
 1126 00d3 0B       		.uleb128 0xb
 1127 00d4 3B       		.uleb128 0x3b
 1128 00d5 0B       		.uleb128 0xb
 1129 00d6 27       		.uleb128 0x27
 1130 00d7 19       		.uleb128 0x19
 1131 00d8 11       		.uleb128 0x11
 1132 00d9 01       		.uleb128 0x1
 1133 00da 12       		.uleb128 0x12
 1134 00db 06       		.uleb128 0x6
 1135 00dc 40       		.uleb128 0x40
 1136 00dd 18       		.uleb128 0x18
 1137 00de 9642     		.uleb128 0x2116
 1138 00e0 19       		.uleb128 0x19
 1139 00e1 01       		.uleb128 0x1
 1140 00e2 13       		.uleb128 0x13
 1141 00e3 00       		.byte	0
 1142 00e4 00       		.byte	0
 1143 00e5 10       		.uleb128 0x10
 1144 00e6 05       		.uleb128 0x5
 1145 00e7 00       		.byte	0
 1146 00e8 03       		.uleb128 0x3
 1147 00e9 0E       		.uleb128 0xe
 1148 00ea 3A       		.uleb128 0x3a
 1149 00eb 0B       		.uleb128 0xb
 1150 00ec 3B       		.uleb128 0x3b
 1151 00ed 0B       		.uleb128 0xb
 1152 00ee 49       		.uleb128 0x49
 1153 00ef 13       		.uleb128 0x13
 1154 00f0 02       		.uleb128 0x2
 1155 00f1 18       		.uleb128 0x18
 1156 00f2 00       		.byte	0
 1157 00f3 00       		.byte	0
 1158 00f4 11       		.uleb128 0x11
 1159 00f5 2E       		.uleb128 0x2e
 1160 00f6 01       		.byte	0x1
 1161 00f7 3F       		.uleb128 0x3f
 1162 00f8 19       		.uleb128 0x19
 1163 00f9 03       		.uleb128 0x3
 1164 00fa 0E       		.uleb128 0xe
 1165 00fb 3A       		.uleb128 0x3a
 1166 00fc 0B       		.uleb128 0xb
 1167 00fd 3B       		.uleb128 0x3b
 1168 00fe 0B       		.uleb128 0xb
 1169 00ff 27       		.uleb128 0x27
 1170 0100 19       		.uleb128 0x19
 1171 0101 49       		.uleb128 0x49
 1172 0102 13       		.uleb128 0x13
 1173 0103 11       		.uleb128 0x11
 1174 0104 01       		.uleb128 0x1
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 25


 1175 0105 12       		.uleb128 0x12
 1176 0106 06       		.uleb128 0x6
 1177 0107 40       		.uleb128 0x40
 1178 0108 18       		.uleb128 0x18
 1179 0109 9642     		.uleb128 0x2116
 1180 010b 19       		.uleb128 0x19
 1181 010c 01       		.uleb128 0x1
 1182 010d 13       		.uleb128 0x13
 1183 010e 00       		.byte	0
 1184 010f 00       		.byte	0
 1185 0110 12       		.uleb128 0x12
 1186 0111 0F       		.uleb128 0xf
 1187 0112 00       		.byte	0
 1188 0113 0B       		.uleb128 0xb
 1189 0114 0B       		.uleb128 0xb
 1190 0115 49       		.uleb128 0x49
 1191 0116 13       		.uleb128 0x13
 1192 0117 00       		.byte	0
 1193 0118 00       		.byte	0
 1194 0119 13       		.uleb128 0x13
 1195 011a 2E       		.uleb128 0x2e
 1196 011b 01       		.byte	0x1
 1197 011c 3F       		.uleb128 0x3f
 1198 011d 19       		.uleb128 0x19
 1199 011e 03       		.uleb128 0x3
 1200 011f 0E       		.uleb128 0xe
 1201 0120 3A       		.uleb128 0x3a
 1202 0121 0B       		.uleb128 0xb
 1203 0122 3B       		.uleb128 0x3b
 1204 0123 0B       		.uleb128 0xb
 1205 0124 27       		.uleb128 0x27
 1206 0125 19       		.uleb128 0x19
 1207 0126 11       		.uleb128 0x11
 1208 0127 01       		.uleb128 0x1
 1209 0128 12       		.uleb128 0x12
 1210 0129 06       		.uleb128 0x6
 1211 012a 40       		.uleb128 0x40
 1212 012b 18       		.uleb128 0x18
 1213 012c 9742     		.uleb128 0x2117
 1214 012e 19       		.uleb128 0x19
 1215 012f 01       		.uleb128 0x1
 1216 0130 13       		.uleb128 0x13
 1217 0131 00       		.byte	0
 1218 0132 00       		.byte	0
 1219 0133 14       		.uleb128 0x14
 1220 0134 2E       		.uleb128 0x2e
 1221 0135 01       		.byte	0x1
 1222 0136 3F       		.uleb128 0x3f
 1223 0137 19       		.uleb128 0x19
 1224 0138 03       		.uleb128 0x3
 1225 0139 0E       		.uleb128 0xe
 1226 013a 3A       		.uleb128 0x3a
 1227 013b 0B       		.uleb128 0xb
 1228 013c 3B       		.uleb128 0x3b
 1229 013d 0B       		.uleb128 0xb
 1230 013e 27       		.uleb128 0x27
 1231 013f 19       		.uleb128 0x19
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 26


 1232 0140 49       		.uleb128 0x49
 1233 0141 13       		.uleb128 0x13
 1234 0142 11       		.uleb128 0x11
 1235 0143 01       		.uleb128 0x1
 1236 0144 12       		.uleb128 0x12
 1237 0145 06       		.uleb128 0x6
 1238 0146 40       		.uleb128 0x40
 1239 0147 18       		.uleb128 0x18
 1240 0148 9742     		.uleb128 0x2117
 1241 014a 19       		.uleb128 0x19
 1242 014b 01       		.uleb128 0x1
 1243 014c 13       		.uleb128 0x13
 1244 014d 00       		.byte	0
 1245 014e 00       		.byte	0
 1246 014f 15       		.uleb128 0x15
 1247 0150 34       		.uleb128 0x34
 1248 0151 00       		.byte	0
 1249 0152 03       		.uleb128 0x3
 1250 0153 0E       		.uleb128 0xe
 1251 0154 3A       		.uleb128 0x3a
 1252 0155 0B       		.uleb128 0xb
 1253 0156 3B       		.uleb128 0x3b
 1254 0157 0B       		.uleb128 0xb
 1255 0158 49       		.uleb128 0x49
 1256 0159 13       		.uleb128 0x13
 1257 015a 02       		.uleb128 0x2
 1258 015b 18       		.uleb128 0x18
 1259 015c 00       		.byte	0
 1260 015d 00       		.byte	0
 1261 015e 16       		.uleb128 0x16
 1262 015f 2E       		.uleb128 0x2e
 1263 0160 01       		.byte	0x1
 1264 0161 3F       		.uleb128 0x3f
 1265 0162 19       		.uleb128 0x19
 1266 0163 03       		.uleb128 0x3
 1267 0164 0E       		.uleb128 0xe
 1268 0165 3A       		.uleb128 0x3a
 1269 0166 0B       		.uleb128 0xb
 1270 0167 3B       		.uleb128 0x3b
 1271 0168 0B       		.uleb128 0xb
 1272 0169 11       		.uleb128 0x11
 1273 016a 01       		.uleb128 0x1
 1274 016b 12       		.uleb128 0x12
 1275 016c 06       		.uleb128 0x6
 1276 016d 40       		.uleb128 0x40
 1277 016e 18       		.uleb128 0x18
 1278 016f 9642     		.uleb128 0x2116
 1279 0171 19       		.uleb128 0x19
 1280 0172 01       		.uleb128 0x1
 1281 0173 13       		.uleb128 0x13
 1282 0174 00       		.byte	0
 1283 0175 00       		.byte	0
 1284 0176 17       		.uleb128 0x17
 1285 0177 34       		.uleb128 0x34
 1286 0178 00       		.byte	0
 1287 0179 03       		.uleb128 0x3
 1288 017a 08       		.uleb128 0x8
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 27


 1289 017b 3A       		.uleb128 0x3a
 1290 017c 0B       		.uleb128 0xb
 1291 017d 3B       		.uleb128 0x3b
 1292 017e 0B       		.uleb128 0xb
 1293 017f 49       		.uleb128 0x49
 1294 0180 13       		.uleb128 0x13
 1295 0181 02       		.uleb128 0x2
 1296 0182 18       		.uleb128 0x18
 1297 0183 00       		.byte	0
 1298 0184 00       		.byte	0
 1299 0185 18       		.uleb128 0x18
 1300 0186 2E       		.uleb128 0x2e
 1301 0187 00       		.byte	0
 1302 0188 3F       		.uleb128 0x3f
 1303 0189 19       		.uleb128 0x19
 1304 018a 03       		.uleb128 0x3
 1305 018b 0E       		.uleb128 0xe
 1306 018c 3A       		.uleb128 0x3a
 1307 018d 0B       		.uleb128 0xb
 1308 018e 3B       		.uleb128 0x3b
 1309 018f 0B       		.uleb128 0xb
 1310 0190 27       		.uleb128 0x27
 1311 0191 19       		.uleb128 0x19
 1312 0192 49       		.uleb128 0x49
 1313 0193 13       		.uleb128 0x13
 1314 0194 11       		.uleb128 0x11
 1315 0195 01       		.uleb128 0x1
 1316 0196 12       		.uleb128 0x12
 1317 0197 06       		.uleb128 0x6
 1318 0198 40       		.uleb128 0x40
 1319 0199 18       		.uleb128 0x18
 1320 019a 9642     		.uleb128 0x2116
 1321 019c 19       		.uleb128 0x19
 1322 019d 00       		.byte	0
 1323 019e 00       		.byte	0
 1324 019f 19       		.uleb128 0x19
 1325 01a0 34       		.uleb128 0x34
 1326 01a1 00       		.byte	0
 1327 01a2 03       		.uleb128 0x3
 1328 01a3 0E       		.uleb128 0xe
 1329 01a4 3A       		.uleb128 0x3a
 1330 01a5 0B       		.uleb128 0xb
 1331 01a6 3B       		.uleb128 0x3b
 1332 01a7 05       		.uleb128 0x5
 1333 01a8 49       		.uleb128 0x49
 1334 01a9 13       		.uleb128 0x13
 1335 01aa 3F       		.uleb128 0x3f
 1336 01ab 19       		.uleb128 0x19
 1337 01ac 3C       		.uleb128 0x3c
 1338 01ad 19       		.uleb128 0x19
 1339 01ae 00       		.byte	0
 1340 01af 00       		.byte	0
 1341 01b0 1A       		.uleb128 0x1a
 1342 01b1 34       		.uleb128 0x34
 1343 01b2 00       		.byte	0
 1344 01b3 03       		.uleb128 0x3
 1345 01b4 0E       		.uleb128 0xe
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 28


 1346 01b5 3A       		.uleb128 0x3a
 1347 01b6 0B       		.uleb128 0xb
 1348 01b7 3B       		.uleb128 0x3b
 1349 01b8 0B       		.uleb128 0xb
 1350 01b9 49       		.uleb128 0x49
 1351 01ba 13       		.uleb128 0x13
 1352 01bb 3F       		.uleb128 0x3f
 1353 01bc 19       		.uleb128 0x19
 1354 01bd 02       		.uleb128 0x2
 1355 01be 18       		.uleb128 0x18
 1356 01bf 00       		.byte	0
 1357 01c0 00       		.byte	0
 1358 01c1 00       		.byte	0
 1359              		.section	.debug_aranges,"",%progbits
 1360 0000 64000000 		.4byte	0x64
 1361 0004 0200     		.2byte	0x2
 1362 0006 00000000 		.4byte	.Ldebug_info0
 1363 000a 04       		.byte	0x4
 1364 000b 00       		.byte	0
 1365 000c 0000     		.2byte	0
 1366 000e 0000     		.2byte	0
 1367 0010 00000000 		.4byte	.LFB63
 1368 0014 0C000000 		.4byte	.LFE63-.LFB63
 1369 0018 00000000 		.4byte	.LFB64
 1370 001c 50000000 		.4byte	.LFE64-.LFB64
 1371 0020 00000000 		.4byte	.LFB65
 1372 0024 30000000 		.4byte	.LFE65-.LFB65
 1373 0028 00000000 		.4byte	.LFB66
 1374 002c 1A000000 		.4byte	.LFE66-.LFB66
 1375 0030 00000000 		.4byte	.LFB67
 1376 0034 50000000 		.4byte	.LFE67-.LFB67
 1377 0038 00000000 		.4byte	.LFB68
 1378 003c 4A000000 		.4byte	.LFE68-.LFB68
 1379 0040 00000000 		.4byte	.LFB69
 1380 0044 1C000000 		.4byte	.LFE69-.LFB69
 1381 0048 00000000 		.4byte	.LFB70
 1382 004c 44000000 		.4byte	.LFE70-.LFB70
 1383 0050 00000000 		.4byte	.LFB71
 1384 0054 22000000 		.4byte	.LFE71-.LFB71
 1385 0058 00000000 		.4byte	.LFB72
 1386 005c 1E000000 		.4byte	.LFE72-.LFB72
 1387 0060 00000000 		.4byte	0
 1388 0064 00000000 		.4byte	0
 1389              		.section	.debug_ranges,"",%progbits
 1390              	.Ldebug_ranges0:
 1391 0000 00000000 		.4byte	.LFB63
 1392 0004 0C000000 		.4byte	.LFE63
 1393 0008 00000000 		.4byte	.LFB64
 1394 000c 50000000 		.4byte	.LFE64
 1395 0010 00000000 		.4byte	.LFB65
 1396 0014 30000000 		.4byte	.LFE65
 1397 0018 00000000 		.4byte	.LFB66
 1398 001c 1A000000 		.4byte	.LFE66
 1399 0020 00000000 		.4byte	.LFB67
 1400 0024 50000000 		.4byte	.LFE67
 1401 0028 00000000 		.4byte	.LFB68
 1402 002c 4A000000 		.4byte	.LFE68
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 29


 1403 0030 00000000 		.4byte	.LFB69
 1404 0034 1C000000 		.4byte	.LFE69
 1405 0038 00000000 		.4byte	.LFB70
 1406 003c 44000000 		.4byte	.LFE70
 1407 0040 00000000 		.4byte	.LFB71
 1408 0044 22000000 		.4byte	.LFE71
 1409 0048 00000000 		.4byte	.LFB72
 1410 004c 1E000000 		.4byte	.LFE72
 1411 0050 00000000 		.4byte	0
 1412 0054 00000000 		.4byte	0
 1413              		.section	.debug_line,"",%progbits
 1414              	.Ldebug_line0:
 1415 0000 3C020000 		.section	.debug_str,"MS",%progbits,1
 1415      02006701 
 1415      00000201 
 1415      FB0E0D00 
 1415      01010101 
 1416              	.LASF45:
 1417 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1417      43313120 
 1417      352E342E 
 1417      31203230 
 1417      31363036 
 1418 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1418      20726576 
 1418      6973696F 
 1418      6E203233 
 1418      37373135 
 1419 0066 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1419      66756E63 
 1419      74696F6E 
 1419      2D736563 
 1419      74696F6E 
 1420              	.LASF28:
 1421 008e 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 1421      576F726B 
 1421      576F726B 
 1421      576F726B 
 1421      576F726B 
 1422              	.LASF9:
 1423 00a7 5F5F696E 		.ascii	"__int32_t\000"
 1423      7433325F 
 1423      7400
 1424              	.LASF26:
 1425 00b1 74657374 		.ascii	"test_t\000"
 1425      5F7400
 1426              	.LASF37:
 1427 00b8 43726561 		.ascii	"CreateAlarm\000"
 1427      7465416C 
 1427      61726D00 
 1428              	.LASF21:
 1429 00c4 636F756E 		.ascii	"countDownResetCondition\000"
 1429      74446F77 
 1429      6E526573 
 1429      6574436F 
 1429      6E646974 
 1430              	.LASF11:
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 30


 1431 00dc 75696E74 		.ascii	"uint8\000"
 1431      3800
 1432              	.LASF24:
 1433 00e2 73746174 		.ascii	"status\000"
 1433      757300
 1434              	.LASF32:
 1435 00e9 616C6172 		.ascii	"alarmToBeUpdated\000"
 1435      6D546F42 
 1435      65557064 
 1435      61746564 
 1435      00
 1436              	.LASF36:
 1437 00fa 416C6172 		.ascii	"AlarmReady\000"
 1437      6D526561 
 1437      647900
 1438              	.LASF13:
 1439 0105 666C6F61 		.ascii	"float\000"
 1439      7400
 1440              	.LASF48:
 1441 010b 74657374 		.ascii	"test_components\000"
 1441      5F636F6D 
 1441      706F6E65 
 1441      6E747300 
 1442              	.LASF34:
 1443 011b 52657365 		.ascii	"ResetAlarm\000"
 1443      74416C61 
 1443      726D00
 1444              	.LASF1:
 1445 0126 756E7369 		.ascii	"unsigned char\000"
 1445      676E6564 
 1445      20636861 
 1445      7200
 1446              	.LASF18:
 1447 0134 636F756E 		.ascii	"countDownValue\000"
 1447      74446F77 
 1447      6E56616C 
 1447      756500
 1448              	.LASF41:
 1449 0143 616C6172 		.ascii	"alarmMeasure\000"
 1449      6D4D6561 
 1449      73757265 
 1449      00
 1450              	.LASF5:
 1451 0150 6C6F6E67 		.ascii	"long unsigned int\000"
 1451      20756E73 
 1451      69676E65 
 1451      6420696E 
 1451      7400
 1452              	.LASF3:
 1453 0162 73686F72 		.ascii	"short unsigned int\000"
 1453      7420756E 
 1453      7369676E 
 1453      65642069 
 1453      6E7400
 1454              	.LASF22:
 1455 0175 616C6172 		.ascii	"alarm\000"
 1455      6D00
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 31


 1456              	.LASF40:
 1457 017b 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1457      52784275 
 1457      66666572 
 1457      00
 1458              	.LASF20:
 1459 0188 636F756E 		.ascii	"countDownType\000"
 1459      74446F77 
 1459      6E547970 
 1459      6500
 1460              	.LASF14:
 1461 0196 646F7562 		.ascii	"double\000"
 1461      6C6500
 1462              	.LASF49:
 1463 019d 6D61696E 		.ascii	"main\000"
 1463      00
 1464              	.LASF12:
 1465 01a2 75696E74 		.ascii	"uint16\000"
 1465      313600
 1466              	.LASF43:
 1467 01a9 616C6172 		.ascii	"alarmMeasure2\000"
 1467      6D4D6561 
 1467      73757265 
 1467      3200
 1468              	.LASF8:
 1469 01b7 756E7369 		.ascii	"unsigned int\000"
 1469      676E6564 
 1469      20696E74 
 1469      00
 1470              	.LASF7:
 1471 01c4 6C6F6E67 		.ascii	"long long unsigned int\000"
 1471      206C6F6E 
 1471      6720756E 
 1471      7369676E 
 1471      65642069 
 1472              	.LASF25:
 1473 01db 72656173 		.ascii	"reason\000"
 1473      6F6E00
 1474              	.LASF42:
 1475 01e2 74696D65 		.ascii	"timeToMeasure\000"
 1475      546F4D65 
 1475      61737572 
 1475      6500
 1476              	.LASF47:
 1477 01f0 433A5C55 		.ascii	"C:\\Users\\bk\\Documents\\GitHub\\Open Storm\\notor"
 1477      73657273 
 1477      5C626B5C 
 1477      446F6375 
 1477      6D656E74 
 1478 021d 694F535C 		.ascii	"iOS\\notoriOS\\notoriOS.cydsn\000"
 1478      6E6F746F 
 1478      72694F53 
 1478      5C6E6F74 
 1478      6F72694F 
 1479              	.LASF27:
 1480 0239 57616B65 		.ascii	"Wakeup_ISR\000"
 1480      75705F49 
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 32


 1480      535200
 1481              	.LASF38:
 1482 0244 6E657741 		.ascii	"newAlarm\000"
 1482      6C61726D 
 1482      00
 1483              	.LASF30:
 1484 024d 4C617942 		.ascii	"LayBack\000"
 1484      61636B00 
 1485              	.LASF39:
 1486 0255 745F6C65 		.ascii	"t_level_sensor\000"
 1486      76656C5F 
 1486      73656E73 
 1486      6F7200
 1487              	.LASF6:
 1488 0264 6C6F6E67 		.ascii	"long long int\000"
 1488      206C6F6E 
 1488      6720696E 
 1488      7400
 1489              	.LASF17:
 1490 0272 73697A65 		.ascii	"sizetype\000"
 1490      74797065 
 1490      00
 1491              	.LASF46:
 1492 027b 6D61696E 		.ascii	"main.c\000"
 1492      2E6300
 1493              	.LASF15:
 1494 0282 63686172 		.ascii	"char\000"
 1494      00
 1495              	.LASF19:
 1496 0287 63757272 		.ascii	"currentCountDownValue\000"
 1496      656E7443 
 1496      6F756E74 
 1496      446F776E 
 1496      56616C75 
 1497              	.LASF10:
 1498 029d 696E7433 		.ascii	"int32_t\000"
 1498      325F7400 
 1499              	.LASF31:
 1500 02a5 616C6172 		.ascii	"alarmType\000"
 1500      6D547970 
 1500      6500
 1501              	.LASF2:
 1502 02af 73686F72 		.ascii	"short int\000"
 1502      7420696E 
 1502      7400
 1503              	.LASF35:
 1504 02b9 616C6172 		.ascii	"alarmToBeReset\000"
 1504      6D546F42 
 1504      65526573 
 1504      657400
 1505              	.LASF23:
 1506 02c8 74657374 		.ascii	"test_name\000"
 1506      5F6E616D 
 1506      6500
 1507              	.LASF4:
 1508 02d2 6C6F6E67 		.ascii	"long int\000"
 1508      20696E74 
ARM GAS  C:\Users\bk\AppData\Local\Temp\cc9nJbLn.s 			page 33


 1508      00
 1509              	.LASF29:
 1510 02db 52656164 		.ascii	"ReadyOrNot\000"
 1510      794F724E 
 1510      6F7400
 1511              	.LASF16:
 1512 02e6 6C6F6E67 		.ascii	"long double\000"
 1512      20646F75 
 1512      626C6500 
 1513              	.LASF44:
 1514 02f2 74696D65 		.ascii	"timeToMeasure2\000"
 1514      546F4D65 
 1514      61737572 
 1514      653200
 1515              	.LASF0:
 1516 0301 7369676E 		.ascii	"signed char\000"
 1516      65642063 
 1516      68617200 
 1517              	.LASF33:
 1518 030d 41796F49 		.ascii	"AyoItsTime\000"
 1518      74735469 
 1518      6D6500
 1519              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
