ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"modem.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	modem_state,1,1
  20              		.comm	modem_start_time_stamp,4,4
  21              		.comm	modem_info,60,4
  22              		.comm	modem_stats,12,4
  23              		.syntax unified
  24              		.global _printf_float
  25              		.thumb
  26              		.syntax unified
  27              		.comm	dataPointsInStack,2,2
  28              		.comm	dataPointsInStackDesired,2,2
  29              		.comm	data,6600,4
  30              		.comm	http_request,10000,4
  31              		.comm	http_body,10000,4
  32              		.comm	http_route,200,4
  33              		.comm	system_info,28,4
  34              		.comm	system_settings,324,4
  35              		.comm	uart_received_string,1024,4
  36              		.global	uart_string_index
  37              		.bss
  38              		.align	1
  39              		.type	uart_string_index, %object
  40              		.size	uart_string_index, 2
  41              	uart_string_index:
  42 0000 0000     		.space	2
  43              		.section	.text.isr_telit_rx,"ax",%progbits
  44              		.align	2
  45              		.global	isr_telit_rx
  46              		.thumb
  47              		.thumb_func
  48              		.type	isr_telit_rx, %function
  49              	isr_telit_rx:
  50              	.LFB64:
  51              		.file 1 "modem.c"
   1:modem.c       **** //Methods for Telit modem 
   2:modem.c       **** #include "modem.h"
   3:modem.c       **** #include "notoriOS.h"
   4:modem.c       **** #include "debug.h"
   5:modem.c       **** #include "data.h"
   6:modem.c       **** #include <math.h>
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 2


   7:modem.c       **** #include <stdio.h>
   8:modem.c       **** 
   9:modem.c       **** char uart_received_string[1024];
  10:modem.c       **** int16 uart_string_index=0;
  11:modem.c       **** 
  12:modem.c       **** #define DEFAULT_AT_TIMEOUT 2000u // Send command and wait 2000 ms
  13:modem.c       **** #define NO_AT_TIMEOUT 0u // Send command, no timeout/ don't wait 
  14:modem.c       **** 
  15:modem.c       **** #define TIMEOUT_NETWORK_CONNECT 200 //seconds
  16:modem.c       **** #define TIMEOUT_IP_ACQUIRE 230 //seconds (cummulatinve) add to TIMEOUT_NETWORK_CONNECT
  17:modem.c       **** 
  18:modem.c       **** CY_ISR_PROTO(isr_telit_rx); // Declares a custom ISR function "isr_telit_rx" using the CY_ISR_PROTO
  19:modem.c       **** 
  20:modem.c       **** // Define the custom ISR function "isr_telit_rx" using the CY_ISR macro
  21:modem.c       **** // Get each character from Telit and saves it to uart_received_string
  22:modem.c       **** CY_ISR(isr_telit_rx){      
  52              		.loc 1 22 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 98B5     		push	{r3, r4, r7, lr}
  57              		.cfi_def_cfa_offset 16
  58              		.cfi_offset 3, -16
  59              		.cfi_offset 4, -12
  60              		.cfi_offset 7, -8
  61              		.cfi_offset 14, -4
  62 0002 00AF     		add	r7, sp, #0
  63              		.cfi_def_cfa_register 7
  23:modem.c       ****     // UART_Telit_GetRxBufferSize() returns the number of received bytes available in the RX buffer
  24:modem.c       ****     while(UART_Telit_GetRxBufferSize()==1){
  64              		.loc 1 24 0
  65 0004 12E0     		b	.L2
  66              	.L3:
  25:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  67              		.loc 1 25 0
  68 0006 0D4B     		ldr	r3, .L4
  69 0008 B3F90030 		ldrsh	r3, [r3]
  70 000c 1C46     		mov	r4, r3
  71 000e FFF7FEFF 		bl	UART_Telit_GetChar
  72 0012 0346     		mov	r3, r0
  73 0014 1A46     		mov	r2, r3
  74 0016 0A4B     		ldr	r3, .L4+4
  75 0018 1A55     		strb	r2, [r3, r4]
  26:modem.c       ****         uart_string_index++;
  76              		.loc 1 26 0
  77 001a 084B     		ldr	r3, .L4
  78 001c B3F90030 		ldrsh	r3, [r3]
  79 0020 9BB2     		uxth	r3, r3
  80 0022 0133     		adds	r3, r3, #1
  81 0024 9BB2     		uxth	r3, r3
  82 0026 1AB2     		sxth	r2, r3
  83 0028 044B     		ldr	r3, .L4
  84 002a 1A80     		strh	r2, [r3]	@ movhi
  85              	.L2:
  24:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  86              		.loc 1 24 0
  87 002c FFF7FEFF 		bl	UART_Telit_GetRxBufferSize
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 3


  88 0030 0346     		mov	r3, r0
  89 0032 012B     		cmp	r3, #1
  90 0034 E7D0     		beq	.L3
  27:modem.c       ****     }
  28:modem.c       **** 
  29:modem.c       **** }
  91              		.loc 1 29 0
  92 0036 00BF     		nop
  93 0038 98BD     		pop	{r3, r4, r7, pc}
  94              	.L5:
  95 003a 00BF     		.align	2
  96              	.L4:
  97 003c 00000000 		.word	uart_string_index
  98 0040 00000000 		.word	uart_received_string
  99              		.cfi_endproc
 100              	.LFE64:
 101              		.size	isr_telit_rx, .-isr_telit_rx
 102              		.section	.text.modem_initialize,"ax",%progbits
 103              		.align	2
 104              		.global	modem_initialize
 105              		.thumb
 106              		.thumb_func
 107              		.type	modem_initialize, %function
 108              	modem_initialize:
 109              	.LFB65:
  30:modem.c       **** 
  31:modem.c       **** // Initialize the modem
  32:modem.c       **** void modem_initialize(){
 110              		.loc 1 32 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 1, uses_anonymous_args = 0
 114 0000 80B5     		push	{r7, lr}
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 7, -8
 117              		.cfi_offset 14, -4
 118 0002 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
  33:modem.c       ****     // Don't do much except make sure that all the modem pins are pulled low
  34:modem.c       ****     // Also make sure that the TX PIN is fully disabled
  35:modem.c       ****     pins_configure_inactive();
 120              		.loc 1 35 0
 121 0004 FFF7FEFF 		bl	pins_configure_inactive
  36:modem.c       ****     modem_state = 0;
 122              		.loc 1 36 0
 123 0008 0F4B     		ldr	r3, .L7
 124 000a 0022     		movs	r2, #0
 125 000c 1A70     		strb	r2, [r3]
  37:modem.c       ****     //initilize states
  38:modem.c       ****     modem_info.imei[0] = '\0';
 126              		.loc 1 38 0
 127 000e 0F4B     		ldr	r3, .L7+4
 128 0010 0022     		movs	r2, #0
 129 0012 83F82820 		strb	r2, [r3, #40]
  39:modem.c       ****     modem_info.model_id[0] = '\0';
 130              		.loc 1 39 0
 131 0016 0D4B     		ldr	r3, .L7+4
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 4


 132 0018 0022     		movs	r2, #0
 133 001a 1A75     		strb	r2, [r3, #20]
  40:modem.c       ****     modem_info.sim_id[0] = '\0';
 134              		.loc 1 40 0
 135 001c 0B4B     		ldr	r3, .L7+4
 136 001e 0022     		movs	r2, #0
 137 0020 1A70     		strb	r2, [r3]
  41:modem.c       ****     modem_stats.rsrq = 0;
 138              		.loc 1 41 0
 139 0022 0B4B     		ldr	r3, .L7+8
 140 0024 0022     		movs	r2, #0
 141 0026 5A70     		strb	r2, [r3, #1]
  42:modem.c       ****     modem_stats.rssi = 0;
 142              		.loc 1 42 0
 143 0028 094B     		ldr	r3, .L7+8
 144 002a 0022     		movs	r2, #0
 145 002c 1A70     		strb	r2, [r3]
  43:modem.c       ****     modem_stats.time_to_acquire_ip = 0;
 146              		.loc 1 43 0
 147 002e 084B     		ldr	r3, .L7+8
 148 0030 0022     		movs	r2, #0
 149 0032 9A60     		str	r2, [r3, #8]
  44:modem.c       ****     modem_stats.time_to_network_connect = 0;
 150              		.loc 1 44 0
 151 0034 064B     		ldr	r3, .L7+8
 152 0036 0022     		movs	r2, #0
 153 0038 5A60     		str	r2, [r3, #4]
  45:modem.c       ****     // Disable the RX Pin interrupt, and only enable it during long timeouts
  46:modem.c       ****     // Rx_Telit_SetInterruptMode(): Configures the interrupt mode for each of the Pins component's 
  47:modem.c       ****     // Rx_Telit_0_INTR selects the first pin in the list, and Rx_Telit_INTR_NONE disables the Rx pi
  48:modem.c       ****     Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 154              		.loc 1 48 0
 155 003a 0021     		movs	r1, #0
 156 003c 4020     		movs	r0, #64
 157 003e FFF7FEFF 		bl	Rx_Telit_SetInterruptMode
  49:modem.c       ****     
  50:modem.c       **** }
 158              		.loc 1 50 0
 159 0042 00BF     		nop
 160 0044 80BD     		pop	{r7, pc}
 161              	.L8:
 162 0046 00BF     		.align	2
 163              	.L7:
 164 0048 00000000 		.word	modem_state
 165 004c 00000000 		.word	modem_info
 166 0050 00000000 		.word	modem_stats
 167              		.cfi_endproc
 168              	.LFE65:
 169              		.size	modem_initialize, .-modem_initialize
 170              		.section	.text.pins_configure_inactive,"ax",%progbits
 171              		.align	2
 172              		.global	pins_configure_inactive
 173              		.thumb
 174              		.thumb_func
 175              		.type	pins_configure_inactive, %function
 176              	pins_configure_inactive:
 177              	.LFB66:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 5


  51:modem.c       **** 
  52:modem.c       **** 
  53:modem.c       **** // To be used when the modem power is to be "killed" conpletely to conserve power
  54:modem.c       **** void pins_configure_inactive(){
 178              		.loc 1 54 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 1, uses_anonymous_args = 0
 182 0000 80B5     		push	{r7, lr}
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 7, -8
 185              		.cfi_offset 14, -4
 186 0002 00AF     		add	r7, sp, #0
 187              		.cfi_def_cfa_register 7
  55:modem.c       ****    
  56:modem.c       ****    Telit_ControlReg_Write(0u); // Physically disconect UART pin
 188              		.loc 1 56 0
 189 0004 0020     		movs	r0, #0
 190 0006 FFF7FEFF 		bl	Telit_ControlReg_Write
  57:modem.c       ****    Rx_Telit_SetDriveMode(PIN_DM_STRONG); // Set drive mode
 191              		.loc 1 57 0
 192 000a 0C20     		movs	r0, #12
 193 000c FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  58:modem.c       **** 
  59:modem.c       ****    Pin_Telit_pwr_Write(OFF); // Kill power to modem (pulls pin low).
 194              		.loc 1 59 0
 195 0010 0020     		movs	r0, #0
 196 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  60:modem.c       **** 
  61:modem.c       ****    // Pull down all of these, just in case (turns the off).
  62:modem.c       ****    Rx_Telit_Write(OFF); 
 197              		.loc 1 62 0
 198 0016 0020     		movs	r0, #0
 199 0018 FFF7FEFF 		bl	Rx_Telit_Write
  63:modem.c       ****    Tx_Telit_Write(OFF);
 200              		.loc 1 63 0
 201 001c 0020     		movs	r0, #0
 202 001e FFF7FEFF 		bl	Tx_Telit_Write
  64:modem.c       ****    Pin_Telit_ONOFF_Write(OFF);
 203              		.loc 1 64 0
 204 0022 0020     		movs	r0, #0
 205 0024 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
  65:modem.c       ****    Pin_Telit_SWRDY_Write(OFF);
 206              		.loc 1 65 0
 207 0028 0020     		movs	r0, #0
 208 002a FFF7FEFF 		bl	Pin_Telit_SWRDY_Write
  66:modem.c       ****     
  67:modem.c       **** }
 209              		.loc 1 67 0
 210 002e 00BF     		nop
 211 0030 80BD     		pop	{r7, pc}
 212              		.cfi_endproc
 213              	.LFE66:
 214              		.size	pins_configure_inactive, .-pins_configure_inactive
 215 0032 00BF     		.section	.text.pins_configure_active,"ax",%progbits
 216              		.align	2
 217              		.global	pins_configure_active
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 6


 218              		.thumb
 219              		.thumb_func
 220              		.type	pins_configure_active, %function
 221              	pins_configure_active:
 222              	.LFB67:
  68:modem.c       **** 
  69:modem.c       **** // Turns on power and configures all UART pin modes
  70:modem.c       **** void pins_configure_active(){
 223              		.loc 1 70 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 1, uses_anonymous_args = 0
 227 0000 80B5     		push	{r7, lr}
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 7, -8
 230              		.cfi_offset 14, -4
 231 0002 00AF     		add	r7, sp, #0
 232              		.cfi_def_cfa_register 7
  71:modem.c       ****     
  72:modem.c       ****     Rx_Telit_SetDriveMode(PIN_DM_DIG_HIZ); // Power up. Set RX pin to High Impedance Digital mode.
 233              		.loc 1 72 0
 234 0004 0220     		movs	r0, #2
 235 0006 FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  73:modem.c       ****     Telit_ControlReg_Write(1u); // Pull Telit_ControlReg pin high (turns it on).
 236              		.loc 1 73 0
 237 000a 0120     		movs	r0, #1
 238 000c FFF7FEFF 		bl	Telit_ControlReg_Write
  74:modem.c       ****     Pin_Telit_pwr_Write(ON); // Pulls Telit_pwr pin high (turns it on).
 239              		.loc 1 74 0
 240 0010 0120     		movs	r0, #1
 241 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  75:modem.c       ****     CyDelay(100u); // Give the MOSFET a few ms to stalbilise power 
 242              		.loc 1 75 0
 243 0016 6420     		movs	r0, #100
 244 0018 FFF7FEFF 		bl	CyDelay
  76:modem.c       **** }
 245              		.loc 1 76 0
 246 001c 00BF     		nop
 247 001e 80BD     		pop	{r7, pc}
 248              		.cfi_endproc
 249              	.LFE67:
 250              		.size	pins_configure_active, .-pins_configure_active
 251              		.section	.rodata
 252              		.align	2
 253              	.LC0:
 254 0000 4F4B00   		.ascii	"OK\000"
 255 0003 00       		.align	2
 256              	.LC1:
 257 0004 41542353 		.ascii	"AT#SHDN\015\000"
 257      48444E0D 
 257      00
 258              		.section	.text.modem_power_down,"ax",%progbits
 259              		.align	2
 260              		.global	modem_power_down
 261              		.thumb
 262              		.thumb_func
 263              		.type	modem_power_down, %function
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 7


 264              	modem_power_down:
 265              	.LFB68:
  77:modem.c       **** 
  78:modem.c       **** // Power down the modem -- completely "kill" modem to conserve power.
  79:modem.c       **** void modem_power_down(){
 266              		.loc 1 79 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 1, uses_anonymous_args = 0
 270 0000 80B5     		push	{r7, lr}
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 7, -8
 273              		.cfi_offset 14, -4
 274 0002 00AF     		add	r7, sp, #0
 275              		.cfi_def_cfa_register 7
  80:modem.c       ****     // AT Command to modem for Software Shut Down - #SHDN
  81:modem.c       ****     // \r is carriage return, it is necessary for the modem to know it got a command
  82:modem.c       ****     at_write_command("AT#SHDN\r","OK",5000u); 
 276              		.loc 1 82 0
 277 0004 41F28832 		movw	r2, #5000
 278 0008 0A49     		ldr	r1, .L12
 279 000a 0B48     		ldr	r0, .L12+4
 280 000c FFF7FEFF 		bl	at_write_command
  83:modem.c       ****    
  84:modem.c       ****     // Soft power cycle makes sure that the modem is all the way on (like holding on button on for 
  85:modem.c       ****     modem_soft_power_cycle();
 281              		.loc 1 85 0
 282 0010 FFF7FEFF 		bl	modem_soft_power_cycle
  86:modem.c       ****     CyDelay(1000u);
 283              		.loc 1 86 0
 284 0014 4FF47A70 		mov	r0, #1000
 285 0018 FFF7FEFF 		bl	CyDelay
  87:modem.c       ****     
  88:modem.c       ****     UART_Telit_Stop(); // Disables the UART operation.
 286              		.loc 1 88 0
 287 001c FFF7FEFF 		bl	UART_Telit_Stop
  89:modem.c       ****     isr_telit_rx_Stop(); // Disables and removes the interrupt.
 288              		.loc 1 89 0
 289 0020 FFF7FEFF 		bl	isr_telit_rx_Stop
  90:modem.c       ****     pins_configure_inactive(); // We want the modem power to be "killed" completely to conserve pow
 290              		.loc 1 90 0
 291 0024 FFF7FEFF 		bl	pins_configure_inactive
  91:modem.c       ****     modem_state = MODEM_STATE_OFF;
 292              		.loc 1 91 0
 293 0028 044B     		ldr	r3, .L12+8
 294 002a 0022     		movs	r2, #0
 295 002c 1A70     		strb	r2, [r3]
  92:modem.c       ****     
  93:modem.c       **** }
 296              		.loc 1 93 0
 297 002e 00BF     		nop
 298 0030 80BD     		pop	{r7, pc}
 299              	.L13:
 300 0032 00BF     		.align	2
 301              	.L12:
 302 0034 00000000 		.word	.LC0
 303 0038 04000000 		.word	.LC1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 8


 304 003c 00000000 		.word	modem_state
 305              		.cfi_endproc
 306              	.LFE68:
 307              		.size	modem_power_down, .-modem_power_down
 308              		.section	.rodata
 309 000d 000000   		.align	2
 310              	.LC2:
 311 0010 41544530 		.ascii	"ATE0\015\000"
 311      0D00
 312 0016 0000     		.align	2
 313              	.LC3:
 314 0018 4D6F6465 		.ascii	"Modem boot time: %d\000"
 314      6D20626F 
 314      6F742074 
 314      696D653A 
 314      20256400 
 315              		.align	2
 316              	.LC4:
 317 002c 4D6F6465 		.ascii	"Modem ready for AT commands after %d attempt(s).\000"
 317      6D207265 
 317      61647920 
 317      666F7220 
 317      41542063 
 318 005d 000000   		.align	2
 319              	.LC5:
 320 0060 4E6F2072 		.ascii	"No response from modem.\000"
 320      6573706F 
 320      6E736520 
 320      66726F6D 
 320      206D6F64 
 321              		.section	.text.modem_power_up,"ax",%progbits
 322              		.align	2
 323              		.global	modem_power_up
 324              		.thumb
 325              		.thumb_func
 326              		.type	modem_power_up, %function
 327              	modem_power_up:
 328              	.LFB69:
  94:modem.c       **** 
  95:modem.c       **** // This puts all the modem pints into a state that won't leak power
  96:modem.c       **** // Please call restore_pins() to bring them abck to function when they are needed for UART
  97:modem.c       **** uint8 modem_power_up(){
 329              		.loc 1 97 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 8
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333 0000 80B5     		push	{r7, lr}
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 7, -8
 336              		.cfi_offset 14, -4
 337 0002 82B0     		sub	sp, sp, #8
 338              		.cfi_def_cfa_offset 16
 339 0004 00AF     		add	r7, sp, #0
 340              		.cfi_def_cfa_register 7
  98:modem.c       **** 
  99:modem.c       ****     pins_configure_active(); // Turns on power and configures all UART pin modes
 341              		.loc 1 99 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 9


 342 0006 FFF7FEFF 		bl	pins_configure_active
 100:modem.c       ****     UART_Telit_Start(); // Sets the initVar variable, calls the UART_Telit_Init() function, and the
 343              		.loc 1 100 0
 344 000a FFF7FEFF 		bl	UART_Telit_Start
 101:modem.c       ****     isr_telit_rx_StartEx(isr_telit_rx); // Sets up the interrupt and enables it. 
 345              		.loc 1 101 0
 346 000e 2C48     		ldr	r0, .L27
 347 0010 FFF7FEFF 		bl	isr_telit_rx_StartEx
 102:modem.c       **** 
 103:modem.c       ****     modem_soft_power_cycle(); // Soft power cycle makes sure that the modem is all the way on (like
 348              		.loc 1 103 0
 349 0014 FFF7FEFF 		bl	modem_soft_power_cycle
 104:modem.c       ****     
 105:modem.c       ****     // Turn off ECHO command (doesn't repeat your command back to you).
 106:modem.c       ****     uint8 at_ready = 0;
 350              		.loc 1 106 0
 351 0018 0023     		movs	r3, #0
 352 001a FB71     		strb	r3, [r7, #7]
 107:modem.c       ****     uint8 attempts = 0;
 353              		.loc 1 107 0
 354 001c 0023     		movs	r3, #0
 355 001e 3B71     		strb	r3, [r7, #4]
 108:modem.c       ****     // Create variable boot_time of the current time stamp.
 109:modem.c       ****     long boot_time = getTimeStamp();
 356              		.loc 1 109 0
 357 0020 FFF7FEFF 		bl	getTimeStamp
 358 0024 3860     		str	r0, [r7]
 359              	.LBB2:
 110:modem.c       ****     
 111:modem.c       ****     //it takes the 4G modem 10+secs (max 20) to boot up, so keep hitting it with AT commands until 
 112:modem.c       ****     for(uint8 attempts = 0; attempts<3; attempts++){
 360              		.loc 1 112 0
 361 0026 0023     		movs	r3, #0
 362 0028 BB71     		strb	r3, [r7, #6]
 363 002a 1CE0     		b	.L15
 364              	.L22:
 365              	.LBB3:
 113:modem.c       ****         
 114:modem.c       ****         for(uint8 pwr_check = 0; pwr_check<20; pwr_check++){
 366              		.loc 1 114 0
 367 002c 0023     		movs	r3, #0
 368 002e 7B71     		strb	r3, [r7, #5]
 369 0030 0EE0     		b	.L16
 370              	.L19:
 115:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 116:modem.c       ****             if(at_write_command("ATE0\r","OK",1000u)){
 371              		.loc 1 116 0
 372 0032 4FF47A72 		mov	r2, #1000
 373 0036 2349     		ldr	r1, .L27+4
 374 0038 2348     		ldr	r0, .L27+8
 375 003a FFF7FEFF 		bl	at_write_command
 376 003e 0346     		mov	r3, r0
 377 0040 002B     		cmp	r3, #0
 378 0042 02D0     		beq	.L17
 117:modem.c       ****                 at_ready = 1;
 379              		.loc 1 117 0
 380 0044 0123     		movs	r3, #1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 10


 381 0046 FB71     		strb	r3, [r7, #7]
 118:modem.c       ****                 break;
 382              		.loc 1 118 0
 383 0048 05E0     		b	.L18
 384              	.L17:
 114:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 385              		.loc 1 114 0 discriminator 2
 386 004a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 387 004c 0133     		adds	r3, r3, #1
 388 004e 7B71     		strb	r3, [r7, #5]
 389              	.L16:
 114:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 390              		.loc 1 114 0 is_stmt 0 discriminator 1
 391 0050 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 392 0052 132B     		cmp	r3, #19
 393 0054 EDD9     		bls	.L19
 394              	.L18:
 395              	.LBE3:
 119:modem.c       ****             }
 120:modem.c       ****         }
 121:modem.c       ****             
 122:modem.c       ****         if(at_ready == 1){
 396              		.loc 1 122 0 is_stmt 1
 397 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 398 0058 012B     		cmp	r3, #1
 399 005a 08D0     		beq	.L26
 123:modem.c       ****             break;
 124:modem.c       ****         }else{
 125:modem.c       ****             // Soft power cycle makes sure that the modem is all the way on (like holding on button
 126:modem.c       ****             modem_soft_power_cycle();
 400              		.loc 1 126 0 discriminator 2
 401 005c FFF7FEFF 		bl	modem_soft_power_cycle
 112:modem.c       ****         
 402              		.loc 1 112 0 discriminator 2
 403 0060 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 404 0062 0133     		adds	r3, r3, #1
 405 0064 BB71     		strb	r3, [r7, #6]
 406              	.L15:
 112:modem.c       ****         
 407              		.loc 1 112 0 is_stmt 0 discriminator 1
 408 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 409 0068 022B     		cmp	r3, #2
 410 006a DFD9     		bls	.L22
 411 006c 00E0     		b	.L21
 412              	.L26:
 123:modem.c       ****             break;
 413              		.loc 1 123 0 is_stmt 1
 414 006e 00BF     		nop
 415              	.L21:
 416              	.LBE2:
 127:modem.c       ****         }
 128:modem.c       ****     }
 129:modem.c       ****     // Calculate boot up time and save to variable boot_time.
 130:modem.c       ****     boot_time = getTimeStamp() - boot_time;
 417              		.loc 1 130 0
 418 0070 FFF7FEFF 		bl	getTimeStamp
 419 0074 0246     		mov	r2, r0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 11


 420 0076 3B68     		ldr	r3, [r7]
 421 0078 D31A     		subs	r3, r2, r3
 422 007a 3B60     		str	r3, [r7]
 131:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Modem boot time: %d",boot_time);
 423              		.loc 1 131 0
 424 007c 3A68     		ldr	r2, [r7]
 425 007e 1349     		ldr	r1, .L27+12
 426 0080 0020     		movs	r0, #0
 427 0082 FFF7FEFF 		bl	printNotif
 132:modem.c       ****    
 133:modem.c       ****     if(at_ready == 1){
 428              		.loc 1 133 0
 429 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 430 0088 012B     		cmp	r3, #1
 431 008a 0AD1     		bne	.L23
 134:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Modem ready for AT commands after %d attempt(s).",attempts);
 432              		.loc 1 134 0
 433 008c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 434 008e 1A46     		mov	r2, r3
 435 0090 0F49     		ldr	r1, .L27+16
 436 0092 0020     		movs	r0, #0
 437 0094 FFF7FEFF 		bl	printNotif
 135:modem.c       ****         modem_state = MODEM_STATE_STARTUP;
 438              		.loc 1 135 0
 439 0098 0E4B     		ldr	r3, .L27+20
 440 009a 0122     		movs	r2, #1
 441 009c 1A70     		strb	r2, [r3]
 136:modem.c       ****     }else{
 137:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"No response from modem.");
 138:modem.c       ****         modem_state = MODEM_STATE_OFF;
 139:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 140:modem.c       ****         modem_power_down();
 141:modem.c       ****         return 0u;
 142:modem.c       ****     }
 143:modem.c       ****     return 1u;
 442              		.loc 1 143 0
 443 009e 0123     		movs	r3, #1
 444 00a0 09E0     		b	.L25
 445              	.L23:
 137:modem.c       ****         modem_state = MODEM_STATE_OFF;
 446              		.loc 1 137 0
 447 00a2 0D49     		ldr	r1, .L27+24
 448 00a4 0220     		movs	r0, #2
 449 00a6 FFF7FEFF 		bl	printNotif
 138:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 450              		.loc 1 138 0
 451 00aa 0A4B     		ldr	r3, .L27+20
 452 00ac 0022     		movs	r2, #0
 453 00ae 1A70     		strb	r2, [r3]
 140:modem.c       ****         return 0u;
 454              		.loc 1 140 0
 455 00b0 FFF7FEFF 		bl	modem_power_down
 141:modem.c       ****     }
 456              		.loc 1 141 0
 457 00b4 0023     		movs	r3, #0
 458              	.L25:
 144:modem.c       **** }
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 12


 459              		.loc 1 144 0
 460 00b6 1846     		mov	r0, r3
 461 00b8 0837     		adds	r7, r7, #8
 462              		.cfi_def_cfa_offset 8
 463 00ba BD46     		mov	sp, r7
 464              		.cfi_def_cfa_register 13
 465              		@ sp needed
 466 00bc 80BD     		pop	{r7, pc}
 467              	.L28:
 468 00be 00BF     		.align	2
 469              	.L27:
 470 00c0 00000000 		.word	isr_telit_rx
 471 00c4 00000000 		.word	.LC0
 472 00c8 10000000 		.word	.LC2
 473 00cc 18000000 		.word	.LC3
 474 00d0 2C000000 		.word	.LC4
 475 00d4 00000000 		.word	modem_state
 476 00d8 60000000 		.word	.LC5
 477              		.cfi_endproc
 478              	.LFE69:
 479              		.size	modem_power_up, .-modem_power_up
 480              		.section	.text.modem_soft_power_cycle,"ax",%progbits
 481              		.align	2
 482              		.global	modem_soft_power_cycle
 483              		.thumb
 484              		.thumb_func
 485              		.type	modem_soft_power_cycle, %function
 486              	modem_soft_power_cycle:
 487              	.LFB70:
 145:modem.c       **** 
 146:modem.c       **** // Puts modem in soft power cycle -- modem has power but isn't all the way on, so soft power cycle 
 147:modem.c       **** void modem_soft_power_cycle(){
 488              		.loc 1 147 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 1, uses_anonymous_args = 0
 492 0000 80B5     		push	{r7, lr}
 493              		.cfi_def_cfa_offset 8
 494              		.cfi_offset 7, -8
 495              		.cfi_offset 14, -4
 496 0002 00AF     		add	r7, sp, #0
 497              		.cfi_def_cfa_register 7
 148:modem.c       ****     Pin_Telit_ONOFF_Write(1u); // Pulls Telit_ONOFF pin high
 498              		.loc 1 148 0
 499 0004 0120     		movs	r0, #1
 500 0006 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 149:modem.c       ****     CyDelay(2000u); // Give modem a sec to boot
 501              		.loc 1 149 0
 502 000a 4FF4FA60 		mov	r0, #2000
 503 000e FFF7FEFF 		bl	CyDelay
 150:modem.c       ****     Pin_Telit_ONOFF_Write(0u); // Pulls Telit_ONOFF pin low
 504              		.loc 1 150 0
 505 0012 0020     		movs	r0, #0
 506 0014 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 151:modem.c       ****     
 152:modem.c       **** }
 507              		.loc 1 152 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 13


 508 0018 00BF     		nop
 509 001a 80BD     		pop	{r7, pc}
 510              		.cfi_endproc
 511              	.LFE70:
 512              		.size	modem_soft_power_cycle, .-modem_soft_power_cycle
 513              		.section	.text.uart_string_reset,"ax",%progbits
 514              		.align	2
 515              		.global	uart_string_reset
 516              		.thumb
 517              		.thumb_func
 518              		.type	uart_string_reset, %function
 519              	uart_string_reset:
 520              	.LFB71:
 153:modem.c       **** 
 154:modem.c       **** // Clear and reset the uart_received_string variable and uart_string_index for the next transmissio
 155:modem.c       **** void uart_string_reset(){
 521              		.loc 1 155 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 1, uses_anonymous_args = 0
 525 0000 80B5     		push	{r7, lr}
 526              		.cfi_def_cfa_offset 8
 527              		.cfi_offset 7, -8
 528              		.cfi_offset 14, -4
 529 0002 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 156:modem.c       ****     uart_string_index=0;
 531              		.loc 1 156 0
 532 0004 064B     		ldr	r3, .L31
 533 0006 0022     		movs	r2, #0
 534 0008 1A80     		strh	r2, [r3]	@ movhi
 157:modem.c       ****     // memset(void *str, int c, size_t n) copies the character c (an unsigned char) to the first n 
 158:modem.c       ****     memset(uart_received_string,'\0',sizeof(uart_received_string));
 535              		.loc 1 158 0
 536 000a 4FF48062 		mov	r2, #1024
 537 000e 0021     		movs	r1, #0
 538 0010 0448     		ldr	r0, .L31+4
 539 0012 FFF7FEFF 		bl	memset
 159:modem.c       ****     // Clears the receiver memory buffer and hardware RX FIFO of all received data.
 160:modem.c       ****     UART_Telit_ClearRxBuffer();
 540              		.loc 1 160 0
 541 0016 FFF7FEFF 		bl	UART_Telit_ClearRxBuffer
 161:modem.c       **** }
 542              		.loc 1 161 0
 543 001a 00BF     		nop
 544 001c 80BD     		pop	{r7, pc}
 545              	.L32:
 546 001e 00BF     		.align	2
 547              	.L31:
 548 0020 00000000 		.word	uart_string_index
 549 0024 00000000 		.word	uart_received_string
 550              		.cfi_endproc
 551              	.LFE71:
 552              		.size	uart_string_reset, .-uart_string_reset
 553              		.section	.rodata
 554              		.align	2
 555              	.LC6:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 14


 556 0078 4D6F6465 		.ascii	"Modem sent AT command without timeout: %s\015\012\000"
 556      6D207365 
 556      6E742041 
 556      5420636F 
 556      6D6D616E 
 557              		.align	2
 558              	.LC7:
 559 00a4 4D6F6465 		.ascii	"Modem Received expected AT Response on first Try:\012"
 559      6D205265 
 559      63656976 
 559      65642065 
 559      78706563 
 560 00d6 436F6D6D 		.ascii	"Command: %s\012Received: %s\015\012\000"
 560      616E643A 
 560      2025730A 
 560      52656365 
 560      69766564 
 561 00f1 000000   		.align	2
 562              	.LC8:
 563 00f4 4D6F6465 		.ascii	"Modem required %d tries to receive AT Response: %s\015"
 563      6D207265 
 563      71756972 
 563      65642025 
 563      64207472 
 564 0127 0A00     		.ascii	"\012\000"
 565 0129 000000   		.align	2
 566              	.LC9:
 567 012c 436F756C 		.ascii	"Could not write AT command: %s\012 Received: %s\012"
 567      64206E6F 
 567      74207772 
 567      69746520 
 567      41542063 
 568 0159 00       		.ascii	"\000"
 569              		.section	.text.at_write_command,"ax",%progbits
 570              		.align	2
 571              		.global	at_write_command
 572              		.thumb
 573              		.thumb_func
 574              		.type	at_write_command, %function
 575              	at_write_command:
 576              	.LFB72:
 162:modem.c       **** 
 163:modem.c       **** // Modem controlled  via  the  serial  interface  using  the  standard  AT commands.
 164:modem.c       **** // AT is an ATTENTION command and is used as a prefix to other parameters in a string. 
 165:modem.c       **** // Sends commands to the modem
 166:modem.c       **** uint8_t at_write_command(char* commands, char* expected_response,uint32_t timeout){
 577              		.loc 1 166 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 40
 580              		@ frame_needed = 1, uses_anonymous_args = 0
 581 0000 80B5     		push	{r7, lr}
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 7, -8
 584              		.cfi_offset 14, -4
 585 0002 8AB0     		sub	sp, sp, #40
 586              		.cfi_def_cfa_offset 48
 587 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 15


 588              		.cfi_def_cfa_register 7
 589 0006 F860     		str	r0, [r7, #12]
 590 0008 B960     		str	r1, [r7, #8]
 591 000a 7A60     		str	r2, [r7, #4]
 167:modem.c       **** 
 168:modem.c       ****     uint32 at_attempt = 0;
 592              		.loc 1 168 0
 593 000c 0023     		movs	r3, #0
 594 000e 7B62     		str	r3, [r7, #36]
 169:modem.c       ****     
 170:modem.c       ****     for(at_attempt = 0; at_attempt < 3; at_attempt++) {
 595              		.loc 1 170 0
 596 0010 0023     		movs	r3, #0
 597 0012 7B62     		str	r3, [r7, #36]
 598 0014 46E0     		b	.L34
 599              	.L42:
 600              	.LBB4:
 171:modem.c       ****         
 172:modem.c       ****         char* compare_location;
 173:modem.c       ****         uint32_t delay=10;
 601              		.loc 1 173 0
 602 0016 0A23     		movs	r3, #10
 603 0018 FB61     		str	r3, [r7, #28]
 174:modem.c       ****         uint32_t i, interval=timeout/delay;        
 604              		.loc 1 174 0
 605 001a 7A68     		ldr	r2, [r7, #4]
 606 001c FB69     		ldr	r3, [r7, #28]
 607 001e B2FBF3F3 		udiv	r3, r2, r3
 608 0022 BB61     		str	r3, [r7, #24]
 175:modem.c       ****         
 176:modem.c       ****         // Clear and reset the uart_received_string variable and uart_string_index for the next tra
 177:modem.c       ****         uart_string_reset();
 609              		.loc 1 177 0
 610 0024 FFF7FEFF 		bl	uart_string_reset
 178:modem.c       ****         
 179:modem.c       ****         // Sends a NULL terminated string to the TX buffer for transmission.
 180:modem.c       ****         UART_Telit_PutString(commands);
 611              		.loc 1 180 0
 612 0028 F868     		ldr	r0, [r7, #12]
 613 002a FFF7FEFF 		bl	UART_Telit_PutString
 181:modem.c       ****         
 182:modem.c       ****         
 183:modem.c       ****         // If no timeout, no need to wait for response
 184:modem.c       ****         if(timeout == NO_AT_TIMEOUT){
 614              		.loc 1 184 0
 615 002e 7B68     		ldr	r3, [r7, #4]
 616 0030 002B     		cmp	r3, #0
 617 0032 06D1     		bne	.L35
 185:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem sent AT command without timeout: %s\r\n", commands);
 618              		.loc 1 185 0
 619 0034 FA68     		ldr	r2, [r7, #12]
 620 0036 1F49     		ldr	r1, .L43
 621 0038 0020     		movs	r0, #0
 622 003a FFF7FEFF 		bl	printNotif
 186:modem.c       ****             return 1u;
 623              		.loc 1 186 0
 624 003e 0123     		movs	r3, #1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 16


 625 0040 34E0     		b	.L36
 626              	.L35:
 187:modem.c       ****         }
 188:modem.c       ****       
 189:modem.c       ****      
 190:modem.c       ****         for(i=0;i<interval;i++){ 
 627              		.loc 1 190 0
 628 0042 0023     		movs	r3, #0
 629 0044 3B62     		str	r3, [r7, #32]
 630 0046 20E0     		b	.L37
 631              	.L41:
 191:modem.c       ****             CyDelay((uint32) delay);
 632              		.loc 1 191 0
 633 0048 F869     		ldr	r0, [r7, #28]
 634 004a FFF7FEFF 		bl	CyDelay
 192:modem.c       ****             // strstr(const char *haystack, const char *needle) function finds the first occurrence
 193:modem.c       ****             // Returns a pointer to the first occurrence in haystack of any of the entire sequence 
 194:modem.c       ****             compare_location=strstr(uart_received_string,expected_response);        
 635              		.loc 1 194 0
 636 004e B968     		ldr	r1, [r7, #8]
 637 0050 1948     		ldr	r0, .L43+4
 638 0052 FFF7FEFF 		bl	strstr
 639 0056 7861     		str	r0, [r7, #20]
 195:modem.c       ****             if(compare_location!=NULL) {
 640              		.loc 1 195 0
 641 0058 7B69     		ldr	r3, [r7, #20]
 642 005a 002B     		cmp	r3, #0
 643 005c 12D0     		beq	.L38
 196:modem.c       ****                 if (at_attempt == 0){
 644              		.loc 1 196 0
 645 005e 7B6A     		ldr	r3, [r7, #36]
 646 0060 002B     		cmp	r3, #0
 647 0062 06D1     		bne	.L39
 197:modem.c       ****                     // we add \n for new line to make it easier to decipher
 198:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT,"Modem Received expected AT Response on first Try:\
 648              		.loc 1 198 0
 649 0064 144B     		ldr	r3, .L43+4
 650 0066 FA68     		ldr	r2, [r7, #12]
 651 0068 1449     		ldr	r1, .L43+8
 652 006a 0020     		movs	r0, #0
 653 006c FFF7FEFF 		bl	printNotif
 654 0070 06E0     		b	.L40
 655              	.L39:
 199:modem.c       ****                 }else{
 200:modem.c       ****                     printNotif(NOTIF_TYPE_WARNING,"Modem required %d tries to receive AT Response: 
 656              		.loc 1 200 0
 657 0072 7B6A     		ldr	r3, [r7, #36]
 658 0074 5A1C     		adds	r2, r3, #1
 659 0076 104B     		ldr	r3, .L43+4
 660 0078 1149     		ldr	r1, .L43+12
 661 007a 0120     		movs	r0, #1
 662 007c FFF7FEFF 		bl	printNotif
 663              	.L40:
 201:modem.c       ****                  
 202:modem.c       ****                 }
 203:modem.c       ****                 return(1);
 664              		.loc 1 203 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 17


 665 0080 0123     		movs	r3, #1
 666 0082 13E0     		b	.L36
 667              	.L38:
 190:modem.c       ****             CyDelay((uint32) delay);
 668              		.loc 1 190 0 discriminator 2
 669 0084 3B6A     		ldr	r3, [r7, #32]
 670 0086 0133     		adds	r3, r3, #1
 671 0088 3B62     		str	r3, [r7, #32]
 672              	.L37:
 190:modem.c       ****             CyDelay((uint32) delay);
 673              		.loc 1 190 0 is_stmt 0 discriminator 1
 674 008a 3A6A     		ldr	r2, [r7, #32]
 675 008c BB69     		ldr	r3, [r7, #24]
 676 008e 9A42     		cmp	r2, r3
 677 0090 DAD3     		bcc	.L41
 204:modem.c       ****             }
 205:modem.c       ****             
 206:modem.c       ****         }  
 207:modem.c       ****         
 208:modem.c       ****         // Something went wrong, restart UART
 209:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not write AT command: %s\n Received: %s\n", commands,uar
 678              		.loc 1 209 0 is_stmt 1 discriminator 2
 679 0092 094B     		ldr	r3, .L43+4
 680 0094 FA68     		ldr	r2, [r7, #12]
 681 0096 0B49     		ldr	r1, .L43+16
 682 0098 0220     		movs	r0, #2
 683 009a FFF7FEFF 		bl	printNotif
 684              	.LBE4:
 170:modem.c       ****         
 685              		.loc 1 170 0 discriminator 2
 686 009e 7B6A     		ldr	r3, [r7, #36]
 687 00a0 0133     		adds	r3, r3, #1
 688 00a2 7B62     		str	r3, [r7, #36]
 689              	.L34:
 170:modem.c       ****         
 690              		.loc 1 170 0 is_stmt 0 discriminator 1
 691 00a4 7B6A     		ldr	r3, [r7, #36]
 692 00a6 022B     		cmp	r3, #2
 693 00a8 B5D9     		bls	.L42
 210:modem.c       ****       
 211:modem.c       ****     }
 212:modem.c       ****    // printNotif(NOTIF_TYPE_ERROR,"Modem AT response timeout: %s\r\n", commands);
 213:modem.c       ****           
 214:modem.c       ****     return(0);    
 694              		.loc 1 214 0 is_stmt 1
 695 00aa 0023     		movs	r3, #0
 696              	.L36:
 215:modem.c       **** }
 697              		.loc 1 215 0
 698 00ac 1846     		mov	r0, r3
 699 00ae 2837     		adds	r7, r7, #40
 700              		.cfi_def_cfa_offset 8
 701 00b0 BD46     		mov	sp, r7
 702              		.cfi_def_cfa_register 13
 703              		@ sp needed
 704 00b2 80BD     		pop	{r7, pc}
 705              	.L44:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 18


 706              		.align	2
 707              	.L43:
 708 00b4 78000000 		.word	.LC6
 709 00b8 00000000 		.word	uart_received_string
 710 00bc A4000000 		.word	.LC7
 711 00c0 F4000000 		.word	.LC8
 712 00c4 2C010000 		.word	.LC9
 713              		.cfi_endproc
 714              	.LFE72:
 715              		.size	at_write_command, .-at_write_command
 716              		.section	.rodata
 717 015a 0000     		.align	2
 718              	.LC10:
 719 015c 54455354 		.ascii	"TEST_MODEM\000"
 719      5F4D4F44 
 719      454D00
 720 0167 00       		.align	2
 721              	.LC11:
 722 0168 4E6F2072 		.ascii	"No reponse from modem.\000"
 722      65706F6E 
 722      73652066 
 722      726F6D20 
 722      6D6F6465 
 723 017f 00       		.align	2
 724              	.LC12:
 725 0180 4D6F6465 		.ascii	"Modem connected to network.\000"
 725      6D20636F 
 725      6E6E6563 
 725      74656420 
 725      746F206E 
 726              		.section	.text.modem_test,"ax",%progbits
 727              		.align	2
 728              		.global	modem_test
 729              		.thumb
 730              		.thumb_func
 731              		.type	modem_test, %function
 732              	modem_test:
 733              	.LFB73:
 216:modem.c       **** 
 217:modem.c       **** // Test modem -- needs fleshed out
 218:modem.c       **** test_t modem_test(){
 734              		.loc 1 218 0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 408
 737              		@ frame_needed = 1, uses_anonymous_args = 0
 738 0000 B0B5     		push	{r4, r5, r7, lr}
 739              		.cfi_def_cfa_offset 16
 740              		.cfi_offset 4, -16
 741              		.cfi_offset 5, -12
 742              		.cfi_offset 7, -8
 743              		.cfi_offset 14, -4
 744 0002 E6B0     		sub	sp, sp, #408
 745              		.cfi_def_cfa_offset 424
 746 0004 00AF     		add	r7, sp, #0
 747              		.cfi_def_cfa_register 7
 748 0006 3B1D     		adds	r3, r7, #4
 749 0008 1860     		str	r0, [r3]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 19


 219:modem.c       ****     
 220:modem.c       ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
 221:modem.c       ****     test.status = 0;
 750              		.loc 1 221 0
 751 000a 07F10C03 		add	r3, r7, #12
 752 000e 0022     		movs	r2, #0
 753 0010 83F88020 		strb	r2, [r3, #128]
 222:modem.c       ****     // Print test name and test reason
 223:modem.c       ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_MODEM");
 754              		.loc 1 223 0
 755 0014 07F10C03 		add	r3, r7, #12
 756 0018 354A     		ldr	r2, .L53
 757 001a 07CA     		ldmia	r2, {r0, r1, r2}
 758 001c 03C3     		stmia	r3!, {r0, r1}
 759 001e 1A80     		strh	r2, [r3]	@ movhi
 760 0020 0233     		adds	r3, r3, #2
 761 0022 120C     		lsrs	r2, r2, #16
 762 0024 1A70     		strb	r2, [r3]
 224:modem.c       ****     snprintf(test.reason,sizeof(test.reason),"No reponse from modem.");
 763              		.loc 1 224 0
 764 0026 07F10C03 		add	r3, r7, #12
 765 002a 8133     		adds	r3, r3, #129
 766 002c 314A     		ldr	r2, .L53+4
 767 002e 1C46     		mov	r4, r3
 768 0030 1546     		mov	r5, r2
 769 0032 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 770 0034 2060     		str	r0, [r4]	@ unaligned
 771 0036 6160     		str	r1, [r4, #4]	@ unaligned
 772 0038 A260     		str	r2, [r4, #8]	@ unaligned
 773 003a E360     		str	r3, [r4, #12]	@ unaligned
 774 003c 2868     		ldr	r0, [r5]	@ unaligned
 775 003e 2061     		str	r0, [r4, #16]	@ unaligned
 776 0040 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 777 0042 AA79     		ldrb	r2, [r5, #6]
 778 0044 A382     		strh	r3, [r4, #20]	@ unaligned
 779 0046 1346     		mov	r3, r2
 780 0048 A375     		strb	r3, [r4, #22]
 781              	.LBB5:
 225:modem.c       ****    
 226:modem.c       ****     //try the modem 60*100 (60 secs)
 227:modem.c       ****     for(int i = 0; i< 60; i++){
 782              		.loc 1 227 0
 783 004a 0023     		movs	r3, #0
 784 004c C7F89431 		str	r3, [r7, #404]
 785 0050 39E0     		b	.L46
 786              	.L51:
 228:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 229:modem.c       ****         modem_process_tasks();
 787              		.loc 1 229 0
 788 0052 FFF7FEFF 		bl	modem_process_tasks
 230:modem.c       ****          
 231:modem.c       ****         if(modem_get_state() == MODEM_STATE_OFF){
 789              		.loc 1 231 0
 790 0056 FFF7FEFF 		bl	modem_get_state
 791 005a 0346     		mov	r3, r0
 792 005c 002B     		cmp	r3, #0
 793 005e 02D1     		bne	.L47
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 20


 232:modem.c       ****             // This puts all the modem points into a state that won't leak power
 233:modem.c       ****             modem_power_up();
 794              		.loc 1 233 0
 795 0060 FFF7FEFF 		bl	modem_power_up
 796 0064 27E0     		b	.L48
 797              	.L47:
 234:modem.c       ****             // Should put this on a max_try counter, so we don't just keep trying to connect over a
 235:modem.c       ****             
 236:modem.c       ****         }else if(modem_get_state() == MODEM_STATE_READY){
 798              		.loc 1 236 0
 799 0066 FFF7FEFF 		bl	modem_get_state
 800 006a 0346     		mov	r3, r0
 801 006c 042B     		cmp	r3, #4
 802 006e 22D1     		bne	.L48
 803              	.LBB6:
 237:modem.c       ****         
 238:modem.c       ****         
 239:modem.c       ****         // Get time, and if it looks good, set the RTC with it
 240:modem.c       ****         long network_time = modem_get_network_time();
 804              		.loc 1 240 0
 805 0070 FFF7FEFF 		bl	modem_get_network_time
 806 0074 C7F89001 		str	r0, [r7, #400]
 241:modem.c       ****         if(network_time != 0){
 807              		.loc 1 241 0
 808 0078 D7F89031 		ldr	r3, [r7, #400]
 809 007c 002B     		cmp	r3, #0
 810 007e 03D0     		beq	.L49
 242:modem.c       ****             setTime(network_time); // Set the system time 
 811              		.loc 1 242 0
 812 0080 D7F89001 		ldr	r0, [r7, #400]
 813 0084 FFF7FEFF 		bl	setTime
 814              	.L49:
 243:modem.c       ****         }
 244:modem.c       ****             
 245:modem.c       ****         snprintf(test.reason,sizeof(test.reason),"Modem connected to network.");
 815              		.loc 1 245 0
 816 0088 07F10C03 		add	r3, r7, #12
 817 008c 8133     		adds	r3, r3, #129
 818 008e 1A4A     		ldr	r2, .L53+8
 819 0090 1D46     		mov	r5, r3
 820 0092 1446     		mov	r4, r2
 821 0094 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 822 0096 2860     		str	r0, [r5]	@ unaligned
 823 0098 6960     		str	r1, [r5, #4]	@ unaligned
 824 009a AA60     		str	r2, [r5, #8]	@ unaligned
 825 009c EB60     		str	r3, [r5, #12]	@ unaligned
 826 009e 07CC     		ldmia	r4!, {r0, r1, r2}
 827 00a0 2861     		str	r0, [r5, #16]	@ unaligned
 828 00a2 6961     		str	r1, [r5, #20]	@ unaligned
 829 00a4 AA61     		str	r2, [r5, #24]	@ unaligned
 246:modem.c       ****         test.status = 1;
 830              		.loc 1 246 0
 831 00a6 07F10C03 		add	r3, r7, #12
 832 00aa 0122     		movs	r2, #1
 833 00ac 83F88020 		strb	r2, [r3, #128]
 247:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 248:modem.c       ****         modem_power_down();
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 21


 834              		.loc 1 248 0
 835 00b0 FFF7FEFF 		bl	modem_power_down
 249:modem.c       ****         break;
 836              		.loc 1 249 0
 837 00b4 0BE0     		b	.L50
 838              	.L48:
 839              	.LBE6:
 250:modem.c       ****         
 251:modem.c       ****       }
 252:modem.c       ****         CyDelay(100u);
 840              		.loc 1 252 0 discriminator 2
 841 00b6 6420     		movs	r0, #100
 842 00b8 FFF7FEFF 		bl	CyDelay
 227:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 843              		.loc 1 227 0 discriminator 2
 844 00bc D7F89431 		ldr	r3, [r7, #404]
 845 00c0 0133     		adds	r3, r3, #1
 846 00c2 C7F89431 		str	r3, [r7, #404]
 847              	.L46:
 227:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 848              		.loc 1 227 0 is_stmt 0 discriminator 1
 849 00c6 D7F89431 		ldr	r3, [r7, #404]
 850 00ca 3B2B     		cmp	r3, #59
 851 00cc C1DD     		ble	.L51
 852              	.L50:
 853              	.LBE5:
 253:modem.c       ****         
 254:modem.c       ****     }
 255:modem.c       ****     
 256:modem.c       ****     return test;
 854              		.loc 1 256 0 is_stmt 1
 855 00ce 3B1D     		adds	r3, r7, #4
 856 00d0 1A68     		ldr	r2, [r3]
 857 00d2 07F10C03 		add	r3, r7, #12
 858 00d6 1046     		mov	r0, r2
 859 00d8 1946     		mov	r1, r3
 860 00da 40F28113 		movw	r3, #385
 861 00de 1A46     		mov	r2, r3
 862 00e0 FFF7FEFF 		bl	memcpy
 257:modem.c       **** }
 863              		.loc 1 257 0
 864 00e4 3B1D     		adds	r3, r7, #4
 865 00e6 1868     		ldr	r0, [r3]
 866 00e8 07F5CC77 		add	r7, r7, #408
 867              		.cfi_def_cfa_offset 16
 868 00ec BD46     		mov	sp, r7
 869              		.cfi_def_cfa_register 13
 870              		@ sp needed
 871 00ee B0BD     		pop	{r4, r5, r7, pc}
 872              	.L54:
 873              		.align	2
 874              	.L53:
 875 00f0 5C010000 		.word	.LC10
 876 00f4 68010000 		.word	.LC11
 877 00f8 80010000 		.word	.LC12
 878              		.cfi_endproc
 879              	.LFE73:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 22


 880              		.size	modem_test, .-modem_test
 881              		.section	.text.extract_string,"ax",%progbits
 882              		.align	2
 883              		.global	extract_string
 884              		.thumb
 885              		.thumb_func
 886              		.type	extract_string, %function
 887              	extract_string:
 888              	.LFB74:
 258:modem.c       **** 
 259:modem.c       **** // Extract string from the UART
 260:modem.c       **** uint8 extract_string(char* from, const char* beginMarker, const char* endMarker,  char* target){
 889              		.loc 1 260 0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 24
 892              		@ frame_needed = 1, uses_anonymous_args = 0
 893 0000 80B5     		push	{r7, lr}
 894              		.cfi_def_cfa_offset 8
 895              		.cfi_offset 7, -8
 896              		.cfi_offset 14, -4
 897 0002 86B0     		sub	sp, sp, #24
 898              		.cfi_def_cfa_offset 32
 899 0004 00AF     		add	r7, sp, #0
 900              		.cfi_def_cfa_register 7
 901 0006 F860     		str	r0, [r7, #12]
 902 0008 B960     		str	r1, [r7, #8]
 903 000a 7A60     		str	r2, [r7, #4]
 904 000c 3B60     		str	r3, [r7]
 261:modem.c       ****     
 262:modem.c       ****         char *a, *b;
 263:modem.c       ****   
 264:modem.c       ****         // Expect the UART to contain something like "+CSQ: 17,99\r\n\r\nOK"
 265:modem.c       ****         // - Search for "+CSQ: ".  Place the starting pointer, a, at the resulting index
 266:modem.c       ****         a = strstr(from,beginMarker);
 905              		.loc 1 266 0
 906 000e B968     		ldr	r1, [r7, #8]
 907 0010 F868     		ldr	r0, [r7, #12]
 908 0012 FFF7FEFF 		bl	strstr
 909 0016 7861     		str	r0, [r7, #20]
 267:modem.c       ****         if (a == NULL) {
 910              		.loc 1 267 0
 911 0018 7B69     		ldr	r3, [r7, #20]
 912 001a 002B     		cmp	r3, #0
 913 001c 01D1     		bne	.L56
 268:modem.c       ****             //puts("+CSQ: not found in uart_received_string");
 269:modem.c       ****             a = from;
 914              		.loc 1 269 0
 915 001e FB68     		ldr	r3, [r7, #12]
 916 0020 7B61     		str	r3, [r7, #20]
 917              	.L56:
 270:modem.c       ****         }
 271:modem.c       ****         // The strlen() function calculates the length of a given string.
 272:modem.c       ****         a += strlen(beginMarker);
 918              		.loc 1 272 0
 919 0022 B868     		ldr	r0, [r7, #8]
 920 0024 FFF7FEFF 		bl	strlen
 921 0028 0246     		mov	r2, r0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 23


 922 002a 7B69     		ldr	r3, [r7, #20]
 923 002c 1344     		add	r3, r3, r2
 924 002e 7B61     		str	r3, [r7, #20]
 273:modem.c       ****         
 274:modem.c       ****         // - Find the end marking and offset by 1
 275:modem.c       ****         // strstr(const char *haystack, const char *needle) function finds the first occurrence of 
 276:modem.c       ****         // Returns a pointer to the first occurrence in haystack of any of the entire sequence of c
 277:modem.c       ****         b = strstr(a,endMarker);
 925              		.loc 1 277 0
 926 0030 7968     		ldr	r1, [r7, #4]
 927 0032 7869     		ldr	r0, [r7, #20]
 928 0034 FFF7FEFF 		bl	strstr
 929 0038 3861     		str	r0, [r7, #16]
 278:modem.c       ****         if (b == NULL) {
 930              		.loc 1 278 0
 931 003a 3B69     		ldr	r3, [r7, #16]
 932 003c 002B     		cmp	r3, #0
 933 003e 06D1     		bne	.L57
 279:modem.c       ****             // Puts("Comma not found in uart_received_string");
 280:modem.c       ****             b=from+strlen(from);
 934              		.loc 1 280 0
 935 0040 F868     		ldr	r0, [r7, #12]
 936 0042 FFF7FEFF 		bl	strlen
 937 0046 0246     		mov	r2, r0
 938 0048 FB68     		ldr	r3, [r7, #12]
 939 004a 1344     		add	r3, r3, r2
 940 004c 3B61     		str	r3, [r7, #16]
 941              	.L57:
 281:modem.c       ****         }        
 282:modem.c       ****         
 283:modem.c       ****         // Parse the strings and store the respective rssi and fer values
 284:modem.c       ****         strncpy(target,a,b-a);
 942              		.loc 1 284 0
 943 004e 3A69     		ldr	r2, [r7, #16]
 944 0050 7B69     		ldr	r3, [r7, #20]
 945 0052 D31A     		subs	r3, r2, r3
 946 0054 1A46     		mov	r2, r3
 947 0056 7969     		ldr	r1, [r7, #20]
 948 0058 3868     		ldr	r0, [r7]
 949 005a FFF7FEFF 		bl	strncpy
 285:modem.c       ****         target[b-a] = '\0';
 950              		.loc 1 285 0
 951 005e 3A69     		ldr	r2, [r7, #16]
 952 0060 7B69     		ldr	r3, [r7, #20]
 953 0062 D31A     		subs	r3, r2, r3
 954 0064 1A46     		mov	r2, r3
 955 0066 3B68     		ldr	r3, [r7]
 956 0068 1344     		add	r3, r3, r2
 957 006a 0022     		movs	r2, #0
 958 006c 1A70     		strb	r2, [r3]
 286:modem.c       ****         return 1u;
 959              		.loc 1 286 0
 960 006e 0123     		movs	r3, #1
 287:modem.c       ****         
 288:modem.c       **** }
 961              		.loc 1 288 0
 962 0070 1846     		mov	r0, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 24


 963 0072 1837     		adds	r7, r7, #24
 964              		.cfi_def_cfa_offset 8
 965 0074 BD46     		mov	sp, r7
 966              		.cfi_def_cfa_register 13
 967              		@ sp needed
 968 0076 80BD     		pop	{r7, pc}
 969              		.cfi_endproc
 970              	.LFE74:
 971              		.size	extract_string, .-extract_string
 972              		.section	.rodata
 973              		.align	2
 974              	.LC13:
 975 019c 54696D65 		.ascii	"Time to connecto to network: %d seconds\000"
 975      20746F20 
 975      636F6E6E 
 975      6563746F 
 975      20746F20 
 976              		.align	2
 977              	.LC14:
 978 01c4 4D6F6465 		.ascii	"Modem timed out on network connect\000"
 978      6D207469 
 978      6D656420 
 978      6F757420 
 978      6F6E206E 
 979 01e7 00       		.align	2
 980              	.LC15:
 981 01e8 41637175 		.ascii	"Acquired IP address: %d seconds\000"
 981      69726564 
 981      20495020 
 981      61646472 
 981      6573733A 
 982              		.align	2
 983              	.LC16:
 984 0208 4D6F6465 		.ascii	"Modem timed out on IP address acquire.\000"
 984      6D207469 
 984      6D656420 
 984      6F757420 
 984      6F6E2049 
 985              		.section	.text.modem_process_tasks,"ax",%progbits
 986              		.align	2
 987              		.global	modem_process_tasks
 988              		.thumb
 989              		.thumb_func
 990              		.type	modem_process_tasks, %function
 991              	modem_process_tasks:
 992              	.LFB75:
 289:modem.c       **** 
 290:modem.c       **** // Function to startup the modem, connect to the network, and then hand it off to sleep
 291:modem.c       **** uint8 modem_process_tasks(){
 993              		.loc 1 291 0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 0
 996              		@ frame_needed = 1, uses_anonymous_args = 0
 997 0000 80B5     		push	{r7, lr}
 998              		.cfi_def_cfa_offset 8
 999              		.cfi_offset 7, -8
 1000              		.cfi_offset 14, -4
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 25


 1001 0002 00AF     		add	r7, sp, #0
 1002              		.cfi_def_cfa_register 7
 292:modem.c       ****     // If modem state is "startup" then get the modem start time, configure modem settings, and cha
 293:modem.c       ****     if(modem_state == MODEM_STATE_STARTUP){
 1003              		.loc 1 293 0
 1004 0004 394B     		ldr	r3, .L68
 1005 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1006 0008 012B     		cmp	r3, #1
 1007 000a 0BD1     		bne	.L60
 294:modem.c       ****         
 295:modem.c       ****         modem_start_time_stamp = getTimeStamp(); // Get timestamp for modem start time
 1008              		.loc 1 295 0
 1009 000c FFF7FEFF 		bl	getTimeStamp
 1010 0010 0246     		mov	r2, r0
 1011 0012 374B     		ldr	r3, .L68+4
 1012 0014 1A60     		str	r2, [r3]
 296:modem.c       ****         modem_configure_settings(); // Configure modem settings
 1013              		.loc 1 296 0
 1014 0016 FFF7FEFF 		bl	modem_configure_settings
 297:modem.c       ****         modem_state = MODEM_STATE_WAITING_FOR_NETWORK; // Change modem state 
 1015              		.loc 1 297 0
 1016 001a 344B     		ldr	r3, .L68
 1017 001c 0222     		movs	r2, #2
 1018 001e 1A70     		strb	r2, [r3]
 298:modem.c       ****         return 1u; // Keep going, don't hand off to sleep yet
 1019              		.loc 1 298 0
 1020 0020 0123     		movs	r3, #1
 1021 0022 60E0     		b	.L61
 1022              	.L60:
 299:modem.c       ****         
 300:modem.c       ****     }
 301:modem.c       ****     // Else if modem state is "waiting for network" 
 302:modem.c       ****     else if(modem_state == MODEM_STATE_WAITING_FOR_NETWORK){
 1023              		.loc 1 302 0
 1024 0024 314B     		ldr	r3, .L68
 1025 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1026 0028 022B     		cmp	r3, #2
 1027 002a 2DD1     		bne	.L62
 303:modem.c       ****         // If modem connected to the cell network, save/print the time to connect to the network
 304:modem.c       ****         if(is_connected_to_cell_network()){
 1028              		.loc 1 304 0
 1029 002c FFF7FEFF 		bl	is_connected_to_cell_network
 1030 0030 0346     		mov	r3, r0
 1031 0032 002B     		cmp	r3, #0
 1032 0034 15D0     		beq	.L63
 305:modem.c       ****       
 306:modem.c       ****              modem_stats.time_to_network_connect = (int)(getTimeStamp() - (int32)modem_start_time_s
 1033              		.loc 1 306 0
 1034 0036 FFF7FEFF 		bl	getTimeStamp
 1035 003a 0246     		mov	r2, r0
 1036 003c 2C4B     		ldr	r3, .L68+4
 1037 003e 1B68     		ldr	r3, [r3]
 1038 0040 D31A     		subs	r3, r2, r3
 1039 0042 2C4A     		ldr	r2, .L68+8
 1040 0044 5360     		str	r3, [r2, #4]
 307:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Time to connecto to network: %d seconds",
 1041              		.loc 1 307 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 26


 1042 0046 2B4B     		ldr	r3, .L68+8
 1043 0048 5B68     		ldr	r3, [r3, #4]
 1044 004a 1A46     		mov	r2, r3
 1045 004c 2A49     		ldr	r1, .L68+12
 1046 004e 0020     		movs	r0, #0
 1047 0050 FFF7FEFF 		bl	printNotif
 308:modem.c       ****                                             modem_stats.time_to_network_connect);
 309:modem.c       ****             get_cell_network_stats(); // Get cell network stats
 1048              		.loc 1 309 0
 1049 0054 FFF7FEFF 		bl	get_cell_network_stats
 310:modem.c       ****             set_up_internet_connection(); // Setup the internet connection
 1050              		.loc 1 310 0
 1051 0058 FFF7FEFF 		bl	set_up_internet_connection
 311:modem.c       ****             modem_state = MODEM_STATE_WAITING_FOR_IP; // Change modem state 
 1052              		.loc 1 311 0
 1053 005c 234B     		ldr	r3, .L68
 1054 005e 0322     		movs	r2, #3
 1055 0060 1A70     		strb	r2, [r3]
 1056              	.L63:
 312:modem.c       ****         }
 313:modem.c       **** 
 314:modem.c       ****         //power off if we times out shold only take ~30 secs to connect to network
 315:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_NETWORK_CONNECT){
 1057              		.loc 1 315 0
 1058 0062 FFF7FEFF 		bl	getTimeStamp
 1059 0066 0246     		mov	r2, r0
 1060 0068 214B     		ldr	r3, .L68+4
 1061 006a 1B68     		ldr	r3, [r3]
 1062 006c D31A     		subs	r3, r2, r3
 1063 006e C82B     		cmp	r3, #200
 1064 0070 08DD     		ble	.L64
 316:modem.c       ****             modem_state = MODEM_STATE_OFF; // Change modem state
 1065              		.loc 1 316 0
 1066 0072 1E4B     		ldr	r3, .L68
 1067 0074 0022     		movs	r2, #0
 1068 0076 1A70     		strb	r2, [r3]
 317:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1069              		.loc 1 317 0
 1070 0078 FFF7FEFF 		bl	modem_power_down
 318:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on network connect");
 1071              		.loc 1 318 0
 1072 007c 1F49     		ldr	r1, .L68+16
 1073 007e 0220     		movs	r0, #2
 1074 0080 FFF7FEFF 		bl	printNotif
 1075              	.L64:
 319:modem.c       ****             
 320:modem.c       ****         }
 321:modem.c       ****         
 322:modem.c       ****         return 0u;//ok to hand off to sleep
 1076              		.loc 1 322 0
 1077 0084 0023     		movs	r3, #0
 1078 0086 2EE0     		b	.L61
 1079              	.L62:
 323:modem.c       ****         
 324:modem.c       ****     // Else if modem state is "waiting for IP"
 325:modem.c       ****     }else if(modem_state == MODEM_STATE_WAITING_FOR_IP){
 1080              		.loc 1 325 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 27


 1081 0088 184B     		ldr	r3, .L68
 1082 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1083 008c 032B     		cmp	r3, #3
 1084 008e 29D1     		bne	.L65
 326:modem.c       ****         // If the modem is connected to the internet, change modem state to "ready", save/print tim
 327:modem.c       ****         if(is_connected_to_internet()){
 1085              		.loc 1 327 0
 1086 0090 FFF7FEFF 		bl	is_connected_to_internet
 1087 0094 0346     		mov	r3, r0
 1088 0096 002B     		cmp	r3, #0
 1089 0098 11D0     		beq	.L66
 328:modem.c       ****             modem_state = MODEM_STATE_READY; // Change modem state
 1090              		.loc 1 328 0
 1091 009a 144B     		ldr	r3, .L68
 1092 009c 0422     		movs	r2, #4
 1093 009e 1A70     		strb	r2, [r3]
 329:modem.c       ****             // Save/print time to acquire IP address
 330:modem.c       ****             modem_stats.time_to_acquire_ip = (int)(getTimeStamp() - (int32)modem_start_time_stamp);
 1094              		.loc 1 330 0
 1095 00a0 FFF7FEFF 		bl	getTimeStamp
 1096 00a4 0246     		mov	r2, r0
 1097 00a6 124B     		ldr	r3, .L68+4
 1098 00a8 1B68     		ldr	r3, [r3]
 1099 00aa D31A     		subs	r3, r2, r3
 1100 00ac 114A     		ldr	r2, .L68+8
 1101 00ae 9360     		str	r3, [r2, #8]
 331:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Acquired IP address: %d seconds",
 1102              		.loc 1 331 0
 1103 00b0 104B     		ldr	r3, .L68+8
 1104 00b2 9B68     		ldr	r3, [r3, #8]
 1105 00b4 1A46     		mov	r2, r3
 1106 00b6 1249     		ldr	r1, .L68+20
 1107 00b8 0020     		movs	r0, #0
 1108 00ba FFF7FEFF 		bl	printNotif
 1109              	.L66:
 332:modem.c       ****                                             modem_stats.time_to_acquire_ip);
 333:modem.c       ****         }
 334:modem.c       ****         
 335:modem.c       ****         // Power off if we times out shold only take ~30 secs to connect to network
 336:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_IP_ACQUIRE){
 1110              		.loc 1 336 0
 1111 00be FFF7FEFF 		bl	getTimeStamp
 1112 00c2 0246     		mov	r2, r0
 1113 00c4 0A4B     		ldr	r3, .L68+4
 1114 00c6 1B68     		ldr	r3, [r3]
 1115 00c8 D31A     		subs	r3, r2, r3
 1116 00ca E62B     		cmp	r3, #230
 1117 00cc 08DD     		ble	.L67
 337:modem.c       ****             modem_state = MODEM_STATE_OFF;
 1118              		.loc 1 337 0
 1119 00ce 074B     		ldr	r3, .L68
 1120 00d0 0022     		movs	r2, #0
 1121 00d2 1A70     		strb	r2, [r3]
 338:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1122              		.loc 1 338 0
 1123 00d4 FFF7FEFF 		bl	modem_power_down
 339:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on IP address acquire.");
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 28


 1124              		.loc 1 339 0
 1125 00d8 0A49     		ldr	r1, .L68+24
 1126 00da 0220     		movs	r0, #2
 1127 00dc FFF7FEFF 		bl	printNotif
 1128              	.L67:
 340:modem.c       ****       
 341:modem.c       ****         }
 342:modem.c       ****         return 0u;//ok to hand off to sleep
 1129              		.loc 1 342 0
 1130 00e0 0023     		movs	r3, #0
 1131 00e2 00E0     		b	.L61
 1132              	.L65:
 343:modem.c       ****     }
 344:modem.c       ****     
 345:modem.c       ****     return 0u;
 1133              		.loc 1 345 0
 1134 00e4 0023     		movs	r3, #0
 1135              	.L61:
 346:modem.c       ****     
 347:modem.c       **** }
 1136              		.loc 1 347 0
 1137 00e6 1846     		mov	r0, r3
 1138 00e8 80BD     		pop	{r7, pc}
 1139              	.L69:
 1140 00ea 00BF     		.align	2
 1141              	.L68:
 1142 00ec 00000000 		.word	modem_state
 1143 00f0 00000000 		.word	modem_start_time_stamp
 1144 00f4 00000000 		.word	modem_stats
 1145 00f8 9C010000 		.word	.LC13
 1146 00fc C4010000 		.word	.LC14
 1147 0100 E8010000 		.word	.LC15
 1148 0104 08020000 		.word	.LC16
 1149              		.cfi_endproc
 1150              	.LFE75:
 1151              		.size	modem_process_tasks, .-modem_process_tasks
 1152              		.section	.rodata
 1153 022f 00       		.align	2
 1154              	.LC17:
 1155 0230 43686563 		.ascii	"Checking AT+CREG?\000"
 1155      6B696E67 
 1155      2041542B 
 1155      43524547 
 1155      3F00
 1156 0242 0000     		.align	2
 1157              	.LC18:
 1158 0244 41542B43 		.ascii	"AT+CREG?\015\000"
 1158      5245473F 
 1158      0D00
 1159 024e 0000     		.align	2
 1160              	.LC19:
 1161 0250 45787472 		.ascii	"Extracting string AT+CREG?\000"
 1161      61637469 
 1161      6E672073 
 1161      7472696E 
 1161      67204154 
 1162 026b 00       		.align	2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 29


 1163              	.LC20:
 1164 026c 75617274 		.ascii	"uart_received_string: %s\000"
 1164      5F726563 
 1164      65697665 
 1164      645F7374 
 1164      72696E67 
 1165 0285 000000   		.align	2
 1166              	.LC21:
 1167 0288 0D00     		.ascii	"\015\000"
 1168 028a 0000     		.align	2
 1169              	.LC22:
 1170 028c 3A2000   		.ascii	": \000"
 1171 028f 00       		.align	2
 1172              	.LC23:
 1173 0290 52656769 		.ascii	"Registered to network, CREG: %s\000"
 1173      73746572 
 1173      65642074 
 1173      6F206E65 
 1173      74776F72 
 1174              		.align	2
 1175              	.LC24:
 1176 02b0 446F6E65 		.ascii	"Done extracing string AT+CREG?\000"
 1176      20657874 
 1176      72616369 
 1176      6E672073 
 1176      7472696E 
 1177 02cf 00       		.align	2
 1178              	.LC25:
 1179 02d0 302C3100 		.ascii	"0,1\000"
 1180              		.section	.text.is_connected_to_cell_network,"ax",%progbits
 1181              		.align	2
 1182              		.global	is_connected_to_cell_network
 1183              		.thumb
 1184              		.thumb_func
 1185              		.type	is_connected_to_cell_network, %function
 1186              	is_connected_to_cell_network:
 1187              	.LFB76:
 348:modem.c       **** 
 349:modem.c       **** // Checks network status, writes commands to the modem, then extracts string from UART
 350:modem.c       **** uint8 is_connected_to_cell_network(){
 1188              		.loc 1 350 0
 1189              		.cfi_startproc
 1190              		@ args = 0, pretend = 0, frame = 16
 1191              		@ frame_needed = 1, uses_anonymous_args = 0
 1192 0000 80B5     		push	{r7, lr}
 1193              		.cfi_def_cfa_offset 8
 1194              		.cfi_offset 7, -8
 1195              		.cfi_offset 14, -4
 1196 0002 84B0     		sub	sp, sp, #16
 1197              		.cfi_def_cfa_offset 24
 1198 0004 00AF     		add	r7, sp, #0
 1199              		.cfi_def_cfa_register 7
 351:modem.c       ****     // AT command AT+CREG? is the Network Registration Report to check network status -- need '0,0'
 352:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Checking AT+CREG?");
 1200              		.loc 1 352 0
 1201 0006 1B49     		ldr	r1, .L74
 1202 0008 0020     		movs	r0, #0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 30


 1203 000a FFF7FEFF 		bl	printNotif
 353:modem.c       ****     // create new uint8 variable stust and set to equal the output of the function at_write_command
 354:modem.c       ****     uint8 status = at_write_command("AT+CREG?\r", "OK",DEFAULT_AT_TIMEOUT);
 1204              		.loc 1 354 0
 1205 000e 4FF4FA62 		mov	r2, #2000
 1206 0012 1949     		ldr	r1, .L74+4
 1207 0014 1948     		ldr	r0, .L74+8
 1208 0016 FFF7FEFF 		bl	at_write_command
 1209 001a 0346     		mov	r3, r0
 1210 001c FB73     		strb	r3, [r7, #15]
 355:modem.c       ****     
 356:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Extracting string AT+CREG?");
 1211              		.loc 1 356 0
 1212 001e 1849     		ldr	r1, .L74+12
 1213 0020 0020     		movs	r0, #0
 1214 0022 FFF7FEFF 		bl	printNotif
 357:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"uart_received_string: %s",uart_received_string);
 1215              		.loc 1 357 0
 1216 0026 174A     		ldr	r2, .L74+16
 1217 0028 1749     		ldr	r1, .L74+20
 1218 002a 0020     		movs	r0, #0
 1219 002c FFF7FEFF 		bl	printNotif
 358:modem.c       ****     
 359:modem.c       ****     // If the modem has a status
 360:modem.c       ****     if(status){
 1220              		.loc 1 360 0
 1221 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1222 0032 002B     		cmp	r3, #0
 1223 0034 19D0     		beq	.L71
 1224              	.LBB7:
 361:modem.c       ****         // Create a character array of length 10 called creg
 362:modem.c       ****         char creg[10];
 363:modem.c       ****         // Extract string from the UART
 364:modem.c       ****         extract_string(uart_received_string,": ","\r",creg);
 1225              		.loc 1 364 0
 1226 0036 3B1D     		adds	r3, r7, #4
 1227 0038 144A     		ldr	r2, .L74+24
 1228 003a 1549     		ldr	r1, .L74+28
 1229 003c 1148     		ldr	r0, .L74+16
 1230 003e FFF7FEFF 		bl	extract_string
 365:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Registered to network, CREG: %s",creg);
 1231              		.loc 1 365 0
 1232 0042 3B1D     		adds	r3, r7, #4
 1233 0044 1A46     		mov	r2, r3
 1234 0046 1349     		ldr	r1, .L74+32
 1235 0048 0020     		movs	r0, #0
 1236 004a FFF7FEFF 		bl	printNotif
 366:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Done extracing string AT+CREG?");
 1237              		.loc 1 366 0
 1238 004e 1249     		ldr	r1, .L74+36
 1239 0050 0020     		movs	r0, #0
 1240 0052 FFF7FEFF 		bl	printNotif
 367:modem.c       ****     
 368:modem.c       ****         // Search creg for "0,1", if "0,1" exists, it will return 1u otherwise it will return NULL
 369:modem.c       ****         // If it returns 1u and not NULL, then return 1u
 370:modem.c       ****         if(strstr(creg,"0,1")!=NULL){
 1241              		.loc 1 370 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 31


 1242 0056 3B1D     		adds	r3, r7, #4
 1243 0058 1049     		ldr	r1, .L74+40
 1244 005a 1846     		mov	r0, r3
 1245 005c FFF7FEFF 		bl	strstr
 1246 0060 0346     		mov	r3, r0
 1247 0062 002B     		cmp	r3, #0
 1248 0064 01D0     		beq	.L71
 371:modem.c       ****             //time_network_connect = getTimeStamp();
 372:modem.c       ****             return 1u;
 1249              		.loc 1 372 0
 1250 0066 0123     		movs	r3, #1
 1251 0068 00E0     		b	.L73
 1252              	.L71:
 1253              	.LBE7:
 373:modem.c       ****         }
 374:modem.c       ****     }
 375:modem.c       ****     // If the modem doesn't have a status, return 0u
 376:modem.c       ****     return 0u;
 1254              		.loc 1 376 0
 1255 006a 0023     		movs	r3, #0
 1256              	.L73:
 377:modem.c       ****         
 378:modem.c       **** }
 1257              		.loc 1 378 0
 1258 006c 1846     		mov	r0, r3
 1259 006e 1037     		adds	r7, r7, #16
 1260              		.cfi_def_cfa_offset 8
 1261 0070 BD46     		mov	sp, r7
 1262              		.cfi_def_cfa_register 13
 1263              		@ sp needed
 1264 0072 80BD     		pop	{r7, pc}
 1265              	.L75:
 1266              		.align	2
 1267              	.L74:
 1268 0074 30020000 		.word	.LC17
 1269 0078 00000000 		.word	.LC0
 1270 007c 44020000 		.word	.LC18
 1271 0080 50020000 		.word	.LC19
 1272 0084 00000000 		.word	uart_received_string
 1273 0088 6C020000 		.word	.LC20
 1274 008c 88020000 		.word	.LC21
 1275 0090 8C020000 		.word	.LC22
 1276 0094 90020000 		.word	.LC23
 1277 0098 B0020000 		.word	.LC24
 1278 009c D0020000 		.word	.LC25
 1279              		.cfi_endproc
 1280              	.LFE76:
 1281              		.size	is_connected_to_cell_network, .-is_connected_to_cell_network
 1282              		.section	.rodata
 1283              		.align	2
 1284              	.LC26:
 1285 02d4 41542353 		.ascii	"AT#SGACT=1,1\015\012\000"
 1285      47414354 
 1285      3D312C31 
 1285      0D0A00
 1286              		.section	.text.set_up_internet_connection,"ax",%progbits
 1287              		.align	2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 32


 1288              		.global	set_up_internet_connection
 1289              		.thumb
 1290              		.thumb_func
 1291              		.type	set_up_internet_connection, %function
 1292              	set_up_internet_connection:
 1293              	.LFB77:
 379:modem.c       **** 
 380:modem.c       **** // Connect the modem to the internet
 381:modem.c       **** void set_up_internet_connection(){
 1294              		.loc 1 381 0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 0
 1297              		@ frame_needed = 1, uses_anonymous_args = 0
 1298 0000 80B5     		push	{r7, lr}
 1299              		.cfi_def_cfa_offset 8
 1300              		.cfi_offset 7, -8
 1301              		.cfi_offset 14, -4
 1302 0002 00AF     		add	r7, sp, #0
 1303              		.cfi_def_cfa_register 7
 382:modem.c       ****     
 383:modem.c       ****     //port 3
 384:modem.c       ****    //<connId>,<srMode>,<dataMode>, 
 385:modem.c       ****     //at_write_command("AT#SCFGEXT=1,1,0,0,0,0\r", "OK",DEFAULT_AT_TIMEOUT);////LTE modem relevant
 386:modem.c       ****     
 387:modem.c       ****     //<connId>,<cid>,<pktSz>,<maxTo>,<connTo>,<txTo>
 388:modem.c       ****     //at_write_command("AT#SCFG=1,3,300,90,600,50\r", "OK",DEFAULT_AT_TIMEOUT); //LTE modem relevan
 389:modem.c       ****     // <cid>,<stat>
 390:modem.c       ****    
 391:modem.c       ****     // AT command SGACT is Context Activation command is used to activate the specified PDP context
 392:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",1000u);
 1304              		.loc 1 392 0
 1305 0004 4FF47A72 		mov	r2, #1000
 1306 0008 0249     		ldr	r1, .L77
 1307 000a 0348     		ldr	r0, .L77+4
 1308 000c FFF7FEFF 		bl	at_write_command
 393:modem.c       ****     
 394:modem.c       **** }
 1309              		.loc 1 394 0
 1310 0010 00BF     		nop
 1311 0012 80BD     		pop	{r7, pc}
 1312              	.L78:
 1313              		.align	2
 1314              	.L77:
 1315 0014 00000000 		.word	.LC0
 1316 0018 D4020000 		.word	.LC26
 1317              		.cfi_endproc
 1318              	.LFE77:
 1319              		.size	set_up_internet_connection, .-set_up_internet_connection
 1320              		.section	.rodata
 1321 02e3 00       		.align	2
 1322              	.LC27:
 1323 02e4 312C3100 		.ascii	"1,1\000"
 1324              		.align	2
 1325              	.LC28:
 1326 02e8 41542353 		.ascii	"AT#SGACT?\015\000"
 1326      47414354 
 1326      3F0D00
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 33


 1327              		.section	.text.is_connected_to_internet,"ax",%progbits
 1328              		.align	2
 1329              		.global	is_connected_to_internet
 1330              		.thumb
 1331              		.thumb_func
 1332              		.type	is_connected_to_internet, %function
 1333              	is_connected_to_internet:
 1334              	.LFB78:
 395:modem.c       **** 
 396:modem.c       **** // Checks if the modem is connected to the internet
 397:modem.c       **** uint8 is_connected_to_internet(){
 1335              		.loc 1 397 0
 1336              		.cfi_startproc
 1337              		@ args = 0, pretend = 0, frame = 0
 1338              		@ frame_needed = 1, uses_anonymous_args = 0
 1339 0000 80B5     		push	{r7, lr}
 1340              		.cfi_def_cfa_offset 8
 1341              		.cfi_offset 7, -8
 1342              		.cfi_offset 14, -4
 1343 0002 00AF     		add	r7, sp, #0
 1344              		.cfi_def_cfa_register 7
 398:modem.c       ****     // AT command SGACT? reports the range for the parameters <cid> and <stat>
 399:modem.c       ****     // cid: is the Packet Data Protocol (PDP) Context Identifier which specifies the particular PDP
 400:modem.c       ****     // stat: gives the context staus (0 deactivated and 1 activated)
 401:modem.c       ****     // Check for 3,1 if Verizon 
 402:modem.c       ****     if(at_write_command("AT#SGACT?\r", "1,1",DEFAULT_AT_TIMEOUT)){
 1345              		.loc 1 402 0
 1346 0004 4FF4FA62 		mov	r2, #2000
 1347 0008 0549     		ldr	r1, .L82
 1348 000a 0648     		ldr	r0, .L82+4
 1349 000c FFF7FEFF 		bl	at_write_command
 1350 0010 0346     		mov	r3, r0
 1351 0012 002B     		cmp	r3, #0
 1352 0014 01D0     		beq	.L80
 403:modem.c       ****         return 1u;
 1353              		.loc 1 403 0
 1354 0016 0123     		movs	r3, #1
 1355 0018 00E0     		b	.L81
 1356              	.L80:
 404:modem.c       ****     }
 405:modem.c       ****     return 0u;  
 1357              		.loc 1 405 0
 1358 001a 0023     		movs	r3, #0
 1359              	.L81:
 406:modem.c       **** }
 1360              		.loc 1 406 0
 1361 001c 1846     		mov	r0, r3
 1362 001e 80BD     		pop	{r7, pc}
 1363              	.L83:
 1364              		.align	2
 1365              	.L82:
 1366 0020 E4020000 		.word	.LC27
 1367 0024 E8020000 		.word	.LC28
 1368              		.cfi_endproc
 1369              	.LFE78:
 1370              		.size	is_connected_to_internet, .-is_connected_to_internet
 1371              		.section	.rodata
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 34


 1372 02f3 00       		.align	2
 1373              	.LC29:
 1374 02f4 41542B43 		.ascii	"AT+CSQ\015\000"
 1374      53510D00 
 1375              		.align	2
 1376              	.LC30:
 1377 02fc 4E657477 		.ascii	"Network STts: %s\000"
 1377      6F726B20 
 1377      53547473 
 1377      3A202573 
 1377      00
 1378 030d 000000   		.align	2
 1379              	.LC31:
 1380 0310 2C00     		.ascii	",\000"
 1381              		.section	.text.get_cell_network_stats,"ax",%progbits
 1382              		.align	2
 1383              		.global	get_cell_network_stats
 1384              		.thumb
 1385              		.thumb_func
 1386              		.type	get_cell_network_stats, %function
 1387              	get_cell_network_stats:
 1388              	.LFB79:
 407:modem.c       **** 
 408:modem.c       **** // Get cellular network stats 
 409:modem.c       **** void get_cell_network_stats(){
 1389              		.loc 1 409 0
 1390              		.cfi_startproc
 1391              		@ args = 0, pretend = 0, frame = 24
 1392              		@ frame_needed = 1, uses_anonymous_args = 0
 1393 0000 80B5     		push	{r7, lr}
 1394              		.cfi_def_cfa_offset 8
 1395              		.cfi_offset 7, -8
 1396              		.cfi_offset 14, -4
 1397 0002 86B0     		sub	sp, sp, #24
 1398              		.cfi_def_cfa_offset 32
 1399 0004 00AF     		add	r7, sp, #0
 1400              		.cfi_def_cfa_register 7
 1401              	.LBB8:
 410:modem.c       ****     // Gets RSSI and FER values
 411:modem.c       ****     // RSSI (Received Signal Strength Indicator) is a measurement of how well your device can hear 
 412:modem.c       ****     // RSRQ (Reference Signal Received Quality) (or SQ for short) gives the signal quality. 
 413:modem.c       ****     for(uint8 attempts =0; attempts <10; attempts++){
 1402              		.loc 1 413 0
 1403 0006 0023     		movs	r3, #0
 1404 0008 FB75     		strb	r3, [r7, #23]
 1405 000a 3BE0     		b	.L85
 1406              	.L90:
 1407              	.LBB9:
 414:modem.c       ****         // AT command CSQ checks Signal Quality
 415:modem.c       ****         at_write_command("AT+CSQ\r", "OK",DEFAULT_AT_TIMEOUT);
 1408              		.loc 1 415 0
 1409 000c 4FF4FA62 		mov	r2, #2000
 1410 0010 2049     		ldr	r1, .L92
 1411 0012 2148     		ldr	r0, .L92+4
 1412 0014 FFF7FEFF 		bl	at_write_command
 416:modem.c       ****         
 417:modem.c       ****         char csq[10]; // Create a character array of length 10 called csq 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 35


 418:modem.c       ****         // Extract string from the UART
 419:modem.c       ****         extract_string(uart_received_string,": ","\r",csq);
 1413              		.loc 1 419 0
 1414 0018 3B1D     		adds	r3, r7, #4
 1415 001a 204A     		ldr	r2, .L92+8
 1416 001c 2049     		ldr	r1, .L92+12
 1417 001e 2148     		ldr	r0, .L92+16
 1418 0020 FFF7FEFF 		bl	extract_string
 420:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Network STts: %s",csq);
 1419              		.loc 1 420 0
 1420 0024 3B1D     		adds	r3, r7, #4
 1421 0026 1A46     		mov	r2, r3
 1422 0028 1F49     		ldr	r1, .L92+20
 1423 002a 0020     		movs	r0, #0
 1424 002c FFF7FEFF 		bl	printNotif
 421:modem.c       ****         
 422:modem.c       ****         char *token; // Create a character variable pointer
 423:modem.c       ****         // strtok(): breaks "csq" into smaller string when sees ","
 424:modem.c       ****         token = strtok(csq,",");
 1425              		.loc 1 424 0
 1426 0030 3B1D     		adds	r3, r7, #4
 1427 0032 1E49     		ldr	r1, .L92+24
 1428 0034 1846     		mov	r0, r3
 1429 0036 FFF7FEFF 		bl	strtok
 1430 003a 3861     		str	r0, [r7, #16]
 425:modem.c       ****         // If token is not NULL then set modem_stats.rssi equal to the integer "token"
 426:modem.c       ****         // int atoi(const char *str) converts the string argument str to an integer (type int).
 427:modem.c       ****         if(token != NULL){
 1431              		.loc 1 427 0
 1432 003c 3B69     		ldr	r3, [r7, #16]
 1433 003e 002B     		cmp	r3, #0
 1434 0040 06D0     		beq	.L86
 428:modem.c       ****             modem_stats.rssi = atoi(token);
 1435              		.loc 1 428 0
 1436 0042 3869     		ldr	r0, [r7, #16]
 1437 0044 FFF7FEFF 		bl	atoi
 1438 0048 0346     		mov	r3, r0
 1439 004a DAB2     		uxtb	r2, r3
 1440 004c 184B     		ldr	r3, .L92+28
 1441 004e 1A70     		strb	r2, [r3]
 1442              	.L86:
 429:modem.c       ****         }
 430:modem.c       ****         token = strtok(NULL,",");
 1443              		.loc 1 430 0
 1444 0050 1649     		ldr	r1, .L92+24
 1445 0052 0020     		movs	r0, #0
 1446 0054 FFF7FEFF 		bl	strtok
 1447 0058 3861     		str	r0, [r7, #16]
 431:modem.c       ****         if(token != NULL){
 1448              		.loc 1 431 0
 1449 005a 3B69     		ldr	r3, [r7, #16]
 1450 005c 002B     		cmp	r3, #0
 1451 005e 06D0     		beq	.L87
 432:modem.c       ****             modem_stats.rsrq = atoi(token);
 1452              		.loc 1 432 0
 1453 0060 3869     		ldr	r0, [r7, #16]
 1454 0062 FFF7FEFF 		bl	atoi
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 36


 1455 0066 0346     		mov	r3, r0
 1456 0068 DAB2     		uxtb	r2, r3
 1457 006a 114B     		ldr	r3, .L92+28
 1458 006c 5A70     		strb	r2, [r3, #1]
 1459              	.L87:
 433:modem.c       ****         }
 434:modem.c       ****         // If rssi is not equal to 99 OR rssi is not equal to 0, then break.
 435:modem.c       ****         if(modem_stats.rssi != 99 || modem_stats.rssi !=0){
 1460              		.loc 1 435 0
 1461 006e 104B     		ldr	r3, .L92+28
 1462 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1463 0072 632B     		cmp	r3, #99
 1464 0074 09D1     		bne	.L91
 1465              		.loc 1 435 0 is_stmt 0 discriminator 1
 1466 0076 0E4B     		ldr	r3, .L92+28
 1467 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1468 007a 002B     		cmp	r3, #0
 1469 007c 05D1     		bne	.L91
 1470              	.LBE9:
 413:modem.c       ****         // AT command CSQ checks Signal Quality
 1471              		.loc 1 413 0 is_stmt 1
 1472 007e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1473 0080 0133     		adds	r3, r3, #1
 1474 0082 FB75     		strb	r3, [r7, #23]
 1475              	.L85:
 413:modem.c       ****         // AT command CSQ checks Signal Quality
 1476              		.loc 1 413 0 is_stmt 0 discriminator 1
 1477 0084 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1478 0086 092B     		cmp	r3, #9
 1479 0088 C0D9     		bls	.L90
 1480              	.L91:
 1481              	.LBE8:
 436:modem.c       ****             break;
 437:modem.c       ****         }
 438:modem.c       ****     }
 439:modem.c       **** }
 1482              		.loc 1 439 0 is_stmt 1
 1483 008a 00BF     		nop
 1484 008c 1837     		adds	r7, r7, #24
 1485              		.cfi_def_cfa_offset 8
 1486 008e BD46     		mov	sp, r7
 1487              		.cfi_def_cfa_register 13
 1488              		@ sp needed
 1489 0090 80BD     		pop	{r7, pc}
 1490              	.L93:
 1491 0092 00BF     		.align	2
 1492              	.L92:
 1493 0094 00000000 		.word	.LC0
 1494 0098 F4020000 		.word	.LC29
 1495 009c 88020000 		.word	.LC21
 1496 00a0 8C020000 		.word	.LC22
 1497 00a4 00000000 		.word	uart_received_string
 1498 00a8 FC020000 		.word	.LC30
 1499 00ac 10030000 		.word	.LC31
 1500 00b0 00000000 		.word	modem_stats
 1501              		.cfi_endproc
 1502              	.LFE79:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 37


 1503              		.size	get_cell_network_stats, .-get_cell_network_stats
 1504              		.section	.rodata
 1505 0312 0000     		.align	2
 1506              	.LC32:
 1507 0314 41542343 		.ascii	"AT#CGMM\015\000"
 1507      474D4D0D 
 1507      00
 1508 031d 000000   		.align	2
 1509              	.LC33:
 1510 0320 4D6F6465 		.ascii	"Modem Model: %s\000"
 1510      6D204D6F 
 1510      64656C3A 
 1510      20257300 
 1511              		.align	2
 1512              	.LC34:
 1513 0330 41542343 		.ascii	"AT#CCID\015\000"
 1513      4349440D 
 1513      00
 1514 0339 000000   		.align	2
 1515              	.LC35:
 1516 033c 53494D20 		.ascii	"SIM ID: %s\000"
 1516      49443A20 
 1516      257300
 1517 0347 00       		.align	2
 1518              	.LC36:
 1519 0348 41542B43 		.ascii	"AT+CGSN\015\000"
 1519      47534E0D 
 1519      00
 1520 0351 000000   		.align	2
 1521              	.LC37:
 1522 0354 494D4549 		.ascii	"IMEI: %s\000"
 1522      3A202573 
 1522      00
 1523 035d 000000   		.align	2
 1524              	.LC38:
 1525 0360 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\015\012"
 1525      4744434F 
 1525      4E543D31 
 1525      2C224950 
 1525      222C2277 
 1526 0389 00       		.ascii	"\000"
 1527 038a 0000     		.align	2
 1528              	.LC39:
 1529 038c 41542B43 		.ascii	"AT+CFUN?\015\000"
 1529      46554E3F 
 1529      0D00
 1530 0396 0000     		.align	2
 1531              	.LC40:
 1532 0398 4346554E 		.ascii	"CFUN: %s\000"
 1532      3A202573 
 1532      00
 1533 03a1 000000   		.align	2
 1534              	.LC41:
 1535 03a4 41542B43 		.ascii	"AT+CFUN=1\015\000"
 1535      46554E3D 
 1535      310D00
 1536              		.section	.text.modem_configure_settings,"ax",%progbits
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 38


 1537              		.align	2
 1538              		.global	modem_configure_settings
 1539              		.thumb
 1540              		.thumb_func
 1541              		.type	modem_configure_settings, %function
 1542              	modem_configure_settings:
 1543              	.LFB80:
 440:modem.c       ****     
 441:modem.c       ****     
 442:modem.c       **** // Configure the modem settings
 443:modem.c       **** void modem_configure_settings(){
 1544              		.loc 1 443 0
 1545              		.cfi_startproc
 1546              		@ args = 0, pretend = 0, frame = 16
 1547              		@ frame_needed = 1, uses_anonymous_args = 0
 1548 0000 80B5     		push	{r7, lr}
 1549              		.cfi_def_cfa_offset 8
 1550              		.cfi_offset 7, -8
 1551              		.cfi_offset 14, -4
 1552 0002 84B0     		sub	sp, sp, #16
 1553              		.cfi_def_cfa_offset 24
 1554 0004 00AF     		add	r7, sp, #0
 1555              		.cfi_def_cfa_register 7
 444:modem.c       ****     
 445:modem.c       ****     // Save/print modem model ID number
 446:modem.c       ****     if(modem_info.model_id[0] == '\0'){
 1556              		.loc 1 446 0
 1557 0006 3B4B     		ldr	r3, .L101
 1558 0008 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1559 000a 002B     		cmp	r3, #0
 1560 000c 13D1     		bne	.L95
 447:modem.c       ****         // AT command #CGMM returns the "device model identification" code with the command echo.
 448:modem.c       ****         if(at_write_command("AT#CGMM\r","OK",DEFAULT_AT_TIMEOUT)){
 1561              		.loc 1 448 0
 1562 000e 4FF4FA62 		mov	r2, #2000
 1563 0012 3949     		ldr	r1, .L101+4
 1564 0014 3948     		ldr	r0, .L101+8
 1565 0016 FFF7FEFF 		bl	at_write_command
 1566 001a 0346     		mov	r3, r0
 1567 001c 002B     		cmp	r3, #0
 1568 001e 0AD0     		beq	.L95
 449:modem.c       ****             // Extract modem model ID number string from the UART
 450:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.model_id);
 1569              		.loc 1 450 0
 1570 0020 374B     		ldr	r3, .L101+12
 1571 0022 384A     		ldr	r2, .L101+16
 1572 0024 3849     		ldr	r1, .L101+20
 1573 0026 3948     		ldr	r0, .L101+24
 1574 0028 FFF7FEFF 		bl	extract_string
 451:modem.c       ****             // Print modem model ID number
 452:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem Model: %s",modem_info.model_id);
 1575              		.loc 1 452 0
 1576 002c 344A     		ldr	r2, .L101+12
 1577 002e 3849     		ldr	r1, .L101+28
 1578 0030 0020     		movs	r0, #0
 1579 0032 FFF7FEFF 		bl	printNotif
 1580              	.L95:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 39


 453:modem.c       ****         }
 454:modem.c       ****     }
 455:modem.c       ****     
 456:modem.c       ****    // Save/print SIM-card ID
 457:modem.c       ****    if(modem_info.sim_id[0] == '\0'){
 1581              		.loc 1 457 0
 1582 0036 2F4B     		ldr	r3, .L101
 1583 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1584 003a 002B     		cmp	r3, #0
 1585 003c 13D1     		bne	.L96
 458:modem.c       ****         // AT command #CCID is an execution command that reads the SIM number 
 459:modem.c       ****         if(at_write_command("AT#CCID\r", "OK", DEFAULT_AT_TIMEOUT)){
 1586              		.loc 1 459 0
 1587 003e 4FF4FA62 		mov	r2, #2000
 1588 0042 2D49     		ldr	r1, .L101+4
 1589 0044 3348     		ldr	r0, .L101+32
 1590 0046 FFF7FEFF 		bl	at_write_command
 1591 004a 0346     		mov	r3, r0
 1592 004c 002B     		cmp	r3, #0
 1593 004e 0AD0     		beq	.L96
 460:modem.c       ****             // Extract SIM-card ID string from the UART
 461:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.sim_id);
 1594              		.loc 1 461 0
 1595 0050 284B     		ldr	r3, .L101
 1596 0052 2C4A     		ldr	r2, .L101+16
 1597 0054 2C49     		ldr	r1, .L101+20
 1598 0056 2D48     		ldr	r0, .L101+24
 1599 0058 FFF7FEFF 		bl	extract_string
 462:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"SIM ID: %s",modem_info.sim_id);
 1600              		.loc 1 462 0
 1601 005c 254A     		ldr	r2, .L101
 1602 005e 2E49     		ldr	r1, .L101+36
 1603 0060 0020     		movs	r0, #0
 1604 0062 FFF7FEFF 		bl	printNotif
 1605              	.L96:
 463:modem.c       ****         }
 464:modem.c       ****    }
 465:modem.c       **** 
 466:modem.c       ****     // Save/print modem IMEI
 467:modem.c       ****     if(modem_info.imei[0] == '\0'){
 1606              		.loc 1 467 0
 1607 0066 234B     		ldr	r3, .L101
 1608 0068 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1609 006c 002B     		cmp	r3, #0
 1610 006e 13D1     		bne	.L97
 468:modem.c       ****         // AT command #CGSN returns the product serial number, identified as the IMEI of the mobile
 469:modem.c       ****         if(at_write_command("AT+CGSN\r","OK",DEFAULT_AT_TIMEOUT)){
 1611              		.loc 1 469 0
 1612 0070 4FF4FA62 		mov	r2, #2000
 1613 0074 2049     		ldr	r1, .L101+4
 1614 0076 2948     		ldr	r0, .L101+40
 1615 0078 FFF7FEFF 		bl	at_write_command
 1616 007c 0346     		mov	r3, r0
 1617 007e 002B     		cmp	r3, #0
 1618 0080 0AD0     		beq	.L97
 470:modem.c       ****             // Extract modem IMEI number string from the UART
 471:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.imei);
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 40


 1619              		.loc 1 471 0
 1620 0082 274B     		ldr	r3, .L101+44
 1621 0084 1F4A     		ldr	r2, .L101+16
 1622 0086 2049     		ldr	r1, .L101+20
 1623 0088 2048     		ldr	r0, .L101+24
 1624 008a FFF7FEFF 		bl	extract_string
 472:modem.c       ****             // Print modem IMEI number
 473:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"IMEI: %s",modem_info.imei);
 1625              		.loc 1 473 0
 1626 008e 244A     		ldr	r2, .L101+44
 1627 0090 2449     		ldr	r1, .L101+48
 1628 0092 0020     		movs	r0, #0
 1629 0094 FFF7FEFF 		bl	printNotif
 1630              	.L97:
 474:modem.c       ****         } 
 475:modem.c       ****     }
 476:modem.c       ****     
 477:modem.c       ****     // Configure protocol and cellular end point
 478:modem.c       ****     // AT command +CGDCONT defines the PDP context parameter values for a PDP context identified by
 479:modem.c       ****     at_write_command("AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\r\n", "OK", DEFAULT_AT_TIMEOUT);
 1631              		.loc 1 479 0
 1632 0098 4FF4FA62 		mov	r2, #2000
 1633 009c 1649     		ldr	r1, .L101+4
 1634 009e 2248     		ldr	r0, .L101+52
 1635 00a0 FFF7FEFF 		bl	at_write_command
 480:modem.c       ****     
 481:modem.c       ****     // Check if modem power savings is enabled. If so, disable it so we can send data.
 482:modem.c       ****     // AT command +CFUN? is a read command that reports the current setting of <fun> which is the p
 483:modem.c       ****     if(at_write_command("AT+CFUN?\r", "OK",DEFAULT_AT_TIMEOUT)){
 1636              		.loc 1 483 0
 1637 00a4 4FF4FA62 		mov	r2, #2000
 1638 00a8 1349     		ldr	r1, .L101+4
 1639 00aa 2048     		ldr	r0, .L101+56
 1640 00ac FFF7FEFF 		bl	at_write_command
 1641 00b0 0346     		mov	r3, r0
 1642 00b2 002B     		cmp	r3, #0
 1643 00b4 19D0     		beq	.L100
 1644              	.LBB10:
 484:modem.c       ****         char CFUN[10]; // Create a character array of length 10 called CFUN 
 485:modem.c       ****         // Extract UART string recieved from the modem
 486:modem.c       ****         extract_string(uart_received_string,": ","\r",CFUN);
 1645              		.loc 1 486 0
 1646 00b6 3B1D     		adds	r3, r7, #4
 1647 00b8 124A     		ldr	r2, .L101+16
 1648 00ba 1349     		ldr	r1, .L101+20
 1649 00bc 1348     		ldr	r0, .L101+24
 1650 00be FFF7FEFF 		bl	extract_string
 487:modem.c       ****         // Print UART string recieved from the modem
 488:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"CFUN: %s",CFUN);
 1651              		.loc 1 488 0
 1652 00c2 3B1D     		adds	r3, r7, #4
 1653 00c4 1A46     		mov	r2, r3
 1654 00c6 1A49     		ldr	r1, .L101+60
 1655 00c8 0020     		movs	r0, #0
 1656 00ca FFF7FEFF 		bl	printNotif
 489:modem.c       ****         // Search CRUN for "1", if "1" exists, it will return 1u otherwise it will return NULL
 490:modem.c       ****         // If it returns NULL, then write another command to the modem
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 41


 491:modem.c       ****         if(strstr(CFUN,"1") == NULL){
 1657              		.loc 1 491 0
 1658 00ce 3B1D     		adds	r3, r7, #4
 1659 00d0 3121     		movs	r1, #49
 1660 00d2 1846     		mov	r0, r3
 1661 00d4 FFF7FEFF 		bl	strchr
 1662 00d8 0346     		mov	r3, r0
 1663 00da 002B     		cmp	r3, #0
 1664 00dc 05D1     		bne	.L100
 492:modem.c       ****             // AT command +CFUN= is a set command which selects the level of functionality in the m
 493:modem.c       ****             // = 1 means mobile full functionality with power saving disabled 
 494:modem.c       ****             at_write_command("AT+CFUN=1\r", "OK",DEFAULT_AT_TIMEOUT);
 1665              		.loc 1 494 0
 1666 00de 4FF4FA62 		mov	r2, #2000
 1667 00e2 0549     		ldr	r1, .L101+4
 1668 00e4 1348     		ldr	r0, .L101+64
 1669 00e6 FFF7FEFF 		bl	at_write_command
 1670              	.L100:
 1671              	.LBE10:
 495:modem.c       ****         }
 496:modem.c       ****     }
 497:modem.c       **** 
 498:modem.c       ****     
 499:modem.c       **** }
 1672              		.loc 1 499 0
 1673 00ea 00BF     		nop
 1674 00ec 1037     		adds	r7, r7, #16
 1675              		.cfi_def_cfa_offset 8
 1676 00ee BD46     		mov	sp, r7
 1677              		.cfi_def_cfa_register 13
 1678              		@ sp needed
 1679 00f0 80BD     		pop	{r7, pc}
 1680              	.L102:
 1681 00f2 00BF     		.align	2
 1682              	.L101:
 1683 00f4 00000000 		.word	modem_info
 1684 00f8 00000000 		.word	.LC0
 1685 00fc 14030000 		.word	.LC32
 1686 0100 14000000 		.word	modem_info+20
 1687 0104 88020000 		.word	.LC21
 1688 0108 8C020000 		.word	.LC22
 1689 010c 00000000 		.word	uart_received_string
 1690 0110 20030000 		.word	.LC33
 1691 0114 30030000 		.word	.LC34
 1692 0118 3C030000 		.word	.LC35
 1693 011c 48030000 		.word	.LC36
 1694 0120 28000000 		.word	modem_info+40
 1695 0124 54030000 		.word	.LC37
 1696 0128 60030000 		.word	.LC38
 1697 012c 8C030000 		.word	.LC39
 1698 0130 98030000 		.word	.LC40
 1699 0134 A4030000 		.word	.LC41
 1700              		.cfi_endproc
 1701              	.LFE80:
 1702              		.size	modem_configure_settings, .-modem_configure_settings
 1703              		.section	.rodata
 1704 03af 00       		.align	2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 42


 1705              	.LC42:
 1706 03b0 4D6F6465 		.ascii	"Modem not ready to get time. Not conncted to networ"
 1706      6D206E6F 
 1706      74207265 
 1706      61647920 
 1706      746F2067 
 1707 03e3 6B2E00   		.ascii	"k.\000"
 1708 03e6 0000     		.align	2
 1709              	.LC43:
 1710 03e8 41542B43 		.ascii	"AT+CCLK?\015\000"
 1710      434C4B3F 
 1710      0D00
 1711 03f2 0000     		.align	2
 1712              	.LC44:
 1713 03f4 220D00   		.ascii	"\"\015\000"
 1714 03f7 00       		.align	2
 1715              	.LC45:
 1716 03f8 3A202200 		.ascii	": \"\000"
 1717              		.align	2
 1718              	.LC46:
 1719 03fc 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d-%d\000"
 1719      642F2564 
 1719      2C25643A 
 1719      25643A25 
 1719      642D2564 
 1720 0411 000000   		.align	2
 1721              	.LC47:
 1722 0414 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d+%d\000"
 1722      642F2564 
 1722      2C25643A 
 1722      25643A25 
 1722      642B2564 
 1723 0429 000000   		.align	2
 1724              	.LC48:
 1725 042c 436F756C 		.ascii	"Could not parse modem time: %s.\000"
 1725      64206E6F 
 1725      74207061 
 1725      72736520 
 1725      6D6F6465 
 1726              		.section	.text.modem_get_network_time,"ax",%progbits
 1727              		.align	2
 1728              		.global	modem_get_network_time
 1729              		.thumb
 1730              		.thumb_func
 1731              		.type	modem_get_network_time, %function
 1732              	modem_get_network_time:
 1733              	.LFB81:
 500:modem.c       **** 
 501:modem.c       **** //returns 0 if modem can't get time
 502:modem.c       **** long modem_get_network_time(){
 1734              		.loc 1 502 0
 1735              		.cfi_startproc
 1736              		@ args = 0, pretend = 0, frame = 104
 1737              		@ frame_needed = 1, uses_anonymous_args = 0
 1738 0000 80B5     		push	{r7, lr}
 1739              		.cfi_def_cfa_offset 8
 1740              		.cfi_offset 7, -8
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 43


 1741              		.cfi_offset 14, -4
 1742 0002 A0B0     		sub	sp, sp, #128
 1743              		.cfi_def_cfa_offset 136
 1744 0004 06AF     		add	r7, sp, #24
 1745              		.cfi_def_cfa 7, 112
 503:modem.c       ****     
 504:modem.c       ****     //modem reposen format (careful to include the quotes "")
 505:modem.c       ****     //+CCLK: "20/05/01,10:48:33-16" the "-16" is the number of quarter hourts (15 mins) from GMT ti
 506:modem.c       ****     //ex: 14:48 GMT
 507:modem.c       **** 
 508:modem.c       ****     // If modem_state is not "ready", then print error and return 0
 509:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 1746              		.loc 1 509 0
 1747 0006 444B     		ldr	r3, .L110
 1748 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1749 000a 042B     		cmp	r3, #4
 1750 000c 05D0     		beq	.L104
 510:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Modem not ready to get time. Not conncted to network.");
 1751              		.loc 1 510 0
 1752 000e 4349     		ldr	r1, .L110+4
 1753 0010 0220     		movs	r0, #2
 1754 0012 FFF7FEFF 		bl	printNotif
 511:modem.c       ****         return 0;   
 1755              		.loc 1 511 0
 1756 0016 0023     		movs	r3, #0
 1757 0018 7AE0     		b	.L105
 1758              	.L104:
 512:modem.c       ****     }
 513:modem.c       ****     long epoch_time = 0; // Create variable of long time and set equal to 0
 1759              		.loc 1 513 0
 1760 001a 0023     		movs	r3, #0
 1761 001c 7B66     		str	r3, [r7, #100]
 514:modem.c       ****     
 515:modem.c       ****     // AT command +CCLK? is a read command that returns the current setting of the real-time clock 
 516:modem.c       ****     if(at_write_command("AT+CCLK?\r","OK",DEFAULT_AT_TIMEOUT)){
 1762              		.loc 1 516 0
 1763 001e 4FF4FA62 		mov	r2, #2000
 1764 0022 3F49     		ldr	r1, .L110+8
 1765 0024 3F48     		ldr	r0, .L110+12
 1766 0026 FFF7FEFF 		bl	at_write_command
 1767 002a 0346     		mov	r3, r0
 1768 002c 002B     		cmp	r3, #0
 1769 002e 6ED0     		beq	.L106
 1770              	.LBB11:
 517:modem.c       ****         char network_time[30]; // Create a character array of length 30 called network_time 
 518:modem.c       ****         // Extract UART string recieved from the modem and save to variable network_time
 519:modem.c       ****         extract_string(uart_received_string,": \"","\"\r",network_time);
 1771              		.loc 1 519 0
 1772 0030 07F14403 		add	r3, r7, #68
 1773 0034 3C4A     		ldr	r2, .L110+16
 1774 0036 3D49     		ldr	r1, .L110+20
 1775 0038 3D48     		ldr	r0, .L110+24
 1776 003a FFF7FEFF 		bl	extract_string
 520:modem.c       ****         
 521:modem.c       ****         ///////////////////  
 522:modem.c       ****         struct tm t; // Creates variable t of struct tm
 523:modem.c       ****         
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 44


 524:modem.c       ****         // Creates a bunch of variables of type int and sets them to 0
 525:modem.c       ****         int year, month, day, hour, minute, second, gmt_offset = 0;
 1777              		.loc 1 525 0
 1778 003e 0023     		movs	r3, #0
 1779 0040 BB62     		str	r3, [r7, #40]
 526:modem.c       ****       
 527:modem.c       ****         // Determines the GMT offset 
 528:modem.c       ****         // int sscanf(const char *str, const char *format, ...) reads formatted input from a string
 529:modem.c       ****         // On success, the function returns the number of variables filled. In the case of an input
 530:modem.c       ****         if(sscanf(network_time,"%d/%d/%d,%d:%d:%d-%d",&year,&month,&day,&hour,&minute,&second,&gmt_
 1780              		.loc 1 530 0
 1781 0042 07F13C01 		add	r1, r7, #60
 1782 0046 07F14002 		add	r2, r7, #64
 1783 004a 07F14400 		add	r0, r7, #68
 1784 004e 07F12803 		add	r3, r7, #40
 1785 0052 0493     		str	r3, [sp, #16]
 1786 0054 07F12C03 		add	r3, r7, #44
 1787 0058 0393     		str	r3, [sp, #12]
 1788 005a 07F13003 		add	r3, r7, #48
 1789 005e 0293     		str	r3, [sp, #8]
 1790 0060 07F13403 		add	r3, r7, #52
 1791 0064 0193     		str	r3, [sp, #4]
 1792 0066 07F13803 		add	r3, r7, #56
 1793 006a 0093     		str	r3, [sp]
 1794 006c 0B46     		mov	r3, r1
 1795 006e 3149     		ldr	r1, .L110+28
 1796 0070 FFF7FEFF 		bl	sscanf
 1797 0074 0346     		mov	r3, r0
 1798 0076 072B     		cmp	r3, #7
 1799 0078 06D1     		bne	.L107
 531:modem.c       ****             gmt_offset = gmt_offset*(900);
 1800              		.loc 1 531 0
 1801 007a BB6A     		ldr	r3, [r7, #40]
 1802 007c 4FF46172 		mov	r2, #900
 1803 0080 02FB03F3 		mul	r3, r2, r3
 1804 0084 BB62     		str	r3, [r7, #40]
 1805 0086 2AE0     		b	.L108
 1806              	.L107:
 532:modem.c       ****         }else if(sscanf(network_time,"%d/%d/%d,%d:%d:%d+%d",&year,&month,&day,&hour,&minute,&second
 1807              		.loc 1 532 0
 1808 0088 07F13C01 		add	r1, r7, #60
 1809 008c 07F14002 		add	r2, r7, #64
 1810 0090 07F14400 		add	r0, r7, #68
 1811 0094 07F12803 		add	r3, r7, #40
 1812 0098 0493     		str	r3, [sp, #16]
 1813 009a 07F12C03 		add	r3, r7, #44
 1814 009e 0393     		str	r3, [sp, #12]
 1815 00a0 07F13003 		add	r3, r7, #48
 1816 00a4 0293     		str	r3, [sp, #8]
 1817 00a6 07F13403 		add	r3, r7, #52
 1818 00aa 0193     		str	r3, [sp, #4]
 1819 00ac 07F13803 		add	r3, r7, #56
 1820 00b0 0093     		str	r3, [sp]
 1821 00b2 0B46     		mov	r3, r1
 1822 00b4 2049     		ldr	r1, .L110+32
 1823 00b6 FFF7FEFF 		bl	sscanf
 1824 00ba 0346     		mov	r3, r0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 45


 1825 00bc 072B     		cmp	r3, #7
 1826 00be 05D1     		bne	.L109
 533:modem.c       ****             gmt_offset = gmt_offset*(-900);
 1827              		.loc 1 533 0
 1828 00c0 BB6A     		ldr	r3, [r7, #40]
 1829 00c2 1E4A     		ldr	r2, .L110+36
 1830 00c4 02FB03F3 		mul	r3, r2, r3
 1831 00c8 BB62     		str	r3, [r7, #40]
 1832 00ca 08E0     		b	.L108
 1833              	.L109:
 534:modem.c       ****         }else{
 535:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Could not parse modem time: %s.",network_time);
 1834              		.loc 1 535 0
 1835 00cc 07F14403 		add	r3, r7, #68
 1836 00d0 1A46     		mov	r2, r3
 1837 00d2 1B49     		ldr	r1, .L110+40
 1838 00d4 0220     		movs	r0, #2
 1839 00d6 FFF7FEFF 		bl	printNotif
 536:modem.c       ****             return 0;  // Return 0 if cannot get time 
 1840              		.loc 1 536 0
 1841 00da 0023     		movs	r3, #0
 1842 00dc 18E0     		b	.L105
 1843              	.L108:
 537:modem.c       ****         }
 538:modem.c       ****         
 539:modem.c       ****         // Sets each variable to the correct time 
 540:modem.c       ****         t.tm_sec = second;
 1844              		.loc 1 540 0
 1845 00de FB6A     		ldr	r3, [r7, #44]
 1846 00e0 7B60     		str	r3, [r7, #4]
 541:modem.c       ****         t.tm_min = minute;
 1847              		.loc 1 541 0
 1848 00e2 3B6B     		ldr	r3, [r7, #48]
 1849 00e4 BB60     		str	r3, [r7, #8]
 542:modem.c       ****         t.tm_hour = hour;
 1850              		.loc 1 542 0
 1851 00e6 7B6B     		ldr	r3, [r7, #52]
 1852 00e8 FB60     		str	r3, [r7, #12]
 543:modem.c       ****         t.tm_year = year + 100;    // Year since 1900
 1853              		.loc 1 543 0
 1854 00ea 3B6C     		ldr	r3, [r7, #64]
 1855 00ec 6433     		adds	r3, r3, #100
 1856 00ee BB61     		str	r3, [r7, #24]
 544:modem.c       ****         t.tm_mon = month-1;        // Month, where 0 = jan
 1857              		.loc 1 544 0
 1858 00f0 FB6B     		ldr	r3, [r7, #60]
 1859 00f2 013B     		subs	r3, r3, #1
 1860 00f4 7B61     		str	r3, [r7, #20]
 545:modem.c       ****         t.tm_mday = day;           // Day of the month
 1861              		.loc 1 545 0
 1862 00f6 BB6B     		ldr	r3, [r7, #56]
 1863 00f8 3B61     		str	r3, [r7, #16]
 546:modem.c       ****         t.tm_isdst = 0;            // Is Daylight Savings on? 1 = yes, 0 = no, -1 = unknown
 1864              		.loc 1 546 0
 1865 00fa 0023     		movs	r3, #0
 1866 00fc 7B62     		str	r3, [r7, #36]
 547:modem.c       ****     
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 46


 548:modem.c       ****         // Set variable epoch-time to be equal to the local time plus the GMT offset
 549:modem.c       ****         // the mktime function converts a broken-down local time (pointed to by timeptr) and return
 550:modem.c       ****         epoch_time = mktime(&t) + gmt_offset;
 1867              		.loc 1 550 0
 1868 00fe 3B1D     		adds	r3, r7, #4
 1869 0100 1846     		mov	r0, r3
 1870 0102 FFF7FEFF 		bl	mktime
 1871 0106 0246     		mov	r2, r0
 1872 0108 BB6A     		ldr	r3, [r7, #40]
 1873 010a 1344     		add	r3, r3, r2
 1874 010c 7B66     		str	r3, [r7, #100]
 1875              	.L106:
 1876              	.LBE11:
 551:modem.c       ****     }
 552:modem.c       ****     
 553:modem.c       ****     return epoch_time;
 1877              		.loc 1 553 0
 1878 010e 7B6E     		ldr	r3, [r7, #100]
 1879              	.L105:
 554:modem.c       **** }
 1880              		.loc 1 554 0
 1881 0110 1846     		mov	r0, r3
 1882 0112 6837     		adds	r7, r7, #104
 1883              		.cfi_def_cfa_offset 8
 1884 0114 BD46     		mov	sp, r7
 1885              		.cfi_def_cfa_register 13
 1886              		@ sp needed
 1887 0116 80BD     		pop	{r7, pc}
 1888              	.L111:
 1889              		.align	2
 1890              	.L110:
 1891 0118 00000000 		.word	modem_state
 1892 011c B0030000 		.word	.LC42
 1893 0120 00000000 		.word	.LC0
 1894 0124 E8030000 		.word	.LC43
 1895 0128 F4030000 		.word	.LC44
 1896 012c F8030000 		.word	.LC45
 1897 0130 00000000 		.word	uart_received_string
 1898 0134 FC030000 		.word	.LC46
 1899 0138 14040000 		.word	.LC47
 1900 013c 7CFCFFFF 		.word	-900
 1901 0140 2C040000 		.word	.LC48
 1902              		.cfi_endproc
 1903              	.LFE81:
 1904              		.size	modem_get_network_time, .-modem_get_network_time
 1905              		.section	.text.modem_get_state,"ax",%progbits
 1906              		.align	2
 1907              		.global	modem_get_state
 1908              		.thumb
 1909              		.thumb_func
 1910              		.type	modem_get_state, %function
 1911              	modem_get_state:
 1912              	.LFB82:
 555:modem.c       **** 
 556:modem.c       **** // Get the modem state
 557:modem.c       **** uint8 modem_get_state(){
 1913              		.loc 1 557 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 47


 1914              		.cfi_startproc
 1915              		@ args = 0, pretend = 0, frame = 0
 1916              		@ frame_needed = 1, uses_anonymous_args = 0
 1917              		@ link register save eliminated.
 1918 0000 80B4     		push	{r7}
 1919              		.cfi_def_cfa_offset 4
 1920              		.cfi_offset 7, -4
 1921 0002 00AF     		add	r7, sp, #0
 1922              		.cfi_def_cfa_register 7
 558:modem.c       ****     return modem_state;
 1923              		.loc 1 558 0
 1924 0004 024B     		ldr	r3, .L114
 1925 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 559:modem.c       **** }
 1926              		.loc 1 559 0
 1927 0008 1846     		mov	r0, r3
 1928 000a BD46     		mov	sp, r7
 1929              		.cfi_def_cfa_register 13
 1930              		@ sp needed
 1931 000c 80BC     		pop	{r7}
 1932              		.cfi_restore 7
 1933              		.cfi_def_cfa_offset 0
 1934 000e 7047     		bx	lr
 1935              	.L115:
 1936              		.align	2
 1937              	.L114:
 1938 0010 00000000 		.word	modem_state
 1939              		.cfi_endproc
 1940              	.LFE82:
 1941              		.size	modem_get_state, .-modem_get_state
 1942              		.section	.text.modem_sleep,"ax",%progbits
 1943              		.align	2
 1944              		.global	modem_sleep
 1945              		.thumb
 1946              		.thumb_func
 1947              		.type	modem_sleep, %function
 1948              	modem_sleep:
 1949              	.LFB83:
 560:modem.c       **** 
 561:modem.c       **** // Set modem to sleep
 562:modem.c       **** void modem_sleep(){
 1950              		.loc 1 562 0
 1951              		.cfi_startproc
 1952              		@ args = 0, pretend = 0, frame = 0
 1953              		@ frame_needed = 1, uses_anonymous_args = 0
 1954 0000 80B5     		push	{r7, lr}
 1955              		.cfi_def_cfa_offset 8
 1956              		.cfi_offset 7, -8
 1957              		.cfi_offset 14, -4
 1958 0002 00AF     		add	r7, sp, #0
 1959              		.cfi_def_cfa_register 7
 563:modem.c       ****     // If the modem_state is not "off" then put it to sleep
 564:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 1960              		.loc 1 564 0
 1961 0004 FFF7FEFF 		bl	modem_get_state
 1962 0008 0346     		mov	r3, r0
 1963 000a 002B     		cmp	r3, #0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 48


 1964 000c 03D0     		beq	.L118
 565:modem.c       **** 
 566:modem.c       ****         Telit_ControlReg_Sleep(); // Prepares the modem for entering the low power mode.
 1965              		.loc 1 566 0
 1966 000e FFF7FEFF 		bl	Telit_ControlReg_Sleep
 567:modem.c       ****         UART_Telit_Sleep(); // Saves the current component state, calls the UART_Telit_Stop() funct
 1967              		.loc 1 567 0
 1968 0012 FFF7FEFF 		bl	UART_Telit_Sleep
 1969              	.L118:
 568:modem.c       ****         
 569:modem.c       ****         // Set interrupt on RX pin to wakeup chip from sleep if UART comm starts
 570:modem.c       ****        // Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_FALLING);
 571:modem.c       ****      }
 572:modem.c       **** }
 1970              		.loc 1 572 0
 1971 0016 00BF     		nop
 1972 0018 80BD     		pop	{r7, pc}
 1973              		.cfi_endproc
 1974              	.LFE83:
 1975              		.size	modem_sleep, .-modem_sleep
 1976 001a 00BF     		.section	.text.modem_wakeup,"ax",%progbits
 1977              		.align	2
 1978              		.global	modem_wakeup
 1979              		.thumb
 1980              		.thumb_func
 1981              		.type	modem_wakeup, %function
 1982              	modem_wakeup:
 1983              	.LFB84:
 573:modem.c       **** 
 574:modem.c       **** // Wakeup the modem
 575:modem.c       **** void modem_wakeup(){
 1984              		.loc 1 575 0
 1985              		.cfi_startproc
 1986              		@ args = 0, pretend = 0, frame = 0
 1987              		@ frame_needed = 1, uses_anonymous_args = 0
 1988 0000 80B5     		push	{r7, lr}
 1989              		.cfi_def_cfa_offset 8
 1990              		.cfi_offset 7, -8
 1991              		.cfi_offset 14, -4
 1992 0002 00AF     		add	r7, sp, #0
 1993              		.cfi_def_cfa_register 7
 576:modem.c       ****     // If modem state is not off then wake it up
 577:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 1994              		.loc 1 577 0
 1995 0004 FFF7FEFF 		bl	modem_get_state
 1996 0008 0346     		mov	r3, r0
 1997 000a 002B     		cmp	r3, #0
 1998 000c 0BD0     		beq	.L121
 578:modem.c       ****         Telit_ControlReg_Wakeup(); // Restores the modem after waking up from the low power mode.
 1999              		.loc 1 578 0
 2000 000e FFF7FEFF 		bl	Telit_ControlReg_Wakeup
 579:modem.c       ****         // Calls the UART_Telit_RestoreConfig() function to restore the configuration.
 580:modem.c       ****         // If the modem was enabled before the UART_Telit_Sleep() function was called, the UART_Tel
 581:modem.c       ****         UART_Telit_Wakeup();
 2001              		.loc 1 581 0
 2002 0012 FFF7FEFF 		bl	UART_Telit_Wakeup
 582:modem.c       ****         // Remove the need for this pin itterupt
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 49


 583:modem.c       ****         //Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 584:modem.c       ****         
 585:modem.c       ****         // If woken up from pin, go ahead and delay for 100ms to allow modem UART to deliver the me
 586:modem.c       ****         if(modem_get_state() == MODEM_STATE_WAITING_FOR_IP){
 2003              		.loc 1 586 0
 2004 0016 FFF7FEFF 		bl	modem_get_state
 2005 001a 0346     		mov	r3, r0
 2006 001c 032B     		cmp	r3, #3
 2007 001e 02D1     		bne	.L121
 587:modem.c       ****             CyDelay(100u);
 2008              		.loc 1 587 0
 2009 0020 6420     		movs	r0, #100
 2010 0022 FFF7FEFF 		bl	CyDelay
 2011              	.L121:
 588:modem.c       ****         }
 589:modem.c       ****         
 590:modem.c       ****      }
 591:modem.c       ****     
 592:modem.c       **** }
 2012              		.loc 1 592 0
 2013 0026 00BF     		nop
 2014 0028 80BD     		pop	{r7, pc}
 2015              		.cfi_endproc
 2016              	.LFE84:
 2017              		.size	modem_wakeup, .-modem_wakeup
 2018 002a 00BF     		.section	.rodata
 2019              		.align	2
 2020              	.LC49:
 2021 044c 41542347 		.ascii	"AT#GPIO=5,1,1,0\015\000"
 2021      50494F3D 
 2021      352C312C 
 2021      312C300D 
 2021      00
 2022 045d 000000   		.align	2
 2023              	.LC50:
 2024 0460 41542453 		.ascii	"AT$SUPLSEC=1\015\000"
 2024      55504C53 
 2024      45433D31 
 2024      0D00
 2025 046e 0000     		.align	2
 2026              	.LC51:
 2027 0470 41542453 		.ascii	"AT$SUPLV=2\015\000"
 2027      55504C56 
 2027      3D320D00 
 2028              		.align	2
 2029              	.LC52:
 2030 047c 41542441 		.ascii	"AT$AGPSEN=1\015\000"
 2030      47505345 
 2030      4E3D310D 
 2030      00
 2031 0489 000000   		.align	2
 2032              	.LC53:
 2033 048c 41542453 		.ascii	"AT$SLP=1,\"supl.google.com:7275\"\015\000"
 2033      4C503D31 
 2033      2C227375 
 2033      706C2E67 
 2033      6F6F676C 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 50


 2034 04ad 000000   		.align	2
 2035              	.LC54:
 2036 04b0 41542353 		.ascii	"AT#SGACT=1,0\015\012\000"
 2036      47414354 
 2036      3D312C30 
 2036      0D0A00
 2037 04bf 00       		.align	2
 2038              	.LC55:
 2039 04c0 4154244C 		.ascii	"AT$LCSLK=1,1\015\000"
 2039      43534C4B 
 2039      3D312C31 
 2039      0D00
 2040 04ce 0000     		.align	2
 2041              	.LC56:
 2042 04d0 41542447 		.ascii	"AT$GPSSLSR=1,1,,,,,2\015\000"
 2042      5053534C 
 2042      53523D31 
 2042      2C312C2C 
 2042      2C2C2C32 
 2043 04e6 0000     		.align	2
 2044              	.LC57:
 2045 04e8 4E00     		.ascii	"N\000"
 2046 04ea 0000     		.align	2
 2047              	.LC58:
 2048 04ec 41542447 		.ascii	"AT$GPSACP\015\000"
 2048      50534143 
 2048      500D00
 2049 04f7 00       		.align	2
 2050              	.LC59:
 2051 04f8 24475053 		.ascii	"$GPSACP: \000"
 2051      4143503A 
 2051      2000
 2052 0502 0000     		.align	2
 2053              	.LC60:
 2054 0504 24475053 		.ascii	"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s\000"
 2054      4143503A 
 2054      20252A66 
 2054      2C25664E 
 2054      2C256657 
 2055              		.global	__aeabi_fdiv
 2056              		.global	__aeabi_f2d
 2057              		.global	__aeabi_ddiv
 2058              		.global	__aeabi_dadd
 2059              		.global	__aeabi_d2f
 2060              		.align	2
 2061              	.LC61:
 2062 0524 41542347 		.ascii	"AT#GPIO=5,0,1,0\015\000"
 2062      50494F3D 
 2062      352C302C 
 2062      312C300D 
 2062      00
 2063 0535 000000   		.align	2
 2064              	.LC62:
 2065 0538 41542447 		.ascii	"AT$GPSR=0\015\000"
 2065      5053523D 
 2065      300D00
 2066 0543 00       		.align	2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 51


 2067              	.LC63:
 2068 0544 54696D65 		.ascii	"Time to lock GPS: %d\000"
 2068      20746F20 
 2068      6C6F636B 
 2068      20475053 
 2068      3A202564 
 2069              		.section	.text.modem_get_gps_coordinates,"ax",%progbits
 2070              		.align	2
 2071              		.global	modem_get_gps_coordinates
 2072              		.thumb
 2073              		.thumb_func
 2074              		.type	modem_get_gps_coordinates, %function
 2075              	modem_get_gps_coordinates:
 2076              	.LFB85:
 593:modem.c       **** 
 594:modem.c       **** 
 595:modem.c       ****     
 596:modem.c       **** // Returns lat,lom,alt data from Assited GPS (AGPS) system
 597:modem.c       **** gps_t modem_get_gps_coordinates(){
 2077              		.loc 1 597 0
 2078              		.cfi_startproc
 2079              		@ args = 0, pretend = 0, frame = 56
 2080              		@ frame_needed = 1, uses_anonymous_args = 0
 2081 0000 B0B5     		push	{r4, r5, r7, lr}
 2082              		.cfi_def_cfa_offset 16
 2083              		.cfi_offset 4, -16
 2084              		.cfi_offset 5, -12
 2085              		.cfi_offset 7, -8
 2086              		.cfi_offset 14, -4
 2087 0002 90B0     		sub	sp, sp, #64
 2088              		.cfi_def_cfa_offset 80
 2089 0004 02AF     		add	r7, sp, #8
 2090              		.cfi_def_cfa 7, 72
 2091 0006 7860     		str	r0, [r7, #4]
 598:modem.c       ****     gps_t gps;
 599:modem.c       ****     gps.altitude = 0;
 2092              		.loc 1 599 0
 2093 0008 4FF00003 		mov	r3, #0
 2094 000c FB61     		str	r3, [r7, #28]	@ float
 600:modem.c       ****     gps.longitude = 0;
 2095              		.loc 1 600 0
 2096 000e 4FF00003 		mov	r3, #0
 2097 0012 BB61     		str	r3, [r7, #24]	@ float
 601:modem.c       ****     gps.latitude = 0;
 2098              		.loc 1 601 0
 2099 0014 4FF00003 		mov	r3, #0
 2100 0018 7B61     		str	r3, [r7, #20]	@ float
 602:modem.c       ****     gps.time_to_lock =0;
 2101              		.loc 1 602 0
 2102 001a 0023     		movs	r3, #0
 2103 001c 3B84     		strh	r3, [r7, #32]	@ movhi
 603:modem.c       ****     gps.valid = 0;
 2104              		.loc 1 603 0
 2105 001e 0023     		movs	r3, #0
 2106 0020 87F82230 		strb	r3, [r7, #34]
 604:modem.c       ****     
 605:modem.c       ****     //AGPS will only work if we're connected to network, so don't call this fuction otherwise
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 52


 606:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 2107              		.loc 1 606 0
 2108 0024 7F4B     		ldr	r3, .L132
 2109 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2110 0028 042B     		cmp	r3, #4
 2111 002a 07D0     		beq	.L123
 607:modem.c       ****         return gps;//where valid = 0
 2112              		.loc 1 607 0
 2113 002c 7B68     		ldr	r3, [r7, #4]
 2114 002e 1C46     		mov	r4, r3
 2115 0030 07F11403 		add	r3, r7, #20
 2116 0034 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2117 0036 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2118 003a EFE0     		b	.L122
 2119              	.L123:
 608:modem.c       ****     }
 609:modem.c       ****     
 610:modem.c       ****     long lock_time = getTimeStamp();
 2120              		.loc 1 610 0
 2121 003c FFF7FEFF 		bl	getTimeStamp
 2122 0040 3863     		str	r0, [r7, #48]
 611:modem.c       ****     
 612:modem.c       ****     // Enable this for thr LTER module
 613:modem.c       ****     // Enable GPS Low-Dropout Regulator
 614:modem.c       ****     at_write_command("AT#GPIO=5,1,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2123              		.loc 1 614 0
 2124 0042 4FF4FA62 		mov	r2, #2000
 2125 0046 7849     		ldr	r1, .L132+4
 2126 0048 7848     		ldr	r0, .L132+8
 2127 004a FFF7FEFF 		bl	at_write_command
 615:modem.c       ****     
 616:modem.c       ****     // Configure SUPL connection params
 617:modem.c       ****     at_write_command("AT$SUPLSEC=1\r","OK",DEFAULT_AT_TIMEOUT);
 2128              		.loc 1 617 0
 2129 004e 4FF4FA62 		mov	r2, #2000
 2130 0052 7549     		ldr	r1, .L132+4
 2131 0054 7648     		ldr	r0, .L132+12
 2132 0056 FFF7FEFF 		bl	at_write_command
 618:modem.c       ****     
 619:modem.c       ****     // Use SUPL2.0
 620:modem.c       ****     at_write_command("AT$SUPLV=2\r","OK",DEFAULT_AT_TIMEOUT);
 2133              		.loc 1 620 0
 2134 005a 4FF4FA62 		mov	r2, #2000
 2135 005e 7249     		ldr	r1, .L132+4
 2136 0060 7448     		ldr	r0, .L132+16
 2137 0062 FFF7FEFF 		bl	at_write_command
 621:modem.c       ****     
 622:modem.c       ****     // Enable AGPS service
 623:modem.c       ****     at_write_command("AT$AGPSEN=1\r","OK",DEFAULT_AT_TIMEOUT);
 2138              		.loc 1 623 0
 2139 0066 4FF4FA62 		mov	r2, #2000
 2140 006a 6F49     		ldr	r1, .L132+4
 2141 006c 7248     		ldr	r0, .L132+20
 2142 006e FFF7FEFF 		bl	at_write_command
 624:modem.c       ****     
 625:modem.c       ****     // Chose SUPL server, use google publiuc service
 626:modem.c       ****     at_write_command("AT$SLP=1,\"supl.google.com:7275\"\r","OK",DEFAULT_AT_TIMEOUT);
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 53


 2143              		.loc 1 626 0
 2144 0072 4FF4FA62 		mov	r2, #2000
 2145 0076 6C49     		ldr	r1, .L132+4
 2146 0078 7048     		ldr	r0, .L132+24
 2147 007a FFF7FEFF 		bl	at_write_command
 627:modem.c       ****     
 628:modem.c       ****     //pdp context has to be lockeed to carrier for this to work
 629:modem.c       ****     
 630:modem.c       ****     // Unlock context since it needs to be used by modem
 631:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 2148              		.loc 1 631 0
 2149 007e 4FF4FA62 		mov	r2, #2000
 2150 0082 6949     		ldr	r1, .L132+4
 2151 0084 6E48     		ldr	r0, .L132+28
 2152 0086 FFF7FEFF 		bl	at_write_command
 632:modem.c       ****     
 633:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",DEFAULT_AT_TIMEOUT);//ATT
 2153              		.loc 1 633 0
 2154 008a 4FF4FA62 		mov	r2, #2000
 2155 008e 6649     		ldr	r1, .L132+4
 2156 0090 6C48     		ldr	r0, .L132+32
 2157 0092 FFF7FEFF 		bl	at_write_command
 634:modem.c       ****     //at_write_command("AT$LCSLK=1,3\r","OK",DEFAULT_AT_TIMEOUT);//Verizon
 635:modem.c       ****     
 636:modem.c       ****     // Relock the context
 637:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 2158              		.loc 1 637 0
 2159 0096 42F21072 		movw	r2, #10000
 2160 009a 6349     		ldr	r1, .L132+4
 2161 009c 6A48     		ldr	r0, .L132+36
 2162 009e FFF7FEFF 		bl	at_write_command
 638:modem.c       ****     
 639:modem.c       ****     //start AGPS service
 640:modem.c       ****     at_write_command("AT$GPSSLSR=1,1,,,,,2\r","OK",DEFAULT_AT_TIMEOUT); 
 2163              		.loc 1 640 0
 2164 00a2 4FF4FA62 		mov	r2, #2000
 2165 00a6 6049     		ldr	r1, .L132+4
 2166 00a8 6848     		ldr	r0, .L132+40
 2167 00aa FFF7FEFF 		bl	at_write_command
 641:modem.c       ****     
 642:modem.c       ****     
 643:modem.c       ****     // Start the AGPS service
 644:modem.c       ****     // Will keep receiving a buynch of commas without numbers, until GPS locks
 645:modem.c       ****     // Good lock will retunr a string with "N" and "W" coordinates
 646:modem.c       ****     
 647:modem.c       ****     
 648:modem.c       ****  
 649:modem.c       ****     uint8 gps_status = 0;
 2168              		.loc 1 649 0
 2169 00ae 0023     		movs	r3, #0
 2170 00b0 87F82F30 		strb	r3, [r7, #47]
 2171              	.LBB12:
 650:modem.c       ****     for(uint16 i=0;i<200;i++){
 2172              		.loc 1 650 0
 2173 00b4 0023     		movs	r3, #0
 2174 00b6 FB86     		strh	r3, [r7, #54]	@ movhi
 2175 00b8 13E0     		b	.L125
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 54


 2176              	.L128:
 651:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2177              		.loc 1 651 0
 2178 00ba 4FF4FA62 		mov	r2, #2000
 2179 00be 6449     		ldr	r1, .L132+44
 2180 00c0 6448     		ldr	r0, .L132+48
 2181 00c2 FFF7FEFF 		bl	at_write_command
 2182 00c6 0346     		mov	r3, r0
 2183 00c8 87F82F30 		strb	r3, [r7, #47]
 652:modem.c       ****         if(gps_status){
 2184              		.loc 1 652 0
 2185 00cc 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2186 00d0 002B     		cmp	r3, #0
 2187 00d2 0AD1     		bne	.L131
 653:modem.c       ****             break;   
 654:modem.c       ****         }
 655:modem.c       ****         CyDelay(1000u);// Wait for a second -- BLOCKING. Could be more elegant to incorporate this 
 2188              		.loc 1 655 0 discriminator 2
 2189 00d4 4FF47A70 		mov	r0, #1000
 2190 00d8 FFF7FEFF 		bl	CyDelay
 650:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2191              		.loc 1 650 0 discriminator 2
 2192 00dc FB8E     		ldrh	r3, [r7, #54]
 2193 00de 0133     		adds	r3, r3, #1
 2194 00e0 FB86     		strh	r3, [r7, #54]	@ movhi
 2195              	.L125:
 650:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2196              		.loc 1 650 0 is_stmt 0 discriminator 1
 2197 00e2 FB8E     		ldrh	r3, [r7, #54]
 2198 00e4 C72B     		cmp	r3, #199
 2199 00e6 E8D9     		bls	.L128
 2200 00e8 00E0     		b	.L127
 2201              	.L131:
 653:modem.c       ****             break;   
 2202              		.loc 1 653 0 is_stmt 1
 2203 00ea 00BF     		nop
 2204              	.L127:
 2205              	.LBE12:
 656:modem.c       ****     }
 657:modem.c       ****     
 658:modem.c       ****     //parse data here
 659:modem.c       ****     
 660:modem.c       ****     //example $GPSACP: 210926.000,4217.8003N,08341.3158W,2.3,258.2,3,17.8,4.8,2.6,220520,05,00
 661:modem.c       ****     float lat;
 662:modem.c       ****     float lon;
 663:modem.c       ****     float alt;
 664:modem.c       ****     
 665:modem.c       ****     // Look for $GPSACP:  in uart_received_string and save to sl
 666:modem.c       ****     // char *strstr(const char *haystack, const char *needle) function finds the first occurrence o
 667:modem.c       ****     char *s1 = strstr(uart_received_string,"$GPSACP: ");
 2206              		.loc 1 667 0
 2207 00ec 5A49     		ldr	r1, .L132+52
 2208 00ee 5B48     		ldr	r0, .L132+56
 2209 00f0 FFF7FEFF 		bl	strstr
 2210 00f4 B862     		str	r0, [r7, #40]
 668:modem.c       ****     // Look in sl for lat, long, alt and save in match 
 669:modem.c       ****     // int sscanf(const char *str, const char *format, ...) reads formatted input from a string.
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 55


 670:modem.c       ****     int match = sscanf(s1,"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s",&lat,&lon,&alt);
 2211              		.loc 1 670 0
 2212 00f6 07F10C01 		add	r1, r7, #12
 2213 00fa 07F11002 		add	r2, r7, #16
 2214 00fe 07F10803 		add	r3, r7, #8
 2215 0102 0093     		str	r3, [sp]
 2216 0104 0B46     		mov	r3, r1
 2217 0106 5649     		ldr	r1, .L132+60
 2218 0108 B86A     		ldr	r0, [r7, #40]
 2219 010a FFF7FEFF 		bl	sscanf
 2220 010e 7862     		str	r0, [r7, #36]
 671:modem.c       ****     if(match >= 3){
 2221              		.loc 1 671 0
 2222 0110 7B6A     		ldr	r3, [r7, #36]
 2223 0112 022B     		cmp	r3, #2
 2224 0114 60DD     		ble	.L129
 672:modem.c       ****         // Calculate lat and lon
 673:modem.c       ****         // floorf(x) calculates the largest integer that is less than or equal to x. 
 674:modem.c       ****         // fmod(double x, double y) returns the remainder of x divided by y.
 675:modem.c       ****         lat = floorf(lat/100) + fmod(lat,100)/60;
 2225              		.loc 1 675 0
 2226 0116 3B69     		ldr	r3, [r7, #16]	@ float
 2227 0118 5249     		ldr	r1, .L132+64
 2228 011a 1846     		mov	r0, r3
 2229 011c FFF7FEFF 		bl	__aeabi_fdiv
 2230 0120 0346     		mov	r3, r0
 2231 0122 1846     		mov	r0, r3
 2232 0124 FFF7FEFF 		bl	floorf
 2233 0128 0346     		mov	r3, r0
 2234 012a 1846     		mov	r0, r3
 2235 012c FFF7FEFF 		bl	__aeabi_f2d
 2236 0130 0446     		mov	r4, r0
 2237 0132 0D46     		mov	r5, r1
 2238 0134 3B69     		ldr	r3, [r7, #16]	@ float
 2239 0136 1846     		mov	r0, r3
 2240 0138 FFF7FEFF 		bl	__aeabi_f2d
 2241 013c 4FF00002 		mov	r2, #0
 2242 0140 494B     		ldr	r3, .L132+68
 2243 0142 FFF7FEFF 		bl	fmod
 2244 0146 4FF00002 		mov	r2, #0
 2245 014a 484B     		ldr	r3, .L132+72
 2246 014c FFF7FEFF 		bl	__aeabi_ddiv
 2247 0150 0246     		mov	r2, r0
 2248 0152 0B46     		mov	r3, r1
 2249 0154 2046     		mov	r0, r4
 2250 0156 2946     		mov	r1, r5
 2251 0158 FFF7FEFF 		bl	__aeabi_dadd
 2252 015c 0346     		mov	r3, r0
 2253 015e 0C46     		mov	r4, r1
 2254 0160 1846     		mov	r0, r3
 2255 0162 2146     		mov	r1, r4
 2256 0164 FFF7FEFF 		bl	__aeabi_d2f
 2257 0168 0346     		mov	r3, r0
 2258 016a 3B61     		str	r3, [r7, #16]	@ float
 676:modem.c       ****         lon = -(floorf(lon/100) + fmod(lon,100)/60);
 2259              		.loc 1 676 0
 2260 016c FB68     		ldr	r3, [r7, #12]	@ float
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 56


 2261 016e 3D49     		ldr	r1, .L132+64
 2262 0170 1846     		mov	r0, r3
 2263 0172 FFF7FEFF 		bl	__aeabi_fdiv
 2264 0176 0346     		mov	r3, r0
 2265 0178 1846     		mov	r0, r3
 2266 017a FFF7FEFF 		bl	floorf
 2267 017e 0346     		mov	r3, r0
 2268 0180 1846     		mov	r0, r3
 2269 0182 FFF7FEFF 		bl	__aeabi_f2d
 2270 0186 0446     		mov	r4, r0
 2271 0188 0D46     		mov	r5, r1
 2272 018a FB68     		ldr	r3, [r7, #12]	@ float
 2273 018c 1846     		mov	r0, r3
 2274 018e FFF7FEFF 		bl	__aeabi_f2d
 2275 0192 4FF00002 		mov	r2, #0
 2276 0196 344B     		ldr	r3, .L132+68
 2277 0198 FFF7FEFF 		bl	fmod
 2278 019c 4FF00002 		mov	r2, #0
 2279 01a0 324B     		ldr	r3, .L132+72
 2280 01a2 FFF7FEFF 		bl	__aeabi_ddiv
 2281 01a6 0246     		mov	r2, r0
 2282 01a8 0B46     		mov	r3, r1
 2283 01aa 2046     		mov	r0, r4
 2284 01ac 2946     		mov	r1, r5
 2285 01ae FFF7FEFF 		bl	__aeabi_dadd
 2286 01b2 0346     		mov	r3, r0
 2287 01b4 0C46     		mov	r4, r1
 2288 01b6 1846     		mov	r0, r3
 2289 01b8 2146     		mov	r1, r4
 2290 01ba FFF7FEFF 		bl	__aeabi_d2f
 2291 01be 0346     		mov	r3, r0
 2292 01c0 83F00043 		eor	r3, r3, #-2147483648
 2293 01c4 FB60     		str	r3, [r7, #12]	@ float
 677:modem.c       ****         gps.altitude = alt; // Save alt, lat, and lon to the variable gps.
 2294              		.loc 1 677 0
 2295 01c6 BB68     		ldr	r3, [r7, #8]	@ float
 2296 01c8 FB61     		str	r3, [r7, #28]	@ float
 678:modem.c       ****         gps.latitude = lat;
 2297              		.loc 1 678 0
 2298 01ca 3B69     		ldr	r3, [r7, #16]	@ float
 2299 01cc 7B61     		str	r3, [r7, #20]	@ float
 679:modem.c       ****         gps.longitude = lon;
 2300              		.loc 1 679 0
 2301 01ce FB68     		ldr	r3, [r7, #12]	@ float
 2302 01d0 BB61     		str	r3, [r7, #24]	@ float
 680:modem.c       ****         gps.valid = 1;
 2303              		.loc 1 680 0
 2304 01d2 0123     		movs	r3, #1
 2305 01d4 87F82230 		strb	r3, [r7, #34]
 2306              	.L129:
 681:modem.c       ****     }
 682:modem.c       ****     
 683:modem.c       ****     // Disable LDO, just in case
 684:modem.c       ****     at_write_command("AT#GPIO=5,0,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2307              		.loc 1 684 0
 2308 01d8 4FF4FA62 		mov	r2, #2000
 2309 01dc 1249     		ldr	r1, .L132+4
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 57


 2310 01de 2448     		ldr	r0, .L132+76
 2311 01e0 FFF7FEFF 		bl	at_write_command
 685:modem.c       ****     
 686:modem.c       ****     // Flush modem's GPS data, just in case
 687:modem.c       ****     at_write_command("AT$GPSR=0\r","OK",DEFAULT_AT_TIMEOUT);
 2312              		.loc 1 687 0
 2313 01e4 4FF4FA62 		mov	r2, #2000
 2314 01e8 0F49     		ldr	r1, .L132+4
 2315 01ea 2248     		ldr	r0, .L132+80
 2316 01ec FFF7FEFF 		bl	at_write_command
 688:modem.c       ****     
 689:modem.c       ****     
 690:modem.c       ****     
 691:modem.c       ****     
 692:modem.c       ****     
 693:modem.c       ****     /* Relevant to 3g modem, can ignore
 694:modem.c       ****     
 695:modem.c       ****     //Setthe GPS Quality of Servicep arameters. Inorder,theyare<horiz_accuracy(inmeters)>,<vertical
 696:modem.c       ****     //AT$GPSQOS=50,50,100,0
 697:modem.c       ****     at_write_command("AT$GPSQOS=50,50,100,0\r","OK",DEFAULT_AT_TIMEOUT);
 698:modem.c       ****     
 699:modem.c       ****     //SettheSUPLLocationPlatform(SLP)addressoftheserverthatwillprovidetheA-GPS data:
 700:modem.c       ****     at_write_command("AT$LCSSLP=1,\"supl.google.com\"\r","OK",DEFAULT_AT_TIMEOUT);
 701:modem.c       ****     
 702:modem.c       ****     //unlock contedt, simnce its being used by modem
 703:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 704:modem.c       ****     //Lock context 1 for LoCation Services (LCS) use only
 705:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",5000u);
 706:modem.c       ****     
 707:modem.c       ****     //unlock contedt, simnce its being used by modem
 708:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 709:modem.c       ****     
 710:modem.c       ****     //EnableunsolicitedNMEAGPSdataintheformatof<NMEASENTENCE><CR>
 711:modem.c       ****     at_write_command("AT$GPSNMUN=2,1,0,0,0,0,0\r","OK",DEFAULT_AT_TIMEOUT);
 712:modem.c       ****     
 713:modem.c       ****     //StartGPSlocationservicerequest.Sendingthiscommandsets$GPSP=1
 714:modem.c       ****    uint8 gps_status = 0;
 715:modem.c       ****     for(uint16 i=0;i<200;i++){
 716:modem.c       ****         gps_status = at_write_command("AT$GPSSLSR=1,1,,,,,0,255\r","N",3000u);
 717:modem.c       ****         if(gps_status){
 718:modem.c       ****             break;   
 719:modem.c       ****         }
 720:modem.c       ****   }
 721:modem.c       ****     
 722:modem.c       ****     //$GPGGA,030307.691,4217.7923,N,08341.3240,W,1,05,2.25,225.0,M,,M,,0000*6E
 723:modem.c       ****     //$GPGGA,213852.000,4600.8755,N,09327.7008,W,1,05,3.00,292.0,M,,M,,0000*6E
 724:modem.c       ****     if(gps_status){
 725:modem.c       ****         float lat,lon,alt = 0;
 726:modem.c       ****         if(sscanf(uart_received_string,"%*s,%f,N,%f,W,%*s",&lat,&lon) > 0){
 727:modem.c       ****             gps.altitude = alt;
 728:modem.c       ****             gps.latitude = lat/60;
 729:modem.c       ****             gps.longitude = lon/60;
 730:modem.c       ****             gps.valid = 1;
 731:modem.c       ****         }
 732:modem.c       ****         
 733:modem.c       ****     }
 734:modem.c       ****     
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 58


 735:modem.c       ****     //turn off gps
 736:modem.c       ****     //AT$GPSP=0
 737:modem.c       ****     at_write_command("AT$GPSP=0\r","OK",DEFAULT_AT_TIMEOUT);
 738:modem.c       ****     
 739:modem.c       ****     */
 740:modem.c       **** 
 741:modem.c       ****     // Calculate time to lock into GPS location and save in variable lock_time
 742:modem.c       ****     lock_time = getTimeStamp() - lock_time;
 2317              		.loc 1 742 0
 2318 01f0 FFF7FEFF 		bl	getTimeStamp
 2319 01f4 0246     		mov	r2, r0
 2320 01f6 3B6B     		ldr	r3, [r7, #48]
 2321 01f8 D31A     		subs	r3, r2, r3
 2322 01fa 3B63     		str	r3, [r7, #48]
 743:modem.c       ****     gps.time_to_lock = lock_time;
 2323              		.loc 1 743 0
 2324 01fc 3B6B     		ldr	r3, [r7, #48]
 2325 01fe 9BB2     		uxth	r3, r3
 2326 0200 3B84     		strh	r3, [r7, #32]	@ movhi
 744:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Time to lock GPS: %d", gps.time_to_lock);
 2327              		.loc 1 744 0
 2328 0202 3B8C     		ldrh	r3, [r7, #32]
 2329 0204 1A46     		mov	r2, r3
 2330 0206 1C49     		ldr	r1, .L132+84
 2331 0208 0020     		movs	r0, #0
 2332 020a FFF7FEFF 		bl	printNotif
 745:modem.c       ****     
 746:modem.c       ****     return gps;
 2333              		.loc 1 746 0
 2334 020e 7B68     		ldr	r3, [r7, #4]
 2335 0210 1C46     		mov	r4, r3
 2336 0212 07F11403 		add	r3, r7, #20
 2337 0216 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2338 0218 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2339              	.L122:
 747:modem.c       ****     
 748:modem.c       **** }
 2340              		.loc 1 748 0
 2341 021c 7868     		ldr	r0, [r7, #4]
 2342 021e 3837     		adds	r7, r7, #56
 2343              		.cfi_def_cfa_offset 16
 2344 0220 BD46     		mov	sp, r7
 2345              		.cfi_def_cfa_register 13
 2346              		@ sp needed
 2347 0222 B0BD     		pop	{r4, r5, r7, pc}
 2348              	.L133:
 2349              		.align	2
 2350              	.L132:
 2351 0224 00000000 		.word	modem_state
 2352 0228 00000000 		.word	.LC0
 2353 022c 4C040000 		.word	.LC49
 2354 0230 60040000 		.word	.LC50
 2355 0234 70040000 		.word	.LC51
 2356 0238 7C040000 		.word	.LC52
 2357 023c 8C040000 		.word	.LC53
 2358 0240 B0040000 		.word	.LC54
 2359 0244 C0040000 		.word	.LC55
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 59


 2360 0248 D4020000 		.word	.LC26
 2361 024c D0040000 		.word	.LC56
 2362 0250 E8040000 		.word	.LC57
 2363 0254 EC040000 		.word	.LC58
 2364 0258 F8040000 		.word	.LC59
 2365 025c 00000000 		.word	uart_received_string
 2366 0260 04050000 		.word	.LC60
 2367 0264 0000C842 		.word	1120403456
 2368 0268 00005940 		.word	1079574528
 2369 026c 00004E40 		.word	1078853632
 2370 0270 24050000 		.word	.LC61
 2371 0274 38050000 		.word	.LC62
 2372 0278 44050000 		.word	.LC63
 2373              		.cfi_endproc
 2374              	.LFE85:
 2375              		.size	modem_get_gps_coordinates, .-modem_get_gps_coordinates
 2376              		.text
 2377              	.Letext0:
 2378              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2379              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2380              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2381              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2382              		.file 6 "testing.h"
 2383              		.file 7 "modem.h"
 2384              		.file 8 "data.h"
 2385              		.file 9 "notoriOS.h"
 2386              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 2387              		.section	.debug_info,"",%progbits
 2388              	.Ldebug_info0:
 2389 0000 0D0A0000 		.4byte	0xa0d
 2390 0004 0400     		.2byte	0x4
 2391 0006 00000000 		.4byte	.Ldebug_abbrev0
 2392 000a 04       		.byte	0x4
 2393 000b 01       		.uleb128 0x1
 2394 000c 3C000000 		.4byte	.LASF132
 2395 0010 0C       		.byte	0xc
 2396 0011 05030000 		.4byte	.LASF133
 2397 0015 99040000 		.4byte	.LASF134
 2398 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2399 001d 00000000 		.4byte	0
 2400 0021 00000000 		.4byte	.Ldebug_line0
 2401 0025 02       		.uleb128 0x2
 2402 0026 01       		.byte	0x1
 2403 0027 06       		.byte	0x6
 2404 0028 26010000 		.4byte	.LASF0
 2405 002c 03       		.uleb128 0x3
 2406 002d 28000000 		.4byte	.LASF4
 2407 0031 02       		.byte	0x2
 2408 0032 1D       		.byte	0x1d
 2409 0033 37000000 		.4byte	0x37
 2410 0037 02       		.uleb128 0x2
 2411 0038 01       		.byte	0x1
 2412 0039 08       		.byte	0x8
 2413 003a 70040000 		.4byte	.LASF1
 2414 003e 02       		.uleb128 0x2
 2415 003f 02       		.byte	0x2
 2416 0040 05       		.byte	0x5
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 60


 2417 0041 3D030000 		.4byte	.LASF2
 2418 0045 02       		.uleb128 0x2
 2419 0046 02       		.byte	0x2
 2420 0047 07       		.byte	0x7
 2421 0048 DE010000 		.4byte	.LASF3
 2422 004c 03       		.uleb128 0x3
 2423 004d 52030000 		.4byte	.LASF5
 2424 0051 02       		.byte	0x2
 2425 0052 3F       		.byte	0x3f
 2426 0053 57000000 		.4byte	0x57
 2427 0057 02       		.uleb128 0x2
 2428 0058 04       		.byte	0x4
 2429 0059 05       		.byte	0x5
 2430 005a 7B010000 		.4byte	.LASF6
 2431 005e 03       		.uleb128 0x3
 2432 005f 01020000 		.4byte	.LASF7
 2433 0063 02       		.byte	0x2
 2434 0064 41       		.byte	0x41
 2435 0065 69000000 		.4byte	0x69
 2436 0069 02       		.uleb128 0x2
 2437 006a 04       		.byte	0x4
 2438 006b 07       		.byte	0x7
 2439 006c 78020000 		.4byte	.LASF8
 2440 0070 02       		.uleb128 0x2
 2441 0071 08       		.byte	0x8
 2442 0072 05       		.byte	0x5
 2443 0073 18010000 		.4byte	.LASF9
 2444 0077 02       		.uleb128 0x2
 2445 0078 08       		.byte	0x8
 2446 0079 07       		.byte	0x7
 2447 007a D7000000 		.4byte	.LASF10
 2448 007e 04       		.uleb128 0x4
 2449 007f 04       		.byte	0x4
 2450 0080 05       		.byte	0x5
 2451 0081 696E7400 		.ascii	"int\000"
 2452 0085 02       		.uleb128 0x2
 2453 0086 04       		.byte	0x4
 2454 0087 07       		.byte	0x7
 2455 0088 6C050000 		.4byte	.LASF11
 2456 008c 03       		.uleb128 0x3
 2457 008d 73060000 		.4byte	.LASF12
 2458 0091 03       		.byte	0x3
 2459 0092 18       		.byte	0x18
 2460 0093 2C000000 		.4byte	0x2c
 2461 0097 03       		.uleb128 0x3
 2462 0098 68040000 		.4byte	.LASF13
 2463 009c 03       		.byte	0x3
 2464 009d 2C       		.byte	0x2c
 2465 009e 4C000000 		.4byte	0x4c
 2466 00a2 03       		.uleb128 0x3
 2467 00a3 34060000 		.4byte	.LASF14
 2468 00a7 03       		.byte	0x3
 2469 00a8 30       		.byte	0x30
 2470 00a9 5E000000 		.4byte	0x5e
 2471 00ad 05       		.uleb128 0x5
 2472 00ae 9D010000 		.4byte	.LASF15
 2473 00b2 04       		.byte	0x4
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 61


 2474 00b3 9201     		.2byte	0x192
 2475 00b5 37000000 		.4byte	0x37
 2476 00b9 05       		.uleb128 0x5
 2477 00ba 0B000000 		.4byte	.LASF16
 2478 00be 04       		.byte	0x4
 2479 00bf 9301     		.2byte	0x193
 2480 00c1 45000000 		.4byte	0x45
 2481 00c5 05       		.uleb128 0x5
 2482 00c6 F1010000 		.4byte	.LASF17
 2483 00ca 04       		.byte	0x4
 2484 00cb 9401     		.2byte	0x194
 2485 00cd 69000000 		.4byte	0x69
 2486 00d1 05       		.uleb128 0x5
 2487 00d2 87060000 		.4byte	.LASF18
 2488 00d6 04       		.byte	0x4
 2489 00d7 9601     		.2byte	0x196
 2490 00d9 3E000000 		.4byte	0x3e
 2491 00dd 05       		.uleb128 0x5
 2492 00de B2010000 		.4byte	.LASF19
 2493 00e2 04       		.byte	0x4
 2494 00e3 9701     		.2byte	0x197
 2495 00e5 57000000 		.4byte	0x57
 2496 00e9 02       		.uleb128 0x2
 2497 00ea 04       		.byte	0x4
 2498 00eb 04       		.byte	0x4
 2499 00ec 3E040000 		.4byte	.LASF20
 2500 00f0 02       		.uleb128 0x2
 2501 00f1 08       		.byte	0x8
 2502 00f2 04       		.byte	0x4
 2503 00f3 AB010000 		.4byte	.LASF21
 2504 00f7 02       		.uleb128 0x2
 2505 00f8 01       		.byte	0x1
 2506 00f9 08       		.byte	0x8
 2507 00fa 53050000 		.4byte	.LASF22
 2508 00fe 02       		.uleb128 0x2
 2509 00ff 08       		.byte	0x8
 2510 0100 04       		.byte	0x4
 2511 0101 47050000 		.4byte	.LASF23
 2512 0105 02       		.uleb128 0x2
 2513 0106 04       		.byte	0x4
 2514 0107 07       		.byte	0x7
 2515 0108 C0030000 		.4byte	.LASF24
 2516 010c 06       		.uleb128 0x6
 2517 010d 04       		.byte	0x4
 2518 010e F7000000 		.4byte	0xf7
 2519 0112 06       		.uleb128 0x6
 2520 0113 04       		.byte	0x4
 2521 0114 18010000 		.4byte	0x118
 2522 0118 07       		.uleb128 0x7
 2523 0119 F7000000 		.4byte	0xf7
 2524 011d 08       		.uleb128 0x8
 2525 011e F7000000 		.4byte	0xf7
 2526 0122 2D010000 		.4byte	0x12d
 2527 0126 09       		.uleb128 0x9
 2528 0127 05010000 		.4byte	0x105
 2529 012b 17       		.byte	0x17
 2530 012c 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 62


 2531 012d 0A       		.uleb128 0xa
 2532 012e 746D00   		.ascii	"tm\000"
 2533 0131 24       		.byte	0x24
 2534 0132 05       		.byte	0x5
 2535 0133 21       		.byte	0x21
 2536 0134 A5010000 		.4byte	0x1a5
 2537 0138 0B       		.uleb128 0xb
 2538 0139 3D060000 		.4byte	.LASF25
 2539 013d 05       		.byte	0x5
 2540 013e 23       		.byte	0x23
 2541 013f 7E000000 		.4byte	0x7e
 2542 0143 00       		.byte	0
 2543 0144 0B       		.uleb128 0xb
 2544 0145 B9030000 		.4byte	.LASF26
 2545 0149 05       		.byte	0x5
 2546 014a 24       		.byte	0x24
 2547 014b 7E000000 		.4byte	0x7e
 2548 014f 04       		.byte	0x4
 2549 0150 0B       		.uleb128 0xb
 2550 0151 18000000 		.4byte	.LASF27
 2551 0155 05       		.byte	0x5
 2552 0156 25       		.byte	0x25
 2553 0157 7E000000 		.4byte	0x7e
 2554 015b 08       		.byte	0x8
 2555 015c 0B       		.uleb128 0xb
 2556 015d 1F060000 		.4byte	.LASF28
 2557 0161 05       		.byte	0x5
 2558 0162 26       		.byte	0x26
 2559 0163 7E000000 		.4byte	0x7e
 2560 0167 0C       		.byte	0xc
 2561 0168 0B       		.uleb128 0xb
 2562 0169 23020000 		.4byte	.LASF29
 2563 016d 05       		.byte	0x5
 2564 016e 27       		.byte	0x27
 2565 016f 7E000000 		.4byte	0x7e
 2566 0173 10       		.byte	0x10
 2567 0174 0B       		.uleb128 0xb
 2568 0175 3E020000 		.4byte	.LASF30
 2569 0179 05       		.byte	0x5
 2570 017a 28       		.byte	0x28
 2571 017b 7E000000 		.4byte	0x7e
 2572 017f 14       		.byte	0x14
 2573 0180 0B       		.uleb128 0xb
 2574 0181 28050000 		.4byte	.LASF31
 2575 0185 05       		.byte	0x5
 2576 0186 29       		.byte	0x29
 2577 0187 7E000000 		.4byte	0x7e
 2578 018b 18       		.byte	0x18
 2579 018c 0B       		.uleb128 0xb
 2580 018d 20000000 		.4byte	.LASF32
 2581 0191 05       		.byte	0x5
 2582 0192 2A       		.byte	0x2a
 2583 0193 7E000000 		.4byte	0x7e
 2584 0197 1C       		.byte	0x1c
 2585 0198 0B       		.uleb128 0xb
 2586 0199 DA020000 		.4byte	.LASF33
 2587 019d 05       		.byte	0x5
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 63


 2588 019e 2B       		.byte	0x2b
 2589 019f 7E000000 		.4byte	0x7e
 2590 01a3 20       		.byte	0x20
 2591 01a4 00       		.byte	0
 2592 01a5 0C       		.uleb128 0xc
 2593 01a6 8101     		.2byte	0x181
 2594 01a8 06       		.byte	0x6
 2595 01a9 0A       		.byte	0xa
 2596 01aa D3010000 		.4byte	0x1d3
 2597 01ae 0B       		.uleb128 0xb
 2598 01af 04040000 		.4byte	.LASF34
 2599 01b3 06       		.byte	0x6
 2600 01b4 0C       		.byte	0xc
 2601 01b5 D3010000 		.4byte	0x1d3
 2602 01b9 00       		.byte	0
 2603 01ba 0B       		.uleb128 0xb
 2604 01bb 44060000 		.4byte	.LASF35
 2605 01bf 06       		.byte	0x6
 2606 01c0 0D       		.byte	0xd
 2607 01c1 AD000000 		.4byte	0xad
 2608 01c5 80       		.byte	0x80
 2609 01c6 0B       		.uleb128 0xb
 2610 01c7 01050000 		.4byte	.LASF36
 2611 01cb 06       		.byte	0x6
 2612 01cc 0F       		.byte	0xf
 2613 01cd E3010000 		.4byte	0x1e3
 2614 01d1 81       		.byte	0x81
 2615 01d2 00       		.byte	0
 2616 01d3 08       		.uleb128 0x8
 2617 01d4 F7000000 		.4byte	0xf7
 2618 01d8 E3010000 		.4byte	0x1e3
 2619 01dc 09       		.uleb128 0x9
 2620 01dd 05010000 		.4byte	0x105
 2621 01e1 7F       		.byte	0x7f
 2622 01e2 00       		.byte	0
 2623 01e3 08       		.uleb128 0x8
 2624 01e4 F7000000 		.4byte	0xf7
 2625 01e8 F3010000 		.4byte	0x1f3
 2626 01ec 09       		.uleb128 0x9
 2627 01ed 05010000 		.4byte	0x105
 2628 01f1 FF       		.byte	0xff
 2629 01f2 00       		.byte	0
 2630 01f3 03       		.uleb128 0x3
 2631 01f4 E9040000 		.4byte	.LASF37
 2632 01f8 06       		.byte	0x6
 2633 01f9 10       		.byte	0x10
 2634 01fa A5010000 		.4byte	0x1a5
 2635 01fe 0D       		.uleb128 0xd
 2636 01ff 3C       		.byte	0x3c
 2637 0200 07       		.byte	0x7
 2638 0201 2C       		.byte	0x2c
 2639 0202 2B020000 		.4byte	0x22b
 2640 0206 0B       		.uleb128 0xb
 2641 0207 0A060000 		.4byte	.LASF38
 2642 020b 07       		.byte	0x7
 2643 020c 2D       		.byte	0x2d
 2644 020d 2B020000 		.4byte	0x22b
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 64


 2645 0211 00       		.byte	0
 2646 0212 0B       		.uleb128 0xb
 2647 0213 7E050000 		.4byte	.LASF39
 2648 0217 07       		.byte	0x7
 2649 0218 2E       		.byte	0x2e
 2650 0219 2B020000 		.4byte	0x22b
 2651 021d 14       		.byte	0x14
 2652 021e 0B       		.uleb128 0xb
 2653 021f FC040000 		.4byte	.LASF40
 2654 0223 07       		.byte	0x7
 2655 0224 2F       		.byte	0x2f
 2656 0225 2B020000 		.4byte	0x22b
 2657 0229 28       		.byte	0x28
 2658 022a 00       		.byte	0
 2659 022b 08       		.uleb128 0x8
 2660 022c F7000000 		.4byte	0xf7
 2661 0230 3B020000 		.4byte	0x23b
 2662 0234 09       		.uleb128 0x9
 2663 0235 05010000 		.4byte	0x105
 2664 0239 13       		.byte	0x13
 2665 023a 00       		.byte	0
 2666 023b 03       		.uleb128 0x3
 2667 023c 92050000 		.4byte	.LASF41
 2668 0240 07       		.byte	0x7
 2669 0241 30       		.byte	0x30
 2670 0242 FE010000 		.4byte	0x1fe
 2671 0246 0D       		.uleb128 0xd
 2672 0247 0C       		.byte	0xc
 2673 0248 07       		.byte	0x7
 2674 0249 32       		.byte	0x32
 2675 024a 7F020000 		.4byte	0x27f
 2676 024e 0B       		.uleb128 0xb
 2677 024f BB060000 		.4byte	.LASF42
 2678 0253 07       		.byte	0x7
 2679 0254 33       		.byte	0x33
 2680 0255 AD000000 		.4byte	0xad
 2681 0259 00       		.byte	0
 2682 025a 0B       		.uleb128 0xb
 2683 025b 94040000 		.4byte	.LASF43
 2684 025f 07       		.byte	0x7
 2685 0260 34       		.byte	0x34
 2686 0261 AD000000 		.4byte	0xad
 2687 0265 01       		.byte	0x1
 2688 0266 0B       		.uleb128 0xb
 2689 0267 32010000 		.4byte	.LASF44
 2690 026b 07       		.byte	0x7
 2691 026c 35       		.byte	0x35
 2692 026d 7E000000 		.4byte	0x7e
 2693 0271 04       		.byte	0x4
 2694 0272 0B       		.uleb128 0xb
 2695 0273 20030000 		.4byte	.LASF45
 2696 0277 07       		.byte	0x7
 2697 0278 36       		.byte	0x36
 2698 0279 7E000000 		.4byte	0x7e
 2699 027d 08       		.byte	0x8
 2700 027e 00       		.byte	0
 2701 027f 03       		.uleb128 0x3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 65


 2702 0280 08050000 		.4byte	.LASF46
 2703 0284 07       		.byte	0x7
 2704 0285 37       		.byte	0x37
 2705 0286 46020000 		.4byte	0x246
 2706 028a 0D       		.uleb128 0xd
 2707 028b 10       		.byte	0x10
 2708 028c 07       		.byte	0x7
 2709 028d 39       		.byte	0x39
 2710 028e CF020000 		.4byte	0x2cf
 2711 0292 0B       		.uleb128 0xb
 2712 0293 FB030000 		.4byte	.LASF47
 2713 0297 07       		.byte	0x7
 2714 0298 3A       		.byte	0x3a
 2715 0299 E9000000 		.4byte	0xe9
 2716 029d 00       		.byte	0
 2717 029e 0B       		.uleb128 0xb
 2718 029f 32000000 		.4byte	.LASF48
 2719 02a3 07       		.byte	0x7
 2720 02a4 3B       		.byte	0x3b
 2721 02a5 E9000000 		.4byte	0xe9
 2722 02a9 04       		.byte	0x4
 2723 02aa 0B       		.uleb128 0xb
 2724 02ab 94010000 		.4byte	.LASF49
 2725 02af 07       		.byte	0x7
 2726 02b0 3C       		.byte	0x3c
 2727 02b1 E9000000 		.4byte	0xe9
 2728 02b5 08       		.byte	0x8
 2729 02b6 0B       		.uleb128 0xb
 2730 02b7 B8020000 		.4byte	.LASF50
 2731 02bb 07       		.byte	0x7
 2732 02bc 3D       		.byte	0x3d
 2733 02bd B9000000 		.4byte	0xb9
 2734 02c1 0C       		.byte	0xc
 2735 02c2 0B       		.uleb128 0xb
 2736 02c3 27060000 		.4byte	.LASF51
 2737 02c7 07       		.byte	0x7
 2738 02c8 3E       		.byte	0x3e
 2739 02c9 AD000000 		.4byte	0xad
 2740 02cd 0E       		.byte	0xe
 2741 02ce 00       		.byte	0
 2742 02cf 03       		.uleb128 0x3
 2743 02d0 9F050000 		.4byte	.LASF52
 2744 02d4 07       		.byte	0x7
 2745 02d5 40       		.byte	0x40
 2746 02d6 8A020000 		.4byte	0x28a
 2747 02da 0D       		.uleb128 0xd
 2748 02db 2C       		.byte	0x2c
 2749 02dc 08       		.byte	0x8
 2750 02dd 10       		.byte	0x10
 2751 02de 07030000 		.4byte	0x307
 2752 02e2 0E       		.uleb128 0xe
 2753 02e3 6B657900 		.ascii	"key\000"
 2754 02e7 08       		.byte	0x8
 2755 02e8 11       		.byte	0x11
 2756 02e9 2B020000 		.4byte	0x22b
 2757 02ed 00       		.byte	0
 2758 02ee 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 66


 2759 02ef 12000000 		.4byte	.LASF53
 2760 02f3 08       		.byte	0x8
 2761 02f4 12       		.byte	0x12
 2762 02f5 2B020000 		.4byte	0x22b
 2763 02f9 14       		.byte	0x14
 2764 02fa 0B       		.uleb128 0xb
 2765 02fb E8060000 		.4byte	.LASF54
 2766 02ff 08       		.byte	0x8
 2767 0300 13       		.byte	0x13
 2768 0301 DD000000 		.4byte	0xdd
 2769 0305 28       		.byte	0x28
 2770 0306 00       		.byte	0
 2771 0307 03       		.uleb128 0x3
 2772 0308 62020000 		.4byte	.LASF55
 2773 030c 08       		.byte	0x8
 2774 030d 14       		.byte	0x14
 2775 030e DA020000 		.4byte	0x2da
 2776 0312 0D       		.uleb128 0xd
 2777 0313 1C       		.byte	0x1c
 2778 0314 09       		.byte	0x9
 2779 0315 37       		.byte	0x37
 2780 0316 33030000 		.4byte	0x333
 2781 031a 0B       		.uleb128 0xb
 2782 031b E3020000 		.4byte	.LASF56
 2783 031f 09       		.byte	0x9
 2784 0320 39       		.byte	0x39
 2785 0321 33030000 		.4byte	0x333
 2786 0325 00       		.byte	0
 2787 0326 0B       		.uleb128 0xb
 2788 0327 11060000 		.4byte	.LASF57
 2789 032b 09       		.byte	0x9
 2790 032c 3A       		.byte	0x3a
 2791 032d 1D010000 		.4byte	0x11d
 2792 0331 04       		.byte	0x4
 2793 0332 00       		.byte	0
 2794 0333 06       		.uleb128 0x6
 2795 0334 04       		.byte	0x4
 2796 0335 3B020000 		.4byte	0x23b
 2797 0339 03       		.uleb128 0x3
 2798 033a 82030000 		.4byte	.LASF58
 2799 033e 09       		.byte	0x9
 2800 033f 3C       		.byte	0x3c
 2801 0340 12030000 		.4byte	0x312
 2802 0344 0C       		.uleb128 0xc
 2803 0345 4401     		.2byte	0x144
 2804 0347 09       		.byte	0x9
 2805 0348 42       		.byte	0x42
 2806 0349 97030000 		.4byte	0x397
 2807 034d 0B       		.uleb128 0xb
 2808 034e A3010000 		.4byte	.LASF59
 2809 0352 09       		.byte	0x9
 2810 0353 45       		.byte	0x45
 2811 0354 2B020000 		.4byte	0x22b
 2812 0358 00       		.byte	0
 2813 0359 0B       		.uleb128 0xb
 2814 035a EE020000 		.4byte	.LASF60
 2815 035e 09       		.byte	0x9
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 67


 2816 035f 47       		.byte	0x47
 2817 0360 97030000 		.4byte	0x397
 2818 0364 14       		.byte	0x14
 2819 0365 0B       		.uleb128 0xb
 2820 0366 D2020000 		.4byte	.LASF61
 2821 036a 09       		.byte	0x9
 2822 036b 48       		.byte	0x48
 2823 036c 7E000000 		.4byte	0x7e
 2824 0370 78       		.byte	0x78
 2825 0371 0B       		.uleb128 0xb
 2826 0372 CA020000 		.4byte	.LASF62
 2827 0376 09       		.byte	0x9
 2828 0377 49       		.byte	0x49
 2829 0378 A7030000 		.4byte	0x3a7
 2830 037c 7C       		.byte	0x7c
 2831 037d 0B       		.uleb128 0xb
 2832 037e 2A020000 		.4byte	.LASF63
 2833 0382 09       		.byte	0x9
 2834 0383 4A       		.byte	0x4a
 2835 0384 97030000 		.4byte	0x397
 2836 0388 AE       		.byte	0xae
 2837 0389 0F       		.uleb128 0xf
 2838 038a 7B060000 		.4byte	.LASF64
 2839 038e 09       		.byte	0x9
 2840 038f 4B       		.byte	0x4b
 2841 0390 A7030000 		.4byte	0x3a7
 2842 0394 1201     		.2byte	0x112
 2843 0396 00       		.byte	0
 2844 0397 08       		.uleb128 0x8
 2845 0398 F7000000 		.4byte	0xf7
 2846 039c A7030000 		.4byte	0x3a7
 2847 03a0 09       		.uleb128 0x9
 2848 03a1 05010000 		.4byte	0x105
 2849 03a5 63       		.byte	0x63
 2850 03a6 00       		.byte	0
 2851 03a7 08       		.uleb128 0x8
 2852 03a8 F7000000 		.4byte	0xf7
 2853 03ac B7030000 		.4byte	0x3b7
 2854 03b0 09       		.uleb128 0x9
 2855 03b1 05010000 		.4byte	0x105
 2856 03b5 31       		.byte	0x31
 2857 03b6 00       		.byte	0
 2858 03b7 03       		.uleb128 0x3
 2859 03b8 64060000 		.4byte	.LASF65
 2860 03bc 09       		.byte	0x9
 2861 03bd 4E       		.byte	0x4e
 2862 03be 44030000 		.4byte	0x344
 2863 03c2 10       		.uleb128 0x10
 2864 03c3 5B040000 		.4byte	.LASF93
 2865 03c7 01       		.byte	0x1
 2866 03c8 16       		.byte	0x16
 2867 03c9 00000000 		.4byte	.LFB64
 2868 03cd 44000000 		.4byte	.LFE64-.LFB64
 2869 03d1 01       		.uleb128 0x1
 2870 03d2 9C       		.byte	0x9c
 2871 03d3 11       		.uleb128 0x11
 2872 03d4 44040000 		.4byte	.LASF66
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 68


 2873 03d8 01       		.byte	0x1
 2874 03d9 20       		.byte	0x20
 2875 03da 00000000 		.4byte	.LFB65
 2876 03de 54000000 		.4byte	.LFE65-.LFB65
 2877 03e2 01       		.uleb128 0x1
 2878 03e3 9C       		.byte	0x9c
 2879 03e4 11       		.uleb128 0x11
 2880 03e5 F2050000 		.4byte	.LASF67
 2881 03e9 01       		.byte	0x1
 2882 03ea 36       		.byte	0x36
 2883 03eb 00000000 		.4byte	.LFB66
 2884 03ef 32000000 		.4byte	.LFE66-.LFB66
 2885 03f3 01       		.uleb128 0x1
 2886 03f4 9C       		.byte	0x9c
 2887 03f5 11       		.uleb128 0x11
 2888 03f6 4C020000 		.4byte	.LASF68
 2889 03fa 01       		.byte	0x1
 2890 03fb 46       		.byte	0x46
 2891 03fc 00000000 		.4byte	.LFB67
 2892 0400 20000000 		.4byte	.LFE67-.LFB67
 2893 0404 01       		.uleb128 0x1
 2894 0405 9C       		.byte	0x9c
 2895 0406 11       		.uleb128 0x11
 2896 0407 D7060000 		.4byte	.LASF69
 2897 040b 01       		.byte	0x1
 2898 040c 4F       		.byte	0x4f
 2899 040d 00000000 		.4byte	.LFB68
 2900 0411 40000000 		.4byte	.LFE68-.LFB68
 2901 0415 01       		.uleb128 0x1
 2902 0416 9C       		.byte	0x9c
 2903 0417 12       		.uleb128 0x12
 2904 0418 F6020000 		.4byte	.LASF83
 2905 041c 01       		.byte	0x1
 2906 041d 61       		.byte	0x61
 2907 041e AD000000 		.4byte	0xad
 2908 0422 00000000 		.4byte	.LFB69
 2909 0426 DC000000 		.4byte	.LFE69-.LFB69
 2910 042a 01       		.uleb128 0x1
 2911 042b 9C       		.byte	0x9c
 2912 042c 8B040000 		.4byte	0x48b
 2913 0430 13       		.uleb128 0x13
 2914 0431 8D060000 		.4byte	.LASF70
 2915 0435 01       		.byte	0x1
 2916 0436 6A       		.byte	0x6a
 2917 0437 AD000000 		.4byte	0xad
 2918 043b 02       		.uleb128 0x2
 2919 043c 91       		.byte	0x91
 2920 043d 77       		.sleb128 -9
 2921 043e 13       		.uleb128 0x13
 2922 043f 96060000 		.4byte	.LASF71
 2923 0443 01       		.byte	0x1
 2924 0444 6B       		.byte	0x6b
 2925 0445 AD000000 		.4byte	0xad
 2926 0449 02       		.uleb128 0x2
 2927 044a 91       		.byte	0x91
 2928 044b 74       		.sleb128 -12
 2929 044c 13       		.uleb128 0x13
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 69


 2930 044d 9F060000 		.4byte	.LASF72
 2931 0451 01       		.byte	0x1
 2932 0452 6D       		.byte	0x6d
 2933 0453 57000000 		.4byte	0x57
 2934 0457 02       		.uleb128 0x2
 2935 0458 91       		.byte	0x91
 2936 0459 70       		.sleb128 -16
 2937 045a 14       		.uleb128 0x14
 2938 045b 26000000 		.4byte	.LBB2
 2939 045f 4A000000 		.4byte	.LBE2-.LBB2
 2940 0463 13       		.uleb128 0x13
 2941 0464 96060000 		.4byte	.LASF71
 2942 0468 01       		.byte	0x1
 2943 0469 70       		.byte	0x70
 2944 046a AD000000 		.4byte	0xad
 2945 046e 02       		.uleb128 0x2
 2946 046f 91       		.byte	0x91
 2947 0470 76       		.sleb128 -10
 2948 0471 14       		.uleb128 0x14
 2949 0472 2C000000 		.4byte	.LBB3
 2950 0476 2A000000 		.4byte	.LBE3-.LBB3
 2951 047a 13       		.uleb128 0x13
 2952 047b 6E020000 		.4byte	.LASF73
 2953 047f 01       		.byte	0x1
 2954 0480 72       		.byte	0x72
 2955 0481 AD000000 		.4byte	0xad
 2956 0485 02       		.uleb128 0x2
 2957 0486 91       		.byte	0x91
 2958 0487 75       		.sleb128 -11
 2959 0488 00       		.byte	0
 2960 0489 00       		.byte	0
 2961 048a 00       		.byte	0
 2962 048b 11       		.uleb128 0x11
 2963 048c 30050000 		.4byte	.LASF74
 2964 0490 01       		.byte	0x1
 2965 0491 93       		.byte	0x93
 2966 0492 00000000 		.4byte	.LFB70
 2967 0496 1C000000 		.4byte	.LFE70-.LFB70
 2968 049a 01       		.uleb128 0x1
 2969 049b 9C       		.byte	0x9c
 2970 049c 11       		.uleb128 0x11
 2971 049d 16050000 		.4byte	.LASF75
 2972 04a1 01       		.byte	0x1
 2973 04a2 9B       		.byte	0x9b
 2974 04a3 00000000 		.4byte	.LFB71
 2975 04a7 28000000 		.4byte	.LFE71-.LFB71
 2976 04ab 01       		.uleb128 0x1
 2977 04ac 9C       		.byte	0x9c
 2978 04ad 15       		.uleb128 0x15
 2979 04ae 71030000 		.4byte	.LASF87
 2980 04b2 01       		.byte	0x1
 2981 04b3 A6       		.byte	0xa6
 2982 04b4 8C000000 		.4byte	0x8c
 2983 04b8 00000000 		.4byte	.LFB72
 2984 04bc C8000000 		.4byte	.LFE72-.LFB72
 2985 04c0 01       		.uleb128 0x1
 2986 04c1 9C       		.byte	0x9c
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 70


 2987 04c2 3F050000 		.4byte	0x53f
 2988 04c6 16       		.uleb128 0x16
 2989 04c7 24040000 		.4byte	.LASF76
 2990 04cb 01       		.byte	0x1
 2991 04cc A6       		.byte	0xa6
 2992 04cd 0C010000 		.4byte	0x10c
 2993 04d1 02       		.uleb128 0x2
 2994 04d2 91       		.byte	0x91
 2995 04d3 5C       		.sleb128 -36
 2996 04d4 16       		.uleb128 0x16
 2997 04d5 A9060000 		.4byte	.LASF77
 2998 04d9 01       		.byte	0x1
 2999 04da A6       		.byte	0xa6
 3000 04db 0C010000 		.4byte	0x10c
 3001 04df 02       		.uleb128 0x2
 3002 04e0 91       		.byte	0x91
 3003 04e1 58       		.sleb128 -40
 3004 04e2 16       		.uleb128 0x16
 3005 04e3 99020000 		.4byte	.LASF78
 3006 04e7 01       		.byte	0x1
 3007 04e8 A6       		.byte	0xa6
 3008 04e9 A2000000 		.4byte	0xa2
 3009 04ed 02       		.uleb128 0x2
 3010 04ee 91       		.byte	0x91
 3011 04ef 54       		.sleb128 -44
 3012 04f0 13       		.uleb128 0x13
 3013 04f1 66030000 		.4byte	.LASF79
 3014 04f5 01       		.byte	0x1
 3015 04f6 A8       		.byte	0xa8
 3016 04f7 C5000000 		.4byte	0xc5
 3017 04fb 02       		.uleb128 0x2
 3018 04fc 91       		.byte	0x91
 3019 04fd 74       		.sleb128 -12
 3020 04fe 14       		.uleb128 0x14
 3021 04ff 16000000 		.4byte	.LBB4
 3022 0503 88000000 		.4byte	.LBE4-.LBB4
 3023 0507 13       		.uleb128 0x13
 3024 0508 2D040000 		.4byte	.LASF80
 3025 050c 01       		.byte	0x1
 3026 050d AC       		.byte	0xac
 3027 050e 0C010000 		.4byte	0x10c
 3028 0512 02       		.uleb128 0x2
 3029 0513 91       		.byte	0x91
 3030 0514 64       		.sleb128 -28
 3031 0515 13       		.uleb128 0x13
 3032 0516 8E040000 		.4byte	.LASF81
 3033 051a 01       		.byte	0x1
 3034 051b AD       		.byte	0xad
 3035 051c A2000000 		.4byte	0xa2
 3036 0520 02       		.uleb128 0x2
 3037 0521 91       		.byte	0x91
 3038 0522 6C       		.sleb128 -20
 3039 0523 17       		.uleb128 0x17
 3040 0524 6900     		.ascii	"i\000"
 3041 0526 01       		.byte	0x1
 3042 0527 AE       		.byte	0xae
 3043 0528 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 71


 3044 052c 02       		.uleb128 0x2
 3045 052d 91       		.byte	0x91
 3046 052e 70       		.sleb128 -16
 3047 052f 13       		.uleb128 0x13
 3048 0530 F8010000 		.4byte	.LASF82
 3049 0534 01       		.byte	0x1
 3050 0535 AE       		.byte	0xae
 3051 0536 A2000000 		.4byte	0xa2
 3052 053a 02       		.uleb128 0x2
 3053 053b 91       		.byte	0x91
 3054 053c 68       		.sleb128 -24
 3055 053d 00       		.byte	0
 3056 053e 00       		.byte	0
 3057 053f 12       		.uleb128 0x12
 3058 0540 0E040000 		.4byte	.LASF84
 3059 0544 01       		.byte	0x1
 3060 0545 DA       		.byte	0xda
 3061 0546 F3010000 		.4byte	0x1f3
 3062 054a 00000000 		.4byte	.LFB73
 3063 054e FC000000 		.4byte	.LFE73-.LFB73
 3064 0552 01       		.uleb128 0x1
 3065 0553 9C       		.byte	0x9c
 3066 0554 96050000 		.4byte	0x596
 3067 0558 13       		.uleb128 0x13
 3068 0559 FA000000 		.4byte	.LASF85
 3069 055d 01       		.byte	0x1
 3070 055e DC       		.byte	0xdc
 3071 055f F3010000 		.4byte	0x1f3
 3072 0563 03       		.uleb128 0x3
 3073 0564 91       		.byte	0x91
 3074 0565 E47C     		.sleb128 -412
 3075 0567 14       		.uleb128 0x14
 3076 0568 4A000000 		.4byte	.LBB5
 3077 056c 84000000 		.4byte	.LBE5-.LBB5
 3078 0570 17       		.uleb128 0x17
 3079 0571 6900     		.ascii	"i\000"
 3080 0573 01       		.byte	0x1
 3081 0574 E3       		.byte	0xe3
 3082 0575 7E000000 		.4byte	0x7e
 3083 0579 02       		.uleb128 0x2
 3084 057a 91       		.byte	0x91
 3085 057b 6C       		.sleb128 -20
 3086 057c 14       		.uleb128 0x14
 3087 057d 70000000 		.4byte	.LBB6
 3088 0581 46000000 		.4byte	.LBE6-.LBB6
 3089 0585 13       		.uleb128 0x13
 3090 0586 D1010000 		.4byte	.LASF86
 3091 058a 01       		.byte	0x1
 3092 058b F0       		.byte	0xf0
 3093 058c 57000000 		.4byte	0x57
 3094 0590 02       		.uleb128 0x2
 3095 0591 91       		.byte	0x91
 3096 0592 68       		.sleb128 -24
 3097 0593 00       		.byte	0
 3098 0594 00       		.byte	0
 3099 0595 00       		.byte	0
 3100 0596 18       		.uleb128 0x18
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 72


 3101 0597 8A020000 		.4byte	.LASF88
 3102 059b 01       		.byte	0x1
 3103 059c 0401     		.2byte	0x104
 3104 059e AD000000 		.4byte	0xad
 3105 05a2 00000000 		.4byte	.LFB74
 3106 05a6 78000000 		.4byte	.LFE74-.LFB74
 3107 05aa 01       		.uleb128 0x1
 3108 05ab 9C       		.byte	0x9c
 3109 05ac 07060000 		.4byte	0x607
 3110 05b0 19       		.uleb128 0x19
 3111 05b1 5C030000 		.4byte	.LASF89
 3112 05b5 01       		.byte	0x1
 3113 05b6 0401     		.2byte	0x104
 3114 05b8 0C010000 		.4byte	0x10c
 3115 05bc 02       		.uleb128 0x2
 3116 05bd 91       		.byte	0x91
 3117 05be 6C       		.sleb128 -20
 3118 05bf 19       		.uleb128 0x19
 3119 05c0 0D030000 		.4byte	.LASF90
 3120 05c4 01       		.byte	0x1
 3121 05c5 0401     		.2byte	0x104
 3122 05c7 12010000 		.4byte	0x112
 3123 05cb 02       		.uleb128 0x2
 3124 05cc 91       		.byte	0x91
 3125 05cd 68       		.sleb128 -24
 3126 05ce 19       		.uleb128 0x19
 3127 05cf 33030000 		.4byte	.LASF91
 3128 05d3 01       		.byte	0x1
 3129 05d4 0401     		.2byte	0x104
 3130 05d6 12010000 		.4byte	0x112
 3131 05da 02       		.uleb128 0x2
 3132 05db 91       		.byte	0x91
 3133 05dc 64       		.sleb128 -28
 3134 05dd 19       		.uleb128 0x19
 3135 05de 19030000 		.4byte	.LASF92
 3136 05e2 01       		.byte	0x1
 3137 05e3 0401     		.2byte	0x104
 3138 05e5 0C010000 		.4byte	0x10c
 3139 05e9 02       		.uleb128 0x2
 3140 05ea 91       		.byte	0x91
 3141 05eb 60       		.sleb128 -32
 3142 05ec 1A       		.uleb128 0x1a
 3143 05ed 6100     		.ascii	"a\000"
 3144 05ef 01       		.byte	0x1
 3145 05f0 0601     		.2byte	0x106
 3146 05f2 0C010000 		.4byte	0x10c
 3147 05f6 02       		.uleb128 0x2
 3148 05f7 91       		.byte	0x91
 3149 05f8 74       		.sleb128 -12
 3150 05f9 1A       		.uleb128 0x1a
 3151 05fa 6200     		.ascii	"b\000"
 3152 05fc 01       		.byte	0x1
 3153 05fd 0601     		.2byte	0x106
 3154 05ff 0C010000 		.4byte	0x10c
 3155 0603 02       		.uleb128 0x2
 3156 0604 91       		.byte	0x91
 3157 0605 70       		.sleb128 -16
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 73


 3158 0606 00       		.byte	0
 3159 0607 1B       		.uleb128 0x1b
 3160 0608 58050000 		.4byte	.LASF94
 3161 060c 01       		.byte	0x1
 3162 060d 2301     		.2byte	0x123
 3163 060f AD000000 		.4byte	0xad
 3164 0613 00000000 		.4byte	.LFB75
 3165 0617 08010000 		.4byte	.LFE75-.LFB75
 3166 061b 01       		.uleb128 0x1
 3167 061c 9C       		.byte	0x9c
 3168 061d 1C       		.uleb128 0x1c
 3169 061e C9030000 		.4byte	.LASF95
 3170 0622 01       		.byte	0x1
 3171 0623 5E01     		.2byte	0x15e
 3172 0625 AD000000 		.4byte	0xad
 3173 0629 00000000 		.4byte	.LFB76
 3174 062d A0000000 		.4byte	.LFE76-.LFB76
 3175 0631 01       		.uleb128 0x1
 3176 0632 9C       		.byte	0x9c
 3177 0633 60060000 		.4byte	0x660
 3178 0637 1D       		.uleb128 0x1d
 3179 0638 44060000 		.4byte	.LASF35
 3180 063c 01       		.byte	0x1
 3181 063d 6201     		.2byte	0x162
 3182 063f AD000000 		.4byte	0xad
 3183 0643 02       		.uleb128 0x2
 3184 0644 91       		.byte	0x91
 3185 0645 77       		.sleb128 -9
 3186 0646 14       		.uleb128 0x14
 3187 0647 36000000 		.4byte	.LBB7
 3188 064b 34000000 		.4byte	.LBE7-.LBB7
 3189 064f 1D       		.uleb128 0x1d
 3190 0650 61030000 		.4byte	.LASF96
 3191 0654 01       		.byte	0x1
 3192 0655 6A01     		.2byte	0x16a
 3193 0657 60060000 		.4byte	0x660
 3194 065b 02       		.uleb128 0x2
 3195 065c 91       		.byte	0x91
 3196 065d 6C       		.sleb128 -20
 3197 065e 00       		.byte	0
 3198 065f 00       		.byte	0
 3199 0660 08       		.uleb128 0x8
 3200 0661 F7000000 		.4byte	0xf7
 3201 0665 70060000 		.4byte	0x670
 3202 0669 09       		.uleb128 0x9
 3203 066a 05010000 		.4byte	0x105
 3204 066e 09       		.byte	0x9
 3205 066f 00       		.byte	0
 3206 0670 1E       		.uleb128 0x1e
 3207 0671 54010000 		.4byte	.LASF97
 3208 0675 01       		.byte	0x1
 3209 0676 7D01     		.2byte	0x17d
 3210 0678 00000000 		.4byte	.LFB77
 3211 067c 1C000000 		.4byte	.LFE77-.LFB77
 3212 0680 01       		.uleb128 0x1
 3213 0681 9C       		.byte	0x9c
 3214 0682 1B       		.uleb128 0x1b
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 74


 3215 0683 B7050000 		.4byte	.LASF98
 3216 0687 01       		.byte	0x1
 3217 0688 8D01     		.2byte	0x18d
 3218 068a AD000000 		.4byte	0xad
 3219 068e 00000000 		.4byte	.LFB78
 3220 0692 28000000 		.4byte	.LFE78-.LFB78
 3221 0696 01       		.uleb128 0x1
 3222 0697 9C       		.byte	0x9c
 3223 0698 1F       		.uleb128 0x1f
 3224 0699 A1020000 		.4byte	.LASF100
 3225 069d 01       		.byte	0x1
 3226 069e 9901     		.2byte	0x199
 3227 06a0 00000000 		.4byte	.LFB79
 3228 06a4 B4000000 		.4byte	.LFE79-.LFB79
 3229 06a8 01       		.uleb128 0x1
 3230 06a9 9C       		.byte	0x9c
 3231 06aa F0060000 		.4byte	0x6f0
 3232 06ae 14       		.uleb128 0x14
 3233 06af 06000000 		.4byte	.LBB8
 3234 06b3 84000000 		.4byte	.LBE8-.LBB8
 3235 06b7 1D       		.uleb128 0x1d
 3236 06b8 96060000 		.4byte	.LASF71
 3237 06bc 01       		.byte	0x1
 3238 06bd 9D01     		.2byte	0x19d
 3239 06bf AD000000 		.4byte	0xad
 3240 06c3 02       		.uleb128 0x2
 3241 06c4 91       		.byte	0x91
 3242 06c5 77       		.sleb128 -9
 3243 06c6 14       		.uleb128 0x14
 3244 06c7 0C000000 		.4byte	.LBB9
 3245 06cb 72000000 		.4byte	.LBE9-.LBB9
 3246 06cf 1A       		.uleb128 0x1a
 3247 06d0 63737100 		.ascii	"csq\000"
 3248 06d4 01       		.byte	0x1
 3249 06d5 A101     		.2byte	0x1a1
 3250 06d7 60060000 		.4byte	0x660
 3251 06db 02       		.uleb128 0x2
 3252 06dc 91       		.byte	0x91
 3253 06dd 64       		.sleb128 -28
 3254 06de 1D       		.uleb128 0x1d
 3255 06df 55040000 		.4byte	.LASF99
 3256 06e3 01       		.byte	0x1
 3257 06e4 A601     		.2byte	0x1a6
 3258 06e6 0C010000 		.4byte	0x10c
 3259 06ea 02       		.uleb128 0x2
 3260 06eb 91       		.byte	0x91
 3261 06ec 70       		.sleb128 -16
 3262 06ed 00       		.byte	0
 3263 06ee 00       		.byte	0
 3264 06ef 00       		.byte	0
 3265 06f0 1F       		.uleb128 0x1f
 3266 06f1 B8010000 		.4byte	.LASF101
 3267 06f5 01       		.byte	0x1
 3268 06f6 BB01     		.2byte	0x1bb
 3269 06f8 00000000 		.4byte	.LFB80
 3270 06fc 38010000 		.4byte	.LFE80-.LFB80
 3271 0700 01       		.uleb128 0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 75


 3272 0701 9C       		.byte	0x9c
 3273 0702 20070000 		.4byte	0x720
 3274 0706 14       		.uleb128 0x14
 3275 0707 B6000000 		.4byte	.LBB10
 3276 070b 34000000 		.4byte	.LBE10-.LBB10
 3277 070f 1D       		.uleb128 0x1d
 3278 0710 79050000 		.4byte	.LASF102
 3279 0714 01       		.byte	0x1
 3280 0715 E401     		.2byte	0x1e4
 3281 0717 60060000 		.4byte	0x660
 3282 071b 02       		.uleb128 0x2
 3283 071c 91       		.byte	0x91
 3284 071d 6C       		.sleb128 -20
 3285 071e 00       		.byte	0
 3286 071f 00       		.byte	0
 3287 0720 1C       		.uleb128 0x1c
 3288 0721 0C020000 		.4byte	.LASF103
 3289 0725 01       		.byte	0x1
 3290 0726 F601     		.2byte	0x1f6
 3291 0728 57000000 		.4byte	0x57
 3292 072c 00000000 		.4byte	.LFB81
 3293 0730 44010000 		.4byte	.LFE81-.LFB81
 3294 0734 01       		.uleb128 0x1
 3295 0735 9C       		.byte	0x9c
 3296 0736 DC070000 		.4byte	0x7dc
 3297 073a 1D       		.uleb128 0x1d
 3298 073b 47030000 		.4byte	.LASF104
 3299 073f 01       		.byte	0x1
 3300 0740 0102     		.2byte	0x201
 3301 0742 57000000 		.4byte	0x57
 3302 0746 02       		.uleb128 0x2
 3303 0747 91       		.byte	0x91
 3304 0748 74       		.sleb128 -12
 3305 0749 14       		.uleb128 0x14
 3306 074a 30000000 		.4byte	.LBB11
 3307 074e DE000000 		.4byte	.LBE11-.LBB11
 3308 0752 1D       		.uleb128 0x1d
 3309 0753 D1010000 		.4byte	.LASF86
 3310 0757 01       		.byte	0x1
 3311 0758 0502     		.2byte	0x205
 3312 075a DC070000 		.4byte	0x7dc
 3313 075e 02       		.uleb128 0x2
 3314 075f 91       		.byte	0x91
 3315 0760 54       		.sleb128 -44
 3316 0761 1A       		.uleb128 0x1a
 3317 0762 7400     		.ascii	"t\000"
 3318 0764 01       		.byte	0x1
 3319 0765 0A02     		.2byte	0x20a
 3320 0767 2D010000 		.4byte	0x12d
 3321 076b 03       		.uleb128 0x3
 3322 076c 91       		.byte	0x91
 3323 076d 947F     		.sleb128 -108
 3324 076f 1D       		.uleb128 0x1d
 3325 0770 76010000 		.4byte	.LASF105
 3326 0774 01       		.byte	0x1
 3327 0775 0D02     		.2byte	0x20d
 3328 0777 7E000000 		.4byte	0x7e
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 76


 3329 077b 02       		.uleb128 0x2
 3330 077c 91       		.byte	0x91
 3331 077d 50       		.sleb128 -48
 3332 077e 1D       		.uleb128 0x1d
 3333 077f 46020000 		.4byte	.LASF106
 3334 0783 01       		.byte	0x1
 3335 0784 0D02     		.2byte	0x20d
 3336 0786 7E000000 		.4byte	0x7e
 3337 078a 02       		.uleb128 0x2
 3338 078b 91       		.byte	0x91
 3339 078c 4C       		.sleb128 -52
 3340 078d 1A       		.uleb128 0x1a
 3341 078e 64617900 		.ascii	"day\000"
 3342 0792 01       		.byte	0x1
 3343 0793 0D02     		.2byte	0x20d
 3344 0795 7E000000 		.4byte	0x7e
 3345 0799 02       		.uleb128 0x2
 3346 079a 91       		.byte	0x91
 3347 079b 48       		.sleb128 -56
 3348 079c 1D       		.uleb128 0x1d
 3349 079d 1F040000 		.4byte	.LASF107
 3350 07a1 01       		.byte	0x1
 3351 07a2 0D02     		.2byte	0x20d
 3352 07a4 7E000000 		.4byte	0x7e
 3353 07a8 02       		.uleb128 0x2
 3354 07a9 91       		.byte	0x91
 3355 07aa 44       		.sleb128 -60
 3356 07ab 1D       		.uleb128 0x1d
 3357 07ac 2D060000 		.4byte	.LASF108
 3358 07b0 01       		.byte	0x1
 3359 07b1 0D02     		.2byte	0x20d
 3360 07b3 7E000000 		.4byte	0x7e
 3361 07b7 02       		.uleb128 0x2
 3362 07b8 91       		.byte	0x91
 3363 07b9 40       		.sleb128 -64
 3364 07ba 1D       		.uleb128 0x1d
 3365 07bb 6F010000 		.4byte	.LASF109
 3366 07bf 01       		.byte	0x1
 3367 07c0 0D02     		.2byte	0x20d
 3368 07c2 7E000000 		.4byte	0x7e
 3369 07c6 03       		.uleb128 0x3
 3370 07c7 91       		.byte	0x91
 3371 07c8 BC7F     		.sleb128 -68
 3372 07ca 1D       		.uleb128 0x1d
 3373 07cb 00000000 		.4byte	.LASF110
 3374 07cf 01       		.byte	0x1
 3375 07d0 0D02     		.2byte	0x20d
 3376 07d2 7E000000 		.4byte	0x7e
 3377 07d6 03       		.uleb128 0x3
 3378 07d7 91       		.byte	0x91
 3379 07d8 B87F     		.sleb128 -72
 3380 07da 00       		.byte	0
 3381 07db 00       		.byte	0
 3382 07dc 08       		.uleb128 0x8
 3383 07dd F7000000 		.4byte	0xf7
 3384 07e1 EC070000 		.4byte	0x7ec
 3385 07e5 09       		.uleb128 0x9
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 77


 3386 07e6 05010000 		.4byte	0x105
 3387 07ea 1D       		.byte	0x1d
 3388 07eb 00       		.byte	0
 3389 07ec 20       		.uleb128 0x20
 3390 07ed 84010000 		.4byte	.LASF111
 3391 07f1 01       		.byte	0x1
 3392 07f2 2D02     		.2byte	0x22d
 3393 07f4 AD000000 		.4byte	0xad
 3394 07f8 00000000 		.4byte	.LFB82
 3395 07fc 14000000 		.4byte	.LFE82-.LFB82
 3396 0800 01       		.uleb128 0x1
 3397 0801 9C       		.byte	0x9c
 3398 0802 1E       		.uleb128 0x1e
 3399 0803 32020000 		.4byte	.LASF112
 3400 0807 01       		.byte	0x1
 3401 0808 3202     		.2byte	0x232
 3402 080a 00000000 		.4byte	.LFB83
 3403 080e 1A000000 		.4byte	.LFE83-.LFB83
 3404 0812 01       		.uleb128 0x1
 3405 0813 9C       		.byte	0x9c
 3406 0814 1E       		.uleb128 0x1e
 3407 0815 CA000000 		.4byte	.LASF113
 3408 0819 01       		.byte	0x1
 3409 081a 3F02     		.2byte	0x23f
 3410 081c 00000000 		.4byte	.LFB84
 3411 0820 2A000000 		.4byte	.LFE84-.LFB84
 3412 0824 01       		.uleb128 0x1
 3413 0825 9C       		.byte	0x9c
 3414 0826 1C       		.uleb128 0x1c
 3415 0827 9F030000 		.4byte	.LASF114
 3416 082b 01       		.byte	0x1
 3417 082c 5502     		.2byte	0x255
 3418 082e CF020000 		.4byte	0x2cf
 3419 0832 00000000 		.4byte	.LFB85
 3420 0836 7C020000 		.4byte	.LFE85-.LFB85
 3421 083a 01       		.uleb128 0x1
 3422 083b 9C       		.byte	0x9c
 3423 083c CF080000 		.4byte	0x8cf
 3424 0840 1A       		.uleb128 0x1a
 3425 0841 67707300 		.ascii	"gps\000"
 3426 0845 01       		.byte	0x1
 3427 0846 5602     		.2byte	0x256
 3428 0848 CF020000 		.4byte	0x2cf
 3429 084c 02       		.uleb128 0x2
 3430 084d 91       		.byte	0x91
 3431 084e 4C       		.sleb128 -52
 3432 084f 1D       		.uleb128 0x1d
 3433 0850 C0060000 		.4byte	.LASF115
 3434 0854 01       		.byte	0x1
 3435 0855 6202     		.2byte	0x262
 3436 0857 57000000 		.4byte	0x57
 3437 085b 02       		.uleb128 0x2
 3438 085c 91       		.byte	0x91
 3439 085d 68       		.sleb128 -24
 3440 085e 1D       		.uleb128 0x1d
 3441 085f E7050000 		.4byte	.LASF116
 3442 0863 01       		.byte	0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 78


 3443 0864 8902     		.2byte	0x289
 3444 0866 AD000000 		.4byte	0xad
 3445 086a 02       		.uleb128 0x2
 3446 086b 91       		.byte	0x91
 3447 086c 67       		.sleb128 -25
 3448 086d 1A       		.uleb128 0x1a
 3449 086e 6C617400 		.ascii	"lat\000"
 3450 0872 01       		.byte	0x1
 3451 0873 9502     		.2byte	0x295
 3452 0875 E9000000 		.4byte	0xe9
 3453 0879 02       		.uleb128 0x2
 3454 087a 91       		.byte	0x91
 3455 087b 48       		.sleb128 -56
 3456 087c 1A       		.uleb128 0x1a
 3457 087d 6C6F6E00 		.ascii	"lon\000"
 3458 0881 01       		.byte	0x1
 3459 0882 9602     		.2byte	0x296
 3460 0884 E9000000 		.4byte	0xe9
 3461 0888 02       		.uleb128 0x2
 3462 0889 91       		.byte	0x91
 3463 088a 44       		.sleb128 -60
 3464 088b 1A       		.uleb128 0x1a
 3465 088c 616C7400 		.ascii	"alt\000"
 3466 0890 01       		.byte	0x1
 3467 0891 9702     		.2byte	0x297
 3468 0893 E9000000 		.4byte	0xe9
 3469 0897 02       		.uleb128 0x2
 3470 0898 91       		.byte	0x91
 3471 0899 40       		.sleb128 -64
 3472 089a 1A       		.uleb128 0x1a
 3473 089b 733100   		.ascii	"s1\000"
 3474 089e 01       		.byte	0x1
 3475 089f 9B02     		.2byte	0x29b
 3476 08a1 0C010000 		.4byte	0x10c
 3477 08a5 02       		.uleb128 0x2
 3478 08a6 91       		.byte	0x91
 3479 08a7 60       		.sleb128 -32
 3480 08a8 1D       		.uleb128 0x1d
 3481 08a9 19040000 		.4byte	.LASF117
 3482 08ad 01       		.byte	0x1
 3483 08ae 9E02     		.2byte	0x29e
 3484 08b0 7E000000 		.4byte	0x7e
 3485 08b4 02       		.uleb128 0x2
 3486 08b5 91       		.byte	0x91
 3487 08b6 5C       		.sleb128 -36
 3488 08b7 14       		.uleb128 0x14
 3489 08b8 B4000000 		.4byte	.LBB12
 3490 08bc 38000000 		.4byte	.LBE12-.LBB12
 3491 08c0 1A       		.uleb128 0x1a
 3492 08c1 6900     		.ascii	"i\000"
 3493 08c3 01       		.byte	0x1
 3494 08c4 8A02     		.2byte	0x28a
 3495 08c6 B9000000 		.4byte	0xb9
 3496 08ca 02       		.uleb128 0x2
 3497 08cb 91       		.byte	0x91
 3498 08cc 6E       		.sleb128 -18
 3499 08cd 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 79


 3500 08ce 00       		.byte	0
 3501 08cf 21       		.uleb128 0x21
 3502 08d0 FF000000 		.4byte	.LASF118
 3503 08d4 0A       		.byte	0xa
 3504 08d5 1207     		.2byte	0x712
 3505 08d7 DB080000 		.4byte	0x8db
 3506 08db 22       		.uleb128 0x22
 3507 08dc 97000000 		.4byte	0x97
 3508 08e0 23       		.uleb128 0x23
 3509 08e1 EE000000 		.4byte	.LASF119
 3510 08e5 07       		.byte	0x7
 3511 08e6 15       		.byte	0x15
 3512 08e7 AD000000 		.4byte	0xad
 3513 08eb 05       		.uleb128 0x5
 3514 08ec 03       		.byte	0x3
 3515 08ed 00000000 		.4byte	modem_state
 3516 08f1 23       		.uleb128 0x23
 3517 08f2 D0050000 		.4byte	.LASF120
 3518 08f6 07       		.byte	0x7
 3519 08f7 45       		.byte	0x45
 3520 08f8 DD000000 		.4byte	0xdd
 3521 08fc 05       		.uleb128 0x5
 3522 08fd 03       		.byte	0x3
 3523 08fe 00000000 		.4byte	modem_start_time_stamp
 3524 0902 23       		.uleb128 0x23
 3525 0903 E3020000 		.4byte	.LASF56
 3526 0907 07       		.byte	0x7
 3527 0908 46       		.byte	0x46
 3528 0909 3B020000 		.4byte	0x23b
 3529 090d 05       		.uleb128 0x5
 3530 090e 03       		.byte	0x3
 3531 090f 00000000 		.4byte	modem_info
 3532 0913 23       		.uleb128 0x23
 3533 0914 0C010000 		.4byte	.LASF121
 3534 0918 07       		.byte	0x7
 3535 0919 47       		.byte	0x47
 3536 091a 7F020000 		.4byte	0x27f
 3537 091e 05       		.uleb128 0x5
 3538 091f 03       		.byte	0x3
 3539 0920 00000000 		.4byte	modem_stats
 3540 0924 23       		.uleb128 0x23
 3541 0925 8D030000 		.4byte	.LASF122
 3542 0929 08       		.byte	0x8
 3543 092a 1D       		.byte	0x1d
 3544 092b B9000000 		.4byte	0xb9
 3545 092f 05       		.uleb128 0x5
 3546 0930 03       		.byte	0x3
 3547 0931 00000000 		.4byte	dataPointsInStack
 3548 0935 23       		.uleb128 0x23
 3549 0936 4B060000 		.4byte	.LASF123
 3550 093a 08       		.byte	0x8
 3551 093b 1E       		.byte	0x1e
 3552 093c B9000000 		.4byte	0xb9
 3553 0940 05       		.uleb128 0x5
 3554 0941 03       		.byte	0x3
 3555 0942 00000000 		.4byte	dataPointsInStackDesired
 3556 0946 08       		.uleb128 0x8
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 80


 3557 0947 07030000 		.4byte	0x307
 3558 094b 56090000 		.4byte	0x956
 3559 094f 09       		.uleb128 0x9
 3560 0950 05010000 		.4byte	0x105
 3561 0954 95       		.byte	0x95
 3562 0955 00       		.byte	0
 3563 0956 23       		.uleb128 0x23
 3564 0957 C5020000 		.4byte	.LASF124
 3565 095b 08       		.byte	0x8
 3566 095c 1F       		.byte	0x1f
 3567 095d 46090000 		.4byte	0x946
 3568 0961 05       		.uleb128 0x5
 3569 0962 03       		.byte	0x3
 3570 0963 00000000 		.4byte	data
 3571 0967 08       		.uleb128 0x8
 3572 0968 F7000000 		.4byte	0xf7
 3573 096c 78090000 		.4byte	0x978
 3574 0970 24       		.uleb128 0x24
 3575 0971 05010000 		.4byte	0x105
 3576 0975 0F27     		.2byte	0x270f
 3577 0977 00       		.byte	0
 3578 0978 23       		.uleb128 0x23
 3579 0979 CA060000 		.4byte	.LASF125
 3580 097d 09       		.byte	0x9
 3581 097e 16       		.byte	0x16
 3582 097f 67090000 		.4byte	0x967
 3583 0983 05       		.uleb128 0x5
 3584 0984 03       		.byte	0x3
 3585 0985 00000000 		.4byte	http_request
 3586 0989 23       		.uleb128 0x23
 3587 098a 4A010000 		.4byte	.LASF126
 3588 098e 09       		.byte	0x9
 3589 098f 17       		.byte	0x17
 3590 0990 67090000 		.4byte	0x967
 3591 0994 05       		.uleb128 0x5
 3592 0995 03       		.byte	0x3
 3593 0996 00000000 		.4byte	http_body
 3594 099a 08       		.uleb128 0x8
 3595 099b F7000000 		.4byte	0xf7
 3596 099f AA090000 		.4byte	0x9aa
 3597 09a3 09       		.uleb128 0x9
 3598 09a4 05010000 		.4byte	0x105
 3599 09a8 C7       		.byte	0xc7
 3600 09a9 00       		.byte	0
 3601 09aa 23       		.uleb128 0x23
 3602 09ab 87050000 		.4byte	.LASF127
 3603 09af 09       		.byte	0x9
 3604 09b0 18       		.byte	0x18
 3605 09b1 9A090000 		.4byte	0x99a
 3606 09b5 05       		.uleb128 0x5
 3607 09b6 03       		.byte	0x3
 3608 09b7 00000000 		.4byte	http_route
 3609 09bb 23       		.uleb128 0x23
 3610 09bc F0040000 		.4byte	.LASF128
 3611 09c0 09       		.byte	0x9
 3612 09c1 3F       		.byte	0x3f
 3613 09c2 39030000 		.4byte	0x339
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 81


 3614 09c6 05       		.uleb128 0x5
 3615 09c7 03       		.byte	0x3
 3616 09c8 00000000 		.4byte	system_info
 3617 09cc 23       		.uleb128 0x23
 3618 09cd 7E040000 		.4byte	.LASF129
 3619 09d1 09       		.byte	0x9
 3620 09d2 51       		.byte	0x51
 3621 09d3 B7030000 		.4byte	0x3b7
 3622 09d7 05       		.uleb128 0x5
 3623 09d8 03       		.byte	0x3
 3624 09d9 00000000 		.4byte	system_settings
 3625 09dd 08       		.uleb128 0x8
 3626 09de F7000000 		.4byte	0xf7
 3627 09e2 EE090000 		.4byte	0x9ee
 3628 09e6 24       		.uleb128 0x24
 3629 09e7 05010000 		.4byte	0x105
 3630 09eb FF03     		.2byte	0x3ff
 3631 09ed 00       		.byte	0
 3632 09ee 23       		.uleb128 0x23
 3633 09ef E6030000 		.4byte	.LASF130
 3634 09f3 01       		.byte	0x1
 3635 09f4 09       		.byte	0x9
 3636 09f5 DD090000 		.4byte	0x9dd
 3637 09f9 05       		.uleb128 0x5
 3638 09fa 03       		.byte	0x3
 3639 09fb 00000000 		.4byte	uart_received_string
 3640 09ff 23       		.uleb128 0x23
 3641 0a00 A5050000 		.4byte	.LASF131
 3642 0a04 01       		.byte	0x1
 3643 0a05 0A       		.byte	0xa
 3644 0a06 D1000000 		.4byte	0xd1
 3645 0a0a 05       		.uleb128 0x5
 3646 0a0b 03       		.byte	0x3
 3647 0a0c 00000000 		.4byte	uart_string_index
 3648 0a10 00       		.byte	0
 3649              		.section	.debug_abbrev,"",%progbits
 3650              	.Ldebug_abbrev0:
 3651 0000 01       		.uleb128 0x1
 3652 0001 11       		.uleb128 0x11
 3653 0002 01       		.byte	0x1
 3654 0003 25       		.uleb128 0x25
 3655 0004 0E       		.uleb128 0xe
 3656 0005 13       		.uleb128 0x13
 3657 0006 0B       		.uleb128 0xb
 3658 0007 03       		.uleb128 0x3
 3659 0008 0E       		.uleb128 0xe
 3660 0009 1B       		.uleb128 0x1b
 3661 000a 0E       		.uleb128 0xe
 3662 000b 55       		.uleb128 0x55
 3663 000c 17       		.uleb128 0x17
 3664 000d 11       		.uleb128 0x11
 3665 000e 01       		.uleb128 0x1
 3666 000f 10       		.uleb128 0x10
 3667 0010 17       		.uleb128 0x17
 3668 0011 00       		.byte	0
 3669 0012 00       		.byte	0
 3670 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 82


 3671 0014 24       		.uleb128 0x24
 3672 0015 00       		.byte	0
 3673 0016 0B       		.uleb128 0xb
 3674 0017 0B       		.uleb128 0xb
 3675 0018 3E       		.uleb128 0x3e
 3676 0019 0B       		.uleb128 0xb
 3677 001a 03       		.uleb128 0x3
 3678 001b 0E       		.uleb128 0xe
 3679 001c 00       		.byte	0
 3680 001d 00       		.byte	0
 3681 001e 03       		.uleb128 0x3
 3682 001f 16       		.uleb128 0x16
 3683 0020 00       		.byte	0
 3684 0021 03       		.uleb128 0x3
 3685 0022 0E       		.uleb128 0xe
 3686 0023 3A       		.uleb128 0x3a
 3687 0024 0B       		.uleb128 0xb
 3688 0025 3B       		.uleb128 0x3b
 3689 0026 0B       		.uleb128 0xb
 3690 0027 49       		.uleb128 0x49
 3691 0028 13       		.uleb128 0x13
 3692 0029 00       		.byte	0
 3693 002a 00       		.byte	0
 3694 002b 04       		.uleb128 0x4
 3695 002c 24       		.uleb128 0x24
 3696 002d 00       		.byte	0
 3697 002e 0B       		.uleb128 0xb
 3698 002f 0B       		.uleb128 0xb
 3699 0030 3E       		.uleb128 0x3e
 3700 0031 0B       		.uleb128 0xb
 3701 0032 03       		.uleb128 0x3
 3702 0033 08       		.uleb128 0x8
 3703 0034 00       		.byte	0
 3704 0035 00       		.byte	0
 3705 0036 05       		.uleb128 0x5
 3706 0037 16       		.uleb128 0x16
 3707 0038 00       		.byte	0
 3708 0039 03       		.uleb128 0x3
 3709 003a 0E       		.uleb128 0xe
 3710 003b 3A       		.uleb128 0x3a
 3711 003c 0B       		.uleb128 0xb
 3712 003d 3B       		.uleb128 0x3b
 3713 003e 05       		.uleb128 0x5
 3714 003f 49       		.uleb128 0x49
 3715 0040 13       		.uleb128 0x13
 3716 0041 00       		.byte	0
 3717 0042 00       		.byte	0
 3718 0043 06       		.uleb128 0x6
 3719 0044 0F       		.uleb128 0xf
 3720 0045 00       		.byte	0
 3721 0046 0B       		.uleb128 0xb
 3722 0047 0B       		.uleb128 0xb
 3723 0048 49       		.uleb128 0x49
 3724 0049 13       		.uleb128 0x13
 3725 004a 00       		.byte	0
 3726 004b 00       		.byte	0
 3727 004c 07       		.uleb128 0x7
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 83


 3728 004d 26       		.uleb128 0x26
 3729 004e 00       		.byte	0
 3730 004f 49       		.uleb128 0x49
 3731 0050 13       		.uleb128 0x13
 3732 0051 00       		.byte	0
 3733 0052 00       		.byte	0
 3734 0053 08       		.uleb128 0x8
 3735 0054 01       		.uleb128 0x1
 3736 0055 01       		.byte	0x1
 3737 0056 49       		.uleb128 0x49
 3738 0057 13       		.uleb128 0x13
 3739 0058 01       		.uleb128 0x1
 3740 0059 13       		.uleb128 0x13
 3741 005a 00       		.byte	0
 3742 005b 00       		.byte	0
 3743 005c 09       		.uleb128 0x9
 3744 005d 21       		.uleb128 0x21
 3745 005e 00       		.byte	0
 3746 005f 49       		.uleb128 0x49
 3747 0060 13       		.uleb128 0x13
 3748 0061 2F       		.uleb128 0x2f
 3749 0062 0B       		.uleb128 0xb
 3750 0063 00       		.byte	0
 3751 0064 00       		.byte	0
 3752 0065 0A       		.uleb128 0xa
 3753 0066 13       		.uleb128 0x13
 3754 0067 01       		.byte	0x1
 3755 0068 03       		.uleb128 0x3
 3756 0069 08       		.uleb128 0x8
 3757 006a 0B       		.uleb128 0xb
 3758 006b 0B       		.uleb128 0xb
 3759 006c 3A       		.uleb128 0x3a
 3760 006d 0B       		.uleb128 0xb
 3761 006e 3B       		.uleb128 0x3b
 3762 006f 0B       		.uleb128 0xb
 3763 0070 01       		.uleb128 0x1
 3764 0071 13       		.uleb128 0x13
 3765 0072 00       		.byte	0
 3766 0073 00       		.byte	0
 3767 0074 0B       		.uleb128 0xb
 3768 0075 0D       		.uleb128 0xd
 3769 0076 00       		.byte	0
 3770 0077 03       		.uleb128 0x3
 3771 0078 0E       		.uleb128 0xe
 3772 0079 3A       		.uleb128 0x3a
 3773 007a 0B       		.uleb128 0xb
 3774 007b 3B       		.uleb128 0x3b
 3775 007c 0B       		.uleb128 0xb
 3776 007d 49       		.uleb128 0x49
 3777 007e 13       		.uleb128 0x13
 3778 007f 38       		.uleb128 0x38
 3779 0080 0B       		.uleb128 0xb
 3780 0081 00       		.byte	0
 3781 0082 00       		.byte	0
 3782 0083 0C       		.uleb128 0xc
 3783 0084 13       		.uleb128 0x13
 3784 0085 01       		.byte	0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 84


 3785 0086 0B       		.uleb128 0xb
 3786 0087 05       		.uleb128 0x5
 3787 0088 3A       		.uleb128 0x3a
 3788 0089 0B       		.uleb128 0xb
 3789 008a 3B       		.uleb128 0x3b
 3790 008b 0B       		.uleb128 0xb
 3791 008c 01       		.uleb128 0x1
 3792 008d 13       		.uleb128 0x13
 3793 008e 00       		.byte	0
 3794 008f 00       		.byte	0
 3795 0090 0D       		.uleb128 0xd
 3796 0091 13       		.uleb128 0x13
 3797 0092 01       		.byte	0x1
 3798 0093 0B       		.uleb128 0xb
 3799 0094 0B       		.uleb128 0xb
 3800 0095 3A       		.uleb128 0x3a
 3801 0096 0B       		.uleb128 0xb
 3802 0097 3B       		.uleb128 0x3b
 3803 0098 0B       		.uleb128 0xb
 3804 0099 01       		.uleb128 0x1
 3805 009a 13       		.uleb128 0x13
 3806 009b 00       		.byte	0
 3807 009c 00       		.byte	0
 3808 009d 0E       		.uleb128 0xe
 3809 009e 0D       		.uleb128 0xd
 3810 009f 00       		.byte	0
 3811 00a0 03       		.uleb128 0x3
 3812 00a1 08       		.uleb128 0x8
 3813 00a2 3A       		.uleb128 0x3a
 3814 00a3 0B       		.uleb128 0xb
 3815 00a4 3B       		.uleb128 0x3b
 3816 00a5 0B       		.uleb128 0xb
 3817 00a6 49       		.uleb128 0x49
 3818 00a7 13       		.uleb128 0x13
 3819 00a8 38       		.uleb128 0x38
 3820 00a9 0B       		.uleb128 0xb
 3821 00aa 00       		.byte	0
 3822 00ab 00       		.byte	0
 3823 00ac 0F       		.uleb128 0xf
 3824 00ad 0D       		.uleb128 0xd
 3825 00ae 00       		.byte	0
 3826 00af 03       		.uleb128 0x3
 3827 00b0 0E       		.uleb128 0xe
 3828 00b1 3A       		.uleb128 0x3a
 3829 00b2 0B       		.uleb128 0xb
 3830 00b3 3B       		.uleb128 0x3b
 3831 00b4 0B       		.uleb128 0xb
 3832 00b5 49       		.uleb128 0x49
 3833 00b6 13       		.uleb128 0x13
 3834 00b7 38       		.uleb128 0x38
 3835 00b8 05       		.uleb128 0x5
 3836 00b9 00       		.byte	0
 3837 00ba 00       		.byte	0
 3838 00bb 10       		.uleb128 0x10
 3839 00bc 2E       		.uleb128 0x2e
 3840 00bd 00       		.byte	0
 3841 00be 3F       		.uleb128 0x3f
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 85


 3842 00bf 19       		.uleb128 0x19
 3843 00c0 03       		.uleb128 0x3
 3844 00c1 0E       		.uleb128 0xe
 3845 00c2 3A       		.uleb128 0x3a
 3846 00c3 0B       		.uleb128 0xb
 3847 00c4 3B       		.uleb128 0x3b
 3848 00c5 0B       		.uleb128 0xb
 3849 00c6 27       		.uleb128 0x27
 3850 00c7 19       		.uleb128 0x19
 3851 00c8 11       		.uleb128 0x11
 3852 00c9 01       		.uleb128 0x1
 3853 00ca 12       		.uleb128 0x12
 3854 00cb 06       		.uleb128 0x6
 3855 00cc 40       		.uleb128 0x40
 3856 00cd 18       		.uleb128 0x18
 3857 00ce 9642     		.uleb128 0x2116
 3858 00d0 19       		.uleb128 0x19
 3859 00d1 00       		.byte	0
 3860 00d2 00       		.byte	0
 3861 00d3 11       		.uleb128 0x11
 3862 00d4 2E       		.uleb128 0x2e
 3863 00d5 00       		.byte	0
 3864 00d6 3F       		.uleb128 0x3f
 3865 00d7 19       		.uleb128 0x19
 3866 00d8 03       		.uleb128 0x3
 3867 00d9 0E       		.uleb128 0xe
 3868 00da 3A       		.uleb128 0x3a
 3869 00db 0B       		.uleb128 0xb
 3870 00dc 3B       		.uleb128 0x3b
 3871 00dd 0B       		.uleb128 0xb
 3872 00de 11       		.uleb128 0x11
 3873 00df 01       		.uleb128 0x1
 3874 00e0 12       		.uleb128 0x12
 3875 00e1 06       		.uleb128 0x6
 3876 00e2 40       		.uleb128 0x40
 3877 00e3 18       		.uleb128 0x18
 3878 00e4 9642     		.uleb128 0x2116
 3879 00e6 19       		.uleb128 0x19
 3880 00e7 00       		.byte	0
 3881 00e8 00       		.byte	0
 3882 00e9 12       		.uleb128 0x12
 3883 00ea 2E       		.uleb128 0x2e
 3884 00eb 01       		.byte	0x1
 3885 00ec 3F       		.uleb128 0x3f
 3886 00ed 19       		.uleb128 0x19
 3887 00ee 03       		.uleb128 0x3
 3888 00ef 0E       		.uleb128 0xe
 3889 00f0 3A       		.uleb128 0x3a
 3890 00f1 0B       		.uleb128 0xb
 3891 00f2 3B       		.uleb128 0x3b
 3892 00f3 0B       		.uleb128 0xb
 3893 00f4 49       		.uleb128 0x49
 3894 00f5 13       		.uleb128 0x13
 3895 00f6 11       		.uleb128 0x11
 3896 00f7 01       		.uleb128 0x1
 3897 00f8 12       		.uleb128 0x12
 3898 00f9 06       		.uleb128 0x6
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 86


 3899 00fa 40       		.uleb128 0x40
 3900 00fb 18       		.uleb128 0x18
 3901 00fc 9642     		.uleb128 0x2116
 3902 00fe 19       		.uleb128 0x19
 3903 00ff 01       		.uleb128 0x1
 3904 0100 13       		.uleb128 0x13
 3905 0101 00       		.byte	0
 3906 0102 00       		.byte	0
 3907 0103 13       		.uleb128 0x13
 3908 0104 34       		.uleb128 0x34
 3909 0105 00       		.byte	0
 3910 0106 03       		.uleb128 0x3
 3911 0107 0E       		.uleb128 0xe
 3912 0108 3A       		.uleb128 0x3a
 3913 0109 0B       		.uleb128 0xb
 3914 010a 3B       		.uleb128 0x3b
 3915 010b 0B       		.uleb128 0xb
 3916 010c 49       		.uleb128 0x49
 3917 010d 13       		.uleb128 0x13
 3918 010e 02       		.uleb128 0x2
 3919 010f 18       		.uleb128 0x18
 3920 0110 00       		.byte	0
 3921 0111 00       		.byte	0
 3922 0112 14       		.uleb128 0x14
 3923 0113 0B       		.uleb128 0xb
 3924 0114 01       		.byte	0x1
 3925 0115 11       		.uleb128 0x11
 3926 0116 01       		.uleb128 0x1
 3927 0117 12       		.uleb128 0x12
 3928 0118 06       		.uleb128 0x6
 3929 0119 00       		.byte	0
 3930 011a 00       		.byte	0
 3931 011b 15       		.uleb128 0x15
 3932 011c 2E       		.uleb128 0x2e
 3933 011d 01       		.byte	0x1
 3934 011e 3F       		.uleb128 0x3f
 3935 011f 19       		.uleb128 0x19
 3936 0120 03       		.uleb128 0x3
 3937 0121 0E       		.uleb128 0xe
 3938 0122 3A       		.uleb128 0x3a
 3939 0123 0B       		.uleb128 0xb
 3940 0124 3B       		.uleb128 0x3b
 3941 0125 0B       		.uleb128 0xb
 3942 0126 27       		.uleb128 0x27
 3943 0127 19       		.uleb128 0x19
 3944 0128 49       		.uleb128 0x49
 3945 0129 13       		.uleb128 0x13
 3946 012a 11       		.uleb128 0x11
 3947 012b 01       		.uleb128 0x1
 3948 012c 12       		.uleb128 0x12
 3949 012d 06       		.uleb128 0x6
 3950 012e 40       		.uleb128 0x40
 3951 012f 18       		.uleb128 0x18
 3952 0130 9642     		.uleb128 0x2116
 3953 0132 19       		.uleb128 0x19
 3954 0133 01       		.uleb128 0x1
 3955 0134 13       		.uleb128 0x13
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 87


 3956 0135 00       		.byte	0
 3957 0136 00       		.byte	0
 3958 0137 16       		.uleb128 0x16
 3959 0138 05       		.uleb128 0x5
 3960 0139 00       		.byte	0
 3961 013a 03       		.uleb128 0x3
 3962 013b 0E       		.uleb128 0xe
 3963 013c 3A       		.uleb128 0x3a
 3964 013d 0B       		.uleb128 0xb
 3965 013e 3B       		.uleb128 0x3b
 3966 013f 0B       		.uleb128 0xb
 3967 0140 49       		.uleb128 0x49
 3968 0141 13       		.uleb128 0x13
 3969 0142 02       		.uleb128 0x2
 3970 0143 18       		.uleb128 0x18
 3971 0144 00       		.byte	0
 3972 0145 00       		.byte	0
 3973 0146 17       		.uleb128 0x17
 3974 0147 34       		.uleb128 0x34
 3975 0148 00       		.byte	0
 3976 0149 03       		.uleb128 0x3
 3977 014a 08       		.uleb128 0x8
 3978 014b 3A       		.uleb128 0x3a
 3979 014c 0B       		.uleb128 0xb
 3980 014d 3B       		.uleb128 0x3b
 3981 014e 0B       		.uleb128 0xb
 3982 014f 49       		.uleb128 0x49
 3983 0150 13       		.uleb128 0x13
 3984 0151 02       		.uleb128 0x2
 3985 0152 18       		.uleb128 0x18
 3986 0153 00       		.byte	0
 3987 0154 00       		.byte	0
 3988 0155 18       		.uleb128 0x18
 3989 0156 2E       		.uleb128 0x2e
 3990 0157 01       		.byte	0x1
 3991 0158 3F       		.uleb128 0x3f
 3992 0159 19       		.uleb128 0x19
 3993 015a 03       		.uleb128 0x3
 3994 015b 0E       		.uleb128 0xe
 3995 015c 3A       		.uleb128 0x3a
 3996 015d 0B       		.uleb128 0xb
 3997 015e 3B       		.uleb128 0x3b
 3998 015f 05       		.uleb128 0x5
 3999 0160 27       		.uleb128 0x27
 4000 0161 19       		.uleb128 0x19
 4001 0162 49       		.uleb128 0x49
 4002 0163 13       		.uleb128 0x13
 4003 0164 11       		.uleb128 0x11
 4004 0165 01       		.uleb128 0x1
 4005 0166 12       		.uleb128 0x12
 4006 0167 06       		.uleb128 0x6
 4007 0168 40       		.uleb128 0x40
 4008 0169 18       		.uleb128 0x18
 4009 016a 9642     		.uleb128 0x2116
 4010 016c 19       		.uleb128 0x19
 4011 016d 01       		.uleb128 0x1
 4012 016e 13       		.uleb128 0x13
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 88


 4013 016f 00       		.byte	0
 4014 0170 00       		.byte	0
 4015 0171 19       		.uleb128 0x19
 4016 0172 05       		.uleb128 0x5
 4017 0173 00       		.byte	0
 4018 0174 03       		.uleb128 0x3
 4019 0175 0E       		.uleb128 0xe
 4020 0176 3A       		.uleb128 0x3a
 4021 0177 0B       		.uleb128 0xb
 4022 0178 3B       		.uleb128 0x3b
 4023 0179 05       		.uleb128 0x5
 4024 017a 49       		.uleb128 0x49
 4025 017b 13       		.uleb128 0x13
 4026 017c 02       		.uleb128 0x2
 4027 017d 18       		.uleb128 0x18
 4028 017e 00       		.byte	0
 4029 017f 00       		.byte	0
 4030 0180 1A       		.uleb128 0x1a
 4031 0181 34       		.uleb128 0x34
 4032 0182 00       		.byte	0
 4033 0183 03       		.uleb128 0x3
 4034 0184 08       		.uleb128 0x8
 4035 0185 3A       		.uleb128 0x3a
 4036 0186 0B       		.uleb128 0xb
 4037 0187 3B       		.uleb128 0x3b
 4038 0188 05       		.uleb128 0x5
 4039 0189 49       		.uleb128 0x49
 4040 018a 13       		.uleb128 0x13
 4041 018b 02       		.uleb128 0x2
 4042 018c 18       		.uleb128 0x18
 4043 018d 00       		.byte	0
 4044 018e 00       		.byte	0
 4045 018f 1B       		.uleb128 0x1b
 4046 0190 2E       		.uleb128 0x2e
 4047 0191 00       		.byte	0
 4048 0192 3F       		.uleb128 0x3f
 4049 0193 19       		.uleb128 0x19
 4050 0194 03       		.uleb128 0x3
 4051 0195 0E       		.uleb128 0xe
 4052 0196 3A       		.uleb128 0x3a
 4053 0197 0B       		.uleb128 0xb
 4054 0198 3B       		.uleb128 0x3b
 4055 0199 05       		.uleb128 0x5
 4056 019a 49       		.uleb128 0x49
 4057 019b 13       		.uleb128 0x13
 4058 019c 11       		.uleb128 0x11
 4059 019d 01       		.uleb128 0x1
 4060 019e 12       		.uleb128 0x12
 4061 019f 06       		.uleb128 0x6
 4062 01a0 40       		.uleb128 0x40
 4063 01a1 18       		.uleb128 0x18
 4064 01a2 9642     		.uleb128 0x2116
 4065 01a4 19       		.uleb128 0x19
 4066 01a5 00       		.byte	0
 4067 01a6 00       		.byte	0
 4068 01a7 1C       		.uleb128 0x1c
 4069 01a8 2E       		.uleb128 0x2e
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 89


 4070 01a9 01       		.byte	0x1
 4071 01aa 3F       		.uleb128 0x3f
 4072 01ab 19       		.uleb128 0x19
 4073 01ac 03       		.uleb128 0x3
 4074 01ad 0E       		.uleb128 0xe
 4075 01ae 3A       		.uleb128 0x3a
 4076 01af 0B       		.uleb128 0xb
 4077 01b0 3B       		.uleb128 0x3b
 4078 01b1 05       		.uleb128 0x5
 4079 01b2 49       		.uleb128 0x49
 4080 01b3 13       		.uleb128 0x13
 4081 01b4 11       		.uleb128 0x11
 4082 01b5 01       		.uleb128 0x1
 4083 01b6 12       		.uleb128 0x12
 4084 01b7 06       		.uleb128 0x6
 4085 01b8 40       		.uleb128 0x40
 4086 01b9 18       		.uleb128 0x18
 4087 01ba 9642     		.uleb128 0x2116
 4088 01bc 19       		.uleb128 0x19
 4089 01bd 01       		.uleb128 0x1
 4090 01be 13       		.uleb128 0x13
 4091 01bf 00       		.byte	0
 4092 01c0 00       		.byte	0
 4093 01c1 1D       		.uleb128 0x1d
 4094 01c2 34       		.uleb128 0x34
 4095 01c3 00       		.byte	0
 4096 01c4 03       		.uleb128 0x3
 4097 01c5 0E       		.uleb128 0xe
 4098 01c6 3A       		.uleb128 0x3a
 4099 01c7 0B       		.uleb128 0xb
 4100 01c8 3B       		.uleb128 0x3b
 4101 01c9 05       		.uleb128 0x5
 4102 01ca 49       		.uleb128 0x49
 4103 01cb 13       		.uleb128 0x13
 4104 01cc 02       		.uleb128 0x2
 4105 01cd 18       		.uleb128 0x18
 4106 01ce 00       		.byte	0
 4107 01cf 00       		.byte	0
 4108 01d0 1E       		.uleb128 0x1e
 4109 01d1 2E       		.uleb128 0x2e
 4110 01d2 00       		.byte	0
 4111 01d3 3F       		.uleb128 0x3f
 4112 01d4 19       		.uleb128 0x19
 4113 01d5 03       		.uleb128 0x3
 4114 01d6 0E       		.uleb128 0xe
 4115 01d7 3A       		.uleb128 0x3a
 4116 01d8 0B       		.uleb128 0xb
 4117 01d9 3B       		.uleb128 0x3b
 4118 01da 05       		.uleb128 0x5
 4119 01db 11       		.uleb128 0x11
 4120 01dc 01       		.uleb128 0x1
 4121 01dd 12       		.uleb128 0x12
 4122 01de 06       		.uleb128 0x6
 4123 01df 40       		.uleb128 0x40
 4124 01e0 18       		.uleb128 0x18
 4125 01e1 9642     		.uleb128 0x2116
 4126 01e3 19       		.uleb128 0x19
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 90


 4127 01e4 00       		.byte	0
 4128 01e5 00       		.byte	0
 4129 01e6 1F       		.uleb128 0x1f
 4130 01e7 2E       		.uleb128 0x2e
 4131 01e8 01       		.byte	0x1
 4132 01e9 3F       		.uleb128 0x3f
 4133 01ea 19       		.uleb128 0x19
 4134 01eb 03       		.uleb128 0x3
 4135 01ec 0E       		.uleb128 0xe
 4136 01ed 3A       		.uleb128 0x3a
 4137 01ee 0B       		.uleb128 0xb
 4138 01ef 3B       		.uleb128 0x3b
 4139 01f0 05       		.uleb128 0x5
 4140 01f1 11       		.uleb128 0x11
 4141 01f2 01       		.uleb128 0x1
 4142 01f3 12       		.uleb128 0x12
 4143 01f4 06       		.uleb128 0x6
 4144 01f5 40       		.uleb128 0x40
 4145 01f6 18       		.uleb128 0x18
 4146 01f7 9642     		.uleb128 0x2116
 4147 01f9 19       		.uleb128 0x19
 4148 01fa 01       		.uleb128 0x1
 4149 01fb 13       		.uleb128 0x13
 4150 01fc 00       		.byte	0
 4151 01fd 00       		.byte	0
 4152 01fe 20       		.uleb128 0x20
 4153 01ff 2E       		.uleb128 0x2e
 4154 0200 00       		.byte	0
 4155 0201 3F       		.uleb128 0x3f
 4156 0202 19       		.uleb128 0x19
 4157 0203 03       		.uleb128 0x3
 4158 0204 0E       		.uleb128 0xe
 4159 0205 3A       		.uleb128 0x3a
 4160 0206 0B       		.uleb128 0xb
 4161 0207 3B       		.uleb128 0x3b
 4162 0208 05       		.uleb128 0x5
 4163 0209 49       		.uleb128 0x49
 4164 020a 13       		.uleb128 0x13
 4165 020b 11       		.uleb128 0x11
 4166 020c 01       		.uleb128 0x1
 4167 020d 12       		.uleb128 0x12
 4168 020e 06       		.uleb128 0x6
 4169 020f 40       		.uleb128 0x40
 4170 0210 18       		.uleb128 0x18
 4171 0211 9742     		.uleb128 0x2117
 4172 0213 19       		.uleb128 0x19
 4173 0214 00       		.byte	0
 4174 0215 00       		.byte	0
 4175 0216 21       		.uleb128 0x21
 4176 0217 34       		.uleb128 0x34
 4177 0218 00       		.byte	0
 4178 0219 03       		.uleb128 0x3
 4179 021a 0E       		.uleb128 0xe
 4180 021b 3A       		.uleb128 0x3a
 4181 021c 0B       		.uleb128 0xb
 4182 021d 3B       		.uleb128 0x3b
 4183 021e 05       		.uleb128 0x5
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 91


 4184 021f 49       		.uleb128 0x49
 4185 0220 13       		.uleb128 0x13
 4186 0221 3F       		.uleb128 0x3f
 4187 0222 19       		.uleb128 0x19
 4188 0223 3C       		.uleb128 0x3c
 4189 0224 19       		.uleb128 0x19
 4190 0225 00       		.byte	0
 4191 0226 00       		.byte	0
 4192 0227 22       		.uleb128 0x22
 4193 0228 35       		.uleb128 0x35
 4194 0229 00       		.byte	0
 4195 022a 49       		.uleb128 0x49
 4196 022b 13       		.uleb128 0x13
 4197 022c 00       		.byte	0
 4198 022d 00       		.byte	0
 4199 022e 23       		.uleb128 0x23
 4200 022f 34       		.uleb128 0x34
 4201 0230 00       		.byte	0
 4202 0231 03       		.uleb128 0x3
 4203 0232 0E       		.uleb128 0xe
 4204 0233 3A       		.uleb128 0x3a
 4205 0234 0B       		.uleb128 0xb
 4206 0235 3B       		.uleb128 0x3b
 4207 0236 0B       		.uleb128 0xb
 4208 0237 49       		.uleb128 0x49
 4209 0238 13       		.uleb128 0x13
 4210 0239 3F       		.uleb128 0x3f
 4211 023a 19       		.uleb128 0x19
 4212 023b 02       		.uleb128 0x2
 4213 023c 18       		.uleb128 0x18
 4214 023d 00       		.byte	0
 4215 023e 00       		.byte	0
 4216 023f 24       		.uleb128 0x24
 4217 0240 21       		.uleb128 0x21
 4218 0241 00       		.byte	0
 4219 0242 49       		.uleb128 0x49
 4220 0243 13       		.uleb128 0x13
 4221 0244 2F       		.uleb128 0x2f
 4222 0245 05       		.uleb128 0x5
 4223 0246 00       		.byte	0
 4224 0247 00       		.byte	0
 4225 0248 00       		.byte	0
 4226              		.section	.debug_aranges,"",%progbits
 4227 0000 C4000000 		.4byte	0xc4
 4228 0004 0200     		.2byte	0x2
 4229 0006 00000000 		.4byte	.Ldebug_info0
 4230 000a 04       		.byte	0x4
 4231 000b 00       		.byte	0
 4232 000c 0000     		.2byte	0
 4233 000e 0000     		.2byte	0
 4234 0010 00000000 		.4byte	.LFB64
 4235 0014 44000000 		.4byte	.LFE64-.LFB64
 4236 0018 00000000 		.4byte	.LFB65
 4237 001c 54000000 		.4byte	.LFE65-.LFB65
 4238 0020 00000000 		.4byte	.LFB66
 4239 0024 32000000 		.4byte	.LFE66-.LFB66
 4240 0028 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 92


 4241 002c 20000000 		.4byte	.LFE67-.LFB67
 4242 0030 00000000 		.4byte	.LFB68
 4243 0034 40000000 		.4byte	.LFE68-.LFB68
 4244 0038 00000000 		.4byte	.LFB69
 4245 003c DC000000 		.4byte	.LFE69-.LFB69
 4246 0040 00000000 		.4byte	.LFB70
 4247 0044 1C000000 		.4byte	.LFE70-.LFB70
 4248 0048 00000000 		.4byte	.LFB71
 4249 004c 28000000 		.4byte	.LFE71-.LFB71
 4250 0050 00000000 		.4byte	.LFB72
 4251 0054 C8000000 		.4byte	.LFE72-.LFB72
 4252 0058 00000000 		.4byte	.LFB73
 4253 005c FC000000 		.4byte	.LFE73-.LFB73
 4254 0060 00000000 		.4byte	.LFB74
 4255 0064 78000000 		.4byte	.LFE74-.LFB74
 4256 0068 00000000 		.4byte	.LFB75
 4257 006c 08010000 		.4byte	.LFE75-.LFB75
 4258 0070 00000000 		.4byte	.LFB76
 4259 0074 A0000000 		.4byte	.LFE76-.LFB76
 4260 0078 00000000 		.4byte	.LFB77
 4261 007c 1C000000 		.4byte	.LFE77-.LFB77
 4262 0080 00000000 		.4byte	.LFB78
 4263 0084 28000000 		.4byte	.LFE78-.LFB78
 4264 0088 00000000 		.4byte	.LFB79
 4265 008c B4000000 		.4byte	.LFE79-.LFB79
 4266 0090 00000000 		.4byte	.LFB80
 4267 0094 38010000 		.4byte	.LFE80-.LFB80
 4268 0098 00000000 		.4byte	.LFB81
 4269 009c 44010000 		.4byte	.LFE81-.LFB81
 4270 00a0 00000000 		.4byte	.LFB82
 4271 00a4 14000000 		.4byte	.LFE82-.LFB82
 4272 00a8 00000000 		.4byte	.LFB83
 4273 00ac 1A000000 		.4byte	.LFE83-.LFB83
 4274 00b0 00000000 		.4byte	.LFB84
 4275 00b4 2A000000 		.4byte	.LFE84-.LFB84
 4276 00b8 00000000 		.4byte	.LFB85
 4277 00bc 7C020000 		.4byte	.LFE85-.LFB85
 4278 00c0 00000000 		.4byte	0
 4279 00c4 00000000 		.4byte	0
 4280              		.section	.debug_ranges,"",%progbits
 4281              	.Ldebug_ranges0:
 4282 0000 00000000 		.4byte	.LFB64
 4283 0004 44000000 		.4byte	.LFE64
 4284 0008 00000000 		.4byte	.LFB65
 4285 000c 54000000 		.4byte	.LFE65
 4286 0010 00000000 		.4byte	.LFB66
 4287 0014 32000000 		.4byte	.LFE66
 4288 0018 00000000 		.4byte	.LFB67
 4289 001c 20000000 		.4byte	.LFE67
 4290 0020 00000000 		.4byte	.LFB68
 4291 0024 40000000 		.4byte	.LFE68
 4292 0028 00000000 		.4byte	.LFB69
 4293 002c DC000000 		.4byte	.LFE69
 4294 0030 00000000 		.4byte	.LFB70
 4295 0034 1C000000 		.4byte	.LFE70
 4296 0038 00000000 		.4byte	.LFB71
 4297 003c 28000000 		.4byte	.LFE71
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 93


 4298 0040 00000000 		.4byte	.LFB72
 4299 0044 C8000000 		.4byte	.LFE72
 4300 0048 00000000 		.4byte	.LFB73
 4301 004c FC000000 		.4byte	.LFE73
 4302 0050 00000000 		.4byte	.LFB74
 4303 0054 78000000 		.4byte	.LFE74
 4304 0058 00000000 		.4byte	.LFB75
 4305 005c 08010000 		.4byte	.LFE75
 4306 0060 00000000 		.4byte	.LFB76
 4307 0064 A0000000 		.4byte	.LFE76
 4308 0068 00000000 		.4byte	.LFB77
 4309 006c 1C000000 		.4byte	.LFE77
 4310 0070 00000000 		.4byte	.LFB78
 4311 0074 28000000 		.4byte	.LFE78
 4312 0078 00000000 		.4byte	.LFB79
 4313 007c B4000000 		.4byte	.LFE79
 4314 0080 00000000 		.4byte	.LFB80
 4315 0084 38010000 		.4byte	.LFE80
 4316 0088 00000000 		.4byte	.LFB81
 4317 008c 44010000 		.4byte	.LFE81
 4318 0090 00000000 		.4byte	.LFB82
 4319 0094 14000000 		.4byte	.LFE82
 4320 0098 00000000 		.4byte	.LFB83
 4321 009c 1A000000 		.4byte	.LFE83
 4322 00a0 00000000 		.4byte	.LFB84
 4323 00a4 2A000000 		.4byte	.LFE84
 4324 00a8 00000000 		.4byte	.LFB85
 4325 00ac 7C020000 		.4byte	.LFE85
 4326 00b0 00000000 		.4byte	0
 4327 00b4 00000000 		.4byte	0
 4328              		.section	.debug_line,"",%progbits
 4329              	.Ldebug_line0:
 4330 0000 ED040000 		.section	.debug_str,"MS",%progbits,1
 4330      0200EF01 
 4330      00000201 
 4330      FB0E0D00 
 4330      01010101 
 4331              	.LASF110:
 4332 0000 676D745F 		.ascii	"gmt_offset\000"
 4332      6F666673 
 4332      657400
 4333              	.LASF16:
 4334 000b 75696E74 		.ascii	"uint16\000"
 4334      313600
 4335              	.LASF53:
 4336 0012 76616C75 		.ascii	"value\000"
 4336      6500
 4337              	.LASF27:
 4338 0018 746D5F68 		.ascii	"tm_hour\000"
 4338      6F757200 
 4339              	.LASF32:
 4340 0020 746D5F79 		.ascii	"tm_yday\000"
 4340      64617900 
 4341              	.LASF4:
 4342 0028 5F5F7569 		.ascii	"__uint8_t\000"
 4342      6E74385F 
 4342      7400
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 94


 4343              	.LASF48:
 4344 0032 6C6F6E67 		.ascii	"longitude\000"
 4344      69747564 
 4344      6500
 4345              	.LASF132:
 4346 003c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4346      43313120 
 4346      352E342E 
 4346      31203230 
 4346      31363036 
 4347 006f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4347      20726576 
 4347      6973696F 
 4347      6E203233 
 4347      37373135 
 4348 00a2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4348      66756E63 
 4348      74696F6E 
 4348      2D736563 
 4348      74696F6E 
 4349              	.LASF113:
 4350 00ca 6D6F6465 		.ascii	"modem_wakeup\000"
 4350      6D5F7761 
 4350      6B657570 
 4350      00
 4351              	.LASF10:
 4352 00d7 6C6F6E67 		.ascii	"long long unsigned int\000"
 4352      206C6F6E 
 4352      6720756E 
 4352      7369676E 
 4352      65642069 
 4353              	.LASF119:
 4354 00ee 6D6F6465 		.ascii	"modem_state\000"
 4354      6D5F7374 
 4354      61746500 
 4355              	.LASF85:
 4356 00fa 74657374 		.ascii	"test\000"
 4356      00
 4357              	.LASF118:
 4358 00ff 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4358      52784275 
 4358      66666572 
 4358      00
 4359              	.LASF121:
 4360 010c 6D6F6465 		.ascii	"modem_stats\000"
 4360      6D5F7374 
 4360      61747300 
 4361              	.LASF9:
 4362 0118 6C6F6E67 		.ascii	"long long int\000"
 4362      206C6F6E 
 4362      6720696E 
 4362      7400
 4363              	.LASF0:
 4364 0126 7369676E 		.ascii	"signed char\000"
 4364      65642063 
 4364      68617200 
 4365              	.LASF44:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 95


 4366 0132 74696D65 		.ascii	"time_to_network_connect\000"
 4366      5F746F5F 
 4366      6E657477 
 4366      6F726B5F 
 4366      636F6E6E 
 4367              	.LASF126:
 4368 014a 68747470 		.ascii	"http_body\000"
 4368      5F626F64 
 4368      7900
 4369              	.LASF97:
 4370 0154 7365745F 		.ascii	"set_up_internet_connection\000"
 4370      75705F69 
 4370      6E746572 
 4370      6E65745F 
 4370      636F6E6E 
 4371              	.LASF109:
 4372 016f 7365636F 		.ascii	"second\000"
 4372      6E6400
 4373              	.LASF105:
 4374 0176 79656172 		.ascii	"year\000"
 4374      00
 4375              	.LASF6:
 4376 017b 6C6F6E67 		.ascii	"long int\000"
 4376      20696E74 
 4376      00
 4377              	.LASF111:
 4378 0184 6D6F6465 		.ascii	"modem_get_state\000"
 4378      6D5F6765 
 4378      745F7374 
 4378      61746500 
 4379              	.LASF49:
 4380 0194 616C7469 		.ascii	"altitude\000"
 4380      74756465 
 4380      00
 4381              	.LASF15:
 4382 019d 75696E74 		.ascii	"uint8\000"
 4382      3800
 4383              	.LASF59:
 4384 01a3 6E6F6465 		.ascii	"node_id\000"
 4384      5F696400 
 4385              	.LASF21:
 4386 01ab 646F7562 		.ascii	"double\000"
 4386      6C6500
 4387              	.LASF19:
 4388 01b2 696E7433 		.ascii	"int32\000"
 4388      3200
 4389              	.LASF101:
 4390 01b8 6D6F6465 		.ascii	"modem_configure_settings\000"
 4390      6D5F636F 
 4390      6E666967 
 4390      7572655F 
 4390      73657474 
 4391              	.LASF86:
 4392 01d1 6E657477 		.ascii	"network_time\000"
 4392      6F726B5F 
 4392      74696D65 
 4392      00
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 96


 4393              	.LASF3:
 4394 01de 73686F72 		.ascii	"short unsigned int\000"
 4394      7420756E 
 4394      7369676E 
 4394      65642069 
 4394      6E7400
 4395              	.LASF17:
 4396 01f1 75696E74 		.ascii	"uint32\000"
 4396      333200
 4397              	.LASF82:
 4398 01f8 696E7465 		.ascii	"interval\000"
 4398      7276616C 
 4398      00
 4399              	.LASF7:
 4400 0201 5F5F7569 		.ascii	"__uint32_t\000"
 4400      6E743332 
 4400      5F7400
 4401              	.LASF103:
 4402 020c 6D6F6465 		.ascii	"modem_get_network_time\000"
 4402      6D5F6765 
 4402      745F6E65 
 4402      74776F72 
 4402      6B5F7469 
 4403              	.LASF29:
 4404 0223 746D5F6D 		.ascii	"tm_mon\000"
 4404      6F6E00
 4405              	.LASF63:
 4406 022a 65705F70 		.ascii	"ep_pswd\000"
 4406      73776400 
 4407              	.LASF112:
 4408 0232 6D6F6465 		.ascii	"modem_sleep\000"
 4408      6D5F736C 
 4408      65657000 
 4409              	.LASF30:
 4410 023e 746D5F79 		.ascii	"tm_year\000"
 4410      65617200 
 4411              	.LASF106:
 4412 0246 6D6F6E74 		.ascii	"month\000"
 4412      6800
 4413              	.LASF68:
 4414 024c 70696E73 		.ascii	"pins_configure_active\000"
 4414      5F636F6E 
 4414      66696775 
 4414      72655F61 
 4414      63746976 
 4415              	.LASF55:
 4416 0262 6B65795F 		.ascii	"key_value_t\000"
 4416      76616C75 
 4416      655F7400 
 4417              	.LASF73:
 4418 026e 7077725F 		.ascii	"pwr_check\000"
 4418      63686563 
 4418      6B00
 4419              	.LASF8:
 4420 0278 6C6F6E67 		.ascii	"long unsigned int\000"
 4420      20756E73 
 4420      69676E65 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 97


 4420      6420696E 
 4420      7400
 4421              	.LASF88:
 4422 028a 65787472 		.ascii	"extract_string\000"
 4422      6163745F 
 4422      73747269 
 4422      6E6700
 4423              	.LASF78:
 4424 0299 74696D65 		.ascii	"timeout\000"
 4424      6F757400 
 4425              	.LASF100:
 4426 02a1 6765745F 		.ascii	"get_cell_network_stats\000"
 4426      63656C6C 
 4426      5F6E6574 
 4426      776F726B 
 4426      5F737461 
 4427              	.LASF50:
 4428 02b8 74696D65 		.ascii	"time_to_lock\000"
 4428      5F746F5F 
 4428      6C6F636B 
 4428      00
 4429              	.LASF124:
 4430 02c5 64617461 		.ascii	"data\000"
 4430      00
 4431              	.LASF62:
 4432 02ca 65705F75 		.ascii	"ep_user\000"
 4432      73657200 
 4433              	.LASF61:
 4434 02d2 65705F70 		.ascii	"ep_port\000"
 4434      6F727400 
 4435              	.LASF33:
 4436 02da 746D5F69 		.ascii	"tm_isdst\000"
 4436      73647374 
 4436      00
 4437              	.LASF56:
 4438 02e3 6D6F6465 		.ascii	"modem_info\000"
 4438      6D5F696E 
 4438      666F00
 4439              	.LASF60:
 4440 02ee 65705F68 		.ascii	"ep_host\000"
 4440      6F737400 
 4441              	.LASF83:
 4442 02f6 6D6F6465 		.ascii	"modem_power_up\000"
 4442      6D5F706F 
 4442      7765725F 
 4442      757000
 4443              	.LASF133:
 4444 0305 6D6F6465 		.ascii	"modem.c\000"
 4444      6D2E6300 
 4445              	.LASF90:
 4446 030d 62656769 		.ascii	"beginMarker\000"
 4446      6E4D6172 
 4446      6B657200 
 4447              	.LASF92:
 4448 0319 74617267 		.ascii	"target\000"
 4448      657400
 4449              	.LASF45:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 98


 4450 0320 74696D65 		.ascii	"time_to_acquire_ip\000"
 4450      5F746F5F 
 4450      61637175 
 4450      6972655F 
 4450      697000
 4451              	.LASF91:
 4452 0333 656E644D 		.ascii	"endMarker\000"
 4452      61726B65 
 4452      7200
 4453              	.LASF2:
 4454 033d 73686F72 		.ascii	"short int\000"
 4454      7420696E 
 4454      7400
 4455              	.LASF104:
 4456 0347 65706F63 		.ascii	"epoch_time\000"
 4456      685F7469 
 4456      6D6500
 4457              	.LASF5:
 4458 0352 5F5F696E 		.ascii	"__int32_t\000"
 4458      7433325F 
 4458      7400
 4459              	.LASF89:
 4460 035c 66726F6D 		.ascii	"from\000"
 4460      00
 4461              	.LASF96:
 4462 0361 63726567 		.ascii	"creg\000"
 4462      00
 4463              	.LASF79:
 4464 0366 61745F61 		.ascii	"at_attempt\000"
 4464      7474656D 
 4464      707400
 4465              	.LASF87:
 4466 0371 61745F77 		.ascii	"at_write_command\000"
 4466      72697465 
 4466      5F636F6D 
 4466      6D616E64 
 4466      00
 4467              	.LASF58:
 4468 0382 7379735F 		.ascii	"sys_info_t\000"
 4468      696E666F 
 4468      5F7400
 4469              	.LASF122:
 4470 038d 64617461 		.ascii	"dataPointsInStack\000"
 4470      506F696E 
 4470      7473496E 
 4470      53746163 
 4470      6B00
 4471              	.LASF114:
 4472 039f 6D6F6465 		.ascii	"modem_get_gps_coordinates\000"
 4472      6D5F6765 
 4472      745F6770 
 4472      735F636F 
 4472      6F726469 
 4473              	.LASF26:
 4474 03b9 746D5F6D 		.ascii	"tm_min\000"
 4474      696E00
 4475              	.LASF24:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 99


 4476 03c0 73697A65 		.ascii	"sizetype\000"
 4476      74797065 
 4476      00
 4477              	.LASF95:
 4478 03c9 69735F63 		.ascii	"is_connected_to_cell_network\000"
 4478      6F6E6E65 
 4478      63746564 
 4478      5F746F5F 
 4478      63656C6C 
 4479              	.LASF130:
 4480 03e6 75617274 		.ascii	"uart_received_string\000"
 4480      5F726563 
 4480      65697665 
 4480      645F7374 
 4480      72696E67 
 4481              	.LASF47:
 4482 03fb 6C617469 		.ascii	"latitude\000"
 4482      74756465 
 4482      00
 4483              	.LASF34:
 4484 0404 74657374 		.ascii	"test_name\000"
 4484      5F6E616D 
 4484      6500
 4485              	.LASF84:
 4486 040e 6D6F6465 		.ascii	"modem_test\000"
 4486      6D5F7465 
 4486      737400
 4487              	.LASF117:
 4488 0419 6D617463 		.ascii	"match\000"
 4488      6800
 4489              	.LASF107:
 4490 041f 686F7572 		.ascii	"hour\000"
 4490      00
 4491              	.LASF76:
 4492 0424 636F6D6D 		.ascii	"commands\000"
 4492      616E6473 
 4492      00
 4493              	.LASF80:
 4494 042d 636F6D70 		.ascii	"compare_location\000"
 4494      6172655F 
 4494      6C6F6361 
 4494      74696F6E 
 4494      00
 4495              	.LASF20:
 4496 043e 666C6F61 		.ascii	"float\000"
 4496      7400
 4497              	.LASF66:
 4498 0444 6D6F6465 		.ascii	"modem_initialize\000"
 4498      6D5F696E 
 4498      69746961 
 4498      6C697A65 
 4498      00
 4499              	.LASF99:
 4500 0455 746F6B65 		.ascii	"token\000"
 4500      6E00
 4501              	.LASF93:
 4502 045b 6973725F 		.ascii	"isr_telit_rx\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 100


 4502      74656C69 
 4502      745F7278 
 4502      00
 4503              	.LASF13:
 4504 0468 696E7433 		.ascii	"int32_t\000"
 4504      325F7400 
 4505              	.LASF1:
 4506 0470 756E7369 		.ascii	"unsigned char\000"
 4506      676E6564 
 4506      20636861 
 4506      7200
 4507              	.LASF129:
 4508 047e 73797374 		.ascii	"system_settings\000"
 4508      656D5F73 
 4508      65747469 
 4508      6E677300 
 4509              	.LASF81:
 4510 048e 64656C61 		.ascii	"delay\000"
 4510      7900
 4511              	.LASF43:
 4512 0494 72737271 		.ascii	"rsrq\000"
 4512      00
 4513              	.LASF134:
 4514 0499 433A5C55 		.ascii	"C:\\Users\\hail\\Desktop\\Brooke Research\\notoriOS"
 4514      73657273 
 4514      5C686169 
 4514      6C5C4465 
 4514      736B746F 
 4515 04c7 5C6E6F74 		.ascii	"\\notoriOS\\notoriOS\\notoriOS.cydsn\000"
 4515      6F72694F 
 4515      535C6E6F 
 4515      746F7269 
 4515      4F535C6E 
 4516              	.LASF37:
 4517 04e9 74657374 		.ascii	"test_t\000"
 4517      5F7400
 4518              	.LASF128:
 4519 04f0 73797374 		.ascii	"system_info\000"
 4519      656D5F69 
 4519      6E666F00 
 4520              	.LASF40:
 4521 04fc 696D6569 		.ascii	"imei\000"
 4521      00
 4522              	.LASF36:
 4523 0501 72656173 		.ascii	"reason\000"
 4523      6F6E00
 4524              	.LASF46:
 4525 0508 6D6F6465 		.ascii	"modem_stats_t\000"
 4525      6D5F7374 
 4525      6174735F 
 4525      7400
 4526              	.LASF75:
 4527 0516 75617274 		.ascii	"uart_string_reset\000"
 4527      5F737472 
 4527      696E675F 
 4527      72657365 
 4527      7400
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 101


 4528              	.LASF31:
 4529 0528 746D5F77 		.ascii	"tm_wday\000"
 4529      64617900 
 4530              	.LASF74:
 4531 0530 6D6F6465 		.ascii	"modem_soft_power_cycle\000"
 4531      6D5F736F 
 4531      66745F70 
 4531      6F776572 
 4531      5F637963 
 4532              	.LASF23:
 4533 0547 6C6F6E67 		.ascii	"long double\000"
 4533      20646F75 
 4533      626C6500 
 4534              	.LASF22:
 4535 0553 63686172 		.ascii	"char\000"
 4535      00
 4536              	.LASF94:
 4537 0558 6D6F6465 		.ascii	"modem_process_tasks\000"
 4537      6D5F7072 
 4537      6F636573 
 4537      735F7461 
 4537      736B7300 
 4538              	.LASF11:
 4539 056c 756E7369 		.ascii	"unsigned int\000"
 4539      676E6564 
 4539      20696E74 
 4539      00
 4540              	.LASF102:
 4541 0579 4346554E 		.ascii	"CFUN\000"
 4541      00
 4542              	.LASF39:
 4543 057e 6D6F6465 		.ascii	"model_id\000"
 4543      6C5F6964 
 4543      00
 4544              	.LASF127:
 4545 0587 68747470 		.ascii	"http_route\000"
 4545      5F726F75 
 4545      746500
 4546              	.LASF41:
 4547 0592 6D6F6465 		.ascii	"modem_info_t\000"
 4547      6D5F696E 
 4547      666F5F74 
 4547      00
 4548              	.LASF52:
 4549 059f 6770735F 		.ascii	"gps_t\000"
 4549      7400
 4550              	.LASF131:
 4551 05a5 75617274 		.ascii	"uart_string_index\000"
 4551      5F737472 
 4551      696E675F 
 4551      696E6465 
 4551      7800
 4552              	.LASF98:
 4553 05b7 69735F63 		.ascii	"is_connected_to_internet\000"
 4553      6F6E6E65 
 4553      63746564 
 4553      5F746F5F 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 102


 4553      696E7465 
 4554              	.LASF120:
 4555 05d0 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 4555      6D5F7374 
 4555      6172745F 
 4555      74696D65 
 4555      5F737461 
 4556              	.LASF116:
 4557 05e7 6770735F 		.ascii	"gps_status\000"
 4557      73746174 
 4557      757300
 4558              	.LASF67:
 4559 05f2 70696E73 		.ascii	"pins_configure_inactive\000"
 4559      5F636F6E 
 4559      66696775 
 4559      72655F69 
 4559      6E616374 
 4560              	.LASF38:
 4561 060a 73696D5F 		.ascii	"sim_id\000"
 4561      696400
 4562              	.LASF57:
 4563 0611 63686970 		.ascii	"chip_uniqueId\000"
 4563      5F756E69 
 4563      71756549 
 4563      6400
 4564              	.LASF28:
 4565 061f 746D5F6D 		.ascii	"tm_mday\000"
 4565      64617900 
 4566              	.LASF51:
 4567 0627 76616C69 		.ascii	"valid\000"
 4567      6400
 4568              	.LASF108:
 4569 062d 6D696E75 		.ascii	"minute\000"
 4569      746500
 4570              	.LASF14:
 4571 0634 75696E74 		.ascii	"uint32_t\000"
 4571      33325F74 
 4571      00
 4572              	.LASF25:
 4573 063d 746D5F73 		.ascii	"tm_sec\000"
 4573      656300
 4574              	.LASF35:
 4575 0644 73746174 		.ascii	"status\000"
 4575      757300
 4576              	.LASF123:
 4577 064b 64617461 		.ascii	"dataPointsInStackDesired\000"
 4577      506F696E 
 4577      7473496E 
 4577      53746163 
 4577      6B446573 
 4578              	.LASF65:
 4579 0664 7379735F 		.ascii	"sys_settings_t\000"
 4579      73657474 
 4579      696E6773 
 4579      5F7400
 4580              	.LASF12:
 4581 0673 75696E74 		.ascii	"uint8_t\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccg0QhJa.s 			page 103


 4581      385F7400 
 4582              	.LASF64:
 4583 067b 65705F64 		.ascii	"ep_database\000"
 4583      61746162 
 4583      61736500 
 4584              	.LASF18:
 4585 0687 696E7431 		.ascii	"int16\000"
 4585      3600
 4586              	.LASF70:
 4587 068d 61745F72 		.ascii	"at_ready\000"
 4587      65616479 
 4587      00
 4588              	.LASF71:
 4589 0696 61747465 		.ascii	"attempts\000"
 4589      6D707473 
 4589      00
 4590              	.LASF72:
 4591 069f 626F6F74 		.ascii	"boot_time\000"
 4591      5F74696D 
 4591      6500
 4592              	.LASF77:
 4593 06a9 65787065 		.ascii	"expected_response\000"
 4593      63746564 
 4593      5F726573 
 4593      706F6E73 
 4593      6500
 4594              	.LASF42:
 4595 06bb 72737369 		.ascii	"rssi\000"
 4595      00
 4596              	.LASF115:
 4597 06c0 6C6F636B 		.ascii	"lock_time\000"
 4597      5F74696D 
 4597      6500
 4598              	.LASF125:
 4599 06ca 68747470 		.ascii	"http_request\000"
 4599      5F726571 
 4599      75657374 
 4599      00
 4600              	.LASF69:
 4601 06d7 6D6F6465 		.ascii	"modem_power_down\000"
 4601      6D5F706F 
 4601      7765725F 
 4601      646F776E 
 4601      00
 4602              	.LASF54:
 4603 06e8 74696D65 		.ascii	"timeStamp\000"
 4603      5374616D 
 4603      7000
 4604              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
