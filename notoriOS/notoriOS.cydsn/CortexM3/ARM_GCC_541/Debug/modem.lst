ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"modem.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	modem_state,1,1
  20              		.comm	modem_start_time_stamp,4,4
  21              		.comm	modem_info,60,4
  22              		.comm	modem_stats,12,4
  23              		.syntax unified
  24              		.global _printf_float
  25              		.thumb
  26              		.syntax unified
  27              		.comm	dataPointsInStack,2,2
  28              		.comm	dataPointsInStackPointer,4,4
  29              		.comm	data,2200,4
  30              		.comm	http_request,4000,4
  31              		.comm	http_body,4000,4
  32              		.comm	http_route,200,4
  33              		.comm	system_info,28,4
  34              		.comm	system_settings,324,4
  35              		.comm	uart_received_string,1024,4
  36              		.global	uart_string_index
  37              		.bss
  38              		.type	uart_string_index, %object
  39              		.size	uart_string_index, 1
  40              	uart_string_index:
  41 0000 00       		.space	1
  42              		.section	.text.isr_telit_rx,"ax",%progbits
  43              		.align	2
  44              		.global	isr_telit_rx
  45              		.thumb
  46              		.thumb_func
  47              		.type	isr_telit_rx, %function
  48              	isr_telit_rx:
  49              	.LFB64:
  50              		.file 1 "modem.c"
   1:modem.c       **** //Methods for Telit modem 
   2:modem.c       **** #include "modem.h"
   3:modem.c       **** #include "notoriOS.h"
   4:modem.c       **** #include "debug.h"
   5:modem.c       **** #include <math.h>
   6:modem.c       **** #include <stdio.h>
   7:modem.c       **** 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 2


   8:modem.c       **** char uart_received_string[1024];
   9:modem.c       **** uint8_t uart_string_index=0;
  10:modem.c       **** 
  11:modem.c       **** #define DEFAULT_AT_TIMEOUT 2000u // Send command and wait 2000 ms
  12:modem.c       **** #define NO_AT_TIMEOUT 0u // Send command, no timeout/ don't wait 
  13:modem.c       **** 
  14:modem.c       **** #define TIMEOUT_NETWORK_CONNECT 200 //seconds
  15:modem.c       **** #define TIMEOUT_IP_ACQUIRE 230 //seconds (cummulatinve) add to TIMEOUT_NETWORK_CONNECT
  16:modem.c       **** 
  17:modem.c       **** CY_ISR_PROTO(isr_telit_rx); // Declares a custom ISR function "isr_telit_rx" using the CY_ISR_PROTO
  18:modem.c       **** 
  19:modem.c       **** // Define the custom ISR function "isr_telit_rx" using the CY_ISR macro
  20:modem.c       **** // Get each character from Telit and saves it to uart_received_string
  21:modem.c       **** CY_ISR(isr_telit_rx){      
  51              		.loc 1 21 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 1, uses_anonymous_args = 0
  55 0000 98B5     		push	{r3, r4, r7, lr}
  56              		.cfi_def_cfa_offset 16
  57              		.cfi_offset 3, -16
  58              		.cfi_offset 4, -12
  59              		.cfi_offset 7, -8
  60              		.cfi_offset 14, -4
  61 0002 00AF     		add	r7, sp, #0
  62              		.cfi_def_cfa_register 7
  22:modem.c       ****     // UART_Telit_GetRxBufferSize() returns the number of received bytes available in the RX buffer
  23:modem.c       ****     while(UART_Telit_GetRxBufferSize()==1){
  63              		.loc 1 23 0
  64 0004 0EE0     		b	.L2
  65              	.L3:
  24:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  66              		.loc 1 24 0
  67 0006 0B4B     		ldr	r3, .L4
  68 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  69 000a 1C46     		mov	r4, r3
  70 000c FFF7FEFF 		bl	UART_Telit_GetChar
  71 0010 0346     		mov	r3, r0
  72 0012 1A46     		mov	r2, r3
  73 0014 084B     		ldr	r3, .L4+4
  74 0016 1A55     		strb	r2, [r3, r4]
  25:modem.c       ****         uart_string_index++;
  75              		.loc 1 25 0
  76 0018 064B     		ldr	r3, .L4
  77 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  78 001c 0133     		adds	r3, r3, #1
  79 001e DAB2     		uxtb	r2, r3
  80 0020 044B     		ldr	r3, .L4
  81 0022 1A70     		strb	r2, [r3]
  82              	.L2:
  23:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  83              		.loc 1 23 0
  84 0024 FFF7FEFF 		bl	UART_Telit_GetRxBufferSize
  85 0028 0346     		mov	r3, r0
  86 002a 012B     		cmp	r3, #1
  87 002c EBD0     		beq	.L3
  26:modem.c       ****     }
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 3


  27:modem.c       **** 
  28:modem.c       **** }
  88              		.loc 1 28 0
  89 002e 00BF     		nop
  90 0030 98BD     		pop	{r3, r4, r7, pc}
  91              	.L5:
  92 0032 00BF     		.align	2
  93              	.L4:
  94 0034 00000000 		.word	uart_string_index
  95 0038 00000000 		.word	uart_received_string
  96              		.cfi_endproc
  97              	.LFE64:
  98              		.size	isr_telit_rx, .-isr_telit_rx
  99              		.section	.text.modem_intilize,"ax",%progbits
 100              		.align	2
 101              		.global	modem_intilize
 102              		.thumb
 103              		.thumb_func
 104              		.type	modem_intilize, %function
 105              	modem_intilize:
 106              	.LFB65:
  29:modem.c       **** 
  30:modem.c       **** // Initialize the modem
  31:modem.c       **** void modem_intilize(){
 107              		.loc 1 31 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 1, uses_anonymous_args = 0
 111 0000 80B5     		push	{r7, lr}
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 7, -8
 114              		.cfi_offset 14, -4
 115 0002 00AF     		add	r7, sp, #0
 116              		.cfi_def_cfa_register 7
  32:modem.c       ****     // Don't do much except make sure that all the modem pins are pulled low
  33:modem.c       ****     // Also make sure that the TX PIN is fully disabled
  34:modem.c       ****     pins_configure_inactive();
 117              		.loc 1 34 0
 118 0004 FFF7FEFF 		bl	pins_configure_inactive
  35:modem.c       ****     modem_state = 0;
 119              		.loc 1 35 0
 120 0008 0F4B     		ldr	r3, .L7
 121 000a 0022     		movs	r2, #0
 122 000c 1A70     		strb	r2, [r3]
  36:modem.c       ****     //initilize states
  37:modem.c       ****     modem_info.imei[0] = '\0';
 123              		.loc 1 37 0
 124 000e 0F4B     		ldr	r3, .L7+4
 125 0010 0022     		movs	r2, #0
 126 0012 83F82820 		strb	r2, [r3, #40]
  38:modem.c       ****     modem_info.model_id[0] = '\0';
 127              		.loc 1 38 0
 128 0016 0D4B     		ldr	r3, .L7+4
 129 0018 0022     		movs	r2, #0
 130 001a 1A75     		strb	r2, [r3, #20]
  39:modem.c       ****     modem_info.sim_id[0] = '\0';
 131              		.loc 1 39 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 4


 132 001c 0B4B     		ldr	r3, .L7+4
 133 001e 0022     		movs	r2, #0
 134 0020 1A70     		strb	r2, [r3]
  40:modem.c       ****     modem_stats.sq = 0;
 135              		.loc 1 40 0
 136 0022 0B4B     		ldr	r3, .L7+8
 137 0024 0022     		movs	r2, #0
 138 0026 5A70     		strb	r2, [r3, #1]
  41:modem.c       ****     modem_stats.rssi = 0;
 139              		.loc 1 41 0
 140 0028 094B     		ldr	r3, .L7+8
 141 002a 0022     		movs	r2, #0
 142 002c 1A70     		strb	r2, [r3]
  42:modem.c       ****     modem_stats.time_to_acquire_ip = 0;
 143              		.loc 1 42 0
 144 002e 084B     		ldr	r3, .L7+8
 145 0030 0022     		movs	r2, #0
 146 0032 9A60     		str	r2, [r3, #8]
  43:modem.c       ****     modem_stats.time_to_network_connect = 0;
 147              		.loc 1 43 0
 148 0034 064B     		ldr	r3, .L7+8
 149 0036 0022     		movs	r2, #0
 150 0038 5A60     		str	r2, [r3, #4]
  44:modem.c       ****     // Disable the RX Pin interrupt, and only enable it during long timeouts
  45:modem.c       ****     // Rx_Telit_SetInterruptMode(): Configures the interrupt mode for each of the Pins component's 
  46:modem.c       ****     // Rx_Telit_0_INTR selects the first pin in the list, and Rx_Telit_INTR_NONE disables the Rx pi
  47:modem.c       ****     Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 151              		.loc 1 47 0
 152 003a 0021     		movs	r1, #0
 153 003c 4020     		movs	r0, #64
 154 003e FFF7FEFF 		bl	Rx_Telit_SetInterruptMode
  48:modem.c       ****     
  49:modem.c       **** }
 155              		.loc 1 49 0
 156 0042 00BF     		nop
 157 0044 80BD     		pop	{r7, pc}
 158              	.L8:
 159 0046 00BF     		.align	2
 160              	.L7:
 161 0048 00000000 		.word	modem_state
 162 004c 00000000 		.word	modem_info
 163 0050 00000000 		.word	modem_stats
 164              		.cfi_endproc
 165              	.LFE65:
 166              		.size	modem_intilize, .-modem_intilize
 167              		.section	.text.pins_configure_inactive,"ax",%progbits
 168              		.align	2
 169              		.global	pins_configure_inactive
 170              		.thumb
 171              		.thumb_func
 172              		.type	pins_configure_inactive, %function
 173              	pins_configure_inactive:
 174              	.LFB66:
  50:modem.c       **** 
  51:modem.c       **** 
  52:modem.c       **** // To be used when the modem power is to be "killed" conpletely to conserve power
  53:modem.c       **** void pins_configure_inactive(){
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 5


 175              		.loc 1 53 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 0000 80B5     		push	{r7, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
  54:modem.c       ****    
  55:modem.c       ****    Telit_ControlReg_Write(0u); // Physically disconect UART pin
 185              		.loc 1 55 0
 186 0004 0020     		movs	r0, #0
 187 0006 FFF7FEFF 		bl	Telit_ControlReg_Write
  56:modem.c       ****    Rx_Telit_SetDriveMode(PIN_DM_STRONG); // Set drive mode
 188              		.loc 1 56 0
 189 000a 0C20     		movs	r0, #12
 190 000c FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  57:modem.c       **** 
  58:modem.c       ****    Pin_Telit_pwr_Write(OFF); // Kill power to modem (pulls pin low).
 191              		.loc 1 58 0
 192 0010 0020     		movs	r0, #0
 193 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  59:modem.c       **** 
  60:modem.c       ****    // Pull down all of these, just in case (turns the off).
  61:modem.c       ****    Rx_Telit_Write(OFF); 
 194              		.loc 1 61 0
 195 0016 0020     		movs	r0, #0
 196 0018 FFF7FEFF 		bl	Rx_Telit_Write
  62:modem.c       ****    Tx_Telit_Write(OFF);
 197              		.loc 1 62 0
 198 001c 0020     		movs	r0, #0
 199 001e FFF7FEFF 		bl	Tx_Telit_Write
  63:modem.c       ****    Pin_Telit_ONOFF_Write(OFF);
 200              		.loc 1 63 0
 201 0022 0020     		movs	r0, #0
 202 0024 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
  64:modem.c       ****    Pin_Telit_SWRDY_Write(OFF);
 203              		.loc 1 64 0
 204 0028 0020     		movs	r0, #0
 205 002a FFF7FEFF 		bl	Pin_Telit_SWRDY_Write
  65:modem.c       ****     
  66:modem.c       **** }
 206              		.loc 1 66 0
 207 002e 00BF     		nop
 208 0030 80BD     		pop	{r7, pc}
 209              		.cfi_endproc
 210              	.LFE66:
 211              		.size	pins_configure_inactive, .-pins_configure_inactive
 212 0032 00BF     		.section	.text.pins_configure_active,"ax",%progbits
 213              		.align	2
 214              		.global	pins_configure_active
 215              		.thumb
 216              		.thumb_func
 217              		.type	pins_configure_active, %function
 218              	pins_configure_active:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 6


 219              	.LFB67:
  67:modem.c       **** 
  68:modem.c       **** // Turns on power and configures all UART pin modes
  69:modem.c       **** void pins_configure_active(){
 220              		.loc 1 69 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 1, uses_anonymous_args = 0
 224 0000 80B5     		push	{r7, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 7, -8
 227              		.cfi_offset 14, -4
 228 0002 00AF     		add	r7, sp, #0
 229              		.cfi_def_cfa_register 7
  70:modem.c       ****     
  71:modem.c       ****     Rx_Telit_SetDriveMode(PIN_DM_DIG_HIZ); // Power up. Set RX pin to High Impedance Digital mode.
 230              		.loc 1 71 0
 231 0004 0220     		movs	r0, #2
 232 0006 FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  72:modem.c       ****     Telit_ControlReg_Write(1u); // Pull Telit_ControlReg pin high (turns it on).
 233              		.loc 1 72 0
 234 000a 0120     		movs	r0, #1
 235 000c FFF7FEFF 		bl	Telit_ControlReg_Write
  73:modem.c       ****     Pin_Telit_pwr_Write(ON); // Pulls Telit_pwr pin high (turns it on).
 236              		.loc 1 73 0
 237 0010 0120     		movs	r0, #1
 238 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  74:modem.c       ****     CyDelay(100u); // Give the MOSFET a few ms to stalbilise power 
 239              		.loc 1 74 0
 240 0016 6420     		movs	r0, #100
 241 0018 FFF7FEFF 		bl	CyDelay
  75:modem.c       **** }
 242              		.loc 1 75 0
 243 001c 00BF     		nop
 244 001e 80BD     		pop	{r7, pc}
 245              		.cfi_endproc
 246              	.LFE67:
 247              		.size	pins_configure_active, .-pins_configure_active
 248              		.section	.rodata
 249              		.align	2
 250              	.LC0:
 251 0000 4F4B00   		.ascii	"OK\000"
 252 0003 00       		.align	2
 253              	.LC1:
 254 0004 41542353 		.ascii	"AT#SHDN\015\000"
 254      48444E0D 
 254      00
 255              		.section	.text.modem_power_down,"ax",%progbits
 256              		.align	2
 257              		.global	modem_power_down
 258              		.thumb
 259              		.thumb_func
 260              		.type	modem_power_down, %function
 261              	modem_power_down:
 262              	.LFB68:
  76:modem.c       **** 
  77:modem.c       **** // Power down the modem -- completely "kill" modem to conserve power.
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 7


  78:modem.c       **** void modem_power_down(){
 263              		.loc 1 78 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 1, uses_anonymous_args = 0
 267 0000 80B5     		push	{r7, lr}
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 7, -8
 270              		.cfi_offset 14, -4
 271 0002 00AF     		add	r7, sp, #0
 272              		.cfi_def_cfa_register 7
  79:modem.c       ****     // AT Command to modem for Software Shut Down - #SHDN
  80:modem.c       ****     // \r is carriage return, it is necessary for the modem to know it got a command
  81:modem.c       ****     at_write_command("AT#SHDN\r","OK",5000u); 
 273              		.loc 1 81 0
 274 0004 41F28832 		movw	r2, #5000
 275 0008 0A49     		ldr	r1, .L12
 276 000a 0B48     		ldr	r0, .L12+4
 277 000c FFF7FEFF 		bl	at_write_command
  82:modem.c       ****    
  83:modem.c       ****     // Soft power cycle makes sure that the modem is all the way on (like holding on button on for 
  84:modem.c       ****     modem_soft_power_cycle();
 278              		.loc 1 84 0
 279 0010 FFF7FEFF 		bl	modem_soft_power_cycle
  85:modem.c       ****     CyDelay(1000u);
 280              		.loc 1 85 0
 281 0014 4FF47A70 		mov	r0, #1000
 282 0018 FFF7FEFF 		bl	CyDelay
  86:modem.c       ****     
  87:modem.c       ****     UART_Telit_Stop(); // Disables the UART operation.
 283              		.loc 1 87 0
 284 001c FFF7FEFF 		bl	UART_Telit_Stop
  88:modem.c       ****     isr_telit_rx_Stop(); // Disables and removes the interrupt.
 285              		.loc 1 88 0
 286 0020 FFF7FEFF 		bl	isr_telit_rx_Stop
  89:modem.c       ****     pins_configure_inactive(); // We want the modem power to be "killed" completely to conserve pow
 287              		.loc 1 89 0
 288 0024 FFF7FEFF 		bl	pins_configure_inactive
  90:modem.c       ****     modem_state = MODEM_STATE_OFF;
 289              		.loc 1 90 0
 290 0028 044B     		ldr	r3, .L12+8
 291 002a 0022     		movs	r2, #0
 292 002c 1A70     		strb	r2, [r3]
  91:modem.c       ****     
  92:modem.c       **** }
 293              		.loc 1 92 0
 294 002e 00BF     		nop
 295 0030 80BD     		pop	{r7, pc}
 296              	.L13:
 297 0032 00BF     		.align	2
 298              	.L12:
 299 0034 00000000 		.word	.LC0
 300 0038 04000000 		.word	.LC1
 301 003c 00000000 		.word	modem_state
 302              		.cfi_endproc
 303              	.LFE68:
 304              		.size	modem_power_down, .-modem_power_down
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 8


 305              		.section	.rodata
 306 000d 000000   		.align	2
 307              	.LC2:
 308 0010 41544530 		.ascii	"ATE0\015\000"
 308      0D00
 309 0016 0000     		.align	2
 310              	.LC3:
 311 0018 4D6F6465 		.ascii	"Modem booot time: %d\000"
 311      6D20626F 
 311      6F6F7420 
 311      74696D65 
 311      3A202564 
 312 002d 000000   		.align	2
 313              	.LC4:
 314 0030 4D6F6465 		.ascii	"Modem ready for AT commands after %d attempt(s).\000"
 314      6D207265 
 314      61647920 
 314      666F7220 
 314      41542063 
 315 0061 000000   		.align	2
 316              	.LC5:
 317 0064 4E6F2072 		.ascii	"No response from modem.\000"
 317      6573706F 
 317      6E736520 
 317      66726F6D 
 317      206D6F64 
 318              		.section	.text.modem_power_up,"ax",%progbits
 319              		.align	2
 320              		.global	modem_power_up
 321              		.thumb
 322              		.thumb_func
 323              		.type	modem_power_up, %function
 324              	modem_power_up:
 325              	.LFB69:
  93:modem.c       **** 
  94:modem.c       **** // This puts all the modem pints into a state that won't leak power
  95:modem.c       **** // Please call restore_pins() to bring them abck to function when they are needed for UART
  96:modem.c       **** uint8 modem_power_up(){
 326              		.loc 1 96 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 8
 329              		@ frame_needed = 1, uses_anonymous_args = 0
 330 0000 80B5     		push	{r7, lr}
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 7, -8
 333              		.cfi_offset 14, -4
 334 0002 82B0     		sub	sp, sp, #8
 335              		.cfi_def_cfa_offset 16
 336 0004 00AF     		add	r7, sp, #0
 337              		.cfi_def_cfa_register 7
  97:modem.c       **** 
  98:modem.c       ****     pins_configure_active(); // Turns on power and configures all UART pin modes
 338              		.loc 1 98 0
 339 0006 FFF7FEFF 		bl	pins_configure_active
  99:modem.c       ****     UART_Telit_Start(); // Sets the initVar variable, calls the UART_Telit_Init() function, and the
 340              		.loc 1 99 0
 341 000a FFF7FEFF 		bl	UART_Telit_Start
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 9


 100:modem.c       ****     isr_telit_rx_StartEx(isr_telit_rx); // Sets up the interrupt and enables it. 
 342              		.loc 1 100 0
 343 000e 2C48     		ldr	r0, .L27
 344 0010 FFF7FEFF 		bl	isr_telit_rx_StartEx
 101:modem.c       **** 
 102:modem.c       ****     modem_soft_power_cycle(); // Soft power cycle makes sure that the modem is all the way on (like
 345              		.loc 1 102 0
 346 0014 FFF7FEFF 		bl	modem_soft_power_cycle
 103:modem.c       ****     
 104:modem.c       ****     // Turn off ECHO command (doesn't repeat your command back to you).
 105:modem.c       ****     uint8 at_ready = 0;
 347              		.loc 1 105 0
 348 0018 0023     		movs	r3, #0
 349 001a FB71     		strb	r3, [r7, #7]
 106:modem.c       ****     uint8 attempts = 0;
 350              		.loc 1 106 0
 351 001c 0023     		movs	r3, #0
 352 001e 3B71     		strb	r3, [r7, #4]
 107:modem.c       ****     // Create variable boot_time of the current time stamp.
 108:modem.c       ****     long boot_time = getTimeStamp();
 353              		.loc 1 108 0
 354 0020 FFF7FEFF 		bl	getTimeStamp
 355 0024 3860     		str	r0, [r7]
 356              	.LBB2:
 109:modem.c       ****     
 110:modem.c       ****     //it takes the 4G modem 10+secs (max 20) to boot up, so keep hitting it with AT commands until 
 111:modem.c       ****     for(uint8 attempts = 0; attempts<3; attempts++){
 357              		.loc 1 111 0
 358 0026 0023     		movs	r3, #0
 359 0028 BB71     		strb	r3, [r7, #6]
 360 002a 1CE0     		b	.L15
 361              	.L22:
 362              	.LBB3:
 112:modem.c       ****         
 113:modem.c       ****         for(uint8 pwr_check = 0; pwr_check<20; pwr_check++){
 363              		.loc 1 113 0
 364 002c 0023     		movs	r3, #0
 365 002e 7B71     		strb	r3, [r7, #5]
 366 0030 0EE0     		b	.L16
 367              	.L19:
 114:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 115:modem.c       ****             if(at_write_command("ATE0\r","OK",1000u)){
 368              		.loc 1 115 0
 369 0032 4FF47A72 		mov	r2, #1000
 370 0036 2349     		ldr	r1, .L27+4
 371 0038 2348     		ldr	r0, .L27+8
 372 003a FFF7FEFF 		bl	at_write_command
 373 003e 0346     		mov	r3, r0
 374 0040 002B     		cmp	r3, #0
 375 0042 02D0     		beq	.L17
 116:modem.c       ****                 at_ready = 1;
 376              		.loc 1 116 0
 377 0044 0123     		movs	r3, #1
 378 0046 FB71     		strb	r3, [r7, #7]
 117:modem.c       ****                 break;
 379              		.loc 1 117 0
 380 0048 05E0     		b	.L18
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 10


 381              	.L17:
 113:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 382              		.loc 1 113 0 discriminator 2
 383 004a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 384 004c 0133     		adds	r3, r3, #1
 385 004e 7B71     		strb	r3, [r7, #5]
 386              	.L16:
 113:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 387              		.loc 1 113 0 is_stmt 0 discriminator 1
 388 0050 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 389 0052 132B     		cmp	r3, #19
 390 0054 EDD9     		bls	.L19
 391              	.L18:
 392              	.LBE3:
 118:modem.c       ****             }
 119:modem.c       ****         }
 120:modem.c       ****             
 121:modem.c       ****         if(at_ready == 1){
 393              		.loc 1 121 0 is_stmt 1
 394 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 395 0058 012B     		cmp	r3, #1
 396 005a 08D0     		beq	.L26
 122:modem.c       ****             break;
 123:modem.c       ****         }else{
 124:modem.c       ****             // Soft power cycle makes sure that the modem is all the way on (like holding on button
 125:modem.c       ****             modem_soft_power_cycle();
 397              		.loc 1 125 0 discriminator 2
 398 005c FFF7FEFF 		bl	modem_soft_power_cycle
 111:modem.c       ****         
 399              		.loc 1 111 0 discriminator 2
 400 0060 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 401 0062 0133     		adds	r3, r3, #1
 402 0064 BB71     		strb	r3, [r7, #6]
 403              	.L15:
 111:modem.c       ****         
 404              		.loc 1 111 0 is_stmt 0 discriminator 1
 405 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 406 0068 022B     		cmp	r3, #2
 407 006a DFD9     		bls	.L22
 408 006c 00E0     		b	.L21
 409              	.L26:
 122:modem.c       ****             break;
 410              		.loc 1 122 0 is_stmt 1
 411 006e 00BF     		nop
 412              	.L21:
 413              	.LBE2:
 126:modem.c       ****         }
 127:modem.c       ****     }
 128:modem.c       ****     // Calculate boot up time and save to variable boot_time.
 129:modem.c       ****     boot_time = getTimeStamp() - boot_time;
 414              		.loc 1 129 0
 415 0070 FFF7FEFF 		bl	getTimeStamp
 416 0074 0246     		mov	r2, r0
 417 0076 3B68     		ldr	r3, [r7]
 418 0078 D31A     		subs	r3, r2, r3
 419 007a 3B60     		str	r3, [r7]
 130:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Modem booot time: %d",boot_time);
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 11


 420              		.loc 1 130 0
 421 007c 3A68     		ldr	r2, [r7]
 422 007e 1349     		ldr	r1, .L27+12
 423 0080 0020     		movs	r0, #0
 424 0082 FFF7FEFF 		bl	printNotif
 131:modem.c       ****     
 132:modem.c       ****     if(at_ready == 1){
 425              		.loc 1 132 0
 426 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 427 0088 012B     		cmp	r3, #1
 428 008a 0AD1     		bne	.L23
 133:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Modem ready for AT commands after %d attempt(s).",attempts);
 429              		.loc 1 133 0
 430 008c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 431 008e 1A46     		mov	r2, r3
 432 0090 0F49     		ldr	r1, .L27+16
 433 0092 0020     		movs	r0, #0
 434 0094 FFF7FEFF 		bl	printNotif
 134:modem.c       ****         modem_state = MODEM_STATE_STARTUP;
 435              		.loc 1 134 0
 436 0098 0E4B     		ldr	r3, .L27+20
 437 009a 0122     		movs	r2, #1
 438 009c 1A70     		strb	r2, [r3]
 135:modem.c       ****     }else{
 136:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"No response from modem.");
 137:modem.c       ****         modem_state = MODEM_STATE_OFF;
 138:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 139:modem.c       ****         modem_power_down();
 140:modem.c       ****         return 0u;
 141:modem.c       ****     }
 142:modem.c       ****     return 1u;
 439              		.loc 1 142 0
 440 009e 0123     		movs	r3, #1
 441 00a0 09E0     		b	.L25
 442              	.L23:
 136:modem.c       ****         modem_state = MODEM_STATE_OFF;
 443              		.loc 1 136 0
 444 00a2 0D49     		ldr	r1, .L27+24
 445 00a4 0220     		movs	r0, #2
 446 00a6 FFF7FEFF 		bl	printNotif
 137:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 447              		.loc 1 137 0
 448 00aa 0A4B     		ldr	r3, .L27+20
 449 00ac 0022     		movs	r2, #0
 450 00ae 1A70     		strb	r2, [r3]
 139:modem.c       ****         return 0u;
 451              		.loc 1 139 0
 452 00b0 FFF7FEFF 		bl	modem_power_down
 140:modem.c       ****     }
 453              		.loc 1 140 0
 454 00b4 0023     		movs	r3, #0
 455              	.L25:
 143:modem.c       **** }
 456              		.loc 1 143 0
 457 00b6 1846     		mov	r0, r3
 458 00b8 0837     		adds	r7, r7, #8
 459              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 12


 460 00ba BD46     		mov	sp, r7
 461              		.cfi_def_cfa_register 13
 462              		@ sp needed
 463 00bc 80BD     		pop	{r7, pc}
 464              	.L28:
 465 00be 00BF     		.align	2
 466              	.L27:
 467 00c0 00000000 		.word	isr_telit_rx
 468 00c4 00000000 		.word	.LC0
 469 00c8 10000000 		.word	.LC2
 470 00cc 18000000 		.word	.LC3
 471 00d0 30000000 		.word	.LC4
 472 00d4 00000000 		.word	modem_state
 473 00d8 64000000 		.word	.LC5
 474              		.cfi_endproc
 475              	.LFE69:
 476              		.size	modem_power_up, .-modem_power_up
 477              		.section	.text.modem_soft_power_cycle,"ax",%progbits
 478              		.align	2
 479              		.global	modem_soft_power_cycle
 480              		.thumb
 481              		.thumb_func
 482              		.type	modem_soft_power_cycle, %function
 483              	modem_soft_power_cycle:
 484              	.LFB70:
 144:modem.c       **** 
 145:modem.c       **** // Puts modem in soft power cycle -- modem has power but isn't all the way on, so soft power cycle 
 146:modem.c       **** void modem_soft_power_cycle(){
 485              		.loc 1 146 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 1, uses_anonymous_args = 0
 489 0000 80B5     		push	{r7, lr}
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 7, -8
 492              		.cfi_offset 14, -4
 493 0002 00AF     		add	r7, sp, #0
 494              		.cfi_def_cfa_register 7
 147:modem.c       ****     Pin_Telit_ONOFF_Write(1u); // Pulls Telit_ONOFF pin high
 495              		.loc 1 147 0
 496 0004 0120     		movs	r0, #1
 497 0006 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 148:modem.c       ****     CyDelay(2000u); // Give modem a sec to boot
 498              		.loc 1 148 0
 499 000a 4FF4FA60 		mov	r0, #2000
 500 000e FFF7FEFF 		bl	CyDelay
 149:modem.c       ****     Pin_Telit_ONOFF_Write(0u); // Pulls Telit_ONOFF pin low
 501              		.loc 1 149 0
 502 0012 0020     		movs	r0, #0
 503 0014 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 150:modem.c       ****     
 151:modem.c       **** }
 504              		.loc 1 151 0
 505 0018 00BF     		nop
 506 001a 80BD     		pop	{r7, pc}
 507              		.cfi_endproc
 508              	.LFE70:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 13


 509              		.size	modem_soft_power_cycle, .-modem_soft_power_cycle
 510              		.section	.text.uart_string_reset,"ax",%progbits
 511              		.align	2
 512              		.global	uart_string_reset
 513              		.thumb
 514              		.thumb_func
 515              		.type	uart_string_reset, %function
 516              	uart_string_reset:
 517              	.LFB71:
 152:modem.c       **** 
 153:modem.c       **** // Clear and reset the uart_received_string variable and uart_string_index for the next transmissio
 154:modem.c       **** void uart_string_reset(){
 518              		.loc 1 154 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 1, uses_anonymous_args = 0
 522 0000 80B5     		push	{r7, lr}
 523              		.cfi_def_cfa_offset 8
 524              		.cfi_offset 7, -8
 525              		.cfi_offset 14, -4
 526 0002 00AF     		add	r7, sp, #0
 527              		.cfi_def_cfa_register 7
 155:modem.c       ****     uart_string_index=0;
 528              		.loc 1 155 0
 529 0004 064B     		ldr	r3, .L31
 530 0006 0022     		movs	r2, #0
 531 0008 1A70     		strb	r2, [r3]
 156:modem.c       ****     // memset(void *str, int c, size_t n) copies the character c (an unsigned char) to the first n 
 157:modem.c       ****     memset(uart_received_string,'\0',sizeof(uart_received_string));
 532              		.loc 1 157 0
 533 000a 4FF48062 		mov	r2, #1024
 534 000e 0021     		movs	r1, #0
 535 0010 0448     		ldr	r0, .L31+4
 536 0012 FFF7FEFF 		bl	memset
 158:modem.c       ****     // Clears the receiver memory buffer and hardware RX FIFO of all received data.
 159:modem.c       ****     UART_Telit_ClearRxBuffer();
 537              		.loc 1 159 0
 538 0016 FFF7FEFF 		bl	UART_Telit_ClearRxBuffer
 160:modem.c       **** }
 539              		.loc 1 160 0
 540 001a 00BF     		nop
 541 001c 80BD     		pop	{r7, pc}
 542              	.L32:
 543 001e 00BF     		.align	2
 544              	.L31:
 545 0020 00000000 		.word	uart_string_index
 546 0024 00000000 		.word	uart_received_string
 547              		.cfi_endproc
 548              	.LFE71:
 549              		.size	uart_string_reset, .-uart_string_reset
 550              		.section	.rodata
 551              		.align	2
 552              	.LC6:
 553 007c 4D6F6465 		.ascii	"Modem sent AT command without timeout: %s\015\012\000"
 553      6D207365 
 553      6E742041 
 553      5420636F 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 14


 553      6D6D616E 
 554              		.align	2
 555              	.LC7:
 556 00a8 4D6F6465 		.ascii	"Modem Received expected AT Response on first Try:\012"
 556      6D205265 
 556      63656976 
 556      65642065 
 556      78706563 
 557 00da 436F6D6D 		.ascii	"Command: %s\012Received: %s\015\012\000"
 557      616E643A 
 557      2025730A 
 557      52656365 
 557      69766564 
 558 00f5 000000   		.align	2
 559              	.LC8:
 560 00f8 4D6F6465 		.ascii	"Modem required %d tries to receive AT Response: %s\015"
 560      6D207265 
 560      71756972 
 560      65642025 
 560      64207472 
 561 012b 0A00     		.ascii	"\012\000"
 562 012d 000000   		.align	2
 563              	.LC9:
 564 0130 436F756C 		.ascii	"Could not write AT command: %s\012 Received: %s\012"
 564      64206E6F 
 564      74207772 
 564      69746520 
 564      41542063 
 565 015d 00       		.ascii	"\000"
 566              		.section	.text.at_write_command,"ax",%progbits
 567              		.align	2
 568              		.global	at_write_command
 569              		.thumb
 570              		.thumb_func
 571              		.type	at_write_command, %function
 572              	at_write_command:
 573              	.LFB72:
 161:modem.c       **** 
 162:modem.c       **** // Modem controlled  via  the  serial  interface  using  the  standard  AT commands.
 163:modem.c       **** // AT is an ATTENTION command and is used as a prefix to other parameters in a string. 
 164:modem.c       **** // Sends commands to the modem
 165:modem.c       **** uint8_t at_write_command(char* commands, char* expected_response,uint32_t timeout){
 574              		.loc 1 165 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 40
 577              		@ frame_needed = 1, uses_anonymous_args = 0
 578 0000 80B5     		push	{r7, lr}
 579              		.cfi_def_cfa_offset 8
 580              		.cfi_offset 7, -8
 581              		.cfi_offset 14, -4
 582 0002 8AB0     		sub	sp, sp, #40
 583              		.cfi_def_cfa_offset 48
 584 0004 00AF     		add	r7, sp, #0
 585              		.cfi_def_cfa_register 7
 586 0006 F860     		str	r0, [r7, #12]
 587 0008 B960     		str	r1, [r7, #8]
 588 000a 7A60     		str	r2, [r7, #4]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 15


 166:modem.c       **** 
 167:modem.c       ****     uint32 at_attempt = 0;
 589              		.loc 1 167 0
 590 000c 0023     		movs	r3, #0
 591 000e 7B62     		str	r3, [r7, #36]
 168:modem.c       ****     
 169:modem.c       ****     for(at_attempt = 0; at_attempt < 3; at_attempt++) {
 592              		.loc 1 169 0
 593 0010 0023     		movs	r3, #0
 594 0012 7B62     		str	r3, [r7, #36]
 595 0014 46E0     		b	.L34
 596              	.L42:
 597              	.LBB4:
 170:modem.c       ****         
 171:modem.c       ****         char* compare_location;
 172:modem.c       ****         uint32_t delay=10;
 598              		.loc 1 172 0
 599 0016 0A23     		movs	r3, #10
 600 0018 FB61     		str	r3, [r7, #28]
 173:modem.c       ****         uint32_t i, interval=timeout/delay;        
 601              		.loc 1 173 0
 602 001a 7A68     		ldr	r2, [r7, #4]
 603 001c FB69     		ldr	r3, [r7, #28]
 604 001e B2FBF3F3 		udiv	r3, r2, r3
 605 0022 BB61     		str	r3, [r7, #24]
 174:modem.c       ****         
 175:modem.c       ****         // Clear and reset the uart_received_string variable and uart_string_index for the next tra
 176:modem.c       ****         uart_string_reset();
 606              		.loc 1 176 0
 607 0024 FFF7FEFF 		bl	uart_string_reset
 177:modem.c       ****         
 178:modem.c       ****         // Sends a NULL terminated string to the TX buffer for transmission.
 179:modem.c       ****         UART_Telit_PutString(commands);
 608              		.loc 1 179 0
 609 0028 F868     		ldr	r0, [r7, #12]
 610 002a FFF7FEFF 		bl	UART_Telit_PutString
 180:modem.c       ****         
 181:modem.c       ****         
 182:modem.c       ****         // If no timeout, no need to wait for response
 183:modem.c       ****         if(timeout == NO_AT_TIMEOUT){
 611              		.loc 1 183 0
 612 002e 7B68     		ldr	r3, [r7, #4]
 613 0030 002B     		cmp	r3, #0
 614 0032 06D1     		bne	.L35
 184:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem sent AT command without timeout: %s\r\n", commands);
 615              		.loc 1 184 0
 616 0034 FA68     		ldr	r2, [r7, #12]
 617 0036 1F49     		ldr	r1, .L43
 618 0038 0020     		movs	r0, #0
 619 003a FFF7FEFF 		bl	printNotif
 185:modem.c       ****             return 1u;
 620              		.loc 1 185 0
 621 003e 0123     		movs	r3, #1
 622 0040 34E0     		b	.L36
 623              	.L35:
 186:modem.c       ****         }
 187:modem.c       ****       
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 16


 188:modem.c       ****      
 189:modem.c       ****         for(i=0;i<interval;i++){ 
 624              		.loc 1 189 0
 625 0042 0023     		movs	r3, #0
 626 0044 3B62     		str	r3, [r7, #32]
 627 0046 20E0     		b	.L37
 628              	.L41:
 190:modem.c       ****             CyDelay((uint32) delay);
 629              		.loc 1 190 0
 630 0048 F869     		ldr	r0, [r7, #28]
 631 004a FFF7FEFF 		bl	CyDelay
 191:modem.c       ****             // strstr(const char *haystack, const char *needle) function finds the first occurrence
 192:modem.c       ****             // Returns a pointer to the first occurrence in haystack of any of the entire sequence 
 193:modem.c       ****             compare_location=strstr(uart_received_string,expected_response);        
 632              		.loc 1 193 0
 633 004e B968     		ldr	r1, [r7, #8]
 634 0050 1948     		ldr	r0, .L43+4
 635 0052 FFF7FEFF 		bl	strstr
 636 0056 7861     		str	r0, [r7, #20]
 194:modem.c       ****             if(compare_location!=NULL) {
 637              		.loc 1 194 0
 638 0058 7B69     		ldr	r3, [r7, #20]
 639 005a 002B     		cmp	r3, #0
 640 005c 12D0     		beq	.L38
 195:modem.c       ****                 if (at_attempt == 0){
 641              		.loc 1 195 0
 642 005e 7B6A     		ldr	r3, [r7, #36]
 643 0060 002B     		cmp	r3, #0
 644 0062 06D1     		bne	.L39
 196:modem.c       ****                     // we add \n for new line to make it easier to decipher
 197:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT,"Modem Received expected AT Response on first Try:\
 645              		.loc 1 197 0
 646 0064 144B     		ldr	r3, .L43+4
 647 0066 FA68     		ldr	r2, [r7, #12]
 648 0068 1449     		ldr	r1, .L43+8
 649 006a 0020     		movs	r0, #0
 650 006c FFF7FEFF 		bl	printNotif
 651 0070 06E0     		b	.L40
 652              	.L39:
 198:modem.c       ****                 }else{
 199:modem.c       ****                     printNotif(NOTIF_TYPE_WARNING,"Modem required %d tries to receive AT Response: 
 653              		.loc 1 199 0
 654 0072 7B6A     		ldr	r3, [r7, #36]
 655 0074 5A1C     		adds	r2, r3, #1
 656 0076 104B     		ldr	r3, .L43+4
 657 0078 1149     		ldr	r1, .L43+12
 658 007a 0120     		movs	r0, #1
 659 007c FFF7FEFF 		bl	printNotif
 660              	.L40:
 200:modem.c       ****                  
 201:modem.c       ****                 }
 202:modem.c       ****                 return(1);
 661              		.loc 1 202 0
 662 0080 0123     		movs	r3, #1
 663 0082 13E0     		b	.L36
 664              	.L38:
 189:modem.c       ****             CyDelay((uint32) delay);
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 17


 665              		.loc 1 189 0 discriminator 2
 666 0084 3B6A     		ldr	r3, [r7, #32]
 667 0086 0133     		adds	r3, r3, #1
 668 0088 3B62     		str	r3, [r7, #32]
 669              	.L37:
 189:modem.c       ****             CyDelay((uint32) delay);
 670              		.loc 1 189 0 is_stmt 0 discriminator 1
 671 008a 3A6A     		ldr	r2, [r7, #32]
 672 008c BB69     		ldr	r3, [r7, #24]
 673 008e 9A42     		cmp	r2, r3
 674 0090 DAD3     		bcc	.L41
 203:modem.c       ****             }
 204:modem.c       ****             
 205:modem.c       ****         }  
 206:modem.c       ****         
 207:modem.c       ****         // Something went wrong, restart UART
 208:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not write AT command: %s\n Received: %s\n", commands,uar
 675              		.loc 1 208 0 is_stmt 1 discriminator 2
 676 0092 094B     		ldr	r3, .L43+4
 677 0094 FA68     		ldr	r2, [r7, #12]
 678 0096 0B49     		ldr	r1, .L43+16
 679 0098 0220     		movs	r0, #2
 680 009a FFF7FEFF 		bl	printNotif
 681              	.LBE4:
 169:modem.c       ****         
 682              		.loc 1 169 0 discriminator 2
 683 009e 7B6A     		ldr	r3, [r7, #36]
 684 00a0 0133     		adds	r3, r3, #1
 685 00a2 7B62     		str	r3, [r7, #36]
 686              	.L34:
 169:modem.c       ****         
 687              		.loc 1 169 0 is_stmt 0 discriminator 1
 688 00a4 7B6A     		ldr	r3, [r7, #36]
 689 00a6 022B     		cmp	r3, #2
 690 00a8 B5D9     		bls	.L42
 209:modem.c       ****       
 210:modem.c       ****     }
 211:modem.c       ****    // printNotif(NOTIF_TYPE_ERROR,"Modem AT response timeout: %s\r\n", commands);
 212:modem.c       ****           
 213:modem.c       ****     return(0);    
 691              		.loc 1 213 0 is_stmt 1
 692 00aa 0023     		movs	r3, #0
 693              	.L36:
 214:modem.c       **** }
 694              		.loc 1 214 0
 695 00ac 1846     		mov	r0, r3
 696 00ae 2837     		adds	r7, r7, #40
 697              		.cfi_def_cfa_offset 8
 698 00b0 BD46     		mov	sp, r7
 699              		.cfi_def_cfa_register 13
 700              		@ sp needed
 701 00b2 80BD     		pop	{r7, pc}
 702              	.L44:
 703              		.align	2
 704              	.L43:
 705 00b4 7C000000 		.word	.LC6
 706 00b8 00000000 		.word	uart_received_string
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 18


 707 00bc A8000000 		.word	.LC7
 708 00c0 F8000000 		.word	.LC8
 709 00c4 30010000 		.word	.LC9
 710              		.cfi_endproc
 711              	.LFE72:
 712              		.size	at_write_command, .-at_write_command
 713              		.section	.rodata
 714 015e 0000     		.align	2
 715              	.LC10:
 716 0160 54455354 		.ascii	"TEST_MODEM\000"
 716      5F4D4F44 
 716      454D00
 717 016b 00       		.align	2
 718              	.LC11:
 719 016c 4E6F2072 		.ascii	"No reponse from modem.\000"
 719      65706F6E 
 719      73652066 
 719      726F6D20 
 719      6D6F6465 
 720 0183 00       		.align	2
 721              	.LC12:
 722 0184 4D6F6465 		.ascii	"Modem connected to network.\000"
 722      6D20636F 
 722      6E6E6563 
 722      74656420 
 722      746F206E 
 723              		.section	.text.modem_test,"ax",%progbits
 724              		.align	2
 725              		.global	modem_test
 726              		.thumb
 727              		.thumb_func
 728              		.type	modem_test, %function
 729              	modem_test:
 730              	.LFB73:
 215:modem.c       **** 
 216:modem.c       **** // Test modem -- needs fleshed out
 217:modem.c       **** test_t modem_test(){
 731              		.loc 1 217 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 408
 734              		@ frame_needed = 1, uses_anonymous_args = 0
 735 0000 B0B5     		push	{r4, r5, r7, lr}
 736              		.cfi_def_cfa_offset 16
 737              		.cfi_offset 4, -16
 738              		.cfi_offset 5, -12
 739              		.cfi_offset 7, -8
 740              		.cfi_offset 14, -4
 741 0002 E6B0     		sub	sp, sp, #408
 742              		.cfi_def_cfa_offset 424
 743 0004 00AF     		add	r7, sp, #0
 744              		.cfi_def_cfa_register 7
 745 0006 3B1D     		adds	r3, r7, #4
 746 0008 1860     		str	r0, [r3]
 218:modem.c       ****     
 219:modem.c       ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
 220:modem.c       ****     test.status = 0;
 747              		.loc 1 220 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 19


 748 000a 07F10C03 		add	r3, r7, #12
 749 000e 0022     		movs	r2, #0
 750 0010 83F88020 		strb	r2, [r3, #128]
 221:modem.c       ****     // Print test name and test reason
 222:modem.c       ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_MODEM");
 751              		.loc 1 222 0
 752 0014 07F10C03 		add	r3, r7, #12
 753 0018 354A     		ldr	r2, .L53
 754 001a 07CA     		ldmia	r2, {r0, r1, r2}
 755 001c 03C3     		stmia	r3!, {r0, r1}
 756 001e 1A80     		strh	r2, [r3]	@ movhi
 757 0020 0233     		adds	r3, r3, #2
 758 0022 120C     		lsrs	r2, r2, #16
 759 0024 1A70     		strb	r2, [r3]
 223:modem.c       ****     snprintf(test.reason,sizeof(test.reason),"No reponse from modem.");
 760              		.loc 1 223 0
 761 0026 07F10C03 		add	r3, r7, #12
 762 002a 8133     		adds	r3, r3, #129
 763 002c 314A     		ldr	r2, .L53+4
 764 002e 1C46     		mov	r4, r3
 765 0030 1546     		mov	r5, r2
 766 0032 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 767 0034 2060     		str	r0, [r4]	@ unaligned
 768 0036 6160     		str	r1, [r4, #4]	@ unaligned
 769 0038 A260     		str	r2, [r4, #8]	@ unaligned
 770 003a E360     		str	r3, [r4, #12]	@ unaligned
 771 003c 2868     		ldr	r0, [r5]	@ unaligned
 772 003e 2061     		str	r0, [r4, #16]	@ unaligned
 773 0040 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 774 0042 AA79     		ldrb	r2, [r5, #6]
 775 0044 A382     		strh	r3, [r4, #20]	@ unaligned
 776 0046 1346     		mov	r3, r2
 777 0048 A375     		strb	r3, [r4, #22]
 778              	.LBB5:
 224:modem.c       ****    
 225:modem.c       ****     //try the modem 60*100 (60 secs)
 226:modem.c       ****     for(int i = 0; i< 60; i++){
 779              		.loc 1 226 0
 780 004a 0023     		movs	r3, #0
 781 004c C7F89431 		str	r3, [r7, #404]
 782 0050 39E0     		b	.L46
 783              	.L51:
 227:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 228:modem.c       ****         modem_process_tasks();
 784              		.loc 1 228 0
 785 0052 FFF7FEFF 		bl	modem_process_tasks
 229:modem.c       ****          
 230:modem.c       ****         if(modem_get_state() == MODEM_STATE_OFF){
 786              		.loc 1 230 0
 787 0056 FFF7FEFF 		bl	modem_get_state
 788 005a 0346     		mov	r3, r0
 789 005c 002B     		cmp	r3, #0
 790 005e 02D1     		bne	.L47
 231:modem.c       ****             // This puts all the modem points into a state that won't leak power
 232:modem.c       ****             modem_power_up();
 791              		.loc 1 232 0
 792 0060 FFF7FEFF 		bl	modem_power_up
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 20


 793 0064 27E0     		b	.L48
 794              	.L47:
 233:modem.c       ****             // Should put this on a max_try counter, so we don't just keep trying to connect over a
 234:modem.c       ****             
 235:modem.c       ****         }else if(modem_get_state() == MODEM_STATE_READY){
 795              		.loc 1 235 0
 796 0066 FFF7FEFF 		bl	modem_get_state
 797 006a 0346     		mov	r3, r0
 798 006c 042B     		cmp	r3, #4
 799 006e 22D1     		bne	.L48
 800              	.LBB6:
 236:modem.c       ****         
 237:modem.c       ****         
 238:modem.c       ****         // Get time, and if it looks good, set the RTC with it
 239:modem.c       ****         long network_time = modem_get_network_time();
 801              		.loc 1 239 0
 802 0070 FFF7FEFF 		bl	modem_get_network_time
 803 0074 C7F89001 		str	r0, [r7, #400]
 240:modem.c       ****         if(network_time != 0){
 804              		.loc 1 240 0
 805 0078 D7F89031 		ldr	r3, [r7, #400]
 806 007c 002B     		cmp	r3, #0
 807 007e 03D0     		beq	.L49
 241:modem.c       ****             setTime(network_time); // Set the system time 
 808              		.loc 1 241 0
 809 0080 D7F89001 		ldr	r0, [r7, #400]
 810 0084 FFF7FEFF 		bl	setTime
 811              	.L49:
 242:modem.c       ****         }
 243:modem.c       ****             
 244:modem.c       ****         snprintf(test.reason,sizeof(test.reason),"Modem connected to network.");
 812              		.loc 1 244 0
 813 0088 07F10C03 		add	r3, r7, #12
 814 008c 8133     		adds	r3, r3, #129
 815 008e 1A4A     		ldr	r2, .L53+8
 816 0090 1D46     		mov	r5, r3
 817 0092 1446     		mov	r4, r2
 818 0094 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 819 0096 2860     		str	r0, [r5]	@ unaligned
 820 0098 6960     		str	r1, [r5, #4]	@ unaligned
 821 009a AA60     		str	r2, [r5, #8]	@ unaligned
 822 009c EB60     		str	r3, [r5, #12]	@ unaligned
 823 009e 07CC     		ldmia	r4!, {r0, r1, r2}
 824 00a0 2861     		str	r0, [r5, #16]	@ unaligned
 825 00a2 6961     		str	r1, [r5, #20]	@ unaligned
 826 00a4 AA61     		str	r2, [r5, #24]	@ unaligned
 245:modem.c       ****         test.status = 1;
 827              		.loc 1 245 0
 828 00a6 07F10C03 		add	r3, r7, #12
 829 00aa 0122     		movs	r2, #1
 830 00ac 83F88020 		strb	r2, [r3, #128]
 246:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 247:modem.c       ****         modem_power_down();
 831              		.loc 1 247 0
 832 00b0 FFF7FEFF 		bl	modem_power_down
 248:modem.c       ****         break;
 833              		.loc 1 248 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 21


 834 00b4 0BE0     		b	.L50
 835              	.L48:
 836              	.LBE6:
 249:modem.c       ****         
 250:modem.c       ****       }
 251:modem.c       ****         CyDelay(100u);
 837              		.loc 1 251 0 discriminator 2
 838 00b6 6420     		movs	r0, #100
 839 00b8 FFF7FEFF 		bl	CyDelay
 226:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 840              		.loc 1 226 0 discriminator 2
 841 00bc D7F89431 		ldr	r3, [r7, #404]
 842 00c0 0133     		adds	r3, r3, #1
 843 00c2 C7F89431 		str	r3, [r7, #404]
 844              	.L46:
 226:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 845              		.loc 1 226 0 is_stmt 0 discriminator 1
 846 00c6 D7F89431 		ldr	r3, [r7, #404]
 847 00ca 3B2B     		cmp	r3, #59
 848 00cc C1DD     		ble	.L51
 849              	.L50:
 850              	.LBE5:
 252:modem.c       ****         
 253:modem.c       ****     }
 254:modem.c       ****     
 255:modem.c       ****     return test;
 851              		.loc 1 255 0 is_stmt 1
 852 00ce 3B1D     		adds	r3, r7, #4
 853 00d0 1A68     		ldr	r2, [r3]
 854 00d2 07F10C03 		add	r3, r7, #12
 855 00d6 1046     		mov	r0, r2
 856 00d8 1946     		mov	r1, r3
 857 00da 40F28113 		movw	r3, #385
 858 00de 1A46     		mov	r2, r3
 859 00e0 FFF7FEFF 		bl	memcpy
 256:modem.c       **** }
 860              		.loc 1 256 0
 861 00e4 3B1D     		adds	r3, r7, #4
 862 00e6 1868     		ldr	r0, [r3]
 863 00e8 07F5CC77 		add	r7, r7, #408
 864              		.cfi_def_cfa_offset 16
 865 00ec BD46     		mov	sp, r7
 866              		.cfi_def_cfa_register 13
 867              		@ sp needed
 868 00ee B0BD     		pop	{r4, r5, r7, pc}
 869              	.L54:
 870              		.align	2
 871              	.L53:
 872 00f0 60010000 		.word	.LC10
 873 00f4 6C010000 		.word	.LC11
 874 00f8 84010000 		.word	.LC12
 875              		.cfi_endproc
 876              	.LFE73:
 877              		.size	modem_test, .-modem_test
 878              		.section	.text.extract_string,"ax",%progbits
 879              		.align	2
 880              		.global	extract_string
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 22


 881              		.thumb
 882              		.thumb_func
 883              		.type	extract_string, %function
 884              	extract_string:
 885              	.LFB74:
 257:modem.c       **** 
 258:modem.c       **** // Extract string from the UART
 259:modem.c       **** uint8 extract_string(char* from, const char* beginMarker, const char* endMarker,  char* target){
 886              		.loc 1 259 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 24
 889              		@ frame_needed = 1, uses_anonymous_args = 0
 890 0000 80B5     		push	{r7, lr}
 891              		.cfi_def_cfa_offset 8
 892              		.cfi_offset 7, -8
 893              		.cfi_offset 14, -4
 894 0002 86B0     		sub	sp, sp, #24
 895              		.cfi_def_cfa_offset 32
 896 0004 00AF     		add	r7, sp, #0
 897              		.cfi_def_cfa_register 7
 898 0006 F860     		str	r0, [r7, #12]
 899 0008 B960     		str	r1, [r7, #8]
 900 000a 7A60     		str	r2, [r7, #4]
 901 000c 3B60     		str	r3, [r7]
 260:modem.c       ****     
 261:modem.c       ****         char *a, *b;
 262:modem.c       ****   
 263:modem.c       ****         // Expect the UART to contain something like "+CSQ: 17,99\r\n\r\nOK"
 264:modem.c       ****         // - Search for "+CSQ: ".  Place the starting pointer, a, at the resulting index
 265:modem.c       ****         a = strstr(from,beginMarker);
 902              		.loc 1 265 0
 903 000e B968     		ldr	r1, [r7, #8]
 904 0010 F868     		ldr	r0, [r7, #12]
 905 0012 FFF7FEFF 		bl	strstr
 906 0016 7861     		str	r0, [r7, #20]
 266:modem.c       ****         if (a == NULL) {
 907              		.loc 1 266 0
 908 0018 7B69     		ldr	r3, [r7, #20]
 909 001a 002B     		cmp	r3, #0
 910 001c 01D1     		bne	.L56
 267:modem.c       ****             //puts("+CSQ: not found in uart_received_string");
 268:modem.c       ****             a = from;
 911              		.loc 1 268 0
 912 001e FB68     		ldr	r3, [r7, #12]
 913 0020 7B61     		str	r3, [r7, #20]
 914              	.L56:
 269:modem.c       ****         }
 270:modem.c       ****         // The strlen() function calculates the length of a given string.
 271:modem.c       ****         a += strlen(beginMarker);
 915              		.loc 1 271 0
 916 0022 B868     		ldr	r0, [r7, #8]
 917 0024 FFF7FEFF 		bl	strlen
 918 0028 0246     		mov	r2, r0
 919 002a 7B69     		ldr	r3, [r7, #20]
 920 002c 1344     		add	r3, r3, r2
 921 002e 7B61     		str	r3, [r7, #20]
 272:modem.c       ****         
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 23


 273:modem.c       ****         // - Find the end marking and offset by 1
 274:modem.c       ****         // strstr(const char *haystack, const char *needle) function finds the first occurrence of 
 275:modem.c       ****         // Returns a pointer to the first occurrence in haystack of any of the entire sequence of c
 276:modem.c       ****         b = strstr(a,endMarker);
 922              		.loc 1 276 0
 923 0030 7968     		ldr	r1, [r7, #4]
 924 0032 7869     		ldr	r0, [r7, #20]
 925 0034 FFF7FEFF 		bl	strstr
 926 0038 3861     		str	r0, [r7, #16]
 277:modem.c       ****         if (b == NULL) {
 927              		.loc 1 277 0
 928 003a 3B69     		ldr	r3, [r7, #16]
 929 003c 002B     		cmp	r3, #0
 930 003e 06D1     		bne	.L57
 278:modem.c       ****             // Puts("Comma not found in uart_received_string");
 279:modem.c       ****             b=from+strlen(from);
 931              		.loc 1 279 0
 932 0040 F868     		ldr	r0, [r7, #12]
 933 0042 FFF7FEFF 		bl	strlen
 934 0046 0246     		mov	r2, r0
 935 0048 FB68     		ldr	r3, [r7, #12]
 936 004a 1344     		add	r3, r3, r2
 937 004c 3B61     		str	r3, [r7, #16]
 938              	.L57:
 280:modem.c       ****         }        
 281:modem.c       ****         
 282:modem.c       ****         // Parse the strings and store the respective rssi and fer values
 283:modem.c       ****         strncpy(target,a,b-a);
 939              		.loc 1 283 0
 940 004e 3A69     		ldr	r2, [r7, #16]
 941 0050 7B69     		ldr	r3, [r7, #20]
 942 0052 D31A     		subs	r3, r2, r3
 943 0054 1A46     		mov	r2, r3
 944 0056 7969     		ldr	r1, [r7, #20]
 945 0058 3868     		ldr	r0, [r7]
 946 005a FFF7FEFF 		bl	strncpy
 284:modem.c       ****         target[b-a] = '\0';
 947              		.loc 1 284 0
 948 005e 3A69     		ldr	r2, [r7, #16]
 949 0060 7B69     		ldr	r3, [r7, #20]
 950 0062 D31A     		subs	r3, r2, r3
 951 0064 1A46     		mov	r2, r3
 952 0066 3B68     		ldr	r3, [r7]
 953 0068 1344     		add	r3, r3, r2
 954 006a 0022     		movs	r2, #0
 955 006c 1A70     		strb	r2, [r3]
 285:modem.c       ****         return 1u;
 956              		.loc 1 285 0
 957 006e 0123     		movs	r3, #1
 286:modem.c       ****         
 287:modem.c       **** }
 958              		.loc 1 287 0
 959 0070 1846     		mov	r0, r3
 960 0072 1837     		adds	r7, r7, #24
 961              		.cfi_def_cfa_offset 8
 962 0074 BD46     		mov	sp, r7
 963              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 24


 964              		@ sp needed
 965 0076 80BD     		pop	{r7, pc}
 966              		.cfi_endproc
 967              	.LFE74:
 968              		.size	extract_string, .-extract_string
 969              		.section	.rodata
 970              		.align	2
 971              	.LC13:
 972 01a0 54696D65 		.ascii	"Time to connecto to network: %d seconds\000"
 972      20746F20 
 972      636F6E6E 
 972      6563746F 
 972      20746F20 
 973              		.align	2
 974              	.LC14:
 975 01c8 4D6F6465 		.ascii	"Modem timed out on network connect\000"
 975      6D207469 
 975      6D656420 
 975      6F757420 
 975      6F6E206E 
 976 01eb 00       		.align	2
 977              	.LC15:
 978 01ec 41637175 		.ascii	"Acquired IP address: %d seconds\000"
 978      69726564 
 978      20495020 
 978      61646472 
 978      6573733A 
 979              		.align	2
 980              	.LC16:
 981 020c 4D6F6465 		.ascii	"Modem timed out on IP address acquire.\000"
 981      6D207469 
 981      6D656420 
 981      6F757420 
 981      6F6E2049 
 982              		.section	.text.modem_process_tasks,"ax",%progbits
 983              		.align	2
 984              		.global	modem_process_tasks
 985              		.thumb
 986              		.thumb_func
 987              		.type	modem_process_tasks, %function
 988              	modem_process_tasks:
 989              	.LFB75:
 288:modem.c       **** 
 289:modem.c       **** // Function to startup the modem, connect to the network, and then hand it off to sleep
 290:modem.c       **** uint8 modem_process_tasks(){
 990              		.loc 1 290 0
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 0
 993              		@ frame_needed = 1, uses_anonymous_args = 0
 994 0000 80B5     		push	{r7, lr}
 995              		.cfi_def_cfa_offset 8
 996              		.cfi_offset 7, -8
 997              		.cfi_offset 14, -4
 998 0002 00AF     		add	r7, sp, #0
 999              		.cfi_def_cfa_register 7
 291:modem.c       ****     // If modem state is "startup" then get the modem start time, configure modem settings, and cha
 292:modem.c       ****     if(modem_state == MODEM_STATE_STARTUP){
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 25


 1000              		.loc 1 292 0
 1001 0004 394B     		ldr	r3, .L68
 1002 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1003 0008 012B     		cmp	r3, #1
 1004 000a 0BD1     		bne	.L60
 293:modem.c       ****         
 294:modem.c       ****         modem_start_time_stamp = getTimeStamp(); // Get timestamp for modem start time
 1005              		.loc 1 294 0
 1006 000c FFF7FEFF 		bl	getTimeStamp
 1007 0010 0246     		mov	r2, r0
 1008 0012 374B     		ldr	r3, .L68+4
 1009 0014 1A60     		str	r2, [r3]
 295:modem.c       ****         modem_configure_settings(); // Configure modem settings
 1010              		.loc 1 295 0
 1011 0016 FFF7FEFF 		bl	modem_configure_settings
 296:modem.c       ****         modem_state = MODEM_STATE_WAITING_FOR_NETWORK; // Change modem state 
 1012              		.loc 1 296 0
 1013 001a 344B     		ldr	r3, .L68
 1014 001c 0222     		movs	r2, #2
 1015 001e 1A70     		strb	r2, [r3]
 297:modem.c       ****         return 1u; // Keep going, don't hand off to sleep yet
 1016              		.loc 1 297 0
 1017 0020 0123     		movs	r3, #1
 1018 0022 60E0     		b	.L61
 1019              	.L60:
 298:modem.c       ****         
 299:modem.c       ****     }
 300:modem.c       ****     // Else if modem state is "waiting for network" 
 301:modem.c       ****     else if(modem_state == MODEM_STATE_WAITING_FOR_NETWORK){
 1020              		.loc 1 301 0
 1021 0024 314B     		ldr	r3, .L68
 1022 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1023 0028 022B     		cmp	r3, #2
 1024 002a 2DD1     		bne	.L62
 302:modem.c       ****         // If modem connected to the cell network, save/print the time to connect to the network
 303:modem.c       ****         if(is_connected_to_cell_network()){
 1025              		.loc 1 303 0
 1026 002c FFF7FEFF 		bl	is_connected_to_cell_network
 1027 0030 0346     		mov	r3, r0
 1028 0032 002B     		cmp	r3, #0
 1029 0034 15D0     		beq	.L63
 304:modem.c       ****       
 305:modem.c       ****              modem_stats.time_to_network_connect = (int)(getTimeStamp() - (int32)modem_start_time_s
 1030              		.loc 1 305 0
 1031 0036 FFF7FEFF 		bl	getTimeStamp
 1032 003a 0246     		mov	r2, r0
 1033 003c 2C4B     		ldr	r3, .L68+4
 1034 003e 1B68     		ldr	r3, [r3]
 1035 0040 D31A     		subs	r3, r2, r3
 1036 0042 2C4A     		ldr	r2, .L68+8
 1037 0044 5360     		str	r3, [r2, #4]
 306:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Time to connecto to network: %d seconds",
 1038              		.loc 1 306 0
 1039 0046 2B4B     		ldr	r3, .L68+8
 1040 0048 5B68     		ldr	r3, [r3, #4]
 1041 004a 1A46     		mov	r2, r3
 1042 004c 2A49     		ldr	r1, .L68+12
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 26


 1043 004e 0020     		movs	r0, #0
 1044 0050 FFF7FEFF 		bl	printNotif
 307:modem.c       ****                                             modem_stats.time_to_network_connect);
 308:modem.c       ****             get_cell_network_stats(); // Get cell network stats
 1045              		.loc 1 308 0
 1046 0054 FFF7FEFF 		bl	get_cell_network_stats
 309:modem.c       ****             set_up_internet_connection(); // Setup the internet connection
 1047              		.loc 1 309 0
 1048 0058 FFF7FEFF 		bl	set_up_internet_connection
 310:modem.c       ****             modem_state = MODEM_STATE_WAITING_FOR_IP; // Change modem state 
 1049              		.loc 1 310 0
 1050 005c 234B     		ldr	r3, .L68
 1051 005e 0322     		movs	r2, #3
 1052 0060 1A70     		strb	r2, [r3]
 1053              	.L63:
 311:modem.c       ****         }
 312:modem.c       **** 
 313:modem.c       ****         //power off if we times out shold only take ~30 secs to connect to network
 314:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_NETWORK_CONNECT){
 1054              		.loc 1 314 0
 1055 0062 FFF7FEFF 		bl	getTimeStamp
 1056 0066 0246     		mov	r2, r0
 1057 0068 214B     		ldr	r3, .L68+4
 1058 006a 1B68     		ldr	r3, [r3]
 1059 006c D31A     		subs	r3, r2, r3
 1060 006e C82B     		cmp	r3, #200
 1061 0070 08DD     		ble	.L64
 315:modem.c       ****             modem_state = MODEM_STATE_OFF; // Change modem state
 1062              		.loc 1 315 0
 1063 0072 1E4B     		ldr	r3, .L68
 1064 0074 0022     		movs	r2, #0
 1065 0076 1A70     		strb	r2, [r3]
 316:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1066              		.loc 1 316 0
 1067 0078 FFF7FEFF 		bl	modem_power_down
 317:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on network connect");
 1068              		.loc 1 317 0
 1069 007c 1F49     		ldr	r1, .L68+16
 1070 007e 0220     		movs	r0, #2
 1071 0080 FFF7FEFF 		bl	printNotif
 1072              	.L64:
 318:modem.c       ****             
 319:modem.c       ****         }
 320:modem.c       ****         
 321:modem.c       ****         return 0u;//ok to hand off to sleep
 1073              		.loc 1 321 0
 1074 0084 0023     		movs	r3, #0
 1075 0086 2EE0     		b	.L61
 1076              	.L62:
 322:modem.c       ****         
 323:modem.c       ****     // Else if modem state is "waiting for IP"
 324:modem.c       ****     }else if(modem_state == MODEM_STATE_WAITING_FOR_IP){
 1077              		.loc 1 324 0
 1078 0088 184B     		ldr	r3, .L68
 1079 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1080 008c 032B     		cmp	r3, #3
 1081 008e 29D1     		bne	.L65
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 27


 325:modem.c       ****         // If the modem is connected to the internet, change modem state to "ready", save/print tim
 326:modem.c       ****         if(is_connected_to_internet()){
 1082              		.loc 1 326 0
 1083 0090 FFF7FEFF 		bl	is_connected_to_internet
 1084 0094 0346     		mov	r3, r0
 1085 0096 002B     		cmp	r3, #0
 1086 0098 11D0     		beq	.L66
 327:modem.c       ****             modem_state = MODEM_STATE_READY; // Change modem state
 1087              		.loc 1 327 0
 1088 009a 144B     		ldr	r3, .L68
 1089 009c 0422     		movs	r2, #4
 1090 009e 1A70     		strb	r2, [r3]
 328:modem.c       ****             // Save/print time to acquire IP address
 329:modem.c       ****             modem_stats.time_to_acquire_ip = (int)(getTimeStamp() - (int32)modem_start_time_stamp);
 1091              		.loc 1 329 0
 1092 00a0 FFF7FEFF 		bl	getTimeStamp
 1093 00a4 0246     		mov	r2, r0
 1094 00a6 124B     		ldr	r3, .L68+4
 1095 00a8 1B68     		ldr	r3, [r3]
 1096 00aa D31A     		subs	r3, r2, r3
 1097 00ac 114A     		ldr	r2, .L68+8
 1098 00ae 9360     		str	r3, [r2, #8]
 330:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Acquired IP address: %d seconds",
 1099              		.loc 1 330 0
 1100 00b0 104B     		ldr	r3, .L68+8
 1101 00b2 9B68     		ldr	r3, [r3, #8]
 1102 00b4 1A46     		mov	r2, r3
 1103 00b6 1249     		ldr	r1, .L68+20
 1104 00b8 0020     		movs	r0, #0
 1105 00ba FFF7FEFF 		bl	printNotif
 1106              	.L66:
 331:modem.c       ****                                             modem_stats.time_to_acquire_ip);
 332:modem.c       ****         }
 333:modem.c       ****         
 334:modem.c       ****         // Power off if we times out shold only take ~30 secs to connect to network
 335:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_IP_ACQUIRE){
 1107              		.loc 1 335 0
 1108 00be FFF7FEFF 		bl	getTimeStamp
 1109 00c2 0246     		mov	r2, r0
 1110 00c4 0A4B     		ldr	r3, .L68+4
 1111 00c6 1B68     		ldr	r3, [r3]
 1112 00c8 D31A     		subs	r3, r2, r3
 1113 00ca E62B     		cmp	r3, #230
 1114 00cc 08DD     		ble	.L67
 336:modem.c       ****             modem_state = MODEM_STATE_OFF;
 1115              		.loc 1 336 0
 1116 00ce 074B     		ldr	r3, .L68
 1117 00d0 0022     		movs	r2, #0
 1118 00d2 1A70     		strb	r2, [r3]
 337:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1119              		.loc 1 337 0
 1120 00d4 FFF7FEFF 		bl	modem_power_down
 338:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on IP address acquire.");
 1121              		.loc 1 338 0
 1122 00d8 0A49     		ldr	r1, .L68+24
 1123 00da 0220     		movs	r0, #2
 1124 00dc FFF7FEFF 		bl	printNotif
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 28


 1125              	.L67:
 339:modem.c       ****       
 340:modem.c       ****         }
 341:modem.c       ****         return 0u;//ok to hand off to sleep
 1126              		.loc 1 341 0
 1127 00e0 0023     		movs	r3, #0
 1128 00e2 00E0     		b	.L61
 1129              	.L65:
 342:modem.c       ****     }
 343:modem.c       ****     
 344:modem.c       ****     return 0u;
 1130              		.loc 1 344 0
 1131 00e4 0023     		movs	r3, #0
 1132              	.L61:
 345:modem.c       ****     
 346:modem.c       **** }
 1133              		.loc 1 346 0
 1134 00e6 1846     		mov	r0, r3
 1135 00e8 80BD     		pop	{r7, pc}
 1136              	.L69:
 1137 00ea 00BF     		.align	2
 1138              	.L68:
 1139 00ec 00000000 		.word	modem_state
 1140 00f0 00000000 		.word	modem_start_time_stamp
 1141 00f4 00000000 		.word	modem_stats
 1142 00f8 A0010000 		.word	.LC13
 1143 00fc C8010000 		.word	.LC14
 1144 0100 EC010000 		.word	.LC15
 1145 0104 0C020000 		.word	.LC16
 1146              		.cfi_endproc
 1147              	.LFE75:
 1148              		.size	modem_process_tasks, .-modem_process_tasks
 1149              		.section	.rodata
 1150 0233 00       		.align	2
 1151              	.LC17:
 1152 0234 43686563 		.ascii	"Checking AT+CREG?\000"
 1152      6B696E67 
 1152      2041542B 
 1152      43524547 
 1152      3F00
 1153 0246 0000     		.align	2
 1154              	.LC18:
 1155 0248 41542B43 		.ascii	"AT+CREG?\015\000"
 1155      5245473F 
 1155      0D00
 1156 0252 0000     		.align	2
 1157              	.LC19:
 1158 0254 45787472 		.ascii	"Extracting string AT+CREG?\000"
 1158      61637469 
 1158      6E672073 
 1158      7472696E 
 1158      67204154 
 1159 026f 00       		.align	2
 1160              	.LC20:
 1161 0270 75617274 		.ascii	"uart_received_string: %s\000"
 1161      5F726563 
 1161      65697665 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 29


 1161      645F7374 
 1161      72696E67 
 1162 0289 000000   		.align	2
 1163              	.LC21:
 1164 028c 0D00     		.ascii	"\015\000"
 1165 028e 0000     		.align	2
 1166              	.LC22:
 1167 0290 3A2000   		.ascii	": \000"
 1168 0293 00       		.align	2
 1169              	.LC23:
 1170 0294 52656769 		.ascii	"Registered to network, CREG: %s\000"
 1170      73746572 
 1170      65642074 
 1170      6F206E65 
 1170      74776F72 
 1171              		.align	2
 1172              	.LC24:
 1173 02b4 446F6E65 		.ascii	"Done extracing string AT+CREG?\000"
 1173      20657874 
 1173      72616369 
 1173      6E672073 
 1173      7472696E 
 1174 02d3 00       		.align	2
 1175              	.LC25:
 1176 02d4 302C3100 		.ascii	"0,1\000"
 1177              		.section	.text.is_connected_to_cell_network,"ax",%progbits
 1178              		.align	2
 1179              		.global	is_connected_to_cell_network
 1180              		.thumb
 1181              		.thumb_func
 1182              		.type	is_connected_to_cell_network, %function
 1183              	is_connected_to_cell_network:
 1184              	.LFB76:
 347:modem.c       **** 
 348:modem.c       **** // Checks network status, writes commands to the modem, then extracts string from UART
 349:modem.c       **** uint8 is_connected_to_cell_network(){
 1185              		.loc 1 349 0
 1186              		.cfi_startproc
 1187              		@ args = 0, pretend = 0, frame = 16
 1188              		@ frame_needed = 1, uses_anonymous_args = 0
 1189 0000 80B5     		push	{r7, lr}
 1190              		.cfi_def_cfa_offset 8
 1191              		.cfi_offset 7, -8
 1192              		.cfi_offset 14, -4
 1193 0002 84B0     		sub	sp, sp, #16
 1194              		.cfi_def_cfa_offset 24
 1195 0004 00AF     		add	r7, sp, #0
 1196              		.cfi_def_cfa_register 7
 350:modem.c       ****     // AT command AT+CREG? is the Network Registration Report to check network status -- need '0,0'
 351:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Checking AT+CREG?");
 1197              		.loc 1 351 0
 1198 0006 1B49     		ldr	r1, .L74
 1199 0008 0020     		movs	r0, #0
 1200 000a FFF7FEFF 		bl	printNotif
 352:modem.c       ****     // create new uint8 variable stust and set to equal the output of the function at_write_command
 353:modem.c       ****     uint8 status = at_write_command("AT+CREG?\r", "OK",DEFAULT_AT_TIMEOUT);
 1201              		.loc 1 353 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 30


 1202 000e 4FF4FA62 		mov	r2, #2000
 1203 0012 1949     		ldr	r1, .L74+4
 1204 0014 1948     		ldr	r0, .L74+8
 1205 0016 FFF7FEFF 		bl	at_write_command
 1206 001a 0346     		mov	r3, r0
 1207 001c FB73     		strb	r3, [r7, #15]
 354:modem.c       ****     
 355:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Extracting string AT+CREG?");
 1208              		.loc 1 355 0
 1209 001e 1849     		ldr	r1, .L74+12
 1210 0020 0020     		movs	r0, #0
 1211 0022 FFF7FEFF 		bl	printNotif
 356:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"uart_received_string: %s",uart_received_string);
 1212              		.loc 1 356 0
 1213 0026 174A     		ldr	r2, .L74+16
 1214 0028 1749     		ldr	r1, .L74+20
 1215 002a 0020     		movs	r0, #0
 1216 002c FFF7FEFF 		bl	printNotif
 357:modem.c       ****     
 358:modem.c       ****     // If the modem has a status
 359:modem.c       ****     if(status){
 1217              		.loc 1 359 0
 1218 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1219 0032 002B     		cmp	r3, #0
 1220 0034 19D0     		beq	.L71
 1221              	.LBB7:
 360:modem.c       ****         // Create a character array of length 10 called creg
 361:modem.c       ****         char creg[10];
 362:modem.c       ****         // Extract string from the UART
 363:modem.c       ****         extract_string(uart_received_string,": ","\r",creg);
 1222              		.loc 1 363 0
 1223 0036 3B1D     		adds	r3, r7, #4
 1224 0038 144A     		ldr	r2, .L74+24
 1225 003a 1549     		ldr	r1, .L74+28
 1226 003c 1148     		ldr	r0, .L74+16
 1227 003e FFF7FEFF 		bl	extract_string
 364:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Registered to network, CREG: %s",creg);
 1228              		.loc 1 364 0
 1229 0042 3B1D     		adds	r3, r7, #4
 1230 0044 1A46     		mov	r2, r3
 1231 0046 1349     		ldr	r1, .L74+32
 1232 0048 0020     		movs	r0, #0
 1233 004a FFF7FEFF 		bl	printNotif
 365:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Done extracing string AT+CREG?");
 1234              		.loc 1 365 0
 1235 004e 1249     		ldr	r1, .L74+36
 1236 0050 0020     		movs	r0, #0
 1237 0052 FFF7FEFF 		bl	printNotif
 366:modem.c       ****     
 367:modem.c       ****         // Search creg for "0,1", if "0,1" exists, it will return 1u otherwise it will return NULL
 368:modem.c       ****         // If it returns 1u and not NULL, then return 1u
 369:modem.c       ****         if(strstr(creg,"0,1")!=NULL){
 1238              		.loc 1 369 0
 1239 0056 3B1D     		adds	r3, r7, #4
 1240 0058 1049     		ldr	r1, .L74+40
 1241 005a 1846     		mov	r0, r3
 1242 005c FFF7FEFF 		bl	strstr
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 31


 1243 0060 0346     		mov	r3, r0
 1244 0062 002B     		cmp	r3, #0
 1245 0064 01D0     		beq	.L71
 370:modem.c       ****             //time_network_connect = getTimeStamp();
 371:modem.c       ****             return 1u;
 1246              		.loc 1 371 0
 1247 0066 0123     		movs	r3, #1
 1248 0068 00E0     		b	.L73
 1249              	.L71:
 1250              	.LBE7:
 372:modem.c       ****         }
 373:modem.c       ****     }
 374:modem.c       ****     // If the modem doesn't have a status, return 0u
 375:modem.c       ****     return 0u;
 1251              		.loc 1 375 0
 1252 006a 0023     		movs	r3, #0
 1253              	.L73:
 376:modem.c       ****         
 377:modem.c       **** }
 1254              		.loc 1 377 0
 1255 006c 1846     		mov	r0, r3
 1256 006e 1037     		adds	r7, r7, #16
 1257              		.cfi_def_cfa_offset 8
 1258 0070 BD46     		mov	sp, r7
 1259              		.cfi_def_cfa_register 13
 1260              		@ sp needed
 1261 0072 80BD     		pop	{r7, pc}
 1262              	.L75:
 1263              		.align	2
 1264              	.L74:
 1265 0074 34020000 		.word	.LC17
 1266 0078 00000000 		.word	.LC0
 1267 007c 48020000 		.word	.LC18
 1268 0080 54020000 		.word	.LC19
 1269 0084 00000000 		.word	uart_received_string
 1270 0088 70020000 		.word	.LC20
 1271 008c 8C020000 		.word	.LC21
 1272 0090 90020000 		.word	.LC22
 1273 0094 94020000 		.word	.LC23
 1274 0098 B4020000 		.word	.LC24
 1275 009c D4020000 		.word	.LC25
 1276              		.cfi_endproc
 1277              	.LFE76:
 1278              		.size	is_connected_to_cell_network, .-is_connected_to_cell_network
 1279              		.section	.rodata
 1280              		.align	2
 1281              	.LC26:
 1282 02d8 41542353 		.ascii	"AT#SGACT=1,1\015\012\000"
 1282      47414354 
 1282      3D312C31 
 1282      0D0A00
 1283              		.section	.text.set_up_internet_connection,"ax",%progbits
 1284              		.align	2
 1285              		.global	set_up_internet_connection
 1286              		.thumb
 1287              		.thumb_func
 1288              		.type	set_up_internet_connection, %function
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 32


 1289              	set_up_internet_connection:
 1290              	.LFB77:
 378:modem.c       **** 
 379:modem.c       **** // Connect the modem to the internet
 380:modem.c       **** void set_up_internet_connection(){
 1291              		.loc 1 380 0
 1292              		.cfi_startproc
 1293              		@ args = 0, pretend = 0, frame = 0
 1294              		@ frame_needed = 1, uses_anonymous_args = 0
 1295 0000 80B5     		push	{r7, lr}
 1296              		.cfi_def_cfa_offset 8
 1297              		.cfi_offset 7, -8
 1298              		.cfi_offset 14, -4
 1299 0002 00AF     		add	r7, sp, #0
 1300              		.cfi_def_cfa_register 7
 381:modem.c       ****     
 382:modem.c       ****     //port 3
 383:modem.c       ****    //<connId>,<srMode>,<dataMode>, 
 384:modem.c       ****     //at_write_command("AT#SCFGEXT=1,1,0,0,0,0\r", "OK",DEFAULT_AT_TIMEOUT);////LTE modem relevant
 385:modem.c       ****     
 386:modem.c       ****     //<connId>,<cid>,<pktSz>,<maxTo>,<connTo>,<txTo>
 387:modem.c       ****     //at_write_command("AT#SCFG=1,3,300,90,600,50\r", "OK",DEFAULT_AT_TIMEOUT); //LTE modem relevan
 388:modem.c       ****     // <cid>,<stat>
 389:modem.c       ****    
 390:modem.c       ****     // AT command SGACT is Context Activation command is used to activate the specified PDP context
 391:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",1000u);
 1301              		.loc 1 391 0
 1302 0004 4FF47A72 		mov	r2, #1000
 1303 0008 0249     		ldr	r1, .L77
 1304 000a 0348     		ldr	r0, .L77+4
 1305 000c FFF7FEFF 		bl	at_write_command
 392:modem.c       ****     
 393:modem.c       **** }
 1306              		.loc 1 393 0
 1307 0010 00BF     		nop
 1308 0012 80BD     		pop	{r7, pc}
 1309              	.L78:
 1310              		.align	2
 1311              	.L77:
 1312 0014 00000000 		.word	.LC0
 1313 0018 D8020000 		.word	.LC26
 1314              		.cfi_endproc
 1315              	.LFE77:
 1316              		.size	set_up_internet_connection, .-set_up_internet_connection
 1317              		.section	.rodata
 1318 02e7 00       		.align	2
 1319              	.LC27:
 1320 02e8 312C3100 		.ascii	"1,1\000"
 1321              		.align	2
 1322              	.LC28:
 1323 02ec 41542353 		.ascii	"AT#SGACT?\015\000"
 1323      47414354 
 1323      3F0D00
 1324              		.section	.text.is_connected_to_internet,"ax",%progbits
 1325              		.align	2
 1326              		.global	is_connected_to_internet
 1327              		.thumb
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 33


 1328              		.thumb_func
 1329              		.type	is_connected_to_internet, %function
 1330              	is_connected_to_internet:
 1331              	.LFB78:
 394:modem.c       **** 
 395:modem.c       **** // Checks if the modem is connected to the internet
 396:modem.c       **** uint8 is_connected_to_internet(){
 1332              		.loc 1 396 0
 1333              		.cfi_startproc
 1334              		@ args = 0, pretend = 0, frame = 0
 1335              		@ frame_needed = 1, uses_anonymous_args = 0
 1336 0000 80B5     		push	{r7, lr}
 1337              		.cfi_def_cfa_offset 8
 1338              		.cfi_offset 7, -8
 1339              		.cfi_offset 14, -4
 1340 0002 00AF     		add	r7, sp, #0
 1341              		.cfi_def_cfa_register 7
 397:modem.c       ****     // AT command SGACT? reports the range for the parameters <cid> and <stat>
 398:modem.c       ****     // cid: is the Packet Data Protocol (PDP) Context Identifier which specifies the particular PDP
 399:modem.c       ****     // stat: gives the context staus (0 deactivated and 1 activated)
 400:modem.c       ****     // Check for 3,1 if Verizon 
 401:modem.c       ****     if(at_write_command("AT#SGACT?\r", "1,1",DEFAULT_AT_TIMEOUT)){
 1342              		.loc 1 401 0
 1343 0004 4FF4FA62 		mov	r2, #2000
 1344 0008 0549     		ldr	r1, .L82
 1345 000a 0648     		ldr	r0, .L82+4
 1346 000c FFF7FEFF 		bl	at_write_command
 1347 0010 0346     		mov	r3, r0
 1348 0012 002B     		cmp	r3, #0
 1349 0014 01D0     		beq	.L80
 402:modem.c       ****         return 1u;
 1350              		.loc 1 402 0
 1351 0016 0123     		movs	r3, #1
 1352 0018 00E0     		b	.L81
 1353              	.L80:
 403:modem.c       ****     }
 404:modem.c       ****     return 0u;  
 1354              		.loc 1 404 0
 1355 001a 0023     		movs	r3, #0
 1356              	.L81:
 405:modem.c       **** }
 1357              		.loc 1 405 0
 1358 001c 1846     		mov	r0, r3
 1359 001e 80BD     		pop	{r7, pc}
 1360              	.L83:
 1361              		.align	2
 1362              	.L82:
 1363 0020 E8020000 		.word	.LC27
 1364 0024 EC020000 		.word	.LC28
 1365              		.cfi_endproc
 1366              	.LFE78:
 1367              		.size	is_connected_to_internet, .-is_connected_to_internet
 1368              		.section	.rodata
 1369 02f7 00       		.align	2
 1370              	.LC29:
 1371 02f8 41542B43 		.ascii	"AT+CSQ\015\000"
 1371      53510D00 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 34


 1372              		.align	2
 1373              	.LC30:
 1374 0300 4E657477 		.ascii	"Network STts: %s\000"
 1374      6F726B20 
 1374      53547473 
 1374      3A202573 
 1374      00
 1375 0311 000000   		.align	2
 1376              	.LC31:
 1377 0314 2C00     		.ascii	",\000"
 1378              		.section	.text.get_cell_network_stats,"ax",%progbits
 1379              		.align	2
 1380              		.global	get_cell_network_stats
 1381              		.thumb
 1382              		.thumb_func
 1383              		.type	get_cell_network_stats, %function
 1384              	get_cell_network_stats:
 1385              	.LFB79:
 406:modem.c       **** 
 407:modem.c       **** // Get cellular network stats 
 408:modem.c       **** void get_cell_network_stats(){
 1386              		.loc 1 408 0
 1387              		.cfi_startproc
 1388              		@ args = 0, pretend = 0, frame = 24
 1389              		@ frame_needed = 1, uses_anonymous_args = 0
 1390 0000 80B5     		push	{r7, lr}
 1391              		.cfi_def_cfa_offset 8
 1392              		.cfi_offset 7, -8
 1393              		.cfi_offset 14, -4
 1394 0002 86B0     		sub	sp, sp, #24
 1395              		.cfi_def_cfa_offset 32
 1396 0004 00AF     		add	r7, sp, #0
 1397              		.cfi_def_cfa_register 7
 1398              	.LBB8:
 409:modem.c       ****     // Gets RSSI and FER values
 410:modem.c       ****     // RSSI (Received Signal Strength Indicator) is a measurement of how well your device can hear 
 411:modem.c       ****     // RSRQ (Reference Signal Received Quality) (or SQ for short) gives the signal quality. 
 412:modem.c       ****     for(uint8 attempts =0; attempts <10; attempts++){
 1399              		.loc 1 412 0
 1400 0006 0023     		movs	r3, #0
 1401 0008 FB75     		strb	r3, [r7, #23]
 1402 000a 3BE0     		b	.L85
 1403              	.L90:
 1404              	.LBB9:
 413:modem.c       ****         // AT command CSQ checks Signal Quality
 414:modem.c       ****         at_write_command("AT+CSQ\r", "OK",DEFAULT_AT_TIMEOUT);
 1405              		.loc 1 414 0
 1406 000c 4FF4FA62 		mov	r2, #2000
 1407 0010 2049     		ldr	r1, .L92
 1408 0012 2148     		ldr	r0, .L92+4
 1409 0014 FFF7FEFF 		bl	at_write_command
 415:modem.c       ****         
 416:modem.c       ****         char csq[10]; // Create a character array of length 10 called csq 
 417:modem.c       ****         // Extract string from the UART
 418:modem.c       ****         extract_string(uart_received_string,": ","\r",csq);
 1410              		.loc 1 418 0
 1411 0018 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 35


 1412 001a 204A     		ldr	r2, .L92+8
 1413 001c 2049     		ldr	r1, .L92+12
 1414 001e 2148     		ldr	r0, .L92+16
 1415 0020 FFF7FEFF 		bl	extract_string
 419:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Network STts: %s",csq);
 1416              		.loc 1 419 0
 1417 0024 3B1D     		adds	r3, r7, #4
 1418 0026 1A46     		mov	r2, r3
 1419 0028 1F49     		ldr	r1, .L92+20
 1420 002a 0020     		movs	r0, #0
 1421 002c FFF7FEFF 		bl	printNotif
 420:modem.c       ****         
 421:modem.c       ****         char *token; // Create a character variable pointer
 422:modem.c       ****         // strtok(): breaks "csq" into smaller string when sees ","
 423:modem.c       ****         token = strtok(csq,",");
 1422              		.loc 1 423 0
 1423 0030 3B1D     		adds	r3, r7, #4
 1424 0032 1E49     		ldr	r1, .L92+24
 1425 0034 1846     		mov	r0, r3
 1426 0036 FFF7FEFF 		bl	strtok
 1427 003a 3861     		str	r0, [r7, #16]
 424:modem.c       ****         // If token is not NULL then set modem_stats.rssi equal to the integer "token"
 425:modem.c       ****         // int atoi(const char *str) converts the string argument str to an integer (type int).
 426:modem.c       ****         if(token != NULL){
 1428              		.loc 1 426 0
 1429 003c 3B69     		ldr	r3, [r7, #16]
 1430 003e 002B     		cmp	r3, #0
 1431 0040 06D0     		beq	.L86
 427:modem.c       ****             modem_stats.rssi = atoi(token);
 1432              		.loc 1 427 0
 1433 0042 3869     		ldr	r0, [r7, #16]
 1434 0044 FFF7FEFF 		bl	atoi
 1435 0048 0346     		mov	r3, r0
 1436 004a DAB2     		uxtb	r2, r3
 1437 004c 184B     		ldr	r3, .L92+28
 1438 004e 1A70     		strb	r2, [r3]
 1439              	.L86:
 428:modem.c       ****         }
 429:modem.c       ****         // This "NULL" says to continue where you left off last time.
 430:modem.c       ****         token = strtok(NULL,",");
 1440              		.loc 1 430 0
 1441 0050 1649     		ldr	r1, .L92+24
 1442 0052 0020     		movs	r0, #0
 1443 0054 FFF7FEFF 		bl	strtok
 1444 0058 3861     		str	r0, [r7, #16]
 431:modem.c       ****         if(token != NULL){
 1445              		.loc 1 431 0
 1446 005a 3B69     		ldr	r3, [r7, #16]
 1447 005c 002B     		cmp	r3, #0
 1448 005e 06D0     		beq	.L87
 432:modem.c       ****             modem_stats.sq = atoi(token);
 1449              		.loc 1 432 0
 1450 0060 3869     		ldr	r0, [r7, #16]
 1451 0062 FFF7FEFF 		bl	atoi
 1452 0066 0346     		mov	r3, r0
 1453 0068 DAB2     		uxtb	r2, r3
 1454 006a 114B     		ldr	r3, .L92+28
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 36


 1455 006c 5A70     		strb	r2, [r3, #1]
 1456              	.L87:
 433:modem.c       ****         }
 434:modem.c       ****         // If rssi is not equal to 99 OR rssi is not equal to 0, then break.
 435:modem.c       ****         if(modem_stats.rssi != 99 || modem_stats.rssi !=0){
 1457              		.loc 1 435 0
 1458 006e 104B     		ldr	r3, .L92+28
 1459 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1460 0072 632B     		cmp	r3, #99
 1461 0074 09D1     		bne	.L91
 1462              		.loc 1 435 0 is_stmt 0 discriminator 1
 1463 0076 0E4B     		ldr	r3, .L92+28
 1464 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1465 007a 002B     		cmp	r3, #0
 1466 007c 05D1     		bne	.L91
 1467              	.LBE9:
 412:modem.c       ****         // AT command CSQ checks Signal Quality
 1468              		.loc 1 412 0 is_stmt 1
 1469 007e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1470 0080 0133     		adds	r3, r3, #1
 1471 0082 FB75     		strb	r3, [r7, #23]
 1472              	.L85:
 412:modem.c       ****         // AT command CSQ checks Signal Quality
 1473              		.loc 1 412 0 is_stmt 0 discriminator 1
 1474 0084 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1475 0086 092B     		cmp	r3, #9
 1476 0088 C0D9     		bls	.L90
 1477              	.L91:
 1478              	.LBE8:
 436:modem.c       ****             break;
 437:modem.c       ****         }
 438:modem.c       ****     }
 439:modem.c       **** }
 1479              		.loc 1 439 0 is_stmt 1
 1480 008a 00BF     		nop
 1481 008c 1837     		adds	r7, r7, #24
 1482              		.cfi_def_cfa_offset 8
 1483 008e BD46     		mov	sp, r7
 1484              		.cfi_def_cfa_register 13
 1485              		@ sp needed
 1486 0090 80BD     		pop	{r7, pc}
 1487              	.L93:
 1488 0092 00BF     		.align	2
 1489              	.L92:
 1490 0094 00000000 		.word	.LC0
 1491 0098 F8020000 		.word	.LC29
 1492 009c 8C020000 		.word	.LC21
 1493 00a0 90020000 		.word	.LC22
 1494 00a4 00000000 		.word	uart_received_string
 1495 00a8 00030000 		.word	.LC30
 1496 00ac 14030000 		.word	.LC31
 1497 00b0 00000000 		.word	modem_stats
 1498              		.cfi_endproc
 1499              	.LFE79:
 1500              		.size	get_cell_network_stats, .-get_cell_network_stats
 1501              		.section	.rodata
 1502 0316 0000     		.align	2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 37


 1503              	.LC32:
 1504 0318 41542343 		.ascii	"AT#CGMM\015\000"
 1504      474D4D0D 
 1504      00
 1505 0321 000000   		.align	2
 1506              	.LC33:
 1507 0324 4D6F6465 		.ascii	"Modem Model: %s\000"
 1507      6D204D6F 
 1507      64656C3A 
 1507      20257300 
 1508              		.align	2
 1509              	.LC34:
 1510 0334 41542343 		.ascii	"AT#CCID\015\000"
 1510      4349440D 
 1510      00
 1511 033d 000000   		.align	2
 1512              	.LC35:
 1513 0340 53494D20 		.ascii	"SIM ID: %s\000"
 1513      49443A20 
 1513      257300
 1514 034b 00       		.align	2
 1515              	.LC36:
 1516 034c 41542B43 		.ascii	"AT+CGSN\015\000"
 1516      47534E0D 
 1516      00
 1517 0355 000000   		.align	2
 1518              	.LC37:
 1519 0358 494D4549 		.ascii	"IMEI: %s\000"
 1519      3A202573 
 1519      00
 1520 0361 000000   		.align	2
 1521              	.LC38:
 1522 0364 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\015\012"
 1522      4744434F 
 1522      4E543D31 
 1522      2C224950 
 1522      222C2277 
 1523 038d 00       		.ascii	"\000"
 1524 038e 0000     		.align	2
 1525              	.LC39:
 1526 0390 41542B43 		.ascii	"AT+CFUN?\015\000"
 1526      46554E3F 
 1526      0D00
 1527 039a 0000     		.align	2
 1528              	.LC40:
 1529 039c 4346554E 		.ascii	"CFUN: %s\000"
 1529      3A202573 
 1529      00
 1530 03a5 000000   		.align	2
 1531              	.LC41:
 1532 03a8 41542B43 		.ascii	"AT+CFUN=1\015\000"
 1532      46554E3D 
 1532      310D00
 1533              		.section	.text.modem_configure_settings,"ax",%progbits
 1534              		.align	2
 1535              		.global	modem_configure_settings
 1536              		.thumb
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 38


 1537              		.thumb_func
 1538              		.type	modem_configure_settings, %function
 1539              	modem_configure_settings:
 1540              	.LFB80:
 440:modem.c       ****     
 441:modem.c       ****     
 442:modem.c       **** // Configure the modem settings
 443:modem.c       **** void modem_configure_settings(){
 1541              		.loc 1 443 0
 1542              		.cfi_startproc
 1543              		@ args = 0, pretend = 0, frame = 16
 1544              		@ frame_needed = 1, uses_anonymous_args = 0
 1545 0000 80B5     		push	{r7, lr}
 1546              		.cfi_def_cfa_offset 8
 1547              		.cfi_offset 7, -8
 1548              		.cfi_offset 14, -4
 1549 0002 84B0     		sub	sp, sp, #16
 1550              		.cfi_def_cfa_offset 24
 1551 0004 00AF     		add	r7, sp, #0
 1552              		.cfi_def_cfa_register 7
 444:modem.c       ****     
 445:modem.c       ****     // Save/print modem model ID number
 446:modem.c       ****     if(modem_info.model_id[0] == '\0'){
 1553              		.loc 1 446 0
 1554 0006 3B4B     		ldr	r3, .L101
 1555 0008 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1556 000a 002B     		cmp	r3, #0
 1557 000c 13D1     		bne	.L95
 447:modem.c       ****         // AT command #CGMM returns the "device model identification" code with the command echo.
 448:modem.c       ****         if(at_write_command("AT#CGMM\r","OK",DEFAULT_AT_TIMEOUT)){
 1558              		.loc 1 448 0
 1559 000e 4FF4FA62 		mov	r2, #2000
 1560 0012 3949     		ldr	r1, .L101+4
 1561 0014 3948     		ldr	r0, .L101+8
 1562 0016 FFF7FEFF 		bl	at_write_command
 1563 001a 0346     		mov	r3, r0
 1564 001c 002B     		cmp	r3, #0
 1565 001e 0AD0     		beq	.L95
 449:modem.c       ****             // Extract modem model ID number string from the UART
 450:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.model_id);
 1566              		.loc 1 450 0
 1567 0020 374B     		ldr	r3, .L101+12
 1568 0022 384A     		ldr	r2, .L101+16
 1569 0024 3849     		ldr	r1, .L101+20
 1570 0026 3948     		ldr	r0, .L101+24
 1571 0028 FFF7FEFF 		bl	extract_string
 451:modem.c       ****             // Print modem model ID number
 452:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem Model: %s",modem_info.model_id);
 1572              		.loc 1 452 0
 1573 002c 344A     		ldr	r2, .L101+12
 1574 002e 3849     		ldr	r1, .L101+28
 1575 0030 0020     		movs	r0, #0
 1576 0032 FFF7FEFF 		bl	printNotif
 1577              	.L95:
 453:modem.c       ****         }
 454:modem.c       ****     }
 455:modem.c       ****     
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 39


 456:modem.c       ****    // Save/print SIM-card ID
 457:modem.c       ****    if(modem_info.sim_id[0] == '\0'){
 1578              		.loc 1 457 0
 1579 0036 2F4B     		ldr	r3, .L101
 1580 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1581 003a 002B     		cmp	r3, #0
 1582 003c 13D1     		bne	.L96
 458:modem.c       ****         // AT command #CCID is an execution command that reads the SIM number 
 459:modem.c       ****         if(at_write_command("AT#CCID\r", "OK", DEFAULT_AT_TIMEOUT)){
 1583              		.loc 1 459 0
 1584 003e 4FF4FA62 		mov	r2, #2000
 1585 0042 2D49     		ldr	r1, .L101+4
 1586 0044 3348     		ldr	r0, .L101+32
 1587 0046 FFF7FEFF 		bl	at_write_command
 1588 004a 0346     		mov	r3, r0
 1589 004c 002B     		cmp	r3, #0
 1590 004e 0AD0     		beq	.L96
 460:modem.c       ****             // Extract SIM-card ID string from the UART
 461:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.sim_id);
 1591              		.loc 1 461 0
 1592 0050 284B     		ldr	r3, .L101
 1593 0052 2C4A     		ldr	r2, .L101+16
 1594 0054 2C49     		ldr	r1, .L101+20
 1595 0056 2D48     		ldr	r0, .L101+24
 1596 0058 FFF7FEFF 		bl	extract_string
 462:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"SIM ID: %s",modem_info.sim_id);
 1597              		.loc 1 462 0
 1598 005c 254A     		ldr	r2, .L101
 1599 005e 2E49     		ldr	r1, .L101+36
 1600 0060 0020     		movs	r0, #0
 1601 0062 FFF7FEFF 		bl	printNotif
 1602              	.L96:
 463:modem.c       ****         }
 464:modem.c       ****    }
 465:modem.c       **** 
 466:modem.c       ****     // Save/print modem IMEI
 467:modem.c       ****     if(modem_info.imei[0] == '\0'){
 1603              		.loc 1 467 0
 1604 0066 234B     		ldr	r3, .L101
 1605 0068 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1606 006c 002B     		cmp	r3, #0
 1607 006e 13D1     		bne	.L97
 468:modem.c       ****         // AT command #CGSN returns the product serial number, identified as the IMEI of the mobile
 469:modem.c       ****         if(at_write_command("AT+CGSN\r","OK",DEFAULT_AT_TIMEOUT)){
 1608              		.loc 1 469 0
 1609 0070 4FF4FA62 		mov	r2, #2000
 1610 0074 2049     		ldr	r1, .L101+4
 1611 0076 2948     		ldr	r0, .L101+40
 1612 0078 FFF7FEFF 		bl	at_write_command
 1613 007c 0346     		mov	r3, r0
 1614 007e 002B     		cmp	r3, #0
 1615 0080 0AD0     		beq	.L97
 470:modem.c       ****             // Extract modem IMEI number string from the UART
 471:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.imei);
 1616              		.loc 1 471 0
 1617 0082 274B     		ldr	r3, .L101+44
 1618 0084 1F4A     		ldr	r2, .L101+16
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 40


 1619 0086 2049     		ldr	r1, .L101+20
 1620 0088 2048     		ldr	r0, .L101+24
 1621 008a FFF7FEFF 		bl	extract_string
 472:modem.c       ****             // Print modem IMEI number
 473:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"IMEI: %s",modem_info.imei);
 1622              		.loc 1 473 0
 1623 008e 244A     		ldr	r2, .L101+44
 1624 0090 2449     		ldr	r1, .L101+48
 1625 0092 0020     		movs	r0, #0
 1626 0094 FFF7FEFF 		bl	printNotif
 1627              	.L97:
 474:modem.c       ****         } 
 475:modem.c       ****     }
 476:modem.c       ****     
 477:modem.c       ****     // Configure protocol and cellular end point
 478:modem.c       ****     // AT command +CGDCONT defines the PDP context parameter values for a PDP context identified by
 479:modem.c       ****     at_write_command("AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\r\n", "OK", DEFAULT_AT_TIMEOUT);
 1628              		.loc 1 479 0
 1629 0098 4FF4FA62 		mov	r2, #2000
 1630 009c 1649     		ldr	r1, .L101+4
 1631 009e 2248     		ldr	r0, .L101+52
 1632 00a0 FFF7FEFF 		bl	at_write_command
 480:modem.c       ****     
 481:modem.c       ****     // Check if modem power savings is enabled. If so, disable it so we can send data.
 482:modem.c       ****     // AT command +CFUN? is a read command that reports the current setting of <fun> which is the p
 483:modem.c       ****     if(at_write_command("AT+CFUN?\r", "OK",DEFAULT_AT_TIMEOUT)){
 1633              		.loc 1 483 0
 1634 00a4 4FF4FA62 		mov	r2, #2000
 1635 00a8 1349     		ldr	r1, .L101+4
 1636 00aa 2048     		ldr	r0, .L101+56
 1637 00ac FFF7FEFF 		bl	at_write_command
 1638 00b0 0346     		mov	r3, r0
 1639 00b2 002B     		cmp	r3, #0
 1640 00b4 19D0     		beq	.L100
 1641              	.LBB10:
 484:modem.c       ****         char CFUN[10]; // Create a character array of length 10 called CFUN 
 485:modem.c       ****         // Extract UART string recieved from the modem
 486:modem.c       ****         extract_string(uart_received_string,": ","\r",CFUN);
 1642              		.loc 1 486 0
 1643 00b6 3B1D     		adds	r3, r7, #4
 1644 00b8 124A     		ldr	r2, .L101+16
 1645 00ba 1349     		ldr	r1, .L101+20
 1646 00bc 1348     		ldr	r0, .L101+24
 1647 00be FFF7FEFF 		bl	extract_string
 487:modem.c       ****         // Print UART string recieved from the modem
 488:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"CFUN: %s",CFUN);
 1648              		.loc 1 488 0
 1649 00c2 3B1D     		adds	r3, r7, #4
 1650 00c4 1A46     		mov	r2, r3
 1651 00c6 1A49     		ldr	r1, .L101+60
 1652 00c8 0020     		movs	r0, #0
 1653 00ca FFF7FEFF 		bl	printNotif
 489:modem.c       ****         // Search CRUN for "1", if "1" exists, it will return 1u otherwise it will return NULL
 490:modem.c       ****         // If it returns NULL, then write another command to the modem
 491:modem.c       ****         if(strstr(CFUN,"1") == NULL){
 1654              		.loc 1 491 0
 1655 00ce 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 41


 1656 00d0 3121     		movs	r1, #49
 1657 00d2 1846     		mov	r0, r3
 1658 00d4 FFF7FEFF 		bl	strchr
 1659 00d8 0346     		mov	r3, r0
 1660 00da 002B     		cmp	r3, #0
 1661 00dc 05D1     		bne	.L100
 492:modem.c       ****             // AT command +CFUN= is a set command which selects the level of functionality in the m
 493:modem.c       ****             // = 1 means mobile full functionality with power saving disabled 
 494:modem.c       ****             at_write_command("AT+CFUN=1\r", "OK",DEFAULT_AT_TIMEOUT);
 1662              		.loc 1 494 0
 1663 00de 4FF4FA62 		mov	r2, #2000
 1664 00e2 0549     		ldr	r1, .L101+4
 1665 00e4 1348     		ldr	r0, .L101+64
 1666 00e6 FFF7FEFF 		bl	at_write_command
 1667              	.L100:
 1668              	.LBE10:
 495:modem.c       ****         }
 496:modem.c       ****     }
 497:modem.c       **** 
 498:modem.c       ****     
 499:modem.c       **** }
 1669              		.loc 1 499 0
 1670 00ea 00BF     		nop
 1671 00ec 1037     		adds	r7, r7, #16
 1672              		.cfi_def_cfa_offset 8
 1673 00ee BD46     		mov	sp, r7
 1674              		.cfi_def_cfa_register 13
 1675              		@ sp needed
 1676 00f0 80BD     		pop	{r7, pc}
 1677              	.L102:
 1678 00f2 00BF     		.align	2
 1679              	.L101:
 1680 00f4 00000000 		.word	modem_info
 1681 00f8 00000000 		.word	.LC0
 1682 00fc 18030000 		.word	.LC32
 1683 0100 14000000 		.word	modem_info+20
 1684 0104 8C020000 		.word	.LC21
 1685 0108 90020000 		.word	.LC22
 1686 010c 00000000 		.word	uart_received_string
 1687 0110 24030000 		.word	.LC33
 1688 0114 34030000 		.word	.LC34
 1689 0118 40030000 		.word	.LC35
 1690 011c 4C030000 		.word	.LC36
 1691 0120 28000000 		.word	modem_info+40
 1692 0124 58030000 		.word	.LC37
 1693 0128 64030000 		.word	.LC38
 1694 012c 90030000 		.word	.LC39
 1695 0130 9C030000 		.word	.LC40
 1696 0134 A8030000 		.word	.LC41
 1697              		.cfi_endproc
 1698              	.LFE80:
 1699              		.size	modem_configure_settings, .-modem_configure_settings
 1700              		.section	.rodata
 1701 03b3 00       		.align	2
 1702              	.LC42:
 1703 03b4 4D6F6465 		.ascii	"Modem not ready to get time. Not conncted to networ"
 1703      6D206E6F 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 42


 1703      74207265 
 1703      61647920 
 1703      746F2067 
 1704 03e7 6B2E00   		.ascii	"k.\000"
 1705 03ea 0000     		.align	2
 1706              	.LC43:
 1707 03ec 41542B43 		.ascii	"AT+CCLK?\015\000"
 1707      434C4B3F 
 1707      0D00
 1708 03f6 0000     		.align	2
 1709              	.LC44:
 1710 03f8 220D00   		.ascii	"\"\015\000"
 1711 03fb 00       		.align	2
 1712              	.LC45:
 1713 03fc 3A202200 		.ascii	": \"\000"
 1714              		.align	2
 1715              	.LC46:
 1716 0400 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d-%d\000"
 1716      642F2564 
 1716      2C25643A 
 1716      25643A25 
 1716      642D2564 
 1717 0415 000000   		.align	2
 1718              	.LC47:
 1719 0418 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d+%d\000"
 1719      642F2564 
 1719      2C25643A 
 1719      25643A25 
 1719      642B2564 
 1720 042d 000000   		.align	2
 1721              	.LC48:
 1722 0430 436F756C 		.ascii	"Could not parse modem time: %s.\000"
 1722      64206E6F 
 1722      74207061 
 1722      72736520 
 1722      6D6F6465 
 1723              		.section	.text.modem_get_network_time,"ax",%progbits
 1724              		.align	2
 1725              		.global	modem_get_network_time
 1726              		.thumb
 1727              		.thumb_func
 1728              		.type	modem_get_network_time, %function
 1729              	modem_get_network_time:
 1730              	.LFB81:
 500:modem.c       **** 
 501:modem.c       **** //returns 0 if modem can't get time
 502:modem.c       **** long modem_get_network_time(){
 1731              		.loc 1 502 0
 1732              		.cfi_startproc
 1733              		@ args = 0, pretend = 0, frame = 104
 1734              		@ frame_needed = 1, uses_anonymous_args = 0
 1735 0000 80B5     		push	{r7, lr}
 1736              		.cfi_def_cfa_offset 8
 1737              		.cfi_offset 7, -8
 1738              		.cfi_offset 14, -4
 1739 0002 A0B0     		sub	sp, sp, #128
 1740              		.cfi_def_cfa_offset 136
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 43


 1741 0004 06AF     		add	r7, sp, #24
 1742              		.cfi_def_cfa 7, 112
 503:modem.c       ****     
 504:modem.c       ****     //modem reposen format (careful to include the quotes "")
 505:modem.c       ****     //+CCLK: "20/05/01,10:48:33-16" the "-16" is the number of quarter hourts (15 mins) from GMT ti
 506:modem.c       ****     //ex: 14:48 GMT
 507:modem.c       **** 
 508:modem.c       ****     // If modem_state is not "ready", then print error and return 0
 509:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 1743              		.loc 1 509 0
 1744 0006 444B     		ldr	r3, .L110
 1745 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1746 000a 042B     		cmp	r3, #4
 1747 000c 05D0     		beq	.L104
 510:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Modem not ready to get time. Not conncted to network.");
 1748              		.loc 1 510 0
 1749 000e 4349     		ldr	r1, .L110+4
 1750 0010 0220     		movs	r0, #2
 1751 0012 FFF7FEFF 		bl	printNotif
 511:modem.c       ****         return 0;   
 1752              		.loc 1 511 0
 1753 0016 0023     		movs	r3, #0
 1754 0018 7AE0     		b	.L105
 1755              	.L104:
 512:modem.c       ****     }
 513:modem.c       ****     long epoch_time = 0; // Create variable of long time and set equal to 0
 1756              		.loc 1 513 0
 1757 001a 0023     		movs	r3, #0
 1758 001c 7B66     		str	r3, [r7, #100]
 514:modem.c       ****     
 515:modem.c       ****     // AT command +CCLK? is a read command that returns the current setting of the real-time clock 
 516:modem.c       ****     if(at_write_command("AT+CCLK?\r","OK",DEFAULT_AT_TIMEOUT)){
 1759              		.loc 1 516 0
 1760 001e 4FF4FA62 		mov	r2, #2000
 1761 0022 3F49     		ldr	r1, .L110+8
 1762 0024 3F48     		ldr	r0, .L110+12
 1763 0026 FFF7FEFF 		bl	at_write_command
 1764 002a 0346     		mov	r3, r0
 1765 002c 002B     		cmp	r3, #0
 1766 002e 6ED0     		beq	.L106
 1767              	.LBB11:
 517:modem.c       ****         char network_time[30]; // Create a character array of length 30 called network_time 
 518:modem.c       ****         // Extract UART string recieved from the modem and save to variable network_time
 519:modem.c       ****         extract_string(uart_received_string,": \"","\"\r",network_time);
 1768              		.loc 1 519 0
 1769 0030 07F14403 		add	r3, r7, #68
 1770 0034 3C4A     		ldr	r2, .L110+16
 1771 0036 3D49     		ldr	r1, .L110+20
 1772 0038 3D48     		ldr	r0, .L110+24
 1773 003a FFF7FEFF 		bl	extract_string
 520:modem.c       ****         
 521:modem.c       ****         ///////////////////  
 522:modem.c       ****         struct tm t; // Creates variable t of struct tm
 523:modem.c       ****         
 524:modem.c       ****         // Creates a bunch of variables of type int and sets them to 0
 525:modem.c       ****         int year, month, day, hour, minute, second, gmt_offset = 0;
 1774              		.loc 1 525 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 44


 1775 003e 0023     		movs	r3, #0
 1776 0040 BB62     		str	r3, [r7, #40]
 526:modem.c       ****       
 527:modem.c       ****         // Determines the GMT offset 
 528:modem.c       ****         // int sscanf(const char *str, const char *format, ...) reads formatted input from a string
 529:modem.c       ****         // On success, the function returns the number of variables filled. In the case of an input
 530:modem.c       ****         if(sscanf(network_time,"%d/%d/%d,%d:%d:%d-%d",&year,&month,&day,&hour,&minute,&second,&gmt_
 1777              		.loc 1 530 0
 1778 0042 07F13C01 		add	r1, r7, #60
 1779 0046 07F14002 		add	r2, r7, #64
 1780 004a 07F14400 		add	r0, r7, #68
 1781 004e 07F12803 		add	r3, r7, #40
 1782 0052 0493     		str	r3, [sp, #16]
 1783 0054 07F12C03 		add	r3, r7, #44
 1784 0058 0393     		str	r3, [sp, #12]
 1785 005a 07F13003 		add	r3, r7, #48
 1786 005e 0293     		str	r3, [sp, #8]
 1787 0060 07F13403 		add	r3, r7, #52
 1788 0064 0193     		str	r3, [sp, #4]
 1789 0066 07F13803 		add	r3, r7, #56
 1790 006a 0093     		str	r3, [sp]
 1791 006c 0B46     		mov	r3, r1
 1792 006e 3149     		ldr	r1, .L110+28
 1793 0070 FFF7FEFF 		bl	sscanf
 1794 0074 0346     		mov	r3, r0
 1795 0076 072B     		cmp	r3, #7
 1796 0078 06D1     		bne	.L107
 531:modem.c       ****             gmt_offset = gmt_offset*(900);
 1797              		.loc 1 531 0
 1798 007a BB6A     		ldr	r3, [r7, #40]
 1799 007c 4FF46172 		mov	r2, #900
 1800 0080 02FB03F3 		mul	r3, r2, r3
 1801 0084 BB62     		str	r3, [r7, #40]
 1802 0086 2AE0     		b	.L108
 1803              	.L107:
 532:modem.c       ****         }else if(sscanf(network_time,"%d/%d/%d,%d:%d:%d+%d",&year,&month,&day,&hour,&minute,&second
 1804              		.loc 1 532 0
 1805 0088 07F13C01 		add	r1, r7, #60
 1806 008c 07F14002 		add	r2, r7, #64
 1807 0090 07F14400 		add	r0, r7, #68
 1808 0094 07F12803 		add	r3, r7, #40
 1809 0098 0493     		str	r3, [sp, #16]
 1810 009a 07F12C03 		add	r3, r7, #44
 1811 009e 0393     		str	r3, [sp, #12]
 1812 00a0 07F13003 		add	r3, r7, #48
 1813 00a4 0293     		str	r3, [sp, #8]
 1814 00a6 07F13403 		add	r3, r7, #52
 1815 00aa 0193     		str	r3, [sp, #4]
 1816 00ac 07F13803 		add	r3, r7, #56
 1817 00b0 0093     		str	r3, [sp]
 1818 00b2 0B46     		mov	r3, r1
 1819 00b4 2049     		ldr	r1, .L110+32
 1820 00b6 FFF7FEFF 		bl	sscanf
 1821 00ba 0346     		mov	r3, r0
 1822 00bc 072B     		cmp	r3, #7
 1823 00be 05D1     		bne	.L109
 533:modem.c       ****             gmt_offset = gmt_offset*(-900);
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 45


 1824              		.loc 1 533 0
 1825 00c0 BB6A     		ldr	r3, [r7, #40]
 1826 00c2 1E4A     		ldr	r2, .L110+36
 1827 00c4 02FB03F3 		mul	r3, r2, r3
 1828 00c8 BB62     		str	r3, [r7, #40]
 1829 00ca 08E0     		b	.L108
 1830              	.L109:
 534:modem.c       ****         }else{
 535:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Could not parse modem time: %s.",network_time);
 1831              		.loc 1 535 0
 1832 00cc 07F14403 		add	r3, r7, #68
 1833 00d0 1A46     		mov	r2, r3
 1834 00d2 1B49     		ldr	r1, .L110+40
 1835 00d4 0220     		movs	r0, #2
 1836 00d6 FFF7FEFF 		bl	printNotif
 536:modem.c       ****             return 0;  // Return 0 if cannot get time 
 1837              		.loc 1 536 0
 1838 00da 0023     		movs	r3, #0
 1839 00dc 18E0     		b	.L105
 1840              	.L108:
 537:modem.c       ****         }
 538:modem.c       ****         
 539:modem.c       ****         // Sets each variable to the correct time 
 540:modem.c       ****         t.tm_sec = second;
 1841              		.loc 1 540 0
 1842 00de FB6A     		ldr	r3, [r7, #44]
 1843 00e0 7B60     		str	r3, [r7, #4]
 541:modem.c       ****         t.tm_min = minute;
 1844              		.loc 1 541 0
 1845 00e2 3B6B     		ldr	r3, [r7, #48]
 1846 00e4 BB60     		str	r3, [r7, #8]
 542:modem.c       ****         t.tm_hour = hour;
 1847              		.loc 1 542 0
 1848 00e6 7B6B     		ldr	r3, [r7, #52]
 1849 00e8 FB60     		str	r3, [r7, #12]
 543:modem.c       ****         t.tm_year = year + 100;    // Year since 1900
 1850              		.loc 1 543 0
 1851 00ea 3B6C     		ldr	r3, [r7, #64]
 1852 00ec 6433     		adds	r3, r3, #100
 1853 00ee BB61     		str	r3, [r7, #24]
 544:modem.c       ****         t.tm_mon = month-1;        // Month, where 0 = jan
 1854              		.loc 1 544 0
 1855 00f0 FB6B     		ldr	r3, [r7, #60]
 1856 00f2 013B     		subs	r3, r3, #1
 1857 00f4 7B61     		str	r3, [r7, #20]
 545:modem.c       ****         t.tm_mday = day;           // Day of the month
 1858              		.loc 1 545 0
 1859 00f6 BB6B     		ldr	r3, [r7, #56]
 1860 00f8 3B61     		str	r3, [r7, #16]
 546:modem.c       ****         t.tm_isdst = 0;            // Is Daylight Savings on? 1 = yes, 0 = no, -1 = unknown
 1861              		.loc 1 546 0
 1862 00fa 0023     		movs	r3, #0
 1863 00fc 7B62     		str	r3, [r7, #36]
 547:modem.c       ****     
 548:modem.c       ****         // Set variable epoch-time to be equal to the local time plus the GMT offset
 549:modem.c       ****         // the mktime function converts a broken-down local time (pointed to by timeptr) and return
 550:modem.c       ****         epoch_time = mktime(&t) + gmt_offset;
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 46


 1864              		.loc 1 550 0
 1865 00fe 3B1D     		adds	r3, r7, #4
 1866 0100 1846     		mov	r0, r3
 1867 0102 FFF7FEFF 		bl	mktime
 1868 0106 0246     		mov	r2, r0
 1869 0108 BB6A     		ldr	r3, [r7, #40]
 1870 010a 1344     		add	r3, r3, r2
 1871 010c 7B66     		str	r3, [r7, #100]
 1872              	.L106:
 1873              	.LBE11:
 551:modem.c       ****     }
 552:modem.c       ****     
 553:modem.c       ****     return epoch_time;
 1874              		.loc 1 553 0
 1875 010e 7B6E     		ldr	r3, [r7, #100]
 1876              	.L105:
 554:modem.c       **** }
 1877              		.loc 1 554 0
 1878 0110 1846     		mov	r0, r3
 1879 0112 6837     		adds	r7, r7, #104
 1880              		.cfi_def_cfa_offset 8
 1881 0114 BD46     		mov	sp, r7
 1882              		.cfi_def_cfa_register 13
 1883              		@ sp needed
 1884 0116 80BD     		pop	{r7, pc}
 1885              	.L111:
 1886              		.align	2
 1887              	.L110:
 1888 0118 00000000 		.word	modem_state
 1889 011c B4030000 		.word	.LC42
 1890 0120 00000000 		.word	.LC0
 1891 0124 EC030000 		.word	.LC43
 1892 0128 F8030000 		.word	.LC44
 1893 012c FC030000 		.word	.LC45
 1894 0130 00000000 		.word	uart_received_string
 1895 0134 00040000 		.word	.LC46
 1896 0138 18040000 		.word	.LC47
 1897 013c 7CFCFFFF 		.word	-900
 1898 0140 30040000 		.word	.LC48
 1899              		.cfi_endproc
 1900              	.LFE81:
 1901              		.size	modem_get_network_time, .-modem_get_network_time
 1902              		.section	.text.modem_get_state,"ax",%progbits
 1903              		.align	2
 1904              		.global	modem_get_state
 1905              		.thumb
 1906              		.thumb_func
 1907              		.type	modem_get_state, %function
 1908              	modem_get_state:
 1909              	.LFB82:
 555:modem.c       **** 
 556:modem.c       **** // Get the modem state
 557:modem.c       **** uint8 modem_get_state(){
 1910              		.loc 1 557 0
 1911              		.cfi_startproc
 1912              		@ args = 0, pretend = 0, frame = 0
 1913              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 47


 1914              		@ link register save eliminated.
 1915 0000 80B4     		push	{r7}
 1916              		.cfi_def_cfa_offset 4
 1917              		.cfi_offset 7, -4
 1918 0002 00AF     		add	r7, sp, #0
 1919              		.cfi_def_cfa_register 7
 558:modem.c       ****     return modem_state;
 1920              		.loc 1 558 0
 1921 0004 024B     		ldr	r3, .L114
 1922 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 559:modem.c       **** }
 1923              		.loc 1 559 0
 1924 0008 1846     		mov	r0, r3
 1925 000a BD46     		mov	sp, r7
 1926              		.cfi_def_cfa_register 13
 1927              		@ sp needed
 1928 000c 80BC     		pop	{r7}
 1929              		.cfi_restore 7
 1930              		.cfi_def_cfa_offset 0
 1931 000e 7047     		bx	lr
 1932              	.L115:
 1933              		.align	2
 1934              	.L114:
 1935 0010 00000000 		.word	modem_state
 1936              		.cfi_endproc
 1937              	.LFE82:
 1938              		.size	modem_get_state, .-modem_get_state
 1939              		.section	.text.modem_sleep,"ax",%progbits
 1940              		.align	2
 1941              		.global	modem_sleep
 1942              		.thumb
 1943              		.thumb_func
 1944              		.type	modem_sleep, %function
 1945              	modem_sleep:
 1946              	.LFB83:
 560:modem.c       **** 
 561:modem.c       **** // Set modem to sleep
 562:modem.c       **** void modem_sleep(){
 1947              		.loc 1 562 0
 1948              		.cfi_startproc
 1949              		@ args = 0, pretend = 0, frame = 0
 1950              		@ frame_needed = 1, uses_anonymous_args = 0
 1951 0000 80B5     		push	{r7, lr}
 1952              		.cfi_def_cfa_offset 8
 1953              		.cfi_offset 7, -8
 1954              		.cfi_offset 14, -4
 1955 0002 00AF     		add	r7, sp, #0
 1956              		.cfi_def_cfa_register 7
 563:modem.c       ****     // If the modem_state is not "off" then put it to sleep
 564:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 1957              		.loc 1 564 0
 1958 0004 FFF7FEFF 		bl	modem_get_state
 1959 0008 0346     		mov	r3, r0
 1960 000a 002B     		cmp	r3, #0
 1961 000c 03D0     		beq	.L118
 565:modem.c       **** 
 566:modem.c       ****         Telit_ControlReg_Sleep(); // Prepares the modem for entering the low power mode.
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 48


 1962              		.loc 1 566 0
 1963 000e FFF7FEFF 		bl	Telit_ControlReg_Sleep
 567:modem.c       ****         UART_Telit_Sleep(); // Saves the current component state, calls the UART_Telit_Stop() funct
 1964              		.loc 1 567 0
 1965 0012 FFF7FEFF 		bl	UART_Telit_Sleep
 1966              	.L118:
 568:modem.c       ****         
 569:modem.c       ****         // Set interrupt on RX pin to wakeup chip from sleep if UART comm starts
 570:modem.c       ****        // Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_FALLING);
 571:modem.c       ****      }
 572:modem.c       **** }
 1967              		.loc 1 572 0
 1968 0016 00BF     		nop
 1969 0018 80BD     		pop	{r7, pc}
 1970              		.cfi_endproc
 1971              	.LFE83:
 1972              		.size	modem_sleep, .-modem_sleep
 1973 001a 00BF     		.section	.text.modem_wakeup,"ax",%progbits
 1974              		.align	2
 1975              		.global	modem_wakeup
 1976              		.thumb
 1977              		.thumb_func
 1978              		.type	modem_wakeup, %function
 1979              	modem_wakeup:
 1980              	.LFB84:
 573:modem.c       **** 
 574:modem.c       **** // Wakeup the modem
 575:modem.c       **** void modem_wakeup(){
 1981              		.loc 1 575 0
 1982              		.cfi_startproc
 1983              		@ args = 0, pretend = 0, frame = 0
 1984              		@ frame_needed = 1, uses_anonymous_args = 0
 1985 0000 80B5     		push	{r7, lr}
 1986              		.cfi_def_cfa_offset 8
 1987              		.cfi_offset 7, -8
 1988              		.cfi_offset 14, -4
 1989 0002 00AF     		add	r7, sp, #0
 1990              		.cfi_def_cfa_register 7
 576:modem.c       ****     // If modem state is not off then wake it up
 577:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 1991              		.loc 1 577 0
 1992 0004 FFF7FEFF 		bl	modem_get_state
 1993 0008 0346     		mov	r3, r0
 1994 000a 002B     		cmp	r3, #0
 1995 000c 0BD0     		beq	.L121
 578:modem.c       ****         Telit_ControlReg_Wakeup(); // Restores the modem after waking up from the low power mode.
 1996              		.loc 1 578 0
 1997 000e FFF7FEFF 		bl	Telit_ControlReg_Wakeup
 579:modem.c       ****         // Calls the UART_Telit_RestoreConfig() function to restore the configuration.
 580:modem.c       ****         // If the modem was enabled before the UART_Telit_Sleep() function was called, the UART_Tel
 581:modem.c       ****         UART_Telit_Wakeup();
 1998              		.loc 1 581 0
 1999 0012 FFF7FEFF 		bl	UART_Telit_Wakeup
 582:modem.c       ****         // Remove the need for this pin itterupt
 583:modem.c       ****         //Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 584:modem.c       ****         
 585:modem.c       ****         // If woken up from pin, go ahead and delay for 100ms to allow modem UART to deliver the me
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 49


 586:modem.c       ****         if(modem_get_state() == MODEM_STATE_WAITING_FOR_IP){
 2000              		.loc 1 586 0
 2001 0016 FFF7FEFF 		bl	modem_get_state
 2002 001a 0346     		mov	r3, r0
 2003 001c 032B     		cmp	r3, #3
 2004 001e 02D1     		bne	.L121
 587:modem.c       ****             CyDelay(100u);
 2005              		.loc 1 587 0
 2006 0020 6420     		movs	r0, #100
 2007 0022 FFF7FEFF 		bl	CyDelay
 2008              	.L121:
 588:modem.c       ****         }
 589:modem.c       ****         
 590:modem.c       ****      }
 591:modem.c       ****     
 592:modem.c       **** }
 2009              		.loc 1 592 0
 2010 0026 00BF     		nop
 2011 0028 80BD     		pop	{r7, pc}
 2012              		.cfi_endproc
 2013              	.LFE84:
 2014              		.size	modem_wakeup, .-modem_wakeup
 2015 002a 00BF     		.section	.rodata
 2016              		.align	2
 2017              	.LC49:
 2018 0450 41542347 		.ascii	"AT#GPIO=5,1,1,0\015\000"
 2018      50494F3D 
 2018      352C312C 
 2018      312C300D 
 2018      00
 2019 0461 000000   		.align	2
 2020              	.LC50:
 2021 0464 41542453 		.ascii	"AT$SUPLSEC=1\015\000"
 2021      55504C53 
 2021      45433D31 
 2021      0D00
 2022 0472 0000     		.align	2
 2023              	.LC51:
 2024 0474 41542453 		.ascii	"AT$SUPLV=2\015\000"
 2024      55504C56 
 2024      3D320D00 
 2025              		.align	2
 2026              	.LC52:
 2027 0480 41542441 		.ascii	"AT$AGPSEN=1\015\000"
 2027      47505345 
 2027      4E3D310D 
 2027      00
 2028 048d 000000   		.align	2
 2029              	.LC53:
 2030 0490 41542453 		.ascii	"AT$SLP=1,\"supl.google.com:7275\"\015\000"
 2030      4C503D31 
 2030      2C227375 
 2030      706C2E67 
 2030      6F6F676C 
 2031 04b1 000000   		.align	2
 2032              	.LC54:
 2033 04b4 41542353 		.ascii	"AT#SGACT=1,0\015\012\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 50


 2033      47414354 
 2033      3D312C30 
 2033      0D0A00
 2034 04c3 00       		.align	2
 2035              	.LC55:
 2036 04c4 4154244C 		.ascii	"AT$LCSLK=1,1\015\000"
 2036      43534C4B 
 2036      3D312C31 
 2036      0D00
 2037 04d2 0000     		.align	2
 2038              	.LC56:
 2039 04d4 41542447 		.ascii	"AT$GPSSLSR=1,1,,,,,2\015\000"
 2039      5053534C 
 2039      53523D31 
 2039      2C312C2C 
 2039      2C2C2C32 
 2040 04ea 0000     		.align	2
 2041              	.LC57:
 2042 04ec 4E00     		.ascii	"N\000"
 2043 04ee 0000     		.align	2
 2044              	.LC58:
 2045 04f0 41542447 		.ascii	"AT$GPSACP\015\000"
 2045      50534143 
 2045      500D00
 2046 04fb 00       		.align	2
 2047              	.LC59:
 2048 04fc 24475053 		.ascii	"$GPSACP: \000"
 2048      4143503A 
 2048      2000
 2049 0506 0000     		.align	2
 2050              	.LC60:
 2051 0508 24475053 		.ascii	"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s\000"
 2051      4143503A 
 2051      20252A66 
 2051      2C25664E 
 2051      2C256657 
 2052              		.global	__aeabi_fdiv
 2053              		.global	__aeabi_f2d
 2054              		.global	__aeabi_ddiv
 2055              		.global	__aeabi_dadd
 2056              		.global	__aeabi_d2f
 2057              		.align	2
 2058              	.LC61:
 2059 0528 41542347 		.ascii	"AT#GPIO=5,0,1,0\015\000"
 2059      50494F3D 
 2059      352C302C 
 2059      312C300D 
 2059      00
 2060 0539 000000   		.align	2
 2061              	.LC62:
 2062 053c 41542447 		.ascii	"AT$GPSR=0\015\000"
 2062      5053523D 
 2062      300D00
 2063 0547 00       		.align	2
 2064              	.LC63:
 2065 0548 54696D65 		.ascii	"Time to lock GPS: %d\000"
 2065      20746F20 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 51


 2065      6C6F636B 
 2065      20475053 
 2065      3A202564 
 2066              		.section	.text.modem_get_gps_coordinates,"ax",%progbits
 2067              		.align	2
 2068              		.global	modem_get_gps_coordinates
 2069              		.thumb
 2070              		.thumb_func
 2071              		.type	modem_get_gps_coordinates, %function
 2072              	modem_get_gps_coordinates:
 2073              	.LFB85:
 593:modem.c       **** 
 594:modem.c       **** 
 595:modem.c       ****     
 596:modem.c       **** // Returns lat,lom,alt data from Assited GPS (AGPS) system
 597:modem.c       **** gps_t modem_get_gps_coordinates(){
 2074              		.loc 1 597 0
 2075              		.cfi_startproc
 2076              		@ args = 0, pretend = 0, frame = 56
 2077              		@ frame_needed = 1, uses_anonymous_args = 0
 2078 0000 B0B5     		push	{r4, r5, r7, lr}
 2079              		.cfi_def_cfa_offset 16
 2080              		.cfi_offset 4, -16
 2081              		.cfi_offset 5, -12
 2082              		.cfi_offset 7, -8
 2083              		.cfi_offset 14, -4
 2084 0002 90B0     		sub	sp, sp, #64
 2085              		.cfi_def_cfa_offset 80
 2086 0004 02AF     		add	r7, sp, #8
 2087              		.cfi_def_cfa 7, 72
 2088 0006 7860     		str	r0, [r7, #4]
 598:modem.c       ****     gps_t gps;
 599:modem.c       ****     gps.altitude = 0;
 2089              		.loc 1 599 0
 2090 0008 4FF00003 		mov	r3, #0
 2091 000c FB61     		str	r3, [r7, #28]	@ float
 600:modem.c       ****     gps.longitude = 0;
 2092              		.loc 1 600 0
 2093 000e 4FF00003 		mov	r3, #0
 2094 0012 BB61     		str	r3, [r7, #24]	@ float
 601:modem.c       ****     gps.latitude = 0;
 2095              		.loc 1 601 0
 2096 0014 4FF00003 		mov	r3, #0
 2097 0018 7B61     		str	r3, [r7, #20]	@ float
 602:modem.c       ****     gps.time_to_lock =0;
 2098              		.loc 1 602 0
 2099 001a 0023     		movs	r3, #0
 2100 001c 3B84     		strh	r3, [r7, #32]	@ movhi
 603:modem.c       ****     gps.valid = 0;
 2101              		.loc 1 603 0
 2102 001e 0023     		movs	r3, #0
 2103 0020 87F82230 		strb	r3, [r7, #34]
 604:modem.c       ****     
 605:modem.c       ****     //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 606:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 2104              		.loc 1 606 0
 2105 0024 7F4B     		ldr	r3, .L132
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 52


 2106 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2107 0028 042B     		cmp	r3, #4
 2108 002a 07D0     		beq	.L123
 607:modem.c       ****         return gps;//where valid = 0
 2109              		.loc 1 607 0
 2110 002c 7B68     		ldr	r3, [r7, #4]
 2111 002e 1C46     		mov	r4, r3
 2112 0030 07F11403 		add	r3, r7, #20
 2113 0034 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2114 0036 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2115 003a EFE0     		b	.L122
 2116              	.L123:
 608:modem.c       ****     }
 609:modem.c       ****     
 610:modem.c       ****     long lock_time = getTimeStamp();
 2117              		.loc 1 610 0
 2118 003c FFF7FEFF 		bl	getTimeStamp
 2119 0040 3863     		str	r0, [r7, #48]
 611:modem.c       ****     
 612:modem.c       ****     // Enable this for thr LTER module
 613:modem.c       ****     // Enable GPS Low-Dropout Regulator
 614:modem.c       ****     at_write_command("AT#GPIO=5,1,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2120              		.loc 1 614 0
 2121 0042 4FF4FA62 		mov	r2, #2000
 2122 0046 7849     		ldr	r1, .L132+4
 2123 0048 7848     		ldr	r0, .L132+8
 2124 004a FFF7FEFF 		bl	at_write_command
 615:modem.c       ****     
 616:modem.c       ****     // Configure SUPL connection params
 617:modem.c       ****     at_write_command("AT$SUPLSEC=1\r","OK",DEFAULT_AT_TIMEOUT);
 2125              		.loc 1 617 0
 2126 004e 4FF4FA62 		mov	r2, #2000
 2127 0052 7549     		ldr	r1, .L132+4
 2128 0054 7648     		ldr	r0, .L132+12
 2129 0056 FFF7FEFF 		bl	at_write_command
 618:modem.c       ****     
 619:modem.c       ****     // Use SUPL2.0
 620:modem.c       ****     at_write_command("AT$SUPLV=2\r","OK",DEFAULT_AT_TIMEOUT);
 2130              		.loc 1 620 0
 2131 005a 4FF4FA62 		mov	r2, #2000
 2132 005e 7249     		ldr	r1, .L132+4
 2133 0060 7448     		ldr	r0, .L132+16
 2134 0062 FFF7FEFF 		bl	at_write_command
 621:modem.c       ****     
 622:modem.c       ****     // Enable AGPS service
 623:modem.c       ****     at_write_command("AT$AGPSEN=1\r","OK",DEFAULT_AT_TIMEOUT);
 2135              		.loc 1 623 0
 2136 0066 4FF4FA62 		mov	r2, #2000
 2137 006a 6F49     		ldr	r1, .L132+4
 2138 006c 7248     		ldr	r0, .L132+20
 2139 006e FFF7FEFF 		bl	at_write_command
 624:modem.c       ****     
 625:modem.c       ****     // Chose SUPL server, use google publiuc service
 626:modem.c       ****     at_write_command("AT$SLP=1,\"supl.google.com:7275\"\r","OK",DEFAULT_AT_TIMEOUT);
 2140              		.loc 1 626 0
 2141 0072 4FF4FA62 		mov	r2, #2000
 2142 0076 6C49     		ldr	r1, .L132+4
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 53


 2143 0078 7048     		ldr	r0, .L132+24
 2144 007a FFF7FEFF 		bl	at_write_command
 627:modem.c       ****     
 628:modem.c       ****     //pdp context has to be lockeed to carrier for this to work
 629:modem.c       ****     
 630:modem.c       ****     // Unlock context since it needs to be used by modem
 631:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 2145              		.loc 1 631 0
 2146 007e 4FF4FA62 		mov	r2, #2000
 2147 0082 6949     		ldr	r1, .L132+4
 2148 0084 6E48     		ldr	r0, .L132+28
 2149 0086 FFF7FEFF 		bl	at_write_command
 632:modem.c       ****     
 633:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",DEFAULT_AT_TIMEOUT);//ATT
 2150              		.loc 1 633 0
 2151 008a 4FF4FA62 		mov	r2, #2000
 2152 008e 6649     		ldr	r1, .L132+4
 2153 0090 6C48     		ldr	r0, .L132+32
 2154 0092 FFF7FEFF 		bl	at_write_command
 634:modem.c       ****     //at_write_command("AT$LCSLK=1,3\r","OK",DEFAULT_AT_TIMEOUT);//Verizon
 635:modem.c       ****     
 636:modem.c       ****     // Relock the context
 637:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 2155              		.loc 1 637 0
 2156 0096 42F21072 		movw	r2, #10000
 2157 009a 6349     		ldr	r1, .L132+4
 2158 009c 6A48     		ldr	r0, .L132+36
 2159 009e FFF7FEFF 		bl	at_write_command
 638:modem.c       ****     
 639:modem.c       ****     //start AGPS service
 640:modem.c       ****     at_write_command("AT$GPSSLSR=1,1,,,,,2\r","OK",DEFAULT_AT_TIMEOUT); 
 2160              		.loc 1 640 0
 2161 00a2 4FF4FA62 		mov	r2, #2000
 2162 00a6 6049     		ldr	r1, .L132+4
 2163 00a8 6848     		ldr	r0, .L132+40
 2164 00aa FFF7FEFF 		bl	at_write_command
 641:modem.c       ****     
 642:modem.c       ****     
 643:modem.c       ****     // Start the AGPS service
 644:modem.c       ****     // Will keep receiving a buynch of commas without numbers, until GPS locks
 645:modem.c       ****     // Good lock will retunr a string with "N" and "W" coordinates
 646:modem.c       ****     
 647:modem.c       ****     
 648:modem.c       ****  
 649:modem.c       ****     uint8 gps_status = 0;
 2165              		.loc 1 649 0
 2166 00ae 0023     		movs	r3, #0
 2167 00b0 87F82F30 		strb	r3, [r7, #47]
 2168              	.LBB12:
 650:modem.c       ****     for(uint16 i=0;i<200;i++){
 2169              		.loc 1 650 0
 2170 00b4 0023     		movs	r3, #0
 2171 00b6 FB86     		strh	r3, [r7, #54]	@ movhi
 2172 00b8 13E0     		b	.L125
 2173              	.L128:
 651:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2174              		.loc 1 651 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 54


 2175 00ba 4FF4FA62 		mov	r2, #2000
 2176 00be 6449     		ldr	r1, .L132+44
 2177 00c0 6448     		ldr	r0, .L132+48
 2178 00c2 FFF7FEFF 		bl	at_write_command
 2179 00c6 0346     		mov	r3, r0
 2180 00c8 87F82F30 		strb	r3, [r7, #47]
 652:modem.c       ****         if(gps_status){
 2181              		.loc 1 652 0
 2182 00cc 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2183 00d0 002B     		cmp	r3, #0
 2184 00d2 0AD1     		bne	.L131
 653:modem.c       ****             break;   
 654:modem.c       ****         }
 655:modem.c       ****         CyDelay(1000u);// Wait for a second -- BLOCKING. Could be more elegant to incorporate this 
 2185              		.loc 1 655 0 discriminator 2
 2186 00d4 4FF47A70 		mov	r0, #1000
 2187 00d8 FFF7FEFF 		bl	CyDelay
 650:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2188              		.loc 1 650 0 discriminator 2
 2189 00dc FB8E     		ldrh	r3, [r7, #54]
 2190 00de 0133     		adds	r3, r3, #1
 2191 00e0 FB86     		strh	r3, [r7, #54]	@ movhi
 2192              	.L125:
 650:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2193              		.loc 1 650 0 is_stmt 0 discriminator 1
 2194 00e2 FB8E     		ldrh	r3, [r7, #54]
 2195 00e4 C72B     		cmp	r3, #199
 2196 00e6 E8D9     		bls	.L128
 2197 00e8 00E0     		b	.L127
 2198              	.L131:
 653:modem.c       ****             break;   
 2199              		.loc 1 653 0 is_stmt 1
 2200 00ea 00BF     		nop
 2201              	.L127:
 2202              	.LBE12:
 656:modem.c       ****     }
 657:modem.c       ****     
 658:modem.c       ****     //parse data here
 659:modem.c       ****     
 660:modem.c       ****     //example $GPSACP: 210926.000,4217.8003N,08341.3158W,2.3,258.2,3,17.8,4.8,2.6,220520,05,00
 661:modem.c       ****     float lat;
 662:modem.c       ****     float lon;
 663:modem.c       ****     float alt;
 664:modem.c       ****     
 665:modem.c       ****     // Look for $GPSACP:  in uart_received_string and save to sl
 666:modem.c       ****     // char *strstr(const char *haystack, const char *needle) function finds the first occurrence o
 667:modem.c       ****     char *s1 = strstr(uart_received_string,"$GPSACP: ");
 2203              		.loc 1 667 0
 2204 00ec 5A49     		ldr	r1, .L132+52
 2205 00ee 5B48     		ldr	r0, .L132+56
 2206 00f0 FFF7FEFF 		bl	strstr
 2207 00f4 B862     		str	r0, [r7, #40]
 668:modem.c       ****     // Look in sl for lat, long, alt and save in match 
 669:modem.c       ****     // int sscanf(const char *str, const char *format, ...) reads formatted input from a string.
 670:modem.c       ****     int match = sscanf(s1,"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s",&lat,&lon,&alt);
 2208              		.loc 1 670 0
 2209 00f6 07F10C01 		add	r1, r7, #12
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 55


 2210 00fa 07F11002 		add	r2, r7, #16
 2211 00fe 07F10803 		add	r3, r7, #8
 2212 0102 0093     		str	r3, [sp]
 2213 0104 0B46     		mov	r3, r1
 2214 0106 5649     		ldr	r1, .L132+60
 2215 0108 B86A     		ldr	r0, [r7, #40]
 2216 010a FFF7FEFF 		bl	sscanf
 2217 010e 7862     		str	r0, [r7, #36]
 671:modem.c       ****     if(match >= 3){
 2218              		.loc 1 671 0
 2219 0110 7B6A     		ldr	r3, [r7, #36]
 2220 0112 022B     		cmp	r3, #2
 2221 0114 60DD     		ble	.L129
 672:modem.c       ****         // Calculate lat and lon
 673:modem.c       ****         // floorf(x) calculates the largest integer that is less than or equal to x. 
 674:modem.c       ****         // fmod(double x, double y) returns the remainder of x divided by y.
 675:modem.c       ****         lat = floorf(lat/100) + fmod(lat,100)/60;
 2222              		.loc 1 675 0
 2223 0116 3B69     		ldr	r3, [r7, #16]	@ float
 2224 0118 5249     		ldr	r1, .L132+64
 2225 011a 1846     		mov	r0, r3
 2226 011c FFF7FEFF 		bl	__aeabi_fdiv
 2227 0120 0346     		mov	r3, r0
 2228 0122 1846     		mov	r0, r3
 2229 0124 FFF7FEFF 		bl	floorf
 2230 0128 0346     		mov	r3, r0
 2231 012a 1846     		mov	r0, r3
 2232 012c FFF7FEFF 		bl	__aeabi_f2d
 2233 0130 0446     		mov	r4, r0
 2234 0132 0D46     		mov	r5, r1
 2235 0134 3B69     		ldr	r3, [r7, #16]	@ float
 2236 0136 1846     		mov	r0, r3
 2237 0138 FFF7FEFF 		bl	__aeabi_f2d
 2238 013c 4FF00002 		mov	r2, #0
 2239 0140 494B     		ldr	r3, .L132+68
 2240 0142 FFF7FEFF 		bl	fmod
 2241 0146 4FF00002 		mov	r2, #0
 2242 014a 484B     		ldr	r3, .L132+72
 2243 014c FFF7FEFF 		bl	__aeabi_ddiv
 2244 0150 0246     		mov	r2, r0
 2245 0152 0B46     		mov	r3, r1
 2246 0154 2046     		mov	r0, r4
 2247 0156 2946     		mov	r1, r5
 2248 0158 FFF7FEFF 		bl	__aeabi_dadd
 2249 015c 0346     		mov	r3, r0
 2250 015e 0C46     		mov	r4, r1
 2251 0160 1846     		mov	r0, r3
 2252 0162 2146     		mov	r1, r4
 2253 0164 FFF7FEFF 		bl	__aeabi_d2f
 2254 0168 0346     		mov	r3, r0
 2255 016a 3B61     		str	r3, [r7, #16]	@ float
 676:modem.c       ****         lon = -(floorf(lon/100) + fmod(lon,100)/60);
 2256              		.loc 1 676 0
 2257 016c FB68     		ldr	r3, [r7, #12]	@ float
 2258 016e 3D49     		ldr	r1, .L132+64
 2259 0170 1846     		mov	r0, r3
 2260 0172 FFF7FEFF 		bl	__aeabi_fdiv
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 56


 2261 0176 0346     		mov	r3, r0
 2262 0178 1846     		mov	r0, r3
 2263 017a FFF7FEFF 		bl	floorf
 2264 017e 0346     		mov	r3, r0
 2265 0180 1846     		mov	r0, r3
 2266 0182 FFF7FEFF 		bl	__aeabi_f2d
 2267 0186 0446     		mov	r4, r0
 2268 0188 0D46     		mov	r5, r1
 2269 018a FB68     		ldr	r3, [r7, #12]	@ float
 2270 018c 1846     		mov	r0, r3
 2271 018e FFF7FEFF 		bl	__aeabi_f2d
 2272 0192 4FF00002 		mov	r2, #0
 2273 0196 344B     		ldr	r3, .L132+68
 2274 0198 FFF7FEFF 		bl	fmod
 2275 019c 4FF00002 		mov	r2, #0
 2276 01a0 324B     		ldr	r3, .L132+72
 2277 01a2 FFF7FEFF 		bl	__aeabi_ddiv
 2278 01a6 0246     		mov	r2, r0
 2279 01a8 0B46     		mov	r3, r1
 2280 01aa 2046     		mov	r0, r4
 2281 01ac 2946     		mov	r1, r5
 2282 01ae FFF7FEFF 		bl	__aeabi_dadd
 2283 01b2 0346     		mov	r3, r0
 2284 01b4 0C46     		mov	r4, r1
 2285 01b6 1846     		mov	r0, r3
 2286 01b8 2146     		mov	r1, r4
 2287 01ba FFF7FEFF 		bl	__aeabi_d2f
 2288 01be 0346     		mov	r3, r0
 2289 01c0 83F00043 		eor	r3, r3, #-2147483648
 2290 01c4 FB60     		str	r3, [r7, #12]	@ float
 677:modem.c       ****         gps.altitude = alt; // Save alt, lat, and lon to the variable gps.
 2291              		.loc 1 677 0
 2292 01c6 BB68     		ldr	r3, [r7, #8]	@ float
 2293 01c8 FB61     		str	r3, [r7, #28]	@ float
 678:modem.c       ****         gps.latitude = lat;
 2294              		.loc 1 678 0
 2295 01ca 3B69     		ldr	r3, [r7, #16]	@ float
 2296 01cc 7B61     		str	r3, [r7, #20]	@ float
 679:modem.c       ****         gps.longitude = lon;
 2297              		.loc 1 679 0
 2298 01ce FB68     		ldr	r3, [r7, #12]	@ float
 2299 01d0 BB61     		str	r3, [r7, #24]	@ float
 680:modem.c       ****         gps.valid = 1;
 2300              		.loc 1 680 0
 2301 01d2 0123     		movs	r3, #1
 2302 01d4 87F82230 		strb	r3, [r7, #34]
 2303              	.L129:
 681:modem.c       ****     }
 682:modem.c       ****     
 683:modem.c       ****     // Disable LDO, just in case
 684:modem.c       ****     at_write_command("AT#GPIO=5,0,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2304              		.loc 1 684 0
 2305 01d8 4FF4FA62 		mov	r2, #2000
 2306 01dc 1249     		ldr	r1, .L132+4
 2307 01de 2448     		ldr	r0, .L132+76
 2308 01e0 FFF7FEFF 		bl	at_write_command
 685:modem.c       ****     
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 57


 686:modem.c       ****     // Flush modem's GPS data, just in case
 687:modem.c       ****     at_write_command("AT$GPSR=0\r","OK",DEFAULT_AT_TIMEOUT);
 2309              		.loc 1 687 0
 2310 01e4 4FF4FA62 		mov	r2, #2000
 2311 01e8 0F49     		ldr	r1, .L132+4
 2312 01ea 2248     		ldr	r0, .L132+80
 2313 01ec FFF7FEFF 		bl	at_write_command
 688:modem.c       ****     
 689:modem.c       ****     
 690:modem.c       ****     
 691:modem.c       ****     
 692:modem.c       ****     
 693:modem.c       ****     /* Relevant to 3g modem, can ignore
 694:modem.c       ****     
 695:modem.c       ****     //Setthe GPS Quality of Servicep arameters. Inorder,theyare<horiz_accuracy(inmeters)>,<vertical
 696:modem.c       ****     //AT$GPSQOS=50,50,100,0
 697:modem.c       ****     at_write_command("AT$GPSQOS=50,50,100,0\r","OK",DEFAULT_AT_TIMEOUT);
 698:modem.c       ****     
 699:modem.c       ****     //SettheSUPLLocationPlatform(SLP)addressoftheserverthatwillprovidetheA-GPS data:
 700:modem.c       ****     at_write_command("AT$LCSSLP=1,\"supl.google.com\"\r","OK",DEFAULT_AT_TIMEOUT);
 701:modem.c       ****     
 702:modem.c       ****     //unlock contedt, simnce its being used by modem
 703:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 704:modem.c       ****     //Lock context 1 for LoCation Services (LCS) use only
 705:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",5000u);
 706:modem.c       ****     
 707:modem.c       ****     //unlock contedt, simnce its being used by modem
 708:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 709:modem.c       ****     
 710:modem.c       ****     //EnableunsolicitedNMEAGPSdataintheformatof<NMEASENTENCE><CR>
 711:modem.c       ****     at_write_command("AT$GPSNMUN=2,1,0,0,0,0,0\r","OK",DEFAULT_AT_TIMEOUT);
 712:modem.c       ****     
 713:modem.c       ****     //StartGPSlocationservicerequest.Sendingthiscommandsets$GPSP=1
 714:modem.c       ****    uint8 gps_status = 0;
 715:modem.c       ****     for(uint16 i=0;i<200;i++){
 716:modem.c       ****         gps_status = at_write_command("AT$GPSSLSR=1,1,,,,,0,255\r","N",3000u);
 717:modem.c       ****         if(gps_status){
 718:modem.c       ****             break;   
 719:modem.c       ****         }
 720:modem.c       ****   }
 721:modem.c       ****     
 722:modem.c       ****     //$GPGGA,030307.691,4217.7923,N,08341.3240,W,1,05,2.25,225.0,M,,M,,0000*6E
 723:modem.c       ****     //$GPGGA,213852.000,4600.8755,N,09327.7008,W,1,05,3.00,292.0,M,,M,,0000*6E
 724:modem.c       ****     if(gps_status){
 725:modem.c       ****         float lat,lon,alt = 0;
 726:modem.c       ****         if(sscanf(uart_received_string,"%*s,%f,N,%f,W,%*s",&lat,&lon) > 0){
 727:modem.c       ****             gps.altitude = alt;
 728:modem.c       ****             gps.latitude = lat/60;
 729:modem.c       ****             gps.longitude = lon/60;
 730:modem.c       ****             gps.valid = 1;
 731:modem.c       ****         }
 732:modem.c       ****         
 733:modem.c       ****     }
 734:modem.c       ****     
 735:modem.c       ****     //turn off gps
 736:modem.c       ****     //AT$GPSP=0
 737:modem.c       ****     at_write_command("AT$GPSP=0\r","OK",DEFAULT_AT_TIMEOUT);
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 58


 738:modem.c       ****     
 739:modem.c       ****     */
 740:modem.c       **** 
 741:modem.c       ****     // Calculate time to lock into GPS location and save in variable lock_time
 742:modem.c       ****     lock_time = getTimeStamp() - lock_time;
 2314              		.loc 1 742 0
 2315 01f0 FFF7FEFF 		bl	getTimeStamp
 2316 01f4 0246     		mov	r2, r0
 2317 01f6 3B6B     		ldr	r3, [r7, #48]
 2318 01f8 D31A     		subs	r3, r2, r3
 2319 01fa 3B63     		str	r3, [r7, #48]
 743:modem.c       ****     gps.time_to_lock = lock_time;
 2320              		.loc 1 743 0
 2321 01fc 3B6B     		ldr	r3, [r7, #48]
 2322 01fe 9BB2     		uxth	r3, r3
 2323 0200 3B84     		strh	r3, [r7, #32]	@ movhi
 744:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Time to lock GPS: %d", gps.time_to_lock);
 2324              		.loc 1 744 0
 2325 0202 3B8C     		ldrh	r3, [r7, #32]
 2326 0204 1A46     		mov	r2, r3
 2327 0206 1C49     		ldr	r1, .L132+84
 2328 0208 0020     		movs	r0, #0
 2329 020a FFF7FEFF 		bl	printNotif
 745:modem.c       ****     
 746:modem.c       ****     return gps;
 2330              		.loc 1 746 0
 2331 020e 7B68     		ldr	r3, [r7, #4]
 2332 0210 1C46     		mov	r4, r3
 2333 0212 07F11403 		add	r3, r7, #20
 2334 0216 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2335 0218 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2336              	.L122:
 747:modem.c       ****     
 748:modem.c       **** }
 2337              		.loc 1 748 0
 2338 021c 7868     		ldr	r0, [r7, #4]
 2339 021e 3837     		adds	r7, r7, #56
 2340              		.cfi_def_cfa_offset 16
 2341 0220 BD46     		mov	sp, r7
 2342              		.cfi_def_cfa_register 13
 2343              		@ sp needed
 2344 0222 B0BD     		pop	{r4, r5, r7, pc}
 2345              	.L133:
 2346              		.align	2
 2347              	.L132:
 2348 0224 00000000 		.word	modem_state
 2349 0228 00000000 		.word	.LC0
 2350 022c 50040000 		.word	.LC49
 2351 0230 64040000 		.word	.LC50
 2352 0234 74040000 		.word	.LC51
 2353 0238 80040000 		.word	.LC52
 2354 023c 90040000 		.word	.LC53
 2355 0240 B4040000 		.word	.LC54
 2356 0244 C4040000 		.word	.LC55
 2357 0248 D8020000 		.word	.LC26
 2358 024c D4040000 		.word	.LC56
 2359 0250 EC040000 		.word	.LC57
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 59


 2360 0254 F0040000 		.word	.LC58
 2361 0258 FC040000 		.word	.LC59
 2362 025c 00000000 		.word	uart_received_string
 2363 0260 08050000 		.word	.LC60
 2364 0264 0000C842 		.word	1120403456
 2365 0268 00005940 		.word	1079574528
 2366 026c 00004E40 		.word	1078853632
 2367 0270 28050000 		.word	.LC61
 2368 0274 3C050000 		.word	.LC62
 2369 0278 48050000 		.word	.LC63
 2370              		.cfi_endproc
 2371              	.LFE85:
 2372              		.size	modem_get_gps_coordinates, .-modem_get_gps_coordinates
 2373              		.text
 2374              	.Letext0:
 2375              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2376              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2377              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2378              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2379              		.file 6 "testing.h"
 2380              		.file 7 "modem.h"
 2381              		.file 8 "data.h"
 2382              		.file 9 "notoriOS.h"
 2383              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 2384              		.section	.debug_info,"",%progbits
 2385              	.Ldebug_info0:
 2386 0000 060A0000 		.4byte	0xa06
 2387 0004 0400     		.2byte	0x4
 2388 0006 00000000 		.4byte	.Ldebug_abbrev0
 2389 000a 04       		.byte	0x4
 2390 000b 01       		.uleb128 0x1
 2391 000c 3C000000 		.4byte	.LASF130
 2392 0010 0C       		.byte	0xc
 2393 0011 2D030000 		.4byte	.LASF131
 2394 0015 AB040000 		.4byte	.LASF132
 2395 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2396 001d 00000000 		.4byte	0
 2397 0021 00000000 		.4byte	.Ldebug_line0
 2398 0025 02       		.uleb128 0x2
 2399 0026 01       		.byte	0x1
 2400 0027 06       		.byte	0x6
 2401 0028 3F010000 		.4byte	.LASF0
 2402 002c 03       		.uleb128 0x3
 2403 002d 28000000 		.4byte	.LASF4
 2404 0031 02       		.byte	0x2
 2405 0032 1D       		.byte	0x1d
 2406 0033 37000000 		.4byte	0x37
 2407 0037 02       		.uleb128 0x2
 2408 0038 01       		.byte	0x1
 2409 0039 08       		.byte	0x8
 2410 003a 87040000 		.4byte	.LASF1
 2411 003e 02       		.uleb128 0x2
 2412 003f 02       		.byte	0x2
 2413 0040 05       		.byte	0x5
 2414 0041 65030000 		.4byte	.LASF2
 2415 0045 02       		.uleb128 0x2
 2416 0046 02       		.byte	0x2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 60


 2417 0047 07       		.byte	0x7
 2418 0048 F7010000 		.4byte	.LASF3
 2419 004c 03       		.uleb128 0x3
 2420 004d 7A030000 		.4byte	.LASF5
 2421 0051 02       		.byte	0x2
 2422 0052 3F       		.byte	0x3f
 2423 0053 57000000 		.4byte	0x57
 2424 0057 02       		.uleb128 0x2
 2425 0058 04       		.byte	0x4
 2426 0059 05       		.byte	0x5
 2427 005a 94010000 		.4byte	.LASF6
 2428 005e 03       		.uleb128 0x3
 2429 005f 1A020000 		.4byte	.LASF7
 2430 0063 02       		.byte	0x2
 2431 0064 41       		.byte	0x41
 2432 0065 69000000 		.4byte	0x69
 2433 0069 02       		.uleb128 0x2
 2434 006a 04       		.byte	0x4
 2435 006b 07       		.byte	0x7
 2436 006c 91020000 		.4byte	.LASF8
 2437 0070 02       		.uleb128 0x2
 2438 0071 08       		.byte	0x8
 2439 0072 05       		.byte	0x5
 2440 0073 31010000 		.4byte	.LASF9
 2441 0077 02       		.uleb128 0x2
 2442 0078 08       		.byte	0x8
 2443 0079 07       		.byte	0x7
 2444 007a D7000000 		.4byte	.LASF10
 2445 007e 04       		.uleb128 0x4
 2446 007f 04       		.byte	0x4
 2447 0080 05       		.byte	0x5
 2448 0081 696E7400 		.ascii	"int\000"
 2449 0085 02       		.uleb128 0x2
 2450 0086 04       		.byte	0x4
 2451 0087 07       		.byte	0x7
 2452 0088 7E050000 		.4byte	.LASF11
 2453 008c 03       		.uleb128 0x3
 2454 008d 6C060000 		.4byte	.LASF12
 2455 0091 03       		.byte	0x3
 2456 0092 18       		.byte	0x18
 2457 0093 2C000000 		.4byte	0x2c
 2458 0097 03       		.uleb128 0x3
 2459 0098 7F040000 		.4byte	.LASF13
 2460 009c 03       		.byte	0x3
 2461 009d 2C       		.byte	0x2c
 2462 009e 4C000000 		.4byte	0x4c
 2463 00a2 03       		.uleb128 0x3
 2464 00a3 46060000 		.4byte	.LASF14
 2465 00a7 03       		.byte	0x3
 2466 00a8 30       		.byte	0x30
 2467 00a9 5E000000 		.4byte	0x5e
 2468 00ad 05       		.uleb128 0x5
 2469 00ae B6010000 		.4byte	.LASF15
 2470 00b2 04       		.byte	0x4
 2471 00b3 9201     		.2byte	0x192
 2472 00b5 37000000 		.4byte	0x37
 2473 00b9 05       		.uleb128 0x5
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 61


 2474 00ba 0B000000 		.4byte	.LASF16
 2475 00be 04       		.byte	0x4
 2476 00bf 9301     		.2byte	0x193
 2477 00c1 45000000 		.4byte	0x45
 2478 00c5 05       		.uleb128 0x5
 2479 00c6 0A020000 		.4byte	.LASF17
 2480 00ca 04       		.byte	0x4
 2481 00cb 9401     		.2byte	0x194
 2482 00cd 69000000 		.4byte	0x69
 2483 00d1 05       		.uleb128 0x5
 2484 00d2 CB010000 		.4byte	.LASF18
 2485 00d6 04       		.byte	0x4
 2486 00d7 9701     		.2byte	0x197
 2487 00d9 57000000 		.4byte	0x57
 2488 00dd 02       		.uleb128 0x2
 2489 00de 04       		.byte	0x4
 2490 00df 04       		.byte	0x4
 2491 00e0 66040000 		.4byte	.LASF19
 2492 00e4 02       		.uleb128 0x2
 2493 00e5 08       		.byte	0x8
 2494 00e6 04       		.byte	0x4
 2495 00e7 C4010000 		.4byte	.LASF20
 2496 00eb 02       		.uleb128 0x2
 2497 00ec 01       		.byte	0x1
 2498 00ed 08       		.byte	0x8
 2499 00ee 65050000 		.4byte	.LASF21
 2500 00f2 02       		.uleb128 0x2
 2501 00f3 08       		.byte	0x8
 2502 00f4 04       		.byte	0x4
 2503 00f5 59050000 		.4byte	.LASF22
 2504 00f9 02       		.uleb128 0x2
 2505 00fa 04       		.byte	0x4
 2506 00fb 07       		.byte	0x7
 2507 00fc E8030000 		.4byte	.LASF23
 2508 0100 06       		.uleb128 0x6
 2509 0101 04       		.byte	0x4
 2510 0102 EB000000 		.4byte	0xeb
 2511 0106 06       		.uleb128 0x6
 2512 0107 04       		.byte	0x4
 2513 0108 0C010000 		.4byte	0x10c
 2514 010c 07       		.uleb128 0x7
 2515 010d EB000000 		.4byte	0xeb
 2516 0111 08       		.uleb128 0x8
 2517 0112 EB000000 		.4byte	0xeb
 2518 0116 21010000 		.4byte	0x121
 2519 011a 09       		.uleb128 0x9
 2520 011b F9000000 		.4byte	0xf9
 2521 011f 17       		.byte	0x17
 2522 0120 00       		.byte	0
 2523 0121 0A       		.uleb128 0xa
 2524 0122 746D00   		.ascii	"tm\000"
 2525 0125 24       		.byte	0x24
 2526 0126 05       		.byte	0x5
 2527 0127 21       		.byte	0x21
 2528 0128 99010000 		.4byte	0x199
 2529 012c 0B       		.uleb128 0xb
 2530 012d 4F060000 		.4byte	.LASF24
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 62


 2531 0131 05       		.byte	0x5
 2532 0132 23       		.byte	0x23
 2533 0133 7E000000 		.4byte	0x7e
 2534 0137 00       		.byte	0
 2535 0138 0B       		.uleb128 0xb
 2536 0139 E1030000 		.4byte	.LASF25
 2537 013d 05       		.byte	0x5
 2538 013e 24       		.byte	0x24
 2539 013f 7E000000 		.4byte	0x7e
 2540 0143 04       		.byte	0x4
 2541 0144 0B       		.uleb128 0xb
 2542 0145 18000000 		.4byte	.LASF26
 2543 0149 05       		.byte	0x5
 2544 014a 25       		.byte	0x25
 2545 014b 7E000000 		.4byte	0x7e
 2546 014f 08       		.byte	0x8
 2547 0150 0B       		.uleb128 0xb
 2548 0151 31060000 		.4byte	.LASF27
 2549 0155 05       		.byte	0x5
 2550 0156 26       		.byte	0x26
 2551 0157 7E000000 		.4byte	0x7e
 2552 015b 0C       		.byte	0xc
 2553 015c 0B       		.uleb128 0xb
 2554 015d 3C020000 		.4byte	.LASF28
 2555 0161 05       		.byte	0x5
 2556 0162 27       		.byte	0x27
 2557 0163 7E000000 		.4byte	0x7e
 2558 0167 10       		.byte	0x10
 2559 0168 0B       		.uleb128 0xb
 2560 0169 57020000 		.4byte	.LASF29
 2561 016d 05       		.byte	0x5
 2562 016e 28       		.byte	0x28
 2563 016f 7E000000 		.4byte	0x7e
 2564 0173 14       		.byte	0x14
 2565 0174 0B       		.uleb128 0xb
 2566 0175 3A050000 		.4byte	.LASF30
 2567 0179 05       		.byte	0x5
 2568 017a 29       		.byte	0x29
 2569 017b 7E000000 		.4byte	0x7e
 2570 017f 18       		.byte	0x18
 2571 0180 0B       		.uleb128 0xb
 2572 0181 20000000 		.4byte	.LASF31
 2573 0185 05       		.byte	0x5
 2574 0186 2A       		.byte	0x2a
 2575 0187 7E000000 		.4byte	0x7e
 2576 018b 1C       		.byte	0x1c
 2577 018c 0B       		.uleb128 0xb
 2578 018d 02030000 		.4byte	.LASF32
 2579 0191 05       		.byte	0x5
 2580 0192 2B       		.byte	0x2b
 2581 0193 7E000000 		.4byte	0x7e
 2582 0197 20       		.byte	0x20
 2583 0198 00       		.byte	0
 2584 0199 0C       		.uleb128 0xc
 2585 019a 8101     		.2byte	0x181
 2586 019c 06       		.byte	0x6
 2587 019d 0A       		.byte	0xa
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 63


 2588 019e C7010000 		.4byte	0x1c7
 2589 01a2 0B       		.uleb128 0xb
 2590 01a3 2C040000 		.4byte	.LASF33
 2591 01a7 06       		.byte	0x6
 2592 01a8 0C       		.byte	0xc
 2593 01a9 C7010000 		.4byte	0x1c7
 2594 01ad 00       		.byte	0
 2595 01ae 0B       		.uleb128 0xb
 2596 01af 56060000 		.4byte	.LASF34
 2597 01b3 06       		.byte	0x6
 2598 01b4 0D       		.byte	0xd
 2599 01b5 AD000000 		.4byte	0xad
 2600 01b9 80       		.byte	0x80
 2601 01ba 0B       		.uleb128 0xb
 2602 01bb 13050000 		.4byte	.LASF35
 2603 01bf 06       		.byte	0x6
 2604 01c0 0F       		.byte	0xf
 2605 01c1 D7010000 		.4byte	0x1d7
 2606 01c5 81       		.byte	0x81
 2607 01c6 00       		.byte	0
 2608 01c7 08       		.uleb128 0x8
 2609 01c8 EB000000 		.4byte	0xeb
 2610 01cc D7010000 		.4byte	0x1d7
 2611 01d0 09       		.uleb128 0x9
 2612 01d1 F9000000 		.4byte	0xf9
 2613 01d5 7F       		.byte	0x7f
 2614 01d6 00       		.byte	0
 2615 01d7 08       		.uleb128 0x8
 2616 01d8 EB000000 		.4byte	0xeb
 2617 01dc E7010000 		.4byte	0x1e7
 2618 01e0 09       		.uleb128 0x9
 2619 01e1 F9000000 		.4byte	0xf9
 2620 01e5 FF       		.byte	0xff
 2621 01e6 00       		.byte	0
 2622 01e7 03       		.uleb128 0x3
 2623 01e8 FB040000 		.4byte	.LASF36
 2624 01ec 06       		.byte	0x6
 2625 01ed 10       		.byte	0x10
 2626 01ee 99010000 		.4byte	0x199
 2627 01f2 0D       		.uleb128 0xd
 2628 01f3 3C       		.byte	0x3c
 2629 01f4 07       		.byte	0x7
 2630 01f5 2C       		.byte	0x2c
 2631 01f6 1F020000 		.4byte	0x21f
 2632 01fa 0B       		.uleb128 0xb
 2633 01fb 1C060000 		.4byte	.LASF37
 2634 01ff 07       		.byte	0x7
 2635 0200 2D       		.byte	0x2d
 2636 0201 1F020000 		.4byte	0x21f
 2637 0205 00       		.byte	0
 2638 0206 0B       		.uleb128 0xb
 2639 0207 90050000 		.4byte	.LASF38
 2640 020b 07       		.byte	0x7
 2641 020c 2E       		.byte	0x2e
 2642 020d 1F020000 		.4byte	0x21f
 2643 0211 14       		.byte	0x14
 2644 0212 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 64


 2645 0213 0E050000 		.4byte	.LASF39
 2646 0217 07       		.byte	0x7
 2647 0218 2F       		.byte	0x2f
 2648 0219 1F020000 		.4byte	0x21f
 2649 021d 28       		.byte	0x28
 2650 021e 00       		.byte	0
 2651 021f 08       		.uleb128 0x8
 2652 0220 EB000000 		.4byte	0xeb
 2653 0224 2F020000 		.4byte	0x22f
 2654 0228 09       		.uleb128 0x9
 2655 0229 F9000000 		.4byte	0xf9
 2656 022d 13       		.byte	0x13
 2657 022e 00       		.byte	0
 2658 022f 03       		.uleb128 0x3
 2659 0230 A4050000 		.4byte	.LASF40
 2660 0234 07       		.byte	0x7
 2661 0235 30       		.byte	0x30
 2662 0236 F2010000 		.4byte	0x1f2
 2663 023a 0D       		.uleb128 0xd
 2664 023b 0C       		.byte	0xc
 2665 023c 07       		.byte	0x7
 2666 023d 32       		.byte	0x32
 2667 023e 72020000 		.4byte	0x272
 2668 0242 0B       		.uleb128 0xb
 2669 0243 AE060000 		.4byte	.LASF41
 2670 0247 07       		.byte	0x7
 2671 0248 33       		.byte	0x33
 2672 0249 AD000000 		.4byte	0xad
 2673 024d 00       		.byte	0
 2674 024e 0E       		.uleb128 0xe
 2675 024f 737100   		.ascii	"sq\000"
 2676 0252 07       		.byte	0x7
 2677 0253 34       		.byte	0x34
 2678 0254 AD000000 		.4byte	0xad
 2679 0258 01       		.byte	0x1
 2680 0259 0B       		.uleb128 0xb
 2681 025a 4B010000 		.4byte	.LASF42
 2682 025e 07       		.byte	0x7
 2683 025f 35       		.byte	0x35
 2684 0260 7E000000 		.4byte	0x7e
 2685 0264 04       		.byte	0x4
 2686 0265 0B       		.uleb128 0xb
 2687 0266 48030000 		.4byte	.LASF43
 2688 026a 07       		.byte	0x7
 2689 026b 36       		.byte	0x36
 2690 026c 7E000000 		.4byte	0x7e
 2691 0270 08       		.byte	0x8
 2692 0271 00       		.byte	0
 2693 0272 03       		.uleb128 0x3
 2694 0273 1A050000 		.4byte	.LASF44
 2695 0277 07       		.byte	0x7
 2696 0278 37       		.byte	0x37
 2697 0279 3A020000 		.4byte	0x23a
 2698 027d 0D       		.uleb128 0xd
 2699 027e 10       		.byte	0x10
 2700 027f 07       		.byte	0x7
 2701 0280 39       		.byte	0x39
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 65


 2702 0281 C2020000 		.4byte	0x2c2
 2703 0285 0B       		.uleb128 0xb
 2704 0286 23040000 		.4byte	.LASF45
 2705 028a 07       		.byte	0x7
 2706 028b 3A       		.byte	0x3a
 2707 028c DD000000 		.4byte	0xdd
 2708 0290 00       		.byte	0
 2709 0291 0B       		.uleb128 0xb
 2710 0292 32000000 		.4byte	.LASF46
 2711 0296 07       		.byte	0x7
 2712 0297 3B       		.byte	0x3b
 2713 0298 DD000000 		.4byte	0xdd
 2714 029c 04       		.byte	0x4
 2715 029d 0B       		.uleb128 0xb
 2716 029e AD010000 		.4byte	.LASF47
 2717 02a2 07       		.byte	0x7
 2718 02a3 3C       		.byte	0x3c
 2719 02a4 DD000000 		.4byte	0xdd
 2720 02a8 08       		.byte	0x8
 2721 02a9 0B       		.uleb128 0xb
 2722 02aa E0020000 		.4byte	.LASF48
 2723 02ae 07       		.byte	0x7
 2724 02af 3D       		.byte	0x3d
 2725 02b0 B9000000 		.4byte	0xb9
 2726 02b4 0C       		.byte	0xc
 2727 02b5 0B       		.uleb128 0xb
 2728 02b6 39060000 		.4byte	.LASF49
 2729 02ba 07       		.byte	0x7
 2730 02bb 3E       		.byte	0x3e
 2731 02bc AD000000 		.4byte	0xad
 2732 02c0 0E       		.byte	0xe
 2733 02c1 00       		.byte	0
 2734 02c2 03       		.uleb128 0x3
 2735 02c3 B1050000 		.4byte	.LASF50
 2736 02c7 07       		.byte	0x7
 2737 02c8 40       		.byte	0x40
 2738 02c9 7D020000 		.4byte	0x27d
 2739 02cd 0D       		.uleb128 0xd
 2740 02ce 2C       		.byte	0x2c
 2741 02cf 08       		.byte	0x8
 2742 02d0 0F       		.byte	0xf
 2743 02d1 FA020000 		.4byte	0x2fa
 2744 02d5 0E       		.uleb128 0xe
 2745 02d6 6B657900 		.ascii	"key\000"
 2746 02da 08       		.byte	0x8
 2747 02db 10       		.byte	0x10
 2748 02dc 1F020000 		.4byte	0x21f
 2749 02e0 00       		.byte	0
 2750 02e1 0B       		.uleb128 0xb
 2751 02e2 12000000 		.4byte	.LASF51
 2752 02e6 08       		.byte	0x8
 2753 02e7 11       		.byte	0x11
 2754 02e8 1F020000 		.4byte	0x21f
 2755 02ec 14       		.byte	0x14
 2756 02ed 0B       		.uleb128 0xb
 2757 02ee DB060000 		.4byte	.LASF52
 2758 02f2 08       		.byte	0x8
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 66


 2759 02f3 12       		.byte	0x12
 2760 02f4 D1000000 		.4byte	0xd1
 2761 02f8 28       		.byte	0x28
 2762 02f9 00       		.byte	0
 2763 02fa 03       		.uleb128 0x3
 2764 02fb 7B020000 		.4byte	.LASF53
 2765 02ff 08       		.byte	0x8
 2766 0300 13       		.byte	0x13
 2767 0301 CD020000 		.4byte	0x2cd
 2768 0305 0D       		.uleb128 0xd
 2769 0306 1C       		.byte	0x1c
 2770 0307 09       		.byte	0x9
 2771 0308 37       		.byte	0x37
 2772 0309 26030000 		.4byte	0x326
 2773 030d 0B       		.uleb128 0xb
 2774 030e 0B030000 		.4byte	.LASF54
 2775 0312 09       		.byte	0x9
 2776 0313 39       		.byte	0x39
 2777 0314 26030000 		.4byte	0x326
 2778 0318 00       		.byte	0
 2779 0319 0B       		.uleb128 0xb
 2780 031a 23060000 		.4byte	.LASF55
 2781 031e 09       		.byte	0x9
 2782 031f 3A       		.byte	0x3a
 2783 0320 11010000 		.4byte	0x111
 2784 0324 04       		.byte	0x4
 2785 0325 00       		.byte	0
 2786 0326 06       		.uleb128 0x6
 2787 0327 04       		.byte	0x4
 2788 0328 2F020000 		.4byte	0x22f
 2789 032c 03       		.uleb128 0x3
 2790 032d AA030000 		.4byte	.LASF56
 2791 0331 09       		.byte	0x9
 2792 0332 3C       		.byte	0x3c
 2793 0333 05030000 		.4byte	0x305
 2794 0337 0C       		.uleb128 0xc
 2795 0338 4401     		.2byte	0x144
 2796 033a 09       		.byte	0x9
 2797 033b 42       		.byte	0x42
 2798 033c 8A030000 		.4byte	0x38a
 2799 0340 0B       		.uleb128 0xb
 2800 0341 BC010000 		.4byte	.LASF57
 2801 0345 09       		.byte	0x9
 2802 0346 45       		.byte	0x45
 2803 0347 1F020000 		.4byte	0x21f
 2804 034b 00       		.byte	0
 2805 034c 0B       		.uleb128 0xb
 2806 034d 16030000 		.4byte	.LASF58
 2807 0351 09       		.byte	0x9
 2808 0352 47       		.byte	0x47
 2809 0353 8A030000 		.4byte	0x38a
 2810 0357 14       		.byte	0x14
 2811 0358 0B       		.uleb128 0xb
 2812 0359 FA020000 		.4byte	.LASF59
 2813 035d 09       		.byte	0x9
 2814 035e 48       		.byte	0x48
 2815 035f 7E000000 		.4byte	0x7e
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 67


 2816 0363 78       		.byte	0x78
 2817 0364 0B       		.uleb128 0xb
 2818 0365 F2020000 		.4byte	.LASF60
 2819 0369 09       		.byte	0x9
 2820 036a 49       		.byte	0x49
 2821 036b 9A030000 		.4byte	0x39a
 2822 036f 7C       		.byte	0x7c
 2823 0370 0B       		.uleb128 0xb
 2824 0371 43020000 		.4byte	.LASF61
 2825 0375 09       		.byte	0x9
 2826 0376 4A       		.byte	0x4a
 2827 0377 8A030000 		.4byte	0x38a
 2828 037b AE       		.byte	0xae
 2829 037c 0F       		.uleb128 0xf
 2830 037d 74060000 		.4byte	.LASF62
 2831 0381 09       		.byte	0x9
 2832 0382 4B       		.byte	0x4b
 2833 0383 9A030000 		.4byte	0x39a
 2834 0387 1201     		.2byte	0x112
 2835 0389 00       		.byte	0
 2836 038a 08       		.uleb128 0x8
 2837 038b EB000000 		.4byte	0xeb
 2838 038f 9A030000 		.4byte	0x39a
 2839 0393 09       		.uleb128 0x9
 2840 0394 F9000000 		.4byte	0xf9
 2841 0398 63       		.byte	0x63
 2842 0399 00       		.byte	0
 2843 039a 08       		.uleb128 0x8
 2844 039b EB000000 		.4byte	0xeb
 2845 039f AA030000 		.4byte	0x3aa
 2846 03a3 09       		.uleb128 0x9
 2847 03a4 F9000000 		.4byte	0xf9
 2848 03a8 31       		.byte	0x31
 2849 03a9 00       		.byte	0
 2850 03aa 03       		.uleb128 0x3
 2851 03ab 5D060000 		.4byte	.LASF63
 2852 03af 09       		.byte	0x9
 2853 03b0 4E       		.byte	0x4e
 2854 03b1 37030000 		.4byte	0x337
 2855 03b5 10       		.uleb128 0x10
 2856 03b6 72040000 		.4byte	.LASF91
 2857 03ba 01       		.byte	0x1
 2858 03bb 15       		.byte	0x15
 2859 03bc 00000000 		.4byte	.LFB64
 2860 03c0 3C000000 		.4byte	.LFE64-.LFB64
 2861 03c4 01       		.uleb128 0x1
 2862 03c5 9C       		.byte	0x9c
 2863 03c6 11       		.uleb128 0x11
 2864 03c7 B2020000 		.4byte	.LASF64
 2865 03cb 01       		.byte	0x1
 2866 03cc 1F       		.byte	0x1f
 2867 03cd 00000000 		.4byte	.LFB65
 2868 03d1 54000000 		.4byte	.LFE65-.LFB65
 2869 03d5 01       		.uleb128 0x1
 2870 03d6 9C       		.byte	0x9c
 2871 03d7 11       		.uleb128 0x11
 2872 03d8 04060000 		.4byte	.LASF65
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 68


 2873 03dc 01       		.byte	0x1
 2874 03dd 35       		.byte	0x35
 2875 03de 00000000 		.4byte	.LFB66
 2876 03e2 32000000 		.4byte	.LFE66-.LFB66
 2877 03e6 01       		.uleb128 0x1
 2878 03e7 9C       		.byte	0x9c
 2879 03e8 11       		.uleb128 0x11
 2880 03e9 65020000 		.4byte	.LASF66
 2881 03ed 01       		.byte	0x1
 2882 03ee 45       		.byte	0x45
 2883 03ef 00000000 		.4byte	.LFB67
 2884 03f3 20000000 		.4byte	.LFE67-.LFB67
 2885 03f7 01       		.uleb128 0x1
 2886 03f8 9C       		.byte	0x9c
 2887 03f9 11       		.uleb128 0x11
 2888 03fa CA060000 		.4byte	.LASF67
 2889 03fe 01       		.byte	0x1
 2890 03ff 4E       		.byte	0x4e
 2891 0400 00000000 		.4byte	.LFB68
 2892 0404 40000000 		.4byte	.LFE68-.LFB68
 2893 0408 01       		.uleb128 0x1
 2894 0409 9C       		.byte	0x9c
 2895 040a 12       		.uleb128 0x12
 2896 040b 1E030000 		.4byte	.LASF81
 2897 040f 01       		.byte	0x1
 2898 0410 60       		.byte	0x60
 2899 0411 AD000000 		.4byte	0xad
 2900 0415 00000000 		.4byte	.LFB69
 2901 0419 DC000000 		.4byte	.LFE69-.LFB69
 2902 041d 01       		.uleb128 0x1
 2903 041e 9C       		.byte	0x9c
 2904 041f 7E040000 		.4byte	0x47e
 2905 0423 13       		.uleb128 0x13
 2906 0424 80060000 		.4byte	.LASF68
 2907 0428 01       		.byte	0x1
 2908 0429 69       		.byte	0x69
 2909 042a AD000000 		.4byte	0xad
 2910 042e 02       		.uleb128 0x2
 2911 042f 91       		.byte	0x91
 2912 0430 77       		.sleb128 -9
 2913 0431 13       		.uleb128 0x13
 2914 0432 89060000 		.4byte	.LASF69
 2915 0436 01       		.byte	0x1
 2916 0437 6A       		.byte	0x6a
 2917 0438 AD000000 		.4byte	0xad
 2918 043c 02       		.uleb128 0x2
 2919 043d 91       		.byte	0x91
 2920 043e 74       		.sleb128 -12
 2921 043f 13       		.uleb128 0x13
 2922 0440 92060000 		.4byte	.LASF70
 2923 0444 01       		.byte	0x1
 2924 0445 6C       		.byte	0x6c
 2925 0446 57000000 		.4byte	0x57
 2926 044a 02       		.uleb128 0x2
 2927 044b 91       		.byte	0x91
 2928 044c 70       		.sleb128 -16
 2929 044d 14       		.uleb128 0x14
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 69


 2930 044e 26000000 		.4byte	.LBB2
 2931 0452 4A000000 		.4byte	.LBE2-.LBB2
 2932 0456 13       		.uleb128 0x13
 2933 0457 89060000 		.4byte	.LASF69
 2934 045b 01       		.byte	0x1
 2935 045c 6F       		.byte	0x6f
 2936 045d AD000000 		.4byte	0xad
 2937 0461 02       		.uleb128 0x2
 2938 0462 91       		.byte	0x91
 2939 0463 76       		.sleb128 -10
 2940 0464 14       		.uleb128 0x14
 2941 0465 2C000000 		.4byte	.LBB3
 2942 0469 2A000000 		.4byte	.LBE3-.LBB3
 2943 046d 13       		.uleb128 0x13
 2944 046e 87020000 		.4byte	.LASF71
 2945 0472 01       		.byte	0x1
 2946 0473 71       		.byte	0x71
 2947 0474 AD000000 		.4byte	0xad
 2948 0478 02       		.uleb128 0x2
 2949 0479 91       		.byte	0x91
 2950 047a 75       		.sleb128 -11
 2951 047b 00       		.byte	0
 2952 047c 00       		.byte	0
 2953 047d 00       		.byte	0
 2954 047e 11       		.uleb128 0x11
 2955 047f 42050000 		.4byte	.LASF72
 2956 0483 01       		.byte	0x1
 2957 0484 92       		.byte	0x92
 2958 0485 00000000 		.4byte	.LFB70
 2959 0489 1C000000 		.4byte	.LFE70-.LFB70
 2960 048d 01       		.uleb128 0x1
 2961 048e 9C       		.byte	0x9c
 2962 048f 11       		.uleb128 0x11
 2963 0490 28050000 		.4byte	.LASF73
 2964 0494 01       		.byte	0x1
 2965 0495 9A       		.byte	0x9a
 2966 0496 00000000 		.4byte	.LFB71
 2967 049a 28000000 		.4byte	.LFE71-.LFB71
 2968 049e 01       		.uleb128 0x1
 2969 049f 9C       		.byte	0x9c
 2970 04a0 15       		.uleb128 0x15
 2971 04a1 99030000 		.4byte	.LASF85
 2972 04a5 01       		.byte	0x1
 2973 04a6 A5       		.byte	0xa5
 2974 04a7 8C000000 		.4byte	0x8c
 2975 04ab 00000000 		.4byte	.LFB72
 2976 04af C8000000 		.4byte	.LFE72-.LFB72
 2977 04b3 01       		.uleb128 0x1
 2978 04b4 9C       		.byte	0x9c
 2979 04b5 32050000 		.4byte	0x532
 2980 04b9 16       		.uleb128 0x16
 2981 04ba 4C040000 		.4byte	.LASF74
 2982 04be 01       		.byte	0x1
 2983 04bf A5       		.byte	0xa5
 2984 04c0 00010000 		.4byte	0x100
 2985 04c4 02       		.uleb128 0x2
 2986 04c5 91       		.byte	0x91
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 70


 2987 04c6 5C       		.sleb128 -36
 2988 04c7 16       		.uleb128 0x16
 2989 04c8 9C060000 		.4byte	.LASF75
 2990 04cc 01       		.byte	0x1
 2991 04cd A5       		.byte	0xa5
 2992 04ce 00010000 		.4byte	0x100
 2993 04d2 02       		.uleb128 0x2
 2994 04d3 91       		.byte	0x91
 2995 04d4 58       		.sleb128 -40
 2996 04d5 16       		.uleb128 0x16
 2997 04d6 C1020000 		.4byte	.LASF76
 2998 04da 01       		.byte	0x1
 2999 04db A5       		.byte	0xa5
 3000 04dc A2000000 		.4byte	0xa2
 3001 04e0 02       		.uleb128 0x2
 3002 04e1 91       		.byte	0x91
 3003 04e2 54       		.sleb128 -44
 3004 04e3 13       		.uleb128 0x13
 3005 04e4 8E030000 		.4byte	.LASF77
 3006 04e8 01       		.byte	0x1
 3007 04e9 A7       		.byte	0xa7
 3008 04ea C5000000 		.4byte	0xc5
 3009 04ee 02       		.uleb128 0x2
 3010 04ef 91       		.byte	0x91
 3011 04f0 74       		.sleb128 -12
 3012 04f1 14       		.uleb128 0x14
 3013 04f2 16000000 		.4byte	.LBB4
 3014 04f6 88000000 		.4byte	.LBE4-.LBB4
 3015 04fa 13       		.uleb128 0x13
 3016 04fb 55040000 		.4byte	.LASF78
 3017 04ff 01       		.byte	0x1
 3018 0500 AB       		.byte	0xab
 3019 0501 00010000 		.4byte	0x100
 3020 0505 02       		.uleb128 0x2
 3021 0506 91       		.byte	0x91
 3022 0507 64       		.sleb128 -28
 3023 0508 13       		.uleb128 0x13
 3024 0509 A5040000 		.4byte	.LASF79
 3025 050d 01       		.byte	0x1
 3026 050e AC       		.byte	0xac
 3027 050f A2000000 		.4byte	0xa2
 3028 0513 02       		.uleb128 0x2
 3029 0514 91       		.byte	0x91
 3030 0515 6C       		.sleb128 -20
 3031 0516 17       		.uleb128 0x17
 3032 0517 6900     		.ascii	"i\000"
 3033 0519 01       		.byte	0x1
 3034 051a AD       		.byte	0xad
 3035 051b A2000000 		.4byte	0xa2
 3036 051f 02       		.uleb128 0x2
 3037 0520 91       		.byte	0x91
 3038 0521 70       		.sleb128 -16
 3039 0522 13       		.uleb128 0x13
 3040 0523 11020000 		.4byte	.LASF80
 3041 0527 01       		.byte	0x1
 3042 0528 AD       		.byte	0xad
 3043 0529 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 71


 3044 052d 02       		.uleb128 0x2
 3045 052e 91       		.byte	0x91
 3046 052f 68       		.sleb128 -24
 3047 0530 00       		.byte	0
 3048 0531 00       		.byte	0
 3049 0532 12       		.uleb128 0x12
 3050 0533 36040000 		.4byte	.LASF82
 3051 0537 01       		.byte	0x1
 3052 0538 D9       		.byte	0xd9
 3053 0539 E7010000 		.4byte	0x1e7
 3054 053d 00000000 		.4byte	.LFB73
 3055 0541 FC000000 		.4byte	.LFE73-.LFB73
 3056 0545 01       		.uleb128 0x1
 3057 0546 9C       		.byte	0x9c
 3058 0547 89050000 		.4byte	0x589
 3059 054b 13       		.uleb128 0x13
 3060 054c 13010000 		.4byte	.LASF83
 3061 0550 01       		.byte	0x1
 3062 0551 DB       		.byte	0xdb
 3063 0552 E7010000 		.4byte	0x1e7
 3064 0556 03       		.uleb128 0x3
 3065 0557 91       		.byte	0x91
 3066 0558 E47C     		.sleb128 -412
 3067 055a 14       		.uleb128 0x14
 3068 055b 4A000000 		.4byte	.LBB5
 3069 055f 84000000 		.4byte	.LBE5-.LBB5
 3070 0563 17       		.uleb128 0x17
 3071 0564 6900     		.ascii	"i\000"
 3072 0566 01       		.byte	0x1
 3073 0567 E2       		.byte	0xe2
 3074 0568 7E000000 		.4byte	0x7e
 3075 056c 02       		.uleb128 0x2
 3076 056d 91       		.byte	0x91
 3077 056e 6C       		.sleb128 -20
 3078 056f 14       		.uleb128 0x14
 3079 0570 70000000 		.4byte	.LBB6
 3080 0574 46000000 		.4byte	.LBE6-.LBB6
 3081 0578 13       		.uleb128 0x13
 3082 0579 EA010000 		.4byte	.LASF84
 3083 057d 01       		.byte	0x1
 3084 057e EF       		.byte	0xef
 3085 057f 57000000 		.4byte	0x57
 3086 0583 02       		.uleb128 0x2
 3087 0584 91       		.byte	0x91
 3088 0585 68       		.sleb128 -24
 3089 0586 00       		.byte	0
 3090 0587 00       		.byte	0
 3091 0588 00       		.byte	0
 3092 0589 18       		.uleb128 0x18
 3093 058a A3020000 		.4byte	.LASF86
 3094 058e 01       		.byte	0x1
 3095 058f 0301     		.2byte	0x103
 3096 0591 AD000000 		.4byte	0xad
 3097 0595 00000000 		.4byte	.LFB74
 3098 0599 78000000 		.4byte	.LFE74-.LFB74
 3099 059d 01       		.uleb128 0x1
 3100 059e 9C       		.byte	0x9c
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 72


 3101 059f FA050000 		.4byte	0x5fa
 3102 05a3 19       		.uleb128 0x19
 3103 05a4 84030000 		.4byte	.LASF87
 3104 05a8 01       		.byte	0x1
 3105 05a9 0301     		.2byte	0x103
 3106 05ab 00010000 		.4byte	0x100
 3107 05af 02       		.uleb128 0x2
 3108 05b0 91       		.byte	0x91
 3109 05b1 6C       		.sleb128 -20
 3110 05b2 19       		.uleb128 0x19
 3111 05b3 35030000 		.4byte	.LASF88
 3112 05b7 01       		.byte	0x1
 3113 05b8 0301     		.2byte	0x103
 3114 05ba 06010000 		.4byte	0x106
 3115 05be 02       		.uleb128 0x2
 3116 05bf 91       		.byte	0x91
 3117 05c0 68       		.sleb128 -24
 3118 05c1 19       		.uleb128 0x19
 3119 05c2 5B030000 		.4byte	.LASF89
 3120 05c6 01       		.byte	0x1
 3121 05c7 0301     		.2byte	0x103
 3122 05c9 06010000 		.4byte	0x106
 3123 05cd 02       		.uleb128 0x2
 3124 05ce 91       		.byte	0x91
 3125 05cf 64       		.sleb128 -28
 3126 05d0 19       		.uleb128 0x19
 3127 05d1 41030000 		.4byte	.LASF90
 3128 05d5 01       		.byte	0x1
 3129 05d6 0301     		.2byte	0x103
 3130 05d8 00010000 		.4byte	0x100
 3131 05dc 02       		.uleb128 0x2
 3132 05dd 91       		.byte	0x91
 3133 05de 60       		.sleb128 -32
 3134 05df 1A       		.uleb128 0x1a
 3135 05e0 6100     		.ascii	"a\000"
 3136 05e2 01       		.byte	0x1
 3137 05e3 0501     		.2byte	0x105
 3138 05e5 00010000 		.4byte	0x100
 3139 05e9 02       		.uleb128 0x2
 3140 05ea 91       		.byte	0x91
 3141 05eb 74       		.sleb128 -12
 3142 05ec 1A       		.uleb128 0x1a
 3143 05ed 6200     		.ascii	"b\000"
 3144 05ef 01       		.byte	0x1
 3145 05f0 0501     		.2byte	0x105
 3146 05f2 00010000 		.4byte	0x100
 3147 05f6 02       		.uleb128 0x2
 3148 05f7 91       		.byte	0x91
 3149 05f8 70       		.sleb128 -16
 3150 05f9 00       		.byte	0
 3151 05fa 1B       		.uleb128 0x1b
 3152 05fb 6A050000 		.4byte	.LASF92
 3153 05ff 01       		.byte	0x1
 3154 0600 2201     		.2byte	0x122
 3155 0602 AD000000 		.4byte	0xad
 3156 0606 00000000 		.4byte	.LFB75
 3157 060a 08010000 		.4byte	.LFE75-.LFB75
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 73


 3158 060e 01       		.uleb128 0x1
 3159 060f 9C       		.byte	0x9c
 3160 0610 1C       		.uleb128 0x1c
 3161 0611 F1030000 		.4byte	.LASF93
 3162 0615 01       		.byte	0x1
 3163 0616 5D01     		.2byte	0x15d
 3164 0618 AD000000 		.4byte	0xad
 3165 061c 00000000 		.4byte	.LFB76
 3166 0620 A0000000 		.4byte	.LFE76-.LFB76
 3167 0624 01       		.uleb128 0x1
 3168 0625 9C       		.byte	0x9c
 3169 0626 53060000 		.4byte	0x653
 3170 062a 1D       		.uleb128 0x1d
 3171 062b 56060000 		.4byte	.LASF34
 3172 062f 01       		.byte	0x1
 3173 0630 6101     		.2byte	0x161
 3174 0632 AD000000 		.4byte	0xad
 3175 0636 02       		.uleb128 0x2
 3176 0637 91       		.byte	0x91
 3177 0638 77       		.sleb128 -9
 3178 0639 14       		.uleb128 0x14
 3179 063a 36000000 		.4byte	.LBB7
 3180 063e 34000000 		.4byte	.LBE7-.LBB7
 3181 0642 1D       		.uleb128 0x1d
 3182 0643 89030000 		.4byte	.LASF94
 3183 0647 01       		.byte	0x1
 3184 0648 6901     		.2byte	0x169
 3185 064a 53060000 		.4byte	0x653
 3186 064e 02       		.uleb128 0x2
 3187 064f 91       		.byte	0x91
 3188 0650 6C       		.sleb128 -20
 3189 0651 00       		.byte	0
 3190 0652 00       		.byte	0
 3191 0653 08       		.uleb128 0x8
 3192 0654 EB000000 		.4byte	0xeb
 3193 0658 63060000 		.4byte	0x663
 3194 065c 09       		.uleb128 0x9
 3195 065d F9000000 		.4byte	0xf9
 3196 0661 09       		.byte	0x9
 3197 0662 00       		.byte	0
 3198 0663 1E       		.uleb128 0x1e
 3199 0664 6D010000 		.4byte	.LASF95
 3200 0668 01       		.byte	0x1
 3201 0669 7C01     		.2byte	0x17c
 3202 066b 00000000 		.4byte	.LFB77
 3203 066f 1C000000 		.4byte	.LFE77-.LFB77
 3204 0673 01       		.uleb128 0x1
 3205 0674 9C       		.byte	0x9c
 3206 0675 1B       		.uleb128 0x1b
 3207 0676 C9050000 		.4byte	.LASF96
 3208 067a 01       		.byte	0x1
 3209 067b 8C01     		.2byte	0x18c
 3210 067d AD000000 		.4byte	0xad
 3211 0681 00000000 		.4byte	.LFB78
 3212 0685 28000000 		.4byte	.LFE78-.LFB78
 3213 0689 01       		.uleb128 0x1
 3214 068a 9C       		.byte	0x9c
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 74


 3215 068b 1F       		.uleb128 0x1f
 3216 068c C9020000 		.4byte	.LASF98
 3217 0690 01       		.byte	0x1
 3218 0691 9801     		.2byte	0x198
 3219 0693 00000000 		.4byte	.LFB79
 3220 0697 B4000000 		.4byte	.LFE79-.LFB79
 3221 069b 01       		.uleb128 0x1
 3222 069c 9C       		.byte	0x9c
 3223 069d E3060000 		.4byte	0x6e3
 3224 06a1 14       		.uleb128 0x14
 3225 06a2 06000000 		.4byte	.LBB8
 3226 06a6 84000000 		.4byte	.LBE8-.LBB8
 3227 06aa 1D       		.uleb128 0x1d
 3228 06ab 89060000 		.4byte	.LASF69
 3229 06af 01       		.byte	0x1
 3230 06b0 9C01     		.2byte	0x19c
 3231 06b2 AD000000 		.4byte	0xad
 3232 06b6 02       		.uleb128 0x2
 3233 06b7 91       		.byte	0x91
 3234 06b8 77       		.sleb128 -9
 3235 06b9 14       		.uleb128 0x14
 3236 06ba 0C000000 		.4byte	.LBB9
 3237 06be 72000000 		.4byte	.LBE9-.LBB9
 3238 06c2 1A       		.uleb128 0x1a
 3239 06c3 63737100 		.ascii	"csq\000"
 3240 06c7 01       		.byte	0x1
 3241 06c8 A001     		.2byte	0x1a0
 3242 06ca 53060000 		.4byte	0x653
 3243 06ce 02       		.uleb128 0x2
 3244 06cf 91       		.byte	0x91
 3245 06d0 64       		.sleb128 -28
 3246 06d1 1D       		.uleb128 0x1d
 3247 06d2 6C040000 		.4byte	.LASF97
 3248 06d6 01       		.byte	0x1
 3249 06d7 A501     		.2byte	0x1a5
 3250 06d9 00010000 		.4byte	0x100
 3251 06dd 02       		.uleb128 0x2
 3252 06de 91       		.byte	0x91
 3253 06df 70       		.sleb128 -16
 3254 06e0 00       		.byte	0
 3255 06e1 00       		.byte	0
 3256 06e2 00       		.byte	0
 3257 06e3 1F       		.uleb128 0x1f
 3258 06e4 D1010000 		.4byte	.LASF99
 3259 06e8 01       		.byte	0x1
 3260 06e9 BB01     		.2byte	0x1bb
 3261 06eb 00000000 		.4byte	.LFB80
 3262 06ef 38010000 		.4byte	.LFE80-.LFB80
 3263 06f3 01       		.uleb128 0x1
 3264 06f4 9C       		.byte	0x9c
 3265 06f5 13070000 		.4byte	0x713
 3266 06f9 14       		.uleb128 0x14
 3267 06fa B6000000 		.4byte	.LBB10
 3268 06fe 34000000 		.4byte	.LBE10-.LBB10
 3269 0702 1D       		.uleb128 0x1d
 3270 0703 8B050000 		.4byte	.LASF100
 3271 0707 01       		.byte	0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 75


 3272 0708 E401     		.2byte	0x1e4
 3273 070a 53060000 		.4byte	0x653
 3274 070e 02       		.uleb128 0x2
 3275 070f 91       		.byte	0x91
 3276 0710 6C       		.sleb128 -20
 3277 0711 00       		.byte	0
 3278 0712 00       		.byte	0
 3279 0713 1C       		.uleb128 0x1c
 3280 0714 25020000 		.4byte	.LASF101
 3281 0718 01       		.byte	0x1
 3282 0719 F601     		.2byte	0x1f6
 3283 071b 57000000 		.4byte	0x57
 3284 071f 00000000 		.4byte	.LFB81
 3285 0723 44010000 		.4byte	.LFE81-.LFB81
 3286 0727 01       		.uleb128 0x1
 3287 0728 9C       		.byte	0x9c
 3288 0729 CF070000 		.4byte	0x7cf
 3289 072d 1D       		.uleb128 0x1d
 3290 072e 6F030000 		.4byte	.LASF102
 3291 0732 01       		.byte	0x1
 3292 0733 0102     		.2byte	0x201
 3293 0735 57000000 		.4byte	0x57
 3294 0739 02       		.uleb128 0x2
 3295 073a 91       		.byte	0x91
 3296 073b 74       		.sleb128 -12
 3297 073c 14       		.uleb128 0x14
 3298 073d 30000000 		.4byte	.LBB11
 3299 0741 DE000000 		.4byte	.LBE11-.LBB11
 3300 0745 1D       		.uleb128 0x1d
 3301 0746 EA010000 		.4byte	.LASF84
 3302 074a 01       		.byte	0x1
 3303 074b 0502     		.2byte	0x205
 3304 074d CF070000 		.4byte	0x7cf
 3305 0751 02       		.uleb128 0x2
 3306 0752 91       		.byte	0x91
 3307 0753 54       		.sleb128 -44
 3308 0754 1A       		.uleb128 0x1a
 3309 0755 7400     		.ascii	"t\000"
 3310 0757 01       		.byte	0x1
 3311 0758 0A02     		.2byte	0x20a
 3312 075a 21010000 		.4byte	0x121
 3313 075e 03       		.uleb128 0x3
 3314 075f 91       		.byte	0x91
 3315 0760 947F     		.sleb128 -108
 3316 0762 1D       		.uleb128 0x1d
 3317 0763 8F010000 		.4byte	.LASF103
 3318 0767 01       		.byte	0x1
 3319 0768 0D02     		.2byte	0x20d
 3320 076a 7E000000 		.4byte	0x7e
 3321 076e 02       		.uleb128 0x2
 3322 076f 91       		.byte	0x91
 3323 0770 50       		.sleb128 -48
 3324 0771 1D       		.uleb128 0x1d
 3325 0772 5F020000 		.4byte	.LASF104
 3326 0776 01       		.byte	0x1
 3327 0777 0D02     		.2byte	0x20d
 3328 0779 7E000000 		.4byte	0x7e
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 76


 3329 077d 02       		.uleb128 0x2
 3330 077e 91       		.byte	0x91
 3331 077f 4C       		.sleb128 -52
 3332 0780 1A       		.uleb128 0x1a
 3333 0781 64617900 		.ascii	"day\000"
 3334 0785 01       		.byte	0x1
 3335 0786 0D02     		.2byte	0x20d
 3336 0788 7E000000 		.4byte	0x7e
 3337 078c 02       		.uleb128 0x2
 3338 078d 91       		.byte	0x91
 3339 078e 48       		.sleb128 -56
 3340 078f 1D       		.uleb128 0x1d
 3341 0790 47040000 		.4byte	.LASF105
 3342 0794 01       		.byte	0x1
 3343 0795 0D02     		.2byte	0x20d
 3344 0797 7E000000 		.4byte	0x7e
 3345 079b 02       		.uleb128 0x2
 3346 079c 91       		.byte	0x91
 3347 079d 44       		.sleb128 -60
 3348 079e 1D       		.uleb128 0x1d
 3349 079f 3F060000 		.4byte	.LASF106
 3350 07a3 01       		.byte	0x1
 3351 07a4 0D02     		.2byte	0x20d
 3352 07a6 7E000000 		.4byte	0x7e
 3353 07aa 02       		.uleb128 0x2
 3354 07ab 91       		.byte	0x91
 3355 07ac 40       		.sleb128 -64
 3356 07ad 1D       		.uleb128 0x1d
 3357 07ae 88010000 		.4byte	.LASF107
 3358 07b2 01       		.byte	0x1
 3359 07b3 0D02     		.2byte	0x20d
 3360 07b5 7E000000 		.4byte	0x7e
 3361 07b9 03       		.uleb128 0x3
 3362 07ba 91       		.byte	0x91
 3363 07bb BC7F     		.sleb128 -68
 3364 07bd 1D       		.uleb128 0x1d
 3365 07be 00000000 		.4byte	.LASF108
 3366 07c2 01       		.byte	0x1
 3367 07c3 0D02     		.2byte	0x20d
 3368 07c5 7E000000 		.4byte	0x7e
 3369 07c9 03       		.uleb128 0x3
 3370 07ca 91       		.byte	0x91
 3371 07cb B87F     		.sleb128 -72
 3372 07cd 00       		.byte	0
 3373 07ce 00       		.byte	0
 3374 07cf 08       		.uleb128 0x8
 3375 07d0 EB000000 		.4byte	0xeb
 3376 07d4 DF070000 		.4byte	0x7df
 3377 07d8 09       		.uleb128 0x9
 3378 07d9 F9000000 		.4byte	0xf9
 3379 07dd 1D       		.byte	0x1d
 3380 07de 00       		.byte	0
 3381 07df 20       		.uleb128 0x20
 3382 07e0 9D010000 		.4byte	.LASF109
 3383 07e4 01       		.byte	0x1
 3384 07e5 2D02     		.2byte	0x22d
 3385 07e7 AD000000 		.4byte	0xad
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 77


 3386 07eb 00000000 		.4byte	.LFB82
 3387 07ef 14000000 		.4byte	.LFE82-.LFB82
 3388 07f3 01       		.uleb128 0x1
 3389 07f4 9C       		.byte	0x9c
 3390 07f5 1E       		.uleb128 0x1e
 3391 07f6 4B020000 		.4byte	.LASF110
 3392 07fa 01       		.byte	0x1
 3393 07fb 3202     		.2byte	0x232
 3394 07fd 00000000 		.4byte	.LFB83
 3395 0801 1A000000 		.4byte	.LFE83-.LFB83
 3396 0805 01       		.uleb128 0x1
 3397 0806 9C       		.byte	0x9c
 3398 0807 1E       		.uleb128 0x1e
 3399 0808 CA000000 		.4byte	.LASF111
 3400 080c 01       		.byte	0x1
 3401 080d 3F02     		.2byte	0x23f
 3402 080f 00000000 		.4byte	.LFB84
 3403 0813 2A000000 		.4byte	.LFE84-.LFB84
 3404 0817 01       		.uleb128 0x1
 3405 0818 9C       		.byte	0x9c
 3406 0819 1C       		.uleb128 0x1c
 3407 081a C7030000 		.4byte	.LASF112
 3408 081e 01       		.byte	0x1
 3409 081f 5502     		.2byte	0x255
 3410 0821 C2020000 		.4byte	0x2c2
 3411 0825 00000000 		.4byte	.LFB85
 3412 0829 7C020000 		.4byte	.LFE85-.LFB85
 3413 082d 01       		.uleb128 0x1
 3414 082e 9C       		.byte	0x9c
 3415 082f C2080000 		.4byte	0x8c2
 3416 0833 1A       		.uleb128 0x1a
 3417 0834 67707300 		.ascii	"gps\000"
 3418 0838 01       		.byte	0x1
 3419 0839 5602     		.2byte	0x256
 3420 083b C2020000 		.4byte	0x2c2
 3421 083f 02       		.uleb128 0x2
 3422 0840 91       		.byte	0x91
 3423 0841 4C       		.sleb128 -52
 3424 0842 1D       		.uleb128 0x1d
 3425 0843 B3060000 		.4byte	.LASF113
 3426 0847 01       		.byte	0x1
 3427 0848 6202     		.2byte	0x262
 3428 084a 57000000 		.4byte	0x57
 3429 084e 02       		.uleb128 0x2
 3430 084f 91       		.byte	0x91
 3431 0850 68       		.sleb128 -24
 3432 0851 1D       		.uleb128 0x1d
 3433 0852 F9050000 		.4byte	.LASF114
 3434 0856 01       		.byte	0x1
 3435 0857 8902     		.2byte	0x289
 3436 0859 AD000000 		.4byte	0xad
 3437 085d 02       		.uleb128 0x2
 3438 085e 91       		.byte	0x91
 3439 085f 67       		.sleb128 -25
 3440 0860 1A       		.uleb128 0x1a
 3441 0861 6C617400 		.ascii	"lat\000"
 3442 0865 01       		.byte	0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 78


 3443 0866 9502     		.2byte	0x295
 3444 0868 DD000000 		.4byte	0xdd
 3445 086c 02       		.uleb128 0x2
 3446 086d 91       		.byte	0x91
 3447 086e 48       		.sleb128 -56
 3448 086f 1A       		.uleb128 0x1a
 3449 0870 6C6F6E00 		.ascii	"lon\000"
 3450 0874 01       		.byte	0x1
 3451 0875 9602     		.2byte	0x296
 3452 0877 DD000000 		.4byte	0xdd
 3453 087b 02       		.uleb128 0x2
 3454 087c 91       		.byte	0x91
 3455 087d 44       		.sleb128 -60
 3456 087e 1A       		.uleb128 0x1a
 3457 087f 616C7400 		.ascii	"alt\000"
 3458 0883 01       		.byte	0x1
 3459 0884 9702     		.2byte	0x297
 3460 0886 DD000000 		.4byte	0xdd
 3461 088a 02       		.uleb128 0x2
 3462 088b 91       		.byte	0x91
 3463 088c 40       		.sleb128 -64
 3464 088d 1A       		.uleb128 0x1a
 3465 088e 733100   		.ascii	"s1\000"
 3466 0891 01       		.byte	0x1
 3467 0892 9B02     		.2byte	0x29b
 3468 0894 00010000 		.4byte	0x100
 3469 0898 02       		.uleb128 0x2
 3470 0899 91       		.byte	0x91
 3471 089a 60       		.sleb128 -32
 3472 089b 1D       		.uleb128 0x1d
 3473 089c 41040000 		.4byte	.LASF115
 3474 08a0 01       		.byte	0x1
 3475 08a1 9E02     		.2byte	0x29e
 3476 08a3 7E000000 		.4byte	0x7e
 3477 08a7 02       		.uleb128 0x2
 3478 08a8 91       		.byte	0x91
 3479 08a9 5C       		.sleb128 -36
 3480 08aa 14       		.uleb128 0x14
 3481 08ab B4000000 		.4byte	.LBB12
 3482 08af 38000000 		.4byte	.LBE12-.LBB12
 3483 08b3 1A       		.uleb128 0x1a
 3484 08b4 6900     		.ascii	"i\000"
 3485 08b6 01       		.byte	0x1
 3486 08b7 8A02     		.2byte	0x28a
 3487 08b9 B9000000 		.4byte	0xb9
 3488 08bd 02       		.uleb128 0x2
 3489 08be 91       		.byte	0x91
 3490 08bf 6E       		.sleb128 -18
 3491 08c0 00       		.byte	0
 3492 08c1 00       		.byte	0
 3493 08c2 21       		.uleb128 0x21
 3494 08c3 18010000 		.4byte	.LASF116
 3495 08c7 0A       		.byte	0xa
 3496 08c8 1207     		.2byte	0x712
 3497 08ca CE080000 		.4byte	0x8ce
 3498 08ce 22       		.uleb128 0x22
 3499 08cf 97000000 		.4byte	0x97
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 79


 3500 08d3 23       		.uleb128 0x23
 3501 08d4 07010000 		.4byte	.LASF117
 3502 08d8 07       		.byte	0x7
 3503 08d9 15       		.byte	0x15
 3504 08da AD000000 		.4byte	0xad
 3505 08de 05       		.uleb128 0x5
 3506 08df 03       		.byte	0x3
 3507 08e0 00000000 		.4byte	modem_state
 3508 08e4 23       		.uleb128 0x23
 3509 08e5 E2050000 		.4byte	.LASF118
 3510 08e9 07       		.byte	0x7
 3511 08ea 45       		.byte	0x45
 3512 08eb D1000000 		.4byte	0xd1
 3513 08ef 05       		.uleb128 0x5
 3514 08f0 03       		.byte	0x3
 3515 08f1 00000000 		.4byte	modem_start_time_stamp
 3516 08f5 23       		.uleb128 0x23
 3517 08f6 0B030000 		.4byte	.LASF54
 3518 08fa 07       		.byte	0x7
 3519 08fb 46       		.byte	0x46
 3520 08fc 2F020000 		.4byte	0x22f
 3521 0900 05       		.uleb128 0x5
 3522 0901 03       		.byte	0x3
 3523 0902 00000000 		.4byte	modem_info
 3524 0906 23       		.uleb128 0x23
 3525 0907 25010000 		.4byte	.LASF119
 3526 090b 07       		.byte	0x7
 3527 090c 47       		.byte	0x47
 3528 090d 72020000 		.4byte	0x272
 3529 0911 05       		.uleb128 0x5
 3530 0912 03       		.byte	0x3
 3531 0913 00000000 		.4byte	modem_stats
 3532 0917 23       		.uleb128 0x23
 3533 0918 B5030000 		.4byte	.LASF120
 3534 091c 08       		.byte	0x8
 3535 091d 1B       		.byte	0x1b
 3536 091e B9000000 		.4byte	0xb9
 3537 0922 05       		.uleb128 0x5
 3538 0923 03       		.byte	0x3
 3539 0924 00000000 		.4byte	dataPointsInStack
 3540 0928 23       		.uleb128 0x23
 3541 0929 EE000000 		.4byte	.LASF121
 3542 092d 08       		.byte	0x8
 3543 092e 1C       		.byte	0x1c
 3544 092f 39090000 		.4byte	0x939
 3545 0933 05       		.uleb128 0x5
 3546 0934 03       		.byte	0x3
 3547 0935 00000000 		.4byte	dataPointsInStackPointer
 3548 0939 06       		.uleb128 0x6
 3549 093a 04       		.byte	0x4
 3550 093b FA020000 		.4byte	0x2fa
 3551 093f 08       		.uleb128 0x8
 3552 0940 FA020000 		.4byte	0x2fa
 3553 0944 4F090000 		.4byte	0x94f
 3554 0948 09       		.uleb128 0x9
 3555 0949 F9000000 		.4byte	0xf9
 3556 094d 31       		.byte	0x31
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 80


 3557 094e 00       		.byte	0
 3558 094f 23       		.uleb128 0x23
 3559 0950 ED020000 		.4byte	.LASF122
 3560 0954 08       		.byte	0x8
 3561 0955 1D       		.byte	0x1d
 3562 0956 3F090000 		.4byte	0x93f
 3563 095a 05       		.uleb128 0x5
 3564 095b 03       		.byte	0x3
 3565 095c 00000000 		.4byte	data
 3566 0960 08       		.uleb128 0x8
 3567 0961 EB000000 		.4byte	0xeb
 3568 0965 71090000 		.4byte	0x971
 3569 0969 24       		.uleb128 0x24
 3570 096a F9000000 		.4byte	0xf9
 3571 096e 9F0F     		.2byte	0xf9f
 3572 0970 00       		.byte	0
 3573 0971 23       		.uleb128 0x23
 3574 0972 BD060000 		.4byte	.LASF123
 3575 0976 09       		.byte	0x9
 3576 0977 16       		.byte	0x16
 3577 0978 60090000 		.4byte	0x960
 3578 097c 05       		.uleb128 0x5
 3579 097d 03       		.byte	0x3
 3580 097e 00000000 		.4byte	http_request
 3581 0982 23       		.uleb128 0x23
 3582 0983 63010000 		.4byte	.LASF124
 3583 0987 09       		.byte	0x9
 3584 0988 17       		.byte	0x17
 3585 0989 60090000 		.4byte	0x960
 3586 098d 05       		.uleb128 0x5
 3587 098e 03       		.byte	0x3
 3588 098f 00000000 		.4byte	http_body
 3589 0993 08       		.uleb128 0x8
 3590 0994 EB000000 		.4byte	0xeb
 3591 0998 A3090000 		.4byte	0x9a3
 3592 099c 09       		.uleb128 0x9
 3593 099d F9000000 		.4byte	0xf9
 3594 09a1 C7       		.byte	0xc7
 3595 09a2 00       		.byte	0
 3596 09a3 23       		.uleb128 0x23
 3597 09a4 99050000 		.4byte	.LASF125
 3598 09a8 09       		.byte	0x9
 3599 09a9 18       		.byte	0x18
 3600 09aa 93090000 		.4byte	0x993
 3601 09ae 05       		.uleb128 0x5
 3602 09af 03       		.byte	0x3
 3603 09b0 00000000 		.4byte	http_route
 3604 09b4 23       		.uleb128 0x23
 3605 09b5 02050000 		.4byte	.LASF126
 3606 09b9 09       		.byte	0x9
 3607 09ba 3F       		.byte	0x3f
 3608 09bb 2C030000 		.4byte	0x32c
 3609 09bf 05       		.uleb128 0x5
 3610 09c0 03       		.byte	0x3
 3611 09c1 00000000 		.4byte	system_info
 3612 09c5 23       		.uleb128 0x23
 3613 09c6 95040000 		.4byte	.LASF127
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 81


 3614 09ca 09       		.byte	0x9
 3615 09cb 51       		.byte	0x51
 3616 09cc AA030000 		.4byte	0x3aa
 3617 09d0 05       		.uleb128 0x5
 3618 09d1 03       		.byte	0x3
 3619 09d2 00000000 		.4byte	system_settings
 3620 09d6 08       		.uleb128 0x8
 3621 09d7 EB000000 		.4byte	0xeb
 3622 09db E7090000 		.4byte	0x9e7
 3623 09df 24       		.uleb128 0x24
 3624 09e0 F9000000 		.4byte	0xf9
 3625 09e4 FF03     		.2byte	0x3ff
 3626 09e6 00       		.byte	0
 3627 09e7 23       		.uleb128 0x23
 3628 09e8 0E040000 		.4byte	.LASF128
 3629 09ec 01       		.byte	0x1
 3630 09ed 08       		.byte	0x8
 3631 09ee D6090000 		.4byte	0x9d6
 3632 09f2 05       		.uleb128 0x5
 3633 09f3 03       		.byte	0x3
 3634 09f4 00000000 		.4byte	uart_received_string
 3635 09f8 23       		.uleb128 0x23
 3636 09f9 B7050000 		.4byte	.LASF129
 3637 09fd 01       		.byte	0x1
 3638 09fe 09       		.byte	0x9
 3639 09ff 8C000000 		.4byte	0x8c
 3640 0a03 05       		.uleb128 0x5
 3641 0a04 03       		.byte	0x3
 3642 0a05 00000000 		.4byte	uart_string_index
 3643 0a09 00       		.byte	0
 3644              		.section	.debug_abbrev,"",%progbits
 3645              	.Ldebug_abbrev0:
 3646 0000 01       		.uleb128 0x1
 3647 0001 11       		.uleb128 0x11
 3648 0002 01       		.byte	0x1
 3649 0003 25       		.uleb128 0x25
 3650 0004 0E       		.uleb128 0xe
 3651 0005 13       		.uleb128 0x13
 3652 0006 0B       		.uleb128 0xb
 3653 0007 03       		.uleb128 0x3
 3654 0008 0E       		.uleb128 0xe
 3655 0009 1B       		.uleb128 0x1b
 3656 000a 0E       		.uleb128 0xe
 3657 000b 55       		.uleb128 0x55
 3658 000c 17       		.uleb128 0x17
 3659 000d 11       		.uleb128 0x11
 3660 000e 01       		.uleb128 0x1
 3661 000f 10       		.uleb128 0x10
 3662 0010 17       		.uleb128 0x17
 3663 0011 00       		.byte	0
 3664 0012 00       		.byte	0
 3665 0013 02       		.uleb128 0x2
 3666 0014 24       		.uleb128 0x24
 3667 0015 00       		.byte	0
 3668 0016 0B       		.uleb128 0xb
 3669 0017 0B       		.uleb128 0xb
 3670 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 82


 3671 0019 0B       		.uleb128 0xb
 3672 001a 03       		.uleb128 0x3
 3673 001b 0E       		.uleb128 0xe
 3674 001c 00       		.byte	0
 3675 001d 00       		.byte	0
 3676 001e 03       		.uleb128 0x3
 3677 001f 16       		.uleb128 0x16
 3678 0020 00       		.byte	0
 3679 0021 03       		.uleb128 0x3
 3680 0022 0E       		.uleb128 0xe
 3681 0023 3A       		.uleb128 0x3a
 3682 0024 0B       		.uleb128 0xb
 3683 0025 3B       		.uleb128 0x3b
 3684 0026 0B       		.uleb128 0xb
 3685 0027 49       		.uleb128 0x49
 3686 0028 13       		.uleb128 0x13
 3687 0029 00       		.byte	0
 3688 002a 00       		.byte	0
 3689 002b 04       		.uleb128 0x4
 3690 002c 24       		.uleb128 0x24
 3691 002d 00       		.byte	0
 3692 002e 0B       		.uleb128 0xb
 3693 002f 0B       		.uleb128 0xb
 3694 0030 3E       		.uleb128 0x3e
 3695 0031 0B       		.uleb128 0xb
 3696 0032 03       		.uleb128 0x3
 3697 0033 08       		.uleb128 0x8
 3698 0034 00       		.byte	0
 3699 0035 00       		.byte	0
 3700 0036 05       		.uleb128 0x5
 3701 0037 16       		.uleb128 0x16
 3702 0038 00       		.byte	0
 3703 0039 03       		.uleb128 0x3
 3704 003a 0E       		.uleb128 0xe
 3705 003b 3A       		.uleb128 0x3a
 3706 003c 0B       		.uleb128 0xb
 3707 003d 3B       		.uleb128 0x3b
 3708 003e 05       		.uleb128 0x5
 3709 003f 49       		.uleb128 0x49
 3710 0040 13       		.uleb128 0x13
 3711 0041 00       		.byte	0
 3712 0042 00       		.byte	0
 3713 0043 06       		.uleb128 0x6
 3714 0044 0F       		.uleb128 0xf
 3715 0045 00       		.byte	0
 3716 0046 0B       		.uleb128 0xb
 3717 0047 0B       		.uleb128 0xb
 3718 0048 49       		.uleb128 0x49
 3719 0049 13       		.uleb128 0x13
 3720 004a 00       		.byte	0
 3721 004b 00       		.byte	0
 3722 004c 07       		.uleb128 0x7
 3723 004d 26       		.uleb128 0x26
 3724 004e 00       		.byte	0
 3725 004f 49       		.uleb128 0x49
 3726 0050 13       		.uleb128 0x13
 3727 0051 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 83


 3728 0052 00       		.byte	0
 3729 0053 08       		.uleb128 0x8
 3730 0054 01       		.uleb128 0x1
 3731 0055 01       		.byte	0x1
 3732 0056 49       		.uleb128 0x49
 3733 0057 13       		.uleb128 0x13
 3734 0058 01       		.uleb128 0x1
 3735 0059 13       		.uleb128 0x13
 3736 005a 00       		.byte	0
 3737 005b 00       		.byte	0
 3738 005c 09       		.uleb128 0x9
 3739 005d 21       		.uleb128 0x21
 3740 005e 00       		.byte	0
 3741 005f 49       		.uleb128 0x49
 3742 0060 13       		.uleb128 0x13
 3743 0061 2F       		.uleb128 0x2f
 3744 0062 0B       		.uleb128 0xb
 3745 0063 00       		.byte	0
 3746 0064 00       		.byte	0
 3747 0065 0A       		.uleb128 0xa
 3748 0066 13       		.uleb128 0x13
 3749 0067 01       		.byte	0x1
 3750 0068 03       		.uleb128 0x3
 3751 0069 08       		.uleb128 0x8
 3752 006a 0B       		.uleb128 0xb
 3753 006b 0B       		.uleb128 0xb
 3754 006c 3A       		.uleb128 0x3a
 3755 006d 0B       		.uleb128 0xb
 3756 006e 3B       		.uleb128 0x3b
 3757 006f 0B       		.uleb128 0xb
 3758 0070 01       		.uleb128 0x1
 3759 0071 13       		.uleb128 0x13
 3760 0072 00       		.byte	0
 3761 0073 00       		.byte	0
 3762 0074 0B       		.uleb128 0xb
 3763 0075 0D       		.uleb128 0xd
 3764 0076 00       		.byte	0
 3765 0077 03       		.uleb128 0x3
 3766 0078 0E       		.uleb128 0xe
 3767 0079 3A       		.uleb128 0x3a
 3768 007a 0B       		.uleb128 0xb
 3769 007b 3B       		.uleb128 0x3b
 3770 007c 0B       		.uleb128 0xb
 3771 007d 49       		.uleb128 0x49
 3772 007e 13       		.uleb128 0x13
 3773 007f 38       		.uleb128 0x38
 3774 0080 0B       		.uleb128 0xb
 3775 0081 00       		.byte	0
 3776 0082 00       		.byte	0
 3777 0083 0C       		.uleb128 0xc
 3778 0084 13       		.uleb128 0x13
 3779 0085 01       		.byte	0x1
 3780 0086 0B       		.uleb128 0xb
 3781 0087 05       		.uleb128 0x5
 3782 0088 3A       		.uleb128 0x3a
 3783 0089 0B       		.uleb128 0xb
 3784 008a 3B       		.uleb128 0x3b
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 84


 3785 008b 0B       		.uleb128 0xb
 3786 008c 01       		.uleb128 0x1
 3787 008d 13       		.uleb128 0x13
 3788 008e 00       		.byte	0
 3789 008f 00       		.byte	0
 3790 0090 0D       		.uleb128 0xd
 3791 0091 13       		.uleb128 0x13
 3792 0092 01       		.byte	0x1
 3793 0093 0B       		.uleb128 0xb
 3794 0094 0B       		.uleb128 0xb
 3795 0095 3A       		.uleb128 0x3a
 3796 0096 0B       		.uleb128 0xb
 3797 0097 3B       		.uleb128 0x3b
 3798 0098 0B       		.uleb128 0xb
 3799 0099 01       		.uleb128 0x1
 3800 009a 13       		.uleb128 0x13
 3801 009b 00       		.byte	0
 3802 009c 00       		.byte	0
 3803 009d 0E       		.uleb128 0xe
 3804 009e 0D       		.uleb128 0xd
 3805 009f 00       		.byte	0
 3806 00a0 03       		.uleb128 0x3
 3807 00a1 08       		.uleb128 0x8
 3808 00a2 3A       		.uleb128 0x3a
 3809 00a3 0B       		.uleb128 0xb
 3810 00a4 3B       		.uleb128 0x3b
 3811 00a5 0B       		.uleb128 0xb
 3812 00a6 49       		.uleb128 0x49
 3813 00a7 13       		.uleb128 0x13
 3814 00a8 38       		.uleb128 0x38
 3815 00a9 0B       		.uleb128 0xb
 3816 00aa 00       		.byte	0
 3817 00ab 00       		.byte	0
 3818 00ac 0F       		.uleb128 0xf
 3819 00ad 0D       		.uleb128 0xd
 3820 00ae 00       		.byte	0
 3821 00af 03       		.uleb128 0x3
 3822 00b0 0E       		.uleb128 0xe
 3823 00b1 3A       		.uleb128 0x3a
 3824 00b2 0B       		.uleb128 0xb
 3825 00b3 3B       		.uleb128 0x3b
 3826 00b4 0B       		.uleb128 0xb
 3827 00b5 49       		.uleb128 0x49
 3828 00b6 13       		.uleb128 0x13
 3829 00b7 38       		.uleb128 0x38
 3830 00b8 05       		.uleb128 0x5
 3831 00b9 00       		.byte	0
 3832 00ba 00       		.byte	0
 3833 00bb 10       		.uleb128 0x10
 3834 00bc 2E       		.uleb128 0x2e
 3835 00bd 00       		.byte	0
 3836 00be 3F       		.uleb128 0x3f
 3837 00bf 19       		.uleb128 0x19
 3838 00c0 03       		.uleb128 0x3
 3839 00c1 0E       		.uleb128 0xe
 3840 00c2 3A       		.uleb128 0x3a
 3841 00c3 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 85


 3842 00c4 3B       		.uleb128 0x3b
 3843 00c5 0B       		.uleb128 0xb
 3844 00c6 27       		.uleb128 0x27
 3845 00c7 19       		.uleb128 0x19
 3846 00c8 11       		.uleb128 0x11
 3847 00c9 01       		.uleb128 0x1
 3848 00ca 12       		.uleb128 0x12
 3849 00cb 06       		.uleb128 0x6
 3850 00cc 40       		.uleb128 0x40
 3851 00cd 18       		.uleb128 0x18
 3852 00ce 9642     		.uleb128 0x2116
 3853 00d0 19       		.uleb128 0x19
 3854 00d1 00       		.byte	0
 3855 00d2 00       		.byte	0
 3856 00d3 11       		.uleb128 0x11
 3857 00d4 2E       		.uleb128 0x2e
 3858 00d5 00       		.byte	0
 3859 00d6 3F       		.uleb128 0x3f
 3860 00d7 19       		.uleb128 0x19
 3861 00d8 03       		.uleb128 0x3
 3862 00d9 0E       		.uleb128 0xe
 3863 00da 3A       		.uleb128 0x3a
 3864 00db 0B       		.uleb128 0xb
 3865 00dc 3B       		.uleb128 0x3b
 3866 00dd 0B       		.uleb128 0xb
 3867 00de 11       		.uleb128 0x11
 3868 00df 01       		.uleb128 0x1
 3869 00e0 12       		.uleb128 0x12
 3870 00e1 06       		.uleb128 0x6
 3871 00e2 40       		.uleb128 0x40
 3872 00e3 18       		.uleb128 0x18
 3873 00e4 9642     		.uleb128 0x2116
 3874 00e6 19       		.uleb128 0x19
 3875 00e7 00       		.byte	0
 3876 00e8 00       		.byte	0
 3877 00e9 12       		.uleb128 0x12
 3878 00ea 2E       		.uleb128 0x2e
 3879 00eb 01       		.byte	0x1
 3880 00ec 3F       		.uleb128 0x3f
 3881 00ed 19       		.uleb128 0x19
 3882 00ee 03       		.uleb128 0x3
 3883 00ef 0E       		.uleb128 0xe
 3884 00f0 3A       		.uleb128 0x3a
 3885 00f1 0B       		.uleb128 0xb
 3886 00f2 3B       		.uleb128 0x3b
 3887 00f3 0B       		.uleb128 0xb
 3888 00f4 49       		.uleb128 0x49
 3889 00f5 13       		.uleb128 0x13
 3890 00f6 11       		.uleb128 0x11
 3891 00f7 01       		.uleb128 0x1
 3892 00f8 12       		.uleb128 0x12
 3893 00f9 06       		.uleb128 0x6
 3894 00fa 40       		.uleb128 0x40
 3895 00fb 18       		.uleb128 0x18
 3896 00fc 9642     		.uleb128 0x2116
 3897 00fe 19       		.uleb128 0x19
 3898 00ff 01       		.uleb128 0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 86


 3899 0100 13       		.uleb128 0x13
 3900 0101 00       		.byte	0
 3901 0102 00       		.byte	0
 3902 0103 13       		.uleb128 0x13
 3903 0104 34       		.uleb128 0x34
 3904 0105 00       		.byte	0
 3905 0106 03       		.uleb128 0x3
 3906 0107 0E       		.uleb128 0xe
 3907 0108 3A       		.uleb128 0x3a
 3908 0109 0B       		.uleb128 0xb
 3909 010a 3B       		.uleb128 0x3b
 3910 010b 0B       		.uleb128 0xb
 3911 010c 49       		.uleb128 0x49
 3912 010d 13       		.uleb128 0x13
 3913 010e 02       		.uleb128 0x2
 3914 010f 18       		.uleb128 0x18
 3915 0110 00       		.byte	0
 3916 0111 00       		.byte	0
 3917 0112 14       		.uleb128 0x14
 3918 0113 0B       		.uleb128 0xb
 3919 0114 01       		.byte	0x1
 3920 0115 11       		.uleb128 0x11
 3921 0116 01       		.uleb128 0x1
 3922 0117 12       		.uleb128 0x12
 3923 0118 06       		.uleb128 0x6
 3924 0119 00       		.byte	0
 3925 011a 00       		.byte	0
 3926 011b 15       		.uleb128 0x15
 3927 011c 2E       		.uleb128 0x2e
 3928 011d 01       		.byte	0x1
 3929 011e 3F       		.uleb128 0x3f
 3930 011f 19       		.uleb128 0x19
 3931 0120 03       		.uleb128 0x3
 3932 0121 0E       		.uleb128 0xe
 3933 0122 3A       		.uleb128 0x3a
 3934 0123 0B       		.uleb128 0xb
 3935 0124 3B       		.uleb128 0x3b
 3936 0125 0B       		.uleb128 0xb
 3937 0126 27       		.uleb128 0x27
 3938 0127 19       		.uleb128 0x19
 3939 0128 49       		.uleb128 0x49
 3940 0129 13       		.uleb128 0x13
 3941 012a 11       		.uleb128 0x11
 3942 012b 01       		.uleb128 0x1
 3943 012c 12       		.uleb128 0x12
 3944 012d 06       		.uleb128 0x6
 3945 012e 40       		.uleb128 0x40
 3946 012f 18       		.uleb128 0x18
 3947 0130 9642     		.uleb128 0x2116
 3948 0132 19       		.uleb128 0x19
 3949 0133 01       		.uleb128 0x1
 3950 0134 13       		.uleb128 0x13
 3951 0135 00       		.byte	0
 3952 0136 00       		.byte	0
 3953 0137 16       		.uleb128 0x16
 3954 0138 05       		.uleb128 0x5
 3955 0139 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 87


 3956 013a 03       		.uleb128 0x3
 3957 013b 0E       		.uleb128 0xe
 3958 013c 3A       		.uleb128 0x3a
 3959 013d 0B       		.uleb128 0xb
 3960 013e 3B       		.uleb128 0x3b
 3961 013f 0B       		.uleb128 0xb
 3962 0140 49       		.uleb128 0x49
 3963 0141 13       		.uleb128 0x13
 3964 0142 02       		.uleb128 0x2
 3965 0143 18       		.uleb128 0x18
 3966 0144 00       		.byte	0
 3967 0145 00       		.byte	0
 3968 0146 17       		.uleb128 0x17
 3969 0147 34       		.uleb128 0x34
 3970 0148 00       		.byte	0
 3971 0149 03       		.uleb128 0x3
 3972 014a 08       		.uleb128 0x8
 3973 014b 3A       		.uleb128 0x3a
 3974 014c 0B       		.uleb128 0xb
 3975 014d 3B       		.uleb128 0x3b
 3976 014e 0B       		.uleb128 0xb
 3977 014f 49       		.uleb128 0x49
 3978 0150 13       		.uleb128 0x13
 3979 0151 02       		.uleb128 0x2
 3980 0152 18       		.uleb128 0x18
 3981 0153 00       		.byte	0
 3982 0154 00       		.byte	0
 3983 0155 18       		.uleb128 0x18
 3984 0156 2E       		.uleb128 0x2e
 3985 0157 01       		.byte	0x1
 3986 0158 3F       		.uleb128 0x3f
 3987 0159 19       		.uleb128 0x19
 3988 015a 03       		.uleb128 0x3
 3989 015b 0E       		.uleb128 0xe
 3990 015c 3A       		.uleb128 0x3a
 3991 015d 0B       		.uleb128 0xb
 3992 015e 3B       		.uleb128 0x3b
 3993 015f 05       		.uleb128 0x5
 3994 0160 27       		.uleb128 0x27
 3995 0161 19       		.uleb128 0x19
 3996 0162 49       		.uleb128 0x49
 3997 0163 13       		.uleb128 0x13
 3998 0164 11       		.uleb128 0x11
 3999 0165 01       		.uleb128 0x1
 4000 0166 12       		.uleb128 0x12
 4001 0167 06       		.uleb128 0x6
 4002 0168 40       		.uleb128 0x40
 4003 0169 18       		.uleb128 0x18
 4004 016a 9642     		.uleb128 0x2116
 4005 016c 19       		.uleb128 0x19
 4006 016d 01       		.uleb128 0x1
 4007 016e 13       		.uleb128 0x13
 4008 016f 00       		.byte	0
 4009 0170 00       		.byte	0
 4010 0171 19       		.uleb128 0x19
 4011 0172 05       		.uleb128 0x5
 4012 0173 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 88


 4013 0174 03       		.uleb128 0x3
 4014 0175 0E       		.uleb128 0xe
 4015 0176 3A       		.uleb128 0x3a
 4016 0177 0B       		.uleb128 0xb
 4017 0178 3B       		.uleb128 0x3b
 4018 0179 05       		.uleb128 0x5
 4019 017a 49       		.uleb128 0x49
 4020 017b 13       		.uleb128 0x13
 4021 017c 02       		.uleb128 0x2
 4022 017d 18       		.uleb128 0x18
 4023 017e 00       		.byte	0
 4024 017f 00       		.byte	0
 4025 0180 1A       		.uleb128 0x1a
 4026 0181 34       		.uleb128 0x34
 4027 0182 00       		.byte	0
 4028 0183 03       		.uleb128 0x3
 4029 0184 08       		.uleb128 0x8
 4030 0185 3A       		.uleb128 0x3a
 4031 0186 0B       		.uleb128 0xb
 4032 0187 3B       		.uleb128 0x3b
 4033 0188 05       		.uleb128 0x5
 4034 0189 49       		.uleb128 0x49
 4035 018a 13       		.uleb128 0x13
 4036 018b 02       		.uleb128 0x2
 4037 018c 18       		.uleb128 0x18
 4038 018d 00       		.byte	0
 4039 018e 00       		.byte	0
 4040 018f 1B       		.uleb128 0x1b
 4041 0190 2E       		.uleb128 0x2e
 4042 0191 00       		.byte	0
 4043 0192 3F       		.uleb128 0x3f
 4044 0193 19       		.uleb128 0x19
 4045 0194 03       		.uleb128 0x3
 4046 0195 0E       		.uleb128 0xe
 4047 0196 3A       		.uleb128 0x3a
 4048 0197 0B       		.uleb128 0xb
 4049 0198 3B       		.uleb128 0x3b
 4050 0199 05       		.uleb128 0x5
 4051 019a 49       		.uleb128 0x49
 4052 019b 13       		.uleb128 0x13
 4053 019c 11       		.uleb128 0x11
 4054 019d 01       		.uleb128 0x1
 4055 019e 12       		.uleb128 0x12
 4056 019f 06       		.uleb128 0x6
 4057 01a0 40       		.uleb128 0x40
 4058 01a1 18       		.uleb128 0x18
 4059 01a2 9642     		.uleb128 0x2116
 4060 01a4 19       		.uleb128 0x19
 4061 01a5 00       		.byte	0
 4062 01a6 00       		.byte	0
 4063 01a7 1C       		.uleb128 0x1c
 4064 01a8 2E       		.uleb128 0x2e
 4065 01a9 01       		.byte	0x1
 4066 01aa 3F       		.uleb128 0x3f
 4067 01ab 19       		.uleb128 0x19
 4068 01ac 03       		.uleb128 0x3
 4069 01ad 0E       		.uleb128 0xe
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 89


 4070 01ae 3A       		.uleb128 0x3a
 4071 01af 0B       		.uleb128 0xb
 4072 01b0 3B       		.uleb128 0x3b
 4073 01b1 05       		.uleb128 0x5
 4074 01b2 49       		.uleb128 0x49
 4075 01b3 13       		.uleb128 0x13
 4076 01b4 11       		.uleb128 0x11
 4077 01b5 01       		.uleb128 0x1
 4078 01b6 12       		.uleb128 0x12
 4079 01b7 06       		.uleb128 0x6
 4080 01b8 40       		.uleb128 0x40
 4081 01b9 18       		.uleb128 0x18
 4082 01ba 9642     		.uleb128 0x2116
 4083 01bc 19       		.uleb128 0x19
 4084 01bd 01       		.uleb128 0x1
 4085 01be 13       		.uleb128 0x13
 4086 01bf 00       		.byte	0
 4087 01c0 00       		.byte	0
 4088 01c1 1D       		.uleb128 0x1d
 4089 01c2 34       		.uleb128 0x34
 4090 01c3 00       		.byte	0
 4091 01c4 03       		.uleb128 0x3
 4092 01c5 0E       		.uleb128 0xe
 4093 01c6 3A       		.uleb128 0x3a
 4094 01c7 0B       		.uleb128 0xb
 4095 01c8 3B       		.uleb128 0x3b
 4096 01c9 05       		.uleb128 0x5
 4097 01ca 49       		.uleb128 0x49
 4098 01cb 13       		.uleb128 0x13
 4099 01cc 02       		.uleb128 0x2
 4100 01cd 18       		.uleb128 0x18
 4101 01ce 00       		.byte	0
 4102 01cf 00       		.byte	0
 4103 01d0 1E       		.uleb128 0x1e
 4104 01d1 2E       		.uleb128 0x2e
 4105 01d2 00       		.byte	0
 4106 01d3 3F       		.uleb128 0x3f
 4107 01d4 19       		.uleb128 0x19
 4108 01d5 03       		.uleb128 0x3
 4109 01d6 0E       		.uleb128 0xe
 4110 01d7 3A       		.uleb128 0x3a
 4111 01d8 0B       		.uleb128 0xb
 4112 01d9 3B       		.uleb128 0x3b
 4113 01da 05       		.uleb128 0x5
 4114 01db 11       		.uleb128 0x11
 4115 01dc 01       		.uleb128 0x1
 4116 01dd 12       		.uleb128 0x12
 4117 01de 06       		.uleb128 0x6
 4118 01df 40       		.uleb128 0x40
 4119 01e0 18       		.uleb128 0x18
 4120 01e1 9642     		.uleb128 0x2116
 4121 01e3 19       		.uleb128 0x19
 4122 01e4 00       		.byte	0
 4123 01e5 00       		.byte	0
 4124 01e6 1F       		.uleb128 0x1f
 4125 01e7 2E       		.uleb128 0x2e
 4126 01e8 01       		.byte	0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 90


 4127 01e9 3F       		.uleb128 0x3f
 4128 01ea 19       		.uleb128 0x19
 4129 01eb 03       		.uleb128 0x3
 4130 01ec 0E       		.uleb128 0xe
 4131 01ed 3A       		.uleb128 0x3a
 4132 01ee 0B       		.uleb128 0xb
 4133 01ef 3B       		.uleb128 0x3b
 4134 01f0 05       		.uleb128 0x5
 4135 01f1 11       		.uleb128 0x11
 4136 01f2 01       		.uleb128 0x1
 4137 01f3 12       		.uleb128 0x12
 4138 01f4 06       		.uleb128 0x6
 4139 01f5 40       		.uleb128 0x40
 4140 01f6 18       		.uleb128 0x18
 4141 01f7 9642     		.uleb128 0x2116
 4142 01f9 19       		.uleb128 0x19
 4143 01fa 01       		.uleb128 0x1
 4144 01fb 13       		.uleb128 0x13
 4145 01fc 00       		.byte	0
 4146 01fd 00       		.byte	0
 4147 01fe 20       		.uleb128 0x20
 4148 01ff 2E       		.uleb128 0x2e
 4149 0200 00       		.byte	0
 4150 0201 3F       		.uleb128 0x3f
 4151 0202 19       		.uleb128 0x19
 4152 0203 03       		.uleb128 0x3
 4153 0204 0E       		.uleb128 0xe
 4154 0205 3A       		.uleb128 0x3a
 4155 0206 0B       		.uleb128 0xb
 4156 0207 3B       		.uleb128 0x3b
 4157 0208 05       		.uleb128 0x5
 4158 0209 49       		.uleb128 0x49
 4159 020a 13       		.uleb128 0x13
 4160 020b 11       		.uleb128 0x11
 4161 020c 01       		.uleb128 0x1
 4162 020d 12       		.uleb128 0x12
 4163 020e 06       		.uleb128 0x6
 4164 020f 40       		.uleb128 0x40
 4165 0210 18       		.uleb128 0x18
 4166 0211 9742     		.uleb128 0x2117
 4167 0213 19       		.uleb128 0x19
 4168 0214 00       		.byte	0
 4169 0215 00       		.byte	0
 4170 0216 21       		.uleb128 0x21
 4171 0217 34       		.uleb128 0x34
 4172 0218 00       		.byte	0
 4173 0219 03       		.uleb128 0x3
 4174 021a 0E       		.uleb128 0xe
 4175 021b 3A       		.uleb128 0x3a
 4176 021c 0B       		.uleb128 0xb
 4177 021d 3B       		.uleb128 0x3b
 4178 021e 05       		.uleb128 0x5
 4179 021f 49       		.uleb128 0x49
 4180 0220 13       		.uleb128 0x13
 4181 0221 3F       		.uleb128 0x3f
 4182 0222 19       		.uleb128 0x19
 4183 0223 3C       		.uleb128 0x3c
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 91


 4184 0224 19       		.uleb128 0x19
 4185 0225 00       		.byte	0
 4186 0226 00       		.byte	0
 4187 0227 22       		.uleb128 0x22
 4188 0228 35       		.uleb128 0x35
 4189 0229 00       		.byte	0
 4190 022a 49       		.uleb128 0x49
 4191 022b 13       		.uleb128 0x13
 4192 022c 00       		.byte	0
 4193 022d 00       		.byte	0
 4194 022e 23       		.uleb128 0x23
 4195 022f 34       		.uleb128 0x34
 4196 0230 00       		.byte	0
 4197 0231 03       		.uleb128 0x3
 4198 0232 0E       		.uleb128 0xe
 4199 0233 3A       		.uleb128 0x3a
 4200 0234 0B       		.uleb128 0xb
 4201 0235 3B       		.uleb128 0x3b
 4202 0236 0B       		.uleb128 0xb
 4203 0237 49       		.uleb128 0x49
 4204 0238 13       		.uleb128 0x13
 4205 0239 3F       		.uleb128 0x3f
 4206 023a 19       		.uleb128 0x19
 4207 023b 02       		.uleb128 0x2
 4208 023c 18       		.uleb128 0x18
 4209 023d 00       		.byte	0
 4210 023e 00       		.byte	0
 4211 023f 24       		.uleb128 0x24
 4212 0240 21       		.uleb128 0x21
 4213 0241 00       		.byte	0
 4214 0242 49       		.uleb128 0x49
 4215 0243 13       		.uleb128 0x13
 4216 0244 2F       		.uleb128 0x2f
 4217 0245 05       		.uleb128 0x5
 4218 0246 00       		.byte	0
 4219 0247 00       		.byte	0
 4220 0248 00       		.byte	0
 4221              		.section	.debug_aranges,"",%progbits
 4222 0000 C4000000 		.4byte	0xc4
 4223 0004 0200     		.2byte	0x2
 4224 0006 00000000 		.4byte	.Ldebug_info0
 4225 000a 04       		.byte	0x4
 4226 000b 00       		.byte	0
 4227 000c 0000     		.2byte	0
 4228 000e 0000     		.2byte	0
 4229 0010 00000000 		.4byte	.LFB64
 4230 0014 3C000000 		.4byte	.LFE64-.LFB64
 4231 0018 00000000 		.4byte	.LFB65
 4232 001c 54000000 		.4byte	.LFE65-.LFB65
 4233 0020 00000000 		.4byte	.LFB66
 4234 0024 32000000 		.4byte	.LFE66-.LFB66
 4235 0028 00000000 		.4byte	.LFB67
 4236 002c 20000000 		.4byte	.LFE67-.LFB67
 4237 0030 00000000 		.4byte	.LFB68
 4238 0034 40000000 		.4byte	.LFE68-.LFB68
 4239 0038 00000000 		.4byte	.LFB69
 4240 003c DC000000 		.4byte	.LFE69-.LFB69
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 92


 4241 0040 00000000 		.4byte	.LFB70
 4242 0044 1C000000 		.4byte	.LFE70-.LFB70
 4243 0048 00000000 		.4byte	.LFB71
 4244 004c 28000000 		.4byte	.LFE71-.LFB71
 4245 0050 00000000 		.4byte	.LFB72
 4246 0054 C8000000 		.4byte	.LFE72-.LFB72
 4247 0058 00000000 		.4byte	.LFB73
 4248 005c FC000000 		.4byte	.LFE73-.LFB73
 4249 0060 00000000 		.4byte	.LFB74
 4250 0064 78000000 		.4byte	.LFE74-.LFB74
 4251 0068 00000000 		.4byte	.LFB75
 4252 006c 08010000 		.4byte	.LFE75-.LFB75
 4253 0070 00000000 		.4byte	.LFB76
 4254 0074 A0000000 		.4byte	.LFE76-.LFB76
 4255 0078 00000000 		.4byte	.LFB77
 4256 007c 1C000000 		.4byte	.LFE77-.LFB77
 4257 0080 00000000 		.4byte	.LFB78
 4258 0084 28000000 		.4byte	.LFE78-.LFB78
 4259 0088 00000000 		.4byte	.LFB79
 4260 008c B4000000 		.4byte	.LFE79-.LFB79
 4261 0090 00000000 		.4byte	.LFB80
 4262 0094 38010000 		.4byte	.LFE80-.LFB80
 4263 0098 00000000 		.4byte	.LFB81
 4264 009c 44010000 		.4byte	.LFE81-.LFB81
 4265 00a0 00000000 		.4byte	.LFB82
 4266 00a4 14000000 		.4byte	.LFE82-.LFB82
 4267 00a8 00000000 		.4byte	.LFB83
 4268 00ac 1A000000 		.4byte	.LFE83-.LFB83
 4269 00b0 00000000 		.4byte	.LFB84
 4270 00b4 2A000000 		.4byte	.LFE84-.LFB84
 4271 00b8 00000000 		.4byte	.LFB85
 4272 00bc 7C020000 		.4byte	.LFE85-.LFB85
 4273 00c0 00000000 		.4byte	0
 4274 00c4 00000000 		.4byte	0
 4275              		.section	.debug_ranges,"",%progbits
 4276              	.Ldebug_ranges0:
 4277 0000 00000000 		.4byte	.LFB64
 4278 0004 3C000000 		.4byte	.LFE64
 4279 0008 00000000 		.4byte	.LFB65
 4280 000c 54000000 		.4byte	.LFE65
 4281 0010 00000000 		.4byte	.LFB66
 4282 0014 32000000 		.4byte	.LFE66
 4283 0018 00000000 		.4byte	.LFB67
 4284 001c 20000000 		.4byte	.LFE67
 4285 0020 00000000 		.4byte	.LFB68
 4286 0024 40000000 		.4byte	.LFE68
 4287 0028 00000000 		.4byte	.LFB69
 4288 002c DC000000 		.4byte	.LFE69
 4289 0030 00000000 		.4byte	.LFB70
 4290 0034 1C000000 		.4byte	.LFE70
 4291 0038 00000000 		.4byte	.LFB71
 4292 003c 28000000 		.4byte	.LFE71
 4293 0040 00000000 		.4byte	.LFB72
 4294 0044 C8000000 		.4byte	.LFE72
 4295 0048 00000000 		.4byte	.LFB73
 4296 004c FC000000 		.4byte	.LFE73
 4297 0050 00000000 		.4byte	.LFB74
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 93


 4298 0054 78000000 		.4byte	.LFE74
 4299 0058 00000000 		.4byte	.LFB75
 4300 005c 08010000 		.4byte	.LFE75
 4301 0060 00000000 		.4byte	.LFB76
 4302 0064 A0000000 		.4byte	.LFE76
 4303 0068 00000000 		.4byte	.LFB77
 4304 006c 1C000000 		.4byte	.LFE77
 4305 0070 00000000 		.4byte	.LFB78
 4306 0074 28000000 		.4byte	.LFE78
 4307 0078 00000000 		.4byte	.LFB79
 4308 007c B4000000 		.4byte	.LFE79
 4309 0080 00000000 		.4byte	.LFB80
 4310 0084 38010000 		.4byte	.LFE80
 4311 0088 00000000 		.4byte	.LFB81
 4312 008c 44010000 		.4byte	.LFE81
 4313 0090 00000000 		.4byte	.LFB82
 4314 0094 14000000 		.4byte	.LFE82
 4315 0098 00000000 		.4byte	.LFB83
 4316 009c 1A000000 		.4byte	.LFE83
 4317 00a0 00000000 		.4byte	.LFB84
 4318 00a4 2A000000 		.4byte	.LFE84
 4319 00a8 00000000 		.4byte	.LFB85
 4320 00ac 7C020000 		.4byte	.LFE85
 4321 00b0 00000000 		.4byte	0
 4322 00b4 00000000 		.4byte	0
 4323              		.section	.debug_line,"",%progbits
 4324              	.Ldebug_line0:
 4325 0000 ED040000 		.section	.debug_str,"MS",%progbits,1
 4325      0200EF01 
 4325      00000201 
 4325      FB0E0D00 
 4325      01010101 
 4326              	.LASF108:
 4327 0000 676D745F 		.ascii	"gmt_offset\000"
 4327      6F666673 
 4327      657400
 4328              	.LASF16:
 4329 000b 75696E74 		.ascii	"uint16\000"
 4329      313600
 4330              	.LASF51:
 4331 0012 76616C75 		.ascii	"value\000"
 4331      6500
 4332              	.LASF26:
 4333 0018 746D5F68 		.ascii	"tm_hour\000"
 4333      6F757200 
 4334              	.LASF31:
 4335 0020 746D5F79 		.ascii	"tm_yday\000"
 4335      64617900 
 4336              	.LASF4:
 4337 0028 5F5F7569 		.ascii	"__uint8_t\000"
 4337      6E74385F 
 4337      7400
 4338              	.LASF46:
 4339 0032 6C6F6E67 		.ascii	"longitude\000"
 4339      69747564 
 4339      6500
 4340              	.LASF130:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 94


 4341 003c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4341      43313120 
 4341      352E342E 
 4341      31203230 
 4341      31363036 
 4342 006f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4342      20726576 
 4342      6973696F 
 4342      6E203233 
 4342      37373135 
 4343 00a2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4343      66756E63 
 4343      74696F6E 
 4343      2D736563 
 4343      74696F6E 
 4344              	.LASF111:
 4345 00ca 6D6F6465 		.ascii	"modem_wakeup\000"
 4345      6D5F7761 
 4345      6B657570 
 4345      00
 4346              	.LASF10:
 4347 00d7 6C6F6E67 		.ascii	"long long unsigned int\000"
 4347      206C6F6E 
 4347      6720756E 
 4347      7369676E 
 4347      65642069 
 4348              	.LASF121:
 4349 00ee 64617461 		.ascii	"dataPointsInStackPointer\000"
 4349      506F696E 
 4349      7473496E 
 4349      53746163 
 4349      6B506F69 
 4350              	.LASF117:
 4351 0107 6D6F6465 		.ascii	"modem_state\000"
 4351      6D5F7374 
 4351      61746500 
 4352              	.LASF83:
 4353 0113 74657374 		.ascii	"test\000"
 4353      00
 4354              	.LASF116:
 4355 0118 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4355      52784275 
 4355      66666572 
 4355      00
 4356              	.LASF119:
 4357 0125 6D6F6465 		.ascii	"modem_stats\000"
 4357      6D5F7374 
 4357      61747300 
 4358              	.LASF9:
 4359 0131 6C6F6E67 		.ascii	"long long int\000"
 4359      206C6F6E 
 4359      6720696E 
 4359      7400
 4360              	.LASF0:
 4361 013f 7369676E 		.ascii	"signed char\000"
 4361      65642063 
 4361      68617200 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 95


 4362              	.LASF42:
 4363 014b 74696D65 		.ascii	"time_to_network_connect\000"
 4363      5F746F5F 
 4363      6E657477 
 4363      6F726B5F 
 4363      636F6E6E 
 4364              	.LASF124:
 4365 0163 68747470 		.ascii	"http_body\000"
 4365      5F626F64 
 4365      7900
 4366              	.LASF95:
 4367 016d 7365745F 		.ascii	"set_up_internet_connection\000"
 4367      75705F69 
 4367      6E746572 
 4367      6E65745F 
 4367      636F6E6E 
 4368              	.LASF107:
 4369 0188 7365636F 		.ascii	"second\000"
 4369      6E6400
 4370              	.LASF103:
 4371 018f 79656172 		.ascii	"year\000"
 4371      00
 4372              	.LASF6:
 4373 0194 6C6F6E67 		.ascii	"long int\000"
 4373      20696E74 
 4373      00
 4374              	.LASF109:
 4375 019d 6D6F6465 		.ascii	"modem_get_state\000"
 4375      6D5F6765 
 4375      745F7374 
 4375      61746500 
 4376              	.LASF47:
 4377 01ad 616C7469 		.ascii	"altitude\000"
 4377      74756465 
 4377      00
 4378              	.LASF15:
 4379 01b6 75696E74 		.ascii	"uint8\000"
 4379      3800
 4380              	.LASF57:
 4381 01bc 6E6F6465 		.ascii	"node_id\000"
 4381      5F696400 
 4382              	.LASF20:
 4383 01c4 646F7562 		.ascii	"double\000"
 4383      6C6500
 4384              	.LASF18:
 4385 01cb 696E7433 		.ascii	"int32\000"
 4385      3200
 4386              	.LASF99:
 4387 01d1 6D6F6465 		.ascii	"modem_configure_settings\000"
 4387      6D5F636F 
 4387      6E666967 
 4387      7572655F 
 4387      73657474 
 4388              	.LASF84:
 4389 01ea 6E657477 		.ascii	"network_time\000"
 4389      6F726B5F 
 4389      74696D65 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 96


 4389      00
 4390              	.LASF3:
 4391 01f7 73686F72 		.ascii	"short unsigned int\000"
 4391      7420756E 
 4391      7369676E 
 4391      65642069 
 4391      6E7400
 4392              	.LASF17:
 4393 020a 75696E74 		.ascii	"uint32\000"
 4393      333200
 4394              	.LASF80:
 4395 0211 696E7465 		.ascii	"interval\000"
 4395      7276616C 
 4395      00
 4396              	.LASF7:
 4397 021a 5F5F7569 		.ascii	"__uint32_t\000"
 4397      6E743332 
 4397      5F7400
 4398              	.LASF101:
 4399 0225 6D6F6465 		.ascii	"modem_get_network_time\000"
 4399      6D5F6765 
 4399      745F6E65 
 4399      74776F72 
 4399      6B5F7469 
 4400              	.LASF28:
 4401 023c 746D5F6D 		.ascii	"tm_mon\000"
 4401      6F6E00
 4402              	.LASF61:
 4403 0243 65705F70 		.ascii	"ep_pswd\000"
 4403      73776400 
 4404              	.LASF110:
 4405 024b 6D6F6465 		.ascii	"modem_sleep\000"
 4405      6D5F736C 
 4405      65657000 
 4406              	.LASF29:
 4407 0257 746D5F79 		.ascii	"tm_year\000"
 4407      65617200 
 4408              	.LASF104:
 4409 025f 6D6F6E74 		.ascii	"month\000"
 4409      6800
 4410              	.LASF66:
 4411 0265 70696E73 		.ascii	"pins_configure_active\000"
 4411      5F636F6E 
 4411      66696775 
 4411      72655F61 
 4411      63746976 
 4412              	.LASF53:
 4413 027b 6B65795F 		.ascii	"key_value_t\000"
 4413      76616C75 
 4413      655F7400 
 4414              	.LASF71:
 4415 0287 7077725F 		.ascii	"pwr_check\000"
 4415      63686563 
 4415      6B00
 4416              	.LASF8:
 4417 0291 6C6F6E67 		.ascii	"long unsigned int\000"
 4417      20756E73 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 97


 4417      69676E65 
 4417      6420696E 
 4417      7400
 4418              	.LASF86:
 4419 02a3 65787472 		.ascii	"extract_string\000"
 4419      6163745F 
 4419      73747269 
 4419      6E6700
 4420              	.LASF64:
 4421 02b2 6D6F6465 		.ascii	"modem_intilize\000"
 4421      6D5F696E 
 4421      74696C69 
 4421      7A6500
 4422              	.LASF76:
 4423 02c1 74696D65 		.ascii	"timeout\000"
 4423      6F757400 
 4424              	.LASF98:
 4425 02c9 6765745F 		.ascii	"get_cell_network_stats\000"
 4425      63656C6C 
 4425      5F6E6574 
 4425      776F726B 
 4425      5F737461 
 4426              	.LASF48:
 4427 02e0 74696D65 		.ascii	"time_to_lock\000"
 4427      5F746F5F 
 4427      6C6F636B 
 4427      00
 4428              	.LASF122:
 4429 02ed 64617461 		.ascii	"data\000"
 4429      00
 4430              	.LASF60:
 4431 02f2 65705F75 		.ascii	"ep_user\000"
 4431      73657200 
 4432              	.LASF59:
 4433 02fa 65705F70 		.ascii	"ep_port\000"
 4433      6F727400 
 4434              	.LASF32:
 4435 0302 746D5F69 		.ascii	"tm_isdst\000"
 4435      73647374 
 4435      00
 4436              	.LASF54:
 4437 030b 6D6F6465 		.ascii	"modem_info\000"
 4437      6D5F696E 
 4437      666F00
 4438              	.LASF58:
 4439 0316 65705F68 		.ascii	"ep_host\000"
 4439      6F737400 
 4440              	.LASF81:
 4441 031e 6D6F6465 		.ascii	"modem_power_up\000"
 4441      6D5F706F 
 4441      7765725F 
 4441      757000
 4442              	.LASF131:
 4443 032d 6D6F6465 		.ascii	"modem.c\000"
 4443      6D2E6300 
 4444              	.LASF88:
 4445 0335 62656769 		.ascii	"beginMarker\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 98


 4445      6E4D6172 
 4445      6B657200 
 4446              	.LASF90:
 4447 0341 74617267 		.ascii	"target\000"
 4447      657400
 4448              	.LASF43:
 4449 0348 74696D65 		.ascii	"time_to_acquire_ip\000"
 4449      5F746F5F 
 4449      61637175 
 4449      6972655F 
 4449      697000
 4450              	.LASF89:
 4451 035b 656E644D 		.ascii	"endMarker\000"
 4451      61726B65 
 4451      7200
 4452              	.LASF2:
 4453 0365 73686F72 		.ascii	"short int\000"
 4453      7420696E 
 4453      7400
 4454              	.LASF102:
 4455 036f 65706F63 		.ascii	"epoch_time\000"
 4455      685F7469 
 4455      6D6500
 4456              	.LASF5:
 4457 037a 5F5F696E 		.ascii	"__int32_t\000"
 4457      7433325F 
 4457      7400
 4458              	.LASF87:
 4459 0384 66726F6D 		.ascii	"from\000"
 4459      00
 4460              	.LASF94:
 4461 0389 63726567 		.ascii	"creg\000"
 4461      00
 4462              	.LASF77:
 4463 038e 61745F61 		.ascii	"at_attempt\000"
 4463      7474656D 
 4463      707400
 4464              	.LASF85:
 4465 0399 61745F77 		.ascii	"at_write_command\000"
 4465      72697465 
 4465      5F636F6D 
 4465      6D616E64 
 4465      00
 4466              	.LASF56:
 4467 03aa 7379735F 		.ascii	"sys_info_t\000"
 4467      696E666F 
 4467      5F7400
 4468              	.LASF120:
 4469 03b5 64617461 		.ascii	"dataPointsInStack\000"
 4469      506F696E 
 4469      7473496E 
 4469      53746163 
 4469      6B00
 4470              	.LASF112:
 4471 03c7 6D6F6465 		.ascii	"modem_get_gps_coordinates\000"
 4471      6D5F6765 
 4471      745F6770 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 99


 4471      735F636F 
 4471      6F726469 
 4472              	.LASF25:
 4473 03e1 746D5F6D 		.ascii	"tm_min\000"
 4473      696E00
 4474              	.LASF23:
 4475 03e8 73697A65 		.ascii	"sizetype\000"
 4475      74797065 
 4475      00
 4476              	.LASF93:
 4477 03f1 69735F63 		.ascii	"is_connected_to_cell_network\000"
 4477      6F6E6E65 
 4477      63746564 
 4477      5F746F5F 
 4477      63656C6C 
 4478              	.LASF128:
 4479 040e 75617274 		.ascii	"uart_received_string\000"
 4479      5F726563 
 4479      65697665 
 4479      645F7374 
 4479      72696E67 
 4480              	.LASF45:
 4481 0423 6C617469 		.ascii	"latitude\000"
 4481      74756465 
 4481      00
 4482              	.LASF33:
 4483 042c 74657374 		.ascii	"test_name\000"
 4483      5F6E616D 
 4483      6500
 4484              	.LASF82:
 4485 0436 6D6F6465 		.ascii	"modem_test\000"
 4485      6D5F7465 
 4485      737400
 4486              	.LASF115:
 4487 0441 6D617463 		.ascii	"match\000"
 4487      6800
 4488              	.LASF105:
 4489 0447 686F7572 		.ascii	"hour\000"
 4489      00
 4490              	.LASF74:
 4491 044c 636F6D6D 		.ascii	"commands\000"
 4491      616E6473 
 4491      00
 4492              	.LASF78:
 4493 0455 636F6D70 		.ascii	"compare_location\000"
 4493      6172655F 
 4493      6C6F6361 
 4493      74696F6E 
 4493      00
 4494              	.LASF19:
 4495 0466 666C6F61 		.ascii	"float\000"
 4495      7400
 4496              	.LASF97:
 4497 046c 746F6B65 		.ascii	"token\000"
 4497      6E00
 4498              	.LASF91:
 4499 0472 6973725F 		.ascii	"isr_telit_rx\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 100


 4499      74656C69 
 4499      745F7278 
 4499      00
 4500              	.LASF13:
 4501 047f 696E7433 		.ascii	"int32_t\000"
 4501      325F7400 
 4502              	.LASF1:
 4503 0487 756E7369 		.ascii	"unsigned char\000"
 4503      676E6564 
 4503      20636861 
 4503      7200
 4504              	.LASF127:
 4505 0495 73797374 		.ascii	"system_settings\000"
 4505      656D5F73 
 4505      65747469 
 4505      6E677300 
 4506              	.LASF79:
 4507 04a5 64656C61 		.ascii	"delay\000"
 4507      7900
 4508              	.LASF132:
 4509 04ab 433A5C55 		.ascii	"C:\\Users\\hail\\Desktop\\Brooke Research\\notoriOS"
 4509      73657273 
 4509      5C686169 
 4509      6C5C4465 
 4509      736B746F 
 4510 04d9 5C6E6F74 		.ascii	"\\notoriOS\\notoriOS\\notoriOS.cydsn\000"
 4510      6F72694F 
 4510      535C6E6F 
 4510      746F7269 
 4510      4F535C6E 
 4511              	.LASF36:
 4512 04fb 74657374 		.ascii	"test_t\000"
 4512      5F7400
 4513              	.LASF126:
 4514 0502 73797374 		.ascii	"system_info\000"
 4514      656D5F69 
 4514      6E666F00 
 4515              	.LASF39:
 4516 050e 696D6569 		.ascii	"imei\000"
 4516      00
 4517              	.LASF35:
 4518 0513 72656173 		.ascii	"reason\000"
 4518      6F6E00
 4519              	.LASF44:
 4520 051a 6D6F6465 		.ascii	"modem_stats_t\000"
 4520      6D5F7374 
 4520      6174735F 
 4520      7400
 4521              	.LASF73:
 4522 0528 75617274 		.ascii	"uart_string_reset\000"
 4522      5F737472 
 4522      696E675F 
 4522      72657365 
 4522      7400
 4523              	.LASF30:
 4524 053a 746D5F77 		.ascii	"tm_wday\000"
 4524      64617900 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 101


 4525              	.LASF72:
 4526 0542 6D6F6465 		.ascii	"modem_soft_power_cycle\000"
 4526      6D5F736F 
 4526      66745F70 
 4526      6F776572 
 4526      5F637963 
 4527              	.LASF22:
 4528 0559 6C6F6E67 		.ascii	"long double\000"
 4528      20646F75 
 4528      626C6500 
 4529              	.LASF21:
 4530 0565 63686172 		.ascii	"char\000"
 4530      00
 4531              	.LASF92:
 4532 056a 6D6F6465 		.ascii	"modem_process_tasks\000"
 4532      6D5F7072 
 4532      6F636573 
 4532      735F7461 
 4532      736B7300 
 4533              	.LASF11:
 4534 057e 756E7369 		.ascii	"unsigned int\000"
 4534      676E6564 
 4534      20696E74 
 4534      00
 4535              	.LASF100:
 4536 058b 4346554E 		.ascii	"CFUN\000"
 4536      00
 4537              	.LASF38:
 4538 0590 6D6F6465 		.ascii	"model_id\000"
 4538      6C5F6964 
 4538      00
 4539              	.LASF125:
 4540 0599 68747470 		.ascii	"http_route\000"
 4540      5F726F75 
 4540      746500
 4541              	.LASF40:
 4542 05a4 6D6F6465 		.ascii	"modem_info_t\000"
 4542      6D5F696E 
 4542      666F5F74 
 4542      00
 4543              	.LASF50:
 4544 05b1 6770735F 		.ascii	"gps_t\000"
 4544      7400
 4545              	.LASF129:
 4546 05b7 75617274 		.ascii	"uart_string_index\000"
 4546      5F737472 
 4546      696E675F 
 4546      696E6465 
 4546      7800
 4547              	.LASF96:
 4548 05c9 69735F63 		.ascii	"is_connected_to_internet\000"
 4548      6F6E6E65 
 4548      63746564 
 4548      5F746F5F 
 4548      696E7465 
 4549              	.LASF118:
 4550 05e2 6D6F6465 		.ascii	"modem_start_time_stamp\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 102


 4550      6D5F7374 
 4550      6172745F 
 4550      74696D65 
 4550      5F737461 
 4551              	.LASF114:
 4552 05f9 6770735F 		.ascii	"gps_status\000"
 4552      73746174 
 4552      757300
 4553              	.LASF65:
 4554 0604 70696E73 		.ascii	"pins_configure_inactive\000"
 4554      5F636F6E 
 4554      66696775 
 4554      72655F69 
 4554      6E616374 
 4555              	.LASF37:
 4556 061c 73696D5F 		.ascii	"sim_id\000"
 4556      696400
 4557              	.LASF55:
 4558 0623 63686970 		.ascii	"chip_uniqueId\000"
 4558      5F756E69 
 4558      71756549 
 4558      6400
 4559              	.LASF27:
 4560 0631 746D5F6D 		.ascii	"tm_mday\000"
 4560      64617900 
 4561              	.LASF49:
 4562 0639 76616C69 		.ascii	"valid\000"
 4562      6400
 4563              	.LASF106:
 4564 063f 6D696E75 		.ascii	"minute\000"
 4564      746500
 4565              	.LASF14:
 4566 0646 75696E74 		.ascii	"uint32_t\000"
 4566      33325F74 
 4566      00
 4567              	.LASF24:
 4568 064f 746D5F73 		.ascii	"tm_sec\000"
 4568      656300
 4569              	.LASF34:
 4570 0656 73746174 		.ascii	"status\000"
 4570      757300
 4571              	.LASF63:
 4572 065d 7379735F 		.ascii	"sys_settings_t\000"
 4572      73657474 
 4572      696E6773 
 4572      5F7400
 4573              	.LASF12:
 4574 066c 75696E74 		.ascii	"uint8_t\000"
 4574      385F7400 
 4575              	.LASF62:
 4576 0674 65705F64 		.ascii	"ep_database\000"
 4576      61746162 
 4576      61736500 
 4577              	.LASF68:
 4578 0680 61745F72 		.ascii	"at_ready\000"
 4578      65616479 
 4578      00
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccb3811I.s 			page 103


 4579              	.LASF69:
 4580 0689 61747465 		.ascii	"attempts\000"
 4580      6D707473 
 4580      00
 4581              	.LASF70:
 4582 0692 626F6F74 		.ascii	"boot_time\000"
 4582      5F74696D 
 4582      6500
 4583              	.LASF75:
 4584 069c 65787065 		.ascii	"expected_response\000"
 4584      63746564 
 4584      5F726573 
 4584      706F6E73 
 4584      6500
 4585              	.LASF41:
 4586 06ae 72737369 		.ascii	"rssi\000"
 4586      00
 4587              	.LASF113:
 4588 06b3 6C6F636B 		.ascii	"lock_time\000"
 4588      5F74696D 
 4588      6500
 4589              	.LASF123:
 4590 06bd 68747470 		.ascii	"http_request\000"
 4590      5F726571 
 4590      75657374 
 4590      00
 4591              	.LASF67:
 4592 06ca 6D6F6465 		.ascii	"modem_power_down\000"
 4592      6D5F706F 
 4592      7765725F 
 4592      646F776E 
 4592      00
 4593              	.LASF52:
 4594 06db 74696D65 		.ascii	"timeStamp\000"
 4594      5374616D 
 4594      7000
 4595              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
