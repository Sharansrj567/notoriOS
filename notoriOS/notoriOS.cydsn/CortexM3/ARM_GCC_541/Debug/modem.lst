ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"modem.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	modem_state,1,1
  20              		.comm	modem_start_time_stamp,4,4
  21              		.comm	modem_info,60,4
  22              		.comm	modem_stats,16,4
  23              		.syntax unified
  24              		.global _printf_float
  25              		.thumb
  26              		.syntax unified
  27              		.comm	dataPointsInStack,2,2
  28              		.comm	dataPointsInStackDesired,2,2
  29              		.comm	data,6600,4
  30              		.comm	http_request,10000,4
  31              		.comm	http_body,10000,4
  32              		.comm	http_route,200,4
  33              		.comm	system_info,28,4
  34              		.comm	system_settings,324,4
  35              		.comm	uart_received_string,1024,4
  36              		.global	uart_string_index
  37              		.bss
  38              		.align	1
  39              		.type	uart_string_index, %object
  40              		.size	uart_string_index, 2
  41              	uart_string_index:
  42 0000 0000     		.space	2
  43              		.section	.text.isr_telit_rx,"ax",%progbits
  44              		.align	2
  45              		.global	isr_telit_rx
  46              		.thumb
  47              		.thumb_func
  48              		.type	isr_telit_rx, %function
  49              	isr_telit_rx:
  50              	.LFB64:
  51              		.file 1 "modem.c"
   1:modem.c       **** //Methods for Telit modem 
   2:modem.c       **** #include "modem.h"
   3:modem.c       **** #include "notoriOS.h"
   4:modem.c       **** #include "debug.h"
   5:modem.c       **** #include "data.h"
   6:modem.c       **** #include <math.h>
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 2


   7:modem.c       **** #include <stdio.h>
   8:modem.c       **** 
   9:modem.c       **** char uart_received_string[1024];
  10:modem.c       **** int16 uart_string_index=0;
  11:modem.c       **** 
  12:modem.c       **** #define DEFAULT_AT_TIMEOUT 2000u // Send command and wait 2000 ms
  13:modem.c       **** #define NO_AT_TIMEOUT 0u // Send command, no timeout/ don't wait 
  14:modem.c       **** 
  15:modem.c       **** #define TIMEOUT_NETWORK_CONNECT 200 //seconds
  16:modem.c       **** #define TIMEOUT_IP_ACQUIRE 230 //seconds (cummulatinve) add to TIMEOUT_NETWORK_CONNECT
  17:modem.c       **** 
  18:modem.c       **** CY_ISR_PROTO(isr_telit_rx); // Declares a custom ISR function "isr_telit_rx" using the CY_ISR_PROTO
  19:modem.c       **** 
  20:modem.c       **** // Define the custom ISR function "isr_telit_rx" using the CY_ISR macro
  21:modem.c       **** // Get each character from Telit and saves it to uart_received_string
  22:modem.c       **** CY_ISR(isr_telit_rx){      
  52              		.loc 1 22 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 98B5     		push	{r3, r4, r7, lr}
  57              		.cfi_def_cfa_offset 16
  58              		.cfi_offset 3, -16
  59              		.cfi_offset 4, -12
  60              		.cfi_offset 7, -8
  61              		.cfi_offset 14, -4
  62 0002 00AF     		add	r7, sp, #0
  63              		.cfi_def_cfa_register 7
  23:modem.c       ****     // UART_Telit_GetRxBufferSize() returns the number of received bytes available in the RX buffer
  24:modem.c       ****     while(UART_Telit_GetRxBufferSize()==1){
  64              		.loc 1 24 0
  65 0004 12E0     		b	.L2
  66              	.L3:
  25:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  67              		.loc 1 25 0
  68 0006 0D4B     		ldr	r3, .L4
  69 0008 B3F90030 		ldrsh	r3, [r3]
  70 000c 1C46     		mov	r4, r3
  71 000e FFF7FEFF 		bl	UART_Telit_GetChar
  72 0012 0346     		mov	r3, r0
  73 0014 1A46     		mov	r2, r3
  74 0016 0A4B     		ldr	r3, .L4+4
  75 0018 1A55     		strb	r2, [r3, r4]
  26:modem.c       ****         uart_string_index++;
  76              		.loc 1 26 0
  77 001a 084B     		ldr	r3, .L4
  78 001c B3F90030 		ldrsh	r3, [r3]
  79 0020 9BB2     		uxth	r3, r3
  80 0022 0133     		adds	r3, r3, #1
  81 0024 9BB2     		uxth	r3, r3
  82 0026 1AB2     		sxth	r2, r3
  83 0028 044B     		ldr	r3, .L4
  84 002a 1A80     		strh	r2, [r3]	@ movhi
  85              	.L2:
  24:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  86              		.loc 1 24 0
  87 002c FFF7FEFF 		bl	UART_Telit_GetRxBufferSize
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 3


  88 0030 0346     		mov	r3, r0
  89 0032 012B     		cmp	r3, #1
  90 0034 E7D0     		beq	.L3
  27:modem.c       ****     }
  28:modem.c       **** 
  29:modem.c       **** }
  91              		.loc 1 29 0
  92 0036 00BF     		nop
  93 0038 98BD     		pop	{r3, r4, r7, pc}
  94              	.L5:
  95 003a 00BF     		.align	2
  96              	.L4:
  97 003c 00000000 		.word	uart_string_index
  98 0040 00000000 		.word	uart_received_string
  99              		.cfi_endproc
 100              	.LFE64:
 101              		.size	isr_telit_rx, .-isr_telit_rx
 102              		.section	.text.modem_initialize,"ax",%progbits
 103              		.align	2
 104              		.global	modem_initialize
 105              		.thumb
 106              		.thumb_func
 107              		.type	modem_initialize, %function
 108              	modem_initialize:
 109              	.LFB65:
  30:modem.c       **** 
  31:modem.c       **** // Initialize the modem
  32:modem.c       **** void modem_initialize(){
 110              		.loc 1 32 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 1, uses_anonymous_args = 0
 114 0000 80B5     		push	{r7, lr}
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 7, -8
 117              		.cfi_offset 14, -4
 118 0002 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
  33:modem.c       ****     // Don't do much except make sure that all the modem pins are pulled low
  34:modem.c       ****     // Also make sure that the TX PIN is fully disabled
  35:modem.c       ****     pins_configure_inactive();
 120              		.loc 1 35 0
 121 0004 FFF7FEFF 		bl	pins_configure_inactive
  36:modem.c       ****     modem_state = 0;
 122              		.loc 1 36 0
 123 0008 0F4B     		ldr	r3, .L7
 124 000a 0022     		movs	r2, #0
 125 000c 1A70     		strb	r2, [r3]
  37:modem.c       ****     //initialize states
  38:modem.c       ****     modem_info.imei[0] = '\0';
 126              		.loc 1 38 0
 127 000e 0F4B     		ldr	r3, .L7+4
 128 0010 0022     		movs	r2, #0
 129 0012 83F82820 		strb	r2, [r3, #40]
  39:modem.c       ****     modem_info.model_id[0] = '\0';
 130              		.loc 1 39 0
 131 0016 0D4B     		ldr	r3, .L7+4
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 4


 132 0018 0022     		movs	r2, #0
 133 001a 1A75     		strb	r2, [r3, #20]
  40:modem.c       ****     modem_info.sim_id[0] = '\0';
 134              		.loc 1 40 0
 135 001c 0B4B     		ldr	r3, .L7+4
 136 001e 0022     		movs	r2, #0
 137 0020 1A70     		strb	r2, [r3]
  41:modem.c       ****     modem_stats.rsrq = 0;
 138              		.loc 1 41 0
 139 0022 0B4B     		ldr	r3, .L7+8
 140 0024 0022     		movs	r2, #0
 141 0026 1A71     		strb	r2, [r3, #4]
  42:modem.c       ****     modem_stats.rssi = 0;
 142              		.loc 1 42 0
 143 0028 094B     		ldr	r3, .L7+8
 144 002a 0022     		movs	r2, #0
 145 002c 1A70     		strb	r2, [r3]
  43:modem.c       ****     modem_stats.time_to_acquire_ip = 0;
 146              		.loc 1 43 0
 147 002e 084B     		ldr	r3, .L7+8
 148 0030 0022     		movs	r2, #0
 149 0032 DA60     		str	r2, [r3, #12]
  44:modem.c       ****     modem_stats.time_to_network_connect = 0;
 150              		.loc 1 44 0
 151 0034 064B     		ldr	r3, .L7+8
 152 0036 0022     		movs	r2, #0
 153 0038 9A60     		str	r2, [r3, #8]
  45:modem.c       ****     // Disable the RX Pin interrupt, and only enable it during long timeouts
  46:modem.c       ****     // Rx_Telit_SetInterruptMode(): Configures the interrupt mode for each of the Pins component's 
  47:modem.c       ****     // Rx_Telit_0_INTR selects the first pin in the list, and Rx_Telit_INTR_NONE disables the Rx pi
  48:modem.c       ****     Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 154              		.loc 1 48 0
 155 003a 0021     		movs	r1, #0
 156 003c 4020     		movs	r0, #64
 157 003e FFF7FEFF 		bl	Rx_Telit_SetInterruptMode
  49:modem.c       ****     
  50:modem.c       **** }
 158              		.loc 1 50 0
 159 0042 00BF     		nop
 160 0044 80BD     		pop	{r7, pc}
 161              	.L8:
 162 0046 00BF     		.align	2
 163              	.L7:
 164 0048 00000000 		.word	modem_state
 165 004c 00000000 		.word	modem_info
 166 0050 00000000 		.word	modem_stats
 167              		.cfi_endproc
 168              	.LFE65:
 169              		.size	modem_initialize, .-modem_initialize
 170              		.section	.text.pins_configure_inactive,"ax",%progbits
 171              		.align	2
 172              		.global	pins_configure_inactive
 173              		.thumb
 174              		.thumb_func
 175              		.type	pins_configure_inactive, %function
 176              	pins_configure_inactive:
 177              	.LFB66:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 5


  51:modem.c       **** 
  52:modem.c       **** 
  53:modem.c       **** // To be used when the modem power is to be "killed" conpletely to conserve power
  54:modem.c       **** void pins_configure_inactive(){
 178              		.loc 1 54 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 1, uses_anonymous_args = 0
 182 0000 80B5     		push	{r7, lr}
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 7, -8
 185              		.cfi_offset 14, -4
 186 0002 00AF     		add	r7, sp, #0
 187              		.cfi_def_cfa_register 7
  55:modem.c       ****    
  56:modem.c       ****    Telit_ControlReg_Write(0u); // Physically disconect UART pin
 188              		.loc 1 56 0
 189 0004 0020     		movs	r0, #0
 190 0006 FFF7FEFF 		bl	Telit_ControlReg_Write
  57:modem.c       ****    Rx_Telit_SetDriveMode(PIN_DM_STRONG); // Set drive mode
 191              		.loc 1 57 0
 192 000a 0C20     		movs	r0, #12
 193 000c FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  58:modem.c       **** 
  59:modem.c       ****    Pin_Telit_pwr_Write(OFF); // Kill power to modem (pulls pin low).
 194              		.loc 1 59 0
 195 0010 0020     		movs	r0, #0
 196 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  60:modem.c       **** 
  61:modem.c       ****    // Pull down all of these, just in case (turns the off).
  62:modem.c       ****    Rx_Telit_Write(OFF); 
 197              		.loc 1 62 0
 198 0016 0020     		movs	r0, #0
 199 0018 FFF7FEFF 		bl	Rx_Telit_Write
  63:modem.c       ****    Tx_Telit_Write(OFF);
 200              		.loc 1 63 0
 201 001c 0020     		movs	r0, #0
 202 001e FFF7FEFF 		bl	Tx_Telit_Write
  64:modem.c       ****    Pin_Telit_ONOFF_Write(OFF);
 203              		.loc 1 64 0
 204 0022 0020     		movs	r0, #0
 205 0024 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
  65:modem.c       ****    Pin_Telit_SWRDY_Write(OFF);
 206              		.loc 1 65 0
 207 0028 0020     		movs	r0, #0
 208 002a FFF7FEFF 		bl	Pin_Telit_SWRDY_Write
  66:modem.c       ****     
  67:modem.c       **** }
 209              		.loc 1 67 0
 210 002e 00BF     		nop
 211 0030 80BD     		pop	{r7, pc}
 212              		.cfi_endproc
 213              	.LFE66:
 214              		.size	pins_configure_inactive, .-pins_configure_inactive
 215 0032 00BF     		.section	.text.pins_configure_active,"ax",%progbits
 216              		.align	2
 217              		.global	pins_configure_active
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 6


 218              		.thumb
 219              		.thumb_func
 220              		.type	pins_configure_active, %function
 221              	pins_configure_active:
 222              	.LFB67:
  68:modem.c       **** 
  69:modem.c       **** // Turns on power and configures all UART pin modes
  70:modem.c       **** void pins_configure_active(){
 223              		.loc 1 70 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 1, uses_anonymous_args = 0
 227 0000 80B5     		push	{r7, lr}
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 7, -8
 230              		.cfi_offset 14, -4
 231 0002 00AF     		add	r7, sp, #0
 232              		.cfi_def_cfa_register 7
  71:modem.c       ****     
  72:modem.c       ****     Rx_Telit_SetDriveMode(PIN_DM_DIG_HIZ); // Power up. Set RX pin to High Impedance Digital mode.
 233              		.loc 1 72 0
 234 0004 0220     		movs	r0, #2
 235 0006 FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  73:modem.c       ****     Telit_ControlReg_Write(1u); // Pull Telit_ControlReg pin high (turns it on).
 236              		.loc 1 73 0
 237 000a 0120     		movs	r0, #1
 238 000c FFF7FEFF 		bl	Telit_ControlReg_Write
  74:modem.c       ****     Pin_Telit_pwr_Write(ON); // Pulls Telit_pwr pin high (turns it on).
 239              		.loc 1 74 0
 240 0010 0120     		movs	r0, #1
 241 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  75:modem.c       ****     CyDelay(100u); // Give the MOSFET a few ms to stalbilise power 
 242              		.loc 1 75 0
 243 0016 6420     		movs	r0, #100
 244 0018 FFF7FEFF 		bl	CyDelay
  76:modem.c       **** }
 245              		.loc 1 76 0
 246 001c 00BF     		nop
 247 001e 80BD     		pop	{r7, pc}
 248              		.cfi_endproc
 249              	.LFE67:
 250              		.size	pins_configure_active, .-pins_configure_active
 251              		.section	.rodata
 252              		.align	2
 253              	.LC0:
 254 0000 4F4B00   		.ascii	"OK\000"
 255 0003 00       		.align	2
 256              	.LC1:
 257 0004 41542353 		.ascii	"AT#SHDN\015\000"
 257      48444E0D 
 257      00
 258              		.section	.text.modem_power_down,"ax",%progbits
 259              		.align	2
 260              		.global	modem_power_down
 261              		.thumb
 262              		.thumb_func
 263              		.type	modem_power_down, %function
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 7


 264              	modem_power_down:
 265              	.LFB68:
  77:modem.c       **** 
  78:modem.c       **** // Power down the modem -- completely "kill" modem to conserve power.
  79:modem.c       **** void modem_power_down(){
 266              		.loc 1 79 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 1, uses_anonymous_args = 0
 270 0000 80B5     		push	{r7, lr}
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 7, -8
 273              		.cfi_offset 14, -4
 274 0002 00AF     		add	r7, sp, #0
 275              		.cfi_def_cfa_register 7
  80:modem.c       ****     // AT Command to modem for Software Shut Down - #SHDN
  81:modem.c       ****     // \r is carriage return, it is necessary for the modem to know it got a command
  82:modem.c       ****     at_write_command("AT#SHDN\r","OK",5000u); 
 276              		.loc 1 82 0
 277 0004 41F28832 		movw	r2, #5000
 278 0008 0A49     		ldr	r1, .L12
 279 000a 0B48     		ldr	r0, .L12+4
 280 000c FFF7FEFF 		bl	at_write_command
  83:modem.c       ****    
  84:modem.c       ****     // Soft power cycle makes sure that the modem is all the way on (like holding on button on for 
  85:modem.c       ****     modem_soft_power_cycle();
 281              		.loc 1 85 0
 282 0010 FFF7FEFF 		bl	modem_soft_power_cycle
  86:modem.c       ****     CyDelay(1000u);
 283              		.loc 1 86 0
 284 0014 4FF47A70 		mov	r0, #1000
 285 0018 FFF7FEFF 		bl	CyDelay
  87:modem.c       ****     
  88:modem.c       ****     UART_Telit_Stop(); // Disables the UART operation.
 286              		.loc 1 88 0
 287 001c FFF7FEFF 		bl	UART_Telit_Stop
  89:modem.c       ****     isr_telit_rx_Stop(); // Disables and removes the interrupt.
 288              		.loc 1 89 0
 289 0020 FFF7FEFF 		bl	isr_telit_rx_Stop
  90:modem.c       ****     pins_configure_inactive(); // We want the modem power to be "killed" completely to conserve pow
 290              		.loc 1 90 0
 291 0024 FFF7FEFF 		bl	pins_configure_inactive
  91:modem.c       ****     modem_state = MODEM_STATE_OFF;
 292              		.loc 1 91 0
 293 0028 044B     		ldr	r3, .L12+8
 294 002a 0022     		movs	r2, #0
 295 002c 1A70     		strb	r2, [r3]
  92:modem.c       ****     
  93:modem.c       **** }
 296              		.loc 1 93 0
 297 002e 00BF     		nop
 298 0030 80BD     		pop	{r7, pc}
 299              	.L13:
 300 0032 00BF     		.align	2
 301              	.L12:
 302 0034 00000000 		.word	.LC0
 303 0038 04000000 		.word	.LC1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 8


 304 003c 00000000 		.word	modem_state
 305              		.cfi_endproc
 306              	.LFE68:
 307              		.size	modem_power_down, .-modem_power_down
 308              		.section	.rodata
 309 000d 000000   		.align	2
 310              	.LC2:
 311 0010 41544530 		.ascii	"ATE0\015\000"
 311      0D00
 312 0016 0000     		.align	2
 313              	.LC3:
 314 0018 4D6F6465 		.ascii	"Modem boot time: %d\000"
 314      6D20626F 
 314      6F742074 
 314      696D653A 
 314      20256400 
 315              		.align	2
 316              	.LC4:
 317 002c 4D6F6465 		.ascii	"Modem ready for AT commands after %d attempt(s).\000"
 317      6D207265 
 317      61647920 
 317      666F7220 
 317      41542063 
 318 005d 000000   		.align	2
 319              	.LC5:
 320 0060 4E6F2072 		.ascii	"No response from modem.\000"
 320      6573706F 
 320      6E736520 
 320      66726F6D 
 320      206D6F64 
 321              		.section	.text.modem_power_up,"ax",%progbits
 322              		.align	2
 323              		.global	modem_power_up
 324              		.thumb
 325              		.thumb_func
 326              		.type	modem_power_up, %function
 327              	modem_power_up:
 328              	.LFB69:
  94:modem.c       **** 
  95:modem.c       **** // This puts all the modem pints into a state that won't leak power
  96:modem.c       **** // Please call restore_pins() to bring them abck to function when they are needed for UART
  97:modem.c       **** uint8 modem_power_up(){
 329              		.loc 1 97 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 8
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333 0000 80B5     		push	{r7, lr}
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 7, -8
 336              		.cfi_offset 14, -4
 337 0002 82B0     		sub	sp, sp, #8
 338              		.cfi_def_cfa_offset 16
 339 0004 00AF     		add	r7, sp, #0
 340              		.cfi_def_cfa_register 7
  98:modem.c       **** 
  99:modem.c       ****     pins_configure_active(); // Turns on power and configures all UART pin modes
 341              		.loc 1 99 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 9


 342 0006 FFF7FEFF 		bl	pins_configure_active
 100:modem.c       ****     UART_Telit_Start(); // Sets the initVar variable, calls the UART_Telit_Init() function, and the
 343              		.loc 1 100 0
 344 000a FFF7FEFF 		bl	UART_Telit_Start
 101:modem.c       ****     isr_telit_rx_StartEx(isr_telit_rx); // Sets up the interrupt and enables it. 
 345              		.loc 1 101 0
 346 000e 2C48     		ldr	r0, .L27
 347 0010 FFF7FEFF 		bl	isr_telit_rx_StartEx
 102:modem.c       **** 
 103:modem.c       ****     modem_soft_power_cycle(); // Soft power cycle makes sure that the modem is all the way on (like
 348              		.loc 1 103 0
 349 0014 FFF7FEFF 		bl	modem_soft_power_cycle
 104:modem.c       ****     
 105:modem.c       ****     // Turn off ECHO command (doesn't repeat your command back to you).
 106:modem.c       ****     uint8 at_ready = 0;
 350              		.loc 1 106 0
 351 0018 0023     		movs	r3, #0
 352 001a FB71     		strb	r3, [r7, #7]
 107:modem.c       ****     uint8 attempts = 0;
 353              		.loc 1 107 0
 354 001c 0023     		movs	r3, #0
 355 001e 3B71     		strb	r3, [r7, #4]
 108:modem.c       ****     // Create variable boot_time of the current time stamp.
 109:modem.c       ****     long boot_time = getTimeStamp();
 356              		.loc 1 109 0
 357 0020 FFF7FEFF 		bl	getTimeStamp
 358 0024 3860     		str	r0, [r7]
 359              	.LBB2:
 110:modem.c       ****     
 111:modem.c       ****     //it takes the 4G modem 10+secs (max 20) to boot up, so keep hitting it with AT commands until 
 112:modem.c       ****     for(uint8 attempts = 0; attempts<3; attempts++){
 360              		.loc 1 112 0
 361 0026 0023     		movs	r3, #0
 362 0028 BB71     		strb	r3, [r7, #6]
 363 002a 1CE0     		b	.L15
 364              	.L22:
 365              	.LBB3:
 113:modem.c       ****         
 114:modem.c       ****         for(uint8 pwr_check = 0; pwr_check<20; pwr_check++){
 366              		.loc 1 114 0
 367 002c 0023     		movs	r3, #0
 368 002e 7B71     		strb	r3, [r7, #5]
 369 0030 0EE0     		b	.L16
 370              	.L19:
 115:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 116:modem.c       ****             if(at_write_command("ATE0\r","OK",1000u)){
 371              		.loc 1 116 0
 372 0032 4FF47A72 		mov	r2, #1000
 373 0036 2349     		ldr	r1, .L27+4
 374 0038 2348     		ldr	r0, .L27+8
 375 003a FFF7FEFF 		bl	at_write_command
 376 003e 0346     		mov	r3, r0
 377 0040 002B     		cmp	r3, #0
 378 0042 02D0     		beq	.L17
 117:modem.c       ****                 at_ready = 1;
 379              		.loc 1 117 0
 380 0044 0123     		movs	r3, #1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 10


 381 0046 FB71     		strb	r3, [r7, #7]
 118:modem.c       ****                 break;
 382              		.loc 1 118 0
 383 0048 05E0     		b	.L18
 384              	.L17:
 114:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 385              		.loc 1 114 0 discriminator 2
 386 004a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 387 004c 0133     		adds	r3, r3, #1
 388 004e 7B71     		strb	r3, [r7, #5]
 389              	.L16:
 114:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 390              		.loc 1 114 0 is_stmt 0 discriminator 1
 391 0050 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 392 0052 132B     		cmp	r3, #19
 393 0054 EDD9     		bls	.L19
 394              	.L18:
 395              	.LBE3:
 119:modem.c       ****             }
 120:modem.c       ****         }
 121:modem.c       ****             
 122:modem.c       ****         if(at_ready == 1){
 396              		.loc 1 122 0 is_stmt 1
 397 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 398 0058 012B     		cmp	r3, #1
 399 005a 08D0     		beq	.L26
 123:modem.c       ****             break;
 124:modem.c       ****         }else{
 125:modem.c       ****             // Soft power cycle makes sure that the modem is all the way on (like holding on button
 126:modem.c       ****             modem_soft_power_cycle();
 400              		.loc 1 126 0 discriminator 2
 401 005c FFF7FEFF 		bl	modem_soft_power_cycle
 112:modem.c       ****         
 402              		.loc 1 112 0 discriminator 2
 403 0060 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 404 0062 0133     		adds	r3, r3, #1
 405 0064 BB71     		strb	r3, [r7, #6]
 406              	.L15:
 112:modem.c       ****         
 407              		.loc 1 112 0 is_stmt 0 discriminator 1
 408 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 409 0068 022B     		cmp	r3, #2
 410 006a DFD9     		bls	.L22
 411 006c 00E0     		b	.L21
 412              	.L26:
 123:modem.c       ****             break;
 413              		.loc 1 123 0 is_stmt 1
 414 006e 00BF     		nop
 415              	.L21:
 416              	.LBE2:
 127:modem.c       ****         }
 128:modem.c       ****     }
 129:modem.c       ****     // Calculate boot up time and save to variable boot_time.
 130:modem.c       ****     boot_time = getTimeStamp() - boot_time;
 417              		.loc 1 130 0
 418 0070 FFF7FEFF 		bl	getTimeStamp
 419 0074 0246     		mov	r2, r0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 11


 420 0076 3B68     		ldr	r3, [r7]
 421 0078 D31A     		subs	r3, r2, r3
 422 007a 3B60     		str	r3, [r7]
 131:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Modem boot time: %d",boot_time);
 423              		.loc 1 131 0
 424 007c 3A68     		ldr	r2, [r7]
 425 007e 1349     		ldr	r1, .L27+12
 426 0080 0020     		movs	r0, #0
 427 0082 FFF7FEFF 		bl	printNotif
 132:modem.c       ****    
 133:modem.c       ****     if(at_ready == 1){
 428              		.loc 1 133 0
 429 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 430 0088 012B     		cmp	r3, #1
 431 008a 0AD1     		bne	.L23
 134:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Modem ready for AT commands after %d attempt(s).",attempts);
 432              		.loc 1 134 0
 433 008c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 434 008e 1A46     		mov	r2, r3
 435 0090 0F49     		ldr	r1, .L27+16
 436 0092 0020     		movs	r0, #0
 437 0094 FFF7FEFF 		bl	printNotif
 135:modem.c       ****         modem_state = MODEM_STATE_STARTUP;
 438              		.loc 1 135 0
 439 0098 0E4B     		ldr	r3, .L27+20
 440 009a 0122     		movs	r2, #1
 441 009c 1A70     		strb	r2, [r3]
 136:modem.c       ****     }else{
 137:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"No response from modem.");
 138:modem.c       ****         modem_state = MODEM_STATE_OFF;
 139:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 140:modem.c       ****         modem_power_down();
 141:modem.c       ****         return 0u;
 142:modem.c       ****     }
 143:modem.c       ****     return 1u;
 442              		.loc 1 143 0
 443 009e 0123     		movs	r3, #1
 444 00a0 09E0     		b	.L25
 445              	.L23:
 137:modem.c       ****         modem_state = MODEM_STATE_OFF;
 446              		.loc 1 137 0
 447 00a2 0D49     		ldr	r1, .L27+24
 448 00a4 0220     		movs	r0, #2
 449 00a6 FFF7FEFF 		bl	printNotif
 138:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 450              		.loc 1 138 0
 451 00aa 0A4B     		ldr	r3, .L27+20
 452 00ac 0022     		movs	r2, #0
 453 00ae 1A70     		strb	r2, [r3]
 140:modem.c       ****         return 0u;
 454              		.loc 1 140 0
 455 00b0 FFF7FEFF 		bl	modem_power_down
 141:modem.c       ****     }
 456              		.loc 1 141 0
 457 00b4 0023     		movs	r3, #0
 458              	.L25:
 144:modem.c       **** }
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 12


 459              		.loc 1 144 0
 460 00b6 1846     		mov	r0, r3
 461 00b8 0837     		adds	r7, r7, #8
 462              		.cfi_def_cfa_offset 8
 463 00ba BD46     		mov	sp, r7
 464              		.cfi_def_cfa_register 13
 465              		@ sp needed
 466 00bc 80BD     		pop	{r7, pc}
 467              	.L28:
 468 00be 00BF     		.align	2
 469              	.L27:
 470 00c0 00000000 		.word	isr_telit_rx
 471 00c4 00000000 		.word	.LC0
 472 00c8 10000000 		.word	.LC2
 473 00cc 18000000 		.word	.LC3
 474 00d0 2C000000 		.word	.LC4
 475 00d4 00000000 		.word	modem_state
 476 00d8 60000000 		.word	.LC5
 477              		.cfi_endproc
 478              	.LFE69:
 479              		.size	modem_power_up, .-modem_power_up
 480              		.section	.text.modem_soft_power_cycle,"ax",%progbits
 481              		.align	2
 482              		.global	modem_soft_power_cycle
 483              		.thumb
 484              		.thumb_func
 485              		.type	modem_soft_power_cycle, %function
 486              	modem_soft_power_cycle:
 487              	.LFB70:
 145:modem.c       **** 
 146:modem.c       **** // Puts modem in soft power cycle -- modem has power but isn't all the way on, so soft power cycle 
 147:modem.c       **** void modem_soft_power_cycle(){
 488              		.loc 1 147 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 1, uses_anonymous_args = 0
 492 0000 80B5     		push	{r7, lr}
 493              		.cfi_def_cfa_offset 8
 494              		.cfi_offset 7, -8
 495              		.cfi_offset 14, -4
 496 0002 00AF     		add	r7, sp, #0
 497              		.cfi_def_cfa_register 7
 148:modem.c       ****     Pin_Telit_ONOFF_Write(1u); // Pulls Telit_ONOFF pin high
 498              		.loc 1 148 0
 499 0004 0120     		movs	r0, #1
 500 0006 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 149:modem.c       ****     CyDelay(2000u); // Give modem a sec to boot
 501              		.loc 1 149 0
 502 000a 4FF4FA60 		mov	r0, #2000
 503 000e FFF7FEFF 		bl	CyDelay
 150:modem.c       ****     Pin_Telit_ONOFF_Write(0u); // Pulls Telit_ONOFF pin low
 504              		.loc 1 150 0
 505 0012 0020     		movs	r0, #0
 506 0014 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 151:modem.c       ****     
 152:modem.c       **** }
 507              		.loc 1 152 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 13


 508 0018 00BF     		nop
 509 001a 80BD     		pop	{r7, pc}
 510              		.cfi_endproc
 511              	.LFE70:
 512              		.size	modem_soft_power_cycle, .-modem_soft_power_cycle
 513              		.section	.text.uart_string_reset,"ax",%progbits
 514              		.align	2
 515              		.global	uart_string_reset
 516              		.thumb
 517              		.thumb_func
 518              		.type	uart_string_reset, %function
 519              	uart_string_reset:
 520              	.LFB71:
 153:modem.c       **** 
 154:modem.c       **** // Clear and reset the uart_received_string variable and uart_string_index for the next transmissio
 155:modem.c       **** void uart_string_reset(){
 521              		.loc 1 155 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 1, uses_anonymous_args = 0
 525 0000 80B5     		push	{r7, lr}
 526              		.cfi_def_cfa_offset 8
 527              		.cfi_offset 7, -8
 528              		.cfi_offset 14, -4
 529 0002 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 156:modem.c       ****     uart_string_index=0;
 531              		.loc 1 156 0
 532 0004 064B     		ldr	r3, .L31
 533 0006 0022     		movs	r2, #0
 534 0008 1A80     		strh	r2, [r3]	@ movhi
 157:modem.c       ****     // memset(void *str, int c, size_t n) copies the character c (an unsigned char) to the first n 
 158:modem.c       ****     memset(uart_received_string,'\0',sizeof(uart_received_string));
 535              		.loc 1 158 0
 536 000a 4FF48062 		mov	r2, #1024
 537 000e 0021     		movs	r1, #0
 538 0010 0448     		ldr	r0, .L31+4
 539 0012 FFF7FEFF 		bl	memset
 159:modem.c       ****     // Clears the receiver memory buffer and hardware RX FIFO of all received data.
 160:modem.c       ****     UART_Telit_ClearRxBuffer();
 540              		.loc 1 160 0
 541 0016 FFF7FEFF 		bl	UART_Telit_ClearRxBuffer
 161:modem.c       **** }
 542              		.loc 1 161 0
 543 001a 00BF     		nop
 544 001c 80BD     		pop	{r7, pc}
 545              	.L32:
 546 001e 00BF     		.align	2
 547              	.L31:
 548 0020 00000000 		.word	uart_string_index
 549 0024 00000000 		.word	uart_received_string
 550              		.cfi_endproc
 551              	.LFE71:
 552              		.size	uart_string_reset, .-uart_string_reset
 553              		.section	.rodata
 554              		.align	2
 555              	.LC6:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 14


 556 0078 4D6F6465 		.ascii	"Modem sent AT command without timeout: %s\015\012\000"
 556      6D207365 
 556      6E742041 
 556      5420636F 
 556      6D6D616E 
 557              		.align	2
 558              	.LC7:
 559 00a4 4D6F6465 		.ascii	"Modem Received expected AT Response on first Try:\012"
 559      6D205265 
 559      63656976 
 559      65642065 
 559      78706563 
 560 00d6 436F6D6D 		.ascii	"Command: %s\012Received: %s\015\012\000"
 560      616E643A 
 560      2025730A 
 560      52656365 
 560      69766564 
 561 00f1 000000   		.align	2
 562              	.LC8:
 563 00f4 4D6F6465 		.ascii	"Modem required %d tries to receive AT Response: %s\015"
 563      6D207265 
 563      71756972 
 563      65642025 
 563      64207472 
 564 0127 0A00     		.ascii	"\012\000"
 565 0129 000000   		.align	2
 566              	.LC9:
 567 012c 436F756C 		.ascii	"Could not write AT command: %s\012 Received: %s\012"
 567      64206E6F 
 567      74207772 
 567      69746520 
 567      41542063 
 568 0159 00       		.ascii	"\000"
 569              		.section	.text.at_write_command,"ax",%progbits
 570              		.align	2
 571              		.global	at_write_command
 572              		.thumb
 573              		.thumb_func
 574              		.type	at_write_command, %function
 575              	at_write_command:
 576              	.LFB72:
 162:modem.c       **** 
 163:modem.c       **** // Modem controlled  via  the  serial  interface  using  the  standard  AT commands.
 164:modem.c       **** // AT is an ATTENTION command and is used as a prefix to other parameters in a string. 
 165:modem.c       **** // Sends commands to the modem
 166:modem.c       **** uint8_t at_write_command(char* commands, char* expected_response,uint32_t timeout){
 577              		.loc 1 166 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 40
 580              		@ frame_needed = 1, uses_anonymous_args = 0
 581 0000 80B5     		push	{r7, lr}
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 7, -8
 584              		.cfi_offset 14, -4
 585 0002 8AB0     		sub	sp, sp, #40
 586              		.cfi_def_cfa_offset 48
 587 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 15


 588              		.cfi_def_cfa_register 7
 589 0006 F860     		str	r0, [r7, #12]
 590 0008 B960     		str	r1, [r7, #8]
 591 000a 7A60     		str	r2, [r7, #4]
 167:modem.c       **** 
 168:modem.c       ****     uint32 at_attempt = 0;
 592              		.loc 1 168 0
 593 000c 0023     		movs	r3, #0
 594 000e 7B62     		str	r3, [r7, #36]
 169:modem.c       ****     
 170:modem.c       ****     for(at_attempt = 0; at_attempt < 3; at_attempt++) {
 595              		.loc 1 170 0
 596 0010 0023     		movs	r3, #0
 597 0012 7B62     		str	r3, [r7, #36]
 598 0014 46E0     		b	.L34
 599              	.L42:
 600              	.LBB4:
 171:modem.c       ****         
 172:modem.c       ****         char* compare_location;
 173:modem.c       ****         uint32_t delay=10;
 601              		.loc 1 173 0
 602 0016 0A23     		movs	r3, #10
 603 0018 FB61     		str	r3, [r7, #28]
 174:modem.c       ****         uint32_t i, interval=timeout/delay;        
 604              		.loc 1 174 0
 605 001a 7A68     		ldr	r2, [r7, #4]
 606 001c FB69     		ldr	r3, [r7, #28]
 607 001e B2FBF3F3 		udiv	r3, r2, r3
 608 0022 BB61     		str	r3, [r7, #24]
 175:modem.c       ****         
 176:modem.c       ****         // Clear and reset the uart_received_string variable and uart_string_index for the next tra
 177:modem.c       ****         uart_string_reset();
 609              		.loc 1 177 0
 610 0024 FFF7FEFF 		bl	uart_string_reset
 178:modem.c       ****         
 179:modem.c       ****         // Sends a NULL terminated string to the TX buffer for transmission.
 180:modem.c       ****         UART_Telit_PutString(commands);
 611              		.loc 1 180 0
 612 0028 F868     		ldr	r0, [r7, #12]
 613 002a FFF7FEFF 		bl	UART_Telit_PutString
 181:modem.c       ****         
 182:modem.c       ****         
 183:modem.c       ****         // If no timeout, no need to wait for response
 184:modem.c       ****         if(timeout == NO_AT_TIMEOUT){
 614              		.loc 1 184 0
 615 002e 7B68     		ldr	r3, [r7, #4]
 616 0030 002B     		cmp	r3, #0
 617 0032 06D1     		bne	.L35
 185:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem sent AT command without timeout: %s\r\n", commands);
 618              		.loc 1 185 0
 619 0034 FA68     		ldr	r2, [r7, #12]
 620 0036 1F49     		ldr	r1, .L43
 621 0038 0020     		movs	r0, #0
 622 003a FFF7FEFF 		bl	printNotif
 186:modem.c       ****             return 1u;
 623              		.loc 1 186 0
 624 003e 0123     		movs	r3, #1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 16


 625 0040 34E0     		b	.L36
 626              	.L35:
 187:modem.c       ****         }
 188:modem.c       ****       
 189:modem.c       ****      
 190:modem.c       ****         for(i=0;i<interval;i++){ 
 627              		.loc 1 190 0
 628 0042 0023     		movs	r3, #0
 629 0044 3B62     		str	r3, [r7, #32]
 630 0046 20E0     		b	.L37
 631              	.L41:
 191:modem.c       ****             CyDelay((uint32) delay);
 632              		.loc 1 191 0
 633 0048 F869     		ldr	r0, [r7, #28]
 634 004a FFF7FEFF 		bl	CyDelay
 192:modem.c       ****             // strstr(const char *haystack, const char *needle) function finds the first occurrence
 193:modem.c       ****             // Returns a pointer to the first occurrence in haystack of any of the entire sequence 
 194:modem.c       ****             compare_location=strstr(uart_received_string,expected_response);        
 635              		.loc 1 194 0
 636 004e B968     		ldr	r1, [r7, #8]
 637 0050 1948     		ldr	r0, .L43+4
 638 0052 FFF7FEFF 		bl	strstr
 639 0056 7861     		str	r0, [r7, #20]
 195:modem.c       ****             if(compare_location!=NULL) {
 640              		.loc 1 195 0
 641 0058 7B69     		ldr	r3, [r7, #20]
 642 005a 002B     		cmp	r3, #0
 643 005c 12D0     		beq	.L38
 196:modem.c       ****                 if (at_attempt == 0){
 644              		.loc 1 196 0
 645 005e 7B6A     		ldr	r3, [r7, #36]
 646 0060 002B     		cmp	r3, #0
 647 0062 06D1     		bne	.L39
 197:modem.c       ****                     // we add \n for new line to make it easier to decipher
 198:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT,"Modem Received expected AT Response on first Try:\
 648              		.loc 1 198 0
 649 0064 144B     		ldr	r3, .L43+4
 650 0066 FA68     		ldr	r2, [r7, #12]
 651 0068 1449     		ldr	r1, .L43+8
 652 006a 0020     		movs	r0, #0
 653 006c FFF7FEFF 		bl	printNotif
 654 0070 06E0     		b	.L40
 655              	.L39:
 199:modem.c       ****                 }else{
 200:modem.c       ****                     printNotif(NOTIF_TYPE_WARNING,"Modem required %d tries to receive AT Response: 
 656              		.loc 1 200 0
 657 0072 7B6A     		ldr	r3, [r7, #36]
 658 0074 5A1C     		adds	r2, r3, #1
 659 0076 104B     		ldr	r3, .L43+4
 660 0078 1149     		ldr	r1, .L43+12
 661 007a 0120     		movs	r0, #1
 662 007c FFF7FEFF 		bl	printNotif
 663              	.L40:
 201:modem.c       ****                  
 202:modem.c       ****                 }
 203:modem.c       ****                 return(1);
 664              		.loc 1 203 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 17


 665 0080 0123     		movs	r3, #1
 666 0082 13E0     		b	.L36
 667              	.L38:
 190:modem.c       ****             CyDelay((uint32) delay);
 668              		.loc 1 190 0 discriminator 2
 669 0084 3B6A     		ldr	r3, [r7, #32]
 670 0086 0133     		adds	r3, r3, #1
 671 0088 3B62     		str	r3, [r7, #32]
 672              	.L37:
 190:modem.c       ****             CyDelay((uint32) delay);
 673              		.loc 1 190 0 is_stmt 0 discriminator 1
 674 008a 3A6A     		ldr	r2, [r7, #32]
 675 008c BB69     		ldr	r3, [r7, #24]
 676 008e 9A42     		cmp	r2, r3
 677 0090 DAD3     		bcc	.L41
 204:modem.c       ****             }
 205:modem.c       ****             
 206:modem.c       ****         }  
 207:modem.c       ****         
 208:modem.c       ****         // Something went wrong, restart UART
 209:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not write AT command: %s\n Received: %s\n", commands,uar
 678              		.loc 1 209 0 is_stmt 1 discriminator 2
 679 0092 094B     		ldr	r3, .L43+4
 680 0094 FA68     		ldr	r2, [r7, #12]
 681 0096 0B49     		ldr	r1, .L43+16
 682 0098 0220     		movs	r0, #2
 683 009a FFF7FEFF 		bl	printNotif
 684              	.LBE4:
 170:modem.c       ****         
 685              		.loc 1 170 0 discriminator 2
 686 009e 7B6A     		ldr	r3, [r7, #36]
 687 00a0 0133     		adds	r3, r3, #1
 688 00a2 7B62     		str	r3, [r7, #36]
 689              	.L34:
 170:modem.c       ****         
 690              		.loc 1 170 0 is_stmt 0 discriminator 1
 691 00a4 7B6A     		ldr	r3, [r7, #36]
 692 00a6 022B     		cmp	r3, #2
 693 00a8 B5D9     		bls	.L42
 210:modem.c       ****       
 211:modem.c       ****     }
 212:modem.c       ****    // printNotif(NOTIF_TYPE_ERROR,"Modem AT response timeout: %s\r\n", commands);
 213:modem.c       ****           
 214:modem.c       ****     return(0);    
 694              		.loc 1 214 0 is_stmt 1
 695 00aa 0023     		movs	r3, #0
 696              	.L36:
 215:modem.c       **** }
 697              		.loc 1 215 0
 698 00ac 1846     		mov	r0, r3
 699 00ae 2837     		adds	r7, r7, #40
 700              		.cfi_def_cfa_offset 8
 701 00b0 BD46     		mov	sp, r7
 702              		.cfi_def_cfa_register 13
 703              		@ sp needed
 704 00b2 80BD     		pop	{r7, pc}
 705              	.L44:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 18


 706              		.align	2
 707              	.L43:
 708 00b4 78000000 		.word	.LC6
 709 00b8 00000000 		.word	uart_received_string
 710 00bc A4000000 		.word	.LC7
 711 00c0 F4000000 		.word	.LC8
 712 00c4 2C010000 		.word	.LC9
 713              		.cfi_endproc
 714              	.LFE72:
 715              		.size	at_write_command, .-at_write_command
 716              		.section	.rodata
 717 015a 0000     		.align	2
 718              	.LC10:
 719 015c 54455354 		.ascii	"TEST_MODEM\000"
 719      5F4D4F44 
 719      454D00
 720 0167 00       		.align	2
 721              	.LC11:
 722 0168 4E6F2072 		.ascii	"No reponse from modem.\000"
 722      65706F6E 
 722      73652066 
 722      726F6D20 
 722      6D6F6465 
 723 017f 00       		.align	2
 724              	.LC12:
 725 0180 4D6F6465 		.ascii	"Modem connected to network.\000"
 725      6D20636F 
 725      6E6E6563 
 725      74656420 
 725      746F206E 
 726              		.section	.text.modem_test,"ax",%progbits
 727              		.align	2
 728              		.global	modem_test
 729              		.thumb
 730              		.thumb_func
 731              		.type	modem_test, %function
 732              	modem_test:
 733              	.LFB73:
 216:modem.c       **** 
 217:modem.c       **** // Test modem -- needs fleshed out
 218:modem.c       **** test_t modem_test(){
 734              		.loc 1 218 0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 408
 737              		@ frame_needed = 1, uses_anonymous_args = 0
 738 0000 B0B5     		push	{r4, r5, r7, lr}
 739              		.cfi_def_cfa_offset 16
 740              		.cfi_offset 4, -16
 741              		.cfi_offset 5, -12
 742              		.cfi_offset 7, -8
 743              		.cfi_offset 14, -4
 744 0002 E6B0     		sub	sp, sp, #408
 745              		.cfi_def_cfa_offset 424
 746 0004 00AF     		add	r7, sp, #0
 747              		.cfi_def_cfa_register 7
 748 0006 3B1D     		adds	r3, r7, #4
 749 0008 1860     		str	r0, [r3]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 19


 219:modem.c       ****     
 220:modem.c       ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
 221:modem.c       ****     test.status = 0;
 750              		.loc 1 221 0
 751 000a 07F10C03 		add	r3, r7, #12
 752 000e 0022     		movs	r2, #0
 753 0010 83F88020 		strb	r2, [r3, #128]
 222:modem.c       ****     // Print test name and test reason
 223:modem.c       ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_MODEM");
 754              		.loc 1 223 0
 755 0014 07F10C03 		add	r3, r7, #12
 756 0018 354A     		ldr	r2, .L53
 757 001a 07CA     		ldmia	r2, {r0, r1, r2}
 758 001c 03C3     		stmia	r3!, {r0, r1}
 759 001e 1A80     		strh	r2, [r3]	@ movhi
 760 0020 0233     		adds	r3, r3, #2
 761 0022 120C     		lsrs	r2, r2, #16
 762 0024 1A70     		strb	r2, [r3]
 224:modem.c       ****     snprintf(test.reason,sizeof(test.reason),"No reponse from modem.");
 763              		.loc 1 224 0
 764 0026 07F10C03 		add	r3, r7, #12
 765 002a 8133     		adds	r3, r3, #129
 766 002c 314A     		ldr	r2, .L53+4
 767 002e 1C46     		mov	r4, r3
 768 0030 1546     		mov	r5, r2
 769 0032 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 770 0034 2060     		str	r0, [r4]	@ unaligned
 771 0036 6160     		str	r1, [r4, #4]	@ unaligned
 772 0038 A260     		str	r2, [r4, #8]	@ unaligned
 773 003a E360     		str	r3, [r4, #12]	@ unaligned
 774 003c 2868     		ldr	r0, [r5]	@ unaligned
 775 003e 2061     		str	r0, [r4, #16]	@ unaligned
 776 0040 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 777 0042 AA79     		ldrb	r2, [r5, #6]
 778 0044 A382     		strh	r3, [r4, #20]	@ unaligned
 779 0046 1346     		mov	r3, r2
 780 0048 A375     		strb	r3, [r4, #22]
 781              	.LBB5:
 225:modem.c       ****    
 226:modem.c       ****     //try the modem 60*100 (60 secs)
 227:modem.c       ****     for(int i = 0; i< 60; i++){
 782              		.loc 1 227 0
 783 004a 0023     		movs	r3, #0
 784 004c C7F89431 		str	r3, [r7, #404]
 785 0050 39E0     		b	.L46
 786              	.L51:
 228:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 229:modem.c       ****         modem_process_tasks();
 787              		.loc 1 229 0
 788 0052 FFF7FEFF 		bl	modem_process_tasks
 230:modem.c       ****          
 231:modem.c       ****         if(modem_get_state() == MODEM_STATE_OFF){
 789              		.loc 1 231 0
 790 0056 FFF7FEFF 		bl	modem_get_state
 791 005a 0346     		mov	r3, r0
 792 005c 002B     		cmp	r3, #0
 793 005e 02D1     		bne	.L47
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 20


 232:modem.c       ****             // This puts all the modem points into a state that won't leak power
 233:modem.c       ****             modem_power_up();
 794              		.loc 1 233 0
 795 0060 FFF7FEFF 		bl	modem_power_up
 796 0064 27E0     		b	.L48
 797              	.L47:
 234:modem.c       ****             // Should put this on a max_try counter, so we don't just keep trying to connect over a
 235:modem.c       ****             
 236:modem.c       ****         }else if(modem_get_state() == MODEM_STATE_READY){
 798              		.loc 1 236 0
 799 0066 FFF7FEFF 		bl	modem_get_state
 800 006a 0346     		mov	r3, r0
 801 006c 042B     		cmp	r3, #4
 802 006e 22D1     		bne	.L48
 803              	.LBB6:
 237:modem.c       ****         
 238:modem.c       ****         
 239:modem.c       ****         // Get time, and if it looks good, set the RTC with it
 240:modem.c       ****         long network_time = modem_get_network_time();
 804              		.loc 1 240 0
 805 0070 FFF7FEFF 		bl	modem_get_network_time
 806 0074 C7F89001 		str	r0, [r7, #400]
 241:modem.c       ****         if(network_time != 0){
 807              		.loc 1 241 0
 808 0078 D7F89031 		ldr	r3, [r7, #400]
 809 007c 002B     		cmp	r3, #0
 810 007e 03D0     		beq	.L49
 242:modem.c       ****             setTime(network_time); // Set the system time 
 811              		.loc 1 242 0
 812 0080 D7F89001 		ldr	r0, [r7, #400]
 813 0084 FFF7FEFF 		bl	setTime
 814              	.L49:
 243:modem.c       ****         }
 244:modem.c       ****             
 245:modem.c       ****         snprintf(test.reason,sizeof(test.reason),"Modem connected to network.");
 815              		.loc 1 245 0
 816 0088 07F10C03 		add	r3, r7, #12
 817 008c 8133     		adds	r3, r3, #129
 818 008e 1A4A     		ldr	r2, .L53+8
 819 0090 1D46     		mov	r5, r3
 820 0092 1446     		mov	r4, r2
 821 0094 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 822 0096 2860     		str	r0, [r5]	@ unaligned
 823 0098 6960     		str	r1, [r5, #4]	@ unaligned
 824 009a AA60     		str	r2, [r5, #8]	@ unaligned
 825 009c EB60     		str	r3, [r5, #12]	@ unaligned
 826 009e 07CC     		ldmia	r4!, {r0, r1, r2}
 827 00a0 2861     		str	r0, [r5, #16]	@ unaligned
 828 00a2 6961     		str	r1, [r5, #20]	@ unaligned
 829 00a4 AA61     		str	r2, [r5, #24]	@ unaligned
 246:modem.c       ****         test.status = 1;
 830              		.loc 1 246 0
 831 00a6 07F10C03 		add	r3, r7, #12
 832 00aa 0122     		movs	r2, #1
 833 00ac 83F88020 		strb	r2, [r3, #128]
 247:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 248:modem.c       ****         modem_power_down();
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 21


 834              		.loc 1 248 0
 835 00b0 FFF7FEFF 		bl	modem_power_down
 249:modem.c       ****         break;
 836              		.loc 1 249 0
 837 00b4 0BE0     		b	.L50
 838              	.L48:
 839              	.LBE6:
 250:modem.c       ****         
 251:modem.c       ****       }
 252:modem.c       ****         CyDelay(100u);
 840              		.loc 1 252 0 discriminator 2
 841 00b6 6420     		movs	r0, #100
 842 00b8 FFF7FEFF 		bl	CyDelay
 227:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 843              		.loc 1 227 0 discriminator 2
 844 00bc D7F89431 		ldr	r3, [r7, #404]
 845 00c0 0133     		adds	r3, r3, #1
 846 00c2 C7F89431 		str	r3, [r7, #404]
 847              	.L46:
 227:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 848              		.loc 1 227 0 is_stmt 0 discriminator 1
 849 00c6 D7F89431 		ldr	r3, [r7, #404]
 850 00ca 3B2B     		cmp	r3, #59
 851 00cc C1DD     		ble	.L51
 852              	.L50:
 853              	.LBE5:
 253:modem.c       ****         
 254:modem.c       ****     }
 255:modem.c       ****     
 256:modem.c       ****     return test;
 854              		.loc 1 256 0 is_stmt 1
 855 00ce 3B1D     		adds	r3, r7, #4
 856 00d0 1A68     		ldr	r2, [r3]
 857 00d2 07F10C03 		add	r3, r7, #12
 858 00d6 1046     		mov	r0, r2
 859 00d8 1946     		mov	r1, r3
 860 00da 40F28113 		movw	r3, #385
 861 00de 1A46     		mov	r2, r3
 862 00e0 FFF7FEFF 		bl	memcpy
 257:modem.c       **** }
 863              		.loc 1 257 0
 864 00e4 3B1D     		adds	r3, r7, #4
 865 00e6 1868     		ldr	r0, [r3]
 866 00e8 07F5CC77 		add	r7, r7, #408
 867              		.cfi_def_cfa_offset 16
 868 00ec BD46     		mov	sp, r7
 869              		.cfi_def_cfa_register 13
 870              		@ sp needed
 871 00ee B0BD     		pop	{r4, r5, r7, pc}
 872              	.L54:
 873              		.align	2
 874              	.L53:
 875 00f0 5C010000 		.word	.LC10
 876 00f4 68010000 		.word	.LC11
 877 00f8 80010000 		.word	.LC12
 878              		.cfi_endproc
 879              	.LFE73:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 22


 880              		.size	modem_test, .-modem_test
 881              		.section	.text.extract_string,"ax",%progbits
 882              		.align	2
 883              		.global	extract_string
 884              		.thumb
 885              		.thumb_func
 886              		.type	extract_string, %function
 887              	extract_string:
 888              	.LFB74:
 258:modem.c       **** 
 259:modem.c       **** // Extract string from the UART
 260:modem.c       **** uint8 extract_string(char* from, const char* beginMarker, const char* endMarker,  char* target){
 889              		.loc 1 260 0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 24
 892              		@ frame_needed = 1, uses_anonymous_args = 0
 893 0000 80B5     		push	{r7, lr}
 894              		.cfi_def_cfa_offset 8
 895              		.cfi_offset 7, -8
 896              		.cfi_offset 14, -4
 897 0002 86B0     		sub	sp, sp, #24
 898              		.cfi_def_cfa_offset 32
 899 0004 00AF     		add	r7, sp, #0
 900              		.cfi_def_cfa_register 7
 901 0006 F860     		str	r0, [r7, #12]
 902 0008 B960     		str	r1, [r7, #8]
 903 000a 7A60     		str	r2, [r7, #4]
 904 000c 3B60     		str	r3, [r7]
 261:modem.c       ****     
 262:modem.c       ****         char *a, *b;
 263:modem.c       ****   
 264:modem.c       ****         // Expect the UART to contain something like "+CESQ: ##,##,##,##,##,##\r\n\r\nOK"
 265:modem.c       ****         // - Search for "+CESQ: ".  Place the starting pointer, a, at the resulting index
 266:modem.c       ****         a = strstr(from,beginMarker);
 905              		.loc 1 266 0
 906 000e B968     		ldr	r1, [r7, #8]
 907 0010 F868     		ldr	r0, [r7, #12]
 908 0012 FFF7FEFF 		bl	strstr
 909 0016 7861     		str	r0, [r7, #20]
 267:modem.c       ****         if (a == NULL) {
 910              		.loc 1 267 0
 911 0018 7B69     		ldr	r3, [r7, #20]
 912 001a 002B     		cmp	r3, #0
 913 001c 01D1     		bne	.L56
 268:modem.c       ****             //puts("+CESQ: not found in uart_received_string");
 269:modem.c       ****             a = from;
 914              		.loc 1 269 0
 915 001e FB68     		ldr	r3, [r7, #12]
 916 0020 7B61     		str	r3, [r7, #20]
 917              	.L56:
 270:modem.c       ****         }
 271:modem.c       ****         // The strlen() function calculates the length of a given string.
 272:modem.c       ****         a += strlen(beginMarker);
 918              		.loc 1 272 0
 919 0022 B868     		ldr	r0, [r7, #8]
 920 0024 FFF7FEFF 		bl	strlen
 921 0028 0246     		mov	r2, r0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 23


 922 002a 7B69     		ldr	r3, [r7, #20]
 923 002c 1344     		add	r3, r3, r2
 924 002e 7B61     		str	r3, [r7, #20]
 273:modem.c       ****         
 274:modem.c       ****         // - Find the end marking and offset by 1
 275:modem.c       ****         // strstr(const char *haystack, const char *needle) function finds the first occurrence of 
 276:modem.c       ****         // Returns a pointer to the first occurrence in haystack of any of the entire sequence of c
 277:modem.c       ****         b = strstr(a,endMarker);
 925              		.loc 1 277 0
 926 0030 7968     		ldr	r1, [r7, #4]
 927 0032 7869     		ldr	r0, [r7, #20]
 928 0034 FFF7FEFF 		bl	strstr
 929 0038 3861     		str	r0, [r7, #16]
 278:modem.c       ****         if (b == NULL) {
 930              		.loc 1 278 0
 931 003a 3B69     		ldr	r3, [r7, #16]
 932 003c 002B     		cmp	r3, #0
 933 003e 06D1     		bne	.L57
 279:modem.c       ****             // Puts("Comma not found in uart_received_string");
 280:modem.c       ****             b=from+strlen(from);
 934              		.loc 1 280 0
 935 0040 F868     		ldr	r0, [r7, #12]
 936 0042 FFF7FEFF 		bl	strlen
 937 0046 0246     		mov	r2, r0
 938 0048 FB68     		ldr	r3, [r7, #12]
 939 004a 1344     		add	r3, r3, r2
 940 004c 3B61     		str	r3, [r7, #16]
 941              	.L57:
 281:modem.c       ****         }        
 282:modem.c       ****         
 283:modem.c       ****         // Parse the strings and store the respective rssi and fer values
 284:modem.c       ****         strncpy(target,a,b-a);
 942              		.loc 1 284 0
 943 004e 3A69     		ldr	r2, [r7, #16]
 944 0050 7B69     		ldr	r3, [r7, #20]
 945 0052 D31A     		subs	r3, r2, r3
 946 0054 1A46     		mov	r2, r3
 947 0056 7969     		ldr	r1, [r7, #20]
 948 0058 3868     		ldr	r0, [r7]
 949 005a FFF7FEFF 		bl	strncpy
 285:modem.c       ****         target[b-a] = '\0';
 950              		.loc 1 285 0
 951 005e 3A69     		ldr	r2, [r7, #16]
 952 0060 7B69     		ldr	r3, [r7, #20]
 953 0062 D31A     		subs	r3, r2, r3
 954 0064 1A46     		mov	r2, r3
 955 0066 3B68     		ldr	r3, [r7]
 956 0068 1344     		add	r3, r3, r2
 957 006a 0022     		movs	r2, #0
 958 006c 1A70     		strb	r2, [r3]
 286:modem.c       ****         return 1u;
 959              		.loc 1 286 0
 960 006e 0123     		movs	r3, #1
 287:modem.c       ****         
 288:modem.c       **** }
 961              		.loc 1 288 0
 962 0070 1846     		mov	r0, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 24


 963 0072 1837     		adds	r7, r7, #24
 964              		.cfi_def_cfa_offset 8
 965 0074 BD46     		mov	sp, r7
 966              		.cfi_def_cfa_register 13
 967              		@ sp needed
 968 0076 80BD     		pop	{r7, pc}
 969              		.cfi_endproc
 970              	.LFE74:
 971              		.size	extract_string, .-extract_string
 972              		.section	.rodata
 973              		.align	2
 974              	.LC13:
 975 019c 54696D65 		.ascii	"Time to connecto to network: %d seconds\000"
 975      20746F20 
 975      636F6E6E 
 975      6563746F 
 975      20746F20 
 976              		.align	2
 977              	.LC14:
 978 01c4 4D6F6465 		.ascii	"Modem timed out on network connect\000"
 978      6D207469 
 978      6D656420 
 978      6F757420 
 978      6F6E206E 
 979 01e7 00       		.align	2
 980              	.LC15:
 981 01e8 41637175 		.ascii	"Acquired IP address: %d seconds\000"
 981      69726564 
 981      20495020 
 981      61646472 
 981      6573733A 
 982              		.align	2
 983              	.LC16:
 984 0208 4D6F6465 		.ascii	"Modem timed out on IP address acquire.\000"
 984      6D207469 
 984      6D656420 
 984      6F757420 
 984      6F6E2049 
 985              		.section	.text.modem_process_tasks,"ax",%progbits
 986              		.align	2
 987              		.global	modem_process_tasks
 988              		.thumb
 989              		.thumb_func
 990              		.type	modem_process_tasks, %function
 991              	modem_process_tasks:
 992              	.LFB75:
 289:modem.c       **** 
 290:modem.c       **** // Function to startup the modem, connect to the network, and then hand it off to sleep
 291:modem.c       **** uint8 modem_process_tasks(){
 993              		.loc 1 291 0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 0
 996              		@ frame_needed = 1, uses_anonymous_args = 0
 997 0000 80B5     		push	{r7, lr}
 998              		.cfi_def_cfa_offset 8
 999              		.cfi_offset 7, -8
 1000              		.cfi_offset 14, -4
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 25


 1001 0002 00AF     		add	r7, sp, #0
 1002              		.cfi_def_cfa_register 7
 292:modem.c       ****     // If modem state is "startup" then get the modem start time, configure modem settings, and cha
 293:modem.c       ****     if(modem_state == MODEM_STATE_STARTUP){
 1003              		.loc 1 293 0
 1004 0004 394B     		ldr	r3, .L68
 1005 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1006 0008 012B     		cmp	r3, #1
 1007 000a 0BD1     		bne	.L60
 294:modem.c       ****         
 295:modem.c       ****         modem_start_time_stamp = getTimeStamp(); // Get timestamp for modem start time
 1008              		.loc 1 295 0
 1009 000c FFF7FEFF 		bl	getTimeStamp
 1010 0010 0246     		mov	r2, r0
 1011 0012 374B     		ldr	r3, .L68+4
 1012 0014 1A60     		str	r2, [r3]
 296:modem.c       ****         modem_configure_settings(); // Configure modem settings
 1013              		.loc 1 296 0
 1014 0016 FFF7FEFF 		bl	modem_configure_settings
 297:modem.c       ****         modem_state = MODEM_STATE_WAITING_FOR_NETWORK; // Change modem state 
 1015              		.loc 1 297 0
 1016 001a 344B     		ldr	r3, .L68
 1017 001c 0222     		movs	r2, #2
 1018 001e 1A70     		strb	r2, [r3]
 298:modem.c       ****         return 1u; // Keep going, don't hand off to sleep yet
 1019              		.loc 1 298 0
 1020 0020 0123     		movs	r3, #1
 1021 0022 60E0     		b	.L61
 1022              	.L60:
 299:modem.c       ****         
 300:modem.c       ****     }
 301:modem.c       ****     // Else if modem state is "waiting for network" 
 302:modem.c       ****     else if(modem_state == MODEM_STATE_WAITING_FOR_NETWORK){
 1023              		.loc 1 302 0
 1024 0024 314B     		ldr	r3, .L68
 1025 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1026 0028 022B     		cmp	r3, #2
 1027 002a 2DD1     		bne	.L62
 303:modem.c       ****         // If modem connected to the cell network, save/print the time to connect to the network
 304:modem.c       ****         if(is_connected_to_cell_network()){
 1028              		.loc 1 304 0
 1029 002c FFF7FEFF 		bl	is_connected_to_cell_network
 1030 0030 0346     		mov	r3, r0
 1031 0032 002B     		cmp	r3, #0
 1032 0034 15D0     		beq	.L63
 305:modem.c       ****       
 306:modem.c       ****              modem_stats.time_to_network_connect = (int)(getTimeStamp() - (int32)modem_start_time_s
 1033              		.loc 1 306 0
 1034 0036 FFF7FEFF 		bl	getTimeStamp
 1035 003a 0246     		mov	r2, r0
 1036 003c 2C4B     		ldr	r3, .L68+4
 1037 003e 1B68     		ldr	r3, [r3]
 1038 0040 D31A     		subs	r3, r2, r3
 1039 0042 2C4A     		ldr	r2, .L68+8
 1040 0044 9360     		str	r3, [r2, #8]
 307:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Time to connecto to network: %d seconds",
 1041              		.loc 1 307 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 26


 1042 0046 2B4B     		ldr	r3, .L68+8
 1043 0048 9B68     		ldr	r3, [r3, #8]
 1044 004a 1A46     		mov	r2, r3
 1045 004c 2A49     		ldr	r1, .L68+12
 1046 004e 0020     		movs	r0, #0
 1047 0050 FFF7FEFF 		bl	printNotif
 308:modem.c       ****                                             modem_stats.time_to_network_connect);
 309:modem.c       ****             get_cell_network_stats(); // Get cell network stats
 1048              		.loc 1 309 0
 1049 0054 FFF7FEFF 		bl	get_cell_network_stats
 310:modem.c       ****             set_up_internet_connection(); // Setup the internet connection
 1050              		.loc 1 310 0
 1051 0058 FFF7FEFF 		bl	set_up_internet_connection
 311:modem.c       ****             modem_state = MODEM_STATE_WAITING_FOR_IP; // Change modem state 
 1052              		.loc 1 311 0
 1053 005c 234B     		ldr	r3, .L68
 1054 005e 0322     		movs	r2, #3
 1055 0060 1A70     		strb	r2, [r3]
 1056              	.L63:
 312:modem.c       ****         }
 313:modem.c       **** 
 314:modem.c       ****         //power off if we times out shold only take ~30 secs to connect to network
 315:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_NETWORK_CONNECT){
 1057              		.loc 1 315 0
 1058 0062 FFF7FEFF 		bl	getTimeStamp
 1059 0066 0246     		mov	r2, r0
 1060 0068 214B     		ldr	r3, .L68+4
 1061 006a 1B68     		ldr	r3, [r3]
 1062 006c D31A     		subs	r3, r2, r3
 1063 006e C82B     		cmp	r3, #200
 1064 0070 08DD     		ble	.L64
 316:modem.c       ****             modem_state = MODEM_STATE_OFF; // Change modem state
 1065              		.loc 1 316 0
 1066 0072 1E4B     		ldr	r3, .L68
 1067 0074 0022     		movs	r2, #0
 1068 0076 1A70     		strb	r2, [r3]
 317:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1069              		.loc 1 317 0
 1070 0078 FFF7FEFF 		bl	modem_power_down
 318:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on network connect");
 1071              		.loc 1 318 0
 1072 007c 1F49     		ldr	r1, .L68+16
 1073 007e 0220     		movs	r0, #2
 1074 0080 FFF7FEFF 		bl	printNotif
 1075              	.L64:
 319:modem.c       ****             
 320:modem.c       ****         }
 321:modem.c       ****         
 322:modem.c       ****         return 0u;//ok to hand off to sleep
 1076              		.loc 1 322 0
 1077 0084 0023     		movs	r3, #0
 1078 0086 2EE0     		b	.L61
 1079              	.L62:
 323:modem.c       ****         
 324:modem.c       ****     // Else if modem state is "waiting for IP"
 325:modem.c       ****     }else if(modem_state == MODEM_STATE_WAITING_FOR_IP){
 1080              		.loc 1 325 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 27


 1081 0088 184B     		ldr	r3, .L68
 1082 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1083 008c 032B     		cmp	r3, #3
 1084 008e 29D1     		bne	.L65
 326:modem.c       ****         // If the modem is connected to the internet, change modem state to "ready", save/print tim
 327:modem.c       ****         if(is_connected_to_internet()){
 1085              		.loc 1 327 0
 1086 0090 FFF7FEFF 		bl	is_connected_to_internet
 1087 0094 0346     		mov	r3, r0
 1088 0096 002B     		cmp	r3, #0
 1089 0098 11D0     		beq	.L66
 328:modem.c       ****             modem_state = MODEM_STATE_READY; // Change modem state
 1090              		.loc 1 328 0
 1091 009a 144B     		ldr	r3, .L68
 1092 009c 0422     		movs	r2, #4
 1093 009e 1A70     		strb	r2, [r3]
 329:modem.c       ****             // Save/print time to acquire IP address
 330:modem.c       ****             modem_stats.time_to_acquire_ip = (int)(getTimeStamp() - (int32)modem_start_time_stamp);
 1094              		.loc 1 330 0
 1095 00a0 FFF7FEFF 		bl	getTimeStamp
 1096 00a4 0246     		mov	r2, r0
 1097 00a6 124B     		ldr	r3, .L68+4
 1098 00a8 1B68     		ldr	r3, [r3]
 1099 00aa D31A     		subs	r3, r2, r3
 1100 00ac 114A     		ldr	r2, .L68+8
 1101 00ae D360     		str	r3, [r2, #12]
 331:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Acquired IP address: %d seconds",
 1102              		.loc 1 331 0
 1103 00b0 104B     		ldr	r3, .L68+8
 1104 00b2 DB68     		ldr	r3, [r3, #12]
 1105 00b4 1A46     		mov	r2, r3
 1106 00b6 1249     		ldr	r1, .L68+20
 1107 00b8 0020     		movs	r0, #0
 1108 00ba FFF7FEFF 		bl	printNotif
 1109              	.L66:
 332:modem.c       ****                                             modem_stats.time_to_acquire_ip);
 333:modem.c       ****         }
 334:modem.c       ****         
 335:modem.c       ****         // Power off if we times out shold only take ~30 secs to connect to network
 336:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_IP_ACQUIRE){
 1110              		.loc 1 336 0
 1111 00be FFF7FEFF 		bl	getTimeStamp
 1112 00c2 0246     		mov	r2, r0
 1113 00c4 0A4B     		ldr	r3, .L68+4
 1114 00c6 1B68     		ldr	r3, [r3]
 1115 00c8 D31A     		subs	r3, r2, r3
 1116 00ca E62B     		cmp	r3, #230
 1117 00cc 08DD     		ble	.L67
 337:modem.c       ****             modem_state = MODEM_STATE_OFF;
 1118              		.loc 1 337 0
 1119 00ce 074B     		ldr	r3, .L68
 1120 00d0 0022     		movs	r2, #0
 1121 00d2 1A70     		strb	r2, [r3]
 338:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1122              		.loc 1 338 0
 1123 00d4 FFF7FEFF 		bl	modem_power_down
 339:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on IP address acquire.");
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 28


 1124              		.loc 1 339 0
 1125 00d8 0A49     		ldr	r1, .L68+24
 1126 00da 0220     		movs	r0, #2
 1127 00dc FFF7FEFF 		bl	printNotif
 1128              	.L67:
 340:modem.c       ****       
 341:modem.c       ****         }
 342:modem.c       ****         return 0u;//ok to hand off to sleep
 1129              		.loc 1 342 0
 1130 00e0 0023     		movs	r3, #0
 1131 00e2 00E0     		b	.L61
 1132              	.L65:
 343:modem.c       ****     }
 344:modem.c       ****     
 345:modem.c       ****     return 0u;
 1133              		.loc 1 345 0
 1134 00e4 0023     		movs	r3, #0
 1135              	.L61:
 346:modem.c       ****     
 347:modem.c       **** }
 1136              		.loc 1 347 0
 1137 00e6 1846     		mov	r0, r3
 1138 00e8 80BD     		pop	{r7, pc}
 1139              	.L69:
 1140 00ea 00BF     		.align	2
 1141              	.L68:
 1142 00ec 00000000 		.word	modem_state
 1143 00f0 00000000 		.word	modem_start_time_stamp
 1144 00f4 00000000 		.word	modem_stats
 1145 00f8 9C010000 		.word	.LC13
 1146 00fc C4010000 		.word	.LC14
 1147 0100 E8010000 		.word	.LC15
 1148 0104 08020000 		.word	.LC16
 1149              		.cfi_endproc
 1150              	.LFE75:
 1151              		.size	modem_process_tasks, .-modem_process_tasks
 1152              		.section	.rodata
 1153 022f 00       		.align	2
 1154              	.LC17:
 1155 0230 43686563 		.ascii	"Checking AT+CREG?\000"
 1155      6B696E67 
 1155      2041542B 
 1155      43524547 
 1155      3F00
 1156 0242 0000     		.align	2
 1157              	.LC18:
 1158 0244 41542B43 		.ascii	"AT+CREG?\015\000"
 1158      5245473F 
 1158      0D00
 1159 024e 0000     		.align	2
 1160              	.LC19:
 1161 0250 45787472 		.ascii	"Extracting string AT+CREG?\000"
 1161      61637469 
 1161      6E672073 
 1161      7472696E 
 1161      67204154 
 1162 026b 00       		.align	2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 29


 1163              	.LC20:
 1164 026c 75617274 		.ascii	"uart_received_string: %s\000"
 1164      5F726563 
 1164      65697665 
 1164      645F7374 
 1164      72696E67 
 1165 0285 000000   		.align	2
 1166              	.LC21:
 1167 0288 0D00     		.ascii	"\015\000"
 1168 028a 0000     		.align	2
 1169              	.LC22:
 1170 028c 3A2000   		.ascii	": \000"
 1171 028f 00       		.align	2
 1172              	.LC23:
 1173 0290 52656769 		.ascii	"Registered to network, CREG: %s\000"
 1173      73746572 
 1173      65642074 
 1173      6F206E65 
 1173      74776F72 
 1174              		.align	2
 1175              	.LC24:
 1176 02b0 446F6E65 		.ascii	"Done extracing string AT+CREG?\000"
 1176      20657874 
 1176      72616369 
 1176      6E672073 
 1176      7472696E 
 1177 02cf 00       		.align	2
 1178              	.LC25:
 1179 02d0 302C3100 		.ascii	"0,1\000"
 1180              		.section	.text.is_connected_to_cell_network,"ax",%progbits
 1181              		.align	2
 1182              		.global	is_connected_to_cell_network
 1183              		.thumb
 1184              		.thumb_func
 1185              		.type	is_connected_to_cell_network, %function
 1186              	is_connected_to_cell_network:
 1187              	.LFB76:
 348:modem.c       **** 
 349:modem.c       **** // Checks network status, writes commands to the modem, then extracts string from UART
 350:modem.c       **** uint8 is_connected_to_cell_network(){
 1188              		.loc 1 350 0
 1189              		.cfi_startproc
 1190              		@ args = 0, pretend = 0, frame = 16
 1191              		@ frame_needed = 1, uses_anonymous_args = 0
 1192 0000 80B5     		push	{r7, lr}
 1193              		.cfi_def_cfa_offset 8
 1194              		.cfi_offset 7, -8
 1195              		.cfi_offset 14, -4
 1196 0002 84B0     		sub	sp, sp, #16
 1197              		.cfi_def_cfa_offset 24
 1198 0004 00AF     		add	r7, sp, #0
 1199              		.cfi_def_cfa_register 7
 351:modem.c       ****     // AT command AT+CREG? is the Network Registration Report to check network status -- need '0,0'
 352:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Checking AT+CREG?");
 1200              		.loc 1 352 0
 1201 0006 1B49     		ldr	r1, .L74
 1202 0008 0020     		movs	r0, #0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 30


 1203 000a FFF7FEFF 		bl	printNotif
 353:modem.c       ****     // create new uint8 variable stust and set to equal the output of the function at_write_command
 354:modem.c       ****     uint8 status = at_write_command("AT+CREG?\r", "OK",DEFAULT_AT_TIMEOUT);
 1204              		.loc 1 354 0
 1205 000e 4FF4FA62 		mov	r2, #2000
 1206 0012 1949     		ldr	r1, .L74+4
 1207 0014 1948     		ldr	r0, .L74+8
 1208 0016 FFF7FEFF 		bl	at_write_command
 1209 001a 0346     		mov	r3, r0
 1210 001c FB73     		strb	r3, [r7, #15]
 355:modem.c       ****     
 356:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Extracting string AT+CREG?");
 1211              		.loc 1 356 0
 1212 001e 1849     		ldr	r1, .L74+12
 1213 0020 0020     		movs	r0, #0
 1214 0022 FFF7FEFF 		bl	printNotif
 357:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"uart_received_string: %s",uart_received_string);
 1215              		.loc 1 357 0
 1216 0026 174A     		ldr	r2, .L74+16
 1217 0028 1749     		ldr	r1, .L74+20
 1218 002a 0020     		movs	r0, #0
 1219 002c FFF7FEFF 		bl	printNotif
 358:modem.c       ****     
 359:modem.c       ****     // If the modem has a status
 360:modem.c       ****     if(status){
 1220              		.loc 1 360 0
 1221 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1222 0032 002B     		cmp	r3, #0
 1223 0034 19D0     		beq	.L71
 1224              	.LBB7:
 361:modem.c       ****         // Create a character array of length 10 called creg
 362:modem.c       ****         char creg[10];
 363:modem.c       ****         // Extract string from the UART
 364:modem.c       ****         extract_string(uart_received_string,": ","\r",creg);
 1225              		.loc 1 364 0
 1226 0036 3B1D     		adds	r3, r7, #4
 1227 0038 144A     		ldr	r2, .L74+24
 1228 003a 1549     		ldr	r1, .L74+28
 1229 003c 1148     		ldr	r0, .L74+16
 1230 003e FFF7FEFF 		bl	extract_string
 365:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Registered to network, CREG: %s",creg);
 1231              		.loc 1 365 0
 1232 0042 3B1D     		adds	r3, r7, #4
 1233 0044 1A46     		mov	r2, r3
 1234 0046 1349     		ldr	r1, .L74+32
 1235 0048 0020     		movs	r0, #0
 1236 004a FFF7FEFF 		bl	printNotif
 366:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Done extracing string AT+CREG?");
 1237              		.loc 1 366 0
 1238 004e 1249     		ldr	r1, .L74+36
 1239 0050 0020     		movs	r0, #0
 1240 0052 FFF7FEFF 		bl	printNotif
 367:modem.c       ****     
 368:modem.c       ****         // Search creg for "0,1", if "0,1" exists, it will return 1u otherwise it will return NULL
 369:modem.c       ****         // If it returns 1u and not NULL, then return 1u
 370:modem.c       ****         if(strstr(creg,"0,1")!=NULL){
 1241              		.loc 1 370 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 31


 1242 0056 3B1D     		adds	r3, r7, #4
 1243 0058 1049     		ldr	r1, .L74+40
 1244 005a 1846     		mov	r0, r3
 1245 005c FFF7FEFF 		bl	strstr
 1246 0060 0346     		mov	r3, r0
 1247 0062 002B     		cmp	r3, #0
 1248 0064 01D0     		beq	.L71
 371:modem.c       ****             //time_network_connect = getTimeStamp();
 372:modem.c       ****             return 1u;
 1249              		.loc 1 372 0
 1250 0066 0123     		movs	r3, #1
 1251 0068 00E0     		b	.L73
 1252              	.L71:
 1253              	.LBE7:
 373:modem.c       ****         }
 374:modem.c       ****     }
 375:modem.c       ****     // If the modem doesn't have a status, return 0u
 376:modem.c       ****     return 0u;
 1254              		.loc 1 376 0
 1255 006a 0023     		movs	r3, #0
 1256              	.L73:
 377:modem.c       ****         
 378:modem.c       **** }
 1257              		.loc 1 378 0
 1258 006c 1846     		mov	r0, r3
 1259 006e 1037     		adds	r7, r7, #16
 1260              		.cfi_def_cfa_offset 8
 1261 0070 BD46     		mov	sp, r7
 1262              		.cfi_def_cfa_register 13
 1263              		@ sp needed
 1264 0072 80BD     		pop	{r7, pc}
 1265              	.L75:
 1266              		.align	2
 1267              	.L74:
 1268 0074 30020000 		.word	.LC17
 1269 0078 00000000 		.word	.LC0
 1270 007c 44020000 		.word	.LC18
 1271 0080 50020000 		.word	.LC19
 1272 0084 00000000 		.word	uart_received_string
 1273 0088 6C020000 		.word	.LC20
 1274 008c 88020000 		.word	.LC21
 1275 0090 8C020000 		.word	.LC22
 1276 0094 90020000 		.word	.LC23
 1277 0098 B0020000 		.word	.LC24
 1278 009c D0020000 		.word	.LC25
 1279              		.cfi_endproc
 1280              	.LFE76:
 1281              		.size	is_connected_to_cell_network, .-is_connected_to_cell_network
 1282              		.section	.rodata
 1283              		.align	2
 1284              	.LC26:
 1285 02d4 41542353 		.ascii	"AT#SGACT=1,1\015\012\000"
 1285      47414354 
 1285      3D312C31 
 1285      0D0A00
 1286              		.section	.text.set_up_internet_connection,"ax",%progbits
 1287              		.align	2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 32


 1288              		.global	set_up_internet_connection
 1289              		.thumb
 1290              		.thumb_func
 1291              		.type	set_up_internet_connection, %function
 1292              	set_up_internet_connection:
 1293              	.LFB77:
 379:modem.c       **** 
 380:modem.c       **** // Connect the modem to the internet
 381:modem.c       **** void set_up_internet_connection(){
 1294              		.loc 1 381 0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 0
 1297              		@ frame_needed = 1, uses_anonymous_args = 0
 1298 0000 80B5     		push	{r7, lr}
 1299              		.cfi_def_cfa_offset 8
 1300              		.cfi_offset 7, -8
 1301              		.cfi_offset 14, -4
 1302 0002 00AF     		add	r7, sp, #0
 1303              		.cfi_def_cfa_register 7
 382:modem.c       ****     
 383:modem.c       ****     //port 3
 384:modem.c       ****    //<connId>,<srMode>,<dataMode>, 
 385:modem.c       ****     //at_write_command("AT#SCFGEXT=1,1,0,0,0,0\r", "OK",DEFAULT_AT_TIMEOUT);////LTE modem relevant
 386:modem.c       ****     
 387:modem.c       ****     //<connId>,<cid>,<pktSz>,<maxTo>,<connTo>,<txTo>
 388:modem.c       ****     //at_write_command("AT#SCFG=1,3,300,90,600,50\r", "OK",DEFAULT_AT_TIMEOUT); //LTE modem relevan
 389:modem.c       ****     // <cid>,<stat>
 390:modem.c       ****    
 391:modem.c       ****     // AT command SGACT is Context Activation command is used to activate the specified PDP context
 392:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",1000u);
 1304              		.loc 1 392 0
 1305 0004 4FF47A72 		mov	r2, #1000
 1306 0008 0249     		ldr	r1, .L77
 1307 000a 0348     		ldr	r0, .L77+4
 1308 000c FFF7FEFF 		bl	at_write_command
 393:modem.c       ****     
 394:modem.c       **** }
 1309              		.loc 1 394 0
 1310 0010 00BF     		nop
 1311 0012 80BD     		pop	{r7, pc}
 1312              	.L78:
 1313              		.align	2
 1314              	.L77:
 1315 0014 00000000 		.word	.LC0
 1316 0018 D4020000 		.word	.LC26
 1317              		.cfi_endproc
 1318              	.LFE77:
 1319              		.size	set_up_internet_connection, .-set_up_internet_connection
 1320              		.section	.rodata
 1321 02e3 00       		.align	2
 1322              	.LC27:
 1323 02e4 312C3100 		.ascii	"1,1\000"
 1324              		.align	2
 1325              	.LC28:
 1326 02e8 41542353 		.ascii	"AT#SGACT?\015\000"
 1326      47414354 
 1326      3F0D00
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 33


 1327              		.section	.text.is_connected_to_internet,"ax",%progbits
 1328              		.align	2
 1329              		.global	is_connected_to_internet
 1330              		.thumb
 1331              		.thumb_func
 1332              		.type	is_connected_to_internet, %function
 1333              	is_connected_to_internet:
 1334              	.LFB78:
 395:modem.c       **** 
 396:modem.c       **** // Checks if the modem is connected to the internet
 397:modem.c       **** uint8 is_connected_to_internet(){
 1335              		.loc 1 397 0
 1336              		.cfi_startproc
 1337              		@ args = 0, pretend = 0, frame = 0
 1338              		@ frame_needed = 1, uses_anonymous_args = 0
 1339 0000 80B5     		push	{r7, lr}
 1340              		.cfi_def_cfa_offset 8
 1341              		.cfi_offset 7, -8
 1342              		.cfi_offset 14, -4
 1343 0002 00AF     		add	r7, sp, #0
 1344              		.cfi_def_cfa_register 7
 398:modem.c       ****     // AT command SGACT? reports the range for the parameters <cid> and <stat>
 399:modem.c       ****     // cid: is the Packet Data Protocol (PDP) Context Identifier which specifies the particular PDP
 400:modem.c       ****     // stat: gives the context staus (0 deactivated and 1 activated)
 401:modem.c       ****     // Check for 3,1 if Verizon 
 402:modem.c       ****     if(at_write_command("AT#SGACT?\r", "1,1",DEFAULT_AT_TIMEOUT)){
 1345              		.loc 1 402 0
 1346 0004 4FF4FA62 		mov	r2, #2000
 1347 0008 0549     		ldr	r1, .L82
 1348 000a 0648     		ldr	r0, .L82+4
 1349 000c FFF7FEFF 		bl	at_write_command
 1350 0010 0346     		mov	r3, r0
 1351 0012 002B     		cmp	r3, #0
 1352 0014 01D0     		beq	.L80
 403:modem.c       ****         return 1u;
 1353              		.loc 1 403 0
 1354 0016 0123     		movs	r3, #1
 1355 0018 00E0     		b	.L81
 1356              	.L80:
 404:modem.c       ****     }
 405:modem.c       ****     return 0u;  
 1357              		.loc 1 405 0
 1358 001a 0023     		movs	r3, #0
 1359              	.L81:
 406:modem.c       **** }
 1360              		.loc 1 406 0
 1361 001c 1846     		mov	r0, r3
 1362 001e 80BD     		pop	{r7, pc}
 1363              	.L83:
 1364              		.align	2
 1365              	.L82:
 1366 0020 E4020000 		.word	.LC27
 1367 0024 E8020000 		.word	.LC28
 1368              		.cfi_endproc
 1369              	.LFE78:
 1370              		.size	is_connected_to_internet, .-is_connected_to_internet
 1371              		.section	.rodata
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 34


 1372 02f3 00       		.align	2
 1373              	.LC29:
 1374 02f4 41542B43 		.ascii	"AT+CESQ\015\000"
 1374      4553510D 
 1374      00
 1375 02fd 000000   		.align	2
 1376              	.LC30:
 1377 0300 4E657477 		.ascii	"Network STts: %s\000"
 1377      6F726B20 
 1377      53547473 
 1377      3A202573 
 1377      00
 1378 0311 000000   		.align	2
 1379              	.LC31:
 1380 0314 2C00     		.ascii	",\000"
 1381              		.section	.text.get_cell_network_stats,"ax",%progbits
 1382              		.align	2
 1383              		.global	get_cell_network_stats
 1384              		.thumb
 1385              		.thumb_func
 1386              		.type	get_cell_network_stats, %function
 1387              	get_cell_network_stats:
 1388              	.LFB79:
 407:modem.c       **** 
 408:modem.c       **** // Get cellular network stats 
 409:modem.c       **** void get_cell_network_stats(){
 1389              		.loc 1 409 0
 1390              		.cfi_startproc
 1391              		@ args = 0, pretend = 0, frame = 24
 1392              		@ frame_needed = 1, uses_anonymous_args = 0
 1393 0000 80B5     		push	{r7, lr}
 1394              		.cfi_def_cfa_offset 8
 1395              		.cfi_offset 7, -8
 1396              		.cfi_offset 14, -4
 1397 0002 86B0     		sub	sp, sp, #24
 1398              		.cfi_def_cfa_offset 32
 1399 0004 00AF     		add	r7, sp, #0
 1400              		.cfi_def_cfa_register 7
 1401              	.LBB8:
 410:modem.c       ****     // Gets RSSI and FER values
 411:modem.c       ****     // RSSI (Received Signal Strength Indicator) is a measurement of how well your device can hear 
 412:modem.c       ****     // RSRQ (Reference Signal Received Quality) (or SQ for short) gives the signal quality. 
 413:modem.c       ****     for(uint8 attempts =0; attempts <10; attempts++){
 1402              		.loc 1 413 0
 1403 0006 0023     		movs	r3, #0
 1404 0008 FB75     		strb	r3, [r7, #23]
 1405 000a 86E0     		b	.L85
 1406              	.L95:
 1407              	.LBB9:
 414:modem.c       ****         // AT command CESQ checks Signal Quality
 415:modem.c       ****         at_write_command("AT+CESQ\r", "OK",DEFAULT_AT_TIMEOUT);
 1408              		.loc 1 415 0
 1409 000c 4FF4FA62 		mov	r2, #2000
 1410 0010 4649     		ldr	r1, .L97
 1411 0012 4748     		ldr	r0, .L97+4
 1412 0014 FFF7FEFF 		bl	at_write_command
 416:modem.c       ****         
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 35


 417:modem.c       ****         char cesq[10]; // Create a character array of length 10 called cesq 
 418:modem.c       ****         // Extract string from the UART
 419:modem.c       ****         extract_string(uart_received_string,": ","\r",cesq);
 1413              		.loc 1 419 0
 1414 0018 3B1D     		adds	r3, r7, #4
 1415 001a 464A     		ldr	r2, .L97+8
 1416 001c 4649     		ldr	r1, .L97+12
 1417 001e 4748     		ldr	r0, .L97+16
 1418 0020 FFF7FEFF 		bl	extract_string
 420:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Network STts: %s",cesq);
 1419              		.loc 1 420 0
 1420 0024 3B1D     		adds	r3, r7, #4
 1421 0026 1A46     		mov	r2, r3
 1422 0028 4549     		ldr	r1, .L97+20
 1423 002a 0020     		movs	r0, #0
 1424 002c FFF7FEFF 		bl	printNotif
 421:modem.c       ****         
 422:modem.c       ****         char *token; // Create a character variable pointer
 423:modem.c       ****         // strtok(): breaks "cesq" into smaller string when sees ","
 424:modem.c       ****         token = strtok(cesq,",");
 1425              		.loc 1 424 0
 1426 0030 3B1D     		adds	r3, r7, #4
 1427 0032 4449     		ldr	r1, .L97+24
 1428 0034 1846     		mov	r0, r3
 1429 0036 FFF7FEFF 		bl	strtok
 1430 003a 3861     		str	r0, [r7, #16]
 425:modem.c       ****         // If token is not NULL then set modem_stats.rssi equal to the integer "token"
 426:modem.c       ****         // int atoi(const char *str) converts the string argument str to an integer (type int).
 427:modem.c       ****         if(token != NULL){
 1431              		.loc 1 427 0
 1432 003c 3B69     		ldr	r3, [r7, #16]
 1433 003e 002B     		cmp	r3, #0
 1434 0040 06D0     		beq	.L86
 428:modem.c       ****             modem_stats.rssi = atoi(token);
 1435              		.loc 1 428 0
 1436 0042 3869     		ldr	r0, [r7, #16]
 1437 0044 FFF7FEFF 		bl	atoi
 1438 0048 0346     		mov	r3, r0
 1439 004a DAB2     		uxtb	r2, r3
 1440 004c 3E4B     		ldr	r3, .L97+28
 1441 004e 1A70     		strb	r2, [r3]
 1442              	.L86:
 429:modem.c       ****         }
 430:modem.c       ****         token = strtok(NULL,",");
 1443              		.loc 1 430 0
 1444 0050 3C49     		ldr	r1, .L97+24
 1445 0052 0020     		movs	r0, #0
 1446 0054 FFF7FEFF 		bl	strtok
 1447 0058 3861     		str	r0, [r7, #16]
 431:modem.c       ****         if(token != NULL){
 1448              		.loc 1 431 0
 1449 005a 3B69     		ldr	r3, [r7, #16]
 1450 005c 002B     		cmp	r3, #0
 1451 005e 06D0     		beq	.L87
 432:modem.c       ****             modem_stats.ber = atoi(token);
 1452              		.loc 1 432 0
 1453 0060 3869     		ldr	r0, [r7, #16]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 36


 1454 0062 FFF7FEFF 		bl	atoi
 1455 0066 0346     		mov	r3, r0
 1456 0068 DAB2     		uxtb	r2, r3
 1457 006a 374B     		ldr	r3, .L97+28
 1458 006c 5A70     		strb	r2, [r3, #1]
 1459              	.L87:
 433:modem.c       ****         }
 434:modem.c       ****         token = strtok(NULL,",");
 1460              		.loc 1 434 0
 1461 006e 3549     		ldr	r1, .L97+24
 1462 0070 0020     		movs	r0, #0
 1463 0072 FFF7FEFF 		bl	strtok
 1464 0076 3861     		str	r0, [r7, #16]
 435:modem.c       ****         if(token != NULL){
 1465              		.loc 1 435 0
 1466 0078 3B69     		ldr	r3, [r7, #16]
 1467 007a 002B     		cmp	r3, #0
 1468 007c 06D0     		beq	.L88
 436:modem.c       ****             modem_stats.rscp = atoi(token);
 1469              		.loc 1 436 0
 1470 007e 3869     		ldr	r0, [r7, #16]
 1471 0080 FFF7FEFF 		bl	atoi
 1472 0084 0346     		mov	r3, r0
 1473 0086 DAB2     		uxtb	r2, r3
 1474 0088 2F4B     		ldr	r3, .L97+28
 1475 008a 9A70     		strb	r2, [r3, #2]
 1476              	.L88:
 437:modem.c       ****         }
 438:modem.c       ****         token = strtok(NULL,",");
 1477              		.loc 1 438 0
 1478 008c 2D49     		ldr	r1, .L97+24
 1479 008e 0020     		movs	r0, #0
 1480 0090 FFF7FEFF 		bl	strtok
 1481 0094 3861     		str	r0, [r7, #16]
 439:modem.c       ****         if(token != NULL){
 1482              		.loc 1 439 0
 1483 0096 3B69     		ldr	r3, [r7, #16]
 1484 0098 002B     		cmp	r3, #0
 1485 009a 06D0     		beq	.L89
 440:modem.c       ****             modem_stats.ecno = atoi(token);
 1486              		.loc 1 440 0
 1487 009c 3869     		ldr	r0, [r7, #16]
 1488 009e FFF7FEFF 		bl	atoi
 1489 00a2 0346     		mov	r3, r0
 1490 00a4 DAB2     		uxtb	r2, r3
 1491 00a6 284B     		ldr	r3, .L97+28
 1492 00a8 DA70     		strb	r2, [r3, #3]
 1493              	.L89:
 441:modem.c       ****         }
 442:modem.c       ****         token = strtok(NULL,",");
 1494              		.loc 1 442 0
 1495 00aa 2649     		ldr	r1, .L97+24
 1496 00ac 0020     		movs	r0, #0
 1497 00ae FFF7FEFF 		bl	strtok
 1498 00b2 3861     		str	r0, [r7, #16]
 443:modem.c       ****         if(token != NULL){
 1499              		.loc 1 443 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 37


 1500 00b4 3B69     		ldr	r3, [r7, #16]
 1501 00b6 002B     		cmp	r3, #0
 1502 00b8 06D0     		beq	.L90
 444:modem.c       ****             modem_stats.rsrq = atoi(token);
 1503              		.loc 1 444 0
 1504 00ba 3869     		ldr	r0, [r7, #16]
 1505 00bc FFF7FEFF 		bl	atoi
 1506 00c0 0346     		mov	r3, r0
 1507 00c2 DAB2     		uxtb	r2, r3
 1508 00c4 204B     		ldr	r3, .L97+28
 1509 00c6 1A71     		strb	r2, [r3, #4]
 1510              	.L90:
 445:modem.c       ****         }
 446:modem.c       ****         token = strtok(NULL,",");
 1511              		.loc 1 446 0
 1512 00c8 1E49     		ldr	r1, .L97+24
 1513 00ca 0020     		movs	r0, #0
 1514 00cc FFF7FEFF 		bl	strtok
 1515 00d0 3861     		str	r0, [r7, #16]
 447:modem.c       ****         if(token != NULL){
 1516              		.loc 1 447 0
 1517 00d2 3B69     		ldr	r3, [r7, #16]
 1518 00d4 002B     		cmp	r3, #0
 1519 00d6 06D0     		beq	.L91
 448:modem.c       ****             modem_stats.rsrq = atoi(token);
 1520              		.loc 1 448 0
 1521 00d8 3869     		ldr	r0, [r7, #16]
 1522 00da FFF7FEFF 		bl	atoi
 1523 00de 0346     		mov	r3, r0
 1524 00e0 DAB2     		uxtb	r2, r3
 1525 00e2 194B     		ldr	r3, .L97+28
 1526 00e4 1A71     		strb	r2, [r3, #4]
 1527              	.L91:
 449:modem.c       ****         }
 450:modem.c       ****         token = strtok(NULL,",");
 1528              		.loc 1 450 0
 1529 00e6 1749     		ldr	r1, .L97+24
 1530 00e8 0020     		movs	r0, #0
 1531 00ea FFF7FEFF 		bl	strtok
 1532 00ee 3861     		str	r0, [r7, #16]
 451:modem.c       ****         if(token != NULL){
 1533              		.loc 1 451 0
 1534 00f0 3B69     		ldr	r3, [r7, #16]
 1535 00f2 002B     		cmp	r3, #0
 1536 00f4 06D0     		beq	.L92
 452:modem.c       ****             modem_stats.rsrp = atoi(token);
 1537              		.loc 1 452 0
 1538 00f6 3869     		ldr	r0, [r7, #16]
 1539 00f8 FFF7FEFF 		bl	atoi
 1540 00fc 0346     		mov	r3, r0
 1541 00fe DAB2     		uxtb	r2, r3
 1542 0100 114B     		ldr	r3, .L97+28
 1543 0102 5A71     		strb	r2, [r3, #5]
 1544              	.L92:
 453:modem.c       ****         }
 454:modem.c       ****         // If rssi is not equal to 99 OR rssi is not equal to 0, then break.
 455:modem.c       ****         if(modem_stats.rssi != 99 || modem_stats.rssi !=0){
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 38


 1545              		.loc 1 455 0
 1546 0104 104B     		ldr	r3, .L97+28
 1547 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1548 0108 632B     		cmp	r3, #99
 1549 010a 0AD1     		bne	.L96
 1550              		.loc 1 455 0 is_stmt 0 discriminator 1
 1551 010c 0E4B     		ldr	r3, .L97+28
 1552 010e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1553 0110 002B     		cmp	r3, #0
 1554 0112 06D1     		bne	.L96
 1555              	.LBE9:
 413:modem.c       ****         // AT command CESQ checks Signal Quality
 1556              		.loc 1 413 0 is_stmt 1
 1557 0114 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1558 0116 0133     		adds	r3, r3, #1
 1559 0118 FB75     		strb	r3, [r7, #23]
 1560              	.L85:
 413:modem.c       ****         // AT command CESQ checks Signal Quality
 1561              		.loc 1 413 0 is_stmt 0 discriminator 1
 1562 011a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1563 011c 092B     		cmp	r3, #9
 1564 011e 7FF675AF 		bls	.L95
 1565              	.L96:
 1566              	.LBE8:
 456:modem.c       ****             break;
 457:modem.c       ****         }
 458:modem.c       ****     }
 459:modem.c       **** }
 1567              		.loc 1 459 0 is_stmt 1
 1568 0122 00BF     		nop
 1569 0124 1837     		adds	r7, r7, #24
 1570              		.cfi_def_cfa_offset 8
 1571 0126 BD46     		mov	sp, r7
 1572              		.cfi_def_cfa_register 13
 1573              		@ sp needed
 1574 0128 80BD     		pop	{r7, pc}
 1575              	.L98:
 1576 012a 00BF     		.align	2
 1577              	.L97:
 1578 012c 00000000 		.word	.LC0
 1579 0130 F4020000 		.word	.LC29
 1580 0134 88020000 		.word	.LC21
 1581 0138 8C020000 		.word	.LC22
 1582 013c 00000000 		.word	uart_received_string
 1583 0140 00030000 		.word	.LC30
 1584 0144 14030000 		.word	.LC31
 1585 0148 00000000 		.word	modem_stats
 1586              		.cfi_endproc
 1587              	.LFE79:
 1588              		.size	get_cell_network_stats, .-get_cell_network_stats
 1589              		.section	.rodata
 1590 0316 0000     		.align	2
 1591              	.LC32:
 1592 0318 41542343 		.ascii	"AT#CGMM\015\000"
 1592      474D4D0D 
 1592      00
 1593 0321 000000   		.align	2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 39


 1594              	.LC33:
 1595 0324 4D6F6465 		.ascii	"Modem Model: %s\000"
 1595      6D204D6F 
 1595      64656C3A 
 1595      20257300 
 1596              		.align	2
 1597              	.LC34:
 1598 0334 41542343 		.ascii	"AT#CCID\015\000"
 1598      4349440D 
 1598      00
 1599 033d 000000   		.align	2
 1600              	.LC35:
 1601 0340 53494D20 		.ascii	"SIM ID: %s\000"
 1601      49443A20 
 1601      257300
 1602 034b 00       		.align	2
 1603              	.LC36:
 1604 034c 41542B43 		.ascii	"AT+CGSN\015\000"
 1604      47534E0D 
 1604      00
 1605 0355 000000   		.align	2
 1606              	.LC37:
 1607 0358 494D4549 		.ascii	"IMEI: %s\000"
 1607      3A202573 
 1607      00
 1608 0361 000000   		.align	2
 1609              	.LC38:
 1610 0364 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\015\012"
 1610      4744434F 
 1610      4E543D31 
 1610      2C224950 
 1610      222C2277 
 1611 038d 00       		.ascii	"\000"
 1612 038e 0000     		.align	2
 1613              	.LC39:
 1614 0390 41542B43 		.ascii	"AT+CFUN?\015\000"
 1614      46554E3F 
 1614      0D00
 1615 039a 0000     		.align	2
 1616              	.LC40:
 1617 039c 4346554E 		.ascii	"CFUN: %s\000"
 1617      3A202573 
 1617      00
 1618 03a5 000000   		.align	2
 1619              	.LC41:
 1620 03a8 41542B43 		.ascii	"AT+CFUN=1\015\000"
 1620      46554E3D 
 1620      310D00
 1621              		.section	.text.modem_configure_settings,"ax",%progbits
 1622              		.align	2
 1623              		.global	modem_configure_settings
 1624              		.thumb
 1625              		.thumb_func
 1626              		.type	modem_configure_settings, %function
 1627              	modem_configure_settings:
 1628              	.LFB80:
 460:modem.c       ****     
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 40


 461:modem.c       ****     
 462:modem.c       **** // Configure the modem settings
 463:modem.c       **** void modem_configure_settings(){
 1629              		.loc 1 463 0
 1630              		.cfi_startproc
 1631              		@ args = 0, pretend = 0, frame = 16
 1632              		@ frame_needed = 1, uses_anonymous_args = 0
 1633 0000 80B5     		push	{r7, lr}
 1634              		.cfi_def_cfa_offset 8
 1635              		.cfi_offset 7, -8
 1636              		.cfi_offset 14, -4
 1637 0002 84B0     		sub	sp, sp, #16
 1638              		.cfi_def_cfa_offset 24
 1639 0004 00AF     		add	r7, sp, #0
 1640              		.cfi_def_cfa_register 7
 464:modem.c       ****     
 465:modem.c       ****     // Save/print modem model ID number
 466:modem.c       ****     if(modem_info.model_id[0] == '\0'){
 1641              		.loc 1 466 0
 1642 0006 3B4B     		ldr	r3, .L106
 1643 0008 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1644 000a 002B     		cmp	r3, #0
 1645 000c 13D1     		bne	.L100
 467:modem.c       ****         // AT command #CGMM returns the "device model identification" code with the command echo.
 468:modem.c       ****         if(at_write_command("AT#CGMM\r","OK",DEFAULT_AT_TIMEOUT)){
 1646              		.loc 1 468 0
 1647 000e 4FF4FA62 		mov	r2, #2000
 1648 0012 3949     		ldr	r1, .L106+4
 1649 0014 3948     		ldr	r0, .L106+8
 1650 0016 FFF7FEFF 		bl	at_write_command
 1651 001a 0346     		mov	r3, r0
 1652 001c 002B     		cmp	r3, #0
 1653 001e 0AD0     		beq	.L100
 469:modem.c       ****             // Extract modem model ID number string from the UART
 470:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.model_id);
 1654              		.loc 1 470 0
 1655 0020 374B     		ldr	r3, .L106+12
 1656 0022 384A     		ldr	r2, .L106+16
 1657 0024 3849     		ldr	r1, .L106+20
 1658 0026 3948     		ldr	r0, .L106+24
 1659 0028 FFF7FEFF 		bl	extract_string
 471:modem.c       ****             // Print modem model ID number
 472:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem Model: %s",modem_info.model_id);
 1660              		.loc 1 472 0
 1661 002c 344A     		ldr	r2, .L106+12
 1662 002e 3849     		ldr	r1, .L106+28
 1663 0030 0020     		movs	r0, #0
 1664 0032 FFF7FEFF 		bl	printNotif
 1665              	.L100:
 473:modem.c       ****         }
 474:modem.c       ****     }
 475:modem.c       ****     
 476:modem.c       ****    // Save/print SIM-card ID
 477:modem.c       ****    if(modem_info.sim_id[0] == '\0'){
 1666              		.loc 1 477 0
 1667 0036 2F4B     		ldr	r3, .L106
 1668 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 41


 1669 003a 002B     		cmp	r3, #0
 1670 003c 13D1     		bne	.L101
 478:modem.c       ****         // AT command #CCID is an execution command that reads the SIM number 
 479:modem.c       ****         if(at_write_command("AT#CCID\r", "OK", DEFAULT_AT_TIMEOUT)){
 1671              		.loc 1 479 0
 1672 003e 4FF4FA62 		mov	r2, #2000
 1673 0042 2D49     		ldr	r1, .L106+4
 1674 0044 3348     		ldr	r0, .L106+32
 1675 0046 FFF7FEFF 		bl	at_write_command
 1676 004a 0346     		mov	r3, r0
 1677 004c 002B     		cmp	r3, #0
 1678 004e 0AD0     		beq	.L101
 480:modem.c       ****             // Extract SIM-card ID string from the UART
 481:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.sim_id);
 1679              		.loc 1 481 0
 1680 0050 284B     		ldr	r3, .L106
 1681 0052 2C4A     		ldr	r2, .L106+16
 1682 0054 2C49     		ldr	r1, .L106+20
 1683 0056 2D48     		ldr	r0, .L106+24
 1684 0058 FFF7FEFF 		bl	extract_string
 482:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"SIM ID: %s",modem_info.sim_id);
 1685              		.loc 1 482 0
 1686 005c 254A     		ldr	r2, .L106
 1687 005e 2E49     		ldr	r1, .L106+36
 1688 0060 0020     		movs	r0, #0
 1689 0062 FFF7FEFF 		bl	printNotif
 1690              	.L101:
 483:modem.c       ****         }
 484:modem.c       ****    }
 485:modem.c       **** 
 486:modem.c       ****     // Save/print modem IMEI
 487:modem.c       ****     if(modem_info.imei[0] == '\0'){
 1691              		.loc 1 487 0
 1692 0066 234B     		ldr	r3, .L106
 1693 0068 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1694 006c 002B     		cmp	r3, #0
 1695 006e 13D1     		bne	.L102
 488:modem.c       ****         // AT command #CGSN returns the product serial number, identified as the IMEI of the mobile
 489:modem.c       ****         if(at_write_command("AT+CGSN\r","OK",DEFAULT_AT_TIMEOUT)){
 1696              		.loc 1 489 0
 1697 0070 4FF4FA62 		mov	r2, #2000
 1698 0074 2049     		ldr	r1, .L106+4
 1699 0076 2948     		ldr	r0, .L106+40
 1700 0078 FFF7FEFF 		bl	at_write_command
 1701 007c 0346     		mov	r3, r0
 1702 007e 002B     		cmp	r3, #0
 1703 0080 0AD0     		beq	.L102
 490:modem.c       ****             // Extract modem IMEI number string from the UART
 491:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.imei);
 1704              		.loc 1 491 0
 1705 0082 274B     		ldr	r3, .L106+44
 1706 0084 1F4A     		ldr	r2, .L106+16
 1707 0086 2049     		ldr	r1, .L106+20
 1708 0088 2048     		ldr	r0, .L106+24
 1709 008a FFF7FEFF 		bl	extract_string
 492:modem.c       ****             // Print modem IMEI number
 493:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"IMEI: %s",modem_info.imei);
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 42


 1710              		.loc 1 493 0
 1711 008e 244A     		ldr	r2, .L106+44
 1712 0090 2449     		ldr	r1, .L106+48
 1713 0092 0020     		movs	r0, #0
 1714 0094 FFF7FEFF 		bl	printNotif
 1715              	.L102:
 494:modem.c       ****         } 
 495:modem.c       ****     }
 496:modem.c       ****     
 497:modem.c       ****     // Configure protocol and cellular end point
 498:modem.c       ****     // AT command +CGDCONT defines the PDP context parameter values for a PDP context identified by
 499:modem.c       ****     at_write_command("AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\r\n", "OK", DEFAULT_AT_TIMEOUT);
 1716              		.loc 1 499 0
 1717 0098 4FF4FA62 		mov	r2, #2000
 1718 009c 1649     		ldr	r1, .L106+4
 1719 009e 2248     		ldr	r0, .L106+52
 1720 00a0 FFF7FEFF 		bl	at_write_command
 500:modem.c       ****     
 501:modem.c       ****     // Check if modem power savings is enabled. If so, disable it so we can send data.
 502:modem.c       ****     // AT command +CFUN? is a read command that reports the current setting of <fun> which is the p
 503:modem.c       ****     if(at_write_command("AT+CFUN?\r", "OK",DEFAULT_AT_TIMEOUT)){
 1721              		.loc 1 503 0
 1722 00a4 4FF4FA62 		mov	r2, #2000
 1723 00a8 1349     		ldr	r1, .L106+4
 1724 00aa 2048     		ldr	r0, .L106+56
 1725 00ac FFF7FEFF 		bl	at_write_command
 1726 00b0 0346     		mov	r3, r0
 1727 00b2 002B     		cmp	r3, #0
 1728 00b4 19D0     		beq	.L105
 1729              	.LBB10:
 504:modem.c       ****         char CFUN[10]; // Create a character array of length 10 called CFUN 
 505:modem.c       ****         // Extract UART string recieved from the modem
 506:modem.c       ****         extract_string(uart_received_string,": ","\r",CFUN);
 1730              		.loc 1 506 0
 1731 00b6 3B1D     		adds	r3, r7, #4
 1732 00b8 124A     		ldr	r2, .L106+16
 1733 00ba 1349     		ldr	r1, .L106+20
 1734 00bc 1348     		ldr	r0, .L106+24
 1735 00be FFF7FEFF 		bl	extract_string
 507:modem.c       ****         // Print UART string recieved from the modem
 508:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"CFUN: %s",CFUN);
 1736              		.loc 1 508 0
 1737 00c2 3B1D     		adds	r3, r7, #4
 1738 00c4 1A46     		mov	r2, r3
 1739 00c6 1A49     		ldr	r1, .L106+60
 1740 00c8 0020     		movs	r0, #0
 1741 00ca FFF7FEFF 		bl	printNotif
 509:modem.c       ****         // Search CRUN for "1", if "1" exists, it will return 1u otherwise it will return NULL
 510:modem.c       ****         // If it returns NULL, then write another command to the modem
 511:modem.c       ****         if(strstr(CFUN,"1") == NULL){
 1742              		.loc 1 511 0
 1743 00ce 3B1D     		adds	r3, r7, #4
 1744 00d0 3121     		movs	r1, #49
 1745 00d2 1846     		mov	r0, r3
 1746 00d4 FFF7FEFF 		bl	strchr
 1747 00d8 0346     		mov	r3, r0
 1748 00da 002B     		cmp	r3, #0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 43


 1749 00dc 05D1     		bne	.L105
 512:modem.c       ****             // AT command +CFUN= is a set command which selects the level of functionality in the m
 513:modem.c       ****             // = 1 means mobile full functionality with power saving disabled 
 514:modem.c       ****             at_write_command("AT+CFUN=1\r", "OK",DEFAULT_AT_TIMEOUT);
 1750              		.loc 1 514 0
 1751 00de 4FF4FA62 		mov	r2, #2000
 1752 00e2 0549     		ldr	r1, .L106+4
 1753 00e4 1348     		ldr	r0, .L106+64
 1754 00e6 FFF7FEFF 		bl	at_write_command
 1755              	.L105:
 1756              	.LBE10:
 515:modem.c       ****         }
 516:modem.c       ****     }
 517:modem.c       **** 
 518:modem.c       ****     
 519:modem.c       **** }
 1757              		.loc 1 519 0
 1758 00ea 00BF     		nop
 1759 00ec 1037     		adds	r7, r7, #16
 1760              		.cfi_def_cfa_offset 8
 1761 00ee BD46     		mov	sp, r7
 1762              		.cfi_def_cfa_register 13
 1763              		@ sp needed
 1764 00f0 80BD     		pop	{r7, pc}
 1765              	.L107:
 1766 00f2 00BF     		.align	2
 1767              	.L106:
 1768 00f4 00000000 		.word	modem_info
 1769 00f8 00000000 		.word	.LC0
 1770 00fc 18030000 		.word	.LC32
 1771 0100 14000000 		.word	modem_info+20
 1772 0104 88020000 		.word	.LC21
 1773 0108 8C020000 		.word	.LC22
 1774 010c 00000000 		.word	uart_received_string
 1775 0110 24030000 		.word	.LC33
 1776 0114 34030000 		.word	.LC34
 1777 0118 40030000 		.word	.LC35
 1778 011c 4C030000 		.word	.LC36
 1779 0120 28000000 		.word	modem_info+40
 1780 0124 58030000 		.word	.LC37
 1781 0128 64030000 		.word	.LC38
 1782 012c 90030000 		.word	.LC39
 1783 0130 9C030000 		.word	.LC40
 1784 0134 A8030000 		.word	.LC41
 1785              		.cfi_endproc
 1786              	.LFE80:
 1787              		.size	modem_configure_settings, .-modem_configure_settings
 1788              		.section	.rodata
 1789 03b3 00       		.align	2
 1790              	.LC42:
 1791 03b4 4D6F6465 		.ascii	"Modem not ready to get time. Not conncted to networ"
 1791      6D206E6F 
 1791      74207265 
 1791      61647920 
 1791      746F2067 
 1792 03e7 6B2E00   		.ascii	"k.\000"
 1793 03ea 0000     		.align	2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 44


 1794              	.LC43:
 1795 03ec 41542B43 		.ascii	"AT+CCLK?\015\000"
 1795      434C4B3F 
 1795      0D00
 1796 03f6 0000     		.align	2
 1797              	.LC44:
 1798 03f8 220D00   		.ascii	"\"\015\000"
 1799 03fb 00       		.align	2
 1800              	.LC45:
 1801 03fc 3A202200 		.ascii	": \"\000"
 1802              		.align	2
 1803              	.LC46:
 1804 0400 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d-%d\000"
 1804      642F2564 
 1804      2C25643A 
 1804      25643A25 
 1804      642D2564 
 1805 0415 000000   		.align	2
 1806              	.LC47:
 1807 0418 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d+%d\000"
 1807      642F2564 
 1807      2C25643A 
 1807      25643A25 
 1807      642B2564 
 1808 042d 000000   		.align	2
 1809              	.LC48:
 1810 0430 436F756C 		.ascii	"Could not parse modem time: %s.\000"
 1810      64206E6F 
 1810      74207061 
 1810      72736520 
 1810      6D6F6465 
 1811              		.section	.text.modem_get_network_time,"ax",%progbits
 1812              		.align	2
 1813              		.global	modem_get_network_time
 1814              		.thumb
 1815              		.thumb_func
 1816              		.type	modem_get_network_time, %function
 1817              	modem_get_network_time:
 1818              	.LFB81:
 520:modem.c       **** 
 521:modem.c       **** //returns 0 if modem can't get time
 522:modem.c       **** long modem_get_network_time(){
 1819              		.loc 1 522 0
 1820              		.cfi_startproc
 1821              		@ args = 0, pretend = 0, frame = 104
 1822              		@ frame_needed = 1, uses_anonymous_args = 0
 1823 0000 80B5     		push	{r7, lr}
 1824              		.cfi_def_cfa_offset 8
 1825              		.cfi_offset 7, -8
 1826              		.cfi_offset 14, -4
 1827 0002 A0B0     		sub	sp, sp, #128
 1828              		.cfi_def_cfa_offset 136
 1829 0004 06AF     		add	r7, sp, #24
 1830              		.cfi_def_cfa 7, 112
 523:modem.c       ****     
 524:modem.c       ****     //modem reposen format (careful to include the quotes "")
 525:modem.c       ****     //+CCLK: "20/05/01,10:48:33-16" the "-16" is the number of quarter hourts (15 mins) from GMT ti
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 45


 526:modem.c       ****     //ex: 14:48 GMT
 527:modem.c       **** 
 528:modem.c       ****     // If modem_state is not "ready", then print error and return 0
 529:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 1831              		.loc 1 529 0
 1832 0006 444B     		ldr	r3, .L115
 1833 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1834 000a 042B     		cmp	r3, #4
 1835 000c 05D0     		beq	.L109
 530:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Modem not ready to get time. Not conncted to network.");
 1836              		.loc 1 530 0
 1837 000e 4349     		ldr	r1, .L115+4
 1838 0010 0220     		movs	r0, #2
 1839 0012 FFF7FEFF 		bl	printNotif
 531:modem.c       ****         return 0;   
 1840              		.loc 1 531 0
 1841 0016 0023     		movs	r3, #0
 1842 0018 7AE0     		b	.L110
 1843              	.L109:
 532:modem.c       ****     }
 533:modem.c       ****     long epoch_time = 0; // Create variable of long time and set equal to 0
 1844              		.loc 1 533 0
 1845 001a 0023     		movs	r3, #0
 1846 001c 7B66     		str	r3, [r7, #100]
 534:modem.c       ****     
 535:modem.c       ****     // AT command +CCLK? is a read command that returns the current setting of the real-time clock 
 536:modem.c       ****     if(at_write_command("AT+CCLK?\r","OK",DEFAULT_AT_TIMEOUT)){
 1847              		.loc 1 536 0
 1848 001e 4FF4FA62 		mov	r2, #2000
 1849 0022 3F49     		ldr	r1, .L115+8
 1850 0024 3F48     		ldr	r0, .L115+12
 1851 0026 FFF7FEFF 		bl	at_write_command
 1852 002a 0346     		mov	r3, r0
 1853 002c 002B     		cmp	r3, #0
 1854 002e 6ED0     		beq	.L111
 1855              	.LBB11:
 537:modem.c       ****         char network_time[30]; // Create a character array of length 30 called network_time 
 538:modem.c       ****         // Extract UART string recieved from the modem and save to variable network_time
 539:modem.c       ****         extract_string(uart_received_string,": \"","\"\r",network_time);
 1856              		.loc 1 539 0
 1857 0030 07F14403 		add	r3, r7, #68
 1858 0034 3C4A     		ldr	r2, .L115+16
 1859 0036 3D49     		ldr	r1, .L115+20
 1860 0038 3D48     		ldr	r0, .L115+24
 1861 003a FFF7FEFF 		bl	extract_string
 540:modem.c       ****         
 541:modem.c       ****         ///////////////////  
 542:modem.c       ****         struct tm t; // Creates variable t of struct tm
 543:modem.c       ****         
 544:modem.c       ****         // Creates a bunch of variables of type int and sets them to 0
 545:modem.c       ****         int year, month, day, hour, minute, second, gmt_offset = 0;
 1862              		.loc 1 545 0
 1863 003e 0023     		movs	r3, #0
 1864 0040 BB62     		str	r3, [r7, #40]
 546:modem.c       ****       
 547:modem.c       ****         // Determines the GMT offset 
 548:modem.c       ****         // int sscanf(const char *str, const char *format, ...) reads formatted input from a string
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 46


 549:modem.c       ****         // On success, the function returns the number of variables filled. In the case of an input
 550:modem.c       ****         if(sscanf(network_time,"%d/%d/%d,%d:%d:%d-%d",&year,&month,&day,&hour,&minute,&second,&gmt_
 1865              		.loc 1 550 0
 1866 0042 07F13C01 		add	r1, r7, #60
 1867 0046 07F14002 		add	r2, r7, #64
 1868 004a 07F14400 		add	r0, r7, #68
 1869 004e 07F12803 		add	r3, r7, #40
 1870 0052 0493     		str	r3, [sp, #16]
 1871 0054 07F12C03 		add	r3, r7, #44
 1872 0058 0393     		str	r3, [sp, #12]
 1873 005a 07F13003 		add	r3, r7, #48
 1874 005e 0293     		str	r3, [sp, #8]
 1875 0060 07F13403 		add	r3, r7, #52
 1876 0064 0193     		str	r3, [sp, #4]
 1877 0066 07F13803 		add	r3, r7, #56
 1878 006a 0093     		str	r3, [sp]
 1879 006c 0B46     		mov	r3, r1
 1880 006e 3149     		ldr	r1, .L115+28
 1881 0070 FFF7FEFF 		bl	sscanf
 1882 0074 0346     		mov	r3, r0
 1883 0076 072B     		cmp	r3, #7
 1884 0078 06D1     		bne	.L112
 551:modem.c       ****             gmt_offset = gmt_offset*(900);
 1885              		.loc 1 551 0
 1886 007a BB6A     		ldr	r3, [r7, #40]
 1887 007c 4FF46172 		mov	r2, #900
 1888 0080 02FB03F3 		mul	r3, r2, r3
 1889 0084 BB62     		str	r3, [r7, #40]
 1890 0086 2AE0     		b	.L113
 1891              	.L112:
 552:modem.c       ****         }else if(sscanf(network_time,"%d/%d/%d,%d:%d:%d+%d",&year,&month,&day,&hour,&minute,&second
 1892              		.loc 1 552 0
 1893 0088 07F13C01 		add	r1, r7, #60
 1894 008c 07F14002 		add	r2, r7, #64
 1895 0090 07F14400 		add	r0, r7, #68
 1896 0094 07F12803 		add	r3, r7, #40
 1897 0098 0493     		str	r3, [sp, #16]
 1898 009a 07F12C03 		add	r3, r7, #44
 1899 009e 0393     		str	r3, [sp, #12]
 1900 00a0 07F13003 		add	r3, r7, #48
 1901 00a4 0293     		str	r3, [sp, #8]
 1902 00a6 07F13403 		add	r3, r7, #52
 1903 00aa 0193     		str	r3, [sp, #4]
 1904 00ac 07F13803 		add	r3, r7, #56
 1905 00b0 0093     		str	r3, [sp]
 1906 00b2 0B46     		mov	r3, r1
 1907 00b4 2049     		ldr	r1, .L115+32
 1908 00b6 FFF7FEFF 		bl	sscanf
 1909 00ba 0346     		mov	r3, r0
 1910 00bc 072B     		cmp	r3, #7
 1911 00be 05D1     		bne	.L114
 553:modem.c       ****             gmt_offset = gmt_offset*(-900);
 1912              		.loc 1 553 0
 1913 00c0 BB6A     		ldr	r3, [r7, #40]
 1914 00c2 1E4A     		ldr	r2, .L115+36
 1915 00c4 02FB03F3 		mul	r3, r2, r3
 1916 00c8 BB62     		str	r3, [r7, #40]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 47


 1917 00ca 08E0     		b	.L113
 1918              	.L114:
 554:modem.c       ****         }else{
 555:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Could not parse modem time: %s.",network_time);
 1919              		.loc 1 555 0
 1920 00cc 07F14403 		add	r3, r7, #68
 1921 00d0 1A46     		mov	r2, r3
 1922 00d2 1B49     		ldr	r1, .L115+40
 1923 00d4 0220     		movs	r0, #2
 1924 00d6 FFF7FEFF 		bl	printNotif
 556:modem.c       ****             return 0;  // Return 0 if cannot get time 
 1925              		.loc 1 556 0
 1926 00da 0023     		movs	r3, #0
 1927 00dc 18E0     		b	.L110
 1928              	.L113:
 557:modem.c       ****         }
 558:modem.c       ****         
 559:modem.c       ****         // Sets each variable to the correct time 
 560:modem.c       ****         t.tm_sec = second;
 1929              		.loc 1 560 0
 1930 00de FB6A     		ldr	r3, [r7, #44]
 1931 00e0 7B60     		str	r3, [r7, #4]
 561:modem.c       ****         t.tm_min = minute;
 1932              		.loc 1 561 0
 1933 00e2 3B6B     		ldr	r3, [r7, #48]
 1934 00e4 BB60     		str	r3, [r7, #8]
 562:modem.c       ****         t.tm_hour = hour;
 1935              		.loc 1 562 0
 1936 00e6 7B6B     		ldr	r3, [r7, #52]
 1937 00e8 FB60     		str	r3, [r7, #12]
 563:modem.c       ****         t.tm_year = year + 100;    // Year since 1900
 1938              		.loc 1 563 0
 1939 00ea 3B6C     		ldr	r3, [r7, #64]
 1940 00ec 6433     		adds	r3, r3, #100
 1941 00ee BB61     		str	r3, [r7, #24]
 564:modem.c       ****         t.tm_mon = month-1;        // Month, where 0 = jan
 1942              		.loc 1 564 0
 1943 00f0 FB6B     		ldr	r3, [r7, #60]
 1944 00f2 013B     		subs	r3, r3, #1
 1945 00f4 7B61     		str	r3, [r7, #20]
 565:modem.c       ****         t.tm_mday = day;           // Day of the month
 1946              		.loc 1 565 0
 1947 00f6 BB6B     		ldr	r3, [r7, #56]
 1948 00f8 3B61     		str	r3, [r7, #16]
 566:modem.c       ****         t.tm_isdst = 0;            // Is Daylight Savings on? 1 = yes, 0 = no, -1 = unknown
 1949              		.loc 1 566 0
 1950 00fa 0023     		movs	r3, #0
 1951 00fc 7B62     		str	r3, [r7, #36]
 567:modem.c       ****     
 568:modem.c       ****         // Set variable epoch-time to be equal to the local time plus the GMT offset
 569:modem.c       ****         // the mktime function converts a broken-down local time (pointed to by timeptr) and return
 570:modem.c       ****         epoch_time = mktime(&t) + gmt_offset;
 1952              		.loc 1 570 0
 1953 00fe 3B1D     		adds	r3, r7, #4
 1954 0100 1846     		mov	r0, r3
 1955 0102 FFF7FEFF 		bl	mktime
 1956 0106 0246     		mov	r2, r0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 48


 1957 0108 BB6A     		ldr	r3, [r7, #40]
 1958 010a 1344     		add	r3, r3, r2
 1959 010c 7B66     		str	r3, [r7, #100]
 1960              	.L111:
 1961              	.LBE11:
 571:modem.c       ****     }
 572:modem.c       ****     
 573:modem.c       ****     return epoch_time;
 1962              		.loc 1 573 0
 1963 010e 7B6E     		ldr	r3, [r7, #100]
 1964              	.L110:
 574:modem.c       **** }
 1965              		.loc 1 574 0
 1966 0110 1846     		mov	r0, r3
 1967 0112 6837     		adds	r7, r7, #104
 1968              		.cfi_def_cfa_offset 8
 1969 0114 BD46     		mov	sp, r7
 1970              		.cfi_def_cfa_register 13
 1971              		@ sp needed
 1972 0116 80BD     		pop	{r7, pc}
 1973              	.L116:
 1974              		.align	2
 1975              	.L115:
 1976 0118 00000000 		.word	modem_state
 1977 011c B4030000 		.word	.LC42
 1978 0120 00000000 		.word	.LC0
 1979 0124 EC030000 		.word	.LC43
 1980 0128 F8030000 		.word	.LC44
 1981 012c FC030000 		.word	.LC45
 1982 0130 00000000 		.word	uart_received_string
 1983 0134 00040000 		.word	.LC46
 1984 0138 18040000 		.word	.LC47
 1985 013c 7CFCFFFF 		.word	-900
 1986 0140 30040000 		.word	.LC48
 1987              		.cfi_endproc
 1988              	.LFE81:
 1989              		.size	modem_get_network_time, .-modem_get_network_time
 1990              		.section	.text.modem_get_state,"ax",%progbits
 1991              		.align	2
 1992              		.global	modem_get_state
 1993              		.thumb
 1994              		.thumb_func
 1995              		.type	modem_get_state, %function
 1996              	modem_get_state:
 1997              	.LFB82:
 575:modem.c       **** 
 576:modem.c       **** // Get the modem state
 577:modem.c       **** uint8 modem_get_state(){
 1998              		.loc 1 577 0
 1999              		.cfi_startproc
 2000              		@ args = 0, pretend = 0, frame = 0
 2001              		@ frame_needed = 1, uses_anonymous_args = 0
 2002              		@ link register save eliminated.
 2003 0000 80B4     		push	{r7}
 2004              		.cfi_def_cfa_offset 4
 2005              		.cfi_offset 7, -4
 2006 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 49


 2007              		.cfi_def_cfa_register 7
 578:modem.c       ****     return modem_state;
 2008              		.loc 1 578 0
 2009 0004 024B     		ldr	r3, .L119
 2010 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 579:modem.c       **** }
 2011              		.loc 1 579 0
 2012 0008 1846     		mov	r0, r3
 2013 000a BD46     		mov	sp, r7
 2014              		.cfi_def_cfa_register 13
 2015              		@ sp needed
 2016 000c 80BC     		pop	{r7}
 2017              		.cfi_restore 7
 2018              		.cfi_def_cfa_offset 0
 2019 000e 7047     		bx	lr
 2020              	.L120:
 2021              		.align	2
 2022              	.L119:
 2023 0010 00000000 		.word	modem_state
 2024              		.cfi_endproc
 2025              	.LFE82:
 2026              		.size	modem_get_state, .-modem_get_state
 2027              		.section	.text.modem_sleep,"ax",%progbits
 2028              		.align	2
 2029              		.global	modem_sleep
 2030              		.thumb
 2031              		.thumb_func
 2032              		.type	modem_sleep, %function
 2033              	modem_sleep:
 2034              	.LFB83:
 580:modem.c       **** 
 581:modem.c       **** // Set modem to sleep
 582:modem.c       **** void modem_sleep(){
 2035              		.loc 1 582 0
 2036              		.cfi_startproc
 2037              		@ args = 0, pretend = 0, frame = 0
 2038              		@ frame_needed = 1, uses_anonymous_args = 0
 2039 0000 80B5     		push	{r7, lr}
 2040              		.cfi_def_cfa_offset 8
 2041              		.cfi_offset 7, -8
 2042              		.cfi_offset 14, -4
 2043 0002 00AF     		add	r7, sp, #0
 2044              		.cfi_def_cfa_register 7
 583:modem.c       ****     // If the modem_state is not "off" then put it to sleep
 584:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 2045              		.loc 1 584 0
 2046 0004 FFF7FEFF 		bl	modem_get_state
 2047 0008 0346     		mov	r3, r0
 2048 000a 002B     		cmp	r3, #0
 2049 000c 03D0     		beq	.L123
 585:modem.c       **** 
 586:modem.c       ****         Telit_ControlReg_Sleep(); // Prepares the modem for entering the low power mode.
 2050              		.loc 1 586 0
 2051 000e FFF7FEFF 		bl	Telit_ControlReg_Sleep
 587:modem.c       ****         UART_Telit_Sleep(); // Saves the current component state, calls the UART_Telit_Stop() funct
 2052              		.loc 1 587 0
 2053 0012 FFF7FEFF 		bl	UART_Telit_Sleep
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 50


 2054              	.L123:
 588:modem.c       ****         
 589:modem.c       ****         // Set interrupt on RX pin to wakeup chip from sleep if UART comm starts
 590:modem.c       ****        // Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_FALLING);
 591:modem.c       ****      }
 592:modem.c       **** }
 2055              		.loc 1 592 0
 2056 0016 00BF     		nop
 2057 0018 80BD     		pop	{r7, pc}
 2058              		.cfi_endproc
 2059              	.LFE83:
 2060              		.size	modem_sleep, .-modem_sleep
 2061 001a 00BF     		.section	.text.modem_wakeup,"ax",%progbits
 2062              		.align	2
 2063              		.global	modem_wakeup
 2064              		.thumb
 2065              		.thumb_func
 2066              		.type	modem_wakeup, %function
 2067              	modem_wakeup:
 2068              	.LFB84:
 593:modem.c       **** 
 594:modem.c       **** // Wakeup the modem
 595:modem.c       **** void modem_wakeup(){
 2069              		.loc 1 595 0
 2070              		.cfi_startproc
 2071              		@ args = 0, pretend = 0, frame = 0
 2072              		@ frame_needed = 1, uses_anonymous_args = 0
 2073 0000 80B5     		push	{r7, lr}
 2074              		.cfi_def_cfa_offset 8
 2075              		.cfi_offset 7, -8
 2076              		.cfi_offset 14, -4
 2077 0002 00AF     		add	r7, sp, #0
 2078              		.cfi_def_cfa_register 7
 596:modem.c       ****     // If modem state is not off then wake it up
 597:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 2079              		.loc 1 597 0
 2080 0004 FFF7FEFF 		bl	modem_get_state
 2081 0008 0346     		mov	r3, r0
 2082 000a 002B     		cmp	r3, #0
 2083 000c 0BD0     		beq	.L126
 598:modem.c       ****         Telit_ControlReg_Wakeup(); // Restores the modem after waking up from the low power mode.
 2084              		.loc 1 598 0
 2085 000e FFF7FEFF 		bl	Telit_ControlReg_Wakeup
 599:modem.c       ****         // Calls the UART_Telit_RestoreConfig() function to restore the configuration.
 600:modem.c       ****         // If the modem was enabled before the UART_Telit_Sleep() function was called, the UART_Tel
 601:modem.c       ****         UART_Telit_Wakeup();
 2086              		.loc 1 601 0
 2087 0012 FFF7FEFF 		bl	UART_Telit_Wakeup
 602:modem.c       ****         // Remove the need for this pin itterupt
 603:modem.c       ****         //Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 604:modem.c       ****         
 605:modem.c       ****         // If woken up from pin, go ahead and delay for 100ms to allow modem UART to deliver the me
 606:modem.c       ****         if(modem_get_state() == MODEM_STATE_WAITING_FOR_IP){
 2088              		.loc 1 606 0
 2089 0016 FFF7FEFF 		bl	modem_get_state
 2090 001a 0346     		mov	r3, r0
 2091 001c 032B     		cmp	r3, #3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 51


 2092 001e 02D1     		bne	.L126
 607:modem.c       ****             CyDelay(100u);
 2093              		.loc 1 607 0
 2094 0020 6420     		movs	r0, #100
 2095 0022 FFF7FEFF 		bl	CyDelay
 2096              	.L126:
 608:modem.c       ****         }
 609:modem.c       ****         
 610:modem.c       ****      }
 611:modem.c       ****     
 612:modem.c       **** }
 2097              		.loc 1 612 0
 2098 0026 00BF     		nop
 2099 0028 80BD     		pop	{r7, pc}
 2100              		.cfi_endproc
 2101              	.LFE84:
 2102              		.size	modem_wakeup, .-modem_wakeup
 2103 002a 00BF     		.section	.rodata
 2104              		.align	2
 2105              	.LC49:
 2106 0450 41542347 		.ascii	"AT#GPIO=5,1,1,0\015\000"
 2106      50494F3D 
 2106      352C312C 
 2106      312C300D 
 2106      00
 2107 0461 000000   		.align	2
 2108              	.LC50:
 2109 0464 41542453 		.ascii	"AT$SUPLSEC=1\015\000"
 2109      55504C53 
 2109      45433D31 
 2109      0D00
 2110 0472 0000     		.align	2
 2111              	.LC51:
 2112 0474 41542453 		.ascii	"AT$SUPLV=2\015\000"
 2112      55504C56 
 2112      3D320D00 
 2113              		.align	2
 2114              	.LC52:
 2115 0480 41542441 		.ascii	"AT$AGPSEN=1\015\000"
 2115      47505345 
 2115      4E3D310D 
 2115      00
 2116 048d 000000   		.align	2
 2117              	.LC53:
 2118 0490 41542453 		.ascii	"AT$SLP=1,\"supl.google.com:7275\"\015\000"
 2118      4C503D31 
 2118      2C227375 
 2118      706C2E67 
 2118      6F6F676C 
 2119 04b1 000000   		.align	2
 2120              	.LC54:
 2121 04b4 41542353 		.ascii	"AT#SGACT=1,0\015\012\000"
 2121      47414354 
 2121      3D312C30 
 2121      0D0A00
 2122 04c3 00       		.align	2
 2123              	.LC55:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 52


 2124 04c4 4154244C 		.ascii	"AT$LCSLK=1,1\015\000"
 2124      43534C4B 
 2124      3D312C31 
 2124      0D00
 2125 04d2 0000     		.align	2
 2126              	.LC56:
 2127 04d4 41542447 		.ascii	"AT$GPSSLSR=1,1,,,,,2\015\000"
 2127      5053534C 
 2127      53523D31 
 2127      2C312C2C 
 2127      2C2C2C32 
 2128 04ea 0000     		.align	2
 2129              	.LC57:
 2130 04ec 4E00     		.ascii	"N\000"
 2131 04ee 0000     		.align	2
 2132              	.LC58:
 2133 04f0 41542447 		.ascii	"AT$GPSACP\015\000"
 2133      50534143 
 2133      500D00
 2134 04fb 00       		.align	2
 2135              	.LC59:
 2136 04fc 24475053 		.ascii	"$GPSACP: \000"
 2136      4143503A 
 2136      2000
 2137 0506 0000     		.align	2
 2138              	.LC60:
 2139 0508 24475053 		.ascii	"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s\000"
 2139      4143503A 
 2139      20252A66 
 2139      2C25664E 
 2139      2C256657 
 2140              		.global	__aeabi_fdiv
 2141              		.global	__aeabi_f2d
 2142              		.global	__aeabi_ddiv
 2143              		.global	__aeabi_dadd
 2144              		.global	__aeabi_d2f
 2145              		.align	2
 2146              	.LC61:
 2147 0528 41542347 		.ascii	"AT#GPIO=5,0,1,0\015\000"
 2147      50494F3D 
 2147      352C302C 
 2147      312C300D 
 2147      00
 2148 0539 000000   		.align	2
 2149              	.LC62:
 2150 053c 41542447 		.ascii	"AT$GPSR=0\015\000"
 2150      5053523D 
 2150      300D00
 2151 0547 00       		.align	2
 2152              	.LC63:
 2153 0548 54696D65 		.ascii	"Time to lock GPS: %d\000"
 2153      20746F20 
 2153      6C6F636B 
 2153      20475053 
 2153      3A202564 
 2154              		.section	.text.modem_get_gps_coordinates,"ax",%progbits
 2155              		.align	2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 53


 2156              		.global	modem_get_gps_coordinates
 2157              		.thumb
 2158              		.thumb_func
 2159              		.type	modem_get_gps_coordinates, %function
 2160              	modem_get_gps_coordinates:
 2161              	.LFB85:
 613:modem.c       **** 
 614:modem.c       **** 
 615:modem.c       ****     
 616:modem.c       **** // Returns lat,lom,alt data from Assited GPS (AGPS) system
 617:modem.c       **** gps_t modem_get_gps_coordinates(){
 2162              		.loc 1 617 0
 2163              		.cfi_startproc
 2164              		@ args = 0, pretend = 0, frame = 56
 2165              		@ frame_needed = 1, uses_anonymous_args = 0
 2166 0000 B0B5     		push	{r4, r5, r7, lr}
 2167              		.cfi_def_cfa_offset 16
 2168              		.cfi_offset 4, -16
 2169              		.cfi_offset 5, -12
 2170              		.cfi_offset 7, -8
 2171              		.cfi_offset 14, -4
 2172 0002 90B0     		sub	sp, sp, #64
 2173              		.cfi_def_cfa_offset 80
 2174 0004 02AF     		add	r7, sp, #8
 2175              		.cfi_def_cfa 7, 72
 2176 0006 7860     		str	r0, [r7, #4]
 618:modem.c       ****     gps_t gps;
 619:modem.c       ****     gps.altitude = 0;
 2177              		.loc 1 619 0
 2178 0008 4FF00003 		mov	r3, #0
 2179 000c FB61     		str	r3, [r7, #28]	@ float
 620:modem.c       ****     gps.longitude = 0;
 2180              		.loc 1 620 0
 2181 000e 4FF00003 		mov	r3, #0
 2182 0012 BB61     		str	r3, [r7, #24]	@ float
 621:modem.c       ****     gps.latitude = 0;
 2183              		.loc 1 621 0
 2184 0014 4FF00003 		mov	r3, #0
 2185 0018 7B61     		str	r3, [r7, #20]	@ float
 622:modem.c       ****     gps.time_to_lock =0;
 2186              		.loc 1 622 0
 2187 001a 0023     		movs	r3, #0
 2188 001c 3B84     		strh	r3, [r7, #32]	@ movhi
 623:modem.c       ****     gps.valid = 0;
 2189              		.loc 1 623 0
 2190 001e 0023     		movs	r3, #0
 2191 0020 87F82230 		strb	r3, [r7, #34]
 624:modem.c       ****     
 625:modem.c       ****     //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 626:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 2192              		.loc 1 626 0
 2193 0024 7F4B     		ldr	r3, .L137
 2194 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2195 0028 042B     		cmp	r3, #4
 2196 002a 07D0     		beq	.L128
 627:modem.c       ****         return gps;//where valid = 0
 2197              		.loc 1 627 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 54


 2198 002c 7B68     		ldr	r3, [r7, #4]
 2199 002e 1C46     		mov	r4, r3
 2200 0030 07F11403 		add	r3, r7, #20
 2201 0034 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2202 0036 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2203 003a EFE0     		b	.L127
 2204              	.L128:
 628:modem.c       ****     }
 629:modem.c       ****     
 630:modem.c       ****     long lock_time = getTimeStamp();
 2205              		.loc 1 630 0
 2206 003c FFF7FEFF 		bl	getTimeStamp
 2207 0040 3863     		str	r0, [r7, #48]
 631:modem.c       ****     
 632:modem.c       ****     // Enable this for thr LTER module
 633:modem.c       ****     // Enable GPS Low-Dropout Regulator
 634:modem.c       ****     at_write_command("AT#GPIO=5,1,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2208              		.loc 1 634 0
 2209 0042 4FF4FA62 		mov	r2, #2000
 2210 0046 7849     		ldr	r1, .L137+4
 2211 0048 7848     		ldr	r0, .L137+8
 2212 004a FFF7FEFF 		bl	at_write_command
 635:modem.c       ****     
 636:modem.c       ****     // Configure SUPL connection params
 637:modem.c       ****     at_write_command("AT$SUPLSEC=1\r","OK",DEFAULT_AT_TIMEOUT);
 2213              		.loc 1 637 0
 2214 004e 4FF4FA62 		mov	r2, #2000
 2215 0052 7549     		ldr	r1, .L137+4
 2216 0054 7648     		ldr	r0, .L137+12
 2217 0056 FFF7FEFF 		bl	at_write_command
 638:modem.c       ****     
 639:modem.c       ****     // Use SUPL2.0
 640:modem.c       ****     at_write_command("AT$SUPLV=2\r","OK",DEFAULT_AT_TIMEOUT);
 2218              		.loc 1 640 0
 2219 005a 4FF4FA62 		mov	r2, #2000
 2220 005e 7249     		ldr	r1, .L137+4
 2221 0060 7448     		ldr	r0, .L137+16
 2222 0062 FFF7FEFF 		bl	at_write_command
 641:modem.c       ****     
 642:modem.c       ****     // Enable AGPS service
 643:modem.c       ****     at_write_command("AT$AGPSEN=1\r","OK",DEFAULT_AT_TIMEOUT);
 2223              		.loc 1 643 0
 2224 0066 4FF4FA62 		mov	r2, #2000
 2225 006a 6F49     		ldr	r1, .L137+4
 2226 006c 7248     		ldr	r0, .L137+20
 2227 006e FFF7FEFF 		bl	at_write_command
 644:modem.c       ****     
 645:modem.c       ****     // Chose SUPL server, use google publiuc service
 646:modem.c       ****     at_write_command("AT$SLP=1,\"supl.google.com:7275\"\r","OK",DEFAULT_AT_TIMEOUT);
 2228              		.loc 1 646 0
 2229 0072 4FF4FA62 		mov	r2, #2000
 2230 0076 6C49     		ldr	r1, .L137+4
 2231 0078 7048     		ldr	r0, .L137+24
 2232 007a FFF7FEFF 		bl	at_write_command
 647:modem.c       ****     
 648:modem.c       ****     //pdp context has to be lockeed to carrier for this to work
 649:modem.c       ****     
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 55


 650:modem.c       ****     // Unlock context since it needs to be used by modem
 651:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 2233              		.loc 1 651 0
 2234 007e 4FF4FA62 		mov	r2, #2000
 2235 0082 6949     		ldr	r1, .L137+4
 2236 0084 6E48     		ldr	r0, .L137+28
 2237 0086 FFF7FEFF 		bl	at_write_command
 652:modem.c       ****     
 653:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",DEFAULT_AT_TIMEOUT);//ATT
 2238              		.loc 1 653 0
 2239 008a 4FF4FA62 		mov	r2, #2000
 2240 008e 6649     		ldr	r1, .L137+4
 2241 0090 6C48     		ldr	r0, .L137+32
 2242 0092 FFF7FEFF 		bl	at_write_command
 654:modem.c       ****     //at_write_command("AT$LCSLK=1,3\r","OK",DEFAULT_AT_TIMEOUT);//Verizon
 655:modem.c       ****     
 656:modem.c       ****     // Relock the context
 657:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 2243              		.loc 1 657 0
 2244 0096 42F21072 		movw	r2, #10000
 2245 009a 6349     		ldr	r1, .L137+4
 2246 009c 6A48     		ldr	r0, .L137+36
 2247 009e FFF7FEFF 		bl	at_write_command
 658:modem.c       ****     
 659:modem.c       ****     //start AGPS service
 660:modem.c       ****     at_write_command("AT$GPSSLSR=1,1,,,,,2\r","OK",DEFAULT_AT_TIMEOUT); 
 2248              		.loc 1 660 0
 2249 00a2 4FF4FA62 		mov	r2, #2000
 2250 00a6 6049     		ldr	r1, .L137+4
 2251 00a8 6848     		ldr	r0, .L137+40
 2252 00aa FFF7FEFF 		bl	at_write_command
 661:modem.c       ****     
 662:modem.c       ****     
 663:modem.c       ****     // Start the AGPS service
 664:modem.c       ****     // Will keep receiving a buynch of commas without numbers, until GPS locks
 665:modem.c       ****     // Good lock will retunr a string with "N" and "W" coordinates
 666:modem.c       ****     
 667:modem.c       ****     
 668:modem.c       ****  
 669:modem.c       ****     uint8 gps_status = 0;
 2253              		.loc 1 669 0
 2254 00ae 0023     		movs	r3, #0
 2255 00b0 87F82F30 		strb	r3, [r7, #47]
 2256              	.LBB12:
 670:modem.c       ****     for(uint16 i=0;i<200;i++){
 2257              		.loc 1 670 0
 2258 00b4 0023     		movs	r3, #0
 2259 00b6 FB86     		strh	r3, [r7, #54]	@ movhi
 2260 00b8 13E0     		b	.L130
 2261              	.L133:
 671:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2262              		.loc 1 671 0
 2263 00ba 4FF4FA62 		mov	r2, #2000
 2264 00be 6449     		ldr	r1, .L137+44
 2265 00c0 6448     		ldr	r0, .L137+48
 2266 00c2 FFF7FEFF 		bl	at_write_command
 2267 00c6 0346     		mov	r3, r0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 56


 2268 00c8 87F82F30 		strb	r3, [r7, #47]
 672:modem.c       ****         if(gps_status){
 2269              		.loc 1 672 0
 2270 00cc 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2271 00d0 002B     		cmp	r3, #0
 2272 00d2 0AD1     		bne	.L136
 673:modem.c       ****             break;   
 674:modem.c       ****         }
 675:modem.c       ****         CyDelay(1000u);// Wait for a second -- BLOCKING. Could be more elegant to incorporate this 
 2273              		.loc 1 675 0 discriminator 2
 2274 00d4 4FF47A70 		mov	r0, #1000
 2275 00d8 FFF7FEFF 		bl	CyDelay
 670:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2276              		.loc 1 670 0 discriminator 2
 2277 00dc FB8E     		ldrh	r3, [r7, #54]
 2278 00de 0133     		adds	r3, r3, #1
 2279 00e0 FB86     		strh	r3, [r7, #54]	@ movhi
 2280              	.L130:
 670:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2281              		.loc 1 670 0 is_stmt 0 discriminator 1
 2282 00e2 FB8E     		ldrh	r3, [r7, #54]
 2283 00e4 C72B     		cmp	r3, #199
 2284 00e6 E8D9     		bls	.L133
 2285 00e8 00E0     		b	.L132
 2286              	.L136:
 673:modem.c       ****             break;   
 2287              		.loc 1 673 0 is_stmt 1
 2288 00ea 00BF     		nop
 2289              	.L132:
 2290              	.LBE12:
 676:modem.c       ****     }
 677:modem.c       ****     
 678:modem.c       ****     //parse data here
 679:modem.c       ****     
 680:modem.c       ****     //example $GPSACP: 210926.000,4217.8003N,08341.3158W,2.3,258.2,3,17.8,4.8,2.6,220520,05,00
 681:modem.c       ****     float lat;
 682:modem.c       ****     float lon;
 683:modem.c       ****     float alt;
 684:modem.c       ****     
 685:modem.c       ****     // Look for $GPSACP:  in uart_received_string and save to sl
 686:modem.c       ****     // char *strstr(const char *haystack, const char *needle) function finds the first occurrence o
 687:modem.c       ****     char *s1 = strstr(uart_received_string,"$GPSACP: ");
 2291              		.loc 1 687 0
 2292 00ec 5A49     		ldr	r1, .L137+52
 2293 00ee 5B48     		ldr	r0, .L137+56
 2294 00f0 FFF7FEFF 		bl	strstr
 2295 00f4 B862     		str	r0, [r7, #40]
 688:modem.c       ****     // Look in sl for lat, long, alt and save in match 
 689:modem.c       ****     // int sscanf(const char *str, const char *format, ...) reads formatted input from a string.
 690:modem.c       ****     int match = sscanf(s1,"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s",&lat,&lon,&alt);
 2296              		.loc 1 690 0
 2297 00f6 07F10C01 		add	r1, r7, #12
 2298 00fa 07F11002 		add	r2, r7, #16
 2299 00fe 07F10803 		add	r3, r7, #8
 2300 0102 0093     		str	r3, [sp]
 2301 0104 0B46     		mov	r3, r1
 2302 0106 5649     		ldr	r1, .L137+60
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 57


 2303 0108 B86A     		ldr	r0, [r7, #40]
 2304 010a FFF7FEFF 		bl	sscanf
 2305 010e 7862     		str	r0, [r7, #36]
 691:modem.c       ****     if(match >= 3){
 2306              		.loc 1 691 0
 2307 0110 7B6A     		ldr	r3, [r7, #36]
 2308 0112 022B     		cmp	r3, #2
 2309 0114 60DD     		ble	.L134
 692:modem.c       ****         // Calculate lat and lon
 693:modem.c       ****         // floorf(x) calculates the largest integer that is less than or equal to x. 
 694:modem.c       ****         // fmod(double x, double y) returns the remainder of x divided by y.
 695:modem.c       ****         lat = floorf(lat/100) + fmod(lat,100)/60;
 2310              		.loc 1 695 0
 2311 0116 3B69     		ldr	r3, [r7, #16]	@ float
 2312 0118 5249     		ldr	r1, .L137+64
 2313 011a 1846     		mov	r0, r3
 2314 011c FFF7FEFF 		bl	__aeabi_fdiv
 2315 0120 0346     		mov	r3, r0
 2316 0122 1846     		mov	r0, r3
 2317 0124 FFF7FEFF 		bl	floorf
 2318 0128 0346     		mov	r3, r0
 2319 012a 1846     		mov	r0, r3
 2320 012c FFF7FEFF 		bl	__aeabi_f2d
 2321 0130 0446     		mov	r4, r0
 2322 0132 0D46     		mov	r5, r1
 2323 0134 3B69     		ldr	r3, [r7, #16]	@ float
 2324 0136 1846     		mov	r0, r3
 2325 0138 FFF7FEFF 		bl	__aeabi_f2d
 2326 013c 4FF00002 		mov	r2, #0
 2327 0140 494B     		ldr	r3, .L137+68
 2328 0142 FFF7FEFF 		bl	fmod
 2329 0146 4FF00002 		mov	r2, #0
 2330 014a 484B     		ldr	r3, .L137+72
 2331 014c FFF7FEFF 		bl	__aeabi_ddiv
 2332 0150 0246     		mov	r2, r0
 2333 0152 0B46     		mov	r3, r1
 2334 0154 2046     		mov	r0, r4
 2335 0156 2946     		mov	r1, r5
 2336 0158 FFF7FEFF 		bl	__aeabi_dadd
 2337 015c 0346     		mov	r3, r0
 2338 015e 0C46     		mov	r4, r1
 2339 0160 1846     		mov	r0, r3
 2340 0162 2146     		mov	r1, r4
 2341 0164 FFF7FEFF 		bl	__aeabi_d2f
 2342 0168 0346     		mov	r3, r0
 2343 016a 3B61     		str	r3, [r7, #16]	@ float
 696:modem.c       ****         lon = -(floorf(lon/100) + fmod(lon,100)/60);
 2344              		.loc 1 696 0
 2345 016c FB68     		ldr	r3, [r7, #12]	@ float
 2346 016e 3D49     		ldr	r1, .L137+64
 2347 0170 1846     		mov	r0, r3
 2348 0172 FFF7FEFF 		bl	__aeabi_fdiv
 2349 0176 0346     		mov	r3, r0
 2350 0178 1846     		mov	r0, r3
 2351 017a FFF7FEFF 		bl	floorf
 2352 017e 0346     		mov	r3, r0
 2353 0180 1846     		mov	r0, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 58


 2354 0182 FFF7FEFF 		bl	__aeabi_f2d
 2355 0186 0446     		mov	r4, r0
 2356 0188 0D46     		mov	r5, r1
 2357 018a FB68     		ldr	r3, [r7, #12]	@ float
 2358 018c 1846     		mov	r0, r3
 2359 018e FFF7FEFF 		bl	__aeabi_f2d
 2360 0192 4FF00002 		mov	r2, #0
 2361 0196 344B     		ldr	r3, .L137+68
 2362 0198 FFF7FEFF 		bl	fmod
 2363 019c 4FF00002 		mov	r2, #0
 2364 01a0 324B     		ldr	r3, .L137+72
 2365 01a2 FFF7FEFF 		bl	__aeabi_ddiv
 2366 01a6 0246     		mov	r2, r0
 2367 01a8 0B46     		mov	r3, r1
 2368 01aa 2046     		mov	r0, r4
 2369 01ac 2946     		mov	r1, r5
 2370 01ae FFF7FEFF 		bl	__aeabi_dadd
 2371 01b2 0346     		mov	r3, r0
 2372 01b4 0C46     		mov	r4, r1
 2373 01b6 1846     		mov	r0, r3
 2374 01b8 2146     		mov	r1, r4
 2375 01ba FFF7FEFF 		bl	__aeabi_d2f
 2376 01be 0346     		mov	r3, r0
 2377 01c0 83F00043 		eor	r3, r3, #-2147483648
 2378 01c4 FB60     		str	r3, [r7, #12]	@ float
 697:modem.c       ****         gps.altitude = alt; // Save alt, lat, and lon to the variable gps.
 2379              		.loc 1 697 0
 2380 01c6 BB68     		ldr	r3, [r7, #8]	@ float
 2381 01c8 FB61     		str	r3, [r7, #28]	@ float
 698:modem.c       ****         gps.latitude = lat;
 2382              		.loc 1 698 0
 2383 01ca 3B69     		ldr	r3, [r7, #16]	@ float
 2384 01cc 7B61     		str	r3, [r7, #20]	@ float
 699:modem.c       ****         gps.longitude = lon;
 2385              		.loc 1 699 0
 2386 01ce FB68     		ldr	r3, [r7, #12]	@ float
 2387 01d0 BB61     		str	r3, [r7, #24]	@ float
 700:modem.c       ****         gps.valid = 1;
 2388              		.loc 1 700 0
 2389 01d2 0123     		movs	r3, #1
 2390 01d4 87F82230 		strb	r3, [r7, #34]
 2391              	.L134:
 701:modem.c       ****     }
 702:modem.c       ****     
 703:modem.c       ****     // Disable LDO, just in case
 704:modem.c       ****     at_write_command("AT#GPIO=5,0,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2392              		.loc 1 704 0
 2393 01d8 4FF4FA62 		mov	r2, #2000
 2394 01dc 1249     		ldr	r1, .L137+4
 2395 01de 2448     		ldr	r0, .L137+76
 2396 01e0 FFF7FEFF 		bl	at_write_command
 705:modem.c       ****     
 706:modem.c       ****     // Flush modem's GPS data, just in case
 707:modem.c       ****     at_write_command("AT$GPSR=0\r","OK",DEFAULT_AT_TIMEOUT);
 2397              		.loc 1 707 0
 2398 01e4 4FF4FA62 		mov	r2, #2000
 2399 01e8 0F49     		ldr	r1, .L137+4
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 59


 2400 01ea 2248     		ldr	r0, .L137+80
 2401 01ec FFF7FEFF 		bl	at_write_command
 708:modem.c       ****     
 709:modem.c       ****     
 710:modem.c       ****     
 711:modem.c       ****     
 712:modem.c       ****     
 713:modem.c       ****     /* Relevant to 3g modem, can ignore
 714:modem.c       ****     
 715:modem.c       ****     //Setthe GPS Quality of Servicep arameters. Inorder,theyare<horiz_accuracy(inmeters)>,<vertical
 716:modem.c       ****     //AT$GPSQOS=50,50,100,0
 717:modem.c       ****     at_write_command("AT$GPSQOS=50,50,100,0\r","OK",DEFAULT_AT_TIMEOUT);
 718:modem.c       ****     
 719:modem.c       ****     //SettheSUPLLocationPlatform(SLP)addressoftheserverthatwillprovidetheA-GPS data:
 720:modem.c       ****     at_write_command("AT$LCSSLP=1,\"supl.google.com\"\r","OK",DEFAULT_AT_TIMEOUT);
 721:modem.c       ****     
 722:modem.c       ****     //unlock contedt, simnce its being used by modem
 723:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 724:modem.c       ****     //Lock context 1 for LoCation Services (LCS) use only
 725:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",5000u);
 726:modem.c       ****     
 727:modem.c       ****     //unlock contedt, simnce its being used by modem
 728:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 729:modem.c       ****     
 730:modem.c       ****     //EnableunsolicitedNMEAGPSdataintheformatof<NMEASENTENCE><CR>
 731:modem.c       ****     at_write_command("AT$GPSNMUN=2,1,0,0,0,0,0\r","OK",DEFAULT_AT_TIMEOUT);
 732:modem.c       ****     
 733:modem.c       ****     //StartGPSlocationservicerequest.Sendingthiscommandsets$GPSP=1
 734:modem.c       ****    uint8 gps_status = 0;
 735:modem.c       ****     for(uint16 i=0;i<200;i++){
 736:modem.c       ****         gps_status = at_write_command("AT$GPSSLSR=1,1,,,,,0,255\r","N",3000u);
 737:modem.c       ****         if(gps_status){
 738:modem.c       ****             break;   
 739:modem.c       ****         }
 740:modem.c       ****   }
 741:modem.c       ****     
 742:modem.c       ****     //$GPGGA,030307.691,4217.7923,N,08341.3240,W,1,05,2.25,225.0,M,,M,,0000*6E
 743:modem.c       ****     //$GPGGA,213852.000,4600.8755,N,09327.7008,W,1,05,3.00,292.0,M,,M,,0000*6E
 744:modem.c       ****     if(gps_status){
 745:modem.c       ****         float lat,lon,alt = 0;
 746:modem.c       ****         if(sscanf(uart_received_string,"%*s,%f,N,%f,W,%*s",&lat,&lon) > 0){
 747:modem.c       ****             gps.altitude = alt;
 748:modem.c       ****             gps.latitude = lat/60;
 749:modem.c       ****             gps.longitude = lon/60;
 750:modem.c       ****             gps.valid = 1;
 751:modem.c       ****         }
 752:modem.c       ****         
 753:modem.c       ****     }
 754:modem.c       ****     
 755:modem.c       ****     //turn off gps
 756:modem.c       ****     //AT$GPSP=0
 757:modem.c       ****     at_write_command("AT$GPSP=0\r","OK",DEFAULT_AT_TIMEOUT);
 758:modem.c       ****     
 759:modem.c       ****     */
 760:modem.c       **** 
 761:modem.c       ****     // Calculate time to lock into GPS location and save in variable lock_time
 762:modem.c       ****     lock_time = getTimeStamp() - lock_time;
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 60


 2402              		.loc 1 762 0
 2403 01f0 FFF7FEFF 		bl	getTimeStamp
 2404 01f4 0246     		mov	r2, r0
 2405 01f6 3B6B     		ldr	r3, [r7, #48]
 2406 01f8 D31A     		subs	r3, r2, r3
 2407 01fa 3B63     		str	r3, [r7, #48]
 763:modem.c       ****     gps.time_to_lock = lock_time;
 2408              		.loc 1 763 0
 2409 01fc 3B6B     		ldr	r3, [r7, #48]
 2410 01fe 9BB2     		uxth	r3, r3
 2411 0200 3B84     		strh	r3, [r7, #32]	@ movhi
 764:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Time to lock GPS: %d", gps.time_to_lock);
 2412              		.loc 1 764 0
 2413 0202 3B8C     		ldrh	r3, [r7, #32]
 2414 0204 1A46     		mov	r2, r3
 2415 0206 1C49     		ldr	r1, .L137+84
 2416 0208 0020     		movs	r0, #0
 2417 020a FFF7FEFF 		bl	printNotif
 765:modem.c       ****     
 766:modem.c       ****     return gps;
 2418              		.loc 1 766 0
 2419 020e 7B68     		ldr	r3, [r7, #4]
 2420 0210 1C46     		mov	r4, r3
 2421 0212 07F11403 		add	r3, r7, #20
 2422 0216 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2423 0218 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2424              	.L127:
 767:modem.c       ****     
 768:modem.c       **** }
 2425              		.loc 1 768 0
 2426 021c 7868     		ldr	r0, [r7, #4]
 2427 021e 3837     		adds	r7, r7, #56
 2428              		.cfi_def_cfa_offset 16
 2429 0220 BD46     		mov	sp, r7
 2430              		.cfi_def_cfa_register 13
 2431              		@ sp needed
 2432 0222 B0BD     		pop	{r4, r5, r7, pc}
 2433              	.L138:
 2434              		.align	2
 2435              	.L137:
 2436 0224 00000000 		.word	modem_state
 2437 0228 00000000 		.word	.LC0
 2438 022c 50040000 		.word	.LC49
 2439 0230 64040000 		.word	.LC50
 2440 0234 74040000 		.word	.LC51
 2441 0238 80040000 		.word	.LC52
 2442 023c 90040000 		.word	.LC53
 2443 0240 B4040000 		.word	.LC54
 2444 0244 C4040000 		.word	.LC55
 2445 0248 D4020000 		.word	.LC26
 2446 024c D4040000 		.word	.LC56
 2447 0250 EC040000 		.word	.LC57
 2448 0254 F0040000 		.word	.LC58
 2449 0258 FC040000 		.word	.LC59
 2450 025c 00000000 		.word	uart_received_string
 2451 0260 08050000 		.word	.LC60
 2452 0264 0000C842 		.word	1120403456
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 61


 2453 0268 00005940 		.word	1079574528
 2454 026c 00004E40 		.word	1078853632
 2455 0270 28050000 		.word	.LC61
 2456 0274 3C050000 		.word	.LC62
 2457 0278 48050000 		.word	.LC63
 2458              		.cfi_endproc
 2459              	.LFE85:
 2460              		.size	modem_get_gps_coordinates, .-modem_get_gps_coordinates
 2461              		.text
 2462              	.Letext0:
 2463              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2464              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2465              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2466              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2467              		.file 6 "testing.h"
 2468              		.file 7 "modem.h"
 2469              		.file 8 "data.h"
 2470              		.file 9 "notoriOS.h"
 2471              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 2472              		.section	.debug_info,"",%progbits
 2473              	.Ldebug_info0:
 2474 0000 3D0A0000 		.4byte	0xa3d
 2475 0004 0400     		.2byte	0x4
 2476 0006 00000000 		.4byte	.Ldebug_abbrev0
 2477 000a 04       		.byte	0x4
 2478 000b 01       		.uleb128 0x1
 2479 000c 3C000000 		.4byte	.LASF136
 2480 0010 0C       		.byte	0xc
 2481 0011 18030000 		.4byte	.LASF137
 2482 0015 B6040000 		.4byte	.LASF138
 2483 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2484 001d 00000000 		.4byte	0
 2485 0021 00000000 		.4byte	.Ldebug_line0
 2486 0025 02       		.uleb128 0x2
 2487 0026 01       		.byte	0x1
 2488 0027 06       		.byte	0x6
 2489 0028 26010000 		.4byte	.LASF0
 2490 002c 03       		.uleb128 0x3
 2491 002d 28000000 		.4byte	.LASF4
 2492 0031 02       		.byte	0x2
 2493 0032 1D       		.byte	0x1d
 2494 0033 37000000 		.4byte	0x37
 2495 0037 02       		.uleb128 0x2
 2496 0038 01       		.byte	0x1
 2497 0039 08       		.byte	0x8
 2498 003a 83040000 		.4byte	.LASF1
 2499 003e 02       		.uleb128 0x2
 2500 003f 02       		.byte	0x2
 2501 0040 05       		.byte	0x5
 2502 0041 50030000 		.4byte	.LASF2
 2503 0045 02       		.uleb128 0x2
 2504 0046 02       		.byte	0x2
 2505 0047 07       		.byte	0x7
 2506 0048 E3010000 		.4byte	.LASF3
 2507 004c 03       		.uleb128 0x3
 2508 004d 65030000 		.4byte	.LASF5
 2509 0051 02       		.byte	0x2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 62


 2510 0052 3F       		.byte	0x3f
 2511 0053 57000000 		.4byte	0x57
 2512 0057 02       		.uleb128 0x2
 2513 0058 04       		.byte	0x4
 2514 0059 05       		.byte	0x5
 2515 005a 80010000 		.4byte	.LASF6
 2516 005e 03       		.uleb128 0x3
 2517 005f 06020000 		.4byte	.LASF7
 2518 0063 02       		.byte	0x2
 2519 0064 41       		.byte	0x41
 2520 0065 69000000 		.4byte	0x69
 2521 0069 02       		.uleb128 0x2
 2522 006a 04       		.byte	0x4
 2523 006b 07       		.byte	0x7
 2524 006c 7D020000 		.4byte	.LASF8
 2525 0070 02       		.uleb128 0x2
 2526 0071 08       		.byte	0x8
 2527 0072 05       		.byte	0x5
 2528 0073 18010000 		.4byte	.LASF9
 2529 0077 02       		.uleb128 0x2
 2530 0078 08       		.byte	0x8
 2531 0079 07       		.byte	0x7
 2532 007a D7000000 		.4byte	.LASF10
 2533 007e 04       		.uleb128 0x4
 2534 007f 04       		.byte	0x4
 2535 0080 05       		.byte	0x5
 2536 0081 696E7400 		.ascii	"int\000"
 2537 0085 02       		.uleb128 0x2
 2538 0086 04       		.byte	0x4
 2539 0087 07       		.byte	0x7
 2540 0088 8E050000 		.4byte	.LASF11
 2541 008c 03       		.uleb128 0x3
 2542 008d 87060000 		.4byte	.LASF12
 2543 0091 03       		.byte	0x3
 2544 0092 18       		.byte	0x18
 2545 0093 2C000000 		.4byte	0x2c
 2546 0097 03       		.uleb128 0x3
 2547 0098 7B040000 		.4byte	.LASF13
 2548 009c 03       		.byte	0x3
 2549 009d 2C       		.byte	0x2c
 2550 009e 4C000000 		.4byte	0x4c
 2551 00a2 03       		.uleb128 0x3
 2552 00a3 48060000 		.4byte	.LASF14
 2553 00a7 03       		.byte	0x3
 2554 00a8 30       		.byte	0x30
 2555 00a9 5E000000 		.4byte	0x5e
 2556 00ad 05       		.uleb128 0x5
 2557 00ae A2010000 		.4byte	.LASF15
 2558 00b2 04       		.byte	0x4
 2559 00b3 9201     		.2byte	0x192
 2560 00b5 37000000 		.4byte	0x37
 2561 00b9 05       		.uleb128 0x5
 2562 00ba 0B000000 		.4byte	.LASF16
 2563 00be 04       		.byte	0x4
 2564 00bf 9301     		.2byte	0x193
 2565 00c1 45000000 		.4byte	0x45
 2566 00c5 05       		.uleb128 0x5
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 63


 2567 00c6 F6010000 		.4byte	.LASF17
 2568 00ca 04       		.byte	0x4
 2569 00cb 9401     		.2byte	0x194
 2570 00cd 69000000 		.4byte	0x69
 2571 00d1 05       		.uleb128 0x5
 2572 00d2 9B060000 		.4byte	.LASF18
 2573 00d6 04       		.byte	0x4
 2574 00d7 9601     		.2byte	0x196
 2575 00d9 3E000000 		.4byte	0x3e
 2576 00dd 05       		.uleb128 0x5
 2577 00de B7010000 		.4byte	.LASF19
 2578 00e2 04       		.byte	0x4
 2579 00e3 9701     		.2byte	0x197
 2580 00e5 57000000 		.4byte	0x57
 2581 00e9 02       		.uleb128 0x2
 2582 00ea 04       		.byte	0x4
 2583 00eb 04       		.byte	0x4
 2584 00ec 51040000 		.4byte	.LASF20
 2585 00f0 02       		.uleb128 0x2
 2586 00f1 08       		.byte	0x8
 2587 00f2 04       		.byte	0x4
 2588 00f3 B0010000 		.4byte	.LASF21
 2589 00f7 02       		.uleb128 0x2
 2590 00f8 01       		.byte	0x1
 2591 00f9 08       		.byte	0x8
 2592 00fa 75050000 		.4byte	.LASF22
 2593 00fe 02       		.uleb128 0x2
 2594 00ff 08       		.byte	0x8
 2595 0100 04       		.byte	0x4
 2596 0101 69050000 		.4byte	.LASF23
 2597 0105 02       		.uleb128 0x2
 2598 0106 04       		.byte	0x4
 2599 0107 07       		.byte	0x7
 2600 0108 D3030000 		.4byte	.LASF24
 2601 010c 06       		.uleb128 0x6
 2602 010d 04       		.byte	0x4
 2603 010e F7000000 		.4byte	0xf7
 2604 0112 06       		.uleb128 0x6
 2605 0113 04       		.byte	0x4
 2606 0114 18010000 		.4byte	0x118
 2607 0118 07       		.uleb128 0x7
 2608 0119 F7000000 		.4byte	0xf7
 2609 011d 08       		.uleb128 0x8
 2610 011e F7000000 		.4byte	0xf7
 2611 0122 2D010000 		.4byte	0x12d
 2612 0126 09       		.uleb128 0x9
 2613 0127 05010000 		.4byte	0x105
 2614 012b 17       		.byte	0x17
 2615 012c 00       		.byte	0
 2616 012d 0A       		.uleb128 0xa
 2617 012e 746D00   		.ascii	"tm\000"
 2618 0131 24       		.byte	0x24
 2619 0132 05       		.byte	0x5
 2620 0133 21       		.byte	0x21
 2621 0134 A5010000 		.4byte	0x1a5
 2622 0138 0B       		.uleb128 0xb
 2623 0139 51060000 		.4byte	.LASF25
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 64


 2624 013d 05       		.byte	0x5
 2625 013e 23       		.byte	0x23
 2626 013f 7E000000 		.4byte	0x7e
 2627 0143 00       		.byte	0
 2628 0144 0B       		.uleb128 0xb
 2629 0145 CC030000 		.4byte	.LASF26
 2630 0149 05       		.byte	0x5
 2631 014a 24       		.byte	0x24
 2632 014b 7E000000 		.4byte	0x7e
 2633 014f 04       		.byte	0x4
 2634 0150 0B       		.uleb128 0xb
 2635 0151 18000000 		.4byte	.LASF27
 2636 0155 05       		.byte	0x5
 2637 0156 25       		.byte	0x25
 2638 0157 7E000000 		.4byte	0x7e
 2639 015b 08       		.byte	0x8
 2640 015c 0B       		.uleb128 0xb
 2641 015d 33060000 		.4byte	.LASF28
 2642 0161 05       		.byte	0x5
 2643 0162 26       		.byte	0x26
 2644 0163 7E000000 		.4byte	0x7e
 2645 0167 0C       		.byte	0xc
 2646 0168 0B       		.uleb128 0xb
 2647 0169 28020000 		.4byte	.LASF29
 2648 016d 05       		.byte	0x5
 2649 016e 27       		.byte	0x27
 2650 016f 7E000000 		.4byte	0x7e
 2651 0173 10       		.byte	0x10
 2652 0174 0B       		.uleb128 0xb
 2653 0175 43020000 		.4byte	.LASF30
 2654 0179 05       		.byte	0x5
 2655 017a 28       		.byte	0x28
 2656 017b 7E000000 		.4byte	0x7e
 2657 017f 14       		.byte	0x14
 2658 0180 0B       		.uleb128 0xb
 2659 0181 4A050000 		.4byte	.LASF31
 2660 0185 05       		.byte	0x5
 2661 0186 29       		.byte	0x29
 2662 0187 7E000000 		.4byte	0x7e
 2663 018b 18       		.byte	0x18
 2664 018c 0B       		.uleb128 0xb
 2665 018d 20000000 		.4byte	.LASF32
 2666 0191 05       		.byte	0x5
 2667 0192 2A       		.byte	0x2a
 2668 0193 7E000000 		.4byte	0x7e
 2669 0197 1C       		.byte	0x1c
 2670 0198 0B       		.uleb128 0xb
 2671 0199 DF020000 		.4byte	.LASF33
 2672 019d 05       		.byte	0x5
 2673 019e 2B       		.byte	0x2b
 2674 019f 7E000000 		.4byte	0x7e
 2675 01a3 20       		.byte	0x20
 2676 01a4 00       		.byte	0
 2677 01a5 0C       		.uleb128 0xc
 2678 01a6 8101     		.2byte	0x181
 2679 01a8 06       		.byte	0x6
 2680 01a9 0A       		.byte	0xa
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 65


 2681 01aa D3010000 		.4byte	0x1d3
 2682 01ae 0B       		.uleb128 0xb
 2683 01af 17040000 		.4byte	.LASF34
 2684 01b3 06       		.byte	0x6
 2685 01b4 0C       		.byte	0xc
 2686 01b5 D3010000 		.4byte	0x1d3
 2687 01b9 00       		.byte	0
 2688 01ba 0B       		.uleb128 0xb
 2689 01bb 58060000 		.4byte	.LASF35
 2690 01bf 06       		.byte	0x6
 2691 01c0 0D       		.byte	0xd
 2692 01c1 AD000000 		.4byte	0xad
 2693 01c5 80       		.byte	0x80
 2694 01c6 0B       		.uleb128 0xb
 2695 01c7 1E050000 		.4byte	.LASF36
 2696 01cb 06       		.byte	0x6
 2697 01cc 0F       		.byte	0xf
 2698 01cd E3010000 		.4byte	0x1e3
 2699 01d1 81       		.byte	0x81
 2700 01d2 00       		.byte	0
 2701 01d3 08       		.uleb128 0x8
 2702 01d4 F7000000 		.4byte	0xf7
 2703 01d8 E3010000 		.4byte	0x1e3
 2704 01dc 09       		.uleb128 0x9
 2705 01dd 05010000 		.4byte	0x105
 2706 01e1 7F       		.byte	0x7f
 2707 01e2 00       		.byte	0
 2708 01e3 08       		.uleb128 0x8
 2709 01e4 F7000000 		.4byte	0xf7
 2710 01e8 F3010000 		.4byte	0x1f3
 2711 01ec 09       		.uleb128 0x9
 2712 01ed 05010000 		.4byte	0x105
 2713 01f1 FF       		.byte	0xff
 2714 01f2 00       		.byte	0
 2715 01f3 03       		.uleb128 0x3
 2716 01f4 06050000 		.4byte	.LASF37
 2717 01f8 06       		.byte	0x6
 2718 01f9 10       		.byte	0x10
 2719 01fa A5010000 		.4byte	0x1a5
 2720 01fe 0D       		.uleb128 0xd
 2721 01ff 3C       		.byte	0x3c
 2722 0200 07       		.byte	0x7
 2723 0201 2C       		.byte	0x2c
 2724 0202 2B020000 		.4byte	0x22b
 2725 0206 0B       		.uleb128 0xb
 2726 0207 2C060000 		.4byte	.LASF38
 2727 020b 07       		.byte	0x7
 2728 020c 2D       		.byte	0x2d
 2729 020d 2B020000 		.4byte	0x22b
 2730 0211 00       		.byte	0
 2731 0212 0B       		.uleb128 0xb
 2732 0213 A0050000 		.4byte	.LASF39
 2733 0217 07       		.byte	0x7
 2734 0218 2E       		.byte	0x2e
 2735 0219 2B020000 		.4byte	0x22b
 2736 021d 14       		.byte	0x14
 2737 021e 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 66


 2738 021f 19050000 		.4byte	.LASF40
 2739 0223 07       		.byte	0x7
 2740 0224 2F       		.byte	0x2f
 2741 0225 2B020000 		.4byte	0x22b
 2742 0229 28       		.byte	0x28
 2743 022a 00       		.byte	0
 2744 022b 08       		.uleb128 0x8
 2745 022c F7000000 		.4byte	0xf7
 2746 0230 3B020000 		.4byte	0x23b
 2747 0234 09       		.uleb128 0x9
 2748 0235 05010000 		.4byte	0x105
 2749 0239 13       		.byte	0x13
 2750 023a 00       		.byte	0
 2751 023b 03       		.uleb128 0x3
 2752 023c B4050000 		.4byte	.LASF41
 2753 0240 07       		.byte	0x7
 2754 0241 30       		.byte	0x30
 2755 0242 FE010000 		.4byte	0x1fe
 2756 0246 0D       		.uleb128 0xd
 2757 0247 10       		.byte	0x10
 2758 0248 07       		.byte	0x7
 2759 0249 32       		.byte	0x32
 2760 024a AF020000 		.4byte	0x2af
 2761 024e 0B       		.uleb128 0xb
 2762 024f CF060000 		.4byte	.LASF42
 2763 0253 07       		.byte	0x7
 2764 0254 33       		.byte	0x33
 2765 0255 AD000000 		.4byte	0xad
 2766 0259 00       		.byte	0
 2767 025a 0E       		.uleb128 0xe
 2768 025b 62657200 		.ascii	"ber\000"
 2769 025f 07       		.byte	0x7
 2770 0260 34       		.byte	0x34
 2771 0261 AD000000 		.4byte	0xad
 2772 0265 01       		.byte	0x1
 2773 0266 0B       		.uleb128 0xb
 2774 0267 B1040000 		.4byte	.LASF43
 2775 026b 07       		.byte	0x7
 2776 026c 35       		.byte	0x35
 2777 026d AD000000 		.4byte	0xad
 2778 0271 02       		.byte	0x2
 2779 0272 0B       		.uleb128 0xb
 2780 0273 32010000 		.4byte	.LASF44
 2781 0277 07       		.byte	0x7
 2782 0278 36       		.byte	0x36
 2783 0279 AD000000 		.4byte	0xad
 2784 027d 03       		.byte	0x3
 2785 027e 0B       		.uleb128 0xb
 2786 027f A7040000 		.4byte	.LASF45
 2787 0283 07       		.byte	0x7
 2788 0284 37       		.byte	0x37
 2789 0285 AD000000 		.4byte	0xad
 2790 0289 04       		.byte	0x4
 2791 028a 0B       		.uleb128 0xb
 2792 028b 25050000 		.4byte	.LASF46
 2793 028f 07       		.byte	0x7
 2794 0290 38       		.byte	0x38
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 67


 2795 0291 AD000000 		.4byte	0xad
 2796 0295 05       		.byte	0x5
 2797 0296 0B       		.uleb128 0xb
 2798 0297 37010000 		.4byte	.LASF47
 2799 029b 07       		.byte	0x7
 2800 029c 39       		.byte	0x39
 2801 029d 7E000000 		.4byte	0x7e
 2802 02a1 08       		.byte	0x8
 2803 02a2 0B       		.uleb128 0xb
 2804 02a3 33030000 		.4byte	.LASF48
 2805 02a7 07       		.byte	0x7
 2806 02a8 3A       		.byte	0x3a
 2807 02a9 7E000000 		.4byte	0x7e
 2808 02ad 0C       		.byte	0xc
 2809 02ae 00       		.byte	0
 2810 02af 03       		.uleb128 0x3
 2811 02b0 2A050000 		.4byte	.LASF49
 2812 02b4 07       		.byte	0x7
 2813 02b5 3B       		.byte	0x3b
 2814 02b6 46020000 		.4byte	0x246
 2815 02ba 0D       		.uleb128 0xd
 2816 02bb 10       		.byte	0x10
 2817 02bc 07       		.byte	0x7
 2818 02bd 3D       		.byte	0x3d
 2819 02be FF020000 		.4byte	0x2ff
 2820 02c2 0B       		.uleb128 0xb
 2821 02c3 0E040000 		.4byte	.LASF50
 2822 02c7 07       		.byte	0x7
 2823 02c8 3E       		.byte	0x3e
 2824 02c9 E9000000 		.4byte	0xe9
 2825 02cd 00       		.byte	0
 2826 02ce 0B       		.uleb128 0xb
 2827 02cf 32000000 		.4byte	.LASF51
 2828 02d3 07       		.byte	0x7
 2829 02d4 3F       		.byte	0x3f
 2830 02d5 E9000000 		.4byte	0xe9
 2831 02d9 04       		.byte	0x4
 2832 02da 0B       		.uleb128 0xb
 2833 02db 99010000 		.4byte	.LASF52
 2834 02df 07       		.byte	0x7
 2835 02e0 40       		.byte	0x40
 2836 02e1 E9000000 		.4byte	0xe9
 2837 02e5 08       		.byte	0x8
 2838 02e6 0B       		.uleb128 0xb
 2839 02e7 BD020000 		.4byte	.LASF53
 2840 02eb 07       		.byte	0x7
 2841 02ec 41       		.byte	0x41
 2842 02ed B9000000 		.4byte	0xb9
 2843 02f1 0C       		.byte	0xc
 2844 02f2 0B       		.uleb128 0xb
 2845 02f3 3B060000 		.4byte	.LASF54
 2846 02f7 07       		.byte	0x7
 2847 02f8 42       		.byte	0x42
 2848 02f9 AD000000 		.4byte	0xad
 2849 02fd 0E       		.byte	0xe
 2850 02fe 00       		.byte	0
 2851 02ff 03       		.uleb128 0x3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 68


 2852 0300 C1050000 		.4byte	.LASF55
 2853 0304 07       		.byte	0x7
 2854 0305 44       		.byte	0x44
 2855 0306 BA020000 		.4byte	0x2ba
 2856 030a 0D       		.uleb128 0xd
 2857 030b 2C       		.byte	0x2c
 2858 030c 08       		.byte	0x8
 2859 030d 10       		.byte	0x10
 2860 030e 37030000 		.4byte	0x337
 2861 0312 0E       		.uleb128 0xe
 2862 0313 6B657900 		.ascii	"key\000"
 2863 0317 08       		.byte	0x8
 2864 0318 11       		.byte	0x11
 2865 0319 2B020000 		.4byte	0x22b
 2866 031d 00       		.byte	0
 2867 031e 0B       		.uleb128 0xb
 2868 031f 12000000 		.4byte	.LASF56
 2869 0323 08       		.byte	0x8
 2870 0324 12       		.byte	0x12
 2871 0325 2B020000 		.4byte	0x22b
 2872 0329 14       		.byte	0x14
 2873 032a 0B       		.uleb128 0xb
 2874 032b FC060000 		.4byte	.LASF57
 2875 032f 08       		.byte	0x8
 2876 0330 13       		.byte	0x13
 2877 0331 DD000000 		.4byte	0xdd
 2878 0335 28       		.byte	0x28
 2879 0336 00       		.byte	0
 2880 0337 03       		.uleb128 0x3
 2881 0338 67020000 		.4byte	.LASF58
 2882 033c 08       		.byte	0x8
 2883 033d 14       		.byte	0x14
 2884 033e 0A030000 		.4byte	0x30a
 2885 0342 0D       		.uleb128 0xd
 2886 0343 1C       		.byte	0x1c
 2887 0344 09       		.byte	0x9
 2888 0345 37       		.byte	0x37
 2889 0346 63030000 		.4byte	0x363
 2890 034a 0B       		.uleb128 0xb
 2891 034b E8020000 		.4byte	.LASF59
 2892 034f 09       		.byte	0x9
 2893 0350 39       		.byte	0x39
 2894 0351 63030000 		.4byte	0x363
 2895 0355 00       		.byte	0
 2896 0356 0B       		.uleb128 0xb
 2897 0357 FB020000 		.4byte	.LASF60
 2898 035b 09       		.byte	0x9
 2899 035c 3A       		.byte	0x3a
 2900 035d 1D010000 		.4byte	0x11d
 2901 0361 04       		.byte	0x4
 2902 0362 00       		.byte	0
 2903 0363 06       		.uleb128 0x6
 2904 0364 04       		.byte	0x4
 2905 0365 3B020000 		.4byte	0x23b
 2906 0369 03       		.uleb128 0x3
 2907 036a 95030000 		.4byte	.LASF61
 2908 036e 09       		.byte	0x9
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 69


 2909 036f 3C       		.byte	0x3c
 2910 0370 42030000 		.4byte	0x342
 2911 0374 0C       		.uleb128 0xc
 2912 0375 4401     		.2byte	0x144
 2913 0377 09       		.byte	0x9
 2914 0378 42       		.byte	0x42
 2915 0379 C7030000 		.4byte	0x3c7
 2916 037d 0B       		.uleb128 0xb
 2917 037e A8010000 		.4byte	.LASF62
 2918 0382 09       		.byte	0x9
 2919 0383 45       		.byte	0x45
 2920 0384 2B020000 		.4byte	0x22b
 2921 0388 00       		.byte	0
 2922 0389 0B       		.uleb128 0xb
 2923 038a F3020000 		.4byte	.LASF63
 2924 038e 09       		.byte	0x9
 2925 038f 47       		.byte	0x47
 2926 0390 C7030000 		.4byte	0x3c7
 2927 0394 14       		.byte	0x14
 2928 0395 0B       		.uleb128 0xb
 2929 0396 D7020000 		.4byte	.LASF64
 2930 039a 09       		.byte	0x9
 2931 039b 48       		.byte	0x48
 2932 039c 7E000000 		.4byte	0x7e
 2933 03a0 78       		.byte	0x78
 2934 03a1 0B       		.uleb128 0xb
 2935 03a2 CF020000 		.4byte	.LASF65
 2936 03a6 09       		.byte	0x9
 2937 03a7 49       		.byte	0x49
 2938 03a8 D7030000 		.4byte	0x3d7
 2939 03ac 7C       		.byte	0x7c
 2940 03ad 0B       		.uleb128 0xb
 2941 03ae 2F020000 		.4byte	.LASF66
 2942 03b2 09       		.byte	0x9
 2943 03b3 4A       		.byte	0x4a
 2944 03b4 C7030000 		.4byte	0x3c7
 2945 03b8 AE       		.byte	0xae
 2946 03b9 0F       		.uleb128 0xf
 2947 03ba 8F060000 		.4byte	.LASF67
 2948 03be 09       		.byte	0x9
 2949 03bf 4B       		.byte	0x4b
 2950 03c0 D7030000 		.4byte	0x3d7
 2951 03c4 1201     		.2byte	0x112
 2952 03c6 00       		.byte	0
 2953 03c7 08       		.uleb128 0x8
 2954 03c8 F7000000 		.4byte	0xf7
 2955 03cc D7030000 		.4byte	0x3d7
 2956 03d0 09       		.uleb128 0x9
 2957 03d1 05010000 		.4byte	0x105
 2958 03d5 63       		.byte	0x63
 2959 03d6 00       		.byte	0
 2960 03d7 08       		.uleb128 0x8
 2961 03d8 F7000000 		.4byte	0xf7
 2962 03dc E7030000 		.4byte	0x3e7
 2963 03e0 09       		.uleb128 0x9
 2964 03e1 05010000 		.4byte	0x105
 2965 03e5 31       		.byte	0x31
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 70


 2966 03e6 00       		.byte	0
 2967 03e7 03       		.uleb128 0x3
 2968 03e8 78060000 		.4byte	.LASF68
 2969 03ec 09       		.byte	0x9
 2970 03ed 4E       		.byte	0x4e
 2971 03ee 74030000 		.4byte	0x374
 2972 03f2 10       		.uleb128 0x10
 2973 03f3 6E040000 		.4byte	.LASF96
 2974 03f7 01       		.byte	0x1
 2975 03f8 16       		.byte	0x16
 2976 03f9 00000000 		.4byte	.LFB64
 2977 03fd 44000000 		.4byte	.LFE64-.LFB64
 2978 0401 01       		.uleb128 0x1
 2979 0402 9C       		.byte	0x9c
 2980 0403 11       		.uleb128 0x11
 2981 0404 57040000 		.4byte	.LASF69
 2982 0408 01       		.byte	0x1
 2983 0409 20       		.byte	0x20
 2984 040a 00000000 		.4byte	.LFB65
 2985 040e 54000000 		.4byte	.LFE65-.LFB65
 2986 0412 01       		.uleb128 0x1
 2987 0413 9C       		.byte	0x9c
 2988 0414 11       		.uleb128 0x11
 2989 0415 14060000 		.4byte	.LASF70
 2990 0419 01       		.byte	0x1
 2991 041a 36       		.byte	0x36
 2992 041b 00000000 		.4byte	.LFB66
 2993 041f 32000000 		.4byte	.LFE66-.LFB66
 2994 0423 01       		.uleb128 0x1
 2995 0424 9C       		.byte	0x9c
 2996 0425 11       		.uleb128 0x11
 2997 0426 51020000 		.4byte	.LASF71
 2998 042a 01       		.byte	0x1
 2999 042b 46       		.byte	0x46
 3000 042c 00000000 		.4byte	.LFB67
 3001 0430 20000000 		.4byte	.LFE67-.LFB67
 3002 0434 01       		.uleb128 0x1
 3003 0435 9C       		.byte	0x9c
 3004 0436 11       		.uleb128 0x11
 3005 0437 EB060000 		.4byte	.LASF72
 3006 043b 01       		.byte	0x1
 3007 043c 4F       		.byte	0x4f
 3008 043d 00000000 		.4byte	.LFB68
 3009 0441 40000000 		.4byte	.LFE68-.LFB68
 3010 0445 01       		.uleb128 0x1
 3011 0446 9C       		.byte	0x9c
 3012 0447 12       		.uleb128 0x12
 3013 0448 09030000 		.4byte	.LASF86
 3014 044c 01       		.byte	0x1
 3015 044d 61       		.byte	0x61
 3016 044e AD000000 		.4byte	0xad
 3017 0452 00000000 		.4byte	.LFB69
 3018 0456 DC000000 		.4byte	.LFE69-.LFB69
 3019 045a 01       		.uleb128 0x1
 3020 045b 9C       		.byte	0x9c
 3021 045c BB040000 		.4byte	0x4bb
 3022 0460 13       		.uleb128 0x13
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 71


 3023 0461 A1060000 		.4byte	.LASF73
 3024 0465 01       		.byte	0x1
 3025 0466 6A       		.byte	0x6a
 3026 0467 AD000000 		.4byte	0xad
 3027 046b 02       		.uleb128 0x2
 3028 046c 91       		.byte	0x91
 3029 046d 77       		.sleb128 -9
 3030 046e 13       		.uleb128 0x13
 3031 046f AA060000 		.4byte	.LASF74
 3032 0473 01       		.byte	0x1
 3033 0474 6B       		.byte	0x6b
 3034 0475 AD000000 		.4byte	0xad
 3035 0479 02       		.uleb128 0x2
 3036 047a 91       		.byte	0x91
 3037 047b 74       		.sleb128 -12
 3038 047c 13       		.uleb128 0x13
 3039 047d B3060000 		.4byte	.LASF75
 3040 0481 01       		.byte	0x1
 3041 0482 6D       		.byte	0x6d
 3042 0483 57000000 		.4byte	0x57
 3043 0487 02       		.uleb128 0x2
 3044 0488 91       		.byte	0x91
 3045 0489 70       		.sleb128 -16
 3046 048a 14       		.uleb128 0x14
 3047 048b 26000000 		.4byte	.LBB2
 3048 048f 4A000000 		.4byte	.LBE2-.LBB2
 3049 0493 13       		.uleb128 0x13
 3050 0494 AA060000 		.4byte	.LASF74
 3051 0498 01       		.byte	0x1
 3052 0499 70       		.byte	0x70
 3053 049a AD000000 		.4byte	0xad
 3054 049e 02       		.uleb128 0x2
 3055 049f 91       		.byte	0x91
 3056 04a0 76       		.sleb128 -10
 3057 04a1 14       		.uleb128 0x14
 3058 04a2 2C000000 		.4byte	.LBB3
 3059 04a6 2A000000 		.4byte	.LBE3-.LBB3
 3060 04aa 13       		.uleb128 0x13
 3061 04ab 73020000 		.4byte	.LASF76
 3062 04af 01       		.byte	0x1
 3063 04b0 72       		.byte	0x72
 3064 04b1 AD000000 		.4byte	0xad
 3065 04b5 02       		.uleb128 0x2
 3066 04b6 91       		.byte	0x91
 3067 04b7 75       		.sleb128 -11
 3068 04b8 00       		.byte	0
 3069 04b9 00       		.byte	0
 3070 04ba 00       		.byte	0
 3071 04bb 11       		.uleb128 0x11
 3072 04bc 52050000 		.4byte	.LASF77
 3073 04c0 01       		.byte	0x1
 3074 04c1 93       		.byte	0x93
 3075 04c2 00000000 		.4byte	.LFB70
 3076 04c6 1C000000 		.4byte	.LFE70-.LFB70
 3077 04ca 01       		.uleb128 0x1
 3078 04cb 9C       		.byte	0x9c
 3079 04cc 11       		.uleb128 0x11
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 72


 3080 04cd 38050000 		.4byte	.LASF78
 3081 04d1 01       		.byte	0x1
 3082 04d2 9B       		.byte	0x9b
 3083 04d3 00000000 		.4byte	.LFB71
 3084 04d7 28000000 		.4byte	.LFE71-.LFB71
 3085 04db 01       		.uleb128 0x1
 3086 04dc 9C       		.byte	0x9c
 3087 04dd 15       		.uleb128 0x15
 3088 04de 84030000 		.4byte	.LASF90
 3089 04e2 01       		.byte	0x1
 3090 04e3 A6       		.byte	0xa6
 3091 04e4 8C000000 		.4byte	0x8c
 3092 04e8 00000000 		.4byte	.LFB72
 3093 04ec C8000000 		.4byte	.LFE72-.LFB72
 3094 04f0 01       		.uleb128 0x1
 3095 04f1 9C       		.byte	0x9c
 3096 04f2 6F050000 		.4byte	0x56f
 3097 04f6 16       		.uleb128 0x16
 3098 04f7 37040000 		.4byte	.LASF79
 3099 04fb 01       		.byte	0x1
 3100 04fc A6       		.byte	0xa6
 3101 04fd 0C010000 		.4byte	0x10c
 3102 0501 02       		.uleb128 0x2
 3103 0502 91       		.byte	0x91
 3104 0503 5C       		.sleb128 -36
 3105 0504 16       		.uleb128 0x16
 3106 0505 BD060000 		.4byte	.LASF80
 3107 0509 01       		.byte	0x1
 3108 050a A6       		.byte	0xa6
 3109 050b 0C010000 		.4byte	0x10c
 3110 050f 02       		.uleb128 0x2
 3111 0510 91       		.byte	0x91
 3112 0511 58       		.sleb128 -40
 3113 0512 16       		.uleb128 0x16
 3114 0513 9E020000 		.4byte	.LASF81
 3115 0517 01       		.byte	0x1
 3116 0518 A6       		.byte	0xa6
 3117 0519 A2000000 		.4byte	0xa2
 3118 051d 02       		.uleb128 0x2
 3119 051e 91       		.byte	0x91
 3120 051f 54       		.sleb128 -44
 3121 0520 13       		.uleb128 0x13
 3122 0521 79030000 		.4byte	.LASF82
 3123 0525 01       		.byte	0x1
 3124 0526 A8       		.byte	0xa8
 3125 0527 C5000000 		.4byte	0xc5
 3126 052b 02       		.uleb128 0x2
 3127 052c 91       		.byte	0x91
 3128 052d 74       		.sleb128 -12
 3129 052e 14       		.uleb128 0x14
 3130 052f 16000000 		.4byte	.LBB4
 3131 0533 88000000 		.4byte	.LBE4-.LBB4
 3132 0537 13       		.uleb128 0x13
 3133 0538 40040000 		.4byte	.LASF83
 3134 053c 01       		.byte	0x1
 3135 053d AC       		.byte	0xac
 3136 053e 0C010000 		.4byte	0x10c
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 73


 3137 0542 02       		.uleb128 0x2
 3138 0543 91       		.byte	0x91
 3139 0544 64       		.sleb128 -28
 3140 0545 13       		.uleb128 0x13
 3141 0546 A1040000 		.4byte	.LASF84
 3142 054a 01       		.byte	0x1
 3143 054b AD       		.byte	0xad
 3144 054c A2000000 		.4byte	0xa2
 3145 0550 02       		.uleb128 0x2
 3146 0551 91       		.byte	0x91
 3147 0552 6C       		.sleb128 -20
 3148 0553 17       		.uleb128 0x17
 3149 0554 6900     		.ascii	"i\000"
 3150 0556 01       		.byte	0x1
 3151 0557 AE       		.byte	0xae
 3152 0558 A2000000 		.4byte	0xa2
 3153 055c 02       		.uleb128 0x2
 3154 055d 91       		.byte	0x91
 3155 055e 70       		.sleb128 -16
 3156 055f 13       		.uleb128 0x13
 3157 0560 FD010000 		.4byte	.LASF85
 3158 0564 01       		.byte	0x1
 3159 0565 AE       		.byte	0xae
 3160 0566 A2000000 		.4byte	0xa2
 3161 056a 02       		.uleb128 0x2
 3162 056b 91       		.byte	0x91
 3163 056c 68       		.sleb128 -24
 3164 056d 00       		.byte	0
 3165 056e 00       		.byte	0
 3166 056f 12       		.uleb128 0x12
 3167 0570 21040000 		.4byte	.LASF87
 3168 0574 01       		.byte	0x1
 3169 0575 DA       		.byte	0xda
 3170 0576 F3010000 		.4byte	0x1f3
 3171 057a 00000000 		.4byte	.LFB73
 3172 057e FC000000 		.4byte	.LFE73-.LFB73
 3173 0582 01       		.uleb128 0x1
 3174 0583 9C       		.byte	0x9c
 3175 0584 C6050000 		.4byte	0x5c6
 3176 0588 13       		.uleb128 0x13
 3177 0589 FA000000 		.4byte	.LASF88
 3178 058d 01       		.byte	0x1
 3179 058e DC       		.byte	0xdc
 3180 058f F3010000 		.4byte	0x1f3
 3181 0593 03       		.uleb128 0x3
 3182 0594 91       		.byte	0x91
 3183 0595 E47C     		.sleb128 -412
 3184 0597 14       		.uleb128 0x14
 3185 0598 4A000000 		.4byte	.LBB5
 3186 059c 84000000 		.4byte	.LBE5-.LBB5
 3187 05a0 17       		.uleb128 0x17
 3188 05a1 6900     		.ascii	"i\000"
 3189 05a3 01       		.byte	0x1
 3190 05a4 E3       		.byte	0xe3
 3191 05a5 7E000000 		.4byte	0x7e
 3192 05a9 02       		.uleb128 0x2
 3193 05aa 91       		.byte	0x91
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 74


 3194 05ab 6C       		.sleb128 -20
 3195 05ac 14       		.uleb128 0x14
 3196 05ad 70000000 		.4byte	.LBB6
 3197 05b1 46000000 		.4byte	.LBE6-.LBB6
 3198 05b5 13       		.uleb128 0x13
 3199 05b6 D6010000 		.4byte	.LASF89
 3200 05ba 01       		.byte	0x1
 3201 05bb F0       		.byte	0xf0
 3202 05bc 57000000 		.4byte	0x57
 3203 05c0 02       		.uleb128 0x2
 3204 05c1 91       		.byte	0x91
 3205 05c2 68       		.sleb128 -24
 3206 05c3 00       		.byte	0
 3207 05c4 00       		.byte	0
 3208 05c5 00       		.byte	0
 3209 05c6 18       		.uleb128 0x18
 3210 05c7 8F020000 		.4byte	.LASF91
 3211 05cb 01       		.byte	0x1
 3212 05cc 0401     		.2byte	0x104
 3213 05ce AD000000 		.4byte	0xad
 3214 05d2 00000000 		.4byte	.LFB74
 3215 05d6 78000000 		.4byte	.LFE74-.LFB74
 3216 05da 01       		.uleb128 0x1
 3217 05db 9C       		.byte	0x9c
 3218 05dc 37060000 		.4byte	0x637
 3219 05e0 19       		.uleb128 0x19
 3220 05e1 6F030000 		.4byte	.LASF92
 3221 05e5 01       		.byte	0x1
 3222 05e6 0401     		.2byte	0x104
 3223 05e8 0C010000 		.4byte	0x10c
 3224 05ec 02       		.uleb128 0x2
 3225 05ed 91       		.byte	0x91
 3226 05ee 6C       		.sleb128 -20
 3227 05ef 19       		.uleb128 0x19
 3228 05f0 20030000 		.4byte	.LASF93
 3229 05f4 01       		.byte	0x1
 3230 05f5 0401     		.2byte	0x104
 3231 05f7 12010000 		.4byte	0x112
 3232 05fb 02       		.uleb128 0x2
 3233 05fc 91       		.byte	0x91
 3234 05fd 68       		.sleb128 -24
 3235 05fe 19       		.uleb128 0x19
 3236 05ff 46030000 		.4byte	.LASF94
 3237 0603 01       		.byte	0x1
 3238 0604 0401     		.2byte	0x104
 3239 0606 12010000 		.4byte	0x112
 3240 060a 02       		.uleb128 0x2
 3241 060b 91       		.byte	0x91
 3242 060c 64       		.sleb128 -28
 3243 060d 19       		.uleb128 0x19
 3244 060e 2C030000 		.4byte	.LASF95
 3245 0612 01       		.byte	0x1
 3246 0613 0401     		.2byte	0x104
 3247 0615 0C010000 		.4byte	0x10c
 3248 0619 02       		.uleb128 0x2
 3249 061a 91       		.byte	0x91
 3250 061b 60       		.sleb128 -32
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 75


 3251 061c 1A       		.uleb128 0x1a
 3252 061d 6100     		.ascii	"a\000"
 3253 061f 01       		.byte	0x1
 3254 0620 0601     		.2byte	0x106
 3255 0622 0C010000 		.4byte	0x10c
 3256 0626 02       		.uleb128 0x2
 3257 0627 91       		.byte	0x91
 3258 0628 74       		.sleb128 -12
 3259 0629 1A       		.uleb128 0x1a
 3260 062a 6200     		.ascii	"b\000"
 3261 062c 01       		.byte	0x1
 3262 062d 0601     		.2byte	0x106
 3263 062f 0C010000 		.4byte	0x10c
 3264 0633 02       		.uleb128 0x2
 3265 0634 91       		.byte	0x91
 3266 0635 70       		.sleb128 -16
 3267 0636 00       		.byte	0
 3268 0637 1B       		.uleb128 0x1b
 3269 0638 7A050000 		.4byte	.LASF97
 3270 063c 01       		.byte	0x1
 3271 063d 2301     		.2byte	0x123
 3272 063f AD000000 		.4byte	0xad
 3273 0643 00000000 		.4byte	.LFB75
 3274 0647 08010000 		.4byte	.LFE75-.LFB75
 3275 064b 01       		.uleb128 0x1
 3276 064c 9C       		.byte	0x9c
 3277 064d 1C       		.uleb128 0x1c
 3278 064e DC030000 		.4byte	.LASF98
 3279 0652 01       		.byte	0x1
 3280 0653 5E01     		.2byte	0x15e
 3281 0655 AD000000 		.4byte	0xad
 3282 0659 00000000 		.4byte	.LFB76
 3283 065d A0000000 		.4byte	.LFE76-.LFB76
 3284 0661 01       		.uleb128 0x1
 3285 0662 9C       		.byte	0x9c
 3286 0663 90060000 		.4byte	0x690
 3287 0667 1D       		.uleb128 0x1d
 3288 0668 58060000 		.4byte	.LASF35
 3289 066c 01       		.byte	0x1
 3290 066d 6201     		.2byte	0x162
 3291 066f AD000000 		.4byte	0xad
 3292 0673 02       		.uleb128 0x2
 3293 0674 91       		.byte	0x91
 3294 0675 77       		.sleb128 -9
 3295 0676 14       		.uleb128 0x14
 3296 0677 36000000 		.4byte	.LBB7
 3297 067b 34000000 		.4byte	.LBE7-.LBB7
 3298 067f 1D       		.uleb128 0x1d
 3299 0680 74030000 		.4byte	.LASF99
 3300 0684 01       		.byte	0x1
 3301 0685 6A01     		.2byte	0x16a
 3302 0687 90060000 		.4byte	0x690
 3303 068b 02       		.uleb128 0x2
 3304 068c 91       		.byte	0x91
 3305 068d 6C       		.sleb128 -20
 3306 068e 00       		.byte	0
 3307 068f 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 76


 3308 0690 08       		.uleb128 0x8
 3309 0691 F7000000 		.4byte	0xf7
 3310 0695 A0060000 		.4byte	0x6a0
 3311 0699 09       		.uleb128 0x9
 3312 069a 05010000 		.4byte	0x105
 3313 069e 09       		.byte	0x9
 3314 069f 00       		.byte	0
 3315 06a0 1E       		.uleb128 0x1e
 3316 06a1 59010000 		.4byte	.LASF100
 3317 06a5 01       		.byte	0x1
 3318 06a6 7D01     		.2byte	0x17d
 3319 06a8 00000000 		.4byte	.LFB77
 3320 06ac 1C000000 		.4byte	.LFE77-.LFB77
 3321 06b0 01       		.uleb128 0x1
 3322 06b1 9C       		.byte	0x9c
 3323 06b2 1B       		.uleb128 0x1b
 3324 06b3 D9050000 		.4byte	.LASF101
 3325 06b7 01       		.byte	0x1
 3326 06b8 8D01     		.2byte	0x18d
 3327 06ba AD000000 		.4byte	0xad
 3328 06be 00000000 		.4byte	.LFB78
 3329 06c2 28000000 		.4byte	.LFE78-.LFB78
 3330 06c6 01       		.uleb128 0x1
 3331 06c7 9C       		.byte	0x9c
 3332 06c8 1F       		.uleb128 0x1f
 3333 06c9 A6020000 		.4byte	.LASF104
 3334 06cd 01       		.byte	0x1
 3335 06ce 9901     		.2byte	0x199
 3336 06d0 00000000 		.4byte	.LFB79
 3337 06d4 4C010000 		.4byte	.LFE79-.LFB79
 3338 06d8 01       		.uleb128 0x1
 3339 06d9 9C       		.byte	0x9c
 3340 06da 20070000 		.4byte	0x720
 3341 06de 14       		.uleb128 0x14
 3342 06df 06000000 		.4byte	.LBB8
 3343 06e3 1C010000 		.4byte	.LBE8-.LBB8
 3344 06e7 1D       		.uleb128 0x1d
 3345 06e8 AA060000 		.4byte	.LASF74
 3346 06ec 01       		.byte	0x1
 3347 06ed 9D01     		.2byte	0x19d
 3348 06ef AD000000 		.4byte	0xad
 3349 06f3 02       		.uleb128 0x2
 3350 06f4 91       		.byte	0x91
 3351 06f5 77       		.sleb128 -9
 3352 06f6 14       		.uleb128 0x14
 3353 06f7 0C000000 		.4byte	.LBB9
 3354 06fb 08010000 		.4byte	.LBE9-.LBB9
 3355 06ff 1D       		.uleb128 0x1d
 3356 0700 AC040000 		.4byte	.LASF102
 3357 0704 01       		.byte	0x1
 3358 0705 A101     		.2byte	0x1a1
 3359 0707 90060000 		.4byte	0x690
 3360 070b 02       		.uleb128 0x2
 3361 070c 91       		.byte	0x91
 3362 070d 64       		.sleb128 -28
 3363 070e 1D       		.uleb128 0x1d
 3364 070f 68040000 		.4byte	.LASF103
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 77


 3365 0713 01       		.byte	0x1
 3366 0714 A601     		.2byte	0x1a6
 3367 0716 0C010000 		.4byte	0x10c
 3368 071a 02       		.uleb128 0x2
 3369 071b 91       		.byte	0x91
 3370 071c 70       		.sleb128 -16
 3371 071d 00       		.byte	0
 3372 071e 00       		.byte	0
 3373 071f 00       		.byte	0
 3374 0720 1F       		.uleb128 0x1f
 3375 0721 BD010000 		.4byte	.LASF105
 3376 0725 01       		.byte	0x1
 3377 0726 CF01     		.2byte	0x1cf
 3378 0728 00000000 		.4byte	.LFB80
 3379 072c 38010000 		.4byte	.LFE80-.LFB80
 3380 0730 01       		.uleb128 0x1
 3381 0731 9C       		.byte	0x9c
 3382 0732 50070000 		.4byte	0x750
 3383 0736 14       		.uleb128 0x14
 3384 0737 B6000000 		.4byte	.LBB10
 3385 073b 34000000 		.4byte	.LBE10-.LBB10
 3386 073f 1D       		.uleb128 0x1d
 3387 0740 9B050000 		.4byte	.LASF106
 3388 0744 01       		.byte	0x1
 3389 0745 F801     		.2byte	0x1f8
 3390 0747 90060000 		.4byte	0x690
 3391 074b 02       		.uleb128 0x2
 3392 074c 91       		.byte	0x91
 3393 074d 6C       		.sleb128 -20
 3394 074e 00       		.byte	0
 3395 074f 00       		.byte	0
 3396 0750 1C       		.uleb128 0x1c
 3397 0751 11020000 		.4byte	.LASF107
 3398 0755 01       		.byte	0x1
 3399 0756 0A02     		.2byte	0x20a
 3400 0758 57000000 		.4byte	0x57
 3401 075c 00000000 		.4byte	.LFB81
 3402 0760 44010000 		.4byte	.LFE81-.LFB81
 3403 0764 01       		.uleb128 0x1
 3404 0765 9C       		.byte	0x9c
 3405 0766 0C080000 		.4byte	0x80c
 3406 076a 1D       		.uleb128 0x1d
 3407 076b 5A030000 		.4byte	.LASF108
 3408 076f 01       		.byte	0x1
 3409 0770 1502     		.2byte	0x215
 3410 0772 57000000 		.4byte	0x57
 3411 0776 02       		.uleb128 0x2
 3412 0777 91       		.byte	0x91
 3413 0778 74       		.sleb128 -12
 3414 0779 14       		.uleb128 0x14
 3415 077a 30000000 		.4byte	.LBB11
 3416 077e DE000000 		.4byte	.LBE11-.LBB11
 3417 0782 1D       		.uleb128 0x1d
 3418 0783 D6010000 		.4byte	.LASF89
 3419 0787 01       		.byte	0x1
 3420 0788 1902     		.2byte	0x219
 3421 078a 0C080000 		.4byte	0x80c
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 78


 3422 078e 02       		.uleb128 0x2
 3423 078f 91       		.byte	0x91
 3424 0790 54       		.sleb128 -44
 3425 0791 1A       		.uleb128 0x1a
 3426 0792 7400     		.ascii	"t\000"
 3427 0794 01       		.byte	0x1
 3428 0795 1E02     		.2byte	0x21e
 3429 0797 2D010000 		.4byte	0x12d
 3430 079b 03       		.uleb128 0x3
 3431 079c 91       		.byte	0x91
 3432 079d 947F     		.sleb128 -108
 3433 079f 1D       		.uleb128 0x1d
 3434 07a0 7B010000 		.4byte	.LASF109
 3435 07a4 01       		.byte	0x1
 3436 07a5 2102     		.2byte	0x221
 3437 07a7 7E000000 		.4byte	0x7e
 3438 07ab 02       		.uleb128 0x2
 3439 07ac 91       		.byte	0x91
 3440 07ad 50       		.sleb128 -48
 3441 07ae 1D       		.uleb128 0x1d
 3442 07af 4B020000 		.4byte	.LASF110
 3443 07b3 01       		.byte	0x1
 3444 07b4 2102     		.2byte	0x221
 3445 07b6 7E000000 		.4byte	0x7e
 3446 07ba 02       		.uleb128 0x2
 3447 07bb 91       		.byte	0x91
 3448 07bc 4C       		.sleb128 -52
 3449 07bd 1A       		.uleb128 0x1a
 3450 07be 64617900 		.ascii	"day\000"
 3451 07c2 01       		.byte	0x1
 3452 07c3 2102     		.2byte	0x221
 3453 07c5 7E000000 		.4byte	0x7e
 3454 07c9 02       		.uleb128 0x2
 3455 07ca 91       		.byte	0x91
 3456 07cb 48       		.sleb128 -56
 3457 07cc 1D       		.uleb128 0x1d
 3458 07cd 32040000 		.4byte	.LASF111
 3459 07d1 01       		.byte	0x1
 3460 07d2 2102     		.2byte	0x221
 3461 07d4 7E000000 		.4byte	0x7e
 3462 07d8 02       		.uleb128 0x2
 3463 07d9 91       		.byte	0x91
 3464 07da 44       		.sleb128 -60
 3465 07db 1D       		.uleb128 0x1d
 3466 07dc 41060000 		.4byte	.LASF112
 3467 07e0 01       		.byte	0x1
 3468 07e1 2102     		.2byte	0x221
 3469 07e3 7E000000 		.4byte	0x7e
 3470 07e7 02       		.uleb128 0x2
 3471 07e8 91       		.byte	0x91
 3472 07e9 40       		.sleb128 -64
 3473 07ea 1D       		.uleb128 0x1d
 3474 07eb 74010000 		.4byte	.LASF113
 3475 07ef 01       		.byte	0x1
 3476 07f0 2102     		.2byte	0x221
 3477 07f2 7E000000 		.4byte	0x7e
 3478 07f6 03       		.uleb128 0x3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 79


 3479 07f7 91       		.byte	0x91
 3480 07f8 BC7F     		.sleb128 -68
 3481 07fa 1D       		.uleb128 0x1d
 3482 07fb 00000000 		.4byte	.LASF114
 3483 07ff 01       		.byte	0x1
 3484 0800 2102     		.2byte	0x221
 3485 0802 7E000000 		.4byte	0x7e
 3486 0806 03       		.uleb128 0x3
 3487 0807 91       		.byte	0x91
 3488 0808 B87F     		.sleb128 -72
 3489 080a 00       		.byte	0
 3490 080b 00       		.byte	0
 3491 080c 08       		.uleb128 0x8
 3492 080d F7000000 		.4byte	0xf7
 3493 0811 1C080000 		.4byte	0x81c
 3494 0815 09       		.uleb128 0x9
 3495 0816 05010000 		.4byte	0x105
 3496 081a 1D       		.byte	0x1d
 3497 081b 00       		.byte	0
 3498 081c 20       		.uleb128 0x20
 3499 081d 89010000 		.4byte	.LASF115
 3500 0821 01       		.byte	0x1
 3501 0822 4102     		.2byte	0x241
 3502 0824 AD000000 		.4byte	0xad
 3503 0828 00000000 		.4byte	.LFB82
 3504 082c 14000000 		.4byte	.LFE82-.LFB82
 3505 0830 01       		.uleb128 0x1
 3506 0831 9C       		.byte	0x9c
 3507 0832 1E       		.uleb128 0x1e
 3508 0833 37020000 		.4byte	.LASF116
 3509 0837 01       		.byte	0x1
 3510 0838 4602     		.2byte	0x246
 3511 083a 00000000 		.4byte	.LFB83
 3512 083e 1A000000 		.4byte	.LFE83-.LFB83
 3513 0842 01       		.uleb128 0x1
 3514 0843 9C       		.byte	0x9c
 3515 0844 1E       		.uleb128 0x1e
 3516 0845 CA000000 		.4byte	.LASF117
 3517 0849 01       		.byte	0x1
 3518 084a 5302     		.2byte	0x253
 3519 084c 00000000 		.4byte	.LFB84
 3520 0850 2A000000 		.4byte	.LFE84-.LFB84
 3521 0854 01       		.uleb128 0x1
 3522 0855 9C       		.byte	0x9c
 3523 0856 1C       		.uleb128 0x1c
 3524 0857 B2030000 		.4byte	.LASF118
 3525 085b 01       		.byte	0x1
 3526 085c 6902     		.2byte	0x269
 3527 085e FF020000 		.4byte	0x2ff
 3528 0862 00000000 		.4byte	.LFB85
 3529 0866 7C020000 		.4byte	.LFE85-.LFB85
 3530 086a 01       		.uleb128 0x1
 3531 086b 9C       		.byte	0x9c
 3532 086c FF080000 		.4byte	0x8ff
 3533 0870 1A       		.uleb128 0x1a
 3534 0871 67707300 		.ascii	"gps\000"
 3535 0875 01       		.byte	0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 80


 3536 0876 6A02     		.2byte	0x26a
 3537 0878 FF020000 		.4byte	0x2ff
 3538 087c 02       		.uleb128 0x2
 3539 087d 91       		.byte	0x91
 3540 087e 4C       		.sleb128 -52
 3541 087f 1D       		.uleb128 0x1d
 3542 0880 D4060000 		.4byte	.LASF119
 3543 0884 01       		.byte	0x1
 3544 0885 7602     		.2byte	0x276
 3545 0887 57000000 		.4byte	0x57
 3546 088b 02       		.uleb128 0x2
 3547 088c 91       		.byte	0x91
 3548 088d 68       		.sleb128 -24
 3549 088e 1D       		.uleb128 0x1d
 3550 088f 09060000 		.4byte	.LASF120
 3551 0893 01       		.byte	0x1
 3552 0894 9D02     		.2byte	0x29d
 3553 0896 AD000000 		.4byte	0xad
 3554 089a 02       		.uleb128 0x2
 3555 089b 91       		.byte	0x91
 3556 089c 67       		.sleb128 -25
 3557 089d 1A       		.uleb128 0x1a
 3558 089e 6C617400 		.ascii	"lat\000"
 3559 08a2 01       		.byte	0x1
 3560 08a3 A902     		.2byte	0x2a9
 3561 08a5 E9000000 		.4byte	0xe9
 3562 08a9 02       		.uleb128 0x2
 3563 08aa 91       		.byte	0x91
 3564 08ab 48       		.sleb128 -56
 3565 08ac 1A       		.uleb128 0x1a
 3566 08ad 6C6F6E00 		.ascii	"lon\000"
 3567 08b1 01       		.byte	0x1
 3568 08b2 AA02     		.2byte	0x2aa
 3569 08b4 E9000000 		.4byte	0xe9
 3570 08b8 02       		.uleb128 0x2
 3571 08b9 91       		.byte	0x91
 3572 08ba 44       		.sleb128 -60
 3573 08bb 1A       		.uleb128 0x1a
 3574 08bc 616C7400 		.ascii	"alt\000"
 3575 08c0 01       		.byte	0x1
 3576 08c1 AB02     		.2byte	0x2ab
 3577 08c3 E9000000 		.4byte	0xe9
 3578 08c7 02       		.uleb128 0x2
 3579 08c8 91       		.byte	0x91
 3580 08c9 40       		.sleb128 -64
 3581 08ca 1A       		.uleb128 0x1a
 3582 08cb 733100   		.ascii	"s1\000"
 3583 08ce 01       		.byte	0x1
 3584 08cf AF02     		.2byte	0x2af
 3585 08d1 0C010000 		.4byte	0x10c
 3586 08d5 02       		.uleb128 0x2
 3587 08d6 91       		.byte	0x91
 3588 08d7 60       		.sleb128 -32
 3589 08d8 1D       		.uleb128 0x1d
 3590 08d9 2C040000 		.4byte	.LASF121
 3591 08dd 01       		.byte	0x1
 3592 08de B202     		.2byte	0x2b2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 81


 3593 08e0 7E000000 		.4byte	0x7e
 3594 08e4 02       		.uleb128 0x2
 3595 08e5 91       		.byte	0x91
 3596 08e6 5C       		.sleb128 -36
 3597 08e7 14       		.uleb128 0x14
 3598 08e8 B4000000 		.4byte	.LBB12
 3599 08ec 38000000 		.4byte	.LBE12-.LBB12
 3600 08f0 1A       		.uleb128 0x1a
 3601 08f1 6900     		.ascii	"i\000"
 3602 08f3 01       		.byte	0x1
 3603 08f4 9E02     		.2byte	0x29e
 3604 08f6 B9000000 		.4byte	0xb9
 3605 08fa 02       		.uleb128 0x2
 3606 08fb 91       		.byte	0x91
 3607 08fc 6E       		.sleb128 -18
 3608 08fd 00       		.byte	0
 3609 08fe 00       		.byte	0
 3610 08ff 21       		.uleb128 0x21
 3611 0900 FF000000 		.4byte	.LASF122
 3612 0904 0A       		.byte	0xa
 3613 0905 1207     		.2byte	0x712
 3614 0907 0B090000 		.4byte	0x90b
 3615 090b 22       		.uleb128 0x22
 3616 090c 97000000 		.4byte	0x97
 3617 0910 23       		.uleb128 0x23
 3618 0911 EE000000 		.4byte	.LASF123
 3619 0915 07       		.byte	0x7
 3620 0916 15       		.byte	0x15
 3621 0917 AD000000 		.4byte	0xad
 3622 091b 05       		.uleb128 0x5
 3623 091c 03       		.byte	0x3
 3624 091d 00000000 		.4byte	modem_state
 3625 0921 23       		.uleb128 0x23
 3626 0922 F2050000 		.4byte	.LASF124
 3627 0926 07       		.byte	0x7
 3628 0927 49       		.byte	0x49
 3629 0928 DD000000 		.4byte	0xdd
 3630 092c 05       		.uleb128 0x5
 3631 092d 03       		.byte	0x3
 3632 092e 00000000 		.4byte	modem_start_time_stamp
 3633 0932 23       		.uleb128 0x23
 3634 0933 E8020000 		.4byte	.LASF59
 3635 0937 07       		.byte	0x7
 3636 0938 4A       		.byte	0x4a
 3637 0939 3B020000 		.4byte	0x23b
 3638 093d 05       		.uleb128 0x5
 3639 093e 03       		.byte	0x3
 3640 093f 00000000 		.4byte	modem_info
 3641 0943 23       		.uleb128 0x23
 3642 0944 0C010000 		.4byte	.LASF125
 3643 0948 07       		.byte	0x7
 3644 0949 4B       		.byte	0x4b
 3645 094a AF020000 		.4byte	0x2af
 3646 094e 05       		.uleb128 0x5
 3647 094f 03       		.byte	0x3
 3648 0950 00000000 		.4byte	modem_stats
 3649 0954 23       		.uleb128 0x23
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 82


 3650 0955 A0030000 		.4byte	.LASF126
 3651 0959 08       		.byte	0x8
 3652 095a 1D       		.byte	0x1d
 3653 095b B9000000 		.4byte	0xb9
 3654 095f 05       		.uleb128 0x5
 3655 0960 03       		.byte	0x3
 3656 0961 00000000 		.4byte	dataPointsInStack
 3657 0965 23       		.uleb128 0x23
 3658 0966 5F060000 		.4byte	.LASF127
 3659 096a 08       		.byte	0x8
 3660 096b 1E       		.byte	0x1e
 3661 096c B9000000 		.4byte	0xb9
 3662 0970 05       		.uleb128 0x5
 3663 0971 03       		.byte	0x3
 3664 0972 00000000 		.4byte	dataPointsInStackDesired
 3665 0976 08       		.uleb128 0x8
 3666 0977 37030000 		.4byte	0x337
 3667 097b 86090000 		.4byte	0x986
 3668 097f 09       		.uleb128 0x9
 3669 0980 05010000 		.4byte	0x105
 3670 0984 95       		.byte	0x95
 3671 0985 00       		.byte	0
 3672 0986 23       		.uleb128 0x23
 3673 0987 CA020000 		.4byte	.LASF128
 3674 098b 08       		.byte	0x8
 3675 098c 1F       		.byte	0x1f
 3676 098d 76090000 		.4byte	0x976
 3677 0991 05       		.uleb128 0x5
 3678 0992 03       		.byte	0x3
 3679 0993 00000000 		.4byte	data
 3680 0997 08       		.uleb128 0x8
 3681 0998 F7000000 		.4byte	0xf7
 3682 099c A8090000 		.4byte	0x9a8
 3683 09a0 24       		.uleb128 0x24
 3684 09a1 05010000 		.4byte	0x105
 3685 09a5 0F27     		.2byte	0x270f
 3686 09a7 00       		.byte	0
 3687 09a8 23       		.uleb128 0x23
 3688 09a9 DE060000 		.4byte	.LASF129
 3689 09ad 09       		.byte	0x9
 3690 09ae 16       		.byte	0x16
 3691 09af 97090000 		.4byte	0x997
 3692 09b3 05       		.uleb128 0x5
 3693 09b4 03       		.byte	0x3
 3694 09b5 00000000 		.4byte	http_request
 3695 09b9 23       		.uleb128 0x23
 3696 09ba 4F010000 		.4byte	.LASF130
 3697 09be 09       		.byte	0x9
 3698 09bf 17       		.byte	0x17
 3699 09c0 97090000 		.4byte	0x997
 3700 09c4 05       		.uleb128 0x5
 3701 09c5 03       		.byte	0x3
 3702 09c6 00000000 		.4byte	http_body
 3703 09ca 08       		.uleb128 0x8
 3704 09cb F7000000 		.4byte	0xf7
 3705 09cf DA090000 		.4byte	0x9da
 3706 09d3 09       		.uleb128 0x9
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 83


 3707 09d4 05010000 		.4byte	0x105
 3708 09d8 C7       		.byte	0xc7
 3709 09d9 00       		.byte	0
 3710 09da 23       		.uleb128 0x23
 3711 09db A9050000 		.4byte	.LASF131
 3712 09df 09       		.byte	0x9
 3713 09e0 18       		.byte	0x18
 3714 09e1 CA090000 		.4byte	0x9ca
 3715 09e5 05       		.uleb128 0x5
 3716 09e6 03       		.byte	0x3
 3717 09e7 00000000 		.4byte	http_route
 3718 09eb 23       		.uleb128 0x23
 3719 09ec 0D050000 		.4byte	.LASF132
 3720 09f0 09       		.byte	0x9
 3721 09f1 3F       		.byte	0x3f
 3722 09f2 69030000 		.4byte	0x369
 3723 09f6 05       		.uleb128 0x5
 3724 09f7 03       		.byte	0x3
 3725 09f8 00000000 		.4byte	system_info
 3726 09fc 23       		.uleb128 0x23
 3727 09fd 91040000 		.4byte	.LASF133
 3728 0a01 09       		.byte	0x9
 3729 0a02 51       		.byte	0x51
 3730 0a03 E7030000 		.4byte	0x3e7
 3731 0a07 05       		.uleb128 0x5
 3732 0a08 03       		.byte	0x3
 3733 0a09 00000000 		.4byte	system_settings
 3734 0a0d 08       		.uleb128 0x8
 3735 0a0e F7000000 		.4byte	0xf7
 3736 0a12 1E0A0000 		.4byte	0xa1e
 3737 0a16 24       		.uleb128 0x24
 3738 0a17 05010000 		.4byte	0x105
 3739 0a1b FF03     		.2byte	0x3ff
 3740 0a1d 00       		.byte	0
 3741 0a1e 23       		.uleb128 0x23
 3742 0a1f F9030000 		.4byte	.LASF134
 3743 0a23 01       		.byte	0x1
 3744 0a24 09       		.byte	0x9
 3745 0a25 0D0A0000 		.4byte	0xa0d
 3746 0a29 05       		.uleb128 0x5
 3747 0a2a 03       		.byte	0x3
 3748 0a2b 00000000 		.4byte	uart_received_string
 3749 0a2f 23       		.uleb128 0x23
 3750 0a30 C7050000 		.4byte	.LASF135
 3751 0a34 01       		.byte	0x1
 3752 0a35 0A       		.byte	0xa
 3753 0a36 D1000000 		.4byte	0xd1
 3754 0a3a 05       		.uleb128 0x5
 3755 0a3b 03       		.byte	0x3
 3756 0a3c 00000000 		.4byte	uart_string_index
 3757 0a40 00       		.byte	0
 3758              		.section	.debug_abbrev,"",%progbits
 3759              	.Ldebug_abbrev0:
 3760 0000 01       		.uleb128 0x1
 3761 0001 11       		.uleb128 0x11
 3762 0002 01       		.byte	0x1
 3763 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 84


 3764 0004 0E       		.uleb128 0xe
 3765 0005 13       		.uleb128 0x13
 3766 0006 0B       		.uleb128 0xb
 3767 0007 03       		.uleb128 0x3
 3768 0008 0E       		.uleb128 0xe
 3769 0009 1B       		.uleb128 0x1b
 3770 000a 0E       		.uleb128 0xe
 3771 000b 55       		.uleb128 0x55
 3772 000c 17       		.uleb128 0x17
 3773 000d 11       		.uleb128 0x11
 3774 000e 01       		.uleb128 0x1
 3775 000f 10       		.uleb128 0x10
 3776 0010 17       		.uleb128 0x17
 3777 0011 00       		.byte	0
 3778 0012 00       		.byte	0
 3779 0013 02       		.uleb128 0x2
 3780 0014 24       		.uleb128 0x24
 3781 0015 00       		.byte	0
 3782 0016 0B       		.uleb128 0xb
 3783 0017 0B       		.uleb128 0xb
 3784 0018 3E       		.uleb128 0x3e
 3785 0019 0B       		.uleb128 0xb
 3786 001a 03       		.uleb128 0x3
 3787 001b 0E       		.uleb128 0xe
 3788 001c 00       		.byte	0
 3789 001d 00       		.byte	0
 3790 001e 03       		.uleb128 0x3
 3791 001f 16       		.uleb128 0x16
 3792 0020 00       		.byte	0
 3793 0021 03       		.uleb128 0x3
 3794 0022 0E       		.uleb128 0xe
 3795 0023 3A       		.uleb128 0x3a
 3796 0024 0B       		.uleb128 0xb
 3797 0025 3B       		.uleb128 0x3b
 3798 0026 0B       		.uleb128 0xb
 3799 0027 49       		.uleb128 0x49
 3800 0028 13       		.uleb128 0x13
 3801 0029 00       		.byte	0
 3802 002a 00       		.byte	0
 3803 002b 04       		.uleb128 0x4
 3804 002c 24       		.uleb128 0x24
 3805 002d 00       		.byte	0
 3806 002e 0B       		.uleb128 0xb
 3807 002f 0B       		.uleb128 0xb
 3808 0030 3E       		.uleb128 0x3e
 3809 0031 0B       		.uleb128 0xb
 3810 0032 03       		.uleb128 0x3
 3811 0033 08       		.uleb128 0x8
 3812 0034 00       		.byte	0
 3813 0035 00       		.byte	0
 3814 0036 05       		.uleb128 0x5
 3815 0037 16       		.uleb128 0x16
 3816 0038 00       		.byte	0
 3817 0039 03       		.uleb128 0x3
 3818 003a 0E       		.uleb128 0xe
 3819 003b 3A       		.uleb128 0x3a
 3820 003c 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 85


 3821 003d 3B       		.uleb128 0x3b
 3822 003e 05       		.uleb128 0x5
 3823 003f 49       		.uleb128 0x49
 3824 0040 13       		.uleb128 0x13
 3825 0041 00       		.byte	0
 3826 0042 00       		.byte	0
 3827 0043 06       		.uleb128 0x6
 3828 0044 0F       		.uleb128 0xf
 3829 0045 00       		.byte	0
 3830 0046 0B       		.uleb128 0xb
 3831 0047 0B       		.uleb128 0xb
 3832 0048 49       		.uleb128 0x49
 3833 0049 13       		.uleb128 0x13
 3834 004a 00       		.byte	0
 3835 004b 00       		.byte	0
 3836 004c 07       		.uleb128 0x7
 3837 004d 26       		.uleb128 0x26
 3838 004e 00       		.byte	0
 3839 004f 49       		.uleb128 0x49
 3840 0050 13       		.uleb128 0x13
 3841 0051 00       		.byte	0
 3842 0052 00       		.byte	0
 3843 0053 08       		.uleb128 0x8
 3844 0054 01       		.uleb128 0x1
 3845 0055 01       		.byte	0x1
 3846 0056 49       		.uleb128 0x49
 3847 0057 13       		.uleb128 0x13
 3848 0058 01       		.uleb128 0x1
 3849 0059 13       		.uleb128 0x13
 3850 005a 00       		.byte	0
 3851 005b 00       		.byte	0
 3852 005c 09       		.uleb128 0x9
 3853 005d 21       		.uleb128 0x21
 3854 005e 00       		.byte	0
 3855 005f 49       		.uleb128 0x49
 3856 0060 13       		.uleb128 0x13
 3857 0061 2F       		.uleb128 0x2f
 3858 0062 0B       		.uleb128 0xb
 3859 0063 00       		.byte	0
 3860 0064 00       		.byte	0
 3861 0065 0A       		.uleb128 0xa
 3862 0066 13       		.uleb128 0x13
 3863 0067 01       		.byte	0x1
 3864 0068 03       		.uleb128 0x3
 3865 0069 08       		.uleb128 0x8
 3866 006a 0B       		.uleb128 0xb
 3867 006b 0B       		.uleb128 0xb
 3868 006c 3A       		.uleb128 0x3a
 3869 006d 0B       		.uleb128 0xb
 3870 006e 3B       		.uleb128 0x3b
 3871 006f 0B       		.uleb128 0xb
 3872 0070 01       		.uleb128 0x1
 3873 0071 13       		.uleb128 0x13
 3874 0072 00       		.byte	0
 3875 0073 00       		.byte	0
 3876 0074 0B       		.uleb128 0xb
 3877 0075 0D       		.uleb128 0xd
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 86


 3878 0076 00       		.byte	0
 3879 0077 03       		.uleb128 0x3
 3880 0078 0E       		.uleb128 0xe
 3881 0079 3A       		.uleb128 0x3a
 3882 007a 0B       		.uleb128 0xb
 3883 007b 3B       		.uleb128 0x3b
 3884 007c 0B       		.uleb128 0xb
 3885 007d 49       		.uleb128 0x49
 3886 007e 13       		.uleb128 0x13
 3887 007f 38       		.uleb128 0x38
 3888 0080 0B       		.uleb128 0xb
 3889 0081 00       		.byte	0
 3890 0082 00       		.byte	0
 3891 0083 0C       		.uleb128 0xc
 3892 0084 13       		.uleb128 0x13
 3893 0085 01       		.byte	0x1
 3894 0086 0B       		.uleb128 0xb
 3895 0087 05       		.uleb128 0x5
 3896 0088 3A       		.uleb128 0x3a
 3897 0089 0B       		.uleb128 0xb
 3898 008a 3B       		.uleb128 0x3b
 3899 008b 0B       		.uleb128 0xb
 3900 008c 01       		.uleb128 0x1
 3901 008d 13       		.uleb128 0x13
 3902 008e 00       		.byte	0
 3903 008f 00       		.byte	0
 3904 0090 0D       		.uleb128 0xd
 3905 0091 13       		.uleb128 0x13
 3906 0092 01       		.byte	0x1
 3907 0093 0B       		.uleb128 0xb
 3908 0094 0B       		.uleb128 0xb
 3909 0095 3A       		.uleb128 0x3a
 3910 0096 0B       		.uleb128 0xb
 3911 0097 3B       		.uleb128 0x3b
 3912 0098 0B       		.uleb128 0xb
 3913 0099 01       		.uleb128 0x1
 3914 009a 13       		.uleb128 0x13
 3915 009b 00       		.byte	0
 3916 009c 00       		.byte	0
 3917 009d 0E       		.uleb128 0xe
 3918 009e 0D       		.uleb128 0xd
 3919 009f 00       		.byte	0
 3920 00a0 03       		.uleb128 0x3
 3921 00a1 08       		.uleb128 0x8
 3922 00a2 3A       		.uleb128 0x3a
 3923 00a3 0B       		.uleb128 0xb
 3924 00a4 3B       		.uleb128 0x3b
 3925 00a5 0B       		.uleb128 0xb
 3926 00a6 49       		.uleb128 0x49
 3927 00a7 13       		.uleb128 0x13
 3928 00a8 38       		.uleb128 0x38
 3929 00a9 0B       		.uleb128 0xb
 3930 00aa 00       		.byte	0
 3931 00ab 00       		.byte	0
 3932 00ac 0F       		.uleb128 0xf
 3933 00ad 0D       		.uleb128 0xd
 3934 00ae 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 87


 3935 00af 03       		.uleb128 0x3
 3936 00b0 0E       		.uleb128 0xe
 3937 00b1 3A       		.uleb128 0x3a
 3938 00b2 0B       		.uleb128 0xb
 3939 00b3 3B       		.uleb128 0x3b
 3940 00b4 0B       		.uleb128 0xb
 3941 00b5 49       		.uleb128 0x49
 3942 00b6 13       		.uleb128 0x13
 3943 00b7 38       		.uleb128 0x38
 3944 00b8 05       		.uleb128 0x5
 3945 00b9 00       		.byte	0
 3946 00ba 00       		.byte	0
 3947 00bb 10       		.uleb128 0x10
 3948 00bc 2E       		.uleb128 0x2e
 3949 00bd 00       		.byte	0
 3950 00be 3F       		.uleb128 0x3f
 3951 00bf 19       		.uleb128 0x19
 3952 00c0 03       		.uleb128 0x3
 3953 00c1 0E       		.uleb128 0xe
 3954 00c2 3A       		.uleb128 0x3a
 3955 00c3 0B       		.uleb128 0xb
 3956 00c4 3B       		.uleb128 0x3b
 3957 00c5 0B       		.uleb128 0xb
 3958 00c6 27       		.uleb128 0x27
 3959 00c7 19       		.uleb128 0x19
 3960 00c8 11       		.uleb128 0x11
 3961 00c9 01       		.uleb128 0x1
 3962 00ca 12       		.uleb128 0x12
 3963 00cb 06       		.uleb128 0x6
 3964 00cc 40       		.uleb128 0x40
 3965 00cd 18       		.uleb128 0x18
 3966 00ce 9642     		.uleb128 0x2116
 3967 00d0 19       		.uleb128 0x19
 3968 00d1 00       		.byte	0
 3969 00d2 00       		.byte	0
 3970 00d3 11       		.uleb128 0x11
 3971 00d4 2E       		.uleb128 0x2e
 3972 00d5 00       		.byte	0
 3973 00d6 3F       		.uleb128 0x3f
 3974 00d7 19       		.uleb128 0x19
 3975 00d8 03       		.uleb128 0x3
 3976 00d9 0E       		.uleb128 0xe
 3977 00da 3A       		.uleb128 0x3a
 3978 00db 0B       		.uleb128 0xb
 3979 00dc 3B       		.uleb128 0x3b
 3980 00dd 0B       		.uleb128 0xb
 3981 00de 11       		.uleb128 0x11
 3982 00df 01       		.uleb128 0x1
 3983 00e0 12       		.uleb128 0x12
 3984 00e1 06       		.uleb128 0x6
 3985 00e2 40       		.uleb128 0x40
 3986 00e3 18       		.uleb128 0x18
 3987 00e4 9642     		.uleb128 0x2116
 3988 00e6 19       		.uleb128 0x19
 3989 00e7 00       		.byte	0
 3990 00e8 00       		.byte	0
 3991 00e9 12       		.uleb128 0x12
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 88


 3992 00ea 2E       		.uleb128 0x2e
 3993 00eb 01       		.byte	0x1
 3994 00ec 3F       		.uleb128 0x3f
 3995 00ed 19       		.uleb128 0x19
 3996 00ee 03       		.uleb128 0x3
 3997 00ef 0E       		.uleb128 0xe
 3998 00f0 3A       		.uleb128 0x3a
 3999 00f1 0B       		.uleb128 0xb
 4000 00f2 3B       		.uleb128 0x3b
 4001 00f3 0B       		.uleb128 0xb
 4002 00f4 49       		.uleb128 0x49
 4003 00f5 13       		.uleb128 0x13
 4004 00f6 11       		.uleb128 0x11
 4005 00f7 01       		.uleb128 0x1
 4006 00f8 12       		.uleb128 0x12
 4007 00f9 06       		.uleb128 0x6
 4008 00fa 40       		.uleb128 0x40
 4009 00fb 18       		.uleb128 0x18
 4010 00fc 9642     		.uleb128 0x2116
 4011 00fe 19       		.uleb128 0x19
 4012 00ff 01       		.uleb128 0x1
 4013 0100 13       		.uleb128 0x13
 4014 0101 00       		.byte	0
 4015 0102 00       		.byte	0
 4016 0103 13       		.uleb128 0x13
 4017 0104 34       		.uleb128 0x34
 4018 0105 00       		.byte	0
 4019 0106 03       		.uleb128 0x3
 4020 0107 0E       		.uleb128 0xe
 4021 0108 3A       		.uleb128 0x3a
 4022 0109 0B       		.uleb128 0xb
 4023 010a 3B       		.uleb128 0x3b
 4024 010b 0B       		.uleb128 0xb
 4025 010c 49       		.uleb128 0x49
 4026 010d 13       		.uleb128 0x13
 4027 010e 02       		.uleb128 0x2
 4028 010f 18       		.uleb128 0x18
 4029 0110 00       		.byte	0
 4030 0111 00       		.byte	0
 4031 0112 14       		.uleb128 0x14
 4032 0113 0B       		.uleb128 0xb
 4033 0114 01       		.byte	0x1
 4034 0115 11       		.uleb128 0x11
 4035 0116 01       		.uleb128 0x1
 4036 0117 12       		.uleb128 0x12
 4037 0118 06       		.uleb128 0x6
 4038 0119 00       		.byte	0
 4039 011a 00       		.byte	0
 4040 011b 15       		.uleb128 0x15
 4041 011c 2E       		.uleb128 0x2e
 4042 011d 01       		.byte	0x1
 4043 011e 3F       		.uleb128 0x3f
 4044 011f 19       		.uleb128 0x19
 4045 0120 03       		.uleb128 0x3
 4046 0121 0E       		.uleb128 0xe
 4047 0122 3A       		.uleb128 0x3a
 4048 0123 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 89


 4049 0124 3B       		.uleb128 0x3b
 4050 0125 0B       		.uleb128 0xb
 4051 0126 27       		.uleb128 0x27
 4052 0127 19       		.uleb128 0x19
 4053 0128 49       		.uleb128 0x49
 4054 0129 13       		.uleb128 0x13
 4055 012a 11       		.uleb128 0x11
 4056 012b 01       		.uleb128 0x1
 4057 012c 12       		.uleb128 0x12
 4058 012d 06       		.uleb128 0x6
 4059 012e 40       		.uleb128 0x40
 4060 012f 18       		.uleb128 0x18
 4061 0130 9642     		.uleb128 0x2116
 4062 0132 19       		.uleb128 0x19
 4063 0133 01       		.uleb128 0x1
 4064 0134 13       		.uleb128 0x13
 4065 0135 00       		.byte	0
 4066 0136 00       		.byte	0
 4067 0137 16       		.uleb128 0x16
 4068 0138 05       		.uleb128 0x5
 4069 0139 00       		.byte	0
 4070 013a 03       		.uleb128 0x3
 4071 013b 0E       		.uleb128 0xe
 4072 013c 3A       		.uleb128 0x3a
 4073 013d 0B       		.uleb128 0xb
 4074 013e 3B       		.uleb128 0x3b
 4075 013f 0B       		.uleb128 0xb
 4076 0140 49       		.uleb128 0x49
 4077 0141 13       		.uleb128 0x13
 4078 0142 02       		.uleb128 0x2
 4079 0143 18       		.uleb128 0x18
 4080 0144 00       		.byte	0
 4081 0145 00       		.byte	0
 4082 0146 17       		.uleb128 0x17
 4083 0147 34       		.uleb128 0x34
 4084 0148 00       		.byte	0
 4085 0149 03       		.uleb128 0x3
 4086 014a 08       		.uleb128 0x8
 4087 014b 3A       		.uleb128 0x3a
 4088 014c 0B       		.uleb128 0xb
 4089 014d 3B       		.uleb128 0x3b
 4090 014e 0B       		.uleb128 0xb
 4091 014f 49       		.uleb128 0x49
 4092 0150 13       		.uleb128 0x13
 4093 0151 02       		.uleb128 0x2
 4094 0152 18       		.uleb128 0x18
 4095 0153 00       		.byte	0
 4096 0154 00       		.byte	0
 4097 0155 18       		.uleb128 0x18
 4098 0156 2E       		.uleb128 0x2e
 4099 0157 01       		.byte	0x1
 4100 0158 3F       		.uleb128 0x3f
 4101 0159 19       		.uleb128 0x19
 4102 015a 03       		.uleb128 0x3
 4103 015b 0E       		.uleb128 0xe
 4104 015c 3A       		.uleb128 0x3a
 4105 015d 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 90


 4106 015e 3B       		.uleb128 0x3b
 4107 015f 05       		.uleb128 0x5
 4108 0160 27       		.uleb128 0x27
 4109 0161 19       		.uleb128 0x19
 4110 0162 49       		.uleb128 0x49
 4111 0163 13       		.uleb128 0x13
 4112 0164 11       		.uleb128 0x11
 4113 0165 01       		.uleb128 0x1
 4114 0166 12       		.uleb128 0x12
 4115 0167 06       		.uleb128 0x6
 4116 0168 40       		.uleb128 0x40
 4117 0169 18       		.uleb128 0x18
 4118 016a 9642     		.uleb128 0x2116
 4119 016c 19       		.uleb128 0x19
 4120 016d 01       		.uleb128 0x1
 4121 016e 13       		.uleb128 0x13
 4122 016f 00       		.byte	0
 4123 0170 00       		.byte	0
 4124 0171 19       		.uleb128 0x19
 4125 0172 05       		.uleb128 0x5
 4126 0173 00       		.byte	0
 4127 0174 03       		.uleb128 0x3
 4128 0175 0E       		.uleb128 0xe
 4129 0176 3A       		.uleb128 0x3a
 4130 0177 0B       		.uleb128 0xb
 4131 0178 3B       		.uleb128 0x3b
 4132 0179 05       		.uleb128 0x5
 4133 017a 49       		.uleb128 0x49
 4134 017b 13       		.uleb128 0x13
 4135 017c 02       		.uleb128 0x2
 4136 017d 18       		.uleb128 0x18
 4137 017e 00       		.byte	0
 4138 017f 00       		.byte	0
 4139 0180 1A       		.uleb128 0x1a
 4140 0181 34       		.uleb128 0x34
 4141 0182 00       		.byte	0
 4142 0183 03       		.uleb128 0x3
 4143 0184 08       		.uleb128 0x8
 4144 0185 3A       		.uleb128 0x3a
 4145 0186 0B       		.uleb128 0xb
 4146 0187 3B       		.uleb128 0x3b
 4147 0188 05       		.uleb128 0x5
 4148 0189 49       		.uleb128 0x49
 4149 018a 13       		.uleb128 0x13
 4150 018b 02       		.uleb128 0x2
 4151 018c 18       		.uleb128 0x18
 4152 018d 00       		.byte	0
 4153 018e 00       		.byte	0
 4154 018f 1B       		.uleb128 0x1b
 4155 0190 2E       		.uleb128 0x2e
 4156 0191 00       		.byte	0
 4157 0192 3F       		.uleb128 0x3f
 4158 0193 19       		.uleb128 0x19
 4159 0194 03       		.uleb128 0x3
 4160 0195 0E       		.uleb128 0xe
 4161 0196 3A       		.uleb128 0x3a
 4162 0197 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 91


 4163 0198 3B       		.uleb128 0x3b
 4164 0199 05       		.uleb128 0x5
 4165 019a 49       		.uleb128 0x49
 4166 019b 13       		.uleb128 0x13
 4167 019c 11       		.uleb128 0x11
 4168 019d 01       		.uleb128 0x1
 4169 019e 12       		.uleb128 0x12
 4170 019f 06       		.uleb128 0x6
 4171 01a0 40       		.uleb128 0x40
 4172 01a1 18       		.uleb128 0x18
 4173 01a2 9642     		.uleb128 0x2116
 4174 01a4 19       		.uleb128 0x19
 4175 01a5 00       		.byte	0
 4176 01a6 00       		.byte	0
 4177 01a7 1C       		.uleb128 0x1c
 4178 01a8 2E       		.uleb128 0x2e
 4179 01a9 01       		.byte	0x1
 4180 01aa 3F       		.uleb128 0x3f
 4181 01ab 19       		.uleb128 0x19
 4182 01ac 03       		.uleb128 0x3
 4183 01ad 0E       		.uleb128 0xe
 4184 01ae 3A       		.uleb128 0x3a
 4185 01af 0B       		.uleb128 0xb
 4186 01b0 3B       		.uleb128 0x3b
 4187 01b1 05       		.uleb128 0x5
 4188 01b2 49       		.uleb128 0x49
 4189 01b3 13       		.uleb128 0x13
 4190 01b4 11       		.uleb128 0x11
 4191 01b5 01       		.uleb128 0x1
 4192 01b6 12       		.uleb128 0x12
 4193 01b7 06       		.uleb128 0x6
 4194 01b8 40       		.uleb128 0x40
 4195 01b9 18       		.uleb128 0x18
 4196 01ba 9642     		.uleb128 0x2116
 4197 01bc 19       		.uleb128 0x19
 4198 01bd 01       		.uleb128 0x1
 4199 01be 13       		.uleb128 0x13
 4200 01bf 00       		.byte	0
 4201 01c0 00       		.byte	0
 4202 01c1 1D       		.uleb128 0x1d
 4203 01c2 34       		.uleb128 0x34
 4204 01c3 00       		.byte	0
 4205 01c4 03       		.uleb128 0x3
 4206 01c5 0E       		.uleb128 0xe
 4207 01c6 3A       		.uleb128 0x3a
 4208 01c7 0B       		.uleb128 0xb
 4209 01c8 3B       		.uleb128 0x3b
 4210 01c9 05       		.uleb128 0x5
 4211 01ca 49       		.uleb128 0x49
 4212 01cb 13       		.uleb128 0x13
 4213 01cc 02       		.uleb128 0x2
 4214 01cd 18       		.uleb128 0x18
 4215 01ce 00       		.byte	0
 4216 01cf 00       		.byte	0
 4217 01d0 1E       		.uleb128 0x1e
 4218 01d1 2E       		.uleb128 0x2e
 4219 01d2 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 92


 4220 01d3 3F       		.uleb128 0x3f
 4221 01d4 19       		.uleb128 0x19
 4222 01d5 03       		.uleb128 0x3
 4223 01d6 0E       		.uleb128 0xe
 4224 01d7 3A       		.uleb128 0x3a
 4225 01d8 0B       		.uleb128 0xb
 4226 01d9 3B       		.uleb128 0x3b
 4227 01da 05       		.uleb128 0x5
 4228 01db 11       		.uleb128 0x11
 4229 01dc 01       		.uleb128 0x1
 4230 01dd 12       		.uleb128 0x12
 4231 01de 06       		.uleb128 0x6
 4232 01df 40       		.uleb128 0x40
 4233 01e0 18       		.uleb128 0x18
 4234 01e1 9642     		.uleb128 0x2116
 4235 01e3 19       		.uleb128 0x19
 4236 01e4 00       		.byte	0
 4237 01e5 00       		.byte	0
 4238 01e6 1F       		.uleb128 0x1f
 4239 01e7 2E       		.uleb128 0x2e
 4240 01e8 01       		.byte	0x1
 4241 01e9 3F       		.uleb128 0x3f
 4242 01ea 19       		.uleb128 0x19
 4243 01eb 03       		.uleb128 0x3
 4244 01ec 0E       		.uleb128 0xe
 4245 01ed 3A       		.uleb128 0x3a
 4246 01ee 0B       		.uleb128 0xb
 4247 01ef 3B       		.uleb128 0x3b
 4248 01f0 05       		.uleb128 0x5
 4249 01f1 11       		.uleb128 0x11
 4250 01f2 01       		.uleb128 0x1
 4251 01f3 12       		.uleb128 0x12
 4252 01f4 06       		.uleb128 0x6
 4253 01f5 40       		.uleb128 0x40
 4254 01f6 18       		.uleb128 0x18
 4255 01f7 9642     		.uleb128 0x2116
 4256 01f9 19       		.uleb128 0x19
 4257 01fa 01       		.uleb128 0x1
 4258 01fb 13       		.uleb128 0x13
 4259 01fc 00       		.byte	0
 4260 01fd 00       		.byte	0
 4261 01fe 20       		.uleb128 0x20
 4262 01ff 2E       		.uleb128 0x2e
 4263 0200 00       		.byte	0
 4264 0201 3F       		.uleb128 0x3f
 4265 0202 19       		.uleb128 0x19
 4266 0203 03       		.uleb128 0x3
 4267 0204 0E       		.uleb128 0xe
 4268 0205 3A       		.uleb128 0x3a
 4269 0206 0B       		.uleb128 0xb
 4270 0207 3B       		.uleb128 0x3b
 4271 0208 05       		.uleb128 0x5
 4272 0209 49       		.uleb128 0x49
 4273 020a 13       		.uleb128 0x13
 4274 020b 11       		.uleb128 0x11
 4275 020c 01       		.uleb128 0x1
 4276 020d 12       		.uleb128 0x12
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 93


 4277 020e 06       		.uleb128 0x6
 4278 020f 40       		.uleb128 0x40
 4279 0210 18       		.uleb128 0x18
 4280 0211 9742     		.uleb128 0x2117
 4281 0213 19       		.uleb128 0x19
 4282 0214 00       		.byte	0
 4283 0215 00       		.byte	0
 4284 0216 21       		.uleb128 0x21
 4285 0217 34       		.uleb128 0x34
 4286 0218 00       		.byte	0
 4287 0219 03       		.uleb128 0x3
 4288 021a 0E       		.uleb128 0xe
 4289 021b 3A       		.uleb128 0x3a
 4290 021c 0B       		.uleb128 0xb
 4291 021d 3B       		.uleb128 0x3b
 4292 021e 05       		.uleb128 0x5
 4293 021f 49       		.uleb128 0x49
 4294 0220 13       		.uleb128 0x13
 4295 0221 3F       		.uleb128 0x3f
 4296 0222 19       		.uleb128 0x19
 4297 0223 3C       		.uleb128 0x3c
 4298 0224 19       		.uleb128 0x19
 4299 0225 00       		.byte	0
 4300 0226 00       		.byte	0
 4301 0227 22       		.uleb128 0x22
 4302 0228 35       		.uleb128 0x35
 4303 0229 00       		.byte	0
 4304 022a 49       		.uleb128 0x49
 4305 022b 13       		.uleb128 0x13
 4306 022c 00       		.byte	0
 4307 022d 00       		.byte	0
 4308 022e 23       		.uleb128 0x23
 4309 022f 34       		.uleb128 0x34
 4310 0230 00       		.byte	0
 4311 0231 03       		.uleb128 0x3
 4312 0232 0E       		.uleb128 0xe
 4313 0233 3A       		.uleb128 0x3a
 4314 0234 0B       		.uleb128 0xb
 4315 0235 3B       		.uleb128 0x3b
 4316 0236 0B       		.uleb128 0xb
 4317 0237 49       		.uleb128 0x49
 4318 0238 13       		.uleb128 0x13
 4319 0239 3F       		.uleb128 0x3f
 4320 023a 19       		.uleb128 0x19
 4321 023b 02       		.uleb128 0x2
 4322 023c 18       		.uleb128 0x18
 4323 023d 00       		.byte	0
 4324 023e 00       		.byte	0
 4325 023f 24       		.uleb128 0x24
 4326 0240 21       		.uleb128 0x21
 4327 0241 00       		.byte	0
 4328 0242 49       		.uleb128 0x49
 4329 0243 13       		.uleb128 0x13
 4330 0244 2F       		.uleb128 0x2f
 4331 0245 05       		.uleb128 0x5
 4332 0246 00       		.byte	0
 4333 0247 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 94


 4334 0248 00       		.byte	0
 4335              		.section	.debug_aranges,"",%progbits
 4336 0000 C4000000 		.4byte	0xc4
 4337 0004 0200     		.2byte	0x2
 4338 0006 00000000 		.4byte	.Ldebug_info0
 4339 000a 04       		.byte	0x4
 4340 000b 00       		.byte	0
 4341 000c 0000     		.2byte	0
 4342 000e 0000     		.2byte	0
 4343 0010 00000000 		.4byte	.LFB64
 4344 0014 44000000 		.4byte	.LFE64-.LFB64
 4345 0018 00000000 		.4byte	.LFB65
 4346 001c 54000000 		.4byte	.LFE65-.LFB65
 4347 0020 00000000 		.4byte	.LFB66
 4348 0024 32000000 		.4byte	.LFE66-.LFB66
 4349 0028 00000000 		.4byte	.LFB67
 4350 002c 20000000 		.4byte	.LFE67-.LFB67
 4351 0030 00000000 		.4byte	.LFB68
 4352 0034 40000000 		.4byte	.LFE68-.LFB68
 4353 0038 00000000 		.4byte	.LFB69
 4354 003c DC000000 		.4byte	.LFE69-.LFB69
 4355 0040 00000000 		.4byte	.LFB70
 4356 0044 1C000000 		.4byte	.LFE70-.LFB70
 4357 0048 00000000 		.4byte	.LFB71
 4358 004c 28000000 		.4byte	.LFE71-.LFB71
 4359 0050 00000000 		.4byte	.LFB72
 4360 0054 C8000000 		.4byte	.LFE72-.LFB72
 4361 0058 00000000 		.4byte	.LFB73
 4362 005c FC000000 		.4byte	.LFE73-.LFB73
 4363 0060 00000000 		.4byte	.LFB74
 4364 0064 78000000 		.4byte	.LFE74-.LFB74
 4365 0068 00000000 		.4byte	.LFB75
 4366 006c 08010000 		.4byte	.LFE75-.LFB75
 4367 0070 00000000 		.4byte	.LFB76
 4368 0074 A0000000 		.4byte	.LFE76-.LFB76
 4369 0078 00000000 		.4byte	.LFB77
 4370 007c 1C000000 		.4byte	.LFE77-.LFB77
 4371 0080 00000000 		.4byte	.LFB78
 4372 0084 28000000 		.4byte	.LFE78-.LFB78
 4373 0088 00000000 		.4byte	.LFB79
 4374 008c 4C010000 		.4byte	.LFE79-.LFB79
 4375 0090 00000000 		.4byte	.LFB80
 4376 0094 38010000 		.4byte	.LFE80-.LFB80
 4377 0098 00000000 		.4byte	.LFB81
 4378 009c 44010000 		.4byte	.LFE81-.LFB81
 4379 00a0 00000000 		.4byte	.LFB82
 4380 00a4 14000000 		.4byte	.LFE82-.LFB82
 4381 00a8 00000000 		.4byte	.LFB83
 4382 00ac 1A000000 		.4byte	.LFE83-.LFB83
 4383 00b0 00000000 		.4byte	.LFB84
 4384 00b4 2A000000 		.4byte	.LFE84-.LFB84
 4385 00b8 00000000 		.4byte	.LFB85
 4386 00bc 7C020000 		.4byte	.LFE85-.LFB85
 4387 00c0 00000000 		.4byte	0
 4388 00c4 00000000 		.4byte	0
 4389              		.section	.debug_ranges,"",%progbits
 4390              	.Ldebug_ranges0:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 95


 4391 0000 00000000 		.4byte	.LFB64
 4392 0004 44000000 		.4byte	.LFE64
 4393 0008 00000000 		.4byte	.LFB65
 4394 000c 54000000 		.4byte	.LFE65
 4395 0010 00000000 		.4byte	.LFB66
 4396 0014 32000000 		.4byte	.LFE66
 4397 0018 00000000 		.4byte	.LFB67
 4398 001c 20000000 		.4byte	.LFE67
 4399 0020 00000000 		.4byte	.LFB68
 4400 0024 40000000 		.4byte	.LFE68
 4401 0028 00000000 		.4byte	.LFB69
 4402 002c DC000000 		.4byte	.LFE69
 4403 0030 00000000 		.4byte	.LFB70
 4404 0034 1C000000 		.4byte	.LFE70
 4405 0038 00000000 		.4byte	.LFB71
 4406 003c 28000000 		.4byte	.LFE71
 4407 0040 00000000 		.4byte	.LFB72
 4408 0044 C8000000 		.4byte	.LFE72
 4409 0048 00000000 		.4byte	.LFB73
 4410 004c FC000000 		.4byte	.LFE73
 4411 0050 00000000 		.4byte	.LFB74
 4412 0054 78000000 		.4byte	.LFE74
 4413 0058 00000000 		.4byte	.LFB75
 4414 005c 08010000 		.4byte	.LFE75
 4415 0060 00000000 		.4byte	.LFB76
 4416 0064 A0000000 		.4byte	.LFE76
 4417 0068 00000000 		.4byte	.LFB77
 4418 006c 1C000000 		.4byte	.LFE77
 4419 0070 00000000 		.4byte	.LFB78
 4420 0074 28000000 		.4byte	.LFE78
 4421 0078 00000000 		.4byte	.LFB79
 4422 007c 4C010000 		.4byte	.LFE79
 4423 0080 00000000 		.4byte	.LFB80
 4424 0084 38010000 		.4byte	.LFE80
 4425 0088 00000000 		.4byte	.LFB81
 4426 008c 44010000 		.4byte	.LFE81
 4427 0090 00000000 		.4byte	.LFB82
 4428 0094 14000000 		.4byte	.LFE82
 4429 0098 00000000 		.4byte	.LFB83
 4430 009c 1A000000 		.4byte	.LFE83
 4431 00a0 00000000 		.4byte	.LFB84
 4432 00a4 2A000000 		.4byte	.LFE84
 4433 00a8 00000000 		.4byte	.LFB85
 4434 00ac 7C020000 		.4byte	.LFE85
 4435 00b0 00000000 		.4byte	0
 4436 00b4 00000000 		.4byte	0
 4437              		.section	.debug_line,"",%progbits
 4438              	.Ldebug_line0:
 4439 0000 FC040000 		.section	.debug_str,"MS",%progbits,1
 4439      0200EF01 
 4439      00000201 
 4439      FB0E0D00 
 4439      01010101 
 4440              	.LASF114:
 4441 0000 676D745F 		.ascii	"gmt_offset\000"
 4441      6F666673 
 4441      657400
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 96


 4442              	.LASF16:
 4443 000b 75696E74 		.ascii	"uint16\000"
 4443      313600
 4444              	.LASF56:
 4445 0012 76616C75 		.ascii	"value\000"
 4445      6500
 4446              	.LASF27:
 4447 0018 746D5F68 		.ascii	"tm_hour\000"
 4447      6F757200 
 4448              	.LASF32:
 4449 0020 746D5F79 		.ascii	"tm_yday\000"
 4449      64617900 
 4450              	.LASF4:
 4451 0028 5F5F7569 		.ascii	"__uint8_t\000"
 4451      6E74385F 
 4451      7400
 4452              	.LASF51:
 4453 0032 6C6F6E67 		.ascii	"longitude\000"
 4453      69747564 
 4453      6500
 4454              	.LASF136:
 4455 003c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4455      43313120 
 4455      352E342E 
 4455      31203230 
 4455      31363036 
 4456 006f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4456      20726576 
 4456      6973696F 
 4456      6E203233 
 4456      37373135 
 4457 00a2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4457      66756E63 
 4457      74696F6E 
 4457      2D736563 
 4457      74696F6E 
 4458              	.LASF117:
 4459 00ca 6D6F6465 		.ascii	"modem_wakeup\000"
 4459      6D5F7761 
 4459      6B657570 
 4459      00
 4460              	.LASF10:
 4461 00d7 6C6F6E67 		.ascii	"long long unsigned int\000"
 4461      206C6F6E 
 4461      6720756E 
 4461      7369676E 
 4461      65642069 
 4462              	.LASF123:
 4463 00ee 6D6F6465 		.ascii	"modem_state\000"
 4463      6D5F7374 
 4463      61746500 
 4464              	.LASF88:
 4465 00fa 74657374 		.ascii	"test\000"
 4465      00
 4466              	.LASF122:
 4467 00ff 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4467      52784275 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 97


 4467      66666572 
 4467      00
 4468              	.LASF125:
 4469 010c 6D6F6465 		.ascii	"modem_stats\000"
 4469      6D5F7374 
 4469      61747300 
 4470              	.LASF9:
 4471 0118 6C6F6E67 		.ascii	"long long int\000"
 4471      206C6F6E 
 4471      6720696E 
 4471      7400
 4472              	.LASF0:
 4473 0126 7369676E 		.ascii	"signed char\000"
 4473      65642063 
 4473      68617200 
 4474              	.LASF44:
 4475 0132 65636E6F 		.ascii	"ecno\000"
 4475      00
 4476              	.LASF47:
 4477 0137 74696D65 		.ascii	"time_to_network_connect\000"
 4477      5F746F5F 
 4477      6E657477 
 4477      6F726B5F 
 4477      636F6E6E 
 4478              	.LASF130:
 4479 014f 68747470 		.ascii	"http_body\000"
 4479      5F626F64 
 4479      7900
 4480              	.LASF100:
 4481 0159 7365745F 		.ascii	"set_up_internet_connection\000"
 4481      75705F69 
 4481      6E746572 
 4481      6E65745F 
 4481      636F6E6E 
 4482              	.LASF113:
 4483 0174 7365636F 		.ascii	"second\000"
 4483      6E6400
 4484              	.LASF109:
 4485 017b 79656172 		.ascii	"year\000"
 4485      00
 4486              	.LASF6:
 4487 0180 6C6F6E67 		.ascii	"long int\000"
 4487      20696E74 
 4487      00
 4488              	.LASF115:
 4489 0189 6D6F6465 		.ascii	"modem_get_state\000"
 4489      6D5F6765 
 4489      745F7374 
 4489      61746500 
 4490              	.LASF52:
 4491 0199 616C7469 		.ascii	"altitude\000"
 4491      74756465 
 4491      00
 4492              	.LASF15:
 4493 01a2 75696E74 		.ascii	"uint8\000"
 4493      3800
 4494              	.LASF62:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 98


 4495 01a8 6E6F6465 		.ascii	"node_id\000"
 4495      5F696400 
 4496              	.LASF21:
 4497 01b0 646F7562 		.ascii	"double\000"
 4497      6C6500
 4498              	.LASF19:
 4499 01b7 696E7433 		.ascii	"int32\000"
 4499      3200
 4500              	.LASF105:
 4501 01bd 6D6F6465 		.ascii	"modem_configure_settings\000"
 4501      6D5F636F 
 4501      6E666967 
 4501      7572655F 
 4501      73657474 
 4502              	.LASF89:
 4503 01d6 6E657477 		.ascii	"network_time\000"
 4503      6F726B5F 
 4503      74696D65 
 4503      00
 4504              	.LASF3:
 4505 01e3 73686F72 		.ascii	"short unsigned int\000"
 4505      7420756E 
 4505      7369676E 
 4505      65642069 
 4505      6E7400
 4506              	.LASF17:
 4507 01f6 75696E74 		.ascii	"uint32\000"
 4507      333200
 4508              	.LASF85:
 4509 01fd 696E7465 		.ascii	"interval\000"
 4509      7276616C 
 4509      00
 4510              	.LASF7:
 4511 0206 5F5F7569 		.ascii	"__uint32_t\000"
 4511      6E743332 
 4511      5F7400
 4512              	.LASF107:
 4513 0211 6D6F6465 		.ascii	"modem_get_network_time\000"
 4513      6D5F6765 
 4513      745F6E65 
 4513      74776F72 
 4513      6B5F7469 
 4514              	.LASF29:
 4515 0228 746D5F6D 		.ascii	"tm_mon\000"
 4515      6F6E00
 4516              	.LASF66:
 4517 022f 65705F70 		.ascii	"ep_pswd\000"
 4517      73776400 
 4518              	.LASF116:
 4519 0237 6D6F6465 		.ascii	"modem_sleep\000"
 4519      6D5F736C 
 4519      65657000 
 4520              	.LASF30:
 4521 0243 746D5F79 		.ascii	"tm_year\000"
 4521      65617200 
 4522              	.LASF110:
 4523 024b 6D6F6E74 		.ascii	"month\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 99


 4523      6800
 4524              	.LASF71:
 4525 0251 70696E73 		.ascii	"pins_configure_active\000"
 4525      5F636F6E 
 4525      66696775 
 4525      72655F61 
 4525      63746976 
 4526              	.LASF58:
 4527 0267 6B65795F 		.ascii	"key_value_t\000"
 4527      76616C75 
 4527      655F7400 
 4528              	.LASF76:
 4529 0273 7077725F 		.ascii	"pwr_check\000"
 4529      63686563 
 4529      6B00
 4530              	.LASF8:
 4531 027d 6C6F6E67 		.ascii	"long unsigned int\000"
 4531      20756E73 
 4531      69676E65 
 4531      6420696E 
 4531      7400
 4532              	.LASF91:
 4533 028f 65787472 		.ascii	"extract_string\000"
 4533      6163745F 
 4533      73747269 
 4533      6E6700
 4534              	.LASF81:
 4535 029e 74696D65 		.ascii	"timeout\000"
 4535      6F757400 
 4536              	.LASF104:
 4537 02a6 6765745F 		.ascii	"get_cell_network_stats\000"
 4537      63656C6C 
 4537      5F6E6574 
 4537      776F726B 
 4537      5F737461 
 4538              	.LASF53:
 4539 02bd 74696D65 		.ascii	"time_to_lock\000"
 4539      5F746F5F 
 4539      6C6F636B 
 4539      00
 4540              	.LASF128:
 4541 02ca 64617461 		.ascii	"data\000"
 4541      00
 4542              	.LASF65:
 4543 02cf 65705F75 		.ascii	"ep_user\000"
 4543      73657200 
 4544              	.LASF64:
 4545 02d7 65705F70 		.ascii	"ep_port\000"
 4545      6F727400 
 4546              	.LASF33:
 4547 02df 746D5F69 		.ascii	"tm_isdst\000"
 4547      73647374 
 4547      00
 4548              	.LASF59:
 4549 02e8 6D6F6465 		.ascii	"modem_info\000"
 4549      6D5F696E 
 4549      666F00
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 100


 4550              	.LASF63:
 4551 02f3 65705F68 		.ascii	"ep_host\000"
 4551      6F737400 
 4552              	.LASF60:
 4553 02fb 63686970 		.ascii	"chip_uniqueId\000"
 4553      5F756E69 
 4553      71756549 
 4553      6400
 4554              	.LASF86:
 4555 0309 6D6F6465 		.ascii	"modem_power_up\000"
 4555      6D5F706F 
 4555      7765725F 
 4555      757000
 4556              	.LASF137:
 4557 0318 6D6F6465 		.ascii	"modem.c\000"
 4557      6D2E6300 
 4558              	.LASF93:
 4559 0320 62656769 		.ascii	"beginMarker\000"
 4559      6E4D6172 
 4559      6B657200 
 4560              	.LASF95:
 4561 032c 74617267 		.ascii	"target\000"
 4561      657400
 4562              	.LASF48:
 4563 0333 74696D65 		.ascii	"time_to_acquire_ip\000"
 4563      5F746F5F 
 4563      61637175 
 4563      6972655F 
 4563      697000
 4564              	.LASF94:
 4565 0346 656E644D 		.ascii	"endMarker\000"
 4565      61726B65 
 4565      7200
 4566              	.LASF2:
 4567 0350 73686F72 		.ascii	"short int\000"
 4567      7420696E 
 4567      7400
 4568              	.LASF108:
 4569 035a 65706F63 		.ascii	"epoch_time\000"
 4569      685F7469 
 4569      6D6500
 4570              	.LASF5:
 4571 0365 5F5F696E 		.ascii	"__int32_t\000"
 4571      7433325F 
 4571      7400
 4572              	.LASF92:
 4573 036f 66726F6D 		.ascii	"from\000"
 4573      00
 4574              	.LASF99:
 4575 0374 63726567 		.ascii	"creg\000"
 4575      00
 4576              	.LASF82:
 4577 0379 61745F61 		.ascii	"at_attempt\000"
 4577      7474656D 
 4577      707400
 4578              	.LASF90:
 4579 0384 61745F77 		.ascii	"at_write_command\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 101


 4579      72697465 
 4579      5F636F6D 
 4579      6D616E64 
 4579      00
 4580              	.LASF61:
 4581 0395 7379735F 		.ascii	"sys_info_t\000"
 4581      696E666F 
 4581      5F7400
 4582              	.LASF126:
 4583 03a0 64617461 		.ascii	"dataPointsInStack\000"
 4583      506F696E 
 4583      7473496E 
 4583      53746163 
 4583      6B00
 4584              	.LASF118:
 4585 03b2 6D6F6465 		.ascii	"modem_get_gps_coordinates\000"
 4585      6D5F6765 
 4585      745F6770 
 4585      735F636F 
 4585      6F726469 
 4586              	.LASF26:
 4587 03cc 746D5F6D 		.ascii	"tm_min\000"
 4587      696E00
 4588              	.LASF24:
 4589 03d3 73697A65 		.ascii	"sizetype\000"
 4589      74797065 
 4589      00
 4590              	.LASF98:
 4591 03dc 69735F63 		.ascii	"is_connected_to_cell_network\000"
 4591      6F6E6E65 
 4591      63746564 
 4591      5F746F5F 
 4591      63656C6C 
 4592              	.LASF134:
 4593 03f9 75617274 		.ascii	"uart_received_string\000"
 4593      5F726563 
 4593      65697665 
 4593      645F7374 
 4593      72696E67 
 4594              	.LASF50:
 4595 040e 6C617469 		.ascii	"latitude\000"
 4595      74756465 
 4595      00
 4596              	.LASF34:
 4597 0417 74657374 		.ascii	"test_name\000"
 4597      5F6E616D 
 4597      6500
 4598              	.LASF87:
 4599 0421 6D6F6465 		.ascii	"modem_test\000"
 4599      6D5F7465 
 4599      737400
 4600              	.LASF121:
 4601 042c 6D617463 		.ascii	"match\000"
 4601      6800
 4602              	.LASF111:
 4603 0432 686F7572 		.ascii	"hour\000"
 4603      00
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 102


 4604              	.LASF79:
 4605 0437 636F6D6D 		.ascii	"commands\000"
 4605      616E6473 
 4605      00
 4606              	.LASF83:
 4607 0440 636F6D70 		.ascii	"compare_location\000"
 4607      6172655F 
 4607      6C6F6361 
 4607      74696F6E 
 4607      00
 4608              	.LASF20:
 4609 0451 666C6F61 		.ascii	"float\000"
 4609      7400
 4610              	.LASF69:
 4611 0457 6D6F6465 		.ascii	"modem_initialize\000"
 4611      6D5F696E 
 4611      69746961 
 4611      6C697A65 
 4611      00
 4612              	.LASF103:
 4613 0468 746F6B65 		.ascii	"token\000"
 4613      6E00
 4614              	.LASF96:
 4615 046e 6973725F 		.ascii	"isr_telit_rx\000"
 4615      74656C69 
 4615      745F7278 
 4615      00
 4616              	.LASF13:
 4617 047b 696E7433 		.ascii	"int32_t\000"
 4617      325F7400 
 4618              	.LASF1:
 4619 0483 756E7369 		.ascii	"unsigned char\000"
 4619      676E6564 
 4619      20636861 
 4619      7200
 4620              	.LASF133:
 4621 0491 73797374 		.ascii	"system_settings\000"
 4621      656D5F73 
 4621      65747469 
 4621      6E677300 
 4622              	.LASF84:
 4623 04a1 64656C61 		.ascii	"delay\000"
 4623      7900
 4624              	.LASF45:
 4625 04a7 72737271 		.ascii	"rsrq\000"
 4625      00
 4626              	.LASF102:
 4627 04ac 63657371 		.ascii	"cesq\000"
 4627      00
 4628              	.LASF43:
 4629 04b1 72736370 		.ascii	"rscp\000"
 4629      00
 4630              	.LASF138:
 4631 04b6 433A5C55 		.ascii	"C:\\Users\\hail\\Desktop\\Brooke Research\\notoriOS"
 4631      73657273 
 4631      5C686169 
 4631      6C5C4465 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 103


 4631      736B746F 
 4632 04e4 5C6E6F74 		.ascii	"\\notoriOS\\notoriOS\\notoriOS.cydsn\000"
 4632      6F72694F 
 4632      535C6E6F 
 4632      746F7269 
 4632      4F535C6E 
 4633              	.LASF37:
 4634 0506 74657374 		.ascii	"test_t\000"
 4634      5F7400
 4635              	.LASF132:
 4636 050d 73797374 		.ascii	"system_info\000"
 4636      656D5F69 
 4636      6E666F00 
 4637              	.LASF40:
 4638 0519 696D6569 		.ascii	"imei\000"
 4638      00
 4639              	.LASF36:
 4640 051e 72656173 		.ascii	"reason\000"
 4640      6F6E00
 4641              	.LASF46:
 4642 0525 72737270 		.ascii	"rsrp\000"
 4642      00
 4643              	.LASF49:
 4644 052a 6D6F6465 		.ascii	"modem_stats_t\000"
 4644      6D5F7374 
 4644      6174735F 
 4644      7400
 4645              	.LASF78:
 4646 0538 75617274 		.ascii	"uart_string_reset\000"
 4646      5F737472 
 4646      696E675F 
 4646      72657365 
 4646      7400
 4647              	.LASF31:
 4648 054a 746D5F77 		.ascii	"tm_wday\000"
 4648      64617900 
 4649              	.LASF77:
 4650 0552 6D6F6465 		.ascii	"modem_soft_power_cycle\000"
 4650      6D5F736F 
 4650      66745F70 
 4650      6F776572 
 4650      5F637963 
 4651              	.LASF23:
 4652 0569 6C6F6E67 		.ascii	"long double\000"
 4652      20646F75 
 4652      626C6500 
 4653              	.LASF22:
 4654 0575 63686172 		.ascii	"char\000"
 4654      00
 4655              	.LASF97:
 4656 057a 6D6F6465 		.ascii	"modem_process_tasks\000"
 4656      6D5F7072 
 4656      6F636573 
 4656      735F7461 
 4656      736B7300 
 4657              	.LASF11:
 4658 058e 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 104


 4658      676E6564 
 4658      20696E74 
 4658      00
 4659              	.LASF106:
 4660 059b 4346554E 		.ascii	"CFUN\000"
 4660      00
 4661              	.LASF39:
 4662 05a0 6D6F6465 		.ascii	"model_id\000"
 4662      6C5F6964 
 4662      00
 4663              	.LASF131:
 4664 05a9 68747470 		.ascii	"http_route\000"
 4664      5F726F75 
 4664      746500
 4665              	.LASF41:
 4666 05b4 6D6F6465 		.ascii	"modem_info_t\000"
 4666      6D5F696E 
 4666      666F5F74 
 4666      00
 4667              	.LASF55:
 4668 05c1 6770735F 		.ascii	"gps_t\000"
 4668      7400
 4669              	.LASF135:
 4670 05c7 75617274 		.ascii	"uart_string_index\000"
 4670      5F737472 
 4670      696E675F 
 4670      696E6465 
 4670      7800
 4671              	.LASF101:
 4672 05d9 69735F63 		.ascii	"is_connected_to_internet\000"
 4672      6F6E6E65 
 4672      63746564 
 4672      5F746F5F 
 4672      696E7465 
 4673              	.LASF124:
 4674 05f2 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 4674      6D5F7374 
 4674      6172745F 
 4674      74696D65 
 4674      5F737461 
 4675              	.LASF120:
 4676 0609 6770735F 		.ascii	"gps_status\000"
 4676      73746174 
 4676      757300
 4677              	.LASF70:
 4678 0614 70696E73 		.ascii	"pins_configure_inactive\000"
 4678      5F636F6E 
 4678      66696775 
 4678      72655F69 
 4678      6E616374 
 4679              	.LASF38:
 4680 062c 73696D5F 		.ascii	"sim_id\000"
 4680      696400
 4681              	.LASF28:
 4682 0633 746D5F6D 		.ascii	"tm_mday\000"
 4682      64617900 
 4683              	.LASF54:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 105


 4684 063b 76616C69 		.ascii	"valid\000"
 4684      6400
 4685              	.LASF112:
 4686 0641 6D696E75 		.ascii	"minute\000"
 4686      746500
 4687              	.LASF14:
 4688 0648 75696E74 		.ascii	"uint32_t\000"
 4688      33325F74 
 4688      00
 4689              	.LASF25:
 4690 0651 746D5F73 		.ascii	"tm_sec\000"
 4690      656300
 4691              	.LASF35:
 4692 0658 73746174 		.ascii	"status\000"
 4692      757300
 4693              	.LASF127:
 4694 065f 64617461 		.ascii	"dataPointsInStackDesired\000"
 4694      506F696E 
 4694      7473496E 
 4694      53746163 
 4694      6B446573 
 4695              	.LASF68:
 4696 0678 7379735F 		.ascii	"sys_settings_t\000"
 4696      73657474 
 4696      696E6773 
 4696      5F7400
 4697              	.LASF12:
 4698 0687 75696E74 		.ascii	"uint8_t\000"
 4698      385F7400 
 4699              	.LASF67:
 4700 068f 65705F64 		.ascii	"ep_database\000"
 4700      61746162 
 4700      61736500 
 4701              	.LASF18:
 4702 069b 696E7431 		.ascii	"int16\000"
 4702      3600
 4703              	.LASF73:
 4704 06a1 61745F72 		.ascii	"at_ready\000"
 4704      65616479 
 4704      00
 4705              	.LASF74:
 4706 06aa 61747465 		.ascii	"attempts\000"
 4706      6D707473 
 4706      00
 4707              	.LASF75:
 4708 06b3 626F6F74 		.ascii	"boot_time\000"
 4708      5F74696D 
 4708      6500
 4709              	.LASF80:
 4710 06bd 65787065 		.ascii	"expected_response\000"
 4710      63746564 
 4710      5F726573 
 4710      706F6E73 
 4710      6500
 4711              	.LASF42:
 4712 06cf 72737369 		.ascii	"rssi\000"
 4712      00
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccLabkif.s 			page 106


 4713              	.LASF119:
 4714 06d4 6C6F636B 		.ascii	"lock_time\000"
 4714      5F74696D 
 4714      6500
 4715              	.LASF129:
 4716 06de 68747470 		.ascii	"http_request\000"
 4716      5F726571 
 4716      75657374 
 4716      00
 4717              	.LASF72:
 4718 06eb 6D6F6465 		.ascii	"modem_power_down\000"
 4718      6D5F706F 
 4718      7765725F 
 4718      646F776E 
 4718      00
 4719              	.LASF57:
 4720 06fc 74696D65 		.ascii	"timeStamp\000"
 4720      5374616D 
 4720      7000
 4721              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
