ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"modem.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	modem_state,1,1
  20              		.comm	modem_start_time_stamp,4,4
  21              		.comm	modem_info,60,4
  22              		.comm	modem_stats,16,4
  23              		.syntax unified
  24              		.global _printf_float
  25              		.thumb
  26              		.syntax unified
  27              		.comm	dataPointsInStack,2,2
  28              		.comm	dataPointsInStackDesired,2,2
  29              		.comm	data,6600,4
  30              		.comm	http_request,10000,4
  31              		.comm	http_body,10000,4
  32              		.comm	http_route,200,4
  33              		.comm	system_info,28,4
  34              		.comm	system_settings,324,4
  35              		.comm	uart_received_string,1024,4
  36              		.global	uart_string_index
  37              		.bss
  38              		.align	1
  39              		.type	uart_string_index, %object
  40              		.size	uart_string_index, 2
  41              	uart_string_index:
  42 0000 0000     		.space	2
  43              		.section	.text.isr_telit_rx,"ax",%progbits
  44              		.align	2
  45              		.global	isr_telit_rx
  46              		.thumb
  47              		.thumb_func
  48              		.type	isr_telit_rx, %function
  49              	isr_telit_rx:
  50              	.LFB64:
  51              		.file 1 "modem.c"
   1:modem.c       **** //Methods for Telit modem 
   2:modem.c       **** #include "modem.h"
   3:modem.c       **** #include "notoriOS.h"
   4:modem.c       **** #include "debug.h"
   5:modem.c       **** #include "data.h"
   6:modem.c       **** #include <math.h>
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 2


   7:modem.c       **** #include <stdio.h>
   8:modem.c       **** 
   9:modem.c       **** char uart_received_string[1024];
  10:modem.c       **** int16 uart_string_index=0;
  11:modem.c       **** 
  12:modem.c       **** #define DEFAULT_AT_TIMEOUT 2000u // Send command and wait 2000 ms
  13:modem.c       **** #define NO_AT_TIMEOUT 0u // Send command, no timeout/ don't wait 
  14:modem.c       **** 
  15:modem.c       **** #define TIMEOUT_NETWORK_CONNECT 200 //seconds
  16:modem.c       **** #define TIMEOUT_IP_ACQUIRE 230 //seconds (cummulatinve) add to TIMEOUT_NETWORK_CONNECT
  17:modem.c       **** 
  18:modem.c       **** CY_ISR_PROTO(isr_telit_rx); // Declares a custom ISR function "isr_telit_rx" using the CY_ISR_PROTO
  19:modem.c       **** 
  20:modem.c       **** // Define the custom ISR function "isr_telit_rx" using the CY_ISR macro
  21:modem.c       **** // Get each character from Telit and saves it to uart_received_string
  22:modem.c       **** CY_ISR(isr_telit_rx){      
  52              		.loc 1 22 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 98B5     		push	{r3, r4, r7, lr}
  57              		.cfi_def_cfa_offset 16
  58              		.cfi_offset 3, -16
  59              		.cfi_offset 4, -12
  60              		.cfi_offset 7, -8
  61              		.cfi_offset 14, -4
  62 0002 00AF     		add	r7, sp, #0
  63              		.cfi_def_cfa_register 7
  23:modem.c       ****     // UART_Telit_GetRxBufferSize() returns the number of received bytes available in the RX buffer
  24:modem.c       ****     while(UART_Telit_GetRxBufferSize()==1){
  64              		.loc 1 24 0
  65 0004 12E0     		b	.L2
  66              	.L3:
  25:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  67              		.loc 1 25 0
  68 0006 0D4B     		ldr	r3, .L4
  69 0008 B3F90030 		ldrsh	r3, [r3]
  70 000c 1C46     		mov	r4, r3
  71 000e FFF7FEFF 		bl	UART_Telit_GetChar
  72 0012 0346     		mov	r3, r0
  73 0014 1A46     		mov	r2, r3
  74 0016 0A4B     		ldr	r3, .L4+4
  75 0018 1A55     		strb	r2, [r3, r4]
  26:modem.c       ****         uart_string_index++;
  76              		.loc 1 26 0
  77 001a 084B     		ldr	r3, .L4
  78 001c B3F90030 		ldrsh	r3, [r3]
  79 0020 9BB2     		uxth	r3, r3
  80 0022 0133     		adds	r3, r3, #1
  81 0024 9BB2     		uxth	r3, r3
  82 0026 1AB2     		sxth	r2, r3
  83 0028 044B     		ldr	r3, .L4
  84 002a 1A80     		strh	r2, [r3]	@ movhi
  85              	.L2:
  24:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  86              		.loc 1 24 0
  87 002c FFF7FEFF 		bl	UART_Telit_GetRxBufferSize
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 3


  88 0030 0346     		mov	r3, r0
  89 0032 012B     		cmp	r3, #1
  90 0034 E7D0     		beq	.L3
  27:modem.c       ****     }
  28:modem.c       **** 
  29:modem.c       **** }
  91              		.loc 1 29 0
  92 0036 00BF     		nop
  93 0038 98BD     		pop	{r3, r4, r7, pc}
  94              	.L5:
  95 003a 00BF     		.align	2
  96              	.L4:
  97 003c 00000000 		.word	uart_string_index
  98 0040 00000000 		.word	uart_received_string
  99              		.cfi_endproc
 100              	.LFE64:
 101              		.size	isr_telit_rx, .-isr_telit_rx
 102              		.section	.text.modem_initialize,"ax",%progbits
 103              		.align	2
 104              		.global	modem_initialize
 105              		.thumb
 106              		.thumb_func
 107              		.type	modem_initialize, %function
 108              	modem_initialize:
 109              	.LFB65:
  30:modem.c       **** 
  31:modem.c       **** // Initialize the modem
  32:modem.c       **** void modem_initialize(){
 110              		.loc 1 32 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 1, uses_anonymous_args = 0
 114 0000 80B5     		push	{r7, lr}
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 7, -8
 117              		.cfi_offset 14, -4
 118 0002 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
  33:modem.c       ****     // Don't do much except make sure that all the modem pins are pulled low
  34:modem.c       ****     // Also make sure that the TX PIN is fully disabled
  35:modem.c       ****     pins_configure_inactive();
 120              		.loc 1 35 0
 121 0004 FFF7FEFF 		bl	pins_configure_inactive
  36:modem.c       ****     modem_state = 0;
 122              		.loc 1 36 0
 123 0008 154B     		ldr	r3, .L7
 124 000a 0022     		movs	r2, #0
 125 000c 1A70     		strb	r2, [r3]
  37:modem.c       ****     //initialize states
  38:modem.c       ****     modem_info.imei[0] = '\0';
 126              		.loc 1 38 0
 127 000e 154B     		ldr	r3, .L7+4
 128 0010 0022     		movs	r2, #0
 129 0012 83F82820 		strb	r2, [r3, #40]
  39:modem.c       ****     modem_info.model_id[0] = '\0';
 130              		.loc 1 39 0
 131 0016 134B     		ldr	r3, .L7+4
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 4


 132 0018 0022     		movs	r2, #0
 133 001a 1A75     		strb	r2, [r3, #20]
  40:modem.c       ****     modem_info.sim_id[0] = '\0';
 134              		.loc 1 40 0
 135 001c 114B     		ldr	r3, .L7+4
 136 001e 0022     		movs	r2, #0
 137 0020 1A70     		strb	r2, [r3]
  41:modem.c       ****     modem_stats.rssi = 0;
 138              		.loc 1 41 0
 139 0022 114B     		ldr	r3, .L7+8
 140 0024 0022     		movs	r2, #0
 141 0026 1A70     		strb	r2, [r3]
  42:modem.c       ****     modem_stats.ber = 0;
 142              		.loc 1 42 0
 143 0028 0F4B     		ldr	r3, .L7+8
 144 002a 0022     		movs	r2, #0
 145 002c 5A70     		strb	r2, [r3, #1]
  43:modem.c       ****     modem_stats.rscp = 0;
 146              		.loc 1 43 0
 147 002e 0E4B     		ldr	r3, .L7+8
 148 0030 0022     		movs	r2, #0
 149 0032 9A70     		strb	r2, [r3, #2]
  44:modem.c       ****     modem_stats.ecno = 0;
 150              		.loc 1 44 0
 151 0034 0C4B     		ldr	r3, .L7+8
 152 0036 0022     		movs	r2, #0
 153 0038 DA70     		strb	r2, [r3, #3]
  45:modem.c       ****     modem_stats.rsrq = 0;
 154              		.loc 1 45 0
 155 003a 0B4B     		ldr	r3, .L7+8
 156 003c 0022     		movs	r2, #0
 157 003e 1A71     		strb	r2, [r3, #4]
  46:modem.c       ****     modem_stats.rsrp = 0;
 158              		.loc 1 46 0
 159 0040 094B     		ldr	r3, .L7+8
 160 0042 0022     		movs	r2, #0
 161 0044 5A71     		strb	r2, [r3, #5]
  47:modem.c       ****     modem_stats.time_to_acquire_ip = 0;
 162              		.loc 1 47 0
 163 0046 084B     		ldr	r3, .L7+8
 164 0048 0022     		movs	r2, #0
 165 004a DA60     		str	r2, [r3, #12]
  48:modem.c       ****     modem_stats.time_to_network_connect = 0;
 166              		.loc 1 48 0
 167 004c 064B     		ldr	r3, .L7+8
 168 004e 0022     		movs	r2, #0
 169 0050 9A60     		str	r2, [r3, #8]
  49:modem.c       ****     // Disable the RX Pin interrupt, and only enable it during long timeouts
  50:modem.c       ****     // Rx_Telit_SetInterruptMode(): Configures the interrupt mode for each of the Pins component's 
  51:modem.c       ****     // Rx_Telit_0_INTR selects the first pin in the list, and Rx_Telit_INTR_NONE disables the Rx pi
  52:modem.c       ****     Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 170              		.loc 1 52 0
 171 0052 0021     		movs	r1, #0
 172 0054 4020     		movs	r0, #64
 173 0056 FFF7FEFF 		bl	Rx_Telit_SetInterruptMode
  53:modem.c       ****     
  54:modem.c       **** }
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 5


 174              		.loc 1 54 0
 175 005a 00BF     		nop
 176 005c 80BD     		pop	{r7, pc}
 177              	.L8:
 178 005e 00BF     		.align	2
 179              	.L7:
 180 0060 00000000 		.word	modem_state
 181 0064 00000000 		.word	modem_info
 182 0068 00000000 		.word	modem_stats
 183              		.cfi_endproc
 184              	.LFE65:
 185              		.size	modem_initialize, .-modem_initialize
 186              		.section	.text.pins_configure_inactive,"ax",%progbits
 187              		.align	2
 188              		.global	pins_configure_inactive
 189              		.thumb
 190              		.thumb_func
 191              		.type	pins_configure_inactive, %function
 192              	pins_configure_inactive:
 193              	.LFB66:
  55:modem.c       **** 
  56:modem.c       **** 
  57:modem.c       **** // To be used when the modem power is to be "killed" conpletely to conserve power
  58:modem.c       **** void pins_configure_inactive(){
 194              		.loc 1 58 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 1, uses_anonymous_args = 0
 198 0000 80B5     		push	{r7, lr}
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 7, -8
 201              		.cfi_offset 14, -4
 202 0002 00AF     		add	r7, sp, #0
 203              		.cfi_def_cfa_register 7
  59:modem.c       ****    
  60:modem.c       ****    Telit_ControlReg_Write(0u); // Physically disconect UART pin
 204              		.loc 1 60 0
 205 0004 0020     		movs	r0, #0
 206 0006 FFF7FEFF 		bl	Telit_ControlReg_Write
  61:modem.c       ****    Rx_Telit_SetDriveMode(PIN_DM_STRONG); // Set drive mode
 207              		.loc 1 61 0
 208 000a 0C20     		movs	r0, #12
 209 000c FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  62:modem.c       **** 
  63:modem.c       ****    Pin_Telit_pwr_Write(OFF); // Kill power to modem (pulls pin low).
 210              		.loc 1 63 0
 211 0010 0020     		movs	r0, #0
 212 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  64:modem.c       **** 
  65:modem.c       ****    // Pull down all of these, just in case (turns the off).
  66:modem.c       ****    Rx_Telit_Write(OFF); 
 213              		.loc 1 66 0
 214 0016 0020     		movs	r0, #0
 215 0018 FFF7FEFF 		bl	Rx_Telit_Write
  67:modem.c       ****    Tx_Telit_Write(OFF);
 216              		.loc 1 67 0
 217 001c 0020     		movs	r0, #0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 6


 218 001e FFF7FEFF 		bl	Tx_Telit_Write
  68:modem.c       ****    Pin_Telit_ONOFF_Write(OFF);
 219              		.loc 1 68 0
 220 0022 0020     		movs	r0, #0
 221 0024 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
  69:modem.c       ****    Pin_Telit_SWRDY_Write(OFF);
 222              		.loc 1 69 0
 223 0028 0020     		movs	r0, #0
 224 002a FFF7FEFF 		bl	Pin_Telit_SWRDY_Write
  70:modem.c       ****     
  71:modem.c       **** }
 225              		.loc 1 71 0
 226 002e 00BF     		nop
 227 0030 80BD     		pop	{r7, pc}
 228              		.cfi_endproc
 229              	.LFE66:
 230              		.size	pins_configure_inactive, .-pins_configure_inactive
 231 0032 00BF     		.section	.text.pins_configure_active,"ax",%progbits
 232              		.align	2
 233              		.global	pins_configure_active
 234              		.thumb
 235              		.thumb_func
 236              		.type	pins_configure_active, %function
 237              	pins_configure_active:
 238              	.LFB67:
  72:modem.c       **** 
  73:modem.c       **** // Turns on power and configures all UART pin modes
  74:modem.c       **** void pins_configure_active(){
 239              		.loc 1 74 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 1, uses_anonymous_args = 0
 243 0000 80B5     		push	{r7, lr}
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 7, -8
 246              		.cfi_offset 14, -4
 247 0002 00AF     		add	r7, sp, #0
 248              		.cfi_def_cfa_register 7
  75:modem.c       ****     
  76:modem.c       ****     Rx_Telit_SetDriveMode(PIN_DM_DIG_HIZ); // Power up. Set RX pin to High Impedance Digital mode.
 249              		.loc 1 76 0
 250 0004 0220     		movs	r0, #2
 251 0006 FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  77:modem.c       ****     Telit_ControlReg_Write(1u); // Pull Telit_ControlReg pin high (turns it on).
 252              		.loc 1 77 0
 253 000a 0120     		movs	r0, #1
 254 000c FFF7FEFF 		bl	Telit_ControlReg_Write
  78:modem.c       ****     Pin_Telit_pwr_Write(ON); // Pulls Telit_pwr pin high (turns it on).
 255              		.loc 1 78 0
 256 0010 0120     		movs	r0, #1
 257 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  79:modem.c       ****     CyDelay(100u); // Give the MOSFET a few ms to stalbilise power 
 258              		.loc 1 79 0
 259 0016 6420     		movs	r0, #100
 260 0018 FFF7FEFF 		bl	CyDelay
  80:modem.c       **** }
 261              		.loc 1 80 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 7


 262 001c 00BF     		nop
 263 001e 80BD     		pop	{r7, pc}
 264              		.cfi_endproc
 265              	.LFE67:
 266              		.size	pins_configure_active, .-pins_configure_active
 267              		.section	.rodata
 268              		.align	2
 269              	.LC0:
 270 0000 4F4B00   		.ascii	"OK\000"
 271 0003 00       		.align	2
 272              	.LC1:
 273 0004 41542353 		.ascii	"AT#SHDN\015\000"
 273      48444E0D 
 273      00
 274              		.section	.text.modem_power_down,"ax",%progbits
 275              		.align	2
 276              		.global	modem_power_down
 277              		.thumb
 278              		.thumb_func
 279              		.type	modem_power_down, %function
 280              	modem_power_down:
 281              	.LFB68:
  81:modem.c       **** 
  82:modem.c       **** // Power down the modem -- completely "kill" modem to conserve power.
  83:modem.c       **** void modem_power_down(){
 282              		.loc 1 83 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 1, uses_anonymous_args = 0
 286 0000 80B5     		push	{r7, lr}
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 7, -8
 289              		.cfi_offset 14, -4
 290 0002 00AF     		add	r7, sp, #0
 291              		.cfi_def_cfa_register 7
  84:modem.c       ****     // AT Command to modem for Software Shut Down - #SHDN
  85:modem.c       ****     // \r is carriage return, it is necessary for the modem to know it got a command
  86:modem.c       ****     at_write_command("AT#SHDN\r","OK",5000u); 
 292              		.loc 1 86 0
 293 0004 41F28832 		movw	r2, #5000
 294 0008 0A49     		ldr	r1, .L12
 295 000a 0B48     		ldr	r0, .L12+4
 296 000c FFF7FEFF 		bl	at_write_command
  87:modem.c       ****    
  88:modem.c       ****     // Soft power cycle makes sure that the modem is all the way on (like holding on button on for 
  89:modem.c       ****     modem_soft_power_cycle();
 297              		.loc 1 89 0
 298 0010 FFF7FEFF 		bl	modem_soft_power_cycle
  90:modem.c       ****     CyDelay(1000u);
 299              		.loc 1 90 0
 300 0014 4FF47A70 		mov	r0, #1000
 301 0018 FFF7FEFF 		bl	CyDelay
  91:modem.c       ****     
  92:modem.c       ****     UART_Telit_Stop(); // Disables the UART operation.
 302              		.loc 1 92 0
 303 001c FFF7FEFF 		bl	UART_Telit_Stop
  93:modem.c       ****     isr_telit_rx_Stop(); // Disables and removes the interrupt.
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 8


 304              		.loc 1 93 0
 305 0020 FFF7FEFF 		bl	isr_telit_rx_Stop
  94:modem.c       ****     pins_configure_inactive(); // We want the modem power to be "killed" completely to conserve pow
 306              		.loc 1 94 0
 307 0024 FFF7FEFF 		bl	pins_configure_inactive
  95:modem.c       ****     modem_state = MODEM_STATE_OFF;
 308              		.loc 1 95 0
 309 0028 044B     		ldr	r3, .L12+8
 310 002a 0022     		movs	r2, #0
 311 002c 1A70     		strb	r2, [r3]
  96:modem.c       ****     
  97:modem.c       **** }
 312              		.loc 1 97 0
 313 002e 00BF     		nop
 314 0030 80BD     		pop	{r7, pc}
 315              	.L13:
 316 0032 00BF     		.align	2
 317              	.L12:
 318 0034 00000000 		.word	.LC0
 319 0038 04000000 		.word	.LC1
 320 003c 00000000 		.word	modem_state
 321              		.cfi_endproc
 322              	.LFE68:
 323              		.size	modem_power_down, .-modem_power_down
 324              		.section	.rodata
 325 000d 000000   		.align	2
 326              	.LC2:
 327 0010 41544530 		.ascii	"ATE0\015\000"
 327      0D00
 328 0016 0000     		.align	2
 329              	.LC3:
 330 0018 4D6F6465 		.ascii	"Modem boot time: %d\000"
 330      6D20626F 
 330      6F742074 
 330      696D653A 
 330      20256400 
 331              		.align	2
 332              	.LC4:
 333 002c 4D6F6465 		.ascii	"Modem ready for AT commands after %d attempt(s).\000"
 333      6D207265 
 333      61647920 
 333      666F7220 
 333      41542063 
 334 005d 000000   		.align	2
 335              	.LC5:
 336 0060 4E6F2072 		.ascii	"No response from modem.\000"
 336      6573706F 
 336      6E736520 
 336      66726F6D 
 336      206D6F64 
 337              		.section	.text.modem_power_up,"ax",%progbits
 338              		.align	2
 339              		.global	modem_power_up
 340              		.thumb
 341              		.thumb_func
 342              		.type	modem_power_up, %function
 343              	modem_power_up:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 9


 344              	.LFB69:
  98:modem.c       **** 
  99:modem.c       **** // This puts all the modem pints into a state that won't leak power
 100:modem.c       **** // Please call restore_pins() to bring them abck to function when they are needed for UART
 101:modem.c       **** uint8 modem_power_up(){
 345              		.loc 1 101 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 8
 348              		@ frame_needed = 1, uses_anonymous_args = 0
 349 0000 80B5     		push	{r7, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 7, -8
 352              		.cfi_offset 14, -4
 353 0002 82B0     		sub	sp, sp, #8
 354              		.cfi_def_cfa_offset 16
 355 0004 00AF     		add	r7, sp, #0
 356              		.cfi_def_cfa_register 7
 102:modem.c       **** 
 103:modem.c       ****     pins_configure_active(); // Turns on power and configures all UART pin modes
 357              		.loc 1 103 0
 358 0006 FFF7FEFF 		bl	pins_configure_active
 104:modem.c       ****     UART_Telit_Start(); // Sets the initVar variable, calls the UART_Telit_Init() function, and the
 359              		.loc 1 104 0
 360 000a FFF7FEFF 		bl	UART_Telit_Start
 105:modem.c       ****     isr_telit_rx_StartEx(isr_telit_rx); // Sets up the interrupt and enables it. 
 361              		.loc 1 105 0
 362 000e 2C48     		ldr	r0, .L27
 363 0010 FFF7FEFF 		bl	isr_telit_rx_StartEx
 106:modem.c       **** 
 107:modem.c       ****     modem_soft_power_cycle(); // Soft power cycle makes sure that the modem is all the way on (like
 364              		.loc 1 107 0
 365 0014 FFF7FEFF 		bl	modem_soft_power_cycle
 108:modem.c       ****     
 109:modem.c       ****     // Turn off ECHO command (doesn't repeat your command back to you).
 110:modem.c       ****     uint8 at_ready = 0;
 366              		.loc 1 110 0
 367 0018 0023     		movs	r3, #0
 368 001a FB71     		strb	r3, [r7, #7]
 111:modem.c       ****     uint8 attempts = 0;
 369              		.loc 1 111 0
 370 001c 0023     		movs	r3, #0
 371 001e 3B71     		strb	r3, [r7, #4]
 112:modem.c       ****     // Create variable boot_time of the current time stamp.
 113:modem.c       ****     long boot_time = getTimeStamp();
 372              		.loc 1 113 0
 373 0020 FFF7FEFF 		bl	getTimeStamp
 374 0024 3860     		str	r0, [r7]
 375              	.LBB2:
 114:modem.c       ****     
 115:modem.c       ****     //it takes the 4G modem 10+secs (max 20) to boot up, so keep hitting it with AT commands until 
 116:modem.c       ****     for(uint8 attempts = 0; attempts<3; attempts++){
 376              		.loc 1 116 0
 377 0026 0023     		movs	r3, #0
 378 0028 BB71     		strb	r3, [r7, #6]
 379 002a 1CE0     		b	.L15
 380              	.L22:
 381              	.LBB3:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 10


 117:modem.c       ****         
 118:modem.c       ****         for(uint8 pwr_check = 0; pwr_check<20; pwr_check++){
 382              		.loc 1 118 0
 383 002c 0023     		movs	r3, #0
 384 002e 7B71     		strb	r3, [r7, #5]
 385 0030 0EE0     		b	.L16
 386              	.L19:
 119:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 120:modem.c       ****             if(at_write_command("ATE0\r","OK",1000u)){
 387              		.loc 1 120 0
 388 0032 4FF47A72 		mov	r2, #1000
 389 0036 2349     		ldr	r1, .L27+4
 390 0038 2348     		ldr	r0, .L27+8
 391 003a FFF7FEFF 		bl	at_write_command
 392 003e 0346     		mov	r3, r0
 393 0040 002B     		cmp	r3, #0
 394 0042 02D0     		beq	.L17
 121:modem.c       ****                 at_ready = 1;
 395              		.loc 1 121 0
 396 0044 0123     		movs	r3, #1
 397 0046 FB71     		strb	r3, [r7, #7]
 122:modem.c       ****                 break;
 398              		.loc 1 122 0
 399 0048 05E0     		b	.L18
 400              	.L17:
 118:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 401              		.loc 1 118 0 discriminator 2
 402 004a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 403 004c 0133     		adds	r3, r3, #1
 404 004e 7B71     		strb	r3, [r7, #5]
 405              	.L16:
 118:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 406              		.loc 1 118 0 is_stmt 0 discriminator 1
 407 0050 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 408 0052 132B     		cmp	r3, #19
 409 0054 EDD9     		bls	.L19
 410              	.L18:
 411              	.LBE3:
 123:modem.c       ****             }
 124:modem.c       ****         }
 125:modem.c       ****             
 126:modem.c       ****         if(at_ready == 1){
 412              		.loc 1 126 0 is_stmt 1
 413 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 414 0058 012B     		cmp	r3, #1
 415 005a 08D0     		beq	.L26
 127:modem.c       ****             break;
 128:modem.c       ****         }else{
 129:modem.c       ****             // Soft power cycle makes sure that the modem is all the way on (like holding on button
 130:modem.c       ****             modem_soft_power_cycle();
 416              		.loc 1 130 0 discriminator 2
 417 005c FFF7FEFF 		bl	modem_soft_power_cycle
 116:modem.c       ****         
 418              		.loc 1 116 0 discriminator 2
 419 0060 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 420 0062 0133     		adds	r3, r3, #1
 421 0064 BB71     		strb	r3, [r7, #6]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 11


 422              	.L15:
 116:modem.c       ****         
 423              		.loc 1 116 0 is_stmt 0 discriminator 1
 424 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 425 0068 022B     		cmp	r3, #2
 426 006a DFD9     		bls	.L22
 427 006c 00E0     		b	.L21
 428              	.L26:
 127:modem.c       ****             break;
 429              		.loc 1 127 0 is_stmt 1
 430 006e 00BF     		nop
 431              	.L21:
 432              	.LBE2:
 131:modem.c       ****         }
 132:modem.c       ****     }
 133:modem.c       ****     // Calculate boot up time and save to variable boot_time.
 134:modem.c       ****     boot_time = getTimeStamp() - boot_time;
 433              		.loc 1 134 0
 434 0070 FFF7FEFF 		bl	getTimeStamp
 435 0074 0246     		mov	r2, r0
 436 0076 3B68     		ldr	r3, [r7]
 437 0078 D31A     		subs	r3, r2, r3
 438 007a 3B60     		str	r3, [r7]
 135:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Modem boot time: %d",boot_time);
 439              		.loc 1 135 0
 440 007c 3A68     		ldr	r2, [r7]
 441 007e 1349     		ldr	r1, .L27+12
 442 0080 0020     		movs	r0, #0
 443 0082 FFF7FEFF 		bl	printNotif
 136:modem.c       ****    
 137:modem.c       ****     if(at_ready == 1){
 444              		.loc 1 137 0
 445 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 446 0088 012B     		cmp	r3, #1
 447 008a 0AD1     		bne	.L23
 138:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Modem ready for AT commands after %d attempt(s).",attempts);
 448              		.loc 1 138 0
 449 008c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 450 008e 1A46     		mov	r2, r3
 451 0090 0F49     		ldr	r1, .L27+16
 452 0092 0020     		movs	r0, #0
 453 0094 FFF7FEFF 		bl	printNotif
 139:modem.c       ****         modem_state = MODEM_STATE_STARTUP;
 454              		.loc 1 139 0
 455 0098 0E4B     		ldr	r3, .L27+20
 456 009a 0122     		movs	r2, #1
 457 009c 1A70     		strb	r2, [r3]
 140:modem.c       ****     }else{
 141:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"No response from modem.");
 142:modem.c       ****         modem_state = MODEM_STATE_OFF;
 143:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 144:modem.c       ****         modem_power_down();
 145:modem.c       ****         return 0u;
 146:modem.c       ****     }
 147:modem.c       ****     return 1u;
 458              		.loc 1 147 0
 459 009e 0123     		movs	r3, #1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 12


 460 00a0 09E0     		b	.L25
 461              	.L23:
 141:modem.c       ****         modem_state = MODEM_STATE_OFF;
 462              		.loc 1 141 0
 463 00a2 0D49     		ldr	r1, .L27+24
 464 00a4 0220     		movs	r0, #2
 465 00a6 FFF7FEFF 		bl	printNotif
 142:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 466              		.loc 1 142 0
 467 00aa 0A4B     		ldr	r3, .L27+20
 468 00ac 0022     		movs	r2, #0
 469 00ae 1A70     		strb	r2, [r3]
 144:modem.c       ****         return 0u;
 470              		.loc 1 144 0
 471 00b0 FFF7FEFF 		bl	modem_power_down
 145:modem.c       ****     }
 472              		.loc 1 145 0
 473 00b4 0023     		movs	r3, #0
 474              	.L25:
 148:modem.c       **** }
 475              		.loc 1 148 0
 476 00b6 1846     		mov	r0, r3
 477 00b8 0837     		adds	r7, r7, #8
 478              		.cfi_def_cfa_offset 8
 479 00ba BD46     		mov	sp, r7
 480              		.cfi_def_cfa_register 13
 481              		@ sp needed
 482 00bc 80BD     		pop	{r7, pc}
 483              	.L28:
 484 00be 00BF     		.align	2
 485              	.L27:
 486 00c0 00000000 		.word	isr_telit_rx
 487 00c4 00000000 		.word	.LC0
 488 00c8 10000000 		.word	.LC2
 489 00cc 18000000 		.word	.LC3
 490 00d0 2C000000 		.word	.LC4
 491 00d4 00000000 		.word	modem_state
 492 00d8 60000000 		.word	.LC5
 493              		.cfi_endproc
 494              	.LFE69:
 495              		.size	modem_power_up, .-modem_power_up
 496              		.section	.text.modem_soft_power_cycle,"ax",%progbits
 497              		.align	2
 498              		.global	modem_soft_power_cycle
 499              		.thumb
 500              		.thumb_func
 501              		.type	modem_soft_power_cycle, %function
 502              	modem_soft_power_cycle:
 503              	.LFB70:
 149:modem.c       **** 
 150:modem.c       **** // Puts modem in soft power cycle -- modem has power but isn't all the way on, so soft power cycle 
 151:modem.c       **** void modem_soft_power_cycle(){
 504              		.loc 1 151 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 1, uses_anonymous_args = 0
 508 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 13


 509              		.cfi_def_cfa_offset 8
 510              		.cfi_offset 7, -8
 511              		.cfi_offset 14, -4
 512 0002 00AF     		add	r7, sp, #0
 513              		.cfi_def_cfa_register 7
 152:modem.c       ****     Pin_Telit_ONOFF_Write(1u); // Pulls Telit_ONOFF pin high
 514              		.loc 1 152 0
 515 0004 0120     		movs	r0, #1
 516 0006 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 153:modem.c       ****     CyDelay(2000u); // Give modem a sec to boot
 517              		.loc 1 153 0
 518 000a 4FF4FA60 		mov	r0, #2000
 519 000e FFF7FEFF 		bl	CyDelay
 154:modem.c       ****     Pin_Telit_ONOFF_Write(0u); // Pulls Telit_ONOFF pin low
 520              		.loc 1 154 0
 521 0012 0020     		movs	r0, #0
 522 0014 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 155:modem.c       ****     
 156:modem.c       **** }
 523              		.loc 1 156 0
 524 0018 00BF     		nop
 525 001a 80BD     		pop	{r7, pc}
 526              		.cfi_endproc
 527              	.LFE70:
 528              		.size	modem_soft_power_cycle, .-modem_soft_power_cycle
 529              		.section	.text.uart_string_reset,"ax",%progbits
 530              		.align	2
 531              		.global	uart_string_reset
 532              		.thumb
 533              		.thumb_func
 534              		.type	uart_string_reset, %function
 535              	uart_string_reset:
 536              	.LFB71:
 157:modem.c       **** 
 158:modem.c       **** // Clear and reset the uart_received_string variable and uart_string_index for the next transmissio
 159:modem.c       **** void uart_string_reset(){
 537              		.loc 1 159 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 1, uses_anonymous_args = 0
 541 0000 80B5     		push	{r7, lr}
 542              		.cfi_def_cfa_offset 8
 543              		.cfi_offset 7, -8
 544              		.cfi_offset 14, -4
 545 0002 00AF     		add	r7, sp, #0
 546              		.cfi_def_cfa_register 7
 160:modem.c       ****     uart_string_index=0;
 547              		.loc 1 160 0
 548 0004 064B     		ldr	r3, .L31
 549 0006 0022     		movs	r2, #0
 550 0008 1A80     		strh	r2, [r3]	@ movhi
 161:modem.c       ****     // memset(void *str, int c, size_t n) copies the character c (an unsigned char) to the first n 
 162:modem.c       ****     memset(uart_received_string,'\0',sizeof(uart_received_string));
 551              		.loc 1 162 0
 552 000a 4FF48062 		mov	r2, #1024
 553 000e 0021     		movs	r1, #0
 554 0010 0448     		ldr	r0, .L31+4
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 14


 555 0012 FFF7FEFF 		bl	memset
 163:modem.c       ****     // Clears the receiver memory buffer and hardware RX FIFO of all received data.
 164:modem.c       ****     UART_Telit_ClearRxBuffer();
 556              		.loc 1 164 0
 557 0016 FFF7FEFF 		bl	UART_Telit_ClearRxBuffer
 165:modem.c       **** }
 558              		.loc 1 165 0
 559 001a 00BF     		nop
 560 001c 80BD     		pop	{r7, pc}
 561              	.L32:
 562 001e 00BF     		.align	2
 563              	.L31:
 564 0020 00000000 		.word	uart_string_index
 565 0024 00000000 		.word	uart_received_string
 566              		.cfi_endproc
 567              	.LFE71:
 568              		.size	uart_string_reset, .-uart_string_reset
 569              		.section	.rodata
 570              		.align	2
 571              	.LC6:
 572 0078 4D6F6465 		.ascii	"Modem sent AT command without timeout: %s\015\012\000"
 572      6D207365 
 572      6E742041 
 572      5420636F 
 572      6D6D616E 
 573              		.align	2
 574              	.LC7:
 575 00a4 4D6F6465 		.ascii	"Modem Received expected AT Response on first Try:\012"
 575      6D205265 
 575      63656976 
 575      65642065 
 575      78706563 
 576 00d6 436F6D6D 		.ascii	"Command: %s\012Received: %s\015\012\000"
 576      616E643A 
 576      2025730A 
 576      52656365 
 576      69766564 
 577 00f1 000000   		.align	2
 578              	.LC8:
 579 00f4 4D6F6465 		.ascii	"Modem required %d tries to receive AT Response: %s\015"
 579      6D207265 
 579      71756972 
 579      65642025 
 579      64207472 
 580 0127 0A00     		.ascii	"\012\000"
 581 0129 000000   		.align	2
 582              	.LC9:
 583 012c 436F756C 		.ascii	"Could not write AT command: %s\012 Received: %s\012"
 583      64206E6F 
 583      74207772 
 583      69746520 
 583      41542063 
 584 0159 00       		.ascii	"\000"
 585              		.section	.text.at_write_command,"ax",%progbits
 586              		.align	2
 587              		.global	at_write_command
 588              		.thumb
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 15


 589              		.thumb_func
 590              		.type	at_write_command, %function
 591              	at_write_command:
 592              	.LFB72:
 166:modem.c       **** 
 167:modem.c       **** // Modem controlled  via  the  serial  interface  using  the  standard  AT commands.
 168:modem.c       **** // AT is an ATTENTION command and is used as a prefix to other parameters in a string. 
 169:modem.c       **** // Sends commands to the modem
 170:modem.c       **** uint8_t at_write_command(char* commands, char* expected_response,uint32_t timeout){
 593              		.loc 1 170 0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 40
 596              		@ frame_needed = 1, uses_anonymous_args = 0
 597 0000 80B5     		push	{r7, lr}
 598              		.cfi_def_cfa_offset 8
 599              		.cfi_offset 7, -8
 600              		.cfi_offset 14, -4
 601 0002 8AB0     		sub	sp, sp, #40
 602              		.cfi_def_cfa_offset 48
 603 0004 00AF     		add	r7, sp, #0
 604              		.cfi_def_cfa_register 7
 605 0006 F860     		str	r0, [r7, #12]
 606 0008 B960     		str	r1, [r7, #8]
 607 000a 7A60     		str	r2, [r7, #4]
 171:modem.c       **** 
 172:modem.c       ****     uint32 at_attempt = 0;
 608              		.loc 1 172 0
 609 000c 0023     		movs	r3, #0
 610 000e 7B62     		str	r3, [r7, #36]
 173:modem.c       ****     
 174:modem.c       ****     for(at_attempt = 0; at_attempt < 3; at_attempt++) {
 611              		.loc 1 174 0
 612 0010 0023     		movs	r3, #0
 613 0012 7B62     		str	r3, [r7, #36]
 614 0014 46E0     		b	.L34
 615              	.L42:
 616              	.LBB4:
 175:modem.c       ****         
 176:modem.c       ****         char* compare_location;
 177:modem.c       ****         uint32_t delay=10;
 617              		.loc 1 177 0
 618 0016 0A23     		movs	r3, #10
 619 0018 FB61     		str	r3, [r7, #28]
 178:modem.c       ****         uint32_t i, interval=timeout/delay;        
 620              		.loc 1 178 0
 621 001a 7A68     		ldr	r2, [r7, #4]
 622 001c FB69     		ldr	r3, [r7, #28]
 623 001e B2FBF3F3 		udiv	r3, r2, r3
 624 0022 BB61     		str	r3, [r7, #24]
 179:modem.c       ****         
 180:modem.c       ****         // Clear and reset the uart_received_string variable and uart_string_index for the next tra
 181:modem.c       ****         uart_string_reset();
 625              		.loc 1 181 0
 626 0024 FFF7FEFF 		bl	uart_string_reset
 182:modem.c       ****         
 183:modem.c       ****         // Sends a NULL terminated string to the TX buffer for transmission.
 184:modem.c       ****         UART_Telit_PutString(commands);
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 16


 627              		.loc 1 184 0
 628 0028 F868     		ldr	r0, [r7, #12]
 629 002a FFF7FEFF 		bl	UART_Telit_PutString
 185:modem.c       ****         
 186:modem.c       ****         
 187:modem.c       ****         // If no timeout, no need to wait for response
 188:modem.c       ****         if(timeout == NO_AT_TIMEOUT){
 630              		.loc 1 188 0
 631 002e 7B68     		ldr	r3, [r7, #4]
 632 0030 002B     		cmp	r3, #0
 633 0032 06D1     		bne	.L35
 189:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem sent AT command without timeout: %s\r\n", commands);
 634              		.loc 1 189 0
 635 0034 FA68     		ldr	r2, [r7, #12]
 636 0036 1F49     		ldr	r1, .L43
 637 0038 0020     		movs	r0, #0
 638 003a FFF7FEFF 		bl	printNotif
 190:modem.c       ****             return 1u;
 639              		.loc 1 190 0
 640 003e 0123     		movs	r3, #1
 641 0040 34E0     		b	.L36
 642              	.L35:
 191:modem.c       ****         }
 192:modem.c       ****       
 193:modem.c       ****      
 194:modem.c       ****         for(i=0;i<interval;i++){ 
 643              		.loc 1 194 0
 644 0042 0023     		movs	r3, #0
 645 0044 3B62     		str	r3, [r7, #32]
 646 0046 20E0     		b	.L37
 647              	.L41:
 195:modem.c       ****             CyDelay((uint32) delay);
 648              		.loc 1 195 0
 649 0048 F869     		ldr	r0, [r7, #28]
 650 004a FFF7FEFF 		bl	CyDelay
 196:modem.c       ****             // strstr(const char *haystack, const char *needle) function finds the first occurrence
 197:modem.c       ****             // Returns a pointer to the first occurrence in haystack of any of the entire sequence 
 198:modem.c       ****             compare_location=strstr(uart_received_string,expected_response);        
 651              		.loc 1 198 0
 652 004e B968     		ldr	r1, [r7, #8]
 653 0050 1948     		ldr	r0, .L43+4
 654 0052 FFF7FEFF 		bl	strstr
 655 0056 7861     		str	r0, [r7, #20]
 199:modem.c       ****             if(compare_location!=NULL) {
 656              		.loc 1 199 0
 657 0058 7B69     		ldr	r3, [r7, #20]
 658 005a 002B     		cmp	r3, #0
 659 005c 12D0     		beq	.L38
 200:modem.c       ****                 if (at_attempt == 0){
 660              		.loc 1 200 0
 661 005e 7B6A     		ldr	r3, [r7, #36]
 662 0060 002B     		cmp	r3, #0
 663 0062 06D1     		bne	.L39
 201:modem.c       ****                     // we add \n for new line to make it easier to decipher
 202:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT,"Modem Received expected AT Response on first Try:\
 664              		.loc 1 202 0
 665 0064 144B     		ldr	r3, .L43+4
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 17


 666 0066 FA68     		ldr	r2, [r7, #12]
 667 0068 1449     		ldr	r1, .L43+8
 668 006a 0020     		movs	r0, #0
 669 006c FFF7FEFF 		bl	printNotif
 670 0070 06E0     		b	.L40
 671              	.L39:
 203:modem.c       ****                 }else{
 204:modem.c       ****                     printNotif(NOTIF_TYPE_WARNING,"Modem required %d tries to receive AT Response: 
 672              		.loc 1 204 0
 673 0072 7B6A     		ldr	r3, [r7, #36]
 674 0074 5A1C     		adds	r2, r3, #1
 675 0076 104B     		ldr	r3, .L43+4
 676 0078 1149     		ldr	r1, .L43+12
 677 007a 0120     		movs	r0, #1
 678 007c FFF7FEFF 		bl	printNotif
 679              	.L40:
 205:modem.c       ****                  
 206:modem.c       ****                 }
 207:modem.c       ****                 return(1);
 680              		.loc 1 207 0
 681 0080 0123     		movs	r3, #1
 682 0082 13E0     		b	.L36
 683              	.L38:
 194:modem.c       ****             CyDelay((uint32) delay);
 684              		.loc 1 194 0 discriminator 2
 685 0084 3B6A     		ldr	r3, [r7, #32]
 686 0086 0133     		adds	r3, r3, #1
 687 0088 3B62     		str	r3, [r7, #32]
 688              	.L37:
 194:modem.c       ****             CyDelay((uint32) delay);
 689              		.loc 1 194 0 is_stmt 0 discriminator 1
 690 008a 3A6A     		ldr	r2, [r7, #32]
 691 008c BB69     		ldr	r3, [r7, #24]
 692 008e 9A42     		cmp	r2, r3
 693 0090 DAD3     		bcc	.L41
 208:modem.c       ****             }
 209:modem.c       ****             
 210:modem.c       ****         }  
 211:modem.c       ****         
 212:modem.c       ****         // Something went wrong, restart UART
 213:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not write AT command: %s\n Received: %s\n", commands,uar
 694              		.loc 1 213 0 is_stmt 1 discriminator 2
 695 0092 094B     		ldr	r3, .L43+4
 696 0094 FA68     		ldr	r2, [r7, #12]
 697 0096 0B49     		ldr	r1, .L43+16
 698 0098 0220     		movs	r0, #2
 699 009a FFF7FEFF 		bl	printNotif
 700              	.LBE4:
 174:modem.c       ****         
 701              		.loc 1 174 0 discriminator 2
 702 009e 7B6A     		ldr	r3, [r7, #36]
 703 00a0 0133     		adds	r3, r3, #1
 704 00a2 7B62     		str	r3, [r7, #36]
 705              	.L34:
 174:modem.c       ****         
 706              		.loc 1 174 0 is_stmt 0 discriminator 1
 707 00a4 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 18


 708 00a6 022B     		cmp	r3, #2
 709 00a8 B5D9     		bls	.L42
 214:modem.c       ****       
 215:modem.c       ****     }
 216:modem.c       ****    // printNotif(NOTIF_TYPE_ERROR,"Modem AT response timeout: %s\r\n", commands);
 217:modem.c       ****           
 218:modem.c       ****     return(0);    
 710              		.loc 1 218 0 is_stmt 1
 711 00aa 0023     		movs	r3, #0
 712              	.L36:
 219:modem.c       **** }
 713              		.loc 1 219 0
 714 00ac 1846     		mov	r0, r3
 715 00ae 2837     		adds	r7, r7, #40
 716              		.cfi_def_cfa_offset 8
 717 00b0 BD46     		mov	sp, r7
 718              		.cfi_def_cfa_register 13
 719              		@ sp needed
 720 00b2 80BD     		pop	{r7, pc}
 721              	.L44:
 722              		.align	2
 723              	.L43:
 724 00b4 78000000 		.word	.LC6
 725 00b8 00000000 		.word	uart_received_string
 726 00bc A4000000 		.word	.LC7
 727 00c0 F4000000 		.word	.LC8
 728 00c4 2C010000 		.word	.LC9
 729              		.cfi_endproc
 730              	.LFE72:
 731              		.size	at_write_command, .-at_write_command
 732              		.section	.rodata
 733 015a 0000     		.align	2
 734              	.LC10:
 735 015c 54455354 		.ascii	"TEST_MODEM\000"
 735      5F4D4F44 
 735      454D00
 736 0167 00       		.align	2
 737              	.LC11:
 738 0168 4E6F2072 		.ascii	"No reponse from modem.\000"
 738      65706F6E 
 738      73652066 
 738      726F6D20 
 738      6D6F6465 
 739 017f 00       		.align	2
 740              	.LC12:
 741 0180 4D6F6465 		.ascii	"Modem connected to network.\000"
 741      6D20636F 
 741      6E6E6563 
 741      74656420 
 741      746F206E 
 742              		.section	.text.modem_test,"ax",%progbits
 743              		.align	2
 744              		.global	modem_test
 745              		.thumb
 746              		.thumb_func
 747              		.type	modem_test, %function
 748              	modem_test:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 19


 749              	.LFB73:
 220:modem.c       **** 
 221:modem.c       **** // Test modem -- needs fleshed out
 222:modem.c       **** test_t modem_test(){
 750              		.loc 1 222 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 408
 753              		@ frame_needed = 1, uses_anonymous_args = 0
 754 0000 B0B5     		push	{r4, r5, r7, lr}
 755              		.cfi_def_cfa_offset 16
 756              		.cfi_offset 4, -16
 757              		.cfi_offset 5, -12
 758              		.cfi_offset 7, -8
 759              		.cfi_offset 14, -4
 760 0002 E6B0     		sub	sp, sp, #408
 761              		.cfi_def_cfa_offset 424
 762 0004 00AF     		add	r7, sp, #0
 763              		.cfi_def_cfa_register 7
 764 0006 3B1D     		adds	r3, r7, #4
 765 0008 1860     		str	r0, [r3]
 223:modem.c       ****     
 224:modem.c       ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
 225:modem.c       ****     test.status = 0;
 766              		.loc 1 225 0
 767 000a 07F10C03 		add	r3, r7, #12
 768 000e 0022     		movs	r2, #0
 769 0010 83F88020 		strb	r2, [r3, #128]
 226:modem.c       ****     // Print test name and test reason
 227:modem.c       ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_MODEM");
 770              		.loc 1 227 0
 771 0014 07F10C03 		add	r3, r7, #12
 772 0018 354A     		ldr	r2, .L53
 773 001a 07CA     		ldmia	r2, {r0, r1, r2}
 774 001c 03C3     		stmia	r3!, {r0, r1}
 775 001e 1A80     		strh	r2, [r3]	@ movhi
 776 0020 0233     		adds	r3, r3, #2
 777 0022 120C     		lsrs	r2, r2, #16
 778 0024 1A70     		strb	r2, [r3]
 228:modem.c       ****     snprintf(test.reason,sizeof(test.reason),"No reponse from modem.");
 779              		.loc 1 228 0
 780 0026 07F10C03 		add	r3, r7, #12
 781 002a 8133     		adds	r3, r3, #129
 782 002c 314A     		ldr	r2, .L53+4
 783 002e 1C46     		mov	r4, r3
 784 0030 1546     		mov	r5, r2
 785 0032 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 786 0034 2060     		str	r0, [r4]	@ unaligned
 787 0036 6160     		str	r1, [r4, #4]	@ unaligned
 788 0038 A260     		str	r2, [r4, #8]	@ unaligned
 789 003a E360     		str	r3, [r4, #12]	@ unaligned
 790 003c 2868     		ldr	r0, [r5]	@ unaligned
 791 003e 2061     		str	r0, [r4, #16]	@ unaligned
 792 0040 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 793 0042 AA79     		ldrb	r2, [r5, #6]
 794 0044 A382     		strh	r3, [r4, #20]	@ unaligned
 795 0046 1346     		mov	r3, r2
 796 0048 A375     		strb	r3, [r4, #22]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 20


 797              	.LBB5:
 229:modem.c       ****    
 230:modem.c       ****     //try the modem 60*100 (60 secs)
 231:modem.c       ****     for(int i = 0; i< 60; i++){
 798              		.loc 1 231 0
 799 004a 0023     		movs	r3, #0
 800 004c C7F89431 		str	r3, [r7, #404]
 801 0050 39E0     		b	.L46
 802              	.L51:
 232:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 233:modem.c       ****         modem_process_tasks();
 803              		.loc 1 233 0
 804 0052 FFF7FEFF 		bl	modem_process_tasks
 234:modem.c       ****          
 235:modem.c       ****         if(modem_get_state() == MODEM_STATE_OFF){
 805              		.loc 1 235 0
 806 0056 FFF7FEFF 		bl	modem_get_state
 807 005a 0346     		mov	r3, r0
 808 005c 002B     		cmp	r3, #0
 809 005e 02D1     		bne	.L47
 236:modem.c       ****             // This puts all the modem points into a state that won't leak power
 237:modem.c       ****             modem_power_up();
 810              		.loc 1 237 0
 811 0060 FFF7FEFF 		bl	modem_power_up
 812 0064 27E0     		b	.L48
 813              	.L47:
 238:modem.c       ****             // Should put this on a max_try counter, so we don't just keep trying to connect over a
 239:modem.c       ****             
 240:modem.c       ****         }else if(modem_get_state() == MODEM_STATE_READY){
 814              		.loc 1 240 0
 815 0066 FFF7FEFF 		bl	modem_get_state
 816 006a 0346     		mov	r3, r0
 817 006c 042B     		cmp	r3, #4
 818 006e 22D1     		bne	.L48
 819              	.LBB6:
 241:modem.c       ****         
 242:modem.c       ****         
 243:modem.c       ****         // Get time, and if it looks good, set the RTC with it
 244:modem.c       ****         long network_time = modem_get_network_time();
 820              		.loc 1 244 0
 821 0070 FFF7FEFF 		bl	modem_get_network_time
 822 0074 C7F89001 		str	r0, [r7, #400]
 245:modem.c       ****         if(network_time != 0){
 823              		.loc 1 245 0
 824 0078 D7F89031 		ldr	r3, [r7, #400]
 825 007c 002B     		cmp	r3, #0
 826 007e 03D0     		beq	.L49
 246:modem.c       ****             setTime(network_time); // Set the system time 
 827              		.loc 1 246 0
 828 0080 D7F89001 		ldr	r0, [r7, #400]
 829 0084 FFF7FEFF 		bl	setTime
 830              	.L49:
 247:modem.c       ****         }
 248:modem.c       ****             
 249:modem.c       ****         snprintf(test.reason,sizeof(test.reason),"Modem connected to network.");
 831              		.loc 1 249 0
 832 0088 07F10C03 		add	r3, r7, #12
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 21


 833 008c 8133     		adds	r3, r3, #129
 834 008e 1A4A     		ldr	r2, .L53+8
 835 0090 1D46     		mov	r5, r3
 836 0092 1446     		mov	r4, r2
 837 0094 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 838 0096 2860     		str	r0, [r5]	@ unaligned
 839 0098 6960     		str	r1, [r5, #4]	@ unaligned
 840 009a AA60     		str	r2, [r5, #8]	@ unaligned
 841 009c EB60     		str	r3, [r5, #12]	@ unaligned
 842 009e 07CC     		ldmia	r4!, {r0, r1, r2}
 843 00a0 2861     		str	r0, [r5, #16]	@ unaligned
 844 00a2 6961     		str	r1, [r5, #20]	@ unaligned
 845 00a4 AA61     		str	r2, [r5, #24]	@ unaligned
 250:modem.c       ****         test.status = 1;
 846              		.loc 1 250 0
 847 00a6 07F10C03 		add	r3, r7, #12
 848 00aa 0122     		movs	r2, #1
 849 00ac 83F88020 		strb	r2, [r3, #128]
 251:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 252:modem.c       ****         modem_power_down();
 850              		.loc 1 252 0
 851 00b0 FFF7FEFF 		bl	modem_power_down
 253:modem.c       ****         break;
 852              		.loc 1 253 0
 853 00b4 0BE0     		b	.L50
 854              	.L48:
 855              	.LBE6:
 254:modem.c       ****         
 255:modem.c       ****       }
 256:modem.c       ****         CyDelay(100u);
 856              		.loc 1 256 0 discriminator 2
 857 00b6 6420     		movs	r0, #100
 858 00b8 FFF7FEFF 		bl	CyDelay
 231:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 859              		.loc 1 231 0 discriminator 2
 860 00bc D7F89431 		ldr	r3, [r7, #404]
 861 00c0 0133     		adds	r3, r3, #1
 862 00c2 C7F89431 		str	r3, [r7, #404]
 863              	.L46:
 231:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 864              		.loc 1 231 0 is_stmt 0 discriminator 1
 865 00c6 D7F89431 		ldr	r3, [r7, #404]
 866 00ca 3B2B     		cmp	r3, #59
 867 00cc C1DD     		ble	.L51
 868              	.L50:
 869              	.LBE5:
 257:modem.c       ****         
 258:modem.c       ****     }
 259:modem.c       ****     
 260:modem.c       ****     return test;
 870              		.loc 1 260 0 is_stmt 1
 871 00ce 3B1D     		adds	r3, r7, #4
 872 00d0 1A68     		ldr	r2, [r3]
 873 00d2 07F10C03 		add	r3, r7, #12
 874 00d6 1046     		mov	r0, r2
 875 00d8 1946     		mov	r1, r3
 876 00da 40F28113 		movw	r3, #385
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 22


 877 00de 1A46     		mov	r2, r3
 878 00e0 FFF7FEFF 		bl	memcpy
 261:modem.c       **** }
 879              		.loc 1 261 0
 880 00e4 3B1D     		adds	r3, r7, #4
 881 00e6 1868     		ldr	r0, [r3]
 882 00e8 07F5CC77 		add	r7, r7, #408
 883              		.cfi_def_cfa_offset 16
 884 00ec BD46     		mov	sp, r7
 885              		.cfi_def_cfa_register 13
 886              		@ sp needed
 887 00ee B0BD     		pop	{r4, r5, r7, pc}
 888              	.L54:
 889              		.align	2
 890              	.L53:
 891 00f0 5C010000 		.word	.LC10
 892 00f4 68010000 		.word	.LC11
 893 00f8 80010000 		.word	.LC12
 894              		.cfi_endproc
 895              	.LFE73:
 896              		.size	modem_test, .-modem_test
 897              		.section	.text.extract_string,"ax",%progbits
 898              		.align	2
 899              		.global	extract_string
 900              		.thumb
 901              		.thumb_func
 902              		.type	extract_string, %function
 903              	extract_string:
 904              	.LFB74:
 262:modem.c       **** 
 263:modem.c       **** // Extract string from the UART
 264:modem.c       **** uint8 extract_string(char* from, const char* beginMarker, const char* endMarker,  char* target){
 905              		.loc 1 264 0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 24
 908              		@ frame_needed = 1, uses_anonymous_args = 0
 909 0000 80B5     		push	{r7, lr}
 910              		.cfi_def_cfa_offset 8
 911              		.cfi_offset 7, -8
 912              		.cfi_offset 14, -4
 913 0002 86B0     		sub	sp, sp, #24
 914              		.cfi_def_cfa_offset 32
 915 0004 00AF     		add	r7, sp, #0
 916              		.cfi_def_cfa_register 7
 917 0006 F860     		str	r0, [r7, #12]
 918 0008 B960     		str	r1, [r7, #8]
 919 000a 7A60     		str	r2, [r7, #4]
 920 000c 3B60     		str	r3, [r7]
 265:modem.c       ****     
 266:modem.c       ****         char *a, *b;
 267:modem.c       ****   
 268:modem.c       ****         // Expect the UART to contain something like "+CESQ: ##,##,##,##,##,##\r\n\r\nOK"
 269:modem.c       ****         // - Search for "+CESQ: ".  Place the starting pointer, a, at the resulting index
 270:modem.c       ****         a = strstr(from,beginMarker);
 921              		.loc 1 270 0
 922 000e B968     		ldr	r1, [r7, #8]
 923 0010 F868     		ldr	r0, [r7, #12]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 23


 924 0012 FFF7FEFF 		bl	strstr
 925 0016 7861     		str	r0, [r7, #20]
 271:modem.c       ****         if (a == NULL) {
 926              		.loc 1 271 0
 927 0018 7B69     		ldr	r3, [r7, #20]
 928 001a 002B     		cmp	r3, #0
 929 001c 01D1     		bne	.L56
 272:modem.c       ****             //puts("+CESQ: not found in uart_received_string");
 273:modem.c       ****             a = from;
 930              		.loc 1 273 0
 931 001e FB68     		ldr	r3, [r7, #12]
 932 0020 7B61     		str	r3, [r7, #20]
 933              	.L56:
 274:modem.c       ****         }
 275:modem.c       ****         // The strlen() function calculates the length of a given string.
 276:modem.c       ****         a += strlen(beginMarker);
 934              		.loc 1 276 0
 935 0022 B868     		ldr	r0, [r7, #8]
 936 0024 FFF7FEFF 		bl	strlen
 937 0028 0246     		mov	r2, r0
 938 002a 7B69     		ldr	r3, [r7, #20]
 939 002c 1344     		add	r3, r3, r2
 940 002e 7B61     		str	r3, [r7, #20]
 277:modem.c       ****         
 278:modem.c       ****         // - Find the end marking and offset by 1
 279:modem.c       ****         // strstr(const char *haystack, const char *needle) function finds the first occurrence of 
 280:modem.c       ****         // Returns a pointer to the first occurrence in haystack of any of the entire sequence of c
 281:modem.c       ****         b = strstr(a,endMarker);
 941              		.loc 1 281 0
 942 0030 7968     		ldr	r1, [r7, #4]
 943 0032 7869     		ldr	r0, [r7, #20]
 944 0034 FFF7FEFF 		bl	strstr
 945 0038 3861     		str	r0, [r7, #16]
 282:modem.c       ****         if (b == NULL) {
 946              		.loc 1 282 0
 947 003a 3B69     		ldr	r3, [r7, #16]
 948 003c 002B     		cmp	r3, #0
 949 003e 06D1     		bne	.L57
 283:modem.c       ****             // Puts("Comma not found in uart_received_string");
 284:modem.c       ****             b=from+strlen(from);
 950              		.loc 1 284 0
 951 0040 F868     		ldr	r0, [r7, #12]
 952 0042 FFF7FEFF 		bl	strlen
 953 0046 0246     		mov	r2, r0
 954 0048 FB68     		ldr	r3, [r7, #12]
 955 004a 1344     		add	r3, r3, r2
 956 004c 3B61     		str	r3, [r7, #16]
 957              	.L57:
 285:modem.c       ****         }        
 286:modem.c       ****         
 287:modem.c       ****         // Parse the strings and store the respective rssi and fer values
 288:modem.c       ****         strncpy(target,a,b-a);
 958              		.loc 1 288 0
 959 004e 3A69     		ldr	r2, [r7, #16]
 960 0050 7B69     		ldr	r3, [r7, #20]
 961 0052 D31A     		subs	r3, r2, r3
 962 0054 1A46     		mov	r2, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 24


 963 0056 7969     		ldr	r1, [r7, #20]
 964 0058 3868     		ldr	r0, [r7]
 965 005a FFF7FEFF 		bl	strncpy
 289:modem.c       ****         target[b-a] = '\0';
 966              		.loc 1 289 0
 967 005e 3A69     		ldr	r2, [r7, #16]
 968 0060 7B69     		ldr	r3, [r7, #20]
 969 0062 D31A     		subs	r3, r2, r3
 970 0064 1A46     		mov	r2, r3
 971 0066 3B68     		ldr	r3, [r7]
 972 0068 1344     		add	r3, r3, r2
 973 006a 0022     		movs	r2, #0
 974 006c 1A70     		strb	r2, [r3]
 290:modem.c       ****         return 1u;
 975              		.loc 1 290 0
 976 006e 0123     		movs	r3, #1
 291:modem.c       ****         
 292:modem.c       **** }
 977              		.loc 1 292 0
 978 0070 1846     		mov	r0, r3
 979 0072 1837     		adds	r7, r7, #24
 980              		.cfi_def_cfa_offset 8
 981 0074 BD46     		mov	sp, r7
 982              		.cfi_def_cfa_register 13
 983              		@ sp needed
 984 0076 80BD     		pop	{r7, pc}
 985              		.cfi_endproc
 986              	.LFE74:
 987              		.size	extract_string, .-extract_string
 988              		.section	.rodata
 989              		.align	2
 990              	.LC13:
 991 019c 54696D65 		.ascii	"Time to connecto to network: %d seconds\000"
 991      20746F20 
 991      636F6E6E 
 991      6563746F 
 991      20746F20 
 992              		.align	2
 993              	.LC14:
 994 01c4 4D6F6465 		.ascii	"Modem timed out on network connect\000"
 994      6D207469 
 994      6D656420 
 994      6F757420 
 994      6F6E206E 
 995 01e7 00       		.align	2
 996              	.LC15:
 997 01e8 41637175 		.ascii	"Acquired IP address: %d seconds\000"
 997      69726564 
 997      20495020 
 997      61646472 
 997      6573733A 
 998              		.align	2
 999              	.LC16:
 1000 0208 4D6F6465 		.ascii	"Modem timed out on IP address acquire.\000"
 1000      6D207469 
 1000      6D656420 
 1000      6F757420 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 25


 1000      6F6E2049 
 1001              		.section	.text.modem_process_tasks,"ax",%progbits
 1002              		.align	2
 1003              		.global	modem_process_tasks
 1004              		.thumb
 1005              		.thumb_func
 1006              		.type	modem_process_tasks, %function
 1007              	modem_process_tasks:
 1008              	.LFB75:
 293:modem.c       **** 
 294:modem.c       **** // Function to startup the modem, connect to the network, and then hand it off to sleep
 295:modem.c       **** uint8 modem_process_tasks(){
 1009              		.loc 1 295 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 8
 1012              		@ frame_needed = 1, uses_anonymous_args = 0
 1013 0000 80B5     		push	{r7, lr}
 1014              		.cfi_def_cfa_offset 8
 1015              		.cfi_offset 7, -8
 1016              		.cfi_offset 14, -4
 1017 0002 82B0     		sub	sp, sp, #8
 1018              		.cfi_def_cfa_offset 16
 1019 0004 00AF     		add	r7, sp, #0
 1020              		.cfi_def_cfa_register 7
 296:modem.c       ****     // If modem state is "startup" then get the modem start time, configure modem settings, and cha
 297:modem.c       ****     if(modem_state == MODEM_STATE_STARTUP){
 1021              		.loc 1 297 0
 1022 0006 454B     		ldr	r3, .L73
 1023 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1024 000a 012B     		cmp	r3, #1
 1025 000c 0BD1     		bne	.L60
 298:modem.c       ****         
 299:modem.c       ****         modem_start_time_stamp = getTimeStamp(); // Get timestamp for modem start time
 1026              		.loc 1 299 0
 1027 000e FFF7FEFF 		bl	getTimeStamp
 1028 0012 0246     		mov	r2, r0
 1029 0014 424B     		ldr	r3, .L73+4
 1030 0016 1A60     		str	r2, [r3]
 300:modem.c       ****         modem_configure_settings(); // Configure modem settings
 1031              		.loc 1 300 0
 1032 0018 FFF7FEFF 		bl	modem_configure_settings
 301:modem.c       ****         modem_state = MODEM_STATE_WAITING_FOR_NETWORK; // Change modem state 
 1033              		.loc 1 301 0
 1034 001c 3F4B     		ldr	r3, .L73
 1035 001e 0222     		movs	r2, #2
 1036 0020 1A70     		strb	r2, [r3]
 302:modem.c       ****         return 1u; // Keep going, don't hand off to sleep yet
 1037              		.loc 1 302 0
 1038 0022 0123     		movs	r3, #1
 1039 0024 75E0     		b	.L61
 1040              	.L60:
 303:modem.c       ****         
 304:modem.c       ****     }
 305:modem.c       ****     // Else if modem state is "waiting for network" 
 306:modem.c       ****     else if(modem_state == MODEM_STATE_WAITING_FOR_NETWORK){
 1041              		.loc 1 306 0
 1042 0026 3D4B     		ldr	r3, .L73
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 26


 1043 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1044 002a 022B     		cmp	r3, #2
 1045 002c 42D1     		bne	.L62
 1046              	.LBB7:
 307:modem.c       ****         // Check if modem has a good cell signal each second for up to a minute
 308:modem.c       ****        for(uint8 i=0;i<60;i++){
 1047              		.loc 1 308 0
 1048 002e 0023     		movs	r3, #0
 1049 0030 FB71     		strb	r3, [r7, #7]
 1050 0032 0CE0     		b	.L63
 1051              	.L66:
 309:modem.c       ****             // Get cell network stats
 310:modem.c       ****             get_cell_network_stats();
 1052              		.loc 1 310 0
 1053 0034 FFF7FEFF 		bl	get_cell_network_stats
 311:modem.c       ****             // If cell signal (rsrp) is strong enough, break and connect to the network
 312:modem.c       ****             // Otherwise, keep checking rsrp
 313:modem.c       ****             if(modem_stats.rsrp > 26){
 1054              		.loc 1 313 0
 1055 0038 3A4B     		ldr	r3, .L73+8
 1056 003a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1057 003c 1A2B     		cmp	r3, #26
 1058 003e 0AD8     		bhi	.L72
 314:modem.c       ****                 break;
 315:modem.c       ****             }
 316:modem.c       ****             // Delay for 1 second
 317:modem.c       ****             CyDelay(1000u);
 1059              		.loc 1 317 0 discriminator 2
 1060 0040 4FF47A70 		mov	r0, #1000
 1061 0044 FFF7FEFF 		bl	CyDelay
 308:modem.c       ****             // Get cell network stats
 1062              		.loc 1 308 0 discriminator 2
 1063 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1064 004a 0133     		adds	r3, r3, #1
 1065 004c FB71     		strb	r3, [r7, #7]
 1066              	.L63:
 308:modem.c       ****             // Get cell network stats
 1067              		.loc 1 308 0 is_stmt 0 discriminator 1
 1068 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1069 0050 3B2B     		cmp	r3, #59
 1070 0052 EFD9     		bls	.L66
 1071 0054 00E0     		b	.L65
 1072              	.L72:
 314:modem.c       ****                 break;
 1073              		.loc 1 314 0 is_stmt 1
 1074 0056 00BF     		nop
 1075              	.L65:
 1076              	.LBE7:
 318:modem.c       ****         }
 319:modem.c       ****         
 320:modem.c       ****         // If modem connected to the cell network, save/print the time to connect to the network
 321:modem.c       ****         if(is_connected_to_cell_network()){
 1077              		.loc 1 321 0
 1078 0058 FFF7FEFF 		bl	is_connected_to_cell_network
 1079 005c 0346     		mov	r3, r0
 1080 005e 002B     		cmp	r3, #0
 1081 0060 15D0     		beq	.L67
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 27


 322:modem.c       ****       
 323:modem.c       ****              modem_stats.time_to_network_connect = (int)(getTimeStamp() - (int32)modem_start_time_s
 1082              		.loc 1 323 0
 1083 0062 FFF7FEFF 		bl	getTimeStamp
 1084 0066 0246     		mov	r2, r0
 1085 0068 2D4B     		ldr	r3, .L73+4
 1086 006a 1B68     		ldr	r3, [r3]
 1087 006c D31A     		subs	r3, r2, r3
 1088 006e 2D4A     		ldr	r2, .L73+8
 1089 0070 9360     		str	r3, [r2, #8]
 324:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Time to connecto to network: %d seconds",
 1090              		.loc 1 324 0
 1091 0072 2C4B     		ldr	r3, .L73+8
 1092 0074 9B68     		ldr	r3, [r3, #8]
 1093 0076 1A46     		mov	r2, r3
 1094 0078 2B49     		ldr	r1, .L73+12
 1095 007a 0020     		movs	r0, #0
 1096 007c FFF7FEFF 		bl	printNotif
 325:modem.c       ****                                             modem_stats.time_to_network_connect);
 326:modem.c       ****             get_cell_network_stats(); // Get cell network stats
 1097              		.loc 1 326 0
 1098 0080 FFF7FEFF 		bl	get_cell_network_stats
 327:modem.c       ****             set_up_internet_connection(); // Setup the internet connection
 1099              		.loc 1 327 0
 1100 0084 FFF7FEFF 		bl	set_up_internet_connection
 328:modem.c       ****             modem_state = MODEM_STATE_WAITING_FOR_IP; // Change modem state 
 1101              		.loc 1 328 0
 1102 0088 244B     		ldr	r3, .L73
 1103 008a 0322     		movs	r2, #3
 1104 008c 1A70     		strb	r2, [r3]
 1105              	.L67:
 329:modem.c       ****         }
 330:modem.c       **** 
 331:modem.c       ****         //power off if we times out shold only take ~30 secs to connect to network
 332:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_NETWORK_CONNECT){
 1106              		.loc 1 332 0
 1107 008e FFF7FEFF 		bl	getTimeStamp
 1108 0092 0246     		mov	r2, r0
 1109 0094 224B     		ldr	r3, .L73+4
 1110 0096 1B68     		ldr	r3, [r3]
 1111 0098 D31A     		subs	r3, r2, r3
 1112 009a C82B     		cmp	r3, #200
 1113 009c 08DD     		ble	.L68
 333:modem.c       ****             modem_state = MODEM_STATE_OFF; // Change modem state
 1114              		.loc 1 333 0
 1115 009e 1F4B     		ldr	r3, .L73
 1116 00a0 0022     		movs	r2, #0
 1117 00a2 1A70     		strb	r2, [r3]
 334:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1118              		.loc 1 334 0
 1119 00a4 FFF7FEFF 		bl	modem_power_down
 335:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on network connect");
 1120              		.loc 1 335 0
 1121 00a8 2049     		ldr	r1, .L73+16
 1122 00aa 0220     		movs	r0, #2
 1123 00ac FFF7FEFF 		bl	printNotif
 1124              	.L68:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 28


 336:modem.c       ****             
 337:modem.c       ****         }
 338:modem.c       ****         
 339:modem.c       ****         return 0u;//ok to hand off to sleep
 1125              		.loc 1 339 0
 1126 00b0 0023     		movs	r3, #0
 1127 00b2 2EE0     		b	.L61
 1128              	.L62:
 340:modem.c       ****         
 341:modem.c       ****     // Else if modem state is "waiting for IP"
 342:modem.c       ****     }else if(modem_state == MODEM_STATE_WAITING_FOR_IP){
 1129              		.loc 1 342 0
 1130 00b4 194B     		ldr	r3, .L73
 1131 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1132 00b8 032B     		cmp	r3, #3
 1133 00ba 29D1     		bne	.L69
 343:modem.c       ****         // If the modem is connected to the internet, change modem state to "ready", save/print tim
 344:modem.c       ****         if(is_connected_to_internet()){
 1134              		.loc 1 344 0
 1135 00bc FFF7FEFF 		bl	is_connected_to_internet
 1136 00c0 0346     		mov	r3, r0
 1137 00c2 002B     		cmp	r3, #0
 1138 00c4 11D0     		beq	.L70
 345:modem.c       ****             modem_state = MODEM_STATE_READY; // Change modem state
 1139              		.loc 1 345 0
 1140 00c6 154B     		ldr	r3, .L73
 1141 00c8 0422     		movs	r2, #4
 1142 00ca 1A70     		strb	r2, [r3]
 346:modem.c       ****             // Save/print time to acquire IP address
 347:modem.c       ****             modem_stats.time_to_acquire_ip = (int)(getTimeStamp() - (int32)modem_start_time_stamp);
 1143              		.loc 1 347 0
 1144 00cc FFF7FEFF 		bl	getTimeStamp
 1145 00d0 0246     		mov	r2, r0
 1146 00d2 134B     		ldr	r3, .L73+4
 1147 00d4 1B68     		ldr	r3, [r3]
 1148 00d6 D31A     		subs	r3, r2, r3
 1149 00d8 124A     		ldr	r2, .L73+8
 1150 00da D360     		str	r3, [r2, #12]
 348:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Acquired IP address: %d seconds",
 1151              		.loc 1 348 0
 1152 00dc 114B     		ldr	r3, .L73+8
 1153 00de DB68     		ldr	r3, [r3, #12]
 1154 00e0 1A46     		mov	r2, r3
 1155 00e2 1349     		ldr	r1, .L73+20
 1156 00e4 0020     		movs	r0, #0
 1157 00e6 FFF7FEFF 		bl	printNotif
 1158              	.L70:
 349:modem.c       ****                                             modem_stats.time_to_acquire_ip);
 350:modem.c       ****         }
 351:modem.c       ****         
 352:modem.c       ****         // Power off if we times out shold only take ~30 secs to connect to network
 353:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_IP_ACQUIRE){
 1159              		.loc 1 353 0
 1160 00ea FFF7FEFF 		bl	getTimeStamp
 1161 00ee 0246     		mov	r2, r0
 1162 00f0 0B4B     		ldr	r3, .L73+4
 1163 00f2 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 29


 1164 00f4 D31A     		subs	r3, r2, r3
 1165 00f6 E62B     		cmp	r3, #230
 1166 00f8 08DD     		ble	.L71
 354:modem.c       ****             modem_state = MODEM_STATE_OFF;
 1167              		.loc 1 354 0
 1168 00fa 084B     		ldr	r3, .L73
 1169 00fc 0022     		movs	r2, #0
 1170 00fe 1A70     		strb	r2, [r3]
 355:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1171              		.loc 1 355 0
 1172 0100 FFF7FEFF 		bl	modem_power_down
 356:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on IP address acquire.");
 1173              		.loc 1 356 0
 1174 0104 0B49     		ldr	r1, .L73+24
 1175 0106 0220     		movs	r0, #2
 1176 0108 FFF7FEFF 		bl	printNotif
 1177              	.L71:
 357:modem.c       ****       
 358:modem.c       ****         }
 359:modem.c       ****         return 0u;//ok to hand off to sleep
 1178              		.loc 1 359 0
 1179 010c 0023     		movs	r3, #0
 1180 010e 00E0     		b	.L61
 1181              	.L69:
 360:modem.c       ****     }
 361:modem.c       ****     
 362:modem.c       ****     return 0u;
 1182              		.loc 1 362 0
 1183 0110 0023     		movs	r3, #0
 1184              	.L61:
 363:modem.c       ****     
 364:modem.c       **** }
 1185              		.loc 1 364 0
 1186 0112 1846     		mov	r0, r3
 1187 0114 0837     		adds	r7, r7, #8
 1188              		.cfi_def_cfa_offset 8
 1189 0116 BD46     		mov	sp, r7
 1190              		.cfi_def_cfa_register 13
 1191              		@ sp needed
 1192 0118 80BD     		pop	{r7, pc}
 1193              	.L74:
 1194 011a 00BF     		.align	2
 1195              	.L73:
 1196 011c 00000000 		.word	modem_state
 1197 0120 00000000 		.word	modem_start_time_stamp
 1198 0124 00000000 		.word	modem_stats
 1199 0128 9C010000 		.word	.LC13
 1200 012c C4010000 		.word	.LC14
 1201 0130 E8010000 		.word	.LC15
 1202 0134 08020000 		.word	.LC16
 1203              		.cfi_endproc
 1204              	.LFE75:
 1205              		.size	modem_process_tasks, .-modem_process_tasks
 1206              		.section	.rodata
 1207 022f 00       		.align	2
 1208              	.LC17:
 1209 0230 43686563 		.ascii	"Checking AT+CREG?\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 30


 1209      6B696E67 
 1209      2041542B 
 1209      43524547 
 1209      3F00
 1210 0242 0000     		.align	2
 1211              	.LC18:
 1212 0244 41542B43 		.ascii	"AT+CREG?\015\000"
 1212      5245473F 
 1212      0D00
 1213 024e 0000     		.align	2
 1214              	.LC19:
 1215 0250 45787472 		.ascii	"Extracting string AT+CREG?\000"
 1215      61637469 
 1215      6E672073 
 1215      7472696E 
 1215      67204154 
 1216 026b 00       		.align	2
 1217              	.LC20:
 1218 026c 75617274 		.ascii	"uart_received_string: %s\000"
 1218      5F726563 
 1218      65697665 
 1218      645F7374 
 1218      72696E67 
 1219 0285 000000   		.align	2
 1220              	.LC21:
 1221 0288 0D00     		.ascii	"\015\000"
 1222 028a 0000     		.align	2
 1223              	.LC22:
 1224 028c 3A2000   		.ascii	": \000"
 1225 028f 00       		.align	2
 1226              	.LC23:
 1227 0290 52656769 		.ascii	"Registered to network, CREG: %s\000"
 1227      73746572 
 1227      65642074 
 1227      6F206E65 
 1227      74776F72 
 1228              		.align	2
 1229              	.LC24:
 1230 02b0 446F6E65 		.ascii	"Done extracing string AT+CREG?\000"
 1230      20657874 
 1230      72616369 
 1230      6E672073 
 1230      7472696E 
 1231 02cf 00       		.align	2
 1232              	.LC25:
 1233 02d0 302C3100 		.ascii	"0,1\000"
 1234              		.align	2
 1235              	.LC26:
 1236 02d4 302C3500 		.ascii	"0,5\000"
 1237              		.section	.text.is_connected_to_cell_network,"ax",%progbits
 1238              		.align	2
 1239              		.global	is_connected_to_cell_network
 1240              		.thumb
 1241              		.thumb_func
 1242              		.type	is_connected_to_cell_network, %function
 1243              	is_connected_to_cell_network:
 1244              	.LFB76:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 31


 365:modem.c       **** 
 366:modem.c       **** // Checks network status, writes commands to the modem, then extracts string from UART
 367:modem.c       **** uint8 is_connected_to_cell_network(){
 1245              		.loc 1 367 0
 1246              		.cfi_startproc
 1247              		@ args = 0, pretend = 0, frame = 16
 1248              		@ frame_needed = 1, uses_anonymous_args = 0
 1249 0000 80B5     		push	{r7, lr}
 1250              		.cfi_def_cfa_offset 8
 1251              		.cfi_offset 7, -8
 1252              		.cfi_offset 14, -4
 1253 0002 84B0     		sub	sp, sp, #16
 1254              		.cfi_def_cfa_offset 24
 1255 0004 00AF     		add	r7, sp, #0
 1256              		.cfi_def_cfa_register 7
 368:modem.c       ****     // AT command AT+CREG? is the Network Registration Report to check network status -- need '0,0'
 369:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Checking AT+CREG?");
 1257              		.loc 1 369 0
 1258 0006 1F49     		ldr	r1, .L80
 1259 0008 0020     		movs	r0, #0
 1260 000a FFF7FEFF 		bl	printNotif
 370:modem.c       ****     // create new uint8 variable stust and set to equal the output of the function at_write_command
 371:modem.c       ****     uint8 status = at_write_command("AT+CREG?\r", "OK",DEFAULT_AT_TIMEOUT);
 1261              		.loc 1 371 0
 1262 000e 4FF4FA62 		mov	r2, #2000
 1263 0012 1D49     		ldr	r1, .L80+4
 1264 0014 1D48     		ldr	r0, .L80+8
 1265 0016 FFF7FEFF 		bl	at_write_command
 1266 001a 0346     		mov	r3, r0
 1267 001c FB73     		strb	r3, [r7, #15]
 372:modem.c       ****     
 373:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Extracting string AT+CREG?");
 1268              		.loc 1 373 0
 1269 001e 1C49     		ldr	r1, .L80+12
 1270 0020 0020     		movs	r0, #0
 1271 0022 FFF7FEFF 		bl	printNotif
 374:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"uart_received_string: %s",uart_received_string);
 1272              		.loc 1 374 0
 1273 0026 1B4A     		ldr	r2, .L80+16
 1274 0028 1B49     		ldr	r1, .L80+20
 1275 002a 0020     		movs	r0, #0
 1276 002c FFF7FEFF 		bl	printNotif
 375:modem.c       ****     
 376:modem.c       ****     // If the modem has a status
 377:modem.c       ****     if(status){
 1277              		.loc 1 377 0
 1278 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1279 0032 002B     		cmp	r3, #0
 1280 0034 21D0     		beq	.L76
 1281              	.LBB8:
 378:modem.c       ****         // Create a character array of length 10 called creg
 379:modem.c       ****         char creg[10];
 380:modem.c       ****         // Extract string from the UART
 381:modem.c       ****         extract_string(uart_received_string,": ","\r",creg);
 1282              		.loc 1 381 0
 1283 0036 3B1D     		adds	r3, r7, #4
 1284 0038 184A     		ldr	r2, .L80+24
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 32


 1285 003a 1949     		ldr	r1, .L80+28
 1286 003c 1548     		ldr	r0, .L80+16
 1287 003e FFF7FEFF 		bl	extract_string
 382:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Registered to network, CREG: %s",creg);
 1288              		.loc 1 382 0
 1289 0042 3B1D     		adds	r3, r7, #4
 1290 0044 1A46     		mov	r2, r3
 1291 0046 1749     		ldr	r1, .L80+32
 1292 0048 0020     		movs	r0, #0
 1293 004a FFF7FEFF 		bl	printNotif
 383:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Done extracing string AT+CREG?");
 1294              		.loc 1 383 0
 1295 004e 1649     		ldr	r1, .L80+36
 1296 0050 0020     		movs	r0, #0
 1297 0052 FFF7FEFF 		bl	printNotif
 384:modem.c       ****     
 385:modem.c       ****         // Search creg for "0,1" or "0,5", if either exists and either is not equal to NULL, return
 386:modem.c       ****         if((strstr(creg,"0,1")!=NULL)||(strstr(creg,"0,5")!=NULL)){
 1298              		.loc 1 386 0
 1299 0056 3B1D     		adds	r3, r7, #4
 1300 0058 1449     		ldr	r1, .L80+40
 1301 005a 1846     		mov	r0, r3
 1302 005c FFF7FEFF 		bl	strstr
 1303 0060 0346     		mov	r3, r0
 1304 0062 002B     		cmp	r3, #0
 1305 0064 07D1     		bne	.L77
 1306              		.loc 1 386 0 is_stmt 0 discriminator 1
 1307 0066 3B1D     		adds	r3, r7, #4
 1308 0068 1149     		ldr	r1, .L80+44
 1309 006a 1846     		mov	r0, r3
 1310 006c FFF7FEFF 		bl	strstr
 1311 0070 0346     		mov	r3, r0
 1312 0072 002B     		cmp	r3, #0
 1313 0074 01D0     		beq	.L76
 1314              	.L77:
 387:modem.c       ****             //time_network_connect = getTimeStamp();
 388:modem.c       ****             return 1u;
 1315              		.loc 1 388 0 is_stmt 1
 1316 0076 0123     		movs	r3, #1
 1317 0078 00E0     		b	.L79
 1318              	.L76:
 1319              	.LBE8:
 389:modem.c       ****         }
 390:modem.c       ****     }
 391:modem.c       ****     // If the modem doesn't have a status, return 0u
 392:modem.c       ****     return 0u;
 1320              		.loc 1 392 0
 1321 007a 0023     		movs	r3, #0
 1322              	.L79:
 393:modem.c       ****         
 394:modem.c       **** }
 1323              		.loc 1 394 0
 1324 007c 1846     		mov	r0, r3
 1325 007e 1037     		adds	r7, r7, #16
 1326              		.cfi_def_cfa_offset 8
 1327 0080 BD46     		mov	sp, r7
 1328              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 33


 1329              		@ sp needed
 1330 0082 80BD     		pop	{r7, pc}
 1331              	.L81:
 1332              		.align	2
 1333              	.L80:
 1334 0084 30020000 		.word	.LC17
 1335 0088 00000000 		.word	.LC0
 1336 008c 44020000 		.word	.LC18
 1337 0090 50020000 		.word	.LC19
 1338 0094 00000000 		.word	uart_received_string
 1339 0098 6C020000 		.word	.LC20
 1340 009c 88020000 		.word	.LC21
 1341 00a0 8C020000 		.word	.LC22
 1342 00a4 90020000 		.word	.LC23
 1343 00a8 B0020000 		.word	.LC24
 1344 00ac D0020000 		.word	.LC25
 1345 00b0 D4020000 		.word	.LC26
 1346              		.cfi_endproc
 1347              	.LFE76:
 1348              		.size	is_connected_to_cell_network, .-is_connected_to_cell_network
 1349              		.section	.rodata
 1350              		.align	2
 1351              	.LC27:
 1352 02d8 41542353 		.ascii	"AT#SGACT=1,1\015\012\000"
 1352      47414354 
 1352      3D312C31 
 1352      0D0A00
 1353              		.section	.text.set_up_internet_connection,"ax",%progbits
 1354              		.align	2
 1355              		.global	set_up_internet_connection
 1356              		.thumb
 1357              		.thumb_func
 1358              		.type	set_up_internet_connection, %function
 1359              	set_up_internet_connection:
 1360              	.LFB77:
 395:modem.c       **** 
 396:modem.c       **** // Connect the modem to the internet
 397:modem.c       **** void set_up_internet_connection(){
 1361              		.loc 1 397 0
 1362              		.cfi_startproc
 1363              		@ args = 0, pretend = 0, frame = 0
 1364              		@ frame_needed = 1, uses_anonymous_args = 0
 1365 0000 80B5     		push	{r7, lr}
 1366              		.cfi_def_cfa_offset 8
 1367              		.cfi_offset 7, -8
 1368              		.cfi_offset 14, -4
 1369 0002 00AF     		add	r7, sp, #0
 1370              		.cfi_def_cfa_register 7
 398:modem.c       ****     
 399:modem.c       ****     //port 3
 400:modem.c       ****    //<connId>,<srMode>,<dataMode>, 
 401:modem.c       ****     //at_write_command("AT#SCFGEXT=1,1,0,0,0,0\r", "OK",DEFAULT_AT_TIMEOUT);////LTE modem relevant
 402:modem.c       ****     
 403:modem.c       ****     //<connId>,<cid>,<pktSz>,<maxTo>,<connTo>,<txTo>
 404:modem.c       ****     //at_write_command("AT#SCFG=1,3,300,90,600,50\r", "OK",DEFAULT_AT_TIMEOUT); //LTE modem relevan
 405:modem.c       ****     // <cid>,<stat>
 406:modem.c       ****    
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 34


 407:modem.c       ****     // AT command SGACT is Context Activation command is used to activate the specified PDP context
 408:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",1000u);
 1371              		.loc 1 408 0
 1372 0004 4FF47A72 		mov	r2, #1000
 1373 0008 0249     		ldr	r1, .L83
 1374 000a 0348     		ldr	r0, .L83+4
 1375 000c FFF7FEFF 		bl	at_write_command
 409:modem.c       ****     
 410:modem.c       **** }
 1376              		.loc 1 410 0
 1377 0010 00BF     		nop
 1378 0012 80BD     		pop	{r7, pc}
 1379              	.L84:
 1380              		.align	2
 1381              	.L83:
 1382 0014 00000000 		.word	.LC0
 1383 0018 D8020000 		.word	.LC27
 1384              		.cfi_endproc
 1385              	.LFE77:
 1386              		.size	set_up_internet_connection, .-set_up_internet_connection
 1387              		.section	.rodata
 1388 02e7 00       		.align	2
 1389              	.LC28:
 1390 02e8 312C3100 		.ascii	"1,1\000"
 1391              		.align	2
 1392              	.LC29:
 1393 02ec 41542353 		.ascii	"AT#SGACT?\015\000"
 1393      47414354 
 1393      3F0D00
 1394              		.section	.text.is_connected_to_internet,"ax",%progbits
 1395              		.align	2
 1396              		.global	is_connected_to_internet
 1397              		.thumb
 1398              		.thumb_func
 1399              		.type	is_connected_to_internet, %function
 1400              	is_connected_to_internet:
 1401              	.LFB78:
 411:modem.c       **** 
 412:modem.c       **** // Checks if the modem is connected to the internet
 413:modem.c       **** uint8 is_connected_to_internet(){
 1402              		.loc 1 413 0
 1403              		.cfi_startproc
 1404              		@ args = 0, pretend = 0, frame = 0
 1405              		@ frame_needed = 1, uses_anonymous_args = 0
 1406 0000 80B5     		push	{r7, lr}
 1407              		.cfi_def_cfa_offset 8
 1408              		.cfi_offset 7, -8
 1409              		.cfi_offset 14, -4
 1410 0002 00AF     		add	r7, sp, #0
 1411              		.cfi_def_cfa_register 7
 414:modem.c       ****     // AT command SGACT? reports the range for the parameters <cid> and <stat>
 415:modem.c       ****     // cid: is the Packet Data Protocol (PDP) Context Identifier which specifies the particular PDP
 416:modem.c       ****     // stat: gives the context staus (0 deactivated and 1 activated)
 417:modem.c       ****     // Check for 3,1 if Verizon 
 418:modem.c       ****     if(at_write_command("AT#SGACT?\r", "1,1",DEFAULT_AT_TIMEOUT)){
 1412              		.loc 1 418 0
 1413 0004 4FF4FA62 		mov	r2, #2000
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 35


 1414 0008 0549     		ldr	r1, .L88
 1415 000a 0648     		ldr	r0, .L88+4
 1416 000c FFF7FEFF 		bl	at_write_command
 1417 0010 0346     		mov	r3, r0
 1418 0012 002B     		cmp	r3, #0
 1419 0014 01D0     		beq	.L86
 419:modem.c       ****         return 1u;
 1420              		.loc 1 419 0
 1421 0016 0123     		movs	r3, #1
 1422 0018 00E0     		b	.L87
 1423              	.L86:
 420:modem.c       ****     }
 421:modem.c       ****     return 0u;  
 1424              		.loc 1 421 0
 1425 001a 0023     		movs	r3, #0
 1426              	.L87:
 422:modem.c       **** }
 1427              		.loc 1 422 0
 1428 001c 1846     		mov	r0, r3
 1429 001e 80BD     		pop	{r7, pc}
 1430              	.L89:
 1431              		.align	2
 1432              	.L88:
 1433 0020 E8020000 		.word	.LC28
 1434 0024 EC020000 		.word	.LC29
 1435              		.cfi_endproc
 1436              	.LFE78:
 1437              		.size	is_connected_to_internet, .-is_connected_to_internet
 1438              		.section	.rodata
 1439 02f7 00       		.align	2
 1440              	.LC30:
 1441 02f8 41542B43 		.ascii	"AT+CESQ\015\000"
 1441      4553510D 
 1441      00
 1442 0301 000000   		.align	2
 1443              	.LC31:
 1444 0304 4E657477 		.ascii	"Network STts: %s\000"
 1444      6F726B20 
 1444      53547473 
 1444      3A202573 
 1444      00
 1445 0315 000000   		.align	2
 1446              	.LC32:
 1447 0318 2C00     		.ascii	",\000"
 1448              		.section	.text.get_cell_network_stats,"ax",%progbits
 1449              		.align	2
 1450              		.global	get_cell_network_stats
 1451              		.thumb
 1452              		.thumb_func
 1453              		.type	get_cell_network_stats, %function
 1454              	get_cell_network_stats:
 1455              	.LFB79:
 423:modem.c       **** 
 424:modem.c       **** // Get cellular network stats 
 425:modem.c       **** void get_cell_network_stats(){
 1456              		.loc 1 425 0
 1457              		.cfi_startproc
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 36


 1458              		@ args = 0, pretend = 0, frame = 40
 1459              		@ frame_needed = 1, uses_anonymous_args = 0
 1460 0000 80B5     		push	{r7, lr}
 1461              		.cfi_def_cfa_offset 8
 1462              		.cfi_offset 7, -8
 1463              		.cfi_offset 14, -4
 1464 0002 8AB0     		sub	sp, sp, #40
 1465              		.cfi_def_cfa_offset 48
 1466 0004 00AF     		add	r7, sp, #0
 1467              		.cfi_def_cfa_register 7
 1468              	.LBB9:
 426:modem.c       ****     // Gets RSSI and FER values
 427:modem.c       ****     // RSSI (Received Signal Strength Indicator) is a measurement of how well your device can hear 
 428:modem.c       ****     // RSRQ (Reference Signal Received Quality) (or SQ for short) gives the signal quality. 
 429:modem.c       ****     for(uint8 attempts =0; attempts <10; attempts++){
 1469              		.loc 1 429 0
 1470 0006 0023     		movs	r3, #0
 1471 0008 87F82730 		strb	r3, [r7, #39]
 1472 000c 77E0     		b	.L91
 1473              	.L100:
 1474              	.LBB10:
 430:modem.c       ****         // AT command CESQ checks Signal Quality
 431:modem.c       ****         at_write_command("AT+CESQ\r", "OK",DEFAULT_AT_TIMEOUT);
 1475              		.loc 1 431 0
 1476 000e 4FF4FA62 		mov	r2, #2000
 1477 0012 3F49     		ldr	r1, .L102
 1478 0014 3F48     		ldr	r0, .L102+4
 1479 0016 FFF7FEFF 		bl	at_write_command
 432:modem.c       ****         
 433:modem.c       ****         char cesq[30]; // Create a character array of length 30 called cesq 
 434:modem.c       ****         // Extract string from the UART
 435:modem.c       ****         extract_string(uart_received_string,": ","\r",cesq);
 1480              		.loc 1 435 0
 1481 001a 3B46     		mov	r3, r7
 1482 001c 3E4A     		ldr	r2, .L102+8
 1483 001e 3F49     		ldr	r1, .L102+12
 1484 0020 3F48     		ldr	r0, .L102+16
 1485 0022 FFF7FEFF 		bl	extract_string
 436:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Network STts: %s",cesq);
 1486              		.loc 1 436 0
 1487 0026 3B46     		mov	r3, r7
 1488 0028 1A46     		mov	r2, r3
 1489 002a 3E49     		ldr	r1, .L102+20
 1490 002c 0020     		movs	r0, #0
 1491 002e FFF7FEFF 		bl	printNotif
 437:modem.c       ****         
 438:modem.c       ****         char *token; // Create a character variable pointer
 439:modem.c       ****         // strtok(): breaks "cesq" into smaller string when sees ","
 440:modem.c       ****         token = strtok(cesq,",");
 1492              		.loc 1 440 0
 1493 0032 3B46     		mov	r3, r7
 1494 0034 3C49     		ldr	r1, .L102+24
 1495 0036 1846     		mov	r0, r3
 1496 0038 FFF7FEFF 		bl	strtok
 1497 003c 3862     		str	r0, [r7, #32]
 441:modem.c       ****         // If token is not NULL then set modem_stats.rssi equal to the integer "token"
 442:modem.c       ****         // int atoi(const char *str) converts the string argument str to an integer (type int).
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 37


 443:modem.c       ****         if(token != NULL){
 1498              		.loc 1 443 0
 1499 003e 3B6A     		ldr	r3, [r7, #32]
 1500 0040 002B     		cmp	r3, #0
 1501 0042 06D0     		beq	.L92
 444:modem.c       ****             modem_stats.rssi = atoi(token);
 1502              		.loc 1 444 0
 1503 0044 386A     		ldr	r0, [r7, #32]
 1504 0046 FFF7FEFF 		bl	atoi
 1505 004a 0346     		mov	r3, r0
 1506 004c DAB2     		uxtb	r2, r3
 1507 004e 374B     		ldr	r3, .L102+28
 1508 0050 1A70     		strb	r2, [r3]
 1509              	.L92:
 445:modem.c       ****         }
 446:modem.c       ****         token = strtok(NULL,",");
 1510              		.loc 1 446 0
 1511 0052 3549     		ldr	r1, .L102+24
 1512 0054 0020     		movs	r0, #0
 1513 0056 FFF7FEFF 		bl	strtok
 1514 005a 3862     		str	r0, [r7, #32]
 447:modem.c       ****         if(token != NULL){
 1515              		.loc 1 447 0
 1516 005c 3B6A     		ldr	r3, [r7, #32]
 1517 005e 002B     		cmp	r3, #0
 1518 0060 06D0     		beq	.L93
 448:modem.c       ****             modem_stats.ber = atoi(token);
 1519              		.loc 1 448 0
 1520 0062 386A     		ldr	r0, [r7, #32]
 1521 0064 FFF7FEFF 		bl	atoi
 1522 0068 0346     		mov	r3, r0
 1523 006a DAB2     		uxtb	r2, r3
 1524 006c 2F4B     		ldr	r3, .L102+28
 1525 006e 5A70     		strb	r2, [r3, #1]
 1526              	.L93:
 449:modem.c       ****         }
 450:modem.c       ****         token = strtok(NULL,",");
 1527              		.loc 1 450 0
 1528 0070 2D49     		ldr	r1, .L102+24
 1529 0072 0020     		movs	r0, #0
 1530 0074 FFF7FEFF 		bl	strtok
 1531 0078 3862     		str	r0, [r7, #32]
 451:modem.c       ****         if(token != NULL){
 1532              		.loc 1 451 0
 1533 007a 3B6A     		ldr	r3, [r7, #32]
 1534 007c 002B     		cmp	r3, #0
 1535 007e 06D0     		beq	.L94
 452:modem.c       ****             modem_stats.rscp = atoi(token);
 1536              		.loc 1 452 0
 1537 0080 386A     		ldr	r0, [r7, #32]
 1538 0082 FFF7FEFF 		bl	atoi
 1539 0086 0346     		mov	r3, r0
 1540 0088 DAB2     		uxtb	r2, r3
 1541 008a 284B     		ldr	r3, .L102+28
 1542 008c 9A70     		strb	r2, [r3, #2]
 1543              	.L94:
 453:modem.c       ****         }
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 38


 454:modem.c       ****         token = strtok(NULL,",");
 1544              		.loc 1 454 0
 1545 008e 2649     		ldr	r1, .L102+24
 1546 0090 0020     		movs	r0, #0
 1547 0092 FFF7FEFF 		bl	strtok
 1548 0096 3862     		str	r0, [r7, #32]
 455:modem.c       ****         if(token != NULL){
 1549              		.loc 1 455 0
 1550 0098 3B6A     		ldr	r3, [r7, #32]
 1551 009a 002B     		cmp	r3, #0
 1552 009c 06D0     		beq	.L95
 456:modem.c       ****             modem_stats.ecno = atoi(token);
 1553              		.loc 1 456 0
 1554 009e 386A     		ldr	r0, [r7, #32]
 1555 00a0 FFF7FEFF 		bl	atoi
 1556 00a4 0346     		mov	r3, r0
 1557 00a6 DAB2     		uxtb	r2, r3
 1558 00a8 204B     		ldr	r3, .L102+28
 1559 00aa DA70     		strb	r2, [r3, #3]
 1560              	.L95:
 457:modem.c       ****         }
 458:modem.c       ****         token = strtok(NULL,",");
 1561              		.loc 1 458 0
 1562 00ac 1E49     		ldr	r1, .L102+24
 1563 00ae 0020     		movs	r0, #0
 1564 00b0 FFF7FEFF 		bl	strtok
 1565 00b4 3862     		str	r0, [r7, #32]
 459:modem.c       ****         if(token != NULL){
 1566              		.loc 1 459 0
 1567 00b6 3B6A     		ldr	r3, [r7, #32]
 1568 00b8 002B     		cmp	r3, #0
 1569 00ba 06D0     		beq	.L96
 460:modem.c       ****             modem_stats.rsrq = atoi(token);
 1570              		.loc 1 460 0
 1571 00bc 386A     		ldr	r0, [r7, #32]
 1572 00be FFF7FEFF 		bl	atoi
 1573 00c2 0346     		mov	r3, r0
 1574 00c4 DAB2     		uxtb	r2, r3
 1575 00c6 194B     		ldr	r3, .L102+28
 1576 00c8 1A71     		strb	r2, [r3, #4]
 1577              	.L96:
 461:modem.c       ****         }
 462:modem.c       ****         token = strtok(NULL,",");
 1578              		.loc 1 462 0
 1579 00ca 1749     		ldr	r1, .L102+24
 1580 00cc 0020     		movs	r0, #0
 1581 00ce FFF7FEFF 		bl	strtok
 1582 00d2 3862     		str	r0, [r7, #32]
 463:modem.c       ****         if(token != NULL){
 1583              		.loc 1 463 0
 1584 00d4 3B6A     		ldr	r3, [r7, #32]
 1585 00d6 002B     		cmp	r3, #0
 1586 00d8 06D0     		beq	.L97
 464:modem.c       ****             modem_stats.rsrp = atoi(token);
 1587              		.loc 1 464 0
 1588 00da 386A     		ldr	r0, [r7, #32]
 1589 00dc FFF7FEFF 		bl	atoi
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 39


 1590 00e0 0346     		mov	r3, r0
 1591 00e2 DAB2     		uxtb	r2, r3
 1592 00e4 114B     		ldr	r3, .L102+28
 1593 00e6 5A71     		strb	r2, [r3, #5]
 1594              	.L97:
 465:modem.c       ****         }
 466:modem.c       ****         // If rsrp is not equal to 255 then break.
 467:modem.c       ****         if(modem_stats.rsrp != 255){
 1595              		.loc 1 467 0
 1596 00e8 104B     		ldr	r3, .L102+28
 1597 00ea 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1598 00ec FF2B     		cmp	r3, #255
 1599 00ee 01D0     		beq	.L98
 468:modem.c       ****             break;
 1600              		.loc 1 468 0
 1601 00f0 00BF     		nop
 1602              	.LBE10:
 1603              	.LBE9:
 469:modem.c       ****         }
 470:modem.c       ****     }
 471:modem.c       **** }
 1604              		.loc 1 471 0
 1605 00f2 08E0     		b	.L101
 1606              	.L98:
 1607              	.LBB11:
 429:modem.c       ****         // AT command CESQ checks Signal Quality
 1608              		.loc 1 429 0
 1609 00f4 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1610 00f8 0133     		adds	r3, r3, #1
 1611 00fa 87F82730 		strb	r3, [r7, #39]
 1612              	.L91:
 429:modem.c       ****         // AT command CESQ checks Signal Quality
 1613              		.loc 1 429 0 is_stmt 0 discriminator 1
 1614 00fe 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1615 0102 092B     		cmp	r3, #9
 1616 0104 83D9     		bls	.L100
 1617              	.L101:
 1618              	.LBE11:
 1619              		.loc 1 471 0 is_stmt 1
 1620 0106 00BF     		nop
 1621 0108 2837     		adds	r7, r7, #40
 1622              		.cfi_def_cfa_offset 8
 1623 010a BD46     		mov	sp, r7
 1624              		.cfi_def_cfa_register 13
 1625              		@ sp needed
 1626 010c 80BD     		pop	{r7, pc}
 1627              	.L103:
 1628 010e 00BF     		.align	2
 1629              	.L102:
 1630 0110 00000000 		.word	.LC0
 1631 0114 F8020000 		.word	.LC30
 1632 0118 88020000 		.word	.LC21
 1633 011c 8C020000 		.word	.LC22
 1634 0120 00000000 		.word	uart_received_string
 1635 0124 04030000 		.word	.LC31
 1636 0128 18030000 		.word	.LC32
 1637 012c 00000000 		.word	modem_stats
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 40


 1638              		.cfi_endproc
 1639              	.LFE79:
 1640              		.size	get_cell_network_stats, .-get_cell_network_stats
 1641              		.section	.rodata
 1642 031a 0000     		.align	2
 1643              	.LC33:
 1644 031c 41542343 		.ascii	"AT#CGMM\015\000"
 1644      474D4D0D 
 1644      00
 1645 0325 000000   		.align	2
 1646              	.LC34:
 1647 0328 4D6F6465 		.ascii	"Modem Model: %s\000"
 1647      6D204D6F 
 1647      64656C3A 
 1647      20257300 
 1648              		.align	2
 1649              	.LC35:
 1650 0338 41542343 		.ascii	"AT#CCID\015\000"
 1650      4349440D 
 1650      00
 1651 0341 000000   		.align	2
 1652              	.LC36:
 1653 0344 53494D20 		.ascii	"SIM ID: %s\000"
 1653      49443A20 
 1653      257300
 1654 034f 00       		.align	2
 1655              	.LC37:
 1656 0350 41542B43 		.ascii	"AT+CGSN\015\000"
 1656      47534E0D 
 1656      00
 1657 0359 000000   		.align	2
 1658              	.LC38:
 1659 035c 494D4549 		.ascii	"IMEI: %s\000"
 1659      3A202573 
 1659      00
 1660 0365 000000   		.align	2
 1661              	.LC39:
 1662 0368 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\015\012"
 1662      4744434F 
 1662      4E543D31 
 1662      2C224950 
 1662      222C2277 
 1663 0391 00       		.ascii	"\000"
 1664 0392 0000     		.align	2
 1665              	.LC40:
 1666 0394 41542B43 		.ascii	"AT+CFUN?\015\000"
 1666      46554E3F 
 1666      0D00
 1667 039e 0000     		.align	2
 1668              	.LC41:
 1669 03a0 4346554E 		.ascii	"CFUN: %s\000"
 1669      3A202573 
 1669      00
 1670 03a9 000000   		.align	2
 1671              	.LC42:
 1672 03ac 41542B43 		.ascii	"AT+CFUN=1\015\000"
 1672      46554E3D 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 41


 1672      310D00
 1673              		.section	.text.modem_configure_settings,"ax",%progbits
 1674              		.align	2
 1675              		.global	modem_configure_settings
 1676              		.thumb
 1677              		.thumb_func
 1678              		.type	modem_configure_settings, %function
 1679              	modem_configure_settings:
 1680              	.LFB80:
 472:modem.c       ****     
 473:modem.c       ****     
 474:modem.c       **** // Configure the modem settings
 475:modem.c       **** void modem_configure_settings(){
 1681              		.loc 1 475 0
 1682              		.cfi_startproc
 1683              		@ args = 0, pretend = 0, frame = 16
 1684              		@ frame_needed = 1, uses_anonymous_args = 0
 1685 0000 80B5     		push	{r7, lr}
 1686              		.cfi_def_cfa_offset 8
 1687              		.cfi_offset 7, -8
 1688              		.cfi_offset 14, -4
 1689 0002 84B0     		sub	sp, sp, #16
 1690              		.cfi_def_cfa_offset 24
 1691 0004 00AF     		add	r7, sp, #0
 1692              		.cfi_def_cfa_register 7
 476:modem.c       ****     
 477:modem.c       ****     // Save/print modem model ID number
 478:modem.c       ****     if(modem_info.model_id[0] == '\0'){
 1693              		.loc 1 478 0
 1694 0006 3B4B     		ldr	r3, .L111
 1695 0008 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1696 000a 002B     		cmp	r3, #0
 1697 000c 13D1     		bne	.L105
 479:modem.c       ****         // AT command #CGMM returns the "device model identification" code with the command echo.
 480:modem.c       ****         if(at_write_command("AT#CGMM\r","OK",DEFAULT_AT_TIMEOUT)){
 1698              		.loc 1 480 0
 1699 000e 4FF4FA62 		mov	r2, #2000
 1700 0012 3949     		ldr	r1, .L111+4
 1701 0014 3948     		ldr	r0, .L111+8
 1702 0016 FFF7FEFF 		bl	at_write_command
 1703 001a 0346     		mov	r3, r0
 1704 001c 002B     		cmp	r3, #0
 1705 001e 0AD0     		beq	.L105
 481:modem.c       ****             // Extract modem model ID number string from the UART
 482:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.model_id);
 1706              		.loc 1 482 0
 1707 0020 374B     		ldr	r3, .L111+12
 1708 0022 384A     		ldr	r2, .L111+16
 1709 0024 3849     		ldr	r1, .L111+20
 1710 0026 3948     		ldr	r0, .L111+24
 1711 0028 FFF7FEFF 		bl	extract_string
 483:modem.c       ****             // Print modem model ID number
 484:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem Model: %s",modem_info.model_id);
 1712              		.loc 1 484 0
 1713 002c 344A     		ldr	r2, .L111+12
 1714 002e 3849     		ldr	r1, .L111+28
 1715 0030 0020     		movs	r0, #0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 42


 1716 0032 FFF7FEFF 		bl	printNotif
 1717              	.L105:
 485:modem.c       ****         }
 486:modem.c       ****     }
 487:modem.c       ****     
 488:modem.c       ****    // Save/print SIM-card ID
 489:modem.c       ****    if(modem_info.sim_id[0] == '\0'){
 1718              		.loc 1 489 0
 1719 0036 2F4B     		ldr	r3, .L111
 1720 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1721 003a 002B     		cmp	r3, #0
 1722 003c 13D1     		bne	.L106
 490:modem.c       ****         // AT command #CCID is an execution command that reads the SIM number 
 491:modem.c       ****         if(at_write_command("AT#CCID\r", "OK", DEFAULT_AT_TIMEOUT)){
 1723              		.loc 1 491 0
 1724 003e 4FF4FA62 		mov	r2, #2000
 1725 0042 2D49     		ldr	r1, .L111+4
 1726 0044 3348     		ldr	r0, .L111+32
 1727 0046 FFF7FEFF 		bl	at_write_command
 1728 004a 0346     		mov	r3, r0
 1729 004c 002B     		cmp	r3, #0
 1730 004e 0AD0     		beq	.L106
 492:modem.c       ****             // Extract SIM-card ID string from the UART
 493:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.sim_id);
 1731              		.loc 1 493 0
 1732 0050 284B     		ldr	r3, .L111
 1733 0052 2C4A     		ldr	r2, .L111+16
 1734 0054 2C49     		ldr	r1, .L111+20
 1735 0056 2D48     		ldr	r0, .L111+24
 1736 0058 FFF7FEFF 		bl	extract_string
 494:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"SIM ID: %s",modem_info.sim_id);
 1737              		.loc 1 494 0
 1738 005c 254A     		ldr	r2, .L111
 1739 005e 2E49     		ldr	r1, .L111+36
 1740 0060 0020     		movs	r0, #0
 1741 0062 FFF7FEFF 		bl	printNotif
 1742              	.L106:
 495:modem.c       ****         }
 496:modem.c       ****    }
 497:modem.c       **** 
 498:modem.c       ****     // Save/print modem IMEI
 499:modem.c       ****     if(modem_info.imei[0] == '\0'){
 1743              		.loc 1 499 0
 1744 0066 234B     		ldr	r3, .L111
 1745 0068 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1746 006c 002B     		cmp	r3, #0
 1747 006e 13D1     		bne	.L107
 500:modem.c       ****         // AT command #CGSN returns the product serial number, identified as the IMEI of the mobile
 501:modem.c       ****         if(at_write_command("AT+CGSN\r","OK",DEFAULT_AT_TIMEOUT)){
 1748              		.loc 1 501 0
 1749 0070 4FF4FA62 		mov	r2, #2000
 1750 0074 2049     		ldr	r1, .L111+4
 1751 0076 2948     		ldr	r0, .L111+40
 1752 0078 FFF7FEFF 		bl	at_write_command
 1753 007c 0346     		mov	r3, r0
 1754 007e 002B     		cmp	r3, #0
 1755 0080 0AD0     		beq	.L107
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 43


 502:modem.c       ****             // Extract modem IMEI number string from the UART
 503:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.imei);
 1756              		.loc 1 503 0
 1757 0082 274B     		ldr	r3, .L111+44
 1758 0084 1F4A     		ldr	r2, .L111+16
 1759 0086 2049     		ldr	r1, .L111+20
 1760 0088 2048     		ldr	r0, .L111+24
 1761 008a FFF7FEFF 		bl	extract_string
 504:modem.c       ****             // Print modem IMEI number
 505:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"IMEI: %s",modem_info.imei);
 1762              		.loc 1 505 0
 1763 008e 244A     		ldr	r2, .L111+44
 1764 0090 2449     		ldr	r1, .L111+48
 1765 0092 0020     		movs	r0, #0
 1766 0094 FFF7FEFF 		bl	printNotif
 1767              	.L107:
 506:modem.c       ****         } 
 507:modem.c       ****     }
 508:modem.c       ****     
 509:modem.c       ****     // Configure protocol and cellular end point
 510:modem.c       ****     // AT command +CGDCONT defines the PDP context parameter values for a PDP context identified by
 511:modem.c       ****     at_write_command("AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\r\n", "OK", DEFAULT_AT_TIMEOUT);
 1768              		.loc 1 511 0
 1769 0098 4FF4FA62 		mov	r2, #2000
 1770 009c 1649     		ldr	r1, .L111+4
 1771 009e 2248     		ldr	r0, .L111+52
 1772 00a0 FFF7FEFF 		bl	at_write_command
 512:modem.c       ****     
 513:modem.c       ****     // Check if modem power savings is enabled. If so, disable it so we can send data.
 514:modem.c       ****     // AT command +CFUN? is a read command that reports the current setting of <fun> which is the p
 515:modem.c       ****     if(at_write_command("AT+CFUN?\r", "OK",DEFAULT_AT_TIMEOUT)){
 1773              		.loc 1 515 0
 1774 00a4 4FF4FA62 		mov	r2, #2000
 1775 00a8 1349     		ldr	r1, .L111+4
 1776 00aa 2048     		ldr	r0, .L111+56
 1777 00ac FFF7FEFF 		bl	at_write_command
 1778 00b0 0346     		mov	r3, r0
 1779 00b2 002B     		cmp	r3, #0
 1780 00b4 19D0     		beq	.L110
 1781              	.LBB12:
 516:modem.c       ****         char CFUN[10]; // Create a character array of length 10 called CFUN 
 517:modem.c       ****         // Extract UART string recieved from the modem
 518:modem.c       ****         extract_string(uart_received_string,": ","\r",CFUN);
 1782              		.loc 1 518 0
 1783 00b6 3B1D     		adds	r3, r7, #4
 1784 00b8 124A     		ldr	r2, .L111+16
 1785 00ba 1349     		ldr	r1, .L111+20
 1786 00bc 1348     		ldr	r0, .L111+24
 1787 00be FFF7FEFF 		bl	extract_string
 519:modem.c       ****         // Print UART string recieved from the modem
 520:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"CFUN: %s",CFUN);
 1788              		.loc 1 520 0
 1789 00c2 3B1D     		adds	r3, r7, #4
 1790 00c4 1A46     		mov	r2, r3
 1791 00c6 1A49     		ldr	r1, .L111+60
 1792 00c8 0020     		movs	r0, #0
 1793 00ca FFF7FEFF 		bl	printNotif
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 44


 521:modem.c       ****         // Search CRUN for "1", if "1" exists, it will return 1u otherwise it will return NULL
 522:modem.c       ****         // If it returns NULL, then write another command to the modem
 523:modem.c       ****         if(strstr(CFUN,"1") == NULL){
 1794              		.loc 1 523 0
 1795 00ce 3B1D     		adds	r3, r7, #4
 1796 00d0 3121     		movs	r1, #49
 1797 00d2 1846     		mov	r0, r3
 1798 00d4 FFF7FEFF 		bl	strchr
 1799 00d8 0346     		mov	r3, r0
 1800 00da 002B     		cmp	r3, #0
 1801 00dc 05D1     		bne	.L110
 524:modem.c       ****             // AT command +CFUN= is a set command which selects the level of functionality in the m
 525:modem.c       ****             // = 1 means mobile full functionality with power saving disabled 
 526:modem.c       ****             at_write_command("AT+CFUN=1\r", "OK",DEFAULT_AT_TIMEOUT);
 1802              		.loc 1 526 0
 1803 00de 4FF4FA62 		mov	r2, #2000
 1804 00e2 0549     		ldr	r1, .L111+4
 1805 00e4 1348     		ldr	r0, .L111+64
 1806 00e6 FFF7FEFF 		bl	at_write_command
 1807              	.L110:
 1808              	.LBE12:
 527:modem.c       ****         }
 528:modem.c       ****     }
 529:modem.c       **** 
 530:modem.c       ****     
 531:modem.c       **** }
 1809              		.loc 1 531 0
 1810 00ea 00BF     		nop
 1811 00ec 1037     		adds	r7, r7, #16
 1812              		.cfi_def_cfa_offset 8
 1813 00ee BD46     		mov	sp, r7
 1814              		.cfi_def_cfa_register 13
 1815              		@ sp needed
 1816 00f0 80BD     		pop	{r7, pc}
 1817              	.L112:
 1818 00f2 00BF     		.align	2
 1819              	.L111:
 1820 00f4 00000000 		.word	modem_info
 1821 00f8 00000000 		.word	.LC0
 1822 00fc 1C030000 		.word	.LC33
 1823 0100 14000000 		.word	modem_info+20
 1824 0104 88020000 		.word	.LC21
 1825 0108 8C020000 		.word	.LC22
 1826 010c 00000000 		.word	uart_received_string
 1827 0110 28030000 		.word	.LC34
 1828 0114 38030000 		.word	.LC35
 1829 0118 44030000 		.word	.LC36
 1830 011c 50030000 		.word	.LC37
 1831 0120 28000000 		.word	modem_info+40
 1832 0124 5C030000 		.word	.LC38
 1833 0128 68030000 		.word	.LC39
 1834 012c 94030000 		.word	.LC40
 1835 0130 A0030000 		.word	.LC41
 1836 0134 AC030000 		.word	.LC42
 1837              		.cfi_endproc
 1838              	.LFE80:
 1839              		.size	modem_configure_settings, .-modem_configure_settings
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 45


 1840              		.section	.rodata
 1841 03b7 00       		.align	2
 1842              	.LC43:
 1843 03b8 4D6F6465 		.ascii	"Modem not ready to get time. Not conncted to networ"
 1843      6D206E6F 
 1843      74207265 
 1843      61647920 
 1843      746F2067 
 1844 03eb 6B2E00   		.ascii	"k.\000"
 1845 03ee 0000     		.align	2
 1846              	.LC44:
 1847 03f0 41542B43 		.ascii	"AT+CCLK?\015\000"
 1847      434C4B3F 
 1847      0D00
 1848 03fa 0000     		.align	2
 1849              	.LC45:
 1850 03fc 220D00   		.ascii	"\"\015\000"
 1851 03ff 00       		.align	2
 1852              	.LC46:
 1853 0400 3A202200 		.ascii	": \"\000"
 1854              		.align	2
 1855              	.LC47:
 1856 0404 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d-%d\000"
 1856      642F2564 
 1856      2C25643A 
 1856      25643A25 
 1856      642D2564 
 1857 0419 000000   		.align	2
 1858              	.LC48:
 1859 041c 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d+%d\000"
 1859      642F2564 
 1859      2C25643A 
 1859      25643A25 
 1859      642B2564 
 1860 0431 000000   		.align	2
 1861              	.LC49:
 1862 0434 436F756C 		.ascii	"Could not parse modem time.\000"
 1862      64206E6F 
 1862      74207061 
 1862      72736520 
 1862      6D6F6465 
 1863              		.section	.text.modem_get_network_time,"ax",%progbits
 1864              		.align	2
 1865              		.global	modem_get_network_time
 1866              		.thumb
 1867              		.thumb_func
 1868              		.type	modem_get_network_time, %function
 1869              	modem_get_network_time:
 1870              	.LFB81:
 532:modem.c       **** 
 533:modem.c       **** //returns 0 if modem can't get time
 534:modem.c       **** long modem_get_network_time(){
 1871              		.loc 1 534 0
 1872              		.cfi_startproc
 1873              		@ args = 0, pretend = 0, frame = 104
 1874              		@ frame_needed = 1, uses_anonymous_args = 0
 1875 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 46


 1876              		.cfi_def_cfa_offset 8
 1877              		.cfi_offset 7, -8
 1878              		.cfi_offset 14, -4
 1879 0002 A0B0     		sub	sp, sp, #128
 1880              		.cfi_def_cfa_offset 136
 1881 0004 06AF     		add	r7, sp, #24
 1882              		.cfi_def_cfa 7, 112
 535:modem.c       ****     
 536:modem.c       ****     //modem reposen format (careful to include the quotes "")
 537:modem.c       ****     //+CCLK: "20/05/01,10:48:33-16" the "-16" is the number of quarter hourts (15 mins) from GMT ti
 538:modem.c       ****     //ex: 14:48 GMT
 539:modem.c       **** 
 540:modem.c       ****     // If modem_state is not "ready", then print error and return 0
 541:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 1883              		.loc 1 541 0
 1884 0006 444B     		ldr	r3, .L120
 1885 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1886 000a 042B     		cmp	r3, #4
 1887 000c 05D0     		beq	.L114
 542:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Modem not ready to get time. Not conncted to network.");
 1888              		.loc 1 542 0
 1889 000e 4349     		ldr	r1, .L120+4
 1890 0010 0220     		movs	r0, #2
 1891 0012 FFF7FEFF 		bl	printNotif
 543:modem.c       ****         return 0;   
 1892              		.loc 1 543 0
 1893 0016 0023     		movs	r3, #0
 1894 0018 7AE0     		b	.L115
 1895              	.L114:
 544:modem.c       ****     }
 545:modem.c       ****     long epoch_time = 0; // Create variable of long time and set equal to 0
 1896              		.loc 1 545 0
 1897 001a 0023     		movs	r3, #0
 1898 001c 7B66     		str	r3, [r7, #100]
 546:modem.c       ****     
 547:modem.c       ****     // AT command +CCLK? is a read command that returns the current setting of the real-time clock 
 548:modem.c       ****     if(at_write_command("AT+CCLK?\r","OK",DEFAULT_AT_TIMEOUT)){
 1899              		.loc 1 548 0
 1900 001e 4FF4FA62 		mov	r2, #2000
 1901 0022 3F49     		ldr	r1, .L120+8
 1902 0024 3F48     		ldr	r0, .L120+12
 1903 0026 FFF7FEFF 		bl	at_write_command
 1904 002a 0346     		mov	r3, r0
 1905 002c 002B     		cmp	r3, #0
 1906 002e 6ED0     		beq	.L116
 1907              	.LBB13:
 549:modem.c       ****         // need to set this to /0
 550:modem.c       ****         char network_time[30]; // Create a character array of length 30 called network_time 
 551:modem.c       ****         network_time[0] = '\0';
 1908              		.loc 1 551 0
 1909 0030 0023     		movs	r3, #0
 1910 0032 87F84430 		strb	r3, [r7, #68]
 552:modem.c       ****         // Extract UART string recieved from the modem and save to variable network_time
 553:modem.c       ****         extract_string(uart_received_string,": \"","\"\r",network_time);
 1911              		.loc 1 553 0
 1912 0036 07F14403 		add	r3, r7, #68
 1913 003a 3B4A     		ldr	r2, .L120+16
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 47


 1914 003c 3B49     		ldr	r1, .L120+20
 1915 003e 3C48     		ldr	r0, .L120+24
 1916 0040 FFF7FEFF 		bl	extract_string
 554:modem.c       ****         
 555:modem.c       ****         ///////////////////  
 556:modem.c       ****         struct tm t; // Creates variable t of struct tm
 557:modem.c       ****         
 558:modem.c       ****         // Creates a bunch of variables of type int and sets them to 0
 559:modem.c       ****         int year, month, day, hour, minute, second, gmt_offset = 0;
 1917              		.loc 1 559 0
 1918 0044 0023     		movs	r3, #0
 1919 0046 BB62     		str	r3, [r7, #40]
 560:modem.c       ****       
 561:modem.c       ****         // Determines the GMT offset 
 562:modem.c       ****         // int sscanf(const char *str, const char *format, ...) reads formatted input from a string
 563:modem.c       ****         // On success, the function returns the number of variables filled. In the case of an input
 564:modem.c       ****         if(sscanf(network_time,"%d/%d/%d,%d:%d:%d-%d",&year,&month,&day,&hour,&minute,&second,&gmt_
 1920              		.loc 1 564 0
 1921 0048 07F13C01 		add	r1, r7, #60
 1922 004c 07F14002 		add	r2, r7, #64
 1923 0050 07F14400 		add	r0, r7, #68
 1924 0054 07F12803 		add	r3, r7, #40
 1925 0058 0493     		str	r3, [sp, #16]
 1926 005a 07F12C03 		add	r3, r7, #44
 1927 005e 0393     		str	r3, [sp, #12]
 1928 0060 07F13003 		add	r3, r7, #48
 1929 0064 0293     		str	r3, [sp, #8]
 1930 0066 07F13403 		add	r3, r7, #52
 1931 006a 0193     		str	r3, [sp, #4]
 1932 006c 07F13803 		add	r3, r7, #56
 1933 0070 0093     		str	r3, [sp]
 1934 0072 0B46     		mov	r3, r1
 1935 0074 2F49     		ldr	r1, .L120+28
 1936 0076 FFF7FEFF 		bl	sscanf
 1937 007a 0346     		mov	r3, r0
 1938 007c 072B     		cmp	r3, #7
 1939 007e 06D1     		bne	.L117
 565:modem.c       ****             gmt_offset = gmt_offset*(900);
 1940              		.loc 1 565 0
 1941 0080 BB6A     		ldr	r3, [r7, #40]
 1942 0082 4FF46172 		mov	r2, #900
 1943 0086 02FB03F3 		mul	r3, r2, r3
 1944 008a BB62     		str	r3, [r7, #40]
 1945 008c 27E0     		b	.L118
 1946              	.L117:
 566:modem.c       ****         }else if(sscanf(network_time,"%d/%d/%d,%d:%d:%d+%d",&year,&month,&day,&hour,&minute,&second
 1947              		.loc 1 566 0
 1948 008e 07F13C01 		add	r1, r7, #60
 1949 0092 07F14002 		add	r2, r7, #64
 1950 0096 07F14400 		add	r0, r7, #68
 1951 009a 07F12803 		add	r3, r7, #40
 1952 009e 0493     		str	r3, [sp, #16]
 1953 00a0 07F12C03 		add	r3, r7, #44
 1954 00a4 0393     		str	r3, [sp, #12]
 1955 00a6 07F13003 		add	r3, r7, #48
 1956 00aa 0293     		str	r3, [sp, #8]
 1957 00ac 07F13403 		add	r3, r7, #52
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 48


 1958 00b0 0193     		str	r3, [sp, #4]
 1959 00b2 07F13803 		add	r3, r7, #56
 1960 00b6 0093     		str	r3, [sp]
 1961 00b8 0B46     		mov	r3, r1
 1962 00ba 1F49     		ldr	r1, .L120+32
 1963 00bc FFF7FEFF 		bl	sscanf
 1964 00c0 0346     		mov	r3, r0
 1965 00c2 072B     		cmp	r3, #7
 1966 00c4 05D1     		bne	.L119
 567:modem.c       ****             gmt_offset = gmt_offset*(-900);
 1967              		.loc 1 567 0
 1968 00c6 BB6A     		ldr	r3, [r7, #40]
 1969 00c8 1C4A     		ldr	r2, .L120+36
 1970 00ca 02FB03F3 		mul	r3, r2, r3
 1971 00ce BB62     		str	r3, [r7, #40]
 1972 00d0 05E0     		b	.L118
 1973              	.L119:
 568:modem.c       ****         }else{
 569:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Could not parse modem time.");
 1974              		.loc 1 569 0
 1975 00d2 1B49     		ldr	r1, .L120+40
 1976 00d4 0220     		movs	r0, #2
 1977 00d6 FFF7FEFF 		bl	printNotif
 570:modem.c       ****             return 0;  // Return 0 if cannot get time 
 1978              		.loc 1 570 0
 1979 00da 0023     		movs	r3, #0
 1980 00dc 18E0     		b	.L115
 1981              	.L118:
 571:modem.c       ****         }
 572:modem.c       ****         
 573:modem.c       ****         // Sets each variable to the correct time 
 574:modem.c       ****         t.tm_sec = second;
 1982              		.loc 1 574 0
 1983 00de FB6A     		ldr	r3, [r7, #44]
 1984 00e0 7B60     		str	r3, [r7, #4]
 575:modem.c       ****         t.tm_min = minute;
 1985              		.loc 1 575 0
 1986 00e2 3B6B     		ldr	r3, [r7, #48]
 1987 00e4 BB60     		str	r3, [r7, #8]
 576:modem.c       ****         t.tm_hour = hour;
 1988              		.loc 1 576 0
 1989 00e6 7B6B     		ldr	r3, [r7, #52]
 1990 00e8 FB60     		str	r3, [r7, #12]
 577:modem.c       ****         t.tm_year = year + 100;    // Year since 1900
 1991              		.loc 1 577 0
 1992 00ea 3B6C     		ldr	r3, [r7, #64]
 1993 00ec 6433     		adds	r3, r3, #100
 1994 00ee BB61     		str	r3, [r7, #24]
 578:modem.c       ****         t.tm_mon = month-1;        // Month, where 0 = jan
 1995              		.loc 1 578 0
 1996 00f0 FB6B     		ldr	r3, [r7, #60]
 1997 00f2 013B     		subs	r3, r3, #1
 1998 00f4 7B61     		str	r3, [r7, #20]
 579:modem.c       ****         t.tm_mday = day;           // Day of the month
 1999              		.loc 1 579 0
 2000 00f6 BB6B     		ldr	r3, [r7, #56]
 2001 00f8 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 49


 580:modem.c       ****         t.tm_isdst = 0;            // Is Daylight Savings on? 1 = yes, 0 = no, -1 = unknown
 2002              		.loc 1 580 0
 2003 00fa 0023     		movs	r3, #0
 2004 00fc 7B62     		str	r3, [r7, #36]
 581:modem.c       ****     
 582:modem.c       ****         // Set variable epoch-time to be equal to the local time plus the GMT offset
 583:modem.c       ****         // the mktime function converts a broken-down local time (pointed to by timeptr) and return
 584:modem.c       ****         epoch_time = mktime(&t) + gmt_offset;
 2005              		.loc 1 584 0
 2006 00fe 3B1D     		adds	r3, r7, #4
 2007 0100 1846     		mov	r0, r3
 2008 0102 FFF7FEFF 		bl	mktime
 2009 0106 0246     		mov	r2, r0
 2010 0108 BB6A     		ldr	r3, [r7, #40]
 2011 010a 1344     		add	r3, r3, r2
 2012 010c 7B66     		str	r3, [r7, #100]
 2013              	.L116:
 2014              	.LBE13:
 585:modem.c       ****     }
 586:modem.c       ****     
 587:modem.c       ****     return epoch_time;
 2015              		.loc 1 587 0
 2016 010e 7B6E     		ldr	r3, [r7, #100]
 2017              	.L115:
 588:modem.c       **** }
 2018              		.loc 1 588 0
 2019 0110 1846     		mov	r0, r3
 2020 0112 6837     		adds	r7, r7, #104
 2021              		.cfi_def_cfa_offset 8
 2022 0114 BD46     		mov	sp, r7
 2023              		.cfi_def_cfa_register 13
 2024              		@ sp needed
 2025 0116 80BD     		pop	{r7, pc}
 2026              	.L121:
 2027              		.align	2
 2028              	.L120:
 2029 0118 00000000 		.word	modem_state
 2030 011c B8030000 		.word	.LC43
 2031 0120 00000000 		.word	.LC0
 2032 0124 F0030000 		.word	.LC44
 2033 0128 FC030000 		.word	.LC45
 2034 012c 00040000 		.word	.LC46
 2035 0130 00000000 		.word	uart_received_string
 2036 0134 04040000 		.word	.LC47
 2037 0138 1C040000 		.word	.LC48
 2038 013c 7CFCFFFF 		.word	-900
 2039 0140 34040000 		.word	.LC49
 2040              		.cfi_endproc
 2041              	.LFE81:
 2042              		.size	modem_get_network_time, .-modem_get_network_time
 2043              		.section	.text.modem_get_state,"ax",%progbits
 2044              		.align	2
 2045              		.global	modem_get_state
 2046              		.thumb
 2047              		.thumb_func
 2048              		.type	modem_get_state, %function
 2049              	modem_get_state:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 50


 2050              	.LFB82:
 589:modem.c       **** 
 590:modem.c       **** // Get the modem state
 591:modem.c       **** uint8 modem_get_state(){
 2051              		.loc 1 591 0
 2052              		.cfi_startproc
 2053              		@ args = 0, pretend = 0, frame = 0
 2054              		@ frame_needed = 1, uses_anonymous_args = 0
 2055              		@ link register save eliminated.
 2056 0000 80B4     		push	{r7}
 2057              		.cfi_def_cfa_offset 4
 2058              		.cfi_offset 7, -4
 2059 0002 00AF     		add	r7, sp, #0
 2060              		.cfi_def_cfa_register 7
 592:modem.c       ****     return modem_state;
 2061              		.loc 1 592 0
 2062 0004 024B     		ldr	r3, .L124
 2063 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 593:modem.c       **** }
 2064              		.loc 1 593 0
 2065 0008 1846     		mov	r0, r3
 2066 000a BD46     		mov	sp, r7
 2067              		.cfi_def_cfa_register 13
 2068              		@ sp needed
 2069 000c 80BC     		pop	{r7}
 2070              		.cfi_restore 7
 2071              		.cfi_def_cfa_offset 0
 2072 000e 7047     		bx	lr
 2073              	.L125:
 2074              		.align	2
 2075              	.L124:
 2076 0010 00000000 		.word	modem_state
 2077              		.cfi_endproc
 2078              	.LFE82:
 2079              		.size	modem_get_state, .-modem_get_state
 2080              		.section	.text.modem_sleep,"ax",%progbits
 2081              		.align	2
 2082              		.global	modem_sleep
 2083              		.thumb
 2084              		.thumb_func
 2085              		.type	modem_sleep, %function
 2086              	modem_sleep:
 2087              	.LFB83:
 594:modem.c       **** 
 595:modem.c       **** // Set modem to sleep
 596:modem.c       **** void modem_sleep(){
 2088              		.loc 1 596 0
 2089              		.cfi_startproc
 2090              		@ args = 0, pretend = 0, frame = 0
 2091              		@ frame_needed = 1, uses_anonymous_args = 0
 2092 0000 80B5     		push	{r7, lr}
 2093              		.cfi_def_cfa_offset 8
 2094              		.cfi_offset 7, -8
 2095              		.cfi_offset 14, -4
 2096 0002 00AF     		add	r7, sp, #0
 2097              		.cfi_def_cfa_register 7
 597:modem.c       ****     // If the modem_state is not "off" then put it to sleep
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 51


 598:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 2098              		.loc 1 598 0
 2099 0004 FFF7FEFF 		bl	modem_get_state
 2100 0008 0346     		mov	r3, r0
 2101 000a 002B     		cmp	r3, #0
 2102 000c 03D0     		beq	.L128
 599:modem.c       **** 
 600:modem.c       ****         Telit_ControlReg_Sleep(); // Prepares the modem for entering the low power mode.
 2103              		.loc 1 600 0
 2104 000e FFF7FEFF 		bl	Telit_ControlReg_Sleep
 601:modem.c       ****         UART_Telit_Sleep(); // Saves the current component state, calls the UART_Telit_Stop() funct
 2105              		.loc 1 601 0
 2106 0012 FFF7FEFF 		bl	UART_Telit_Sleep
 2107              	.L128:
 602:modem.c       ****         
 603:modem.c       ****         // Set interrupt on RX pin to wakeup chip from sleep if UART comm starts
 604:modem.c       ****        // Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_FALLING);
 605:modem.c       ****      }
 606:modem.c       **** }
 2108              		.loc 1 606 0
 2109 0016 00BF     		nop
 2110 0018 80BD     		pop	{r7, pc}
 2111              		.cfi_endproc
 2112              	.LFE83:
 2113              		.size	modem_sleep, .-modem_sleep
 2114 001a 00BF     		.section	.text.modem_wakeup,"ax",%progbits
 2115              		.align	2
 2116              		.global	modem_wakeup
 2117              		.thumb
 2118              		.thumb_func
 2119              		.type	modem_wakeup, %function
 2120              	modem_wakeup:
 2121              	.LFB84:
 607:modem.c       **** 
 608:modem.c       **** // Wakeup the modem
 609:modem.c       **** void modem_wakeup(){
 2122              		.loc 1 609 0
 2123              		.cfi_startproc
 2124              		@ args = 0, pretend = 0, frame = 0
 2125              		@ frame_needed = 1, uses_anonymous_args = 0
 2126 0000 80B5     		push	{r7, lr}
 2127              		.cfi_def_cfa_offset 8
 2128              		.cfi_offset 7, -8
 2129              		.cfi_offset 14, -4
 2130 0002 00AF     		add	r7, sp, #0
 2131              		.cfi_def_cfa_register 7
 610:modem.c       ****     // If modem state is not off then wake it up
 611:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 2132              		.loc 1 611 0
 2133 0004 FFF7FEFF 		bl	modem_get_state
 2134 0008 0346     		mov	r3, r0
 2135 000a 002B     		cmp	r3, #0
 2136 000c 0BD0     		beq	.L131
 612:modem.c       ****         Telit_ControlReg_Wakeup(); // Restores the modem after waking up from the low power mode.
 2137              		.loc 1 612 0
 2138 000e FFF7FEFF 		bl	Telit_ControlReg_Wakeup
 613:modem.c       ****         // Calls the UART_Telit_RestoreConfig() function to restore the configuration.
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 52


 614:modem.c       ****         // If the modem was enabled before the UART_Telit_Sleep() function was called, the UART_Tel
 615:modem.c       ****         UART_Telit_Wakeup();
 2139              		.loc 1 615 0
 2140 0012 FFF7FEFF 		bl	UART_Telit_Wakeup
 616:modem.c       ****         // Remove the need for this pin itterupt
 617:modem.c       ****         //Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 618:modem.c       ****         
 619:modem.c       ****         // If woken up from pin, go ahead and delay for 100ms to allow modem UART to deliver the me
 620:modem.c       ****         if(modem_get_state() == MODEM_STATE_WAITING_FOR_IP){
 2141              		.loc 1 620 0
 2142 0016 FFF7FEFF 		bl	modem_get_state
 2143 001a 0346     		mov	r3, r0
 2144 001c 032B     		cmp	r3, #3
 2145 001e 02D1     		bne	.L131
 621:modem.c       ****             CyDelay(100u);
 2146              		.loc 1 621 0
 2147 0020 6420     		movs	r0, #100
 2148 0022 FFF7FEFF 		bl	CyDelay
 2149              	.L131:
 622:modem.c       ****         }
 623:modem.c       ****         
 624:modem.c       ****      }
 625:modem.c       ****     
 626:modem.c       **** }
 2150              		.loc 1 626 0
 2151 0026 00BF     		nop
 2152 0028 80BD     		pop	{r7, pc}
 2153              		.cfi_endproc
 2154              	.LFE84:
 2155              		.size	modem_wakeup, .-modem_wakeup
 2156 002a 00BF     		.section	.rodata
 2157              		.align	2
 2158              	.LC50:
 2159 0450 41542347 		.ascii	"AT#GPIO=5,1,1,0\015\000"
 2159      50494F3D 
 2159      352C312C 
 2159      312C300D 
 2159      00
 2160 0461 000000   		.align	2
 2161              	.LC51:
 2162 0464 41542453 		.ascii	"AT$SUPLSEC=1\015\000"
 2162      55504C53 
 2162      45433D31 
 2162      0D00
 2163 0472 0000     		.align	2
 2164              	.LC52:
 2165 0474 41542453 		.ascii	"AT$SUPLV=2\015\000"
 2165      55504C56 
 2165      3D320D00 
 2166              		.align	2
 2167              	.LC53:
 2168 0480 41542441 		.ascii	"AT$AGPSEN=1\015\000"
 2168      47505345 
 2168      4E3D310D 
 2168      00
 2169 048d 000000   		.align	2
 2170              	.LC54:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 53


 2171 0490 41542453 		.ascii	"AT$SLP=1,\"supl.google.com:7275\"\015\000"
 2171      4C503D31 
 2171      2C227375 
 2171      706C2E67 
 2171      6F6F676C 
 2172 04b1 000000   		.align	2
 2173              	.LC55:
 2174 04b4 41542353 		.ascii	"AT#SGACT=1,0\015\012\000"
 2174      47414354 
 2174      3D312C30 
 2174      0D0A00
 2175 04c3 00       		.align	2
 2176              	.LC56:
 2177 04c4 4154244C 		.ascii	"AT$LCSLK=1,1\015\000"
 2177      43534C4B 
 2177      3D312C31 
 2177      0D00
 2178 04d2 0000     		.align	2
 2179              	.LC57:
 2180 04d4 41542447 		.ascii	"AT$GPSSLSR=1,1,,,,,2\015\000"
 2180      5053534C 
 2180      53523D31 
 2180      2C312C2C 
 2180      2C2C2C32 
 2181 04ea 0000     		.align	2
 2182              	.LC58:
 2183 04ec 4E00     		.ascii	"N\000"
 2184 04ee 0000     		.align	2
 2185              	.LC59:
 2186 04f0 41542447 		.ascii	"AT$GPSACP\015\000"
 2186      50534143 
 2186      500D00
 2187 04fb 00       		.align	2
 2188              	.LC60:
 2189 04fc 24475053 		.ascii	"$GPSACP: \000"
 2189      4143503A 
 2189      2000
 2190 0506 0000     		.align	2
 2191              	.LC61:
 2192 0508 24475053 		.ascii	"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s\000"
 2192      4143503A 
 2192      20252A66 
 2192      2C25664E 
 2192      2C256657 
 2193              		.global	__aeabi_fdiv
 2194              		.global	__aeabi_f2d
 2195              		.global	__aeabi_ddiv
 2196              		.global	__aeabi_dadd
 2197              		.global	__aeabi_d2f
 2198              		.align	2
 2199              	.LC62:
 2200 0528 41542347 		.ascii	"AT#GPIO=5,0,1,0\015\000"
 2200      50494F3D 
 2200      352C302C 
 2200      312C300D 
 2200      00
 2201 0539 000000   		.align	2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 54


 2202              	.LC63:
 2203 053c 41542447 		.ascii	"AT$GPSR=0\015\000"
 2203      5053523D 
 2203      300D00
 2204 0547 00       		.align	2
 2205              	.LC64:
 2206 0548 54696D65 		.ascii	"Time to lock GPS: %d\000"
 2206      20746F20 
 2206      6C6F636B 
 2206      20475053 
 2206      3A202564 
 2207              		.section	.text.modem_get_gps_coordinates,"ax",%progbits
 2208              		.align	2
 2209              		.global	modem_get_gps_coordinates
 2210              		.thumb
 2211              		.thumb_func
 2212              		.type	modem_get_gps_coordinates, %function
 2213              	modem_get_gps_coordinates:
 2214              	.LFB85:
 627:modem.c       **** 
 628:modem.c       **** 
 629:modem.c       ****     
 630:modem.c       **** // Returns lat,lom,alt data from Assited GPS (AGPS) system
 631:modem.c       **** gps_t modem_get_gps_coordinates(){
 2215              		.loc 1 631 0
 2216              		.cfi_startproc
 2217              		@ args = 0, pretend = 0, frame = 56
 2218              		@ frame_needed = 1, uses_anonymous_args = 0
 2219 0000 B0B5     		push	{r4, r5, r7, lr}
 2220              		.cfi_def_cfa_offset 16
 2221              		.cfi_offset 4, -16
 2222              		.cfi_offset 5, -12
 2223              		.cfi_offset 7, -8
 2224              		.cfi_offset 14, -4
 2225 0002 90B0     		sub	sp, sp, #64
 2226              		.cfi_def_cfa_offset 80
 2227 0004 02AF     		add	r7, sp, #8
 2228              		.cfi_def_cfa 7, 72
 2229 0006 7860     		str	r0, [r7, #4]
 632:modem.c       ****     gps_t gps;
 633:modem.c       ****     gps.altitude = 0;
 2230              		.loc 1 633 0
 2231 0008 4FF00003 		mov	r3, #0
 2232 000c FB61     		str	r3, [r7, #28]	@ float
 634:modem.c       ****     gps.longitude = 0;
 2233              		.loc 1 634 0
 2234 000e 4FF00003 		mov	r3, #0
 2235 0012 BB61     		str	r3, [r7, #24]	@ float
 635:modem.c       ****     gps.latitude = 0;
 2236              		.loc 1 635 0
 2237 0014 4FF00003 		mov	r3, #0
 2238 0018 7B61     		str	r3, [r7, #20]	@ float
 636:modem.c       ****     gps.time_to_lock =0;
 2239              		.loc 1 636 0
 2240 001a 0023     		movs	r3, #0
 2241 001c 3B84     		strh	r3, [r7, #32]	@ movhi
 637:modem.c       ****     gps.valid = 0;
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 55


 2242              		.loc 1 637 0
 2243 001e 0023     		movs	r3, #0
 2244 0020 87F82230 		strb	r3, [r7, #34]
 638:modem.c       ****     
 639:modem.c       ****     //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 640:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 2245              		.loc 1 640 0
 2246 0024 7F4B     		ldr	r3, .L142
 2247 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2248 0028 042B     		cmp	r3, #4
 2249 002a 07D0     		beq	.L133
 641:modem.c       ****         return gps;//where valid = 0
 2250              		.loc 1 641 0
 2251 002c 7B68     		ldr	r3, [r7, #4]
 2252 002e 1C46     		mov	r4, r3
 2253 0030 07F11403 		add	r3, r7, #20
 2254 0034 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2255 0036 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2256 003a EFE0     		b	.L132
 2257              	.L133:
 642:modem.c       ****     }
 643:modem.c       ****     
 644:modem.c       ****     long lock_time = getTimeStamp();
 2258              		.loc 1 644 0
 2259 003c FFF7FEFF 		bl	getTimeStamp
 2260 0040 3863     		str	r0, [r7, #48]
 645:modem.c       ****     
 646:modem.c       ****     // Enable this for the LTER module
 647:modem.c       ****     // Enable GPS Low-Dropout Regulator
 648:modem.c       ****     at_write_command("AT#GPIO=5,1,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2261              		.loc 1 648 0
 2262 0042 4FF4FA62 		mov	r2, #2000
 2263 0046 7849     		ldr	r1, .L142+4
 2264 0048 7848     		ldr	r0, .L142+8
 2265 004a FFF7FEFF 		bl	at_write_command
 649:modem.c       ****     
 650:modem.c       ****     // Configure SUPL connection params
 651:modem.c       ****     at_write_command("AT$SUPLSEC=1\r","OK",DEFAULT_AT_TIMEOUT);
 2266              		.loc 1 651 0
 2267 004e 4FF4FA62 		mov	r2, #2000
 2268 0052 7549     		ldr	r1, .L142+4
 2269 0054 7648     		ldr	r0, .L142+12
 2270 0056 FFF7FEFF 		bl	at_write_command
 652:modem.c       ****     
 653:modem.c       ****     // Use SUPL2.0
 654:modem.c       ****     at_write_command("AT$SUPLV=2\r","OK",DEFAULT_AT_TIMEOUT);
 2271              		.loc 1 654 0
 2272 005a 4FF4FA62 		mov	r2, #2000
 2273 005e 7249     		ldr	r1, .L142+4
 2274 0060 7448     		ldr	r0, .L142+16
 2275 0062 FFF7FEFF 		bl	at_write_command
 655:modem.c       ****     
 656:modem.c       ****     // Enable AGPS service
 657:modem.c       ****     at_write_command("AT$AGPSEN=1\r","OK",DEFAULT_AT_TIMEOUT);
 2276              		.loc 1 657 0
 2277 0066 4FF4FA62 		mov	r2, #2000
 2278 006a 6F49     		ldr	r1, .L142+4
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 56


 2279 006c 7248     		ldr	r0, .L142+20
 2280 006e FFF7FEFF 		bl	at_write_command
 658:modem.c       ****     
 659:modem.c       ****     // Chose SUPL server, use google public service
 660:modem.c       ****     at_write_command("AT$SLP=1,\"supl.google.com:7275\"\r","OK",DEFAULT_AT_TIMEOUT);
 2281              		.loc 1 660 0
 2282 0072 4FF4FA62 		mov	r2, #2000
 2283 0076 6C49     		ldr	r1, .L142+4
 2284 0078 7048     		ldr	r0, .L142+24
 2285 007a FFF7FEFF 		bl	at_write_command
 661:modem.c       ****     
 662:modem.c       ****     //pdp context has to be locked to carrier for this to work
 663:modem.c       ****     
 664:modem.c       ****     // Unlock context since it needs to be used by modem
 665:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 2286              		.loc 1 665 0
 2287 007e 4FF4FA62 		mov	r2, #2000
 2288 0082 6949     		ldr	r1, .L142+4
 2289 0084 6E48     		ldr	r0, .L142+28
 2290 0086 FFF7FEFF 		bl	at_write_command
 666:modem.c       ****     
 667:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",DEFAULT_AT_TIMEOUT);//ATT
 2291              		.loc 1 667 0
 2292 008a 4FF4FA62 		mov	r2, #2000
 2293 008e 6649     		ldr	r1, .L142+4
 2294 0090 6C48     		ldr	r0, .L142+32
 2295 0092 FFF7FEFF 		bl	at_write_command
 668:modem.c       ****     //at_write_command("AT$LCSLK=1,3\r","OK",DEFAULT_AT_TIMEOUT);//Verizon
 669:modem.c       ****     
 670:modem.c       ****     // Relock the context
 671:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 2296              		.loc 1 671 0
 2297 0096 42F21072 		movw	r2, #10000
 2298 009a 6349     		ldr	r1, .L142+4
 2299 009c 6A48     		ldr	r0, .L142+36
 2300 009e FFF7FEFF 		bl	at_write_command
 672:modem.c       ****     
 673:modem.c       ****     //start AGPS service
 674:modem.c       ****     at_write_command("AT$GPSSLSR=1,1,,,,,2\r","OK",DEFAULT_AT_TIMEOUT); 
 2301              		.loc 1 674 0
 2302 00a2 4FF4FA62 		mov	r2, #2000
 2303 00a6 6049     		ldr	r1, .L142+4
 2304 00a8 6848     		ldr	r0, .L142+40
 2305 00aa FFF7FEFF 		bl	at_write_command
 675:modem.c       ****     
 676:modem.c       ****     
 677:modem.c       ****     // Start the AGPS service
 678:modem.c       ****     // Will keep receiving a buynch of commas without numbers, until GPS locks
 679:modem.c       ****     // Good lock will return a string with "N" and "W" coordinates
 680:modem.c       ****     
 681:modem.c       ****     
 682:modem.c       ****  
 683:modem.c       ****     uint8 gps_status = 0;
 2306              		.loc 1 683 0
 2307 00ae 0023     		movs	r3, #0
 2308 00b0 87F82F30 		strb	r3, [r7, #47]
 2309              	.LBB14:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 57


 684:modem.c       ****     for(uint16 i=0;i<200;i++){
 2310              		.loc 1 684 0
 2311 00b4 0023     		movs	r3, #0
 2312 00b6 FB86     		strh	r3, [r7, #54]	@ movhi
 2313 00b8 13E0     		b	.L135
 2314              	.L138:
 685:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2315              		.loc 1 685 0
 2316 00ba 4FF4FA62 		mov	r2, #2000
 2317 00be 6449     		ldr	r1, .L142+44
 2318 00c0 6448     		ldr	r0, .L142+48
 2319 00c2 FFF7FEFF 		bl	at_write_command
 2320 00c6 0346     		mov	r3, r0
 2321 00c8 87F82F30 		strb	r3, [r7, #47]
 686:modem.c       ****         if(gps_status){
 2322              		.loc 1 686 0
 2323 00cc 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2324 00d0 002B     		cmp	r3, #0
 2325 00d2 0AD1     		bne	.L141
 687:modem.c       ****             break;   
 688:modem.c       ****         }
 689:modem.c       ****         CyDelay(1000u);// Wait for a second -- BLOCKING. Could be more elegant to incorporate this 
 2326              		.loc 1 689 0 discriminator 2
 2327 00d4 4FF47A70 		mov	r0, #1000
 2328 00d8 FFF7FEFF 		bl	CyDelay
 684:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2329              		.loc 1 684 0 discriminator 2
 2330 00dc FB8E     		ldrh	r3, [r7, #54]
 2331 00de 0133     		adds	r3, r3, #1
 2332 00e0 FB86     		strh	r3, [r7, #54]	@ movhi
 2333              	.L135:
 684:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2334              		.loc 1 684 0 is_stmt 0 discriminator 1
 2335 00e2 FB8E     		ldrh	r3, [r7, #54]
 2336 00e4 C72B     		cmp	r3, #199
 2337 00e6 E8D9     		bls	.L138
 2338 00e8 00E0     		b	.L137
 2339              	.L141:
 687:modem.c       ****             break;   
 2340              		.loc 1 687 0 is_stmt 1
 2341 00ea 00BF     		nop
 2342              	.L137:
 2343              	.LBE14:
 690:modem.c       ****     }
 691:modem.c       ****     
 692:modem.c       ****     //parse data here
 693:modem.c       ****     
 694:modem.c       ****     //example $GPSACP: 210926.000,4217.8003N,08341.3158W,2.3,258.2,3,17.8,4.8,2.6,220520,05,00
 695:modem.c       ****     float lat;
 696:modem.c       ****     float lon;
 697:modem.c       ****     float alt;
 698:modem.c       ****     
 699:modem.c       ****     // Look for $GPSACP:  in uart_received_string and save to sl
 700:modem.c       ****     // char *strstr(const char *haystack, const char *needle) function finds the first occurrence o
 701:modem.c       ****     char *s1 = strstr(uart_received_string,"$GPSACP: ");
 2344              		.loc 1 701 0
 2345 00ec 5A49     		ldr	r1, .L142+52
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 58


 2346 00ee 5B48     		ldr	r0, .L142+56
 2347 00f0 FFF7FEFF 		bl	strstr
 2348 00f4 B862     		str	r0, [r7, #40]
 702:modem.c       ****     // Look in sl for lat, long, alt and save in match 
 703:modem.c       ****     // int sscanf(const char *str, const char *format, ...) reads formatted input from a string.
 704:modem.c       ****     int match = sscanf(s1,"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s",&lat,&lon,&alt);
 2349              		.loc 1 704 0
 2350 00f6 07F10C01 		add	r1, r7, #12
 2351 00fa 07F11002 		add	r2, r7, #16
 2352 00fe 07F10803 		add	r3, r7, #8
 2353 0102 0093     		str	r3, [sp]
 2354 0104 0B46     		mov	r3, r1
 2355 0106 5649     		ldr	r1, .L142+60
 2356 0108 B86A     		ldr	r0, [r7, #40]
 2357 010a FFF7FEFF 		bl	sscanf
 2358 010e 7862     		str	r0, [r7, #36]
 705:modem.c       ****     if(match >= 3){
 2359              		.loc 1 705 0
 2360 0110 7B6A     		ldr	r3, [r7, #36]
 2361 0112 022B     		cmp	r3, #2
 2362 0114 60DD     		ble	.L139
 706:modem.c       ****         // Calculate lat and lon
 707:modem.c       ****         // floorf(x) calculates the largest integer that is less than or equal to x. 
 708:modem.c       ****         // fmod(double x, double y) returns the remainder of x divided by y.
 709:modem.c       ****         lat = floorf(lat/100) + fmod(lat,100)/60;
 2363              		.loc 1 709 0
 2364 0116 3B69     		ldr	r3, [r7, #16]	@ float
 2365 0118 5249     		ldr	r1, .L142+64
 2366 011a 1846     		mov	r0, r3
 2367 011c FFF7FEFF 		bl	__aeabi_fdiv
 2368 0120 0346     		mov	r3, r0
 2369 0122 1846     		mov	r0, r3
 2370 0124 FFF7FEFF 		bl	floorf
 2371 0128 0346     		mov	r3, r0
 2372 012a 1846     		mov	r0, r3
 2373 012c FFF7FEFF 		bl	__aeabi_f2d
 2374 0130 0446     		mov	r4, r0
 2375 0132 0D46     		mov	r5, r1
 2376 0134 3B69     		ldr	r3, [r7, #16]	@ float
 2377 0136 1846     		mov	r0, r3
 2378 0138 FFF7FEFF 		bl	__aeabi_f2d
 2379 013c 4FF00002 		mov	r2, #0
 2380 0140 494B     		ldr	r3, .L142+68
 2381 0142 FFF7FEFF 		bl	fmod
 2382 0146 4FF00002 		mov	r2, #0
 2383 014a 484B     		ldr	r3, .L142+72
 2384 014c FFF7FEFF 		bl	__aeabi_ddiv
 2385 0150 0246     		mov	r2, r0
 2386 0152 0B46     		mov	r3, r1
 2387 0154 2046     		mov	r0, r4
 2388 0156 2946     		mov	r1, r5
 2389 0158 FFF7FEFF 		bl	__aeabi_dadd
 2390 015c 0346     		mov	r3, r0
 2391 015e 0C46     		mov	r4, r1
 2392 0160 1846     		mov	r0, r3
 2393 0162 2146     		mov	r1, r4
 2394 0164 FFF7FEFF 		bl	__aeabi_d2f
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 59


 2395 0168 0346     		mov	r3, r0
 2396 016a 3B61     		str	r3, [r7, #16]	@ float
 710:modem.c       ****         lon = -(floorf(lon/100) + fmod(lon,100)/60);
 2397              		.loc 1 710 0
 2398 016c FB68     		ldr	r3, [r7, #12]	@ float
 2399 016e 3D49     		ldr	r1, .L142+64
 2400 0170 1846     		mov	r0, r3
 2401 0172 FFF7FEFF 		bl	__aeabi_fdiv
 2402 0176 0346     		mov	r3, r0
 2403 0178 1846     		mov	r0, r3
 2404 017a FFF7FEFF 		bl	floorf
 2405 017e 0346     		mov	r3, r0
 2406 0180 1846     		mov	r0, r3
 2407 0182 FFF7FEFF 		bl	__aeabi_f2d
 2408 0186 0446     		mov	r4, r0
 2409 0188 0D46     		mov	r5, r1
 2410 018a FB68     		ldr	r3, [r7, #12]	@ float
 2411 018c 1846     		mov	r0, r3
 2412 018e FFF7FEFF 		bl	__aeabi_f2d
 2413 0192 4FF00002 		mov	r2, #0
 2414 0196 344B     		ldr	r3, .L142+68
 2415 0198 FFF7FEFF 		bl	fmod
 2416 019c 4FF00002 		mov	r2, #0
 2417 01a0 324B     		ldr	r3, .L142+72
 2418 01a2 FFF7FEFF 		bl	__aeabi_ddiv
 2419 01a6 0246     		mov	r2, r0
 2420 01a8 0B46     		mov	r3, r1
 2421 01aa 2046     		mov	r0, r4
 2422 01ac 2946     		mov	r1, r5
 2423 01ae FFF7FEFF 		bl	__aeabi_dadd
 2424 01b2 0346     		mov	r3, r0
 2425 01b4 0C46     		mov	r4, r1
 2426 01b6 1846     		mov	r0, r3
 2427 01b8 2146     		mov	r1, r4
 2428 01ba FFF7FEFF 		bl	__aeabi_d2f
 2429 01be 0346     		mov	r3, r0
 2430 01c0 83F00043 		eor	r3, r3, #-2147483648
 2431 01c4 FB60     		str	r3, [r7, #12]	@ float
 711:modem.c       ****         gps.altitude = alt; // Save alt, lat, and lon to the variable gps.
 2432              		.loc 1 711 0
 2433 01c6 BB68     		ldr	r3, [r7, #8]	@ float
 2434 01c8 FB61     		str	r3, [r7, #28]	@ float
 712:modem.c       ****         gps.latitude = lat;
 2435              		.loc 1 712 0
 2436 01ca 3B69     		ldr	r3, [r7, #16]	@ float
 2437 01cc 7B61     		str	r3, [r7, #20]	@ float
 713:modem.c       ****         gps.longitude = lon;
 2438              		.loc 1 713 0
 2439 01ce FB68     		ldr	r3, [r7, #12]	@ float
 2440 01d0 BB61     		str	r3, [r7, #24]	@ float
 714:modem.c       ****         gps.valid = 1;
 2441              		.loc 1 714 0
 2442 01d2 0123     		movs	r3, #1
 2443 01d4 87F82230 		strb	r3, [r7, #34]
 2444              	.L139:
 715:modem.c       ****     }
 716:modem.c       ****     
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 60


 717:modem.c       ****     // Disable LDO, just in case
 718:modem.c       ****     at_write_command("AT#GPIO=5,0,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2445              		.loc 1 718 0
 2446 01d8 4FF4FA62 		mov	r2, #2000
 2447 01dc 1249     		ldr	r1, .L142+4
 2448 01de 2448     		ldr	r0, .L142+76
 2449 01e0 FFF7FEFF 		bl	at_write_command
 719:modem.c       ****     
 720:modem.c       ****     // Flush modem's GPS data, just in case
 721:modem.c       ****     at_write_command("AT$GPSR=0\r","OK",DEFAULT_AT_TIMEOUT);
 2450              		.loc 1 721 0
 2451 01e4 4FF4FA62 		mov	r2, #2000
 2452 01e8 0F49     		ldr	r1, .L142+4
 2453 01ea 2248     		ldr	r0, .L142+80
 2454 01ec FFF7FEFF 		bl	at_write_command
 722:modem.c       ****     
 723:modem.c       ****     
 724:modem.c       ****     
 725:modem.c       ****     
 726:modem.c       ****     
 727:modem.c       ****     /* Relevant to 3g modem, can ignore
 728:modem.c       ****     
 729:modem.c       ****     //Setthe GPS Quality of Servicep arameters. Inorder,theyare<horiz_accuracy(inmeters)>,<vertical
 730:modem.c       ****     //AT$GPSQOS=50,50,100,0
 731:modem.c       ****     at_write_command("AT$GPSQOS=50,50,100,0\r","OK",DEFAULT_AT_TIMEOUT);
 732:modem.c       ****     
 733:modem.c       ****     //SettheSUPLLocationPlatform(SLP)addressoftheserverthatwillprovidetheA-GPS data:
 734:modem.c       ****     at_write_command("AT$LCSSLP=1,\"supl.google.com\"\r","OK",DEFAULT_AT_TIMEOUT);
 735:modem.c       ****     
 736:modem.c       ****     //unlock contedt, simnce its being used by modem
 737:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 738:modem.c       ****     //Lock context 1 for LoCation Services (LCS) use only
 739:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",5000u);
 740:modem.c       ****     
 741:modem.c       ****     //unlock contedt, simnce its being used by modem
 742:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 743:modem.c       ****     
 744:modem.c       ****     //EnableunsolicitedNMEAGPSdataintheformatof<NMEASENTENCE><CR>
 745:modem.c       ****     at_write_command("AT$GPSNMUN=2,1,0,0,0,0,0\r","OK",DEFAULT_AT_TIMEOUT);
 746:modem.c       ****     
 747:modem.c       ****     //StartGPSlocationservicerequest.Sendingthiscommandsets$GPSP=1
 748:modem.c       ****    uint8 gps_status = 0;
 749:modem.c       ****     for(uint16 i=0;i<200;i++){
 750:modem.c       ****         gps_status = at_write_command("AT$GPSSLSR=1,1,,,,,0,255\r","N",3000u);
 751:modem.c       ****         if(gps_status){
 752:modem.c       ****             break;   
 753:modem.c       ****         }
 754:modem.c       ****   }
 755:modem.c       ****     
 756:modem.c       ****     //$GPGGA,030307.691,4217.7923,N,08341.3240,W,1,05,2.25,225.0,M,,M,,0000*6E
 757:modem.c       ****     //$GPGGA,213852.000,4600.8755,N,09327.7008,W,1,05,3.00,292.0,M,,M,,0000*6E
 758:modem.c       ****     if(gps_status){
 759:modem.c       ****         float lat,lon,alt = 0;
 760:modem.c       ****         if(sscanf(uart_received_string,"%*s,%f,N,%f,W,%*s",&lat,&lon) > 0){
 761:modem.c       ****             gps.altitude = alt;
 762:modem.c       ****             gps.latitude = lat/60;
 763:modem.c       ****             gps.longitude = lon/60;
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 61


 764:modem.c       ****             gps.valid = 1;
 765:modem.c       ****         }
 766:modem.c       ****         
 767:modem.c       ****     }
 768:modem.c       ****     
 769:modem.c       ****     //turn off gps
 770:modem.c       ****     //AT$GPSP=0
 771:modem.c       ****     at_write_command("AT$GPSP=0\r","OK",DEFAULT_AT_TIMEOUT);
 772:modem.c       ****     
 773:modem.c       ****     */
 774:modem.c       **** 
 775:modem.c       ****     // Calculate time to lock into GPS location and save in variable lock_time
 776:modem.c       ****     lock_time = getTimeStamp() - lock_time;
 2455              		.loc 1 776 0
 2456 01f0 FFF7FEFF 		bl	getTimeStamp
 2457 01f4 0246     		mov	r2, r0
 2458 01f6 3B6B     		ldr	r3, [r7, #48]
 2459 01f8 D31A     		subs	r3, r2, r3
 2460 01fa 3B63     		str	r3, [r7, #48]
 777:modem.c       ****     gps.time_to_lock = lock_time;
 2461              		.loc 1 777 0
 2462 01fc 3B6B     		ldr	r3, [r7, #48]
 2463 01fe 9BB2     		uxth	r3, r3
 2464 0200 3B84     		strh	r3, [r7, #32]	@ movhi
 778:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Time to lock GPS: %d", gps.time_to_lock);
 2465              		.loc 1 778 0
 2466 0202 3B8C     		ldrh	r3, [r7, #32]
 2467 0204 1A46     		mov	r2, r3
 2468 0206 1C49     		ldr	r1, .L142+84
 2469 0208 0020     		movs	r0, #0
 2470 020a FFF7FEFF 		bl	printNotif
 779:modem.c       ****     
 780:modem.c       ****     return gps;
 2471              		.loc 1 780 0
 2472 020e 7B68     		ldr	r3, [r7, #4]
 2473 0210 1C46     		mov	r4, r3
 2474 0212 07F11403 		add	r3, r7, #20
 2475 0216 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2476 0218 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2477              	.L132:
 781:modem.c       ****     
 782:modem.c       **** }
 2478              		.loc 1 782 0
 2479 021c 7868     		ldr	r0, [r7, #4]
 2480 021e 3837     		adds	r7, r7, #56
 2481              		.cfi_def_cfa_offset 16
 2482 0220 BD46     		mov	sp, r7
 2483              		.cfi_def_cfa_register 13
 2484              		@ sp needed
 2485 0222 B0BD     		pop	{r4, r5, r7, pc}
 2486              	.L143:
 2487              		.align	2
 2488              	.L142:
 2489 0224 00000000 		.word	modem_state
 2490 0228 00000000 		.word	.LC0
 2491 022c 50040000 		.word	.LC50
 2492 0230 64040000 		.word	.LC51
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 62


 2493 0234 74040000 		.word	.LC52
 2494 0238 80040000 		.word	.LC53
 2495 023c 90040000 		.word	.LC54
 2496 0240 B4040000 		.word	.LC55
 2497 0244 C4040000 		.word	.LC56
 2498 0248 D8020000 		.word	.LC27
 2499 024c D4040000 		.word	.LC57
 2500 0250 EC040000 		.word	.LC58
 2501 0254 F0040000 		.word	.LC59
 2502 0258 FC040000 		.word	.LC60
 2503 025c 00000000 		.word	uart_received_string
 2504 0260 08050000 		.word	.LC61
 2505 0264 0000C842 		.word	1120403456
 2506 0268 00005940 		.word	1079574528
 2507 026c 00004E40 		.word	1078853632
 2508 0270 28050000 		.word	.LC62
 2509 0274 3C050000 		.word	.LC63
 2510 0278 48050000 		.word	.LC64
 2511              		.cfi_endproc
 2512              	.LFE85:
 2513              		.size	modem_get_gps_coordinates, .-modem_get_gps_coordinates
 2514              		.text
 2515              	.Letext0:
 2516              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2517              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2518              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2519              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2520              		.file 6 "testing.h"
 2521              		.file 7 "modem.h"
 2522              		.file 8 "data.h"
 2523              		.file 9 "notoriOS.h"
 2524              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 2525              		.section	.debug_info,"",%progbits
 2526              	.Ldebug_info0:
 2527 0000 550A0000 		.4byte	0xa55
 2528 0004 0400     		.2byte	0x4
 2529 0006 00000000 		.4byte	.Ldebug_abbrev0
 2530 000a 04       		.byte	0x4
 2531 000b 01       		.uleb128 0x1
 2532 000c 3C000000 		.4byte	.LASF136
 2533 0010 0C       		.byte	0xc
 2534 0011 18030000 		.4byte	.LASF137
 2535 0015 B6040000 		.4byte	.LASF138
 2536 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 2537 001d 00000000 		.4byte	0
 2538 0021 00000000 		.4byte	.Ldebug_line0
 2539 0025 02       		.uleb128 0x2
 2540 0026 01       		.byte	0x1
 2541 0027 06       		.byte	0x6
 2542 0028 26010000 		.4byte	.LASF0
 2543 002c 03       		.uleb128 0x3
 2544 002d 28000000 		.4byte	.LASF4
 2545 0031 02       		.byte	0x2
 2546 0032 1D       		.byte	0x1d
 2547 0033 37000000 		.4byte	0x37
 2548 0037 02       		.uleb128 0x2
 2549 0038 01       		.byte	0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 63


 2550 0039 08       		.byte	0x8
 2551 003a 83040000 		.4byte	.LASF1
 2552 003e 02       		.uleb128 0x2
 2553 003f 02       		.byte	0x2
 2554 0040 05       		.byte	0x5
 2555 0041 50030000 		.4byte	.LASF2
 2556 0045 02       		.uleb128 0x2
 2557 0046 02       		.byte	0x2
 2558 0047 07       		.byte	0x7
 2559 0048 E3010000 		.4byte	.LASF3
 2560 004c 03       		.uleb128 0x3
 2561 004d 65030000 		.4byte	.LASF5
 2562 0051 02       		.byte	0x2
 2563 0052 3F       		.byte	0x3f
 2564 0053 57000000 		.4byte	0x57
 2565 0057 02       		.uleb128 0x2
 2566 0058 04       		.byte	0x4
 2567 0059 05       		.byte	0x5
 2568 005a 80010000 		.4byte	.LASF6
 2569 005e 03       		.uleb128 0x3
 2570 005f 06020000 		.4byte	.LASF7
 2571 0063 02       		.byte	0x2
 2572 0064 41       		.byte	0x41
 2573 0065 69000000 		.4byte	0x69
 2574 0069 02       		.uleb128 0x2
 2575 006a 04       		.byte	0x4
 2576 006b 07       		.byte	0x7
 2577 006c 7D020000 		.4byte	.LASF8
 2578 0070 02       		.uleb128 0x2
 2579 0071 08       		.byte	0x8
 2580 0072 05       		.byte	0x5
 2581 0073 18010000 		.4byte	.LASF9
 2582 0077 02       		.uleb128 0x2
 2583 0078 08       		.byte	0x8
 2584 0079 07       		.byte	0x7
 2585 007a D7000000 		.4byte	.LASF10
 2586 007e 04       		.uleb128 0x4
 2587 007f 04       		.byte	0x4
 2588 0080 05       		.byte	0x5
 2589 0081 696E7400 		.ascii	"int\000"
 2590 0085 02       		.uleb128 0x2
 2591 0086 04       		.byte	0x4
 2592 0087 07       		.byte	0x7
 2593 0088 8E050000 		.4byte	.LASF11
 2594 008c 03       		.uleb128 0x3
 2595 008d 87060000 		.4byte	.LASF12
 2596 0091 03       		.byte	0x3
 2597 0092 18       		.byte	0x18
 2598 0093 2C000000 		.4byte	0x2c
 2599 0097 03       		.uleb128 0x3
 2600 0098 7B040000 		.4byte	.LASF13
 2601 009c 03       		.byte	0x3
 2602 009d 2C       		.byte	0x2c
 2603 009e 4C000000 		.4byte	0x4c
 2604 00a2 03       		.uleb128 0x3
 2605 00a3 48060000 		.4byte	.LASF14
 2606 00a7 03       		.byte	0x3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 64


 2607 00a8 30       		.byte	0x30
 2608 00a9 5E000000 		.4byte	0x5e
 2609 00ad 05       		.uleb128 0x5
 2610 00ae A2010000 		.4byte	.LASF15
 2611 00b2 04       		.byte	0x4
 2612 00b3 9201     		.2byte	0x192
 2613 00b5 37000000 		.4byte	0x37
 2614 00b9 05       		.uleb128 0x5
 2615 00ba 0B000000 		.4byte	.LASF16
 2616 00be 04       		.byte	0x4
 2617 00bf 9301     		.2byte	0x193
 2618 00c1 45000000 		.4byte	0x45
 2619 00c5 05       		.uleb128 0x5
 2620 00c6 F6010000 		.4byte	.LASF17
 2621 00ca 04       		.byte	0x4
 2622 00cb 9401     		.2byte	0x194
 2623 00cd 69000000 		.4byte	0x69
 2624 00d1 05       		.uleb128 0x5
 2625 00d2 9B060000 		.4byte	.LASF18
 2626 00d6 04       		.byte	0x4
 2627 00d7 9601     		.2byte	0x196
 2628 00d9 3E000000 		.4byte	0x3e
 2629 00dd 05       		.uleb128 0x5
 2630 00de B7010000 		.4byte	.LASF19
 2631 00e2 04       		.byte	0x4
 2632 00e3 9701     		.2byte	0x197
 2633 00e5 57000000 		.4byte	0x57
 2634 00e9 02       		.uleb128 0x2
 2635 00ea 04       		.byte	0x4
 2636 00eb 04       		.byte	0x4
 2637 00ec 51040000 		.4byte	.LASF20
 2638 00f0 02       		.uleb128 0x2
 2639 00f1 08       		.byte	0x8
 2640 00f2 04       		.byte	0x4
 2641 00f3 B0010000 		.4byte	.LASF21
 2642 00f7 02       		.uleb128 0x2
 2643 00f8 01       		.byte	0x1
 2644 00f9 08       		.byte	0x8
 2645 00fa 75050000 		.4byte	.LASF22
 2646 00fe 02       		.uleb128 0x2
 2647 00ff 08       		.byte	0x8
 2648 0100 04       		.byte	0x4
 2649 0101 69050000 		.4byte	.LASF23
 2650 0105 02       		.uleb128 0x2
 2651 0106 04       		.byte	0x4
 2652 0107 07       		.byte	0x7
 2653 0108 D3030000 		.4byte	.LASF24
 2654 010c 06       		.uleb128 0x6
 2655 010d 04       		.byte	0x4
 2656 010e F7000000 		.4byte	0xf7
 2657 0112 06       		.uleb128 0x6
 2658 0113 04       		.byte	0x4
 2659 0114 18010000 		.4byte	0x118
 2660 0118 07       		.uleb128 0x7
 2661 0119 F7000000 		.4byte	0xf7
 2662 011d 08       		.uleb128 0x8
 2663 011e F7000000 		.4byte	0xf7
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 65


 2664 0122 2D010000 		.4byte	0x12d
 2665 0126 09       		.uleb128 0x9
 2666 0127 05010000 		.4byte	0x105
 2667 012b 17       		.byte	0x17
 2668 012c 00       		.byte	0
 2669 012d 0A       		.uleb128 0xa
 2670 012e 746D00   		.ascii	"tm\000"
 2671 0131 24       		.byte	0x24
 2672 0132 05       		.byte	0x5
 2673 0133 21       		.byte	0x21
 2674 0134 A5010000 		.4byte	0x1a5
 2675 0138 0B       		.uleb128 0xb
 2676 0139 51060000 		.4byte	.LASF25
 2677 013d 05       		.byte	0x5
 2678 013e 23       		.byte	0x23
 2679 013f 7E000000 		.4byte	0x7e
 2680 0143 00       		.byte	0
 2681 0144 0B       		.uleb128 0xb
 2682 0145 CC030000 		.4byte	.LASF26
 2683 0149 05       		.byte	0x5
 2684 014a 24       		.byte	0x24
 2685 014b 7E000000 		.4byte	0x7e
 2686 014f 04       		.byte	0x4
 2687 0150 0B       		.uleb128 0xb
 2688 0151 18000000 		.4byte	.LASF27
 2689 0155 05       		.byte	0x5
 2690 0156 25       		.byte	0x25
 2691 0157 7E000000 		.4byte	0x7e
 2692 015b 08       		.byte	0x8
 2693 015c 0B       		.uleb128 0xb
 2694 015d 33060000 		.4byte	.LASF28
 2695 0161 05       		.byte	0x5
 2696 0162 26       		.byte	0x26
 2697 0163 7E000000 		.4byte	0x7e
 2698 0167 0C       		.byte	0xc
 2699 0168 0B       		.uleb128 0xb
 2700 0169 28020000 		.4byte	.LASF29
 2701 016d 05       		.byte	0x5
 2702 016e 27       		.byte	0x27
 2703 016f 7E000000 		.4byte	0x7e
 2704 0173 10       		.byte	0x10
 2705 0174 0B       		.uleb128 0xb
 2706 0175 43020000 		.4byte	.LASF30
 2707 0179 05       		.byte	0x5
 2708 017a 28       		.byte	0x28
 2709 017b 7E000000 		.4byte	0x7e
 2710 017f 14       		.byte	0x14
 2711 0180 0B       		.uleb128 0xb
 2712 0181 4A050000 		.4byte	.LASF31
 2713 0185 05       		.byte	0x5
 2714 0186 29       		.byte	0x29
 2715 0187 7E000000 		.4byte	0x7e
 2716 018b 18       		.byte	0x18
 2717 018c 0B       		.uleb128 0xb
 2718 018d 20000000 		.4byte	.LASF32
 2719 0191 05       		.byte	0x5
 2720 0192 2A       		.byte	0x2a
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 66


 2721 0193 7E000000 		.4byte	0x7e
 2722 0197 1C       		.byte	0x1c
 2723 0198 0B       		.uleb128 0xb
 2724 0199 DF020000 		.4byte	.LASF33
 2725 019d 05       		.byte	0x5
 2726 019e 2B       		.byte	0x2b
 2727 019f 7E000000 		.4byte	0x7e
 2728 01a3 20       		.byte	0x20
 2729 01a4 00       		.byte	0
 2730 01a5 0C       		.uleb128 0xc
 2731 01a6 8101     		.2byte	0x181
 2732 01a8 06       		.byte	0x6
 2733 01a9 0A       		.byte	0xa
 2734 01aa D3010000 		.4byte	0x1d3
 2735 01ae 0B       		.uleb128 0xb
 2736 01af 17040000 		.4byte	.LASF34
 2737 01b3 06       		.byte	0x6
 2738 01b4 0C       		.byte	0xc
 2739 01b5 D3010000 		.4byte	0x1d3
 2740 01b9 00       		.byte	0
 2741 01ba 0B       		.uleb128 0xb
 2742 01bb 58060000 		.4byte	.LASF35
 2743 01bf 06       		.byte	0x6
 2744 01c0 0D       		.byte	0xd
 2745 01c1 AD000000 		.4byte	0xad
 2746 01c5 80       		.byte	0x80
 2747 01c6 0B       		.uleb128 0xb
 2748 01c7 1E050000 		.4byte	.LASF36
 2749 01cb 06       		.byte	0x6
 2750 01cc 0F       		.byte	0xf
 2751 01cd E3010000 		.4byte	0x1e3
 2752 01d1 81       		.byte	0x81
 2753 01d2 00       		.byte	0
 2754 01d3 08       		.uleb128 0x8
 2755 01d4 F7000000 		.4byte	0xf7
 2756 01d8 E3010000 		.4byte	0x1e3
 2757 01dc 09       		.uleb128 0x9
 2758 01dd 05010000 		.4byte	0x105
 2759 01e1 7F       		.byte	0x7f
 2760 01e2 00       		.byte	0
 2761 01e3 08       		.uleb128 0x8
 2762 01e4 F7000000 		.4byte	0xf7
 2763 01e8 F3010000 		.4byte	0x1f3
 2764 01ec 09       		.uleb128 0x9
 2765 01ed 05010000 		.4byte	0x105
 2766 01f1 FF       		.byte	0xff
 2767 01f2 00       		.byte	0
 2768 01f3 03       		.uleb128 0x3
 2769 01f4 06050000 		.4byte	.LASF37
 2770 01f8 06       		.byte	0x6
 2771 01f9 10       		.byte	0x10
 2772 01fa A5010000 		.4byte	0x1a5
 2773 01fe 0D       		.uleb128 0xd
 2774 01ff 3C       		.byte	0x3c
 2775 0200 07       		.byte	0x7
 2776 0201 2C       		.byte	0x2c
 2777 0202 2B020000 		.4byte	0x22b
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 67


 2778 0206 0B       		.uleb128 0xb
 2779 0207 2C060000 		.4byte	.LASF38
 2780 020b 07       		.byte	0x7
 2781 020c 2D       		.byte	0x2d
 2782 020d 2B020000 		.4byte	0x22b
 2783 0211 00       		.byte	0
 2784 0212 0B       		.uleb128 0xb
 2785 0213 A0050000 		.4byte	.LASF39
 2786 0217 07       		.byte	0x7
 2787 0218 2E       		.byte	0x2e
 2788 0219 2B020000 		.4byte	0x22b
 2789 021d 14       		.byte	0x14
 2790 021e 0B       		.uleb128 0xb
 2791 021f 19050000 		.4byte	.LASF40
 2792 0223 07       		.byte	0x7
 2793 0224 2F       		.byte	0x2f
 2794 0225 2B020000 		.4byte	0x22b
 2795 0229 28       		.byte	0x28
 2796 022a 00       		.byte	0
 2797 022b 08       		.uleb128 0x8
 2798 022c F7000000 		.4byte	0xf7
 2799 0230 3B020000 		.4byte	0x23b
 2800 0234 09       		.uleb128 0x9
 2801 0235 05010000 		.4byte	0x105
 2802 0239 13       		.byte	0x13
 2803 023a 00       		.byte	0
 2804 023b 03       		.uleb128 0x3
 2805 023c B4050000 		.4byte	.LASF41
 2806 0240 07       		.byte	0x7
 2807 0241 30       		.byte	0x30
 2808 0242 FE010000 		.4byte	0x1fe
 2809 0246 0D       		.uleb128 0xd
 2810 0247 10       		.byte	0x10
 2811 0248 07       		.byte	0x7
 2812 0249 32       		.byte	0x32
 2813 024a AF020000 		.4byte	0x2af
 2814 024e 0B       		.uleb128 0xb
 2815 024f CF060000 		.4byte	.LASF42
 2816 0253 07       		.byte	0x7
 2817 0254 33       		.byte	0x33
 2818 0255 AD000000 		.4byte	0xad
 2819 0259 00       		.byte	0
 2820 025a 0E       		.uleb128 0xe
 2821 025b 62657200 		.ascii	"ber\000"
 2822 025f 07       		.byte	0x7
 2823 0260 34       		.byte	0x34
 2824 0261 AD000000 		.4byte	0xad
 2825 0265 01       		.byte	0x1
 2826 0266 0B       		.uleb128 0xb
 2827 0267 B1040000 		.4byte	.LASF43
 2828 026b 07       		.byte	0x7
 2829 026c 35       		.byte	0x35
 2830 026d AD000000 		.4byte	0xad
 2831 0271 02       		.byte	0x2
 2832 0272 0B       		.uleb128 0xb
 2833 0273 32010000 		.4byte	.LASF44
 2834 0277 07       		.byte	0x7
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 68


 2835 0278 36       		.byte	0x36
 2836 0279 AD000000 		.4byte	0xad
 2837 027d 03       		.byte	0x3
 2838 027e 0B       		.uleb128 0xb
 2839 027f A7040000 		.4byte	.LASF45
 2840 0283 07       		.byte	0x7
 2841 0284 37       		.byte	0x37
 2842 0285 AD000000 		.4byte	0xad
 2843 0289 04       		.byte	0x4
 2844 028a 0B       		.uleb128 0xb
 2845 028b 25050000 		.4byte	.LASF46
 2846 028f 07       		.byte	0x7
 2847 0290 38       		.byte	0x38
 2848 0291 AD000000 		.4byte	0xad
 2849 0295 05       		.byte	0x5
 2850 0296 0B       		.uleb128 0xb
 2851 0297 37010000 		.4byte	.LASF47
 2852 029b 07       		.byte	0x7
 2853 029c 39       		.byte	0x39
 2854 029d 7E000000 		.4byte	0x7e
 2855 02a1 08       		.byte	0x8
 2856 02a2 0B       		.uleb128 0xb
 2857 02a3 33030000 		.4byte	.LASF48
 2858 02a7 07       		.byte	0x7
 2859 02a8 3A       		.byte	0x3a
 2860 02a9 7E000000 		.4byte	0x7e
 2861 02ad 0C       		.byte	0xc
 2862 02ae 00       		.byte	0
 2863 02af 03       		.uleb128 0x3
 2864 02b0 2A050000 		.4byte	.LASF49
 2865 02b4 07       		.byte	0x7
 2866 02b5 3B       		.byte	0x3b
 2867 02b6 46020000 		.4byte	0x246
 2868 02ba 0D       		.uleb128 0xd
 2869 02bb 10       		.byte	0x10
 2870 02bc 07       		.byte	0x7
 2871 02bd 3D       		.byte	0x3d
 2872 02be FF020000 		.4byte	0x2ff
 2873 02c2 0B       		.uleb128 0xb
 2874 02c3 0E040000 		.4byte	.LASF50
 2875 02c7 07       		.byte	0x7
 2876 02c8 3E       		.byte	0x3e
 2877 02c9 E9000000 		.4byte	0xe9
 2878 02cd 00       		.byte	0
 2879 02ce 0B       		.uleb128 0xb
 2880 02cf 32000000 		.4byte	.LASF51
 2881 02d3 07       		.byte	0x7
 2882 02d4 3F       		.byte	0x3f
 2883 02d5 E9000000 		.4byte	0xe9
 2884 02d9 04       		.byte	0x4
 2885 02da 0B       		.uleb128 0xb
 2886 02db 99010000 		.4byte	.LASF52
 2887 02df 07       		.byte	0x7
 2888 02e0 40       		.byte	0x40
 2889 02e1 E9000000 		.4byte	0xe9
 2890 02e5 08       		.byte	0x8
 2891 02e6 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 69


 2892 02e7 BD020000 		.4byte	.LASF53
 2893 02eb 07       		.byte	0x7
 2894 02ec 41       		.byte	0x41
 2895 02ed B9000000 		.4byte	0xb9
 2896 02f1 0C       		.byte	0xc
 2897 02f2 0B       		.uleb128 0xb
 2898 02f3 3B060000 		.4byte	.LASF54
 2899 02f7 07       		.byte	0x7
 2900 02f8 42       		.byte	0x42
 2901 02f9 AD000000 		.4byte	0xad
 2902 02fd 0E       		.byte	0xe
 2903 02fe 00       		.byte	0
 2904 02ff 03       		.uleb128 0x3
 2905 0300 C1050000 		.4byte	.LASF55
 2906 0304 07       		.byte	0x7
 2907 0305 44       		.byte	0x44
 2908 0306 BA020000 		.4byte	0x2ba
 2909 030a 0D       		.uleb128 0xd
 2910 030b 2C       		.byte	0x2c
 2911 030c 08       		.byte	0x8
 2912 030d 10       		.byte	0x10
 2913 030e 37030000 		.4byte	0x337
 2914 0312 0E       		.uleb128 0xe
 2915 0313 6B657900 		.ascii	"key\000"
 2916 0317 08       		.byte	0x8
 2917 0318 11       		.byte	0x11
 2918 0319 2B020000 		.4byte	0x22b
 2919 031d 00       		.byte	0
 2920 031e 0B       		.uleb128 0xb
 2921 031f 12000000 		.4byte	.LASF56
 2922 0323 08       		.byte	0x8
 2923 0324 12       		.byte	0x12
 2924 0325 2B020000 		.4byte	0x22b
 2925 0329 14       		.byte	0x14
 2926 032a 0B       		.uleb128 0xb
 2927 032b FC060000 		.4byte	.LASF57
 2928 032f 08       		.byte	0x8
 2929 0330 13       		.byte	0x13
 2930 0331 DD000000 		.4byte	0xdd
 2931 0335 28       		.byte	0x28
 2932 0336 00       		.byte	0
 2933 0337 03       		.uleb128 0x3
 2934 0338 67020000 		.4byte	.LASF58
 2935 033c 08       		.byte	0x8
 2936 033d 14       		.byte	0x14
 2937 033e 0A030000 		.4byte	0x30a
 2938 0342 0D       		.uleb128 0xd
 2939 0343 1C       		.byte	0x1c
 2940 0344 09       		.byte	0x9
 2941 0345 37       		.byte	0x37
 2942 0346 63030000 		.4byte	0x363
 2943 034a 0B       		.uleb128 0xb
 2944 034b E8020000 		.4byte	.LASF59
 2945 034f 09       		.byte	0x9
 2946 0350 39       		.byte	0x39
 2947 0351 63030000 		.4byte	0x363
 2948 0355 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 70


 2949 0356 0B       		.uleb128 0xb
 2950 0357 FB020000 		.4byte	.LASF60
 2951 035b 09       		.byte	0x9
 2952 035c 3A       		.byte	0x3a
 2953 035d 1D010000 		.4byte	0x11d
 2954 0361 04       		.byte	0x4
 2955 0362 00       		.byte	0
 2956 0363 06       		.uleb128 0x6
 2957 0364 04       		.byte	0x4
 2958 0365 3B020000 		.4byte	0x23b
 2959 0369 03       		.uleb128 0x3
 2960 036a 95030000 		.4byte	.LASF61
 2961 036e 09       		.byte	0x9
 2962 036f 3C       		.byte	0x3c
 2963 0370 42030000 		.4byte	0x342
 2964 0374 0C       		.uleb128 0xc
 2965 0375 4401     		.2byte	0x144
 2966 0377 09       		.byte	0x9
 2967 0378 42       		.byte	0x42
 2968 0379 C7030000 		.4byte	0x3c7
 2969 037d 0B       		.uleb128 0xb
 2970 037e A8010000 		.4byte	.LASF62
 2971 0382 09       		.byte	0x9
 2972 0383 45       		.byte	0x45
 2973 0384 2B020000 		.4byte	0x22b
 2974 0388 00       		.byte	0
 2975 0389 0B       		.uleb128 0xb
 2976 038a F3020000 		.4byte	.LASF63
 2977 038e 09       		.byte	0x9
 2978 038f 47       		.byte	0x47
 2979 0390 C7030000 		.4byte	0x3c7
 2980 0394 14       		.byte	0x14
 2981 0395 0B       		.uleb128 0xb
 2982 0396 D7020000 		.4byte	.LASF64
 2983 039a 09       		.byte	0x9
 2984 039b 48       		.byte	0x48
 2985 039c 7E000000 		.4byte	0x7e
 2986 03a0 78       		.byte	0x78
 2987 03a1 0B       		.uleb128 0xb
 2988 03a2 CF020000 		.4byte	.LASF65
 2989 03a6 09       		.byte	0x9
 2990 03a7 49       		.byte	0x49
 2991 03a8 D7030000 		.4byte	0x3d7
 2992 03ac 7C       		.byte	0x7c
 2993 03ad 0B       		.uleb128 0xb
 2994 03ae 2F020000 		.4byte	.LASF66
 2995 03b2 09       		.byte	0x9
 2996 03b3 4A       		.byte	0x4a
 2997 03b4 C7030000 		.4byte	0x3c7
 2998 03b8 AE       		.byte	0xae
 2999 03b9 0F       		.uleb128 0xf
 3000 03ba 8F060000 		.4byte	.LASF67
 3001 03be 09       		.byte	0x9
 3002 03bf 4B       		.byte	0x4b
 3003 03c0 D7030000 		.4byte	0x3d7
 3004 03c4 1201     		.2byte	0x112
 3005 03c6 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 71


 3006 03c7 08       		.uleb128 0x8
 3007 03c8 F7000000 		.4byte	0xf7
 3008 03cc D7030000 		.4byte	0x3d7
 3009 03d0 09       		.uleb128 0x9
 3010 03d1 05010000 		.4byte	0x105
 3011 03d5 63       		.byte	0x63
 3012 03d6 00       		.byte	0
 3013 03d7 08       		.uleb128 0x8
 3014 03d8 F7000000 		.4byte	0xf7
 3015 03dc E7030000 		.4byte	0x3e7
 3016 03e0 09       		.uleb128 0x9
 3017 03e1 05010000 		.4byte	0x105
 3018 03e5 31       		.byte	0x31
 3019 03e6 00       		.byte	0
 3020 03e7 03       		.uleb128 0x3
 3021 03e8 78060000 		.4byte	.LASF68
 3022 03ec 09       		.byte	0x9
 3023 03ed 4E       		.byte	0x4e
 3024 03ee 74030000 		.4byte	0x374
 3025 03f2 10       		.uleb128 0x10
 3026 03f3 6E040000 		.4byte	.LASF100
 3027 03f7 01       		.byte	0x1
 3028 03f8 16       		.byte	0x16
 3029 03f9 00000000 		.4byte	.LFB64
 3030 03fd 44000000 		.4byte	.LFE64-.LFB64
 3031 0401 01       		.uleb128 0x1
 3032 0402 9C       		.byte	0x9c
 3033 0403 11       		.uleb128 0x11
 3034 0404 57040000 		.4byte	.LASF69
 3035 0408 01       		.byte	0x1
 3036 0409 20       		.byte	0x20
 3037 040a 00000000 		.4byte	.LFB65
 3038 040e 6C000000 		.4byte	.LFE65-.LFB65
 3039 0412 01       		.uleb128 0x1
 3040 0413 9C       		.byte	0x9c
 3041 0414 11       		.uleb128 0x11
 3042 0415 14060000 		.4byte	.LASF70
 3043 0419 01       		.byte	0x1
 3044 041a 3A       		.byte	0x3a
 3045 041b 00000000 		.4byte	.LFB66
 3046 041f 32000000 		.4byte	.LFE66-.LFB66
 3047 0423 01       		.uleb128 0x1
 3048 0424 9C       		.byte	0x9c
 3049 0425 11       		.uleb128 0x11
 3050 0426 51020000 		.4byte	.LASF71
 3051 042a 01       		.byte	0x1
 3052 042b 4A       		.byte	0x4a
 3053 042c 00000000 		.4byte	.LFB67
 3054 0430 20000000 		.4byte	.LFE67-.LFB67
 3055 0434 01       		.uleb128 0x1
 3056 0435 9C       		.byte	0x9c
 3057 0436 11       		.uleb128 0x11
 3058 0437 EB060000 		.4byte	.LASF72
 3059 043b 01       		.byte	0x1
 3060 043c 53       		.byte	0x53
 3061 043d 00000000 		.4byte	.LFB68
 3062 0441 40000000 		.4byte	.LFE68-.LFB68
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 72


 3063 0445 01       		.uleb128 0x1
 3064 0446 9C       		.byte	0x9c
 3065 0447 12       		.uleb128 0x12
 3066 0448 09030000 		.4byte	.LASF86
 3067 044c 01       		.byte	0x1
 3068 044d 65       		.byte	0x65
 3069 044e AD000000 		.4byte	0xad
 3070 0452 00000000 		.4byte	.LFB69
 3071 0456 DC000000 		.4byte	.LFE69-.LFB69
 3072 045a 01       		.uleb128 0x1
 3073 045b 9C       		.byte	0x9c
 3074 045c BB040000 		.4byte	0x4bb
 3075 0460 13       		.uleb128 0x13
 3076 0461 A1060000 		.4byte	.LASF73
 3077 0465 01       		.byte	0x1
 3078 0466 6E       		.byte	0x6e
 3079 0467 AD000000 		.4byte	0xad
 3080 046b 02       		.uleb128 0x2
 3081 046c 91       		.byte	0x91
 3082 046d 77       		.sleb128 -9
 3083 046e 13       		.uleb128 0x13
 3084 046f AA060000 		.4byte	.LASF74
 3085 0473 01       		.byte	0x1
 3086 0474 6F       		.byte	0x6f
 3087 0475 AD000000 		.4byte	0xad
 3088 0479 02       		.uleb128 0x2
 3089 047a 91       		.byte	0x91
 3090 047b 74       		.sleb128 -12
 3091 047c 13       		.uleb128 0x13
 3092 047d B3060000 		.4byte	.LASF75
 3093 0481 01       		.byte	0x1
 3094 0482 71       		.byte	0x71
 3095 0483 57000000 		.4byte	0x57
 3096 0487 02       		.uleb128 0x2
 3097 0488 91       		.byte	0x91
 3098 0489 70       		.sleb128 -16
 3099 048a 14       		.uleb128 0x14
 3100 048b 26000000 		.4byte	.LBB2
 3101 048f 4A000000 		.4byte	.LBE2-.LBB2
 3102 0493 13       		.uleb128 0x13
 3103 0494 AA060000 		.4byte	.LASF74
 3104 0498 01       		.byte	0x1
 3105 0499 74       		.byte	0x74
 3106 049a AD000000 		.4byte	0xad
 3107 049e 02       		.uleb128 0x2
 3108 049f 91       		.byte	0x91
 3109 04a0 76       		.sleb128 -10
 3110 04a1 14       		.uleb128 0x14
 3111 04a2 2C000000 		.4byte	.LBB3
 3112 04a6 2A000000 		.4byte	.LBE3-.LBB3
 3113 04aa 13       		.uleb128 0x13
 3114 04ab 73020000 		.4byte	.LASF76
 3115 04af 01       		.byte	0x1
 3116 04b0 76       		.byte	0x76
 3117 04b1 AD000000 		.4byte	0xad
 3118 04b5 02       		.uleb128 0x2
 3119 04b6 91       		.byte	0x91
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 73


 3120 04b7 75       		.sleb128 -11
 3121 04b8 00       		.byte	0
 3122 04b9 00       		.byte	0
 3123 04ba 00       		.byte	0
 3124 04bb 11       		.uleb128 0x11
 3125 04bc 52050000 		.4byte	.LASF77
 3126 04c0 01       		.byte	0x1
 3127 04c1 97       		.byte	0x97
 3128 04c2 00000000 		.4byte	.LFB70
 3129 04c6 1C000000 		.4byte	.LFE70-.LFB70
 3130 04ca 01       		.uleb128 0x1
 3131 04cb 9C       		.byte	0x9c
 3132 04cc 11       		.uleb128 0x11
 3133 04cd 38050000 		.4byte	.LASF78
 3134 04d1 01       		.byte	0x1
 3135 04d2 9F       		.byte	0x9f
 3136 04d3 00000000 		.4byte	.LFB71
 3137 04d7 28000000 		.4byte	.LFE71-.LFB71
 3138 04db 01       		.uleb128 0x1
 3139 04dc 9C       		.byte	0x9c
 3140 04dd 15       		.uleb128 0x15
 3141 04de 84030000 		.4byte	.LASF90
 3142 04e2 01       		.byte	0x1
 3143 04e3 AA       		.byte	0xaa
 3144 04e4 8C000000 		.4byte	0x8c
 3145 04e8 00000000 		.4byte	.LFB72
 3146 04ec C8000000 		.4byte	.LFE72-.LFB72
 3147 04f0 01       		.uleb128 0x1
 3148 04f1 9C       		.byte	0x9c
 3149 04f2 6F050000 		.4byte	0x56f
 3150 04f6 16       		.uleb128 0x16
 3151 04f7 37040000 		.4byte	.LASF79
 3152 04fb 01       		.byte	0x1
 3153 04fc AA       		.byte	0xaa
 3154 04fd 0C010000 		.4byte	0x10c
 3155 0501 02       		.uleb128 0x2
 3156 0502 91       		.byte	0x91
 3157 0503 5C       		.sleb128 -36
 3158 0504 16       		.uleb128 0x16
 3159 0505 BD060000 		.4byte	.LASF80
 3160 0509 01       		.byte	0x1
 3161 050a AA       		.byte	0xaa
 3162 050b 0C010000 		.4byte	0x10c
 3163 050f 02       		.uleb128 0x2
 3164 0510 91       		.byte	0x91
 3165 0511 58       		.sleb128 -40
 3166 0512 16       		.uleb128 0x16
 3167 0513 9E020000 		.4byte	.LASF81
 3168 0517 01       		.byte	0x1
 3169 0518 AA       		.byte	0xaa
 3170 0519 A2000000 		.4byte	0xa2
 3171 051d 02       		.uleb128 0x2
 3172 051e 91       		.byte	0x91
 3173 051f 54       		.sleb128 -44
 3174 0520 13       		.uleb128 0x13
 3175 0521 79030000 		.4byte	.LASF82
 3176 0525 01       		.byte	0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 74


 3177 0526 AC       		.byte	0xac
 3178 0527 C5000000 		.4byte	0xc5
 3179 052b 02       		.uleb128 0x2
 3180 052c 91       		.byte	0x91
 3181 052d 74       		.sleb128 -12
 3182 052e 14       		.uleb128 0x14
 3183 052f 16000000 		.4byte	.LBB4
 3184 0533 88000000 		.4byte	.LBE4-.LBB4
 3185 0537 13       		.uleb128 0x13
 3186 0538 40040000 		.4byte	.LASF83
 3187 053c 01       		.byte	0x1
 3188 053d B0       		.byte	0xb0
 3189 053e 0C010000 		.4byte	0x10c
 3190 0542 02       		.uleb128 0x2
 3191 0543 91       		.byte	0x91
 3192 0544 64       		.sleb128 -28
 3193 0545 13       		.uleb128 0x13
 3194 0546 A1040000 		.4byte	.LASF84
 3195 054a 01       		.byte	0x1
 3196 054b B1       		.byte	0xb1
 3197 054c A2000000 		.4byte	0xa2
 3198 0550 02       		.uleb128 0x2
 3199 0551 91       		.byte	0x91
 3200 0552 6C       		.sleb128 -20
 3201 0553 17       		.uleb128 0x17
 3202 0554 6900     		.ascii	"i\000"
 3203 0556 01       		.byte	0x1
 3204 0557 B2       		.byte	0xb2
 3205 0558 A2000000 		.4byte	0xa2
 3206 055c 02       		.uleb128 0x2
 3207 055d 91       		.byte	0x91
 3208 055e 70       		.sleb128 -16
 3209 055f 13       		.uleb128 0x13
 3210 0560 FD010000 		.4byte	.LASF85
 3211 0564 01       		.byte	0x1
 3212 0565 B2       		.byte	0xb2
 3213 0566 A2000000 		.4byte	0xa2
 3214 056a 02       		.uleb128 0x2
 3215 056b 91       		.byte	0x91
 3216 056c 68       		.sleb128 -24
 3217 056d 00       		.byte	0
 3218 056e 00       		.byte	0
 3219 056f 12       		.uleb128 0x12
 3220 0570 21040000 		.4byte	.LASF87
 3221 0574 01       		.byte	0x1
 3222 0575 DE       		.byte	0xde
 3223 0576 F3010000 		.4byte	0x1f3
 3224 057a 00000000 		.4byte	.LFB73
 3225 057e FC000000 		.4byte	.LFE73-.LFB73
 3226 0582 01       		.uleb128 0x1
 3227 0583 9C       		.byte	0x9c
 3228 0584 C6050000 		.4byte	0x5c6
 3229 0588 13       		.uleb128 0x13
 3230 0589 FA000000 		.4byte	.LASF88
 3231 058d 01       		.byte	0x1
 3232 058e E0       		.byte	0xe0
 3233 058f F3010000 		.4byte	0x1f3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 75


 3234 0593 03       		.uleb128 0x3
 3235 0594 91       		.byte	0x91
 3236 0595 E47C     		.sleb128 -412
 3237 0597 14       		.uleb128 0x14
 3238 0598 4A000000 		.4byte	.LBB5
 3239 059c 84000000 		.4byte	.LBE5-.LBB5
 3240 05a0 17       		.uleb128 0x17
 3241 05a1 6900     		.ascii	"i\000"
 3242 05a3 01       		.byte	0x1
 3243 05a4 E7       		.byte	0xe7
 3244 05a5 7E000000 		.4byte	0x7e
 3245 05a9 02       		.uleb128 0x2
 3246 05aa 91       		.byte	0x91
 3247 05ab 6C       		.sleb128 -20
 3248 05ac 14       		.uleb128 0x14
 3249 05ad 70000000 		.4byte	.LBB6
 3250 05b1 46000000 		.4byte	.LBE6-.LBB6
 3251 05b5 13       		.uleb128 0x13
 3252 05b6 D6010000 		.4byte	.LASF89
 3253 05ba 01       		.byte	0x1
 3254 05bb F4       		.byte	0xf4
 3255 05bc 57000000 		.4byte	0x57
 3256 05c0 02       		.uleb128 0x2
 3257 05c1 91       		.byte	0x91
 3258 05c2 68       		.sleb128 -24
 3259 05c3 00       		.byte	0
 3260 05c4 00       		.byte	0
 3261 05c5 00       		.byte	0
 3262 05c6 18       		.uleb128 0x18
 3263 05c7 8F020000 		.4byte	.LASF91
 3264 05cb 01       		.byte	0x1
 3265 05cc 0801     		.2byte	0x108
 3266 05ce AD000000 		.4byte	0xad
 3267 05d2 00000000 		.4byte	.LFB74
 3268 05d6 78000000 		.4byte	.LFE74-.LFB74
 3269 05da 01       		.uleb128 0x1
 3270 05db 9C       		.byte	0x9c
 3271 05dc 37060000 		.4byte	0x637
 3272 05e0 19       		.uleb128 0x19
 3273 05e1 6F030000 		.4byte	.LASF92
 3274 05e5 01       		.byte	0x1
 3275 05e6 0801     		.2byte	0x108
 3276 05e8 0C010000 		.4byte	0x10c
 3277 05ec 02       		.uleb128 0x2
 3278 05ed 91       		.byte	0x91
 3279 05ee 6C       		.sleb128 -20
 3280 05ef 19       		.uleb128 0x19
 3281 05f0 20030000 		.4byte	.LASF93
 3282 05f4 01       		.byte	0x1
 3283 05f5 0801     		.2byte	0x108
 3284 05f7 12010000 		.4byte	0x112
 3285 05fb 02       		.uleb128 0x2
 3286 05fc 91       		.byte	0x91
 3287 05fd 68       		.sleb128 -24
 3288 05fe 19       		.uleb128 0x19
 3289 05ff 46030000 		.4byte	.LASF94
 3290 0603 01       		.byte	0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 76


 3291 0604 0801     		.2byte	0x108
 3292 0606 12010000 		.4byte	0x112
 3293 060a 02       		.uleb128 0x2
 3294 060b 91       		.byte	0x91
 3295 060c 64       		.sleb128 -28
 3296 060d 19       		.uleb128 0x19
 3297 060e 2C030000 		.4byte	.LASF95
 3298 0612 01       		.byte	0x1
 3299 0613 0801     		.2byte	0x108
 3300 0615 0C010000 		.4byte	0x10c
 3301 0619 02       		.uleb128 0x2
 3302 061a 91       		.byte	0x91
 3303 061b 60       		.sleb128 -32
 3304 061c 1A       		.uleb128 0x1a
 3305 061d 6100     		.ascii	"a\000"
 3306 061f 01       		.byte	0x1
 3307 0620 0A01     		.2byte	0x10a
 3308 0622 0C010000 		.4byte	0x10c
 3309 0626 02       		.uleb128 0x2
 3310 0627 91       		.byte	0x91
 3311 0628 74       		.sleb128 -12
 3312 0629 1A       		.uleb128 0x1a
 3313 062a 6200     		.ascii	"b\000"
 3314 062c 01       		.byte	0x1
 3315 062d 0A01     		.2byte	0x10a
 3316 062f 0C010000 		.4byte	0x10c
 3317 0633 02       		.uleb128 0x2
 3318 0634 91       		.byte	0x91
 3319 0635 70       		.sleb128 -16
 3320 0636 00       		.byte	0
 3321 0637 1B       		.uleb128 0x1b
 3322 0638 7A050000 		.4byte	.LASF96
 3323 063c 01       		.byte	0x1
 3324 063d 2701     		.2byte	0x127
 3325 063f AD000000 		.4byte	0xad
 3326 0643 00000000 		.4byte	.LFB75
 3327 0647 38010000 		.4byte	.LFE75-.LFB75
 3328 064b 01       		.uleb128 0x1
 3329 064c 9C       		.byte	0x9c
 3330 064d 69060000 		.4byte	0x669
 3331 0651 14       		.uleb128 0x14
 3332 0652 2E000000 		.4byte	.LBB7
 3333 0656 2A000000 		.4byte	.LBE7-.LBB7
 3334 065a 1A       		.uleb128 0x1a
 3335 065b 6900     		.ascii	"i\000"
 3336 065d 01       		.byte	0x1
 3337 065e 3401     		.2byte	0x134
 3338 0660 AD000000 		.4byte	0xad
 3339 0664 02       		.uleb128 0x2
 3340 0665 91       		.byte	0x91
 3341 0666 77       		.sleb128 -9
 3342 0667 00       		.byte	0
 3343 0668 00       		.byte	0
 3344 0669 1B       		.uleb128 0x1b
 3345 066a DC030000 		.4byte	.LASF97
 3346 066e 01       		.byte	0x1
 3347 066f 6F01     		.2byte	0x16f
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 77


 3348 0671 AD000000 		.4byte	0xad
 3349 0675 00000000 		.4byte	.LFB76
 3350 0679 B4000000 		.4byte	.LFE76-.LFB76
 3351 067d 01       		.uleb128 0x1
 3352 067e 9C       		.byte	0x9c
 3353 067f AC060000 		.4byte	0x6ac
 3354 0683 1C       		.uleb128 0x1c
 3355 0684 58060000 		.4byte	.LASF35
 3356 0688 01       		.byte	0x1
 3357 0689 7301     		.2byte	0x173
 3358 068b AD000000 		.4byte	0xad
 3359 068f 02       		.uleb128 0x2
 3360 0690 91       		.byte	0x91
 3361 0691 77       		.sleb128 -9
 3362 0692 14       		.uleb128 0x14
 3363 0693 36000000 		.4byte	.LBB8
 3364 0697 44000000 		.4byte	.LBE8-.LBB8
 3365 069b 1C       		.uleb128 0x1c
 3366 069c 74030000 		.4byte	.LASF98
 3367 06a0 01       		.byte	0x1
 3368 06a1 7B01     		.2byte	0x17b
 3369 06a3 AC060000 		.4byte	0x6ac
 3370 06a7 02       		.uleb128 0x2
 3371 06a8 91       		.byte	0x91
 3372 06a9 6C       		.sleb128 -20
 3373 06aa 00       		.byte	0
 3374 06ab 00       		.byte	0
 3375 06ac 08       		.uleb128 0x8
 3376 06ad F7000000 		.4byte	0xf7
 3377 06b1 BC060000 		.4byte	0x6bc
 3378 06b5 09       		.uleb128 0x9
 3379 06b6 05010000 		.4byte	0x105
 3380 06ba 09       		.byte	0x9
 3381 06bb 00       		.byte	0
 3382 06bc 1D       		.uleb128 0x1d
 3383 06bd 59010000 		.4byte	.LASF99
 3384 06c1 01       		.byte	0x1
 3385 06c2 8D01     		.2byte	0x18d
 3386 06c4 00000000 		.4byte	.LFB77
 3387 06c8 1C000000 		.4byte	.LFE77-.LFB77
 3388 06cc 01       		.uleb128 0x1
 3389 06cd 9C       		.byte	0x9c
 3390 06ce 1E       		.uleb128 0x1e
 3391 06cf D9050000 		.4byte	.LASF101
 3392 06d3 01       		.byte	0x1
 3393 06d4 9D01     		.2byte	0x19d
 3394 06d6 AD000000 		.4byte	0xad
 3395 06da 00000000 		.4byte	.LFB78
 3396 06de 28000000 		.4byte	.LFE78-.LFB78
 3397 06e2 01       		.uleb128 0x1
 3398 06e3 9C       		.byte	0x9c
 3399 06e4 1F       		.uleb128 0x1f
 3400 06e5 A6020000 		.4byte	.LASF104
 3401 06e9 01       		.byte	0x1
 3402 06ea A901     		.2byte	0x1a9
 3403 06ec 00000000 		.4byte	.LFB79
 3404 06f0 30010000 		.4byte	.LFE79-.LFB79
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 78


 3405 06f4 01       		.uleb128 0x1
 3406 06f5 9C       		.byte	0x9c
 3407 06f6 38070000 		.4byte	0x738
 3408 06fa 20       		.uleb128 0x20
 3409 06fb 00000000 		.4byte	.Ldebug_ranges0+0
 3410 06ff 1C       		.uleb128 0x1c
 3411 0700 AA060000 		.4byte	.LASF74
 3412 0704 01       		.byte	0x1
 3413 0705 AD01     		.2byte	0x1ad
 3414 0707 AD000000 		.4byte	0xad
 3415 070b 02       		.uleb128 0x2
 3416 070c 91       		.byte	0x91
 3417 070d 77       		.sleb128 -9
 3418 070e 14       		.uleb128 0x14
 3419 070f 0E000000 		.4byte	.LBB10
 3420 0713 E4000000 		.4byte	.LBE10-.LBB10
 3421 0717 1C       		.uleb128 0x1c
 3422 0718 AC040000 		.4byte	.LASF102
 3423 071c 01       		.byte	0x1
 3424 071d B101     		.2byte	0x1b1
 3425 071f 38070000 		.4byte	0x738
 3426 0723 02       		.uleb128 0x2
 3427 0724 91       		.byte	0x91
 3428 0725 50       		.sleb128 -48
 3429 0726 1C       		.uleb128 0x1c
 3430 0727 68040000 		.4byte	.LASF103
 3431 072b 01       		.byte	0x1
 3432 072c B601     		.2byte	0x1b6
 3433 072e 0C010000 		.4byte	0x10c
 3434 0732 02       		.uleb128 0x2
 3435 0733 91       		.byte	0x91
 3436 0734 70       		.sleb128 -16
 3437 0735 00       		.byte	0
 3438 0736 00       		.byte	0
 3439 0737 00       		.byte	0
 3440 0738 08       		.uleb128 0x8
 3441 0739 F7000000 		.4byte	0xf7
 3442 073d 48070000 		.4byte	0x748
 3443 0741 09       		.uleb128 0x9
 3444 0742 05010000 		.4byte	0x105
 3445 0746 1D       		.byte	0x1d
 3446 0747 00       		.byte	0
 3447 0748 1F       		.uleb128 0x1f
 3448 0749 BD010000 		.4byte	.LASF105
 3449 074d 01       		.byte	0x1
 3450 074e DB01     		.2byte	0x1db
 3451 0750 00000000 		.4byte	.LFB80
 3452 0754 38010000 		.4byte	.LFE80-.LFB80
 3453 0758 01       		.uleb128 0x1
 3454 0759 9C       		.byte	0x9c
 3455 075a 78070000 		.4byte	0x778
 3456 075e 14       		.uleb128 0x14
 3457 075f B6000000 		.4byte	.LBB12
 3458 0763 34000000 		.4byte	.LBE12-.LBB12
 3459 0767 1C       		.uleb128 0x1c
 3460 0768 9B050000 		.4byte	.LASF106
 3461 076c 01       		.byte	0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 79


 3462 076d 0402     		.2byte	0x204
 3463 076f AC060000 		.4byte	0x6ac
 3464 0773 02       		.uleb128 0x2
 3465 0774 91       		.byte	0x91
 3466 0775 6C       		.sleb128 -20
 3467 0776 00       		.byte	0
 3468 0777 00       		.byte	0
 3469 0778 1B       		.uleb128 0x1b
 3470 0779 11020000 		.4byte	.LASF107
 3471 077d 01       		.byte	0x1
 3472 077e 1602     		.2byte	0x216
 3473 0780 57000000 		.4byte	0x57
 3474 0784 00000000 		.4byte	.LFB81
 3475 0788 44010000 		.4byte	.LFE81-.LFB81
 3476 078c 01       		.uleb128 0x1
 3477 078d 9C       		.byte	0x9c
 3478 078e 34080000 		.4byte	0x834
 3479 0792 1C       		.uleb128 0x1c
 3480 0793 5A030000 		.4byte	.LASF108
 3481 0797 01       		.byte	0x1
 3482 0798 2102     		.2byte	0x221
 3483 079a 57000000 		.4byte	0x57
 3484 079e 02       		.uleb128 0x2
 3485 079f 91       		.byte	0x91
 3486 07a0 74       		.sleb128 -12
 3487 07a1 14       		.uleb128 0x14
 3488 07a2 30000000 		.4byte	.LBB13
 3489 07a6 DE000000 		.4byte	.LBE13-.LBB13
 3490 07aa 1C       		.uleb128 0x1c
 3491 07ab D6010000 		.4byte	.LASF89
 3492 07af 01       		.byte	0x1
 3493 07b0 2602     		.2byte	0x226
 3494 07b2 38070000 		.4byte	0x738
 3495 07b6 02       		.uleb128 0x2
 3496 07b7 91       		.byte	0x91
 3497 07b8 54       		.sleb128 -44
 3498 07b9 1A       		.uleb128 0x1a
 3499 07ba 7400     		.ascii	"t\000"
 3500 07bc 01       		.byte	0x1
 3501 07bd 2C02     		.2byte	0x22c
 3502 07bf 2D010000 		.4byte	0x12d
 3503 07c3 03       		.uleb128 0x3
 3504 07c4 91       		.byte	0x91
 3505 07c5 947F     		.sleb128 -108
 3506 07c7 1C       		.uleb128 0x1c
 3507 07c8 7B010000 		.4byte	.LASF109
 3508 07cc 01       		.byte	0x1
 3509 07cd 2F02     		.2byte	0x22f
 3510 07cf 7E000000 		.4byte	0x7e
 3511 07d3 02       		.uleb128 0x2
 3512 07d4 91       		.byte	0x91
 3513 07d5 50       		.sleb128 -48
 3514 07d6 1C       		.uleb128 0x1c
 3515 07d7 4B020000 		.4byte	.LASF110
 3516 07db 01       		.byte	0x1
 3517 07dc 2F02     		.2byte	0x22f
 3518 07de 7E000000 		.4byte	0x7e
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 80


 3519 07e2 02       		.uleb128 0x2
 3520 07e3 91       		.byte	0x91
 3521 07e4 4C       		.sleb128 -52
 3522 07e5 1A       		.uleb128 0x1a
 3523 07e6 64617900 		.ascii	"day\000"
 3524 07ea 01       		.byte	0x1
 3525 07eb 2F02     		.2byte	0x22f
 3526 07ed 7E000000 		.4byte	0x7e
 3527 07f1 02       		.uleb128 0x2
 3528 07f2 91       		.byte	0x91
 3529 07f3 48       		.sleb128 -56
 3530 07f4 1C       		.uleb128 0x1c
 3531 07f5 32040000 		.4byte	.LASF111
 3532 07f9 01       		.byte	0x1
 3533 07fa 2F02     		.2byte	0x22f
 3534 07fc 7E000000 		.4byte	0x7e
 3535 0800 02       		.uleb128 0x2
 3536 0801 91       		.byte	0x91
 3537 0802 44       		.sleb128 -60
 3538 0803 1C       		.uleb128 0x1c
 3539 0804 41060000 		.4byte	.LASF112
 3540 0808 01       		.byte	0x1
 3541 0809 2F02     		.2byte	0x22f
 3542 080b 7E000000 		.4byte	0x7e
 3543 080f 02       		.uleb128 0x2
 3544 0810 91       		.byte	0x91
 3545 0811 40       		.sleb128 -64
 3546 0812 1C       		.uleb128 0x1c
 3547 0813 74010000 		.4byte	.LASF113
 3548 0817 01       		.byte	0x1
 3549 0818 2F02     		.2byte	0x22f
 3550 081a 7E000000 		.4byte	0x7e
 3551 081e 03       		.uleb128 0x3
 3552 081f 91       		.byte	0x91
 3553 0820 BC7F     		.sleb128 -68
 3554 0822 1C       		.uleb128 0x1c
 3555 0823 00000000 		.4byte	.LASF114
 3556 0827 01       		.byte	0x1
 3557 0828 2F02     		.2byte	0x22f
 3558 082a 7E000000 		.4byte	0x7e
 3559 082e 03       		.uleb128 0x3
 3560 082f 91       		.byte	0x91
 3561 0830 B87F     		.sleb128 -72
 3562 0832 00       		.byte	0
 3563 0833 00       		.byte	0
 3564 0834 21       		.uleb128 0x21
 3565 0835 89010000 		.4byte	.LASF115
 3566 0839 01       		.byte	0x1
 3567 083a 4F02     		.2byte	0x24f
 3568 083c AD000000 		.4byte	0xad
 3569 0840 00000000 		.4byte	.LFB82
 3570 0844 14000000 		.4byte	.LFE82-.LFB82
 3571 0848 01       		.uleb128 0x1
 3572 0849 9C       		.byte	0x9c
 3573 084a 1D       		.uleb128 0x1d
 3574 084b 37020000 		.4byte	.LASF116
 3575 084f 01       		.byte	0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 81


 3576 0850 5402     		.2byte	0x254
 3577 0852 00000000 		.4byte	.LFB83
 3578 0856 1A000000 		.4byte	.LFE83-.LFB83
 3579 085a 01       		.uleb128 0x1
 3580 085b 9C       		.byte	0x9c
 3581 085c 1D       		.uleb128 0x1d
 3582 085d CA000000 		.4byte	.LASF117
 3583 0861 01       		.byte	0x1
 3584 0862 6102     		.2byte	0x261
 3585 0864 00000000 		.4byte	.LFB84
 3586 0868 2A000000 		.4byte	.LFE84-.LFB84
 3587 086c 01       		.uleb128 0x1
 3588 086d 9C       		.byte	0x9c
 3589 086e 1B       		.uleb128 0x1b
 3590 086f B2030000 		.4byte	.LASF118
 3591 0873 01       		.byte	0x1
 3592 0874 7702     		.2byte	0x277
 3593 0876 FF020000 		.4byte	0x2ff
 3594 087a 00000000 		.4byte	.LFB85
 3595 087e 7C020000 		.4byte	.LFE85-.LFB85
 3596 0882 01       		.uleb128 0x1
 3597 0883 9C       		.byte	0x9c
 3598 0884 17090000 		.4byte	0x917
 3599 0888 1A       		.uleb128 0x1a
 3600 0889 67707300 		.ascii	"gps\000"
 3601 088d 01       		.byte	0x1
 3602 088e 7802     		.2byte	0x278
 3603 0890 FF020000 		.4byte	0x2ff
 3604 0894 02       		.uleb128 0x2
 3605 0895 91       		.byte	0x91
 3606 0896 4C       		.sleb128 -52
 3607 0897 1C       		.uleb128 0x1c
 3608 0898 D4060000 		.4byte	.LASF119
 3609 089c 01       		.byte	0x1
 3610 089d 8402     		.2byte	0x284
 3611 089f 57000000 		.4byte	0x57
 3612 08a3 02       		.uleb128 0x2
 3613 08a4 91       		.byte	0x91
 3614 08a5 68       		.sleb128 -24
 3615 08a6 1C       		.uleb128 0x1c
 3616 08a7 09060000 		.4byte	.LASF120
 3617 08ab 01       		.byte	0x1
 3618 08ac AB02     		.2byte	0x2ab
 3619 08ae AD000000 		.4byte	0xad
 3620 08b2 02       		.uleb128 0x2
 3621 08b3 91       		.byte	0x91
 3622 08b4 67       		.sleb128 -25
 3623 08b5 1A       		.uleb128 0x1a
 3624 08b6 6C617400 		.ascii	"lat\000"
 3625 08ba 01       		.byte	0x1
 3626 08bb B702     		.2byte	0x2b7
 3627 08bd E9000000 		.4byte	0xe9
 3628 08c1 02       		.uleb128 0x2
 3629 08c2 91       		.byte	0x91
 3630 08c3 48       		.sleb128 -56
 3631 08c4 1A       		.uleb128 0x1a
 3632 08c5 6C6F6E00 		.ascii	"lon\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 82


 3633 08c9 01       		.byte	0x1
 3634 08ca B802     		.2byte	0x2b8
 3635 08cc E9000000 		.4byte	0xe9
 3636 08d0 02       		.uleb128 0x2
 3637 08d1 91       		.byte	0x91
 3638 08d2 44       		.sleb128 -60
 3639 08d3 1A       		.uleb128 0x1a
 3640 08d4 616C7400 		.ascii	"alt\000"
 3641 08d8 01       		.byte	0x1
 3642 08d9 B902     		.2byte	0x2b9
 3643 08db E9000000 		.4byte	0xe9
 3644 08df 02       		.uleb128 0x2
 3645 08e0 91       		.byte	0x91
 3646 08e1 40       		.sleb128 -64
 3647 08e2 1A       		.uleb128 0x1a
 3648 08e3 733100   		.ascii	"s1\000"
 3649 08e6 01       		.byte	0x1
 3650 08e7 BD02     		.2byte	0x2bd
 3651 08e9 0C010000 		.4byte	0x10c
 3652 08ed 02       		.uleb128 0x2
 3653 08ee 91       		.byte	0x91
 3654 08ef 60       		.sleb128 -32
 3655 08f0 1C       		.uleb128 0x1c
 3656 08f1 2C040000 		.4byte	.LASF121
 3657 08f5 01       		.byte	0x1
 3658 08f6 C002     		.2byte	0x2c0
 3659 08f8 7E000000 		.4byte	0x7e
 3660 08fc 02       		.uleb128 0x2
 3661 08fd 91       		.byte	0x91
 3662 08fe 5C       		.sleb128 -36
 3663 08ff 14       		.uleb128 0x14
 3664 0900 B4000000 		.4byte	.LBB14
 3665 0904 38000000 		.4byte	.LBE14-.LBB14
 3666 0908 1A       		.uleb128 0x1a
 3667 0909 6900     		.ascii	"i\000"
 3668 090b 01       		.byte	0x1
 3669 090c AC02     		.2byte	0x2ac
 3670 090e B9000000 		.4byte	0xb9
 3671 0912 02       		.uleb128 0x2
 3672 0913 91       		.byte	0x91
 3673 0914 6E       		.sleb128 -18
 3674 0915 00       		.byte	0
 3675 0916 00       		.byte	0
 3676 0917 22       		.uleb128 0x22
 3677 0918 FF000000 		.4byte	.LASF122
 3678 091c 0A       		.byte	0xa
 3679 091d 1207     		.2byte	0x712
 3680 091f 23090000 		.4byte	0x923
 3681 0923 23       		.uleb128 0x23
 3682 0924 97000000 		.4byte	0x97
 3683 0928 24       		.uleb128 0x24
 3684 0929 EE000000 		.4byte	.LASF123
 3685 092d 07       		.byte	0x7
 3686 092e 15       		.byte	0x15
 3687 092f AD000000 		.4byte	0xad
 3688 0933 05       		.uleb128 0x5
 3689 0934 03       		.byte	0x3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 83


 3690 0935 00000000 		.4byte	modem_state
 3691 0939 24       		.uleb128 0x24
 3692 093a F2050000 		.4byte	.LASF124
 3693 093e 07       		.byte	0x7
 3694 093f 49       		.byte	0x49
 3695 0940 DD000000 		.4byte	0xdd
 3696 0944 05       		.uleb128 0x5
 3697 0945 03       		.byte	0x3
 3698 0946 00000000 		.4byte	modem_start_time_stamp
 3699 094a 24       		.uleb128 0x24
 3700 094b E8020000 		.4byte	.LASF59
 3701 094f 07       		.byte	0x7
 3702 0950 4A       		.byte	0x4a
 3703 0951 3B020000 		.4byte	0x23b
 3704 0955 05       		.uleb128 0x5
 3705 0956 03       		.byte	0x3
 3706 0957 00000000 		.4byte	modem_info
 3707 095b 24       		.uleb128 0x24
 3708 095c 0C010000 		.4byte	.LASF125
 3709 0960 07       		.byte	0x7
 3710 0961 4B       		.byte	0x4b
 3711 0962 AF020000 		.4byte	0x2af
 3712 0966 05       		.uleb128 0x5
 3713 0967 03       		.byte	0x3
 3714 0968 00000000 		.4byte	modem_stats
 3715 096c 24       		.uleb128 0x24
 3716 096d A0030000 		.4byte	.LASF126
 3717 0971 08       		.byte	0x8
 3718 0972 1D       		.byte	0x1d
 3719 0973 B9000000 		.4byte	0xb9
 3720 0977 05       		.uleb128 0x5
 3721 0978 03       		.byte	0x3
 3722 0979 00000000 		.4byte	dataPointsInStack
 3723 097d 24       		.uleb128 0x24
 3724 097e 5F060000 		.4byte	.LASF127
 3725 0982 08       		.byte	0x8
 3726 0983 1E       		.byte	0x1e
 3727 0984 B9000000 		.4byte	0xb9
 3728 0988 05       		.uleb128 0x5
 3729 0989 03       		.byte	0x3
 3730 098a 00000000 		.4byte	dataPointsInStackDesired
 3731 098e 08       		.uleb128 0x8
 3732 098f 37030000 		.4byte	0x337
 3733 0993 9E090000 		.4byte	0x99e
 3734 0997 09       		.uleb128 0x9
 3735 0998 05010000 		.4byte	0x105
 3736 099c 95       		.byte	0x95
 3737 099d 00       		.byte	0
 3738 099e 24       		.uleb128 0x24
 3739 099f CA020000 		.4byte	.LASF128
 3740 09a3 08       		.byte	0x8
 3741 09a4 1F       		.byte	0x1f
 3742 09a5 8E090000 		.4byte	0x98e
 3743 09a9 05       		.uleb128 0x5
 3744 09aa 03       		.byte	0x3
 3745 09ab 00000000 		.4byte	data
 3746 09af 08       		.uleb128 0x8
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 84


 3747 09b0 F7000000 		.4byte	0xf7
 3748 09b4 C0090000 		.4byte	0x9c0
 3749 09b8 25       		.uleb128 0x25
 3750 09b9 05010000 		.4byte	0x105
 3751 09bd 0F27     		.2byte	0x270f
 3752 09bf 00       		.byte	0
 3753 09c0 24       		.uleb128 0x24
 3754 09c1 DE060000 		.4byte	.LASF129
 3755 09c5 09       		.byte	0x9
 3756 09c6 16       		.byte	0x16
 3757 09c7 AF090000 		.4byte	0x9af
 3758 09cb 05       		.uleb128 0x5
 3759 09cc 03       		.byte	0x3
 3760 09cd 00000000 		.4byte	http_request
 3761 09d1 24       		.uleb128 0x24
 3762 09d2 4F010000 		.4byte	.LASF130
 3763 09d6 09       		.byte	0x9
 3764 09d7 17       		.byte	0x17
 3765 09d8 AF090000 		.4byte	0x9af
 3766 09dc 05       		.uleb128 0x5
 3767 09dd 03       		.byte	0x3
 3768 09de 00000000 		.4byte	http_body
 3769 09e2 08       		.uleb128 0x8
 3770 09e3 F7000000 		.4byte	0xf7
 3771 09e7 F2090000 		.4byte	0x9f2
 3772 09eb 09       		.uleb128 0x9
 3773 09ec 05010000 		.4byte	0x105
 3774 09f0 C7       		.byte	0xc7
 3775 09f1 00       		.byte	0
 3776 09f2 24       		.uleb128 0x24
 3777 09f3 A9050000 		.4byte	.LASF131
 3778 09f7 09       		.byte	0x9
 3779 09f8 18       		.byte	0x18
 3780 09f9 E2090000 		.4byte	0x9e2
 3781 09fd 05       		.uleb128 0x5
 3782 09fe 03       		.byte	0x3
 3783 09ff 00000000 		.4byte	http_route
 3784 0a03 24       		.uleb128 0x24
 3785 0a04 0D050000 		.4byte	.LASF132
 3786 0a08 09       		.byte	0x9
 3787 0a09 3F       		.byte	0x3f
 3788 0a0a 69030000 		.4byte	0x369
 3789 0a0e 05       		.uleb128 0x5
 3790 0a0f 03       		.byte	0x3
 3791 0a10 00000000 		.4byte	system_info
 3792 0a14 24       		.uleb128 0x24
 3793 0a15 91040000 		.4byte	.LASF133
 3794 0a19 09       		.byte	0x9
 3795 0a1a 51       		.byte	0x51
 3796 0a1b E7030000 		.4byte	0x3e7
 3797 0a1f 05       		.uleb128 0x5
 3798 0a20 03       		.byte	0x3
 3799 0a21 00000000 		.4byte	system_settings
 3800 0a25 08       		.uleb128 0x8
 3801 0a26 F7000000 		.4byte	0xf7
 3802 0a2a 360A0000 		.4byte	0xa36
 3803 0a2e 25       		.uleb128 0x25
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 85


 3804 0a2f 05010000 		.4byte	0x105
 3805 0a33 FF03     		.2byte	0x3ff
 3806 0a35 00       		.byte	0
 3807 0a36 24       		.uleb128 0x24
 3808 0a37 F9030000 		.4byte	.LASF134
 3809 0a3b 01       		.byte	0x1
 3810 0a3c 09       		.byte	0x9
 3811 0a3d 250A0000 		.4byte	0xa25
 3812 0a41 05       		.uleb128 0x5
 3813 0a42 03       		.byte	0x3
 3814 0a43 00000000 		.4byte	uart_received_string
 3815 0a47 24       		.uleb128 0x24
 3816 0a48 C7050000 		.4byte	.LASF135
 3817 0a4c 01       		.byte	0x1
 3818 0a4d 0A       		.byte	0xa
 3819 0a4e D1000000 		.4byte	0xd1
 3820 0a52 05       		.uleb128 0x5
 3821 0a53 03       		.byte	0x3
 3822 0a54 00000000 		.4byte	uart_string_index
 3823 0a58 00       		.byte	0
 3824              		.section	.debug_abbrev,"",%progbits
 3825              	.Ldebug_abbrev0:
 3826 0000 01       		.uleb128 0x1
 3827 0001 11       		.uleb128 0x11
 3828 0002 01       		.byte	0x1
 3829 0003 25       		.uleb128 0x25
 3830 0004 0E       		.uleb128 0xe
 3831 0005 13       		.uleb128 0x13
 3832 0006 0B       		.uleb128 0xb
 3833 0007 03       		.uleb128 0x3
 3834 0008 0E       		.uleb128 0xe
 3835 0009 1B       		.uleb128 0x1b
 3836 000a 0E       		.uleb128 0xe
 3837 000b 55       		.uleb128 0x55
 3838 000c 17       		.uleb128 0x17
 3839 000d 11       		.uleb128 0x11
 3840 000e 01       		.uleb128 0x1
 3841 000f 10       		.uleb128 0x10
 3842 0010 17       		.uleb128 0x17
 3843 0011 00       		.byte	0
 3844 0012 00       		.byte	0
 3845 0013 02       		.uleb128 0x2
 3846 0014 24       		.uleb128 0x24
 3847 0015 00       		.byte	0
 3848 0016 0B       		.uleb128 0xb
 3849 0017 0B       		.uleb128 0xb
 3850 0018 3E       		.uleb128 0x3e
 3851 0019 0B       		.uleb128 0xb
 3852 001a 03       		.uleb128 0x3
 3853 001b 0E       		.uleb128 0xe
 3854 001c 00       		.byte	0
 3855 001d 00       		.byte	0
 3856 001e 03       		.uleb128 0x3
 3857 001f 16       		.uleb128 0x16
 3858 0020 00       		.byte	0
 3859 0021 03       		.uleb128 0x3
 3860 0022 0E       		.uleb128 0xe
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 86


 3861 0023 3A       		.uleb128 0x3a
 3862 0024 0B       		.uleb128 0xb
 3863 0025 3B       		.uleb128 0x3b
 3864 0026 0B       		.uleb128 0xb
 3865 0027 49       		.uleb128 0x49
 3866 0028 13       		.uleb128 0x13
 3867 0029 00       		.byte	0
 3868 002a 00       		.byte	0
 3869 002b 04       		.uleb128 0x4
 3870 002c 24       		.uleb128 0x24
 3871 002d 00       		.byte	0
 3872 002e 0B       		.uleb128 0xb
 3873 002f 0B       		.uleb128 0xb
 3874 0030 3E       		.uleb128 0x3e
 3875 0031 0B       		.uleb128 0xb
 3876 0032 03       		.uleb128 0x3
 3877 0033 08       		.uleb128 0x8
 3878 0034 00       		.byte	0
 3879 0035 00       		.byte	0
 3880 0036 05       		.uleb128 0x5
 3881 0037 16       		.uleb128 0x16
 3882 0038 00       		.byte	0
 3883 0039 03       		.uleb128 0x3
 3884 003a 0E       		.uleb128 0xe
 3885 003b 3A       		.uleb128 0x3a
 3886 003c 0B       		.uleb128 0xb
 3887 003d 3B       		.uleb128 0x3b
 3888 003e 05       		.uleb128 0x5
 3889 003f 49       		.uleb128 0x49
 3890 0040 13       		.uleb128 0x13
 3891 0041 00       		.byte	0
 3892 0042 00       		.byte	0
 3893 0043 06       		.uleb128 0x6
 3894 0044 0F       		.uleb128 0xf
 3895 0045 00       		.byte	0
 3896 0046 0B       		.uleb128 0xb
 3897 0047 0B       		.uleb128 0xb
 3898 0048 49       		.uleb128 0x49
 3899 0049 13       		.uleb128 0x13
 3900 004a 00       		.byte	0
 3901 004b 00       		.byte	0
 3902 004c 07       		.uleb128 0x7
 3903 004d 26       		.uleb128 0x26
 3904 004e 00       		.byte	0
 3905 004f 49       		.uleb128 0x49
 3906 0050 13       		.uleb128 0x13
 3907 0051 00       		.byte	0
 3908 0052 00       		.byte	0
 3909 0053 08       		.uleb128 0x8
 3910 0054 01       		.uleb128 0x1
 3911 0055 01       		.byte	0x1
 3912 0056 49       		.uleb128 0x49
 3913 0057 13       		.uleb128 0x13
 3914 0058 01       		.uleb128 0x1
 3915 0059 13       		.uleb128 0x13
 3916 005a 00       		.byte	0
 3917 005b 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 87


 3918 005c 09       		.uleb128 0x9
 3919 005d 21       		.uleb128 0x21
 3920 005e 00       		.byte	0
 3921 005f 49       		.uleb128 0x49
 3922 0060 13       		.uleb128 0x13
 3923 0061 2F       		.uleb128 0x2f
 3924 0062 0B       		.uleb128 0xb
 3925 0063 00       		.byte	0
 3926 0064 00       		.byte	0
 3927 0065 0A       		.uleb128 0xa
 3928 0066 13       		.uleb128 0x13
 3929 0067 01       		.byte	0x1
 3930 0068 03       		.uleb128 0x3
 3931 0069 08       		.uleb128 0x8
 3932 006a 0B       		.uleb128 0xb
 3933 006b 0B       		.uleb128 0xb
 3934 006c 3A       		.uleb128 0x3a
 3935 006d 0B       		.uleb128 0xb
 3936 006e 3B       		.uleb128 0x3b
 3937 006f 0B       		.uleb128 0xb
 3938 0070 01       		.uleb128 0x1
 3939 0071 13       		.uleb128 0x13
 3940 0072 00       		.byte	0
 3941 0073 00       		.byte	0
 3942 0074 0B       		.uleb128 0xb
 3943 0075 0D       		.uleb128 0xd
 3944 0076 00       		.byte	0
 3945 0077 03       		.uleb128 0x3
 3946 0078 0E       		.uleb128 0xe
 3947 0079 3A       		.uleb128 0x3a
 3948 007a 0B       		.uleb128 0xb
 3949 007b 3B       		.uleb128 0x3b
 3950 007c 0B       		.uleb128 0xb
 3951 007d 49       		.uleb128 0x49
 3952 007e 13       		.uleb128 0x13
 3953 007f 38       		.uleb128 0x38
 3954 0080 0B       		.uleb128 0xb
 3955 0081 00       		.byte	0
 3956 0082 00       		.byte	0
 3957 0083 0C       		.uleb128 0xc
 3958 0084 13       		.uleb128 0x13
 3959 0085 01       		.byte	0x1
 3960 0086 0B       		.uleb128 0xb
 3961 0087 05       		.uleb128 0x5
 3962 0088 3A       		.uleb128 0x3a
 3963 0089 0B       		.uleb128 0xb
 3964 008a 3B       		.uleb128 0x3b
 3965 008b 0B       		.uleb128 0xb
 3966 008c 01       		.uleb128 0x1
 3967 008d 13       		.uleb128 0x13
 3968 008e 00       		.byte	0
 3969 008f 00       		.byte	0
 3970 0090 0D       		.uleb128 0xd
 3971 0091 13       		.uleb128 0x13
 3972 0092 01       		.byte	0x1
 3973 0093 0B       		.uleb128 0xb
 3974 0094 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 88


 3975 0095 3A       		.uleb128 0x3a
 3976 0096 0B       		.uleb128 0xb
 3977 0097 3B       		.uleb128 0x3b
 3978 0098 0B       		.uleb128 0xb
 3979 0099 01       		.uleb128 0x1
 3980 009a 13       		.uleb128 0x13
 3981 009b 00       		.byte	0
 3982 009c 00       		.byte	0
 3983 009d 0E       		.uleb128 0xe
 3984 009e 0D       		.uleb128 0xd
 3985 009f 00       		.byte	0
 3986 00a0 03       		.uleb128 0x3
 3987 00a1 08       		.uleb128 0x8
 3988 00a2 3A       		.uleb128 0x3a
 3989 00a3 0B       		.uleb128 0xb
 3990 00a4 3B       		.uleb128 0x3b
 3991 00a5 0B       		.uleb128 0xb
 3992 00a6 49       		.uleb128 0x49
 3993 00a7 13       		.uleb128 0x13
 3994 00a8 38       		.uleb128 0x38
 3995 00a9 0B       		.uleb128 0xb
 3996 00aa 00       		.byte	0
 3997 00ab 00       		.byte	0
 3998 00ac 0F       		.uleb128 0xf
 3999 00ad 0D       		.uleb128 0xd
 4000 00ae 00       		.byte	0
 4001 00af 03       		.uleb128 0x3
 4002 00b0 0E       		.uleb128 0xe
 4003 00b1 3A       		.uleb128 0x3a
 4004 00b2 0B       		.uleb128 0xb
 4005 00b3 3B       		.uleb128 0x3b
 4006 00b4 0B       		.uleb128 0xb
 4007 00b5 49       		.uleb128 0x49
 4008 00b6 13       		.uleb128 0x13
 4009 00b7 38       		.uleb128 0x38
 4010 00b8 05       		.uleb128 0x5
 4011 00b9 00       		.byte	0
 4012 00ba 00       		.byte	0
 4013 00bb 10       		.uleb128 0x10
 4014 00bc 2E       		.uleb128 0x2e
 4015 00bd 00       		.byte	0
 4016 00be 3F       		.uleb128 0x3f
 4017 00bf 19       		.uleb128 0x19
 4018 00c0 03       		.uleb128 0x3
 4019 00c1 0E       		.uleb128 0xe
 4020 00c2 3A       		.uleb128 0x3a
 4021 00c3 0B       		.uleb128 0xb
 4022 00c4 3B       		.uleb128 0x3b
 4023 00c5 0B       		.uleb128 0xb
 4024 00c6 27       		.uleb128 0x27
 4025 00c7 19       		.uleb128 0x19
 4026 00c8 11       		.uleb128 0x11
 4027 00c9 01       		.uleb128 0x1
 4028 00ca 12       		.uleb128 0x12
 4029 00cb 06       		.uleb128 0x6
 4030 00cc 40       		.uleb128 0x40
 4031 00cd 18       		.uleb128 0x18
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 89


 4032 00ce 9642     		.uleb128 0x2116
 4033 00d0 19       		.uleb128 0x19
 4034 00d1 00       		.byte	0
 4035 00d2 00       		.byte	0
 4036 00d3 11       		.uleb128 0x11
 4037 00d4 2E       		.uleb128 0x2e
 4038 00d5 00       		.byte	0
 4039 00d6 3F       		.uleb128 0x3f
 4040 00d7 19       		.uleb128 0x19
 4041 00d8 03       		.uleb128 0x3
 4042 00d9 0E       		.uleb128 0xe
 4043 00da 3A       		.uleb128 0x3a
 4044 00db 0B       		.uleb128 0xb
 4045 00dc 3B       		.uleb128 0x3b
 4046 00dd 0B       		.uleb128 0xb
 4047 00de 11       		.uleb128 0x11
 4048 00df 01       		.uleb128 0x1
 4049 00e0 12       		.uleb128 0x12
 4050 00e1 06       		.uleb128 0x6
 4051 00e2 40       		.uleb128 0x40
 4052 00e3 18       		.uleb128 0x18
 4053 00e4 9642     		.uleb128 0x2116
 4054 00e6 19       		.uleb128 0x19
 4055 00e7 00       		.byte	0
 4056 00e8 00       		.byte	0
 4057 00e9 12       		.uleb128 0x12
 4058 00ea 2E       		.uleb128 0x2e
 4059 00eb 01       		.byte	0x1
 4060 00ec 3F       		.uleb128 0x3f
 4061 00ed 19       		.uleb128 0x19
 4062 00ee 03       		.uleb128 0x3
 4063 00ef 0E       		.uleb128 0xe
 4064 00f0 3A       		.uleb128 0x3a
 4065 00f1 0B       		.uleb128 0xb
 4066 00f2 3B       		.uleb128 0x3b
 4067 00f3 0B       		.uleb128 0xb
 4068 00f4 49       		.uleb128 0x49
 4069 00f5 13       		.uleb128 0x13
 4070 00f6 11       		.uleb128 0x11
 4071 00f7 01       		.uleb128 0x1
 4072 00f8 12       		.uleb128 0x12
 4073 00f9 06       		.uleb128 0x6
 4074 00fa 40       		.uleb128 0x40
 4075 00fb 18       		.uleb128 0x18
 4076 00fc 9642     		.uleb128 0x2116
 4077 00fe 19       		.uleb128 0x19
 4078 00ff 01       		.uleb128 0x1
 4079 0100 13       		.uleb128 0x13
 4080 0101 00       		.byte	0
 4081 0102 00       		.byte	0
 4082 0103 13       		.uleb128 0x13
 4083 0104 34       		.uleb128 0x34
 4084 0105 00       		.byte	0
 4085 0106 03       		.uleb128 0x3
 4086 0107 0E       		.uleb128 0xe
 4087 0108 3A       		.uleb128 0x3a
 4088 0109 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 90


 4089 010a 3B       		.uleb128 0x3b
 4090 010b 0B       		.uleb128 0xb
 4091 010c 49       		.uleb128 0x49
 4092 010d 13       		.uleb128 0x13
 4093 010e 02       		.uleb128 0x2
 4094 010f 18       		.uleb128 0x18
 4095 0110 00       		.byte	0
 4096 0111 00       		.byte	0
 4097 0112 14       		.uleb128 0x14
 4098 0113 0B       		.uleb128 0xb
 4099 0114 01       		.byte	0x1
 4100 0115 11       		.uleb128 0x11
 4101 0116 01       		.uleb128 0x1
 4102 0117 12       		.uleb128 0x12
 4103 0118 06       		.uleb128 0x6
 4104 0119 00       		.byte	0
 4105 011a 00       		.byte	0
 4106 011b 15       		.uleb128 0x15
 4107 011c 2E       		.uleb128 0x2e
 4108 011d 01       		.byte	0x1
 4109 011e 3F       		.uleb128 0x3f
 4110 011f 19       		.uleb128 0x19
 4111 0120 03       		.uleb128 0x3
 4112 0121 0E       		.uleb128 0xe
 4113 0122 3A       		.uleb128 0x3a
 4114 0123 0B       		.uleb128 0xb
 4115 0124 3B       		.uleb128 0x3b
 4116 0125 0B       		.uleb128 0xb
 4117 0126 27       		.uleb128 0x27
 4118 0127 19       		.uleb128 0x19
 4119 0128 49       		.uleb128 0x49
 4120 0129 13       		.uleb128 0x13
 4121 012a 11       		.uleb128 0x11
 4122 012b 01       		.uleb128 0x1
 4123 012c 12       		.uleb128 0x12
 4124 012d 06       		.uleb128 0x6
 4125 012e 40       		.uleb128 0x40
 4126 012f 18       		.uleb128 0x18
 4127 0130 9642     		.uleb128 0x2116
 4128 0132 19       		.uleb128 0x19
 4129 0133 01       		.uleb128 0x1
 4130 0134 13       		.uleb128 0x13
 4131 0135 00       		.byte	0
 4132 0136 00       		.byte	0
 4133 0137 16       		.uleb128 0x16
 4134 0138 05       		.uleb128 0x5
 4135 0139 00       		.byte	0
 4136 013a 03       		.uleb128 0x3
 4137 013b 0E       		.uleb128 0xe
 4138 013c 3A       		.uleb128 0x3a
 4139 013d 0B       		.uleb128 0xb
 4140 013e 3B       		.uleb128 0x3b
 4141 013f 0B       		.uleb128 0xb
 4142 0140 49       		.uleb128 0x49
 4143 0141 13       		.uleb128 0x13
 4144 0142 02       		.uleb128 0x2
 4145 0143 18       		.uleb128 0x18
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 91


 4146 0144 00       		.byte	0
 4147 0145 00       		.byte	0
 4148 0146 17       		.uleb128 0x17
 4149 0147 34       		.uleb128 0x34
 4150 0148 00       		.byte	0
 4151 0149 03       		.uleb128 0x3
 4152 014a 08       		.uleb128 0x8
 4153 014b 3A       		.uleb128 0x3a
 4154 014c 0B       		.uleb128 0xb
 4155 014d 3B       		.uleb128 0x3b
 4156 014e 0B       		.uleb128 0xb
 4157 014f 49       		.uleb128 0x49
 4158 0150 13       		.uleb128 0x13
 4159 0151 02       		.uleb128 0x2
 4160 0152 18       		.uleb128 0x18
 4161 0153 00       		.byte	0
 4162 0154 00       		.byte	0
 4163 0155 18       		.uleb128 0x18
 4164 0156 2E       		.uleb128 0x2e
 4165 0157 01       		.byte	0x1
 4166 0158 3F       		.uleb128 0x3f
 4167 0159 19       		.uleb128 0x19
 4168 015a 03       		.uleb128 0x3
 4169 015b 0E       		.uleb128 0xe
 4170 015c 3A       		.uleb128 0x3a
 4171 015d 0B       		.uleb128 0xb
 4172 015e 3B       		.uleb128 0x3b
 4173 015f 05       		.uleb128 0x5
 4174 0160 27       		.uleb128 0x27
 4175 0161 19       		.uleb128 0x19
 4176 0162 49       		.uleb128 0x49
 4177 0163 13       		.uleb128 0x13
 4178 0164 11       		.uleb128 0x11
 4179 0165 01       		.uleb128 0x1
 4180 0166 12       		.uleb128 0x12
 4181 0167 06       		.uleb128 0x6
 4182 0168 40       		.uleb128 0x40
 4183 0169 18       		.uleb128 0x18
 4184 016a 9642     		.uleb128 0x2116
 4185 016c 19       		.uleb128 0x19
 4186 016d 01       		.uleb128 0x1
 4187 016e 13       		.uleb128 0x13
 4188 016f 00       		.byte	0
 4189 0170 00       		.byte	0
 4190 0171 19       		.uleb128 0x19
 4191 0172 05       		.uleb128 0x5
 4192 0173 00       		.byte	0
 4193 0174 03       		.uleb128 0x3
 4194 0175 0E       		.uleb128 0xe
 4195 0176 3A       		.uleb128 0x3a
 4196 0177 0B       		.uleb128 0xb
 4197 0178 3B       		.uleb128 0x3b
 4198 0179 05       		.uleb128 0x5
 4199 017a 49       		.uleb128 0x49
 4200 017b 13       		.uleb128 0x13
 4201 017c 02       		.uleb128 0x2
 4202 017d 18       		.uleb128 0x18
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 92


 4203 017e 00       		.byte	0
 4204 017f 00       		.byte	0
 4205 0180 1A       		.uleb128 0x1a
 4206 0181 34       		.uleb128 0x34
 4207 0182 00       		.byte	0
 4208 0183 03       		.uleb128 0x3
 4209 0184 08       		.uleb128 0x8
 4210 0185 3A       		.uleb128 0x3a
 4211 0186 0B       		.uleb128 0xb
 4212 0187 3B       		.uleb128 0x3b
 4213 0188 05       		.uleb128 0x5
 4214 0189 49       		.uleb128 0x49
 4215 018a 13       		.uleb128 0x13
 4216 018b 02       		.uleb128 0x2
 4217 018c 18       		.uleb128 0x18
 4218 018d 00       		.byte	0
 4219 018e 00       		.byte	0
 4220 018f 1B       		.uleb128 0x1b
 4221 0190 2E       		.uleb128 0x2e
 4222 0191 01       		.byte	0x1
 4223 0192 3F       		.uleb128 0x3f
 4224 0193 19       		.uleb128 0x19
 4225 0194 03       		.uleb128 0x3
 4226 0195 0E       		.uleb128 0xe
 4227 0196 3A       		.uleb128 0x3a
 4228 0197 0B       		.uleb128 0xb
 4229 0198 3B       		.uleb128 0x3b
 4230 0199 05       		.uleb128 0x5
 4231 019a 49       		.uleb128 0x49
 4232 019b 13       		.uleb128 0x13
 4233 019c 11       		.uleb128 0x11
 4234 019d 01       		.uleb128 0x1
 4235 019e 12       		.uleb128 0x12
 4236 019f 06       		.uleb128 0x6
 4237 01a0 40       		.uleb128 0x40
 4238 01a1 18       		.uleb128 0x18
 4239 01a2 9642     		.uleb128 0x2116
 4240 01a4 19       		.uleb128 0x19
 4241 01a5 01       		.uleb128 0x1
 4242 01a6 13       		.uleb128 0x13
 4243 01a7 00       		.byte	0
 4244 01a8 00       		.byte	0
 4245 01a9 1C       		.uleb128 0x1c
 4246 01aa 34       		.uleb128 0x34
 4247 01ab 00       		.byte	0
 4248 01ac 03       		.uleb128 0x3
 4249 01ad 0E       		.uleb128 0xe
 4250 01ae 3A       		.uleb128 0x3a
 4251 01af 0B       		.uleb128 0xb
 4252 01b0 3B       		.uleb128 0x3b
 4253 01b1 05       		.uleb128 0x5
 4254 01b2 49       		.uleb128 0x49
 4255 01b3 13       		.uleb128 0x13
 4256 01b4 02       		.uleb128 0x2
 4257 01b5 18       		.uleb128 0x18
 4258 01b6 00       		.byte	0
 4259 01b7 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 93


 4260 01b8 1D       		.uleb128 0x1d
 4261 01b9 2E       		.uleb128 0x2e
 4262 01ba 00       		.byte	0
 4263 01bb 3F       		.uleb128 0x3f
 4264 01bc 19       		.uleb128 0x19
 4265 01bd 03       		.uleb128 0x3
 4266 01be 0E       		.uleb128 0xe
 4267 01bf 3A       		.uleb128 0x3a
 4268 01c0 0B       		.uleb128 0xb
 4269 01c1 3B       		.uleb128 0x3b
 4270 01c2 05       		.uleb128 0x5
 4271 01c3 11       		.uleb128 0x11
 4272 01c4 01       		.uleb128 0x1
 4273 01c5 12       		.uleb128 0x12
 4274 01c6 06       		.uleb128 0x6
 4275 01c7 40       		.uleb128 0x40
 4276 01c8 18       		.uleb128 0x18
 4277 01c9 9642     		.uleb128 0x2116
 4278 01cb 19       		.uleb128 0x19
 4279 01cc 00       		.byte	0
 4280 01cd 00       		.byte	0
 4281 01ce 1E       		.uleb128 0x1e
 4282 01cf 2E       		.uleb128 0x2e
 4283 01d0 00       		.byte	0
 4284 01d1 3F       		.uleb128 0x3f
 4285 01d2 19       		.uleb128 0x19
 4286 01d3 03       		.uleb128 0x3
 4287 01d4 0E       		.uleb128 0xe
 4288 01d5 3A       		.uleb128 0x3a
 4289 01d6 0B       		.uleb128 0xb
 4290 01d7 3B       		.uleb128 0x3b
 4291 01d8 05       		.uleb128 0x5
 4292 01d9 49       		.uleb128 0x49
 4293 01da 13       		.uleb128 0x13
 4294 01db 11       		.uleb128 0x11
 4295 01dc 01       		.uleb128 0x1
 4296 01dd 12       		.uleb128 0x12
 4297 01de 06       		.uleb128 0x6
 4298 01df 40       		.uleb128 0x40
 4299 01e0 18       		.uleb128 0x18
 4300 01e1 9642     		.uleb128 0x2116
 4301 01e3 19       		.uleb128 0x19
 4302 01e4 00       		.byte	0
 4303 01e5 00       		.byte	0
 4304 01e6 1F       		.uleb128 0x1f
 4305 01e7 2E       		.uleb128 0x2e
 4306 01e8 01       		.byte	0x1
 4307 01e9 3F       		.uleb128 0x3f
 4308 01ea 19       		.uleb128 0x19
 4309 01eb 03       		.uleb128 0x3
 4310 01ec 0E       		.uleb128 0xe
 4311 01ed 3A       		.uleb128 0x3a
 4312 01ee 0B       		.uleb128 0xb
 4313 01ef 3B       		.uleb128 0x3b
 4314 01f0 05       		.uleb128 0x5
 4315 01f1 11       		.uleb128 0x11
 4316 01f2 01       		.uleb128 0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 94


 4317 01f3 12       		.uleb128 0x12
 4318 01f4 06       		.uleb128 0x6
 4319 01f5 40       		.uleb128 0x40
 4320 01f6 18       		.uleb128 0x18
 4321 01f7 9642     		.uleb128 0x2116
 4322 01f9 19       		.uleb128 0x19
 4323 01fa 01       		.uleb128 0x1
 4324 01fb 13       		.uleb128 0x13
 4325 01fc 00       		.byte	0
 4326 01fd 00       		.byte	0
 4327 01fe 20       		.uleb128 0x20
 4328 01ff 0B       		.uleb128 0xb
 4329 0200 01       		.byte	0x1
 4330 0201 55       		.uleb128 0x55
 4331 0202 17       		.uleb128 0x17
 4332 0203 00       		.byte	0
 4333 0204 00       		.byte	0
 4334 0205 21       		.uleb128 0x21
 4335 0206 2E       		.uleb128 0x2e
 4336 0207 00       		.byte	0
 4337 0208 3F       		.uleb128 0x3f
 4338 0209 19       		.uleb128 0x19
 4339 020a 03       		.uleb128 0x3
 4340 020b 0E       		.uleb128 0xe
 4341 020c 3A       		.uleb128 0x3a
 4342 020d 0B       		.uleb128 0xb
 4343 020e 3B       		.uleb128 0x3b
 4344 020f 05       		.uleb128 0x5
 4345 0210 49       		.uleb128 0x49
 4346 0211 13       		.uleb128 0x13
 4347 0212 11       		.uleb128 0x11
 4348 0213 01       		.uleb128 0x1
 4349 0214 12       		.uleb128 0x12
 4350 0215 06       		.uleb128 0x6
 4351 0216 40       		.uleb128 0x40
 4352 0217 18       		.uleb128 0x18
 4353 0218 9742     		.uleb128 0x2117
 4354 021a 19       		.uleb128 0x19
 4355 021b 00       		.byte	0
 4356 021c 00       		.byte	0
 4357 021d 22       		.uleb128 0x22
 4358 021e 34       		.uleb128 0x34
 4359 021f 00       		.byte	0
 4360 0220 03       		.uleb128 0x3
 4361 0221 0E       		.uleb128 0xe
 4362 0222 3A       		.uleb128 0x3a
 4363 0223 0B       		.uleb128 0xb
 4364 0224 3B       		.uleb128 0x3b
 4365 0225 05       		.uleb128 0x5
 4366 0226 49       		.uleb128 0x49
 4367 0227 13       		.uleb128 0x13
 4368 0228 3F       		.uleb128 0x3f
 4369 0229 19       		.uleb128 0x19
 4370 022a 3C       		.uleb128 0x3c
 4371 022b 19       		.uleb128 0x19
 4372 022c 00       		.byte	0
 4373 022d 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 95


 4374 022e 23       		.uleb128 0x23
 4375 022f 35       		.uleb128 0x35
 4376 0230 00       		.byte	0
 4377 0231 49       		.uleb128 0x49
 4378 0232 13       		.uleb128 0x13
 4379 0233 00       		.byte	0
 4380 0234 00       		.byte	0
 4381 0235 24       		.uleb128 0x24
 4382 0236 34       		.uleb128 0x34
 4383 0237 00       		.byte	0
 4384 0238 03       		.uleb128 0x3
 4385 0239 0E       		.uleb128 0xe
 4386 023a 3A       		.uleb128 0x3a
 4387 023b 0B       		.uleb128 0xb
 4388 023c 3B       		.uleb128 0x3b
 4389 023d 0B       		.uleb128 0xb
 4390 023e 49       		.uleb128 0x49
 4391 023f 13       		.uleb128 0x13
 4392 0240 3F       		.uleb128 0x3f
 4393 0241 19       		.uleb128 0x19
 4394 0242 02       		.uleb128 0x2
 4395 0243 18       		.uleb128 0x18
 4396 0244 00       		.byte	0
 4397 0245 00       		.byte	0
 4398 0246 25       		.uleb128 0x25
 4399 0247 21       		.uleb128 0x21
 4400 0248 00       		.byte	0
 4401 0249 49       		.uleb128 0x49
 4402 024a 13       		.uleb128 0x13
 4403 024b 2F       		.uleb128 0x2f
 4404 024c 05       		.uleb128 0x5
 4405 024d 00       		.byte	0
 4406 024e 00       		.byte	0
 4407 024f 00       		.byte	0
 4408              		.section	.debug_aranges,"",%progbits
 4409 0000 C4000000 		.4byte	0xc4
 4410 0004 0200     		.2byte	0x2
 4411 0006 00000000 		.4byte	.Ldebug_info0
 4412 000a 04       		.byte	0x4
 4413 000b 00       		.byte	0
 4414 000c 0000     		.2byte	0
 4415 000e 0000     		.2byte	0
 4416 0010 00000000 		.4byte	.LFB64
 4417 0014 44000000 		.4byte	.LFE64-.LFB64
 4418 0018 00000000 		.4byte	.LFB65
 4419 001c 6C000000 		.4byte	.LFE65-.LFB65
 4420 0020 00000000 		.4byte	.LFB66
 4421 0024 32000000 		.4byte	.LFE66-.LFB66
 4422 0028 00000000 		.4byte	.LFB67
 4423 002c 20000000 		.4byte	.LFE67-.LFB67
 4424 0030 00000000 		.4byte	.LFB68
 4425 0034 40000000 		.4byte	.LFE68-.LFB68
 4426 0038 00000000 		.4byte	.LFB69
 4427 003c DC000000 		.4byte	.LFE69-.LFB69
 4428 0040 00000000 		.4byte	.LFB70
 4429 0044 1C000000 		.4byte	.LFE70-.LFB70
 4430 0048 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 96


 4431 004c 28000000 		.4byte	.LFE71-.LFB71
 4432 0050 00000000 		.4byte	.LFB72
 4433 0054 C8000000 		.4byte	.LFE72-.LFB72
 4434 0058 00000000 		.4byte	.LFB73
 4435 005c FC000000 		.4byte	.LFE73-.LFB73
 4436 0060 00000000 		.4byte	.LFB74
 4437 0064 78000000 		.4byte	.LFE74-.LFB74
 4438 0068 00000000 		.4byte	.LFB75
 4439 006c 38010000 		.4byte	.LFE75-.LFB75
 4440 0070 00000000 		.4byte	.LFB76
 4441 0074 B4000000 		.4byte	.LFE76-.LFB76
 4442 0078 00000000 		.4byte	.LFB77
 4443 007c 1C000000 		.4byte	.LFE77-.LFB77
 4444 0080 00000000 		.4byte	.LFB78
 4445 0084 28000000 		.4byte	.LFE78-.LFB78
 4446 0088 00000000 		.4byte	.LFB79
 4447 008c 30010000 		.4byte	.LFE79-.LFB79
 4448 0090 00000000 		.4byte	.LFB80
 4449 0094 38010000 		.4byte	.LFE80-.LFB80
 4450 0098 00000000 		.4byte	.LFB81
 4451 009c 44010000 		.4byte	.LFE81-.LFB81
 4452 00a0 00000000 		.4byte	.LFB82
 4453 00a4 14000000 		.4byte	.LFE82-.LFB82
 4454 00a8 00000000 		.4byte	.LFB83
 4455 00ac 1A000000 		.4byte	.LFE83-.LFB83
 4456 00b0 00000000 		.4byte	.LFB84
 4457 00b4 2A000000 		.4byte	.LFE84-.LFB84
 4458 00b8 00000000 		.4byte	.LFB85
 4459 00bc 7C020000 		.4byte	.LFE85-.LFB85
 4460 00c0 00000000 		.4byte	0
 4461 00c4 00000000 		.4byte	0
 4462              		.section	.debug_ranges,"",%progbits
 4463              	.Ldebug_ranges0:
 4464 0000 06000000 		.4byte	.LBB9
 4465 0004 F2000000 		.4byte	.LBE9
 4466 0008 F4000000 		.4byte	.LBB11
 4467 000c 06010000 		.4byte	.LBE11
 4468 0010 00000000 		.4byte	0
 4469 0014 00000000 		.4byte	0
 4470 0018 00000000 		.4byte	.LFB64
 4471 001c 44000000 		.4byte	.LFE64
 4472 0020 00000000 		.4byte	.LFB65
 4473 0024 6C000000 		.4byte	.LFE65
 4474 0028 00000000 		.4byte	.LFB66
 4475 002c 32000000 		.4byte	.LFE66
 4476 0030 00000000 		.4byte	.LFB67
 4477 0034 20000000 		.4byte	.LFE67
 4478 0038 00000000 		.4byte	.LFB68
 4479 003c 40000000 		.4byte	.LFE68
 4480 0040 00000000 		.4byte	.LFB69
 4481 0044 DC000000 		.4byte	.LFE69
 4482 0048 00000000 		.4byte	.LFB70
 4483 004c 1C000000 		.4byte	.LFE70
 4484 0050 00000000 		.4byte	.LFB71
 4485 0054 28000000 		.4byte	.LFE71
 4486 0058 00000000 		.4byte	.LFB72
 4487 005c C8000000 		.4byte	.LFE72
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 97


 4488 0060 00000000 		.4byte	.LFB73
 4489 0064 FC000000 		.4byte	.LFE73
 4490 0068 00000000 		.4byte	.LFB74
 4491 006c 78000000 		.4byte	.LFE74
 4492 0070 00000000 		.4byte	.LFB75
 4493 0074 38010000 		.4byte	.LFE75
 4494 0078 00000000 		.4byte	.LFB76
 4495 007c B4000000 		.4byte	.LFE76
 4496 0080 00000000 		.4byte	.LFB77
 4497 0084 1C000000 		.4byte	.LFE77
 4498 0088 00000000 		.4byte	.LFB78
 4499 008c 28000000 		.4byte	.LFE78
 4500 0090 00000000 		.4byte	.LFB79
 4501 0094 30010000 		.4byte	.LFE79
 4502 0098 00000000 		.4byte	.LFB80
 4503 009c 38010000 		.4byte	.LFE80
 4504 00a0 00000000 		.4byte	.LFB81
 4505 00a4 44010000 		.4byte	.LFE81
 4506 00a8 00000000 		.4byte	.LFB82
 4507 00ac 14000000 		.4byte	.LFE82
 4508 00b0 00000000 		.4byte	.LFB83
 4509 00b4 1A000000 		.4byte	.LFE83
 4510 00b8 00000000 		.4byte	.LFB84
 4511 00bc 2A000000 		.4byte	.LFE84
 4512 00c0 00000000 		.4byte	.LFB85
 4513 00c4 7C020000 		.4byte	.LFE85
 4514 00c8 00000000 		.4byte	0
 4515 00cc 00000000 		.4byte	0
 4516              		.section	.debug_line,"",%progbits
 4517              	.Ldebug_line0:
 4518 0000 18050000 		.section	.debug_str,"MS",%progbits,1
 4518      0200EF01 
 4518      00000201 
 4518      FB0E0D00 
 4518      01010101 
 4519              	.LASF114:
 4520 0000 676D745F 		.ascii	"gmt_offset\000"
 4520      6F666673 
 4520      657400
 4521              	.LASF16:
 4522 000b 75696E74 		.ascii	"uint16\000"
 4522      313600
 4523              	.LASF56:
 4524 0012 76616C75 		.ascii	"value\000"
 4524      6500
 4525              	.LASF27:
 4526 0018 746D5F68 		.ascii	"tm_hour\000"
 4526      6F757200 
 4527              	.LASF32:
 4528 0020 746D5F79 		.ascii	"tm_yday\000"
 4528      64617900 
 4529              	.LASF4:
 4530 0028 5F5F7569 		.ascii	"__uint8_t\000"
 4530      6E74385F 
 4530      7400
 4531              	.LASF51:
 4532 0032 6C6F6E67 		.ascii	"longitude\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 98


 4532      69747564 
 4532      6500
 4533              	.LASF136:
 4534 003c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4534      43313120 
 4534      352E342E 
 4534      31203230 
 4534      31363036 
 4535 006f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4535      20726576 
 4535      6973696F 
 4535      6E203233 
 4535      37373135 
 4536 00a2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4536      66756E63 
 4536      74696F6E 
 4536      2D736563 
 4536      74696F6E 
 4537              	.LASF117:
 4538 00ca 6D6F6465 		.ascii	"modem_wakeup\000"
 4538      6D5F7761 
 4538      6B657570 
 4538      00
 4539              	.LASF10:
 4540 00d7 6C6F6E67 		.ascii	"long long unsigned int\000"
 4540      206C6F6E 
 4540      6720756E 
 4540      7369676E 
 4540      65642069 
 4541              	.LASF123:
 4542 00ee 6D6F6465 		.ascii	"modem_state\000"
 4542      6D5F7374 
 4542      61746500 
 4543              	.LASF88:
 4544 00fa 74657374 		.ascii	"test\000"
 4544      00
 4545              	.LASF122:
 4546 00ff 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4546      52784275 
 4546      66666572 
 4546      00
 4547              	.LASF125:
 4548 010c 6D6F6465 		.ascii	"modem_stats\000"
 4548      6D5F7374 
 4548      61747300 
 4549              	.LASF9:
 4550 0118 6C6F6E67 		.ascii	"long long int\000"
 4550      206C6F6E 
 4550      6720696E 
 4550      7400
 4551              	.LASF0:
 4552 0126 7369676E 		.ascii	"signed char\000"
 4552      65642063 
 4552      68617200 
 4553              	.LASF44:
 4554 0132 65636E6F 		.ascii	"ecno\000"
 4554      00
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 99


 4555              	.LASF47:
 4556 0137 74696D65 		.ascii	"time_to_network_connect\000"
 4556      5F746F5F 
 4556      6E657477 
 4556      6F726B5F 
 4556      636F6E6E 
 4557              	.LASF130:
 4558 014f 68747470 		.ascii	"http_body\000"
 4558      5F626F64 
 4558      7900
 4559              	.LASF99:
 4560 0159 7365745F 		.ascii	"set_up_internet_connection\000"
 4560      75705F69 
 4560      6E746572 
 4560      6E65745F 
 4560      636F6E6E 
 4561              	.LASF113:
 4562 0174 7365636F 		.ascii	"second\000"
 4562      6E6400
 4563              	.LASF109:
 4564 017b 79656172 		.ascii	"year\000"
 4564      00
 4565              	.LASF6:
 4566 0180 6C6F6E67 		.ascii	"long int\000"
 4566      20696E74 
 4566      00
 4567              	.LASF115:
 4568 0189 6D6F6465 		.ascii	"modem_get_state\000"
 4568      6D5F6765 
 4568      745F7374 
 4568      61746500 
 4569              	.LASF52:
 4570 0199 616C7469 		.ascii	"altitude\000"
 4570      74756465 
 4570      00
 4571              	.LASF15:
 4572 01a2 75696E74 		.ascii	"uint8\000"
 4572      3800
 4573              	.LASF62:
 4574 01a8 6E6F6465 		.ascii	"node_id\000"
 4574      5F696400 
 4575              	.LASF21:
 4576 01b0 646F7562 		.ascii	"double\000"
 4576      6C6500
 4577              	.LASF19:
 4578 01b7 696E7433 		.ascii	"int32\000"
 4578      3200
 4579              	.LASF105:
 4580 01bd 6D6F6465 		.ascii	"modem_configure_settings\000"
 4580      6D5F636F 
 4580      6E666967 
 4580      7572655F 
 4580      73657474 
 4581              	.LASF89:
 4582 01d6 6E657477 		.ascii	"network_time\000"
 4582      6F726B5F 
 4582      74696D65 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 100


 4582      00
 4583              	.LASF3:
 4584 01e3 73686F72 		.ascii	"short unsigned int\000"
 4584      7420756E 
 4584      7369676E 
 4584      65642069 
 4584      6E7400
 4585              	.LASF17:
 4586 01f6 75696E74 		.ascii	"uint32\000"
 4586      333200
 4587              	.LASF85:
 4588 01fd 696E7465 		.ascii	"interval\000"
 4588      7276616C 
 4588      00
 4589              	.LASF7:
 4590 0206 5F5F7569 		.ascii	"__uint32_t\000"
 4590      6E743332 
 4590      5F7400
 4591              	.LASF107:
 4592 0211 6D6F6465 		.ascii	"modem_get_network_time\000"
 4592      6D5F6765 
 4592      745F6E65 
 4592      74776F72 
 4592      6B5F7469 
 4593              	.LASF29:
 4594 0228 746D5F6D 		.ascii	"tm_mon\000"
 4594      6F6E00
 4595              	.LASF66:
 4596 022f 65705F70 		.ascii	"ep_pswd\000"
 4596      73776400 
 4597              	.LASF116:
 4598 0237 6D6F6465 		.ascii	"modem_sleep\000"
 4598      6D5F736C 
 4598      65657000 
 4599              	.LASF30:
 4600 0243 746D5F79 		.ascii	"tm_year\000"
 4600      65617200 
 4601              	.LASF110:
 4602 024b 6D6F6E74 		.ascii	"month\000"
 4602      6800
 4603              	.LASF71:
 4604 0251 70696E73 		.ascii	"pins_configure_active\000"
 4604      5F636F6E 
 4604      66696775 
 4604      72655F61 
 4604      63746976 
 4605              	.LASF58:
 4606 0267 6B65795F 		.ascii	"key_value_t\000"
 4606      76616C75 
 4606      655F7400 
 4607              	.LASF76:
 4608 0273 7077725F 		.ascii	"pwr_check\000"
 4608      63686563 
 4608      6B00
 4609              	.LASF8:
 4610 027d 6C6F6E67 		.ascii	"long unsigned int\000"
 4610      20756E73 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 101


 4610      69676E65 
 4610      6420696E 
 4610      7400
 4611              	.LASF91:
 4612 028f 65787472 		.ascii	"extract_string\000"
 4612      6163745F 
 4612      73747269 
 4612      6E6700
 4613              	.LASF81:
 4614 029e 74696D65 		.ascii	"timeout\000"
 4614      6F757400 
 4615              	.LASF104:
 4616 02a6 6765745F 		.ascii	"get_cell_network_stats\000"
 4616      63656C6C 
 4616      5F6E6574 
 4616      776F726B 
 4616      5F737461 
 4617              	.LASF53:
 4618 02bd 74696D65 		.ascii	"time_to_lock\000"
 4618      5F746F5F 
 4618      6C6F636B 
 4618      00
 4619              	.LASF128:
 4620 02ca 64617461 		.ascii	"data\000"
 4620      00
 4621              	.LASF65:
 4622 02cf 65705F75 		.ascii	"ep_user\000"
 4622      73657200 
 4623              	.LASF64:
 4624 02d7 65705F70 		.ascii	"ep_port\000"
 4624      6F727400 
 4625              	.LASF33:
 4626 02df 746D5F69 		.ascii	"tm_isdst\000"
 4626      73647374 
 4626      00
 4627              	.LASF59:
 4628 02e8 6D6F6465 		.ascii	"modem_info\000"
 4628      6D5F696E 
 4628      666F00
 4629              	.LASF63:
 4630 02f3 65705F68 		.ascii	"ep_host\000"
 4630      6F737400 
 4631              	.LASF60:
 4632 02fb 63686970 		.ascii	"chip_uniqueId\000"
 4632      5F756E69 
 4632      71756549 
 4632      6400
 4633              	.LASF86:
 4634 0309 6D6F6465 		.ascii	"modem_power_up\000"
 4634      6D5F706F 
 4634      7765725F 
 4634      757000
 4635              	.LASF137:
 4636 0318 6D6F6465 		.ascii	"modem.c\000"
 4636      6D2E6300 
 4637              	.LASF93:
 4638 0320 62656769 		.ascii	"beginMarker\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 102


 4638      6E4D6172 
 4638      6B657200 
 4639              	.LASF95:
 4640 032c 74617267 		.ascii	"target\000"
 4640      657400
 4641              	.LASF48:
 4642 0333 74696D65 		.ascii	"time_to_acquire_ip\000"
 4642      5F746F5F 
 4642      61637175 
 4642      6972655F 
 4642      697000
 4643              	.LASF94:
 4644 0346 656E644D 		.ascii	"endMarker\000"
 4644      61726B65 
 4644      7200
 4645              	.LASF2:
 4646 0350 73686F72 		.ascii	"short int\000"
 4646      7420696E 
 4646      7400
 4647              	.LASF108:
 4648 035a 65706F63 		.ascii	"epoch_time\000"
 4648      685F7469 
 4648      6D6500
 4649              	.LASF5:
 4650 0365 5F5F696E 		.ascii	"__int32_t\000"
 4650      7433325F 
 4650      7400
 4651              	.LASF92:
 4652 036f 66726F6D 		.ascii	"from\000"
 4652      00
 4653              	.LASF98:
 4654 0374 63726567 		.ascii	"creg\000"
 4654      00
 4655              	.LASF82:
 4656 0379 61745F61 		.ascii	"at_attempt\000"
 4656      7474656D 
 4656      707400
 4657              	.LASF90:
 4658 0384 61745F77 		.ascii	"at_write_command\000"
 4658      72697465 
 4658      5F636F6D 
 4658      6D616E64 
 4658      00
 4659              	.LASF61:
 4660 0395 7379735F 		.ascii	"sys_info_t\000"
 4660      696E666F 
 4660      5F7400
 4661              	.LASF126:
 4662 03a0 64617461 		.ascii	"dataPointsInStack\000"
 4662      506F696E 
 4662      7473496E 
 4662      53746163 
 4662      6B00
 4663              	.LASF118:
 4664 03b2 6D6F6465 		.ascii	"modem_get_gps_coordinates\000"
 4664      6D5F6765 
 4664      745F6770 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 103


 4664      735F636F 
 4664      6F726469 
 4665              	.LASF26:
 4666 03cc 746D5F6D 		.ascii	"tm_min\000"
 4666      696E00
 4667              	.LASF24:
 4668 03d3 73697A65 		.ascii	"sizetype\000"
 4668      74797065 
 4668      00
 4669              	.LASF97:
 4670 03dc 69735F63 		.ascii	"is_connected_to_cell_network\000"
 4670      6F6E6E65 
 4670      63746564 
 4670      5F746F5F 
 4670      63656C6C 
 4671              	.LASF134:
 4672 03f9 75617274 		.ascii	"uart_received_string\000"
 4672      5F726563 
 4672      65697665 
 4672      645F7374 
 4672      72696E67 
 4673              	.LASF50:
 4674 040e 6C617469 		.ascii	"latitude\000"
 4674      74756465 
 4674      00
 4675              	.LASF34:
 4676 0417 74657374 		.ascii	"test_name\000"
 4676      5F6E616D 
 4676      6500
 4677              	.LASF87:
 4678 0421 6D6F6465 		.ascii	"modem_test\000"
 4678      6D5F7465 
 4678      737400
 4679              	.LASF121:
 4680 042c 6D617463 		.ascii	"match\000"
 4680      6800
 4681              	.LASF111:
 4682 0432 686F7572 		.ascii	"hour\000"
 4682      00
 4683              	.LASF79:
 4684 0437 636F6D6D 		.ascii	"commands\000"
 4684      616E6473 
 4684      00
 4685              	.LASF83:
 4686 0440 636F6D70 		.ascii	"compare_location\000"
 4686      6172655F 
 4686      6C6F6361 
 4686      74696F6E 
 4686      00
 4687              	.LASF20:
 4688 0451 666C6F61 		.ascii	"float\000"
 4688      7400
 4689              	.LASF69:
 4690 0457 6D6F6465 		.ascii	"modem_initialize\000"
 4690      6D5F696E 
 4690      69746961 
 4690      6C697A65 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 104


 4690      00
 4691              	.LASF103:
 4692 0468 746F6B65 		.ascii	"token\000"
 4692      6E00
 4693              	.LASF100:
 4694 046e 6973725F 		.ascii	"isr_telit_rx\000"
 4694      74656C69 
 4694      745F7278 
 4694      00
 4695              	.LASF13:
 4696 047b 696E7433 		.ascii	"int32_t\000"
 4696      325F7400 
 4697              	.LASF1:
 4698 0483 756E7369 		.ascii	"unsigned char\000"
 4698      676E6564 
 4698      20636861 
 4698      7200
 4699              	.LASF133:
 4700 0491 73797374 		.ascii	"system_settings\000"
 4700      656D5F73 
 4700      65747469 
 4700      6E677300 
 4701              	.LASF84:
 4702 04a1 64656C61 		.ascii	"delay\000"
 4702      7900
 4703              	.LASF45:
 4704 04a7 72737271 		.ascii	"rsrq\000"
 4704      00
 4705              	.LASF102:
 4706 04ac 63657371 		.ascii	"cesq\000"
 4706      00
 4707              	.LASF43:
 4708 04b1 72736370 		.ascii	"rscp\000"
 4708      00
 4709              	.LASF138:
 4710 04b6 433A5C55 		.ascii	"C:\\Users\\hail\\Desktop\\Brooke Research\\notoriOS"
 4710      73657273 
 4710      5C686169 
 4710      6C5C4465 
 4710      736B746F 
 4711 04e4 5C6E6F74 		.ascii	"\\notoriOS\\notoriOS\\notoriOS.cydsn\000"
 4711      6F72694F 
 4711      535C6E6F 
 4711      746F7269 
 4711      4F535C6E 
 4712              	.LASF37:
 4713 0506 74657374 		.ascii	"test_t\000"
 4713      5F7400
 4714              	.LASF132:
 4715 050d 73797374 		.ascii	"system_info\000"
 4715      656D5F69 
 4715      6E666F00 
 4716              	.LASF40:
 4717 0519 696D6569 		.ascii	"imei\000"
 4717      00
 4718              	.LASF36:
 4719 051e 72656173 		.ascii	"reason\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 105


 4719      6F6E00
 4720              	.LASF46:
 4721 0525 72737270 		.ascii	"rsrp\000"
 4721      00
 4722              	.LASF49:
 4723 052a 6D6F6465 		.ascii	"modem_stats_t\000"
 4723      6D5F7374 
 4723      6174735F 
 4723      7400
 4724              	.LASF78:
 4725 0538 75617274 		.ascii	"uart_string_reset\000"
 4725      5F737472 
 4725      696E675F 
 4725      72657365 
 4725      7400
 4726              	.LASF31:
 4727 054a 746D5F77 		.ascii	"tm_wday\000"
 4727      64617900 
 4728              	.LASF77:
 4729 0552 6D6F6465 		.ascii	"modem_soft_power_cycle\000"
 4729      6D5F736F 
 4729      66745F70 
 4729      6F776572 
 4729      5F637963 
 4730              	.LASF23:
 4731 0569 6C6F6E67 		.ascii	"long double\000"
 4731      20646F75 
 4731      626C6500 
 4732              	.LASF22:
 4733 0575 63686172 		.ascii	"char\000"
 4733      00
 4734              	.LASF96:
 4735 057a 6D6F6465 		.ascii	"modem_process_tasks\000"
 4735      6D5F7072 
 4735      6F636573 
 4735      735F7461 
 4735      736B7300 
 4736              	.LASF11:
 4737 058e 756E7369 		.ascii	"unsigned int\000"
 4737      676E6564 
 4737      20696E74 
 4737      00
 4738              	.LASF106:
 4739 059b 4346554E 		.ascii	"CFUN\000"
 4739      00
 4740              	.LASF39:
 4741 05a0 6D6F6465 		.ascii	"model_id\000"
 4741      6C5F6964 
 4741      00
 4742              	.LASF131:
 4743 05a9 68747470 		.ascii	"http_route\000"
 4743      5F726F75 
 4743      746500
 4744              	.LASF41:
 4745 05b4 6D6F6465 		.ascii	"modem_info_t\000"
 4745      6D5F696E 
 4745      666F5F74 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 106


 4745      00
 4746              	.LASF55:
 4747 05c1 6770735F 		.ascii	"gps_t\000"
 4747      7400
 4748              	.LASF135:
 4749 05c7 75617274 		.ascii	"uart_string_index\000"
 4749      5F737472 
 4749      696E675F 
 4749      696E6465 
 4749      7800
 4750              	.LASF101:
 4751 05d9 69735F63 		.ascii	"is_connected_to_internet\000"
 4751      6F6E6E65 
 4751      63746564 
 4751      5F746F5F 
 4751      696E7465 
 4752              	.LASF124:
 4753 05f2 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 4753      6D5F7374 
 4753      6172745F 
 4753      74696D65 
 4753      5F737461 
 4754              	.LASF120:
 4755 0609 6770735F 		.ascii	"gps_status\000"
 4755      73746174 
 4755      757300
 4756              	.LASF70:
 4757 0614 70696E73 		.ascii	"pins_configure_inactive\000"
 4757      5F636F6E 
 4757      66696775 
 4757      72655F69 
 4757      6E616374 
 4758              	.LASF38:
 4759 062c 73696D5F 		.ascii	"sim_id\000"
 4759      696400
 4760              	.LASF28:
 4761 0633 746D5F6D 		.ascii	"tm_mday\000"
 4761      64617900 
 4762              	.LASF54:
 4763 063b 76616C69 		.ascii	"valid\000"
 4763      6400
 4764              	.LASF112:
 4765 0641 6D696E75 		.ascii	"minute\000"
 4765      746500
 4766              	.LASF14:
 4767 0648 75696E74 		.ascii	"uint32_t\000"
 4767      33325F74 
 4767      00
 4768              	.LASF25:
 4769 0651 746D5F73 		.ascii	"tm_sec\000"
 4769      656300
 4770              	.LASF35:
 4771 0658 73746174 		.ascii	"status\000"
 4771      757300
 4772              	.LASF127:
 4773 065f 64617461 		.ascii	"dataPointsInStackDesired\000"
 4773      506F696E 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 107


 4773      7473496E 
 4773      53746163 
 4773      6B446573 
 4774              	.LASF68:
 4775 0678 7379735F 		.ascii	"sys_settings_t\000"
 4775      73657474 
 4775      696E6773 
 4775      5F7400
 4776              	.LASF12:
 4777 0687 75696E74 		.ascii	"uint8_t\000"
 4777      385F7400 
 4778              	.LASF67:
 4779 068f 65705F64 		.ascii	"ep_database\000"
 4779      61746162 
 4779      61736500 
 4780              	.LASF18:
 4781 069b 696E7431 		.ascii	"int16\000"
 4781      3600
 4782              	.LASF73:
 4783 06a1 61745F72 		.ascii	"at_ready\000"
 4783      65616479 
 4783      00
 4784              	.LASF74:
 4785 06aa 61747465 		.ascii	"attempts\000"
 4785      6D707473 
 4785      00
 4786              	.LASF75:
 4787 06b3 626F6F74 		.ascii	"boot_time\000"
 4787      5F74696D 
 4787      6500
 4788              	.LASF80:
 4789 06bd 65787065 		.ascii	"expected_response\000"
 4789      63746564 
 4789      5F726573 
 4789      706F6E73 
 4789      6500
 4790              	.LASF42:
 4791 06cf 72737369 		.ascii	"rssi\000"
 4791      00
 4792              	.LASF119:
 4793 06d4 6C6F636B 		.ascii	"lock_time\000"
 4793      5F74696D 
 4793      6500
 4794              	.LASF129:
 4795 06de 68747470 		.ascii	"http_request\000"
 4795      5F726571 
 4795      75657374 
 4795      00
 4796              	.LASF72:
 4797 06eb 6D6F6465 		.ascii	"modem_power_down\000"
 4797      6D5F706F 
 4797      7765725F 
 4797      646F776E 
 4797      00
 4798              	.LASF57:
 4799 06fc 74696D65 		.ascii	"timeStamp\000"
 4799      5374616D 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccbpWeJ9.s 			page 108


 4799      7000
 4800              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
